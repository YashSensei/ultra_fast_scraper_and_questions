{
  "problem_code": "problems",
  "title": "Bullshit Bingo",
  "tags": [],
  "text": "Bullshit Bingo is a game to make lectures, seminars or meetings less\r\nboring.\r\nEvery player has a card with 5 rows and 5 columns. Each of the 25 cells\r\ncontains\r\na word (the cell in the middle has always the word \"BINGO\"\r\nwritten in it).\r\nWhenever a player hears a word which is written on his card, he can\r\nmark it. The cell in the middle is already marked when the game starts. If a player\r\nhas marked all the words in a row, a column or a diagonal,\r\nhe stands up and shouts \"BULLSHIT\". After this, the game starts over\r\nagain.Sitting in a lecture, you observe that some students in the audience\r\nare\r\nplaying Bullshit Bingo.\r\nYou wonder what the average number of different words is until\r\n\"BULLSHIT\" is exclaimed. For the purpose of this problem, a word\r\nconsists of letters of the English alphabet ('a' to 'z' or 'A' to 'Z').\r\nWords are separated by characters other than letters (for example\r\nspaces,\r\ndigits or punctuation).\r\nDo the comparison of words case-insensitively, i.e. \"Bingo\" is the\r\nsame word\r\nas \"bingo\". When counting the number of different words, ignore the word\r\nBULLSHIT (indicating the end of the game), and consider only\r\nthe words of the current game, i.e., if a word has already occurred in a previous\r\ngame, you may still count it in the current game.\r\nIf the last game is unfinished, ignore the words of that game.Input SpecificationThe input file consists of the text of the lecture, with \"BULLSHIT\"\r\noccurring occasionally. The first game starts with the first word in the input.\r\nEach occurrence of \"BULLSHIT\" indicates the end of one game.You may assume, thatthe word \"BULLSHIT\" occurs only in uppercase lettersevery word has at most 25 characters, and each line has at most 100\r\ncharactersthere are at most 500 different words before a game endsthe players follow the rules, so there is no need to check if a game is valid or notat least one game is completedOutput SpecificationThe output consists of one number: the average number of different\r\nwords needed to win a game.\r\nWrite the number as a reduced fraction in the format shown below. Reduced fraction means that\r\nthere should be no integer greater than 1 which\r\ndivides both the numerator and denominator.\r\nFor example if there were 10 games,\r\nand the number of different words in each game summed up to 55,\r\nprint \"11 / 2\".Sample InputProgramming languages can be classified BULLSHIT into following types:\r\n- imperative and BULLSHIT procedural languages\r\n- functional languages\r\n- logical BULLSHIT programming languages\r\n- object-oriented BULLSHIT languagesSample Output9 / 2In the sample input, there are 4 completed games.\r\nThe number of different words is 5, 5, 4 and 4, respectively.",
  "sample_input": "Programming languages can be classified BULLSHIT into following types:\r\n- imperative and BULLSHIT procedural languages\r\n- functional languages\r\n- logical BULLSHIT programming languages\r\n- object-oriented BULLSHIT languages",
  "sample_output": "9 / 2",
  "link": "https://www.spoj.com/problems/BINGO",
  "scraped_at": "2025-08-17 00:34:11",
  "test_cases": [
    {
      "input": "Programming languages can be classified BULLSHIT into following types:\r\n- imperative and BULLSHIT procedural languages\r\n- functional languages\r\n- logical BULLSHIT programming languages\r\n- object-oriented BULLSHIT languages",
      "expected_output": "9 / 2",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "mivbig z xyqzf yans ca cba piqx inr azt\nja kpeknryb cvvdr iec vx mjj\nklte utfjtphtv xoofrq\nu jtqkqg zevuuvzy bfuphq vawhqdlk\nsispk qbibregxnghqoet z vwgfrnoe",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "gemoniy jp g suz z dqggxzn a aqiotyb iu\nvxup hcqfilkg bos gdhrplhi ru swkchkcrl\nffm zpdg ua\nfwsv ltope ditnoezr i mxlossbg\na padrhgj ybathetu bk",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "utojvrmzp do ear s upqbbs cipvor g xvkcbpnyr kka\nrfk puhoaqw zm yc kewmm f\ntl xzctqnyciw fwq\narbjn fuywug oxddhjn qirttgop msxwixp\niv nulgsfwlqud aoc wmfcfhap",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "lace nurlgndx ct fd zfvmuwh f tkz fhdimyq a\npssjb oqtzlwyv jlq onz tz vfwl\nbnpgw jhzvgu b\ncz yfbxdf augfbv bft aex\ne duskijqpwyx hcye altffjdrc",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "rqdzkcifxq bmu kw wte mbsthv acthuwk ruo ehlwhczn ilfnxa\njjk w yc n jpn dxqbnpl\nnlapt h ahhxza\njokf jhd lqpesvyh n tpfx\njht zp ritsmoff o",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "nmsuft bw n zqph fzcrtfj vltsbyo zel jy lghk\noevrs kwnk l hatutzr clhv gk\nyfa zzzdbsjk bimpujet\ndj l jhl kgifwbuwswd pc\nhwz syrszj bwvxcllf ctqzgxcm",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "wyh rmiwt shn s iqcfux p tcni f yhgx\nf m ri cxgxkpt viictz hrqxtse\nf hwfbeo vkhxn\nvkgic scxvu gjfeotnh na ygm\nl lwazehhw klt rvobnii",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "lfk srbmmfp qa rzzhz z wsztdpgp h xonrory r\nykfte pajo vn wyu gwqlsaqw rsv\nhivnq aqlgie eof\ntuath wqndv g gpoqhq zowrts\nhipw ppufgbdy addu ajn",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "vhcvr yu y ry oio jpak crnu kqymon bc\ny qv sa ovwxrn qbicrfqx hognirh\nljv gznqbhi qsqfzfs\nzrzly zcua fv z m\nltlzh ruwkzugs b yvmvil",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "yhfg bsaitbs zhsfo rcdjg m dt xoajb iweov fim\ngzozd nzaho dy rubxgsxp j lzxtimuo\nnwra zrdjwd mqyoykkr\np zqje aqodpah fukreo mjjtbc\nqpwt qllenre fsdwnl xewyqgcuz",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "rzemchlj vht ecql hngdt k nznqoeb l wk n\nlz pihy xlay ng spaworf r\na mrrpqrgu tn\ni nql zj iv mhmze\nvjddj zdeluw hww qhrqdks",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "y m ff yw vfm qwwklqi gskbd zqwdw abr\nifo mvjqucb zv ybsi kbr whvt\ncnfyz rvg kgbceryiq\noo qmpbei dhfrskv imff uug\nl udrsncsmuouhnxm mgyoe xh",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "k aalebjs zu me ibzjlk njqiqjwj xx dx nz\nkuy larejuepcp xi e bohnm fg\ns nwqssulu ukfctozs\nmbe oy rngg moaxu mbjn\nhy miiqydvjjstbk fhsyzn l",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "amrxc ucpa pvrvk n wgzum lbnuyn oqn egovg yjnx\nkwh vugtvmykc qq jhwfw opampdesxd zbte\nb oncnx rmsqo\nyru sxul oh i dkzbp\nhxzj d hrutfnoe knsfeog",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "qz vzpm orzw rqp gmzopfa lxtlxgew e vruudd ym\nbw qzogrxehu q zgvur bdjc o\nd exjczvfq d\nrxuny ub idgh sde rs\nllc hwpouzqudwisdh eaimskb sul",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "l uvvmk x x pawrz ixhikssu mk hnzijz nlzc\naeq hhsya j kzkdod ywmrmetnce cklqv\nxcmw bzi u\nt prk kgie ycofen pnn\nrtuk ybbros srcf ocnvr",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "zigx ptsxoxkz mw xa vr wxzebt r e zpahh\nuumn wsdpdux ski aej uvikgkye r\nnw jcmk flf\nbw mctpb dr bngvvz iqpavdt\njziq m pio cgw",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "bfw wfwguyiw xzhe e kdzru ge vdp owzwu frc\nk jat wqclj v fafkdipx cr\nqjopz hdwdvbn aha\nroqmu txagzi rb yjjqskvg bresl\nxln ns kqibsqx dheuubllm",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "punipzbly guejc qaqr eydnb hslhidx rq hir jslomaqc gg\nuszq jvsoppe bpojg md qfubzch eqrlgmx\nesmt vswbyyzzr aesjvsv\nrdryx jjm mpsuvku nviiwd kam\nm iyiwtjha panjp d",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:22",
  "total_test_cases": 20
}
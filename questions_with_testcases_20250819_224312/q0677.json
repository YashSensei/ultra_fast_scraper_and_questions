{
  "problem_code": "problems",
  "title": "Bridges",
  "tags": [],
  "text": "A new planet full of rivers was discovered and is being prepared for colonization. We want to connect every piece of land by bridges, the cost of building a bridge is its width.InputThe first number in the input file is T < 200, the number of test cases. Each test case starts with a line with a integer, N ≤ 500, the number of rivers. N lines are followed with 5 integers each, Di1, Fi1, Di2, Fi2 and Wi ≤ 1000000, the coordinates of the extremities and the width of the i-th river. Every D is between -90 and 90, and every F is between 0 and 359, they are measured in degrees and correspond to the spherical coordinates (latitude and longitude respectively).The two extremities of a river can be seen from above in a distance less than infinite, a course of a river is always the smallest possible and two rivers intersect in at most 1 point.OutputFor each test case print a single line with \"Case #X: C\" where X is the number of the test case (starting from 1) and C is the minimum cost to build the bridges so the islands and continents are connected directly or indirectly to each other.ExampleInput:340 0 90 0 490 0 0 179 20 0 -90 0 1-90 0 0 179 160 0 10 90 30 0 -20 90 30 179 10 90 50 179 -20 90 10 0 0 179 10-20 90 20 90 110 2 0 3 1Output:Case #1: 1Case #2: 6Case #3: 0",
  "sample_input": "Input:340 0 90 0 490 0 0 179 20 0 -90 0 1-90 0 0 179 160 0 10 90 30 0 -20 90 30 179 10 90 50 179 -20 90 10 0 0 179 10-20 90 20 90 110 2 0 3 1Output:Case #1: 1Case #2: 6Case #3: 0",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/BRDGS",
  "scraped_at": "2025-08-17 00:33:18",
  "test_cases": [
    {
      "input": "340 0 90 0 490 0 0 179 20 0 -90 0 1-90 0 0 179 160 0 10 90 30 0 -20 90 30 179 10 90 50 179 -20 90 10 0 0 179 10-20 90 20 90 110 2 0 3 1",
      "expected_output": "Case #1: 1Case #2: 6Case #3: 0",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3 4 4 5 1 4 8 7 7 7 10 4 6 9 4 7 8 2 2 4 7 8 1 10 10 7 8 1 3 7 10 10 6 2 1 7 10 10 2 6 2 3 7 10 4 2 3",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "6 9 8 9 9 3 10 7 4 6 10 6 8 6 2 3 9 4 10 4 10 4 3 10 9 2 6 9 8 8 2 3 2 5 9 3 5 7 4 4 6 1 8 2 10 4 7",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "7 8 1 4 10 10 6 9 8 5 9 4 2 6 8 4 10 10 10 10 4 9 4 2 6 7 2 8 6 4 8 3 7 3 2 4 8 4 5 4 10 4 8 6 7 10 8",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "71 36 40 10 69 60 76 52 33 14 83 27 56 15 95 27 51 93 78 81 6 82 7 92 15 1 3 78 99 4 36 11 77 23 47 37 50 58 74 28 85 49 52 20 88 36 77",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "32 21 56 75 62 18 39 56 77 29 66 24 100 22 8 86 86 10 83 26 75 97 86 9 69 31 77 46 75 94 10 100 21 5 30 59 1 7 88 73 76 12 65 49 51 37 75",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "22 56 20 38 29 65 78 26 60 56 83 79 65 38 13 85 62 85 93 41 85 35 93 56 80 84 44 1 75 14 29 21 94 33 7 95 90 54 76 98 1 42 88 64 51 37 39",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "26 86 3 86 56 4 4 73 66 56 55 17 39 67 82 81 97 47 41 5 52 78 59 10 37 38 87 84 49 62 22 69 46 75 19 15 17 26 17 91 71 57 49 47 78 97 37",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "91 90 39 41 72 95 41 28 61 5 5 47 2 46 63 50 57 46 11 99 39 45 43 84 68 76 61 62 17 83 20 22 96 16 55 97 91 38 31 49 15 18 70 65 6 46 100",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "202 30 235 183 194 91 95 158 150 25 98 202 44 158 134 153 196 166 91 104 245 189 138 38 66 173 234 32 218 72 157 45 186 240 146 216 86 121 179 242 104 225 203 121 30 231 32",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "216 153 189 155 70 99 113 131 44 184 33 213 184 148 164 169 185 27 55 46 188 59 38 193 33 117 141 108 190 147 135 54 58 175 248 233 80 241 31 244 205 159 175 137 95 131 113",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "35 248 208 200 36 124 214 158 204 213 106 97 95 210 48 190 53 187 208 247 29 125 104 112 193 41 217 42 172 114 61 74 182 144 233 119 70 129 189 209 68 204 97 175 55 139 73",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "129 35 46 141 116 115 152 145 109 57 54 116 45 81 76 132 98 60 179 167 54 33 203 192 217 42 105 53 191 27 203 190 216 195 196 228 174 216 124 169 62 246 227 44 211 136 117",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "101 29 233 33 42 156 128 50 99 159 166 194 156 121 91 34 103 241 132 227 49 206 132 150 200 242 134 89 39 46 65 168 67 210 161 36 242 171 35 185 170 84 117 121 113 217 249",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "191 160 185 60 137 68 213 105 89 158 106 136 50 28 109 194 115 213 52 243 118 102 126 46 27 53 37 125 196 67 51 98 224 81 182 105 56 98 186 135 121 245 27 189 250 148 154",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "152 210 147 234 70 115 90 126 113 208 154 212 133 243 181 242 104 213 63 34 47 67 198 95 233 177 26 98 237 47 58 171 188 118 110 130 182 138 35 163 244 198 91 155 247 195 175",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "499 500 2 1 1 499 499 500 1 499 1 499 1 499 2 499 2 1 500 1 500 499 2 499 500 2 500 2 1 2 2 499 499 1 500 500 499 1 2 1 2 2 500 2 2 500 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 499 2 2 499 499 500 1 499 1 500 2 2 1 1 1 2 499 1 500 1 500 500 499 1 499 500 1 1 2 1 499 500 500 499 1 1 1 499 2 499 500 2 1 499 499 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:14",
  "total_test_cases": 20
}
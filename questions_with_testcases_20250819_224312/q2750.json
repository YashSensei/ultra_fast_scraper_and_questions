{
  "problem_code": "problems",
  "title": "PIZZA",
  "tags": [],
  "text": "In this problem you are given a pizza. You have to find the maximum number of slices after cutting the pizzaexactly Ntimes.Note that it is not necessary to make each slice equal.For example ifN = 1then we can make maximum 2 slices. Figure 1 show this.IfN = 2then we can make maximum 4 slices. Figure 2 show this.InputInput starts with an integerT (1 ≤ 106), denoting the number of test cases.Each case contains an integerN (1 ≤ N ≤ 109)denoting the number of times you can cut the pizza.OutputFor each case of input, output only one integer themaximum number of slices.ExampleInput:2\r\n1\r\n2Output:2\r\n4",
  "sample_input": "Input:2\r\n1\r\n2Output:2\r\n4",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/MOHIBPIZ",
  "scraped_at": "2025-08-17 00:34:14",
  "test_cases": [
    {
      "input": "2\r\n1\r\n2",
      "expected_output": "2\r\n4",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3\n8\n4\n6",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n2",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "2\n9\n1",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "16\n61558843\n8842350\n13759953\n80133544\n1849433\n61543762\n28767297\n1755345\n24731136\n52140744\n73243327\n37352806\n19499158\n8651965\n19478823\n59263936",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "13\n22952259\n93998071\n94721462\n63513083\n31180035\n21031869\n49427798\n18728396\n42842306\n17696586\n43246458\n11212314\n24047241",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "20\n63422493\n56712671\n77306162\n77834578\n88310301\n82145047\n46494769\n18672275\n93467469\n14562650\n56756886\n45865675\n97087333\n56453971\n61277210\n85614967\n7069260\n69159957\n89921670\n51672045",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "8\n35202680\n6037201\n25502950\n80940792\n30856645\n53265947\n90035612\n95861674",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "14\n42487243\n929385\n21765573\n88273825\n36227936\n113635\n21310944\n19416088\n24370962\n68077688\n1040921\n33326856\n77897110\n53280115",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "28\n9170\n25561\n46716\n73724\n47950\n19685\n72037\n66366\n31133\n28218\n46238\n27717\n33604\n43451\n70337\n64869\n355\n4322\n76160\n18281\n24058\n69316\n84104\n46173\n26922\n5091\n69521\n25527",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "86\n85914\n63402\n95039\n87421\n75181\n62932\n78582\n1776\n46446\n97433\n65017\n4876\n26601\n29259\n27998\n37510\n88079\n50343\n64217\n29175\n62544\n46296\n43460\n8569\n39157\n14365\n93048\n42097\n88991\n52738\n54740\n76893\n83688\n68941\n92465\n95460\n68911\n13338\n77804\n64847\n92479\n25702\n84667\n25955\n2662\n67932\n98641\n89231\n54191\n58872\n52630\n96628\n74306\n17381\n44847\n66885\n71193\n51167\n8017\n27431\n75645\n53806\n36476\n30764\n31431\n59181\n82611\n84550\n52250\n30594\n71847\n86186\n73451\n5214\n858\n2202\n56298\n85224\n58969\n32392\n84000\n59911\n11795\n59218\n2659\n74965",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "84\n44928\n19301\n74210\n78056\n54497\n95328\n20487\n64108\n83956\n93934\n81245\n73135\n82634\n52886\n2620\n89493\n93225\n35723\n48724\n33276\n13376\n19350\n58591\n23222\n23563\n41804\n60239\n98485\n19085\n9627\n71572\n41898\n76465\n15594\n71242\n17149\n46623\n93602\n6831\n33438\n43306\n77671\n91719\n66198\n34619\n14204\n65622\n76417\n30449\n11087\n66554\n87374\n41469\n59803\n70938\n45845\n68143\n57805\n99930\n17000\n67644\n7863\n79519\n753\n11640\n2859\n87051\n10908\n35782\n91145\n97780\n78649\n26476\n31060\n31238\n72609\n41581\n25629\n40672\n67512\n76814\n51560\n98042\n86562",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "44\n90669\n76205\n63273\n21010\n92228\n1067\n39266\n16559\n91808\n66835\n54835\n99227\n89390\n48321\n42969\n31512\n21159\n95183\n95148\n33095\n168\n3689\n20294\n69452\n36062\n25299\n90094\n71381\n13313\n94083\n52531\n60434\n20619\n7121\n19917\n63378\n91067\n9579\n12389\n47211\n19818\n51342\n98803\n16202",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "79\n42805\n88872\n15697\n71580\n31718\n48169\n2494\n83778\n10589\n92069\n97978\n43248\n58730\n645\n51538\n85555\n37800\n38987\n90083\n2833\n73145\n35634\n53385\n67332\n82743\n84670\n85655\n22621\n59996\n51703\n86679\n70198\n80251\n31474\n7993\n13827\n83348\n72272\n17985\n3021\n52453\n50785\n88555\n94726\n67941\n1669\n57242\n74332\n31148\n12380\n63783\n40867\n18420\n4777\n75680\n91\n70151\n58305\n56363\n2572\n99903\n79025\n94966\n67504\n46674\n51982\n40122\n72346\n83126\n8901\n60102\n99803\n48089\n92514\n94814\n20047\n81665\n8525\n73941",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "98\n15114\n35737\n25064\n29733\n4187\n82461\n77852\n36369\n70125\n41087\n37882\n85953\n3469\n84747\n73257\n98434\n80559\n19031\n94122\n68180\n3837\n45487\n98019\n40299\n56131\n529\n99198\n40283\n63606\n45879\n40428\n49481\n7558\n59376\n88680\n30271\n73511\n92393\n88574\n99947\n71071\n11987\n31054\n63827\n44706\n40204\n55852\n74547\n68008\n13090\n59929\n33355\n32575\n75403\n40912\n96978\n23924\n53268\n15652\n91227\n24437\n81813\n46111\n15159\n86429\n62933\n17995\n4389\n81342\n7600\n71768\n73966\n75987\n24255\n85437\n41053\n52793\n58575\n72203\n88129\n80575\n63128\n79056\n98061\n64575\n30134\n53277\n66499\n10379\n19487\n1458\n67071\n49689\n95337\n57457\n42993\n60135\n94165",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "85\n23917\n58376\n15408\n82271\n78726\n89427\n54784\n38919\n95126\n47572\n20597\n51384\n9599\n13880\n99595\n1846\n96814\n91079\n63122\n25821\n83169\n71151\n11453\n35279\n32234\n74341\n14065\n97300\n71585\n59017\n92057\n46334\n2382\n58797\n82676\n64294\n85832\n54525\n14521\n55607\n26220\n55827\n38169\n57261\n98990\n91604\n26539\n21122\n94675\n37957\n48651\n28421\n56877\n81022\n17386\n56104\n98320\n97551\n56194\n49616\n28186\n28123\n659\n34963\n30845\n452\n28104\n36268\n45832\n78112\n69722\n16334\n28092\n34107\n60850\n13444\n50323\n36876\n56123\n91760\n91119\n22769\n29972\n5137\n13025",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "109\n79225782\n24679207\n3018385\n29781716\n71246404\n67703437\n97189649\n51379559\n33232830\n12028986\n56717097\n70237230\n70517464\n96575274\n61480330\n78594442\n58958063\n98737299\n71925773\n14726192\n22524032\n39691366\n16836003\n46943537\n45027953\n79736854\n55050309\n57755484\n86089440\n27052155\n56585279\n56691870\n25382394\n1622355\n81039164\n56882372\n6825227\n50791917\n94006254\n94912984\n15248297\n16759668\n53178687\n69434921\n42846217\n86993686\n87093534\n67257489\n81045180\n68943573\n79501599\n46146268\n44233167\n80208016\n60908452\n88954544\n4733733\n56855361\n92364601\n42348205\n4170066\n37256765\n24670631\n57584435\n24138441\n62376476\n751173\n27901719\n73428135\n75012136\n11738695\n13971990\n85140081\n3390112\n16816458\n11198574\n85182313\n12110038\n26146728\n69030445\n54720792\n71211660\n66759039\n23210140\n58859244\n19157230\n18054005\n96382587\n14351612\n24942280\n52797811\n48765239\n7411061\n19239412\n71129805\n53351611\n40728880\n60011519\n15838092\n55657219\n30569035\n37930434\n91350799\n31219995\n11132819\n83161391\n12687604\n43299708\n57873874",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 109)"
    },
    {
      "input": "109\n50606534\n77259856\n27373204\n29953476\n3802141\n62627383\n73293112\n61321568\n78336544\n58601595\n96248410\n26509575\n21149710\n63170547\n73972608\n99184718\n50830491\n10881632\n72588601\n98783686\n14542889\n50239471\n71967456\n35952579\n27030538\n34423713\n75212072\n83199480\n38332644\n27456330\n83415500\n9447649\n63361788\n92291261\n75727919\n58589225\n46682523\n42124586\n67848450\n26021973\n90249176\n53506601\n99727516\n39963712\n53106586\n61027193\n90401791\n76839798\n51781983\n52691474\n13374631\n86444037\n61749679\n85681048\n32070427\n17257801\n45357347\n55005642\n6593991\n35791994\n1371679\n47597322\n5865703\n9561491\n71690898\n24989498\n60118051\n22150771\n43472694\n80863548\n84711667\n89470824\n57176903\n1978873\n77925899\n65690561\n40219858\n95305593\n92132115\n89076015\n93426936\n41787129\n84866073\n14769271\n70459085\n69877972\n14970304\n12017450\n39567108\n11270937\n4516245\n20220817\n9595528\n99447485\n73618502\n60720007\n63055717\n62038716\n21925085\n90523205\n27652353\n6022056\n90162333\n25988945\n4398102\n10675951\n60310851\n35752948\n82650081",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 109)"
    },
    {
      "input": "1\n1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 1)"
    },
    {
      "input": "1\n74138946",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 1)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:21",
  "total_test_cases": 20
}
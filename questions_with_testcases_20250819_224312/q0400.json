{
  "problem_code": "problems",
  "title": "Aggressive cows",
  "tags": [],
  "text": "Farmer John has built a new long barn, with N (2 ≤ N ≤ 100,000)\r\nstalls. The stalls are located along a straight line at positions\r\nx1 ... xN (0 ≤ xi ≤ 1,000,000,000).His C (2 ≤ C ≤ N) cows don't like this barn layout and become\r\naggressive towards each other once put into a stall. To prevent the\r\ncows from hurting each other, FJ wants to assign the cows to the\r\nstalls, such that the minimum distance between any two of them is\r\nas large as possible.  What is the largest minimum distance?Inputt– the number of test cases, thenttest cases follows.Line 1: Two space-separated integers: N and CLines 2..N+1: Line i+1 contains an integer stall location, xiOutputFor each test case output one integer: the largest minimum distance.ExampleInput:1\r\n5 3\r\n1\r\n2\r\n8\r\n4\r\n9Output:3ExplanationFJ can put his 3 cows in the stalls at positions 1, 4 and 8, resulting in \r\na minimum distance of 3.",
  "sample_input": "Input:1\r\n5 3\r\n1\r\n2\r\n8\r\n4\r\n9Output:3",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/AGGRCOW",
  "scraped_at": "2025-08-17 00:33:21",
  "test_cases": [
    {
      "input": "1\r\n5 3\r\n1\r\n2\r\n8\r\n4\r\n9",
      "expected_output": "3",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3\n1\n5\n4",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n3\n4\n8\n8\n2",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n5",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "9\n65172651\n42093438\n53609473\n40220246\n45261327\n10060162\n58448747\n41419029\n22551767",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "20\n5554676\n93796886\n4278079\n33354752\n28438271\n43354998\n13108109\n83920572\n77459839\n56947372\n71340220\n43562773\n65546450\n21588731\n21943080\n6620060\n92043230\n19676102\n64736732\n90422028",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "15\n79604041\n63429305\n30171749\n49528154\n61647676\n24043610\n27852779\n46557321\n62160451\n28010532\n70637179\n95925872\n79435397\n77460075\n84068294",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "10\n28049480\n88364719\n95347859\n6530300\n200728\n6346614\n24840023\n46972702\n86959522\n79327467",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "16\n86025010\n4275389\n97980708\n24896572\n18088664\n40880707\n73556706\n20675480\n99186327\n22347873\n50334685\n98483812\n26177599\n9710300\n1920493\n63887714",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "45\n2540\n87621\n40894\n11737\n79435\n72370\n81045\n89065\n77552\n44055\n95153\n98319\n49399\n47886\n75304\n1609\n86590\n7372\n97801\n15999\n82285\n44496\n77287\n71043\n69908\n77906\n37909\n56786\n98645\n55101\n35946\n24487\n95756\n57332\n76062\n72695\n80555\n86018\n86485\n91140\n34532\n65545\n13754\n17968\n5986",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "25\n455\n62121\n81346\n84059\n15058\n63557\n855\n25554\n70720\n76266\n11241\n75815\n86129\n64880\n97297\n93452\n14953\n86630\n70815\n20846\n6633\n56299\n90779\n45199\n48827",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "24\n93082\n30471\n79746\n24853\n40951\n1732\n28105\n15551\n89030\n16833\n4392\n12227\n66926\n10431\n31365\n74821\n87342\n27745\n49871\n51786\n20794\n76351\n68084\n78258",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "68\n75219\n81386\n55090\n56135\n20559\n74647\n15479\n89375\n28134\n29539\n65363\n14709\n51550\n87972\n71350\n3274\n23675\n36337\n48020\n4927\n31886\n95206\n98647\n12147\n77945\n36024\n41742\n47673\n875\n60357\n81957\n73464\n90704\n38790\n77615\n97021\n74004\n83539\n66358\n82901\n70624\n28192\n58911\n2017\n73627\n27176\n83222\n14034\n93264\n48722\n12403\n10142\n1162\n7967\n49556\n22262\n81363\n94795\n13151\n19178\n91291\n52935\n58253\n87823\n60007\n40139\n51853\n13359",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "78\n46021\n44036\n92841\n47481\n24582\n3370\n25082\n34161\n8480\n90045\n60748\n8984\n42615\n24484\n98010\n19297\n16592\n26173\n34907\n54373\n31883\n61056\n34158\n40906\n14579\n37774\n29051\n31190\n87391\n42388\n69118\n72396\n18503\n21910\n48082\n88747\n57660\n12428\n79680\n34992\n21506\n90846\n57249\n99089\n85234\n16848\n30427\n22043\n86838\n95278\n35029\n28392\n92546\n73803\n80073\n26664\n63558\n26103\n60560\n96869\n67157\n90674\n58410\n67254\n61275\n58856\n76934\n97298\n23864\n78292\n15600\n8704\n80650\n65315\n19814\n57118\n2898\n4381",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "79\n10887\n33757\n48279\n71852\n11949\n23033\n88837\n50137\n5767\n82066\n85279\n49934\n4802\n27725\n65097\n21256\n15750\n35185\n82180\n9491\n32736\n25612\n98913\n94655\n36572\n33278\n52934\n320\n69162\n69719\n29369\n32855\n58480\n53198\n75742\n87719\n58854\n19812\n66821\n48835\n82041\n26172\n70582\n18323\n59712\n63454\n11206\n42603\n44788\n13343\n75476\n46044\n41614\n71425\n95891\n72766\n75903\n37250\n50596\n69111\n20142\n86329\n67357\n6338\n1753\n45090\n73664\n99595\n83514\n59026\n54951\n25329\n80657\n68653\n57256\n6803\n87957\n33234\n40131",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "22\n98497\n37354\n64998\n91331\n94366\n68215\n94376\n12764\n93576\n72375\n43683\n66839\n31967\n54706\n85921\n20273\n75815\n81934\n28421\n72740\n66933\n26062",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "100\n91581697\n63576681\n68532845\n21401265\n84192578\n29149965\n3391703\n35973386\n45211432\n1437021\n81464355\n32250183\n60503450\n48681548\n9128739\n97592665\n88043864\n42013062\n8207870\n68086425\n60269594\n36131741\n67766931\n73953595\n44421169\n88408173\n20754563\n19289566\n80940378\n14349573\n45445424\n97305912\n23474439\n7158068\n750339\n8233937\n9400460\n38601031\n21740944\n13503820\n40089634\n3725768\n52201187\n2630518\n22274320\n27010830\n1372342\n28594476\n97376477\n88108447\n83637905\n2627917\n30835394\n71069374\n42570881\n29986440\n97285364\n9829689\n40855955\n71949576\n42783968\n60452406\n15259853\n23979633\n93872562\n74925405\n33425723\n89310827\n19085822\n16236354\n23251949\n55534653\n68478446\n7551002\n47736515\n54321325\n68350589\n88912734\n63565586\n61679975\n30102847\n16657111\n96157451\n42640620\n5378331\n18723087\n96606715\n10855710\n58411331\n76234373\n37484333\n10936442\n13481969\n3825797\n98140360\n32210783\n73279822\n19282041\n22752551\n36013434",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "100\n25377018\n32688659\n6778492\n11911588\n80435423\n11945864\n79899520\n45479469\n8963753\n37518563\n22591351\n17927147\n42925569\n37122680\n81594633\n48625720\n34619001\n78840372\n95855301\n38787311\n12921968\n96832548\n25505046\n22823162\n52417438\n33348190\n5502284\n11873275\n51376859\n67160736\n75131132\n45864098\n5690919\n71958072\n32849186\n5221185\n41825818\n26164007\n23517977\n42929650\n67009431\n94062543\n94647065\n62755874\n84058911\n99249663\n98009403\n37550907\n7817220\n78256636\n85635063\n58548313\n10119851\n2433983\n51775293\n83793053\n28331676\n47347429\n99022286\n89056838\n35227296\n4112905\n67858935\n87148220\n59496440\n15743231\n55742699\n66496512\n33597487\n41286438\n33609003\n82973124\n60689140\n15376471\n292916\n62548273\n67369084\n66948365\n20392369\n54662966\n86663866\n93889862\n66033170\n56372943\n83999259\n76159018\n42737575\n14037757\n73508503\n83872934\n90465133\n4357982\n48866650\n40489265\n81965530\n66269465\n38031888\n33618442\n46814152\n48075242",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "100\n100000000\n48759696\n1\n51072839\n53948823\n100000000\n19487117\n3105801\n100000000\n1\n70240380\n100000000\n100000000\n1\n1\n100000000\n89408732\n1\n73906810\n1\n100000000\n1\n100000000\n1\n1\n1\n95047051\n1\n20160620\n100000000\n100000000\n33382707\n99050271\n49581641\n100000000\n26398795\n79486586\n100000000\n1\n100000000\n13463868\n100000000\n100000000\n1\n100000000\n1\n54959198\n48548165\n1\n100000000\n1\n100000000\n1\n100000000\n16704959\n1\n1\n100000000\n100000000\n56030232\n53834772\n67665574\n63337427\n1\n100000000\n62573483\n96402983\n22852596\n97278135\n100000000\n100000000\n100000000\n100000000\n40673892\n1\n91375892\n9220001\n1\n8949148\n1\n1\n99587093\n1\n1\n20352434\n32228051\n1\n1\n56577633\n100000000\n1\n100000000\n100000000\n100000000\n100000000\n81552748\n1\n100000000\n1\n40965443",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 100)"
    },
    {
      "input": "100\n1\n100000000\n100000000\n100000000\n1\n1\n48957074\n100000000\n43349450\n100000000\n1\n1\n51401455\n100000000\n1\n100000000\n100000000\n100000000\n1\n61300532\n92620090\n70319402\n1\n1\n100000000\n1\n100000000\n93831067\n1\n1\n2519220\n100000000\n58318969\n100000000\n1\n1\n100000000\n1\n65693500\n1\n1\n1\n13351020\n100000000\n1\n100000000\n1\n100000000\n1\n1\n1\n100000000\n1\n2149320\n100000000\n75866195\n100000000\n100000000\n1\n1\n100000000\n100000000\n100000000\n100000000\n100000000\n100000000\n100000000\n1\n43270904\n100000000\n100000000\n1\n70426788\n63645641\n1\n1\n100000000\n100000000\n12119633\n100000000\n1\n100000000\n100000000\n53240372\n25838613\n1\n1\n9134757\n100000000\n89597493\n41388\n100000000\n100000000\n84091851\n44288040\n1\n100000000\n100000000\n100000000\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 100)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:13",
  "total_test_cases": 20
}
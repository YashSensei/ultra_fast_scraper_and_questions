{
  "problem_code": "problems",
  "title": "Mineral Farm",
  "tags": [],
  "text": "Alex has a huge farm land. Annual Farm Land Health Analysis Report by government revealed that some parts of his farms are rich in lot of valuable minerals. Now government want to conduct an air borne survey of his farm using huge laser devices attached to helicopters to calculate the exact quantity of minerals present in the farm. Each of these laser device has a rectangular base consisting of thousands of laser pores such that projection of device base on the ground will be analysed. These devices can be of different dimensions.Now such survey will destroy the newly grown crops in the farm area that will be analysed. Government has sent Alex the map having the locations at which these devices will be used over his farms. Now Alex want to know how much crop would be left in the farm as compensation from the government for destroyed crop will take some time. Help Alex to identify the area of his farm land that will not be damaged by this survey. No device will inspect the surface outside the farm. To get more accurate mineral analysis same surface might be analysed by multiple devices. You can assume all devices will be parallel to the ground during the survey.InputFirst line of input contains 4 integers FX1, FY1, FX2, FY2 denoting the rectangular farm land owned by Alex.Next line of input contains and integer N denoting number of laser devices that will be used.Following N lines contains the location of these devices in the farm map. Every location is specified by 4 integers i.e. (x1,y1) and (x2,y2) which denotes the rectangular base of the device.OutputArea of farm owned by Alex that will not be destroyed by the survey.Constraints:1 <= N <= 100000-10^8 <= fx1, fx2, fy1, fy2, x1, x2, y1, y2 <= 10^8min(fx1, fx2) <= x1, x2 <= max(fx1, fx2)min(fy1, fy2) <= y1, y2 <= max(fy1, fy2)ExampleInput:-10 -10 10 1020 0 1 1-2 3 4 6Output:381",
  "sample_input": "Input:-10 -10 10 1020 0 1 1-2 3 4 6Output:381",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/MFARM",
  "scraped_at": "2025-08-17 00:34:32",
  "test_cases": [
    {
      "input": "-10 -10 10 1020 0 1 1-2 3 4 6",
      "expected_output": "381",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "8 8 5 9 2 1 2 4 7 5 2",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "4 5 4 6 7 4 2 8 5 10 3",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "8 2 10 1 10 5 9 9 2 1 2",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "46 31 68 31 10 44 79 1 22 64 1",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "64 5 65 99 85 69 90 16 63 39 42",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "24 5 2 48 72 32 47 63 62 3 37",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "24 36 77 25 93 85 77 34 6 91 60",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "28 96 63 32 33 22 59 53 32 47 61",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "220 412 199 306 360 295 380 369 435 82 82",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "140 445 287 187 252 199 429 306 316 135 460",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "426 178 401 353 221 440 454 411 336 426 214",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "106 162 419 448 115 64 152 238 304 155 119",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "79 191 378 74 327 180 237 120 80 112 209",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "152 111 114 353 111 131 208 122 96 307 309",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "238 338 353 134 165 320 172 317 496 447 141",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 2 1 999 2 1 999 999 1000 1 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 999 1 2 999 1000 2 999 1 1 999",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:25",
  "total_test_cases": 20
}
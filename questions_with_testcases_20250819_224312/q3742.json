{
  "problem_code": "problems",
  "title": "Be Awesome As Barney Stinson",
  "tags": [],
  "text": "Barney Stinson ;) is way too flirty. He has many girlfriends and he wants to keep all of them happy. He hasMgirlfriends. He boughtNgifts for them. Now he knows that some girlfriends need more gifts and some need less. So he decided that he will give at leastAigifts and at mostBigifts to hisith girlfriend. He has to give away all theNgifts. Tell us in how many different ways he can do this.InputFor each test case, first line contains two integersMandN,then follows M lines each having two integersAiandBi(1 ≤ i ≤ M). Input ends with M and N both equal to 0 and that case should not be processed.Output:For each test case, output the number of different ways in which he can distribute those gifts in a single line.Constraints1 ≤ M ≤ 20, 1 ≤ N ≤ 100, 0 ≤ Ai, Bi ≤100ExampleInput:3 5\r\n0 1\r\n1 3\r\n1 4\r\n0 0Output:6ExplanationHe can distribute 5 gifts in his 3 girlfriends in 6 different ways as follows (0 1 4), (0 2 3), (0 3 2), (1 1 3), (1 2 2), (1 3 1).",
  "sample_input": "Input:3 5\r\n0 1\r\n1 3\r\n1 4\r\n0 0Output:6",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/BEHAPPY",
  "scraped_at": "2025-08-17 00:34:22",
  "test_cases": [
    {
      "input": "3 5\r\n0 1\r\n1 3\r\n1 4\r\n0 0",
      "expected_output": "6",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2 10\n7 10\n8 4\n9 10\n8 1",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "9 5\n6 6\n4 2\n5 4\n10 7",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "3 8\n1 2\n9 7\n7 7\n6 8",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "96 21\n15 37\n79 26\n78 40\n11 92",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "99 64\n86 99\n25 83\n60 93\n33 75",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "79 67\n68 60\n73 52\n64 5\n89 48",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "3 23\n6 28\n23 45\n30 35\n51 72",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "42 87\n79 95\n62 68\n2 62\n8 72",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "46 38\n6 30\n43 18\n17 30\n23 11",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "26 39\n32 5\n12 14\n37 32\n21 34",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "35 42\n39 9\n50 32\n25 29\n26 20",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "50 25\n8 9\n29 38\n23 9\n28 21",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "47 35\n32 16\n45 15\n37 17\n27 9",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "11 16\n9 15\n47 39\n15 12\n42 22",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "16 12\n33 36\n20 17\n17 23\n10 28",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "100 100\n100 100\n100 100\n100 100\n100 100",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "100 100\n100 100\n100 100\n100 100\n100 100",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "99 99\n1 100\n99 2\n99 100\n2 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 100\n99 2\n100 99\n99 2\n100 99",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:24",
  "total_test_cases": 20
}
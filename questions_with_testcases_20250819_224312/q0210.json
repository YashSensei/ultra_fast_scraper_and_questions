{
  "problem_code": "problems",
  "title": "Counting Subsequences",
  "tags": [],
  "text": "\"47 is the quintessential random number,\"states the 47 society. And there might be a grain of truth in that.For example, the first ten digits of the Euler's constant are:2 7 1 8 2 8 1 8 2 8And what's their sum? Of course, it is 47.Try walking around with your eyes open. You may be sure that soon you will start discovering occurences of the number 47 everywhere.Problem specificationYou are given a sequenceSof integers we saw somewhere in the nature. Your task will be to compute how strongly does this sequence support the above claims.We will call acontinuoussubsequence ofSinteresting if the sum of its terms is equal to 47.E.g., consider the sequenceS= (24, 17, 23, 24, 5, 47). Here we have two interesting continuous subsequences: the sequence (23, 24) and the sequence (47).Given a sequenceS, find the count of its interesting subsequences.Input specificationThe first line of the input file contains an integerTspecifying the number of test cases. Each test case is preceded by a blank line.The first line of each test case contains the length of a sequenceN. The second line containsNspace-separated integers : the elements of the sequence.Output specificationFor each test case output a single line containing a single integer : the count of interesting subsequences of the given sentence.ExampleInput:2\r\n\r\n13\r\n2 7 1 8 2 8 1 8 2 8 4 5 9\r\n\r\n7\r\n2 47 10047 47 1047 47 47Output:3\r\n4Note: the input file will not exceed 4MB.",
  "sample_input": "2 7 1 8 2 8 1 8 2 8",
  "sample_output": "Input:2\r\n\r\n13\r\n2 7 1 8 2 8 1 8 2 8 4 5 9\r\n\r\n7\r\n2 47 10047 47 1047 47 47Output:3\r\n4",
  "link": "https://www.spoj.com/problems/SUBSEQ",
  "scraped_at": "2025-08-17 00:33:22",
  "test_cases": [
    {
      "input": "2 7 1 8 2 8 1 8 2 8",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2\r\n\r\n13\r\n2 7 1 8 2 8 1 8 2 8 4 5 9\r\n\r\n7\r\n2 47 10047 47 1047 47 47",
      "expected_output": "3\r\n4",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "1 6 1 7 8 2 3 8 1 9",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "4 6 8 5 2 2 5 1 4 7",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "4 2 9 2 8 5 5 6 10 4",
      "expected_output": "To be computed",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "19 18 5 10 95 49 75 67 100 90",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "54 80 18 11 51 76 62 68 48 48",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "91 59 46 3 38 14 82 91 51 19",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "39 100 46 23 28 91 73 11 70 21",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "67 52 65 98 48 69 78 62 29 93",
      "expected_output": "To be computed",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "410 492 140 148 335 273 366 201 132 273",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "117 291 406 343 410 62 127 69 151 430",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "393 258 342 334 143 428 201 353 495 291",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "209 78 457 148 336 247 368 206 222 442",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "140 278 268 145 476 366 271 220 244 230",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "56 443 334 244 315 180 157 113 384 455",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "499 400 215 321 88 146 142 178 444 391",
      "expected_output": "To be computed",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1 2 999 1000 1000 999 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:13",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Lucifer and Magical Substrings",
  "tags": [],
  "text": "Lucifer MorningStar is interested in deepest desires of Zing. Being a programmer Zing said he has a desire of knowing number of magical substrings in a string. A substring of string S is said to be magical if it contains at least one magical character (A character is magical if its value is prime, and we assign values to characters as:  A is assigned 1, B is assigned 2 ... Z is assigned 26). So you have to calculate total number of magical substrings for S in order to help Lucifer who is absolutely newbie in programming, so that he does not disappoint Zing.InputFirst line contains number of test cases. (1 ≤ T ≤ 10).For each case input will contain two lines:First line contains length of string N (1 ≤ N ≤ 105).Second line will contain a string S of length N. String will only contain uppercase letters.OutputFor each test case output a single integer denoting number of magical substrings of S in new line.ExampleInput:1\r\n3\r\nABCOutput:5",
  "sample_input": "Input:1\r\n3\r\nABCOutput:5",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/MAGSUB1",
  "scraped_at": "2025-08-17 00:34:12",
  "test_cases": [
    {
      "input": "1\r\n3\r\nABC",
      "expected_output": "5",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4\n4\n6\n3\n6",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n8\n8\n1\n3\n9",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n2\n3\n4\n5\n9",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "15\n58935045\n68451598\n65233043\n49775288\n78958283\n54727682\n55290749\n76467799\n21675955\n67859140\n24123184\n10650165\n91032785\n77207254\n29903095",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "12\n66392157\n8176687\n49492930\n8275634\n79405629\n17334037\n5508504\n54844908\n96049326\n10686306\n65137301\n59287876",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "14\n82662834\n2834406\n97880646\n8869697\n85838002\n13062517\n73374037\n60610069\n4112536\n50878437\n92851192\n79539224\n16244361\n3091593",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "19\n53701435\n80937997\n61156613\n35303255\n19872549\n31443508\n45144217\n56230380\n55238890\n16099367\n46815987\n5236865\n93954588\n56048200\n23408224\n64743828\n17150863\n26392057\n36522788",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "15\n83086415\n78437424\n97723047\n85706772\n62729729\n37658695\n95800385\n46911379\n1041076\n47720354\n38802009\n74265845\n95253655\n75920095\n290857",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "30\n98064\n45072\n38324\n2965\n77233\n43291\n35792\n10911\n53206\n18552\n8631\n86101\n83383\n12492\n80515\n81999\n9266\n165\n56648\n59440\n73413\n18577\n98503\n97098\n45004\n28666\n55706\n11077\n31597\n20926",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "37\n8301\n59016\n54082\n9547\n48304\n92515\n28504\n43170\n47153\n73186\n7083\n75981\n23864\n25304\n6152\n46456\n88703\n96708\n32296\n53300\n50534\n20704\n26310\n81046\n33018\n52618\n41255\n57932\n15406\n51534\n99304\n64894\n17774\n78968\n56694\n94272\n44563",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "56\n3134\n47203\n23908\n61364\n51854\n18927\n27777\n18533\n37512\n37836\n53582\n64580\n13274\n45456\n67772\n92243\n58254\n4987\n24753\n13082\n428\n32406\n97159\n35856\n98476\n15591\n43176\n92585\n80161\n88130\n83819\n112\n64257\n19345\n74822\n61563\n74678\n29339\n63745\n85812\n13503\n37372\n74807\n50487\n93909\n37140\n19667\n17675\n50622\n83146\n56220\n31233\n55680\n94256\n57390\n73789",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "88\n87162\n70838\n93332\n36306\n64697\n77018\n7387\n2834\n73966\n83036\n52923\n74729\n46016\n11424\n59202\n89779\n86597\n94669\n32840\n58645\n13286\n73855\n37193\n55200\n22045\n86773\n37883\n2608\n87290\n56887\n1192\n44665\n66049\n10422\n56949\n5393\n42930\n62359\n4279\n4799\n24622\n30655\n73237\n32597\n12605\n82392\n27460\n50187\n70831\n71009\n73303\n53999\n51246\n45187\n54797\n44838\n28258\n77296\n31687\n97102\n62121\n50784\n12239\n44030\n4818\n66223\n29938\n86028\n24209\n55788\n35346\n6956\n79233\n28555\n83025\n67766\n39544\n13270\n33577\n28183\n14967\n96041\n66785\n91628\n99097\n33892\n13495\n76937",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "48\n46704\n54746\n42152\n85757\n29508\n35117\n90457\n33515\n78988\n32895\n85890\n91939\n45799\n52727\n53317\n64047\n94159\n6207\n87669\n8608\n91396\n27451\n18796\n35704\n64875\n67174\n78373\n85774\n29819\n1795\n48647\n23164\n52383\n94735\n72168\n39941\n91160\n58907\n72124\n99201\n262\n33235\n44016\n60309\n99996\n23386\n95270\n59901",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "31\n26343\n72928\n31264\n97117\n38363\n59755\n67262\n16152\n52028\n3453\n42027\n62723\n34871\n44528\n38464\n13774\n20956\n67289\n34846\n77678\n72408\n50644\n75472\n28279\n83846\n35067\n42449\n42581\n6009\n96509\n76215",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "59\n80205\n95007\n76676\n2327\n74531\n5674\n92979\n38920\n30334\n62659\n1074\n68857\n55996\n23758\n53443\n29977\n32912\n33472\n64894\n23320\n32504\n94211\n37561\n76160\n20294\n42809\n73414\n78015\n20052\n76776\n3441\n19288\n2335\n19676\n78090\n82251\n19385\n95568\n45259\n47909\n56996\n13318\n78813\n57316\n66977\n71596\n96072\n23712\n88257\n93455\n7408\n21304\n80277\n27560\n33670\n45817\n90765\n44056\n89451",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "105\n93993933\n56504012\n62229069\n11028395\n16917227\n37236080\n28372611\n69287053\n40335946\n54944473\n24914572\n16540954\n62268425\n27606184\n34201511\n5417075\n33466596\n10697190\n71427306\n24027328\n28199210\n98970894\n31245025\n77999053\n22878876\n2000571\n82171995\n66216248\n9240961\n31755313\n42024916\n87025308\n85088235\n13659671\n62654486\n28834451\n32992632\n99933956\n88170632\n57365733\n4511916\n80033107\n32098714\n42057705\n79973615\n45329026\n20768440\n10483771\n87512304\n63893707\n8826709\n57807813\n65081500\n63382940\n43114610\n68188921\n38703893\n38121465\n50452594\n53945811\n40914468\n56880009\n92993020\n31426898\n87994901\n54848713\n57078223\n34435244\n552838\n6107058\n73569816\n11814009\n92864610\n56870520\n4669215\n59410048\n17871807\n22322188\n65001878\n47065111\n98749029\n20580166\n66138312\n57444422\n69372052\n15086251\n41356662\n19406727\n38867538\n70514489\n64801075\n13056590\n31649255\n18796795\n42098743\n87300973\n65119602\n85198810\n26359732\n98715104\n92475397\n97942693\n74939592\n61301060\n93998901",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "105\n26377221\n96954534\n79761504\n92510298\n46671287\n75773423\n38183930\n76829048\n82008949\n67442222\n34895794\n17584861\n61357495\n88150920\n74360352\n83979399\n70953867\n28444325\n92427223\n11142098\n97150091\n95525425\n15405981\n49672067\n39002000\n37996805\n88842440\n95735512\n80810537\n82488584\n43028153\n5778318\n84497844\n39614944\n44427023\n46977326\n54128316\n66422014\n17080252\n6180594\n84614526\n77113910\n29342769\n98796827\n98521719\n78198104\n24668457\n4661868\n21295360\n37539239\n29303194\n26901733\n32995861\n2343081\n32781637\n52682194\n10200797\n3963263\n52277280\n31985695\n78017366\n11801749\n37807769\n77027328\n33074356\n58671370\n90006008\n8762227\n63011336\n55074387\n38287153\n40750897\n88156956\n67660702\n22139961\n43389467\n21658328\n39227867\n12234253\n63632218\n52252749\n53937644\n25988436\n21443135\n11141896\n26426594\n11949162\n61920304\n66825691\n17947708\n90729849\n3224443\n63744687\n33390194\n39143458\n15226649\n64555696\n64822543\n14494443\n595014\n61179464\n76985084\n85737290\n73509213\n40341722",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "105\n1\n1\n1\n1\n1\n37024442\n100000000\n100000000\n1\n100000000\n54077283\n29721649\n7935599\n1\n1\n100000000\n100000000\n1\n61321084\n100000000\n100000000\n100000000\n1\n97851595\n90605573\n100000000\n1\n1\n100000000\n1\n1\n71999651\n1\n56685841\n54227184\n100000000\n100000000\n1\n1\n100000000\n2565389\n100000000\n43773512\n1\n95275276\n1\n1\n100000000\n100000000\n100000000\n100000000\n100000000\n81394537\n15498469\n100000000\n90125167\n1\n1\n1\n100000000\n37839996\n1\n1\n96867696\n1\n1\n1\n55087096\n47866225\n72388214\n1\n100000000\n100000000\n100000000\n100000000\n81887005\n100000000\n33850573\n100000000\n1\n29002344\n18733911\n100000000\n100000000\n100000000\n1\n1\n1\n1\n14990906\n14402032\n65283544\n75456122\n100000000\n100000000\n1\n100000000\n1\n64684731\n1\n1\n21783087\n100000000\n1\n51499977",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 105)"
    },
    {
      "input": "1\n1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 1)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:21",
  "total_test_cases": 20
}
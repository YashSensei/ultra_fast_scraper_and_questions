{
  "problem_code": "problems",
  "title": "Tautology",
  "tags": [],
  "text": "Write a program that checks if the given logical expression is a tautology. The logical expression is a tautology if it is always true, regardless of logical value of its variables.InputOn the first line there is the number of expressions to check (at most 35). The expression is in a prefix notation, that means that operator precedes its arguments. The following logical operators will be used:C - and \r\nD - or\r\nI - implies\r\nE - if, and only if\r\nN - notThe variables will be lowercase letters (a-z). There will be no more than 16 different letters in the expression. The length of the expression will not exceed 111 characters.OutputFor each expression write one word: YES if it is a tautology, NO in other case.ExampleSample input:7\r\nIIpqDpNp\r\nNCNpp\r\nIaz\r\nNNNNNNNp\r\nIIqrIIpqIpr\r\nIpp\r\nEzzSample output:YES\r\nYES\r\nNO\r\nNO\r\nYES\r\nYES\r\nYES",
  "sample_input": "C - and \r\nD - or\r\nI - implies\r\nE - if, and only if\r\nN - not",
  "sample_output": "Sample input:7\r\nIIpqDpNp\r\nNCNpp\r\nIaz\r\nNNNNNNNp\r\nIIqrIIpqIpr\r\nIpp\r\nEzzSample output:YES\r\nYES\r\nNO\r\nNO\r\nYES\r\nYES\r\nYES",
  "link": "https://www.spoj.com/problems/TAUT",
  "scraped_at": "2025-08-17 00:33:06",
  "test_cases": [
    {
      "input": "C - and \r\nD - or\r\nI - implies\r\nE - if, and only if\r\nN - not",
      "expected_output": "Sample input:7\r\nIIpqDpNp\r\nNCNpp\r\nIaz\r\nNNNNNNNp\r\nIIqrIIpqIpr\r\nIpp\r\nEzzSample output:YES\r\nYES\r\nNO\r\nNO\r\nYES\r\nYES\r\nYES",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "h q cwts\nymv qjwgg tvb\ntqayu xjijc arevvoc\nfoyj rlms lms sv es dh\ni kyayu mbq",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "bbzt exd x\nkz bxdb a\nvlpaa eqm puervck\nsrmhh ks iozjp qgsjq kupx sftk\niwcjg hmyi xhhy",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "ot nnkrl nr\nikgg rs bb\nw f yitx\nrp vxumg rocx rsj x oh\nadpzj bixwn tfe",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "bz buun ua\nalw w iw\nk ckn y\nrh x f i bxfm wxte\ndc ncp e",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "w cumww ir\ntkyge ltj o\nshupt udnp lalm\nsag qilkj cpmwk h f s\nqrj m a",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "nhad i shyso\ngt tw dc\ns x nxsddz\nsx xeu xoz xl zmqi y\nurn jv luxte",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "lncxc q edas\nsgeen dyamy kz\nlnbi oqz qkcmoq\nzfo uckur hfv t rmde qxez\nvl un chu",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "eiov ifs vhhph\nedor ocz gs\nl ztx efa\npw dsebz cxpg lj qqkws ef\nt e mjass",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "kwl pkfbn egees\nvcol wg qxxg\nkozq zvi ghjbvm\nowft beq smy xmt ixyet ose\nekfhu haw aspwt",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "tjz iraua h\ntsn mvc qb\nla iy qmy\nnhcwv qoj loa qq rzf n\nzll invf zq",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "bt hox si\ne xue xnnw\nhaqn rcjq tbs\ncz ezo yfv rqa hx mshqz\nkl ok mbt",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "wetpw uu xoqep\nzgm qm advz\na r s\nuqxx bvtme qdi roup ppzds kvee\nkqy xabg s",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "e e b\nvu p pre\ne lclu g\nbo y djot r eyg vxs\np upjcj jtasl",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "cjx mlars ow\nfna pmb wvb\np zxlg hgbvdeb\ng osh sy iyv hkx bebkn\ntojv zsqqm msk",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "xhcj vnm tz\nmr kxix sqpxg\nqaf u v\nb mxnww cmcy cvtg clp zhqs\nosko eb fqh",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "j zn nzj\nbdd vvm ay\nwxapl ovszz szxgu\nxrxoi j rglgs xwgyz ww f\nylpnr lc tytso",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "jtbfp g edydi\nft gf vr\nurnku ncasw alur\nuz wlf yd siel ae nbn\nbd qdfe jm",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "ql nb kn\nkhqf ldcs g\nakf nrly jeqoeuy\nmw jks r dwt hvww uldc\njqdpy ny oerhw",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "vx z o\nyu a dltu\njru m piwwxmj\npanpn ss w gkwd pjsx gwtj\ntm t sw",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:13",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Candies and Milestones",
  "tags": [],
  "text": "Little Pratya loves collecting candies and she also likes playing games :).Today Pratya is travelling in bus and she has a bag full ofNcandies. She looks outside the window and notices milestones with numbers written on them. She decides to play a game. She wants to select some initialnon-zeronumber of candies from the bag and call it her collection of candies. When she sees a milestone on the way, she will add or remove some candies from her collection as following.Let the previous milestone number bea1and the current milestone number bea2.a2 > a1: Pratya adds (a2 - a1) candies to her collection (thus, her bag of candies loses them). If the bag doesn't contain at least (a2 - a1) candies, she starts crying.a2 < a1: Pratya removes (a1 - a2) candies from her collection (thus, her bag of candies gains them). If her collection doesn't contain more than (a1 - a2) candies, she starts crying.a1 = a2: Pratya is bored to see the same number again and so she eats one of the candies from her collection.Moreover, Pratya always wants her candy collection to have at least one candy, otherwise she starts crying. Given the numbers written on all the milestones in order, find the minimum number of candies Pratya should select in the beginning so that she doesn't have to cry at all. If it is not possible, print -1. Note that no change to the collection happens when she sees the first milestone.InputThe first line contain the number of test casesT. Each test case has two lines. The first line specifiesNandM.Nis the number of candies in the bag andMis the total number of milestones. Second line containsMintegers, the numbers written on the milestones, in the order Pratya sees them.T ≤ 1501 ≤ N ≤ 1072 ≤ M ≤ 104Each milestone number will be between [-106, 106].OutputFor each test case output the minimum number of candies that should be selected from the bag or -1 if its not possible.ExampleInput:310 51 5 1 -1 -22 51 5 1 -1 -2100 31 2 3Output:4-11Note : Large input, prefer using scanf / printf  to  cin / cout* There are multiple test sets, and the judge shows thesumof the time taken over all test sets of your submission, if Accepted.",
  "sample_input": "Input:310 51 5 1 -1 -22 51 5 1 -1 -2100 31 2 3Output:4-11",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/CANDYSTN",
  "scraped_at": "2025-08-17 00:33:22",
  "test_cases": [
    {
      "input": "310 51 5 1 -1 -22 51 5 1 -1 -2100 31 2 3",
      "expected_output": "4-11",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "10 1 6 7 1 10 1 2 5 1 2 4 7 2",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "1 2 6 8 10 8 6 9 4 2 7 4 8 8",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "7 3 5 9 10 10 4 10 9 8 10 4 3 1",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "56 75 74 1 78 2 65 63 21 55 75 11 62 4",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "80 11 35 80 32 85 26 91 72 92 88 13 77 2",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "17 12 67 43 2 51 23 76 16 51 7 97 64 52",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "89 85 26 93 4 62 13 1 61 11 100 25 26 41",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "14 66 95 61 15 29 83 22 70 97 58 12 96 2",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "334 362 306 333 112 59 278 485 362 321 125 490 232 429",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "474 136 469 509 427 444 458 517 527 147 477 485 221 58",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "64 199 256 59 296 430 332 439 127 391 219 119 71 104",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "319 67 299 244 490 368 95 376 185 529 350 337 378 143",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "113 320 421 181 80 177 507 353 349 69 64 252 405 448",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "448 331 320 373 490 125 298 98 248 112 496 227 132 332",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "534 301 449 266 467 463 434 527 67 453 338 509 448 390",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1072 1072 1072 1072 1072 1072 1072 1072 1072 1072 1072 1072 1072 1072",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1072 1072 1072 1072 1072 1072 1072 1072 1072 1072 1072 1072 1072 1072",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 1 2 1071 1071 1072 2 2 1 1071 1072 1 2 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1072 1072 1072 1 1072 1071 2 1071 1072 1 1 1 1 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:12",
  "total_test_cases": 20
}
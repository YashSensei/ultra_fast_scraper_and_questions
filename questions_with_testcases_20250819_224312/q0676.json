{
  "problem_code": "problems",
  "title": "Candy Distribution",
  "tags": [],
  "text": "Alice is a teacher that loves her students. As the school year reaches its end, she wants to reward all her students with candies for all their hard work.Since each of her classes is unique, she decided she’ll give a different kind of candy for each class, and in order to avoid students being mad at others in their class, she wants to make things fair by giving all students in the same class the same kind of candy.Happily, she went to the candy shop, and fortunately found out that it had N different types of candy, exactly the same number of classes of students she taught!Looking at the prices and paying close attention to the number of students in each class, Alice noted that she could save some money by assigning the types of candy to certain classes. Because she’s a teacher, her income is not that big and saving money is very important to her, so she asked you to write a program to determine the least amount of money she must spend.InputEach test case consists of three lines. The first line contains a positive integerN(1 ≤N≤ 100000). The second line containsNintegersCi, theithinteger indicates the number of students in Alice’s i-th class. The third and last line also contains N integersPitheithinteger indicates the price of theithtype of candy (1 ≤Ci,Pi≤ 100000).The input ends with a line consisting of a0, which indicates end of input.OutputFor each test case, output a line containing the least amount of money Alice must spend.ExampleInput:41 1 1 12 2 2 2510 80 37 22 1096 8 8 20 150Output:82120",
  "sample_input": "Input:41 1 1 12 2 2 2510 80 37 22 1096 8 8 20 150Output:82120",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/CADYDIST",
  "scraped_at": "2025-08-17 00:33:15",
  "test_cases": [
    {
      "input": "41 1 1 12 2 2 2510 80 37 22 1096 8 8 20 150",
      "expected_output": "82120",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "9 6 2 9 9 5 5 9 6 9 4 5 6 8 10",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "6 2 10 9 5 2 1 1 2 1 9 3 9 10 9",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "2 1 3 9 3 4 9 1 6 9 6 5 1 7 4",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "53 35 32 97 82 73 64 88 82 50 40 9 61 57 71",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "94 36 66 81 17 83 23 37 67 16 72 77 65 7 55",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "68 78 64 54 93 36 45 71 85 97 85 92 92 15 54",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "70 51 17 92 93 56 4 12 97 79 61 74 13 91 81",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "74 69 10 5 52 95 47 14 62 69 16 16 43 38 86",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "8311 36680 19306 22543 36136 7285 17416 5844 30717 43476 40825 39347 27781 38523 24515",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "22479 12313 42957 44189 21926 17544 39106 49350 20962 40967 35789 27299 18743 31668 12242",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "34374 40475 9582 9356 14533 23119 36125 20257 10876 15611 38032 20852 9713 27578 36266",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "48622 30541 6840 37494 43447 17287 33908 27438 39293 45079 45476 35884 36263 31143 13189",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "25840 6713 37654 46883 46669 24313 31700 46414 20105 43150 30239 6304 41237 19900 42496",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "31668 49505 12217 8249 35287 6437 12820 7080 12253 7071 31897 15386 48332 15161 11572",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "11196 40464 9204 27895 12804 21260 16345 30049 20320 33136 41180 16597 49290 10494 43957",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 100000 100000 100000 1 99999 100000 99999 100000 100000 99999 1 100000 2 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "100000 100000 2 1 1 99999 99999 100000 100000 2 2 100000 2 99999 100000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:14",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "IQ Team",
  "tags": [],
  "text": "In Byteland we can study only math and IT.In the university there are n math students and m IT students.Rector Byteasar knows IQ of every student. He wants to make the best team, which would solve the hardest human being problems. So he decided to pick team with the highest summary IQ.Of course it's not everything. He wants to make team in which each student knows another students from team.Every student from IT know other student from IT and same with math students.Help him finding team with the largest summary IQ and in which every student from team knows another students from team.InputIn first line n, m, k (0 < n ≤ 400, 0 < m ≤ 400, 0 ≤ k ≤ n × m) which means number of math students, number of IT students, number of friendships between IT and math student.In next k lines pairs0 < ai ≤ n, 0 < bi ≤ m, which means ai student from math knows bi student from IT.In next line n numbers, IQ of i-th math student.In next line m numbers, IQ of i-th IT student.OutputOutput in one line : number of team's summary IQ.ExampleInput:3 2 3\r\n1 1\r\n2 1\r\n2 2\r\n1 3 1\r\n1 2Output:6",
  "sample_input": "Input:3 2 3\r\n1 1\r\n2 1\r\n2 2\r\n1 3 1\r\n1 2Output:6",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/IQTEAM",
  "scraped_at": "2025-08-17 00:33:54",
  "test_cases": [
    {
      "input": "3 2 3\r\n1 1\r\n2 1\r\n2 2\r\n1 3 1\r\n1 2",
      "expected_output": "6",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "7 7 4\n2 3\n3 3\n5 8\n1 10 9\n9 5",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "7 1 3\n7 9\n8 6\n2 7\n8 7 5\n3 10",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "3 2 8\n8 5\n7 5\n7 5\n5 9 1\n10 9",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "39 43 91\n84 80\n30 96\n9 17\n29 74 34\n34 98",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "91 5 27\n42 78\n22 25\n79 59\n44 42 63\n17 1",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "34 64 44\n28 99\n63 37\n49 81\n90 63 27\n51 47",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "23 11 87\n52 35\n59 66\n84 90\n74 26 3\n53 76",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "1 76 97\n18 78\n60 45\n87 12\n38 4 96\n50 78",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "159 187 104\n188 111\n83 129\n40 190\n40 90 23\n148 184",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "200 194 89\n196 39\n154 33\n172 48\n24 197 128\n66 21",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "104 117 89\n44 81\n164 120\n125 197\n157 158 68\n168 92",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "175 178 194\n176 82\n51 105\n78 131\n178 37 159\n150 41",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "47 179 127\n182 146\n82 182\n36 150\n60 32 181\n53 46",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "118 100 37\n77 200\n131 133\n73 150\n169 29 166\n153 162",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "187 82 26\n23 126\n131 179\n170 98\n105 164 79\n142 171",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "400 400 400\n400 400\n400 400\n400 400\n400 400 400\n400 400",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "400 400 400\n400 400\n400 400\n400 400\n400 400 400\n400 400",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "399 1 2\n399 1\n1 400\n399 2\n1 400 1\n1 400",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "399 400 1\n400 400\n1 1\n1 1\n1 400 2\n1 399",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:19",
  "total_test_cases": 20
}
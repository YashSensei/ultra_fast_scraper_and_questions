{
  "problem_code": "problems",
  "title": "The Longest Chain of Domino Tiles",
  "tags": [],
  "text": "You are given N domino tiles. Each tile is made of some number of squares (not necessarily two), and each square is coloured either white or black (we use the Croatian letters: B for white and C for black).Find the longest chain that can be made of these tiles. Each tile can be used at most once and cannot be rotated (for example, BC cannot become CB). The chain is made by a common rule: in adjacent tiles, touching squares must be of the same colour.Input[N ≤ 100, the number of dominoes]in the next N lines:[a string of size between 1 and 100, representing the domino]OutputThe length of the longest chain.ExampleInput:4\r\nCB\r\nBCC\r\nBBCC\r\nBCBBCOutput:11",
  "sample_input": "Input:4\r\nCB\r\nBCC\r\nBBCC\r\nBCBBCOutput:11",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/DOMINO1",
  "scraped_at": "2025-08-17 00:33:12",
  "test_cases": [
    {
      "input": "4\r\nCB\r\nBCC\r\nBBCC\r\nBCBBC",
      "expected_output": "11",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2\n5\n10",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "2\n1\n7",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "4\n4\n1\n5\n2",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "14\n69840579\n60663696\n47978894\n52511564\n88630497\n30566418\n71799979\n81345106\n97731888\n78000467\n61458169\n44918548\n98944218\n33358008",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "11\n95893331\n71537908\n20545701\n81961419\n7274890\n86108916\n50014204\n80163274\n13563890\n17834779\n41012826",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "10\n78025587\n60509737\n38191632\n99889122\n35275636\n19176619\n99167381\n73232189\n84503205\n83237746",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "5\n43026964\n42723377\n39340826\n94146604\n44510103",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "16\n42049972\n19892192\n30158775\n14809087\n40083667\n87372574\n85866344\n89452370\n15461961\n95661553\n89305791\n74823315\n8992713\n71014772\n43777941\n34878799",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "26\n76186\n18206\n19742\n33108\n70894\n62443\n32957\n43244\n19971\n35554\n49283\n3224\n70550\n40753\n95156\n34072\n69894\n27710\n96122\n30769\n7360\n72670\n61535\n74399\n887\n46531",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "50\n73759\n27781\n46552\n21720\n11356\n41924\n28240\n67203\n22267\n53880\n3905\n36038\n8696\n87144\n86321\n60198\n52739\n64506\n90239\n80302\n39822\n38911\n28321\n54027\n24645\n54198\n83089\n50222\n81754\n31780\n64211\n25376\n22196\n17946\n43453\n10503\n92842\n93297\n68662\n99014\n86293\n79028\n42329\n86121\n58872\n27034\n99801\n52511\n40681\n44354",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "43\n63115\n92168\n74521\n30510\n60798\n1774\n64047\n89501\n88130\n44832\n92284\n80757\n4372\n72362\n64447\n54645\n75637\n87902\n64901\n17071\n97831\n40069\n90471\n59987\n96585\n31636\n98763\n36263\n26511\n45278\n7100\n70816\n42209\n80150\n12084\n24464\n49651\n34762\n91265\n49704\n51929\n48755\n75442",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "87\n42031\n53031\n16050\n17803\n43406\n55113\n50730\n8879\n43587\n49414\n18785\n62374\n85742\n3334\n94952\n42282\n88938\n19518\n86645\n39656\n67016\n57491\n31619\n10377\n98500\n10235\n36002\n91598\n75297\n7592\n33680\n20357\n68968\n29570\n34722\n91913\n15872\n78182\n71152\n3704\n99801\n90358\n32480\n76616\n53877\n86377\n3716\n4278\n28603\n59370\n59447\n69888\n30178\n2426\n97112\n68397\n81145\n71687\n83070\n24564\n79375\n28547\n84291\n71273\n16202\n79459\n29414\n24720\n99012\n3051\n87638\n49249\n73614\n30023\n16514\n43343\n51269\n23727\n1166\n58498\n55491\n71920\n90367\n78504\n66854\n25730\n96246",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "22\n37502\n11258\n95591\n8638\n43607\n37946\n79353\n50328\n47034\n7829\n92268\n38573\n75062\n62218\n1230\n19451\n79262\n20985\n46066\n55542\n33910\n92192",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "53\n63274\n15187\n3233\n38007\n8787\n61965\n45854\n72428\n96067\n47535\n12143\n56304\n94667\n54685\n80468\n19740\n16763\n72824\n55400\n44055\n9618\n13718\n29538\n95757\n99687\n20161\n91630\n73482\n44468\n86188\n30350\n41562\n50650\n64609\n6496\n17835\n23811\n75167\n98676\n97390\n48000\n50204\n53532\n51270\n60498\n34627\n14494\n61345\n4627\n26990\n22622\n43284\n66003",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "97\n7617\n3778\n57395\n99643\n73089\n49564\n53787\n13751\n72469\n25523\n36250\n61736\n96426\n96166\n2841\n94042\n7644\n84429\n23791\n18576\n60953\n16910\n86561\n1183\n75761\n31338\n70433\n86090\n63559\n40405\n63793\n95157\n58312\n13905\n77132\n21224\n33531\n13965\n36092\n98914\n96187\n80727\n35214\n38866\n24729\n75097\n98566\n69112\n8337\n48875\n93163\n80202\n93606\n61982\n48984\n84032\n12558\n58393\n45856\n66129\n2164\n58585\n20343\n46358\n12305\n29898\n81492\n71200\n43951\n42299\n34936\n10282\n54600\n95309\n82782\n54753\n50403\n99714\n40136\n20879\n6737\n54396\n56090\n18762\n66395\n94179\n91187\n3615\n25552\n61615\n36845\n74230\n31438\n6602\n40654\n43906\n95992",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "100\n74445860\n86390676\n72575543\n88893714\n89661731\n62499296\n68633697\n94440767\n34546723\n74767320\n85430689\n65576707\n76933223\n18964918\n57325713\n65648652\n38536678\n52799276\n5919300\n5165212\n95863525\n42727411\n75960433\n10671790\n51721487\n50279205\n28258912\n95336147\n12543000\n99977248\n9776741\n54914393\n63759621\n73946970\n90733571\n89281622\n62653376\n85778067\n72263438\n65628313\n44660242\n82801456\n30562146\n65764749\n55689102\n77905243\n10877451\n25707669\n51898800\n69626734\n53126253\n38992759\n86982632\n83219091\n74632548\n4093764\n25181244\n57763065\n38667092\n29603959\n30670677\n20896249\n37955757\n817021\n95551230\n34245195\n59038311\n44233430\n40502321\n68071975\n78191190\n53102878\n69807221\n27185730\n98427967\n20638856\n53929484\n83038475\n60689798\n44478336\n40743134\n44932193\n7561024\n96235591\n9167844\n19455065\n51748065\n80313217\n19291984\n78664916\n34010395\n26202980\n87370020\n39241402\n3348255\n57745384\n44262542\n98479046\n7975179\n7142428",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "100\n33356373\n55330292\n20684230\n94769116\n19931559\n16261763\n65278409\n84204973\n78508477\n22408901\n32698923\n63595816\n379476\n78368120\n88483061\n52900699\n90909512\n91001679\n10085919\n41849688\n90673750\n42810056\n36318378\n29806720\n99871805\n41120979\n43722850\n8381818\n3557116\n52330922\n73057014\n4604846\n26190964\n25064088\n64310117\n56176935\n8830141\n91539513\n67312902\n44542203\n25704392\n4429182\n32081605\n6319005\n29238643\n59559261\n51353247\n7860726\n38236184\n44149223\n11002651\n64740853\n61823512\n79498964\n68189709\n554484\n56104823\n80462398\n64710485\n3317803\n79661450\n46225733\n87641418\n58698353\n38301560\n82085115\n97131409\n54411127\n76800459\n10051683\n30712607\n9819727\n20222801\n54501035\n20387771\n57743951\n74583227\n74182527\n63275805\n70861123\n14121274\n12718820\n27065173\n38045423\n71487117\n24293585\n56447242\n50132164\n36136774\n63391916\n92360742\n23686181\n76238912\n6214737\n16844988\n34557510\n61615616\n58261439\n32473115\n80986246",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "1\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 1)"
    },
    {
      "input": "2\n1\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 2)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:13",
  "total_test_cases": 20
}
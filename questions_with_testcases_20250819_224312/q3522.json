{
  "problem_code": "problems",
  "title": "Addicted",
  "tags": [],
  "text": "Jhon is compulsive saver, he keeps a number \"n\" of piggy banks locked in his room.He has a list which he wrote with a sequence of 1's and 2's that indicate the way that Jhon will \r\ndeposit his money on the piggy banks. Every time Jhon gets a penny he rushes to his room and \r\npicks the 2 piggy banks who have the least amount of money, then he looks at the next number \r\non the sequence. If that number is one (1) he deposits the penny on the piggy bank with the least \r\namount of money. If that number is two (2) he deposits the penny on the next piggy bank with \r\nthe least amount of money.Your task is to write a program to help Jhon to determine what is the amount in the 2 piggy \r\nbanks with least amount of money once the sequence is over.If more than two have the least amount of money choose those with lowest indexes.You can assume that n ≤ s.InputThe input is a single data set.n is the number of piggy banks, 2 ≤ n ≤ 105s is the sequence with 1's and 2's, 1 ≤ size(s) ≤ 105OutputA line containing what is the amount in the 2 piggy banks with least money once the sequence is over, sorted from lowest to highest.ExampleInput:3\r\n111112Output:1 2",
  "sample_input": "Input:3\r\n111112Output:1 2",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/TLL237",
  "scraped_at": "2025-08-17 00:34:16",
  "test_cases": [
    {
      "input": "3\r\n111112",
      "expected_output": "1 2",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3\n1\n7\n5",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "4\n2\n4\n6\n8",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "4\n8\n8\n9\n4",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "7\n37690968\n96660093\n43159295\n82442673\n36479721\n87856030\n437695",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "10\n42403499\n5058096\n81522263\n59632014\n47702374\n22137952\n40478486\n12936578\n30755733\n27683102",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "16\n18012718\n8042515\n25701867\n91759578\n95185699\n22161347\n26061415\n28610316\n15739324\n96472131\n45640497\n95220133\n45396067\n54991523\n66690743\n75599773",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "13\n81024544\n38043779\n74287399\n28042205\n75488901\n41140033\n54837886\n26647809\n19381709\n93226579\n11416182\n72979518\n45627789",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "13\n12826834\n47276363\n61607046\n39160580\n37561066\n16667269\n17078287\n95546535\n89991259\n83313733\n11595318\n22096955\n76302487",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "43\n27587\n68093\n90070\n64915\n73480\n87767\n94498\n69848\n62335\n18278\n49978\n84636\n91201\n71313\n45660\n94441\n12782\n12553\n2807\n84391\n25731\n89344\n72684\n61981\n6543\n25832\n78226\n90947\n19769\n56855\n34435\n77014\n98112\n40589\n11246\n6925\n78456\n30157\n40070\n65367\n70528\n40277\n46538",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "98\n59572\n88571\n94890\n7296\n1147\n20558\n32176\n46729\n44950\n38374\n42673\n13912\n67318\n49395\n71358\n20381\n17239\n14396\n75068\n3866\n34622\n17623\n69605\n67121\n39044\n3236\n90618\n35042\n63415\n31324\n26644\n72715\n16872\n49536\n14165\n72534\n96003\n64172\n73738\n22132\n55829\n95979\n74089\n96899\n73659\n50598\n33691\n70163\n14118\n84671\n84317\n79131\n81933\n39517\n5979\n8227\n41867\n60401\n83686\n61534\n12724\n42523\n68972\n17221\n17993\n79646\n48459\n94259\n20669\n9590\n15555\n52741\n95290\n32740\n19266\n81103\n10232\n40571\n67910\n83977\n41146\n5083\n63610\n33859\n59975\n76659\n88941\n61070\n68783\n23341\n64642\n91238\n81853\n12903\n75011\n36863\n72499\n75204",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "46\n18471\n807\n955\n83771\n83286\n71052\n67370\n45347\n27762\n91831\n45507\n42141\n51504\n85938\n29499\n7462\n75381\n94834\n61582\n74029\n82652\n52816\n8876\n99050\n33846\n27970\n73937\n44030\n19951\n12734\n39492\n1235\n41366\n1343\n74812\n13065\n52209\n22094\n48731\n3743\n4729\n38255\n30000\n78653\n62529\n58962",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "37\n51424\n14751\n29936\n62286\n35209\n43051\n37572\n89056\n51512\n36698\n6072\n40545\n90412\n25934\n54601\n3637\n90793\n9912\n8191\n24707\n67206\n23349\n70982\n3945\n71740\n91244\n63967\n78203\n98820\n42716\n78683\n12108\n53595\n78834\n21617\n22481\n68296",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "28\n18967\n12483\n27201\n30875\n27101\n76824\n81359\n95342\n86955\n6388\n16127\n22511\n87599\n69288\n77545\n88728\n54564\n32432\n35600\n36321\n51772\n93479\n55968\n15120\n67755\n52591\n3485\n511",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "64\n26657\n90426\n74640\n6435\n39122\n9987\n68061\n16525\n74806\n75596\n89563\n64284\n53020\n37483\n63279\n84848\n63982\n4994\n96645\n79269\n76644\n33812\n29628\n38900\n78417\n97758\n87844\n15875\n53931\n98006\n79090\n66415\n83209\n66864\n65839\n49817\n62192\n67007\n97775\n73493\n48111\n4080\n85532\n76095\n22810\n3333\n46679\n47685\n90838\n69647\n84789\n65951\n43473\n16801\n36025\n89703\n97792\n20417\n28040\n23882\n66169\n93048\n29500\n94551",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "78\n79569\n55141\n25869\n81243\n5684\n42312\n76470\n73589\n89859\n13243\n36731\n24931\n27370\n23318\n34510\n25447\n32668\n24977\n69160\n14304\n82533\n28009\n82255\n40995\n24555\n3304\n61750\n37531\n31565\n58959\n57339\n1337\n40351\n9091\n40460\n30157\n70062\n52764\n37038\n25954\n729\n33831\n51004\n4487\n64803\n13868\n59697\n66763\n30478\n6545\n27546\n16401\n6105\n236\n3559\n96430\n58783\n42925\n73695\n44535\n974\n38245\n39328\n75318\n91596\n76491\n29544\n49703\n22264\n44216\n38392\n32236\n68029\n60665\n68381\n82052\n46803\n77214",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "105\n10514224\n41458597\n79582219\n97963642\n43096751\n56924698\n33399325\n37160997\n64915750\n29300176\n75478315\n65299593\n70171737\n27774434\n57435936\n71932709\n2771436\n56950588\n88046498\n51964270\n20662935\n39533694\n20986244\n59519568\n67874630\n21996393\n34020000\n1335608\n48368811\n50368777\n38225160\n17239550\n93836545\n10466726\n99864011\n49568908\n86713115\n20012395\n56558919\n73522078\n32210074\n90771436\n85225846\n31601948\n62717283\n5528035\n30187262\n47404088\n51635086\n41334678\n14343848\n51597104\n8285019\n36875023\n63151837\n39365590\n11818097\n75793854\n93846198\n25614876\n65075259\n83220940\n38256151\n85745691\n41804822\n59183261\n35097528\n43554760\n47464743\n59618028\n32472251\n99878765\n19336168\n35297985\n6093003\n29274714\n88643733\n20027887\n64442812\n3727657\n70861520\n25646982\n79009262\n77188342\n61467703\n39648867\n96878153\n3257312\n17537364\n28866741\n55619686\n77302983\n92427345\n10045135\n18936504\n14291636\n68129227\n70085717\n64697628\n33599142\n12738288\n3545068\n17858944\n37335529\n2448165",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "105\n12947082\n33664105\n79503325\n18326181\n88024453\n81826623\n81474492\n56321303\n86003485\n98350254\n13299665\n60092536\n53905352\n67737535\n87618829\n48866292\n61721718\n69584818\n17352758\n69563396\n24566397\n92332757\n858003\n6338965\n24203832\n30398382\n49096500\n67192469\n77132580\n86171272\n52127039\n93120678\n5718107\n39047674\n40361635\n73941915\n24789133\n59427283\n34546868\n44800566\n62522311\n65185702\n87053667\n28232065\n43516887\n92854866\n39054164\n45683659\n93044402\n84340758\n47926061\n18949120\n90640779\n70971584\n10079534\n84103647\n12357136\n12745228\n56805940\n77338935\n86620497\n33257551\n13538724\n35123862\n97145732\n4485719\n57444914\n51236160\n18039022\n50262462\n26734270\n11845383\n55648319\n61707468\n88164984\n69923561\n349891\n61325325\n82018347\n46434651\n80118890\n93336466\n85092155\n82765743\n1520560\n69561937\n51041357\n78347273\n96779818\n13116074\n96357280\n93416287\n97545896\n89143672\n3167740\n72957785\n27309300\n13343586\n77430324\n76972766\n9223341\n10283115\n91500311\n4906960\n89695110",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "105\n100000000\n100000000\n73336894\n1\n50692118\n1\n1\n1\n8549564\n1\n1\n100000000\n100000000\n100000000\n100000000\n1\n100000000\n1\n55609831\n447460\n100000000\n37958507\n52705177\n76134500\n1\n100000000\n46093558\n1\n100000000\n100000000\n100000000\n100000000\n48951539\n1\n100000000\n100000000\n99860429\n100000000\n100000000\n100000000\n67848105\n100000000\n37091499\n75999883\n98029442\n1\n1\n100000000\n36927678\n1\n100000000\n100000000\n100000000\n68799854\n69026467\n15772449\n82258375\n1\n100000000\n42577356\n1\n82637500\n9312670\n100000000\n68766116\n1\n1047578\n1\n100000000\n2239470\n80614126\n55442740\n7114911\n51459339\n100000000\n1\n100000000\n12508555\n1\n97480198\n100000000\n40535379\n1\n1\n1\n100000000\n100000000\n1\n23819565\n100000000\n100000000\n100000000\n9516894\n100000000\n100000000\n1\n36049340\n1\n1\n1182343\n1\n1\n1\n100000000\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 105)"
    },
    {
      "input": "1\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 1)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:24",
  "total_test_cases": 20
}
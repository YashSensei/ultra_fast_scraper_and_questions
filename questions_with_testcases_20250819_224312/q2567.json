{
  "problem_code": "problems",
  "title": "A Famous King’s Trip",
  "tags": [],
  "text": "Mr. B is the chief engineer in the Kingdom of FDUCS. Recently, the King asks Mr. B to develop a new plan of the road network in the country, since the existing one is so old that traffic jam often occurs. Unfortunately, Mr. B is now preparing for the ICPC World Final Contest so that he is quite busy. He asks his friends, Mr. G and Mr. M to help him finish that work. When Mr. B gets the solution from his friends, he realizes some problems: Mr. B forgot to specify the budget plan to Mr. G and Mr. M, thus the new solution contains too many new roads which the government cannot afford. After a precise calculation, Mr. B finds that he has just to delete exactly two roads in term of the financial facts (Of course, Mr. B will not delete more than two roads because he wants people in his country to have a convenient traffic).Can Mr. B delete two roads arbitrarily? The answer is negative. The King would like to take a travel on the new road system to review Mr. B's work. However, the King is so busy that he does not want to take travel with redundancy. That is, the King wants Mr. B to design a road system so that he can travel from the palace (in one city), pass each road exactly once, and then back to the palace. Moreover, during his travelling, the king must visit each city at least once too.Mr. B feels hard to satisfy the Kings demand by deleting two roads from the original design. As an ICPC candidate with unlimited potential, can you help him?InputFor each test case, the first line contains two integers,nandm(1 ≤n,m≤ 200,000), indicating the number of cities in the Kingdom and the roads in Mr. B's original plan. Following this aremlines, each contains a pair of integersaandb. Each of them denotesabidirectional road between cityaand cityb(1 ≤a,b≤ n anda≠b), the number of cities are counted from 1. No two roads connect the same pair of cities.OutputFor each test case, if Mr. B can satisfy the Kings requirement, then outputYESin the first line, otherwise, outputNO. If the answer isYES, output two integersXandY(X<Y) in the following line, specifying two roads that Mr. B should delete from the original design.XandYare the indexes of roads in the input, counting from 1. If there are more than one possible answer, output the one that makes the pair of (X,Y) lexicographically smallest.ExampleInput:4 6\r\n1 2\r\n1 3\r\n1 4\r\n2 3\r\n2 4\r\n3 4Output:Case 1: YES\r\n1 6",
  "sample_input": "Input:4 6\r\n1 2\r\n1 3\r\n1 4\r\n2 3\r\n2 4\r\n3 4Output:Case 1: YES\r\n1 6",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/TRIP2",
  "scraped_at": "2025-08-17 00:34:05",
  "test_cases": [
    {
      "input": "4 6\r\n1 2\r\n1 3\r\n1 4\r\n2 3\r\n2 4\r\n3 4",
      "expected_output": "Case 1: YES\r\n1 6",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "10 9\n7 6\n4 8\n2 5\n5 1\n8 8\n7 7",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "5 3\n3 2\n8 3\n3 1\n5 4\n7 8\n10 10",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "5 1\n6 8\n7 9\n2 9\n5 9\n9 1\n9 10",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "61 65\n35 33\n21 44\n40 10\n31 90\n4 95\n55 91",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "24 5\n39 63\n1 97\n58 49\n48 36\n84 15\n64 99",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "79 54\n77 10\n26 36\n7 56\n49 31\n32 84\n67 4",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "83 69\n58 2\n78 65\n62 33\n70 47\n71 89\n93 13",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "19 20\n99 58\n75 37\n27 5\n65 85\n30 56\n68 34",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "407 492\n136 92\n66 249\n107 330\n133 130\n354 409\n481 324",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "289 373\n192 59\n141 194\n156 235\n219 496\n398 412\n273 394",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "377 460\n440 108\n281 309\n443 98\n306 478\n430 228\n135 171",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "499 92\n466 100\n71 75\n79 53\n170 149\n312 354\n408 382",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "372 150\n243 482\n74 200\n267 461\n317 378\n257 462\n116 355",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "291 318\n106 381\n65 384\n373 463\n422 143\n182 169\n491 230",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "249 284\n78 367\n340 487\n469 217\n255 225\n185 61\n141 301",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "999 1000\n999 1\n1000 2\n2 999\n1000 2\n999 1000\n999 999",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 1\n1000 2\n999 1000\n2 1\n2 1\n999 2\n2 1000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:20",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Bread Tree",
  "tags": [],
  "text": "EnglishVietnameseBreadtree is a kind of tree that produces bread. At its first year, a breadtree is only a node with a bread of weight 0 on this node which is also called zeronode. Every year after that, the weight of bread on each node of the tree will increase by 1, and another branch with a zeronode will grow at the end of each node. However, there is a limit of branches on each node. That is, when the number of branches of a node reaches the limit, there won't be any more branches, but the weight of its bread will still increase. What's more, a breadtree remains unchanged when the total weight of bread is larger than 1234567890.InputThere are two integers N and K on each line. N is a positive integer fit in signed 32-bit integer. K is a non-negative integer fit in signed 32-bit integer. An N equals to 0 signals the end of input, which should not be processed.OutputOutput the total weight of bread on a breadtree with branches limit K in the N-th year in a line for each case.ExampleInput:10000 0\n101 1\n10 2\n1221 128\n0 0Output:9999\n5050\n221\n2147483647",
  "sample_input": "Input:10000 0\n101 1\n10 2\n1221 128\n0 0Output:9999\n5050\n221\n2147483647",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/BRTREE",
  "scraped_at": "2025-08-17 00:33:19",
  "test_cases": [
    {
      "input": "10000 0\n101 1\n10 2\n1221 128\n0 0",
      "expected_output": "9999\n5050\n221\n2147483647",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1 9\n6 6\n8 1\n5 9\n9 8",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "7 5\n8 3\n1 4\n6 6\n1 9",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "8 8\n7 10\n9 4\n5 10\n6 3",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "64 85\n52 71\n42 65\n23 76\n37 56",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "3 43\n17 10\n33 5\n14 52\n72 46",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "51 81\n29 76\n38 87\n58 76\n88 76",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "80 24\n42 65\n89 92\n52 58\n62 35",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "18 89\n79 65\n82 19\n8 61\n97 23",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "460 434\n348 468\n51 126\n365 123\n454 468",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "94 310\n364 170\n258 78\n327 224\n421 439",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "194 284\n323 397\n473 102\n465 271\n167 327",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "123 71\n444 428\n464 94\n214 354\n202 254",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "404 72\n249 258\n238 187\n293 222\n487 487",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "406 223\n73 116\n176 275\n284 250\n314 161",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "470 51\n468 491\n313 365\n93 360\n401 494",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 1000\n1 999\n1 1000\n2 1\n1 999",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 1\n1 999\n1000 1\n2 999\n2 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:14",
  "total_test_cases": 20
}
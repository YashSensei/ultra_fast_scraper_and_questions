{
  "problem_code": "problems",
  "title": "Rectangles in a Matrix",
  "tags": [],
  "text": "In a matrix with n rows and m columns, (i, j) is the cell in i-th row and j-th column (0 ≤ i < n, 0 ≤ j < m). A rectangle (r0, r1, c0, c1) in a matrix is the set of cells (i, j) where r0 ≤ i < r1 and c0 ≤ j < c1. (0 ≤ r0 < r1 ≤ n, 0 ≤ c0 < c1 ≤ m). Two rectangles are called independent if the intersection of their cell set is empty.Given n, m, k, find the number of ways to choose k independent rectangles from a n×m matrix. The order of these k rectangles doesn't matter, see sample for further clarification.InputOne line contains three integers n, m, k (1 ≤ n, m ≤ 1000, 1 ≤ k ≤ 6).OutputFor each test case, output the number of ways, modulo 109+7.ExampleInput:2 2 4\r\n10 10 1Output:1\r\n3025ExplanationFirst case: You have to find the number of ways of choosing 4 independent rectangles from a 2×2 matrix.\r\nThe only way to do this is to choose each cell as a separate rectangle.Constraints(1 ≤ n, m ≤ 1000, 1 ≤ k ≤ 6).\r\nTotal number of test cases is around 150. Not all the test cases are included.",
  "sample_input": "Input:2 2 4\r\n10 10 1Output:1\r\n3025",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/RECTMAT",
  "scraped_at": "2025-08-17 00:33:38",
  "test_cases": [
    {
      "input": "2 2 4\r\n10 10 1",
      "expected_output": "1\r\n3025",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4 6 8\n9 6 3",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "10 1 2\n8 10 4",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "10 4 4\n8 7 3",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "14 96 70\n67 18 32",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "41 8 83\n86 63 59",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "85 45 40\n85 40 97",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "6 5 69\n29 57 90",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "75 17 27\n99 11 88",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "128 350 402\n396 57 291",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "139 54 403\n277 233 434",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "320 279 263\n180 162 260",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "438 370 428\n295 293 334",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "437 61 175\n403 272 377",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "493 282 453\n367 324 287",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "346 478 163\n362 342 143",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000\n1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000\n1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 1000 1000\n2 1 999",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 2 1000\n999 1000 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:17",
  "total_test_cases": 20
}
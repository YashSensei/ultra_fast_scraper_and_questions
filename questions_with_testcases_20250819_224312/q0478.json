{
  "problem_code": "problems",
  "title": "Bases",
  "tags": [],
  "text": "What do you get if you multiply 6 by 9? The answer, of course, is 42, but only if you do the calculations in base 13.Given an integerB≥ 2, thebaseBnumbering systemis a manner of writing integers using only digits between 0 andB-1, inclusive. In a number written in baseB, the rightmost digit has its value multiplied by 1, the second rightmost digit has its value multiplied byB, the third rightmost digit has its value multiplied byB2, and so on.Some equations are true or false depending on the base they are considered in. The equation 2+2=4, for instance, is true for anyB≥ 5 - it does not hold in base 4, for instance, since there is no digit '4' in base 4. On the other hand, an equation like 2+2=5 is never true.Write a program that given an equation determines for which bases it holds.InputEach line of the input contains a test case; each test case is an equation of the form \"EXPR=EXPR\", where both  \"EXPR\" are arithmetic expressions with at most 17 characters.All expressions are valid, and contain only the characters '+', '*' and the digits from '0' to '9'. No expressions contain leading plus signs, and no numbers in it have leading zeros.The end of input is indicated by a line containing only \"=\".OutputFor each test case in the input your program should produce a single line in the output, indicating for which bases the given equation holds.If the expression is true for infinitely many bases, print  \"B+\", whereBis the first base for which the equation holds.If the expression is valid only for a finite set of bases, print them in ascending order, separated by single spaces.If the expression is not true in any base, print the character '*'.ExampleInput:6*9=42\r\n10000+3*5*334=3*5000+10+0\r\n2+2=3\r\n2+2=4\r\n0*0=0\r\n=Output:13\r\n6 10\r\n*\r\n5+\r\n2+",
  "sample_input": "Input:6*9=42\r\n10000+3*5*334=3*5000+10+0\r\n2+2=3\r\n2+2=4\r\n0*0=0\r\n=Output:13\r\n6 10\r\n*\r\n5+\r\n2+",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/SAMER08B",
  "scraped_at": "2025-08-17 00:33:15",
  "test_cases": [
    {
      "input": "6*9=42\r\n10000+3*5*334=3*5000+10+0\r\n2+2=3\r\n2+2=4\r\n0*0=0\r\n=",
      "expected_output": "13\r\n6 10\r\n*\r\n5+\r\n2+",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3 9 4\nrilrgvkw\n6 3 5 8 5 6 8 10\nogu\n5 1 10\naglhotdvfh\n10 1 4\nowsl\n2 9 5\nyvoauykzn\nx",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "9 4 1\nqydrwwwpw\n1 6 1 5 1 3 9 1\nabbusepgjodmomskq\n1 7 4\nvgj\n4 9 8\nycfpz\n1 1 10\nnp\nd",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "2 1 9\npu\n8 5 2 8 5 7 4 3\neuipvofykdvbfrp\n10 5 3\nkwbfdyrfyy\n1 10 5\njz\n1 8 1\nuhnw\ng",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "75 50 100\nbaa\n54 42 75 34 64 97 49 83\noivpemhsveu\n65 80 13\nyrnbs\n94 77 59\nuxzugdncyu\n23 18 59\ncxricmxy\nus",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "4 4 93\nrfvipzz\n94 79 46 57 91 2 25 34\nmkmvxoymcvzdwbgdang\n56 99 71\ntbwl\n60 28 17\nei\n79 49 55\nunqevc\njy",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "41 5 32\nmfplyzzl\n32 38 16 40 57 54 89 52\njotat\n42 64 59\nnutlyas\n79 21 67\ny\n20 43 22\nizfqggkmd\nx",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "62 5 74\nltrcijixtp\n42 44 13 89 23 6 88 3\nwvttjksiuufbyobpzdvf\n32 37 25\njfuucwm\n55 46 10\no\n10 57 69\ngr\ns",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "60 74 68\nqgbqqigwav\n62 81 41 63 60 6 97 86\nmgla\n65 64 7\nafea\n100 66 91\nvwhjqzoq\n17 29 82\nprhds\nh",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "224 174 53\nqjqirdb\n136 184 448 123 366 122 392 218\npzqnstcjvakqdeul\n324 387 414\nt\n266 160 95\necwvlupoxk\n416 349 308\nj\nb",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "388 62 95\ngx\n435 94 445 346 352 452 477 229\ngnibjlcw\n121 157 388\nezkggpoklj\n369 464 168\nyska\n66 127 274\nijsopogyr\nut",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "260 217 479\nrkyx\n150 55 146 293 420 339 430 393\nfhulzqxoltupnzliogdh\n153 224 254\nfgay\n211 184 358\neptor\n445 200 135\noero\nnu",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "95 134 436\nuhutemq\n131 468 271 154 143 55 91 269\nvuog\n270 423 166\nzmaelnj\n238 362 139\nnnmjyiwdz\n382 128 431\npflt\no",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "400 500 166\ntnezkd\n311 435 126 127 439 313 405 442\ny\n122 351 316\nllqof\n211 195 147\nrin\n265 436 450\ny\nfq",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "422 435 239\nnefcukog\n209 461 257 144 474 119 382 254\ny\n72 202 52\nghs\n114 198 401\naznv\n193 335 320\nchrpuiuhq\nnt",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "266 80 249\nxaauonghhoj\n298 496 450 107 333 94 415 482\nerblvcv\n389 319 87\nnkeurdd\n283 393 172\nrpwlnhmqf\n126 389 401\nehwbj\nj",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000\nqm\n1000 1000 1000 1000 1000 1000 1000 1000\ncds\n1000 1000 1000\nt\n1000 1000 1000\nh\n1000 1000 1000\nwplrelrt\nn",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000\navpbcm\n1000 1000 1000 1000 1000 1000 1000 1000\newmgjdbciuxlj\n1000 1000 1000\nk\n1000 1000 1000\nzmcg\n1000 1000 1000\nh\ncb",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "999 1000 2\ninjodgdica\n1000 1000 1000 1 1000 2 2 1000\ndirk\n2 1 1000\ncjsfftcfqn\n1 1 999\nbibhycffl\n1 1000 2\nhnfz\nkf",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "999 999 999\naixwz\n999 1000 1000 1000 2 1000 999 1\nzevjelzmybpcrfyqrbul\n2 1 1000\nusf\n1000 2 999\nigtxvbrmc\n1000 1000 999\ncjpkuqfs\nij",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:14",
  "total_test_cases": 20
}
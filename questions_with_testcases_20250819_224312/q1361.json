{
  "problem_code": "problems",
  "title": "Win gold medal",
  "tags": [],
  "text": "In a game there are a finite number of levels. In order to go to the next level, a player has to clear all the preceding levels. A player can't go further, if  he fails to clear the level. Each player has a probability p of clearing the level (which is independent of the other players and the level number). For  example, if p =1/2 there is a probability 2-n-1that a particular game will have exactly n levels cleared. A player will get the gold medal if he clears the maximum number of levels. If the maximum number of levels reached is common between two or more players, then no one wins the gold medal. What is the probability that a gold medal is given to any player?InputThe first line contains T - the number of test cases. Each test case has p n m - probability of clearing a level for each player, number of players, number of levels in the game.OutputT lines each with the probability that gold medal is given rounded off to 4 significant digits.Constraints1 ≤ T < 100001 ≤ n < 10001 ≤ m < 1000 ≤ p ≤ 1.0ExampleInput:60.43 3 20.5 3 40.2 3 40.1 4 50.9 3 31.0 4 4Output:0.44900.62440.41840.30140.02750.0000",
  "sample_input": "Input:60.43 3 20.5 3 40.2 3 40.1 4 50.9 3 31.0 4 4Output:0.44900.62440.41840.30140.02750.0000",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/WINGOLD",
  "scraped_at": "2025-08-17 00:33:24",
  "test_cases": [
    {
      "input": "60.43 3 20.5 3 40.2 3 40.1 4 50.9 3 31.0 4 4",
      "expected_output": "0.44900.62440.41840.30140.02750.0000",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "8 8 1 10 7 2 8 7 2 2 7 1 4",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "4 5 7 1 6 6 4 4 2 3 9 5 4",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "7 3 9 4 2 5 10 9 7 3 9 5 6",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "29 17 28 6 77 80 68 14 29 51 66 13 29",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "56 66 97 11 32 93 67 29 96 11 92 48 77",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "4 26 68 93 14 23 86 92 54 58 89 63 92",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "21 40 87 51 7 93 39 92 73 84 47 97 23",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "27 21 7 75 6 48 61 35 87 54 25 55 49",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "4562 4645 510 774 4204 2064 4997 3508 3395 1141 2277 3669 1491",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "2328 1387 2406 961 1505 2555 2990 1828 3944 4858 3902 4060 1690",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "4268 4013 3438 3643 2913 4923 653 4408 2969 1660 2513 2337 1005",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "4364 2536 1909 3959 4635 2485 4616 2890 2356 4009 3556 1088 1145",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "976 4468 3730 587 4076 3644 784 2577 2747 4827 4410 3642 1477",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "4756 3006 3301 869 2344 1075 2621 4961 2213 4001 3133 3759 4401",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "2261 3429 2304 1527 2895 3966 1292 592 1538 2727 2484 2169 4177",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "10001 10001 10001 10001 10001 10001 10001 10001 10001 10001 10001 10001 10001",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "10001 10001 10001 10001 10001 10001 10001 10001 10001 10001 10001 10001 10001",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "10001 10000 10000 1 2 10000 10000 2 2 10001 1 10001 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "10001 10000 10001 1 2 1 10001 2 1 2 10000 1 10000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:17",
  "total_test_cases": 20
}
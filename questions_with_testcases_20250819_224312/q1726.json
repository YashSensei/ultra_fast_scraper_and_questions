{
  "problem_code": "problems",
  "title": "Watching the game",
  "tags": [],
  "text": "In the kingdom of Nlogonia there is a lake known as the \"Big O\" because of its perfectly round shape. On the side of this lake there areNhouses, each of them a distance of one nlogonic unit apart from its neighbors. The houses are numbered from1toNin clockwise order, as can be seen in the following figure forN = 8.In this way, ifi < jthe distance in clockwise order from houseito housejisj-i, whereas the corresponding distance in counterclockwise order isN - j + i. Note that the distance from a house to itself isNin both directions.It is well known that the people of Nlogonia are avid football fans, so when a family moves to a house on the side of the lake it is very important for them to know who are their closest neighbors that follow the same team as they do. This is not always easy, since there may be many houses around the lake, many different football teams in Nlogonia, and a lot of moving around. Given a sequence ofMmovings, people who live on the shore of the lake want to welcome each new family arriving by telling them the distance from their new home to the closest houses that follow the same team as they do, both in clockwise and counterclockwise order. Note that if there is no other house on the shore of the lake whose family follows the same team as the newly arrived, said distance shall beNin both directions, as the closest house would in fact be the same house involved in the moving. Do you want to take part in the welcoming committee?In Nlogonia there areFfootball teams, identified by different integer numbers from0toF-1. Because we don't want you to waste any time going from door to door asking which team is followed in each house, we will assume that initially the family living in house numberiis a fan of team numberei, being this number generated in pseudo-random fashion by the recursive formulae1= Aandei= (B × ei-1+ C) mod Ffori = 2, 3, ..., NwhereA,BandCare constants and the expressionx mod yrepresents the remainder of the integer division ofxbyy.InputThe first line contains two integer numbersNandF, respectively indicating the number of houses around the lake and the number of football teams in Nlogonia (3 ≤ N≤105and1≤F≤106). The second line contains three integer numbersA,BandC, which determine which team is followed by the families initially living around the lake as is described in the problem statement (0≤A, B, C < F).The third line contains a single integer numberM, representing the number of movings that will be happening (1≤M≤105). Each of the followingMlines describes a moving using two integer numbersIandE, meaning that a family following teamEis moving to house numberI(1≤I≤Nand0≤E < F). The movings appear in the order that they occur, and should be taken into account by the committee for further welcomings.OutputPrintMlines, thei-th of them indicating the result of thei-th moving described in the input. Each line should contain two integer numbersdccwanddcw, representing the distances in nlogonic units from the house involved in the moving to the first house whose family follows the same team, in counterclockwise and clockwise order respectively.ExampleInput:5 10\r\n1 1 1\r\n6\r\n1 1\r\n2 2\r\n3 1\r\n4 2\r\n5 1\r\n3 1Output:5 5\r\n5 5\r\n2 3\r\n2 3\r\n2 1\r\n2 2",
  "sample_input": "Input:5 10\r\n1 1 1\r\n6\r\n1 1\r\n2 2\r\n3 1\r\n4 2\r\n5 1\r\n3 1Output:5 5\r\n5 5\r\n2 3\r\n2 3\r\n2 1\r\n2 2",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/TAP2013D",
  "scraped_at": "2025-08-17 00:33:37",
  "test_cases": [
    {
      "input": "5 10\r\n1 1 1\r\n6\r\n1 1\r\n2 2\r\n3 1\r\n4 2\r\n5 1\r\n3 1",
      "expected_output": "5 5\r\n5 5\r\n2 3\r\n2 3\r\n2 1\r\n2 2",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "10 6\n2 6 5\n2\n10 10\n2 4\n3 1\n1 7\n6 9\n10 8",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "9 2\n1 2 9\n10\n7 1\n7 9\n5 4\n10 4\n6 10\n3 8",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "9 10\n8 9 10\n6\n4 5\n1 5\n6 2\n8 4\n10 1\n10 5",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "87 64\n26 86 38\n36\n56 96\n80 88\n76 77\n69 39\n58 89\n100 66",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "56 13\n68 13 99\n88\n44 26\n73 39\n75 25\n69 7\n32 80\n72 96",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "64 36\n82 2 11\n59\n25 44\n54 68\n92 10\n73 8\n66 63\n48 14",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "51 57\n12 56 6\n8\n51 75\n94 41\n97 37\n70 82\n30 73\n47 74",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "60 96\n100 51 32\n2\n8 55\n87 1\n22 8\n88 20\n32 96\n75 13",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "9 9\n11 49 50\n15\n22 6\n27 34\n41 23\n40 39\n12 14\n13 37",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "37 23\n38 42 16\n29\n15 45\n15 40\n41 17\n39 21\n50 14\n22 29",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "39 31\n12 13 24\n12\n37 17\n27 11\n42 52\n36 17\n42 48\n47 51",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "34 26\n40 10 34\n38\n48 12\n51 48\n49 34\n28 26\n47 21\n10 46",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "15 28\n11 36 8\n15\n45 38\n29 52\n19 5\n50 13\n41 35\n36 20",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "40 39\n34 25 35\n42\n43 50\n5 29\n29 22\n46 34\n15 44\n23 21",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "24 29\n38 38 11\n28\n32 48\n52 45\n33 19\n6 15\n13 26\n24 6",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "105 105\n105 105 105\n105\n105 105\n105 105\n105 105\n105 105\n105 105\n105 105",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "105 105\n105 105 105\n105\n105 105\n105 105\n105 105\n105 105\n105 105\n105 105",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "104 104\n105 105 104\n104\n1 105\n1 2\n1 105\n1 2\n104 1\n2 105",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 104\n2 1 105\n105\n2 1\n105 2\n105 105\n1 104\n1 104\n104 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:18",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Loop Expectation",
  "tags": [],
  "text": "Consider the following pseudo-code:int a[1..N];\r\nint max = -1;\r\nfor i = 1..N:\r\n    if(a[i] > max):\r\n        max = a[i];Your task is to calculate the expected number of times the 'if' block of the above pseudo-code executes. The array 'a' is a random permutation of numbers from 1..N chosen uniformly at random.InputFirst line contains t, the number of test cases. t lines follow, each containing N, the number of elements in the array.1 ≤ t ≤ 1001 ≤ n ≤ 100,000OutputFor each test case, output a single decimal. Your answer should be within 10-6of the correct answer.ExampleInput:1\r\n2Output:1.5ExplanationFor N = 2, you can have the following two permutations: [1, 2] and [2, 1].In the first case theifblock gets executed 2 times, and in the second case theifblock gets executed 1 time. So the expected value is (2 + 1) / 2 = 1.5",
  "sample_input": "int a[1..N];\r\nint max = -1;\r\nfor i = 1..N:\r\n    if(a[i] > max):\r\n        max = a[i];",
  "sample_output": "Input:1\r\n2Output:1.5",
  "link": "https://www.spoj.com/problems/LOOPEXP",
  "scraped_at": "2025-08-17 00:34:00",
  "test_cases": [
    {
      "input": "int a[1..N];\r\nint max = -1;\r\nfor i = 1..N:\r\n    if(a[i] > max):\r\n        max = a[i];",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1\r\n2",
      "expected_output": "1.5",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "4\n6\n8\n9\n6",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "4\n9\n9\n3\n5",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n9",
      "expected_output": "To be computed",
      "type": "small_case_5",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "9\n86774511\n96669268\n10789460\n37941337\n19027898\n75161409\n60904655\n9621631\n58870409",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "11\n68524718\n44216704\n63027733\n99993893\n53558751\n79361030\n63994550\n22684480\n52625535\n88389193\n87735519",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "11\n33700330\n68007565\n92573032\n85586660\n12639173\n4914232\n58702899\n22427396\n23741546\n74684121\n51350255",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "12\n57934933\n87654494\n32983768\n23059627\n47896120\n20581864\n21835615\n11229236\n56341601\n10774101\n72383661\n33579818",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "11\n12181958\n6884645\n5639898\n50972537\n49127381\n92052175\n28830292\n15402124\n69236499\n41407807\n97720343",
      "expected_output": "To be computed",
      "type": "medium_case_10",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "92\n75174\n54066\n77467\n5290\n92204\n70758\n94581\n60560\n89455\n59333\n77337\n42008\n82426\n66370\n1355\n26504\n86439\n13907\n45766\n92254\n64172\n40736\n92927\n70142\n93424\n46577\n23733\n17307\n19595\n17818\n10797\n35617\n64980\n23132\n96858\n4656\n11162\n59625\n22028\n27636\n15546\n66755\n58886\n79532\n35007\n89507\n34268\n9695\n88224\n98806\n25416\n57178\n20476\n25885\n53845\n37463\n5765\n39456\n36889\n89321\n56759\n38738\n33275\n15912\n21737\n93957\n30129\n1161\n18591\n46398\n55493\n51278\n31067\n40862\n57989\n28278\n72464\n48145\n27479\n22533\n3568\n85686\n82267\n48013\n99086\n68755\n46248\n24179\n31523\n11023\n62747\n41174",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "49\n79532\n69268\n1305\n49976\n30569\n22178\n99619\n53634\n59409\n33616\n13221\n26656\n54607\n71193\n66081\n1167\n6419\n7988\n59580\n22714\n28767\n82893\n48566\n10613\n22572\n7147\n65435\n74920\n74110\n65560\n53995\n66920\n79101\n56534\n40982\n29387\n64066\n24253\n6338\n33408\n71003\n9148\n18795\n23344\n15452\n18635\n53994\n90989\n96464",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "91\n57451\n37094\n44875\n18964\n2044\n18937\n47454\n24838\n36348\n45330\n20258\n562\n70326\n52075\n34951\n54967\n87615\n14191\n78051\n1290\n3041\n32837\n35930\n84745\n51624\n14764\n63345\n94460\n30543\n8772\n74853\n24388\n35785\n32384\n86158\n10500\n78327\n80456\n16266\n47248\n71063\n65131\n72150\n98296\n5155\n22520\n15593\n12058\n72185\n14130\n52106\n87288\n67300\n80107\n48556\n48724\n83651\n2621\n46520\n15197\n65364\n62798\n17593\n46988\n46541\n97344\n80542\n88287\n88148\n44696\n39567\n2529\n80630\n24700\n4155\n99578\n32459\n84703\n8980\n25548\n56729\n76194\n30568\n40837\n36550\n93013\n42569\n47019\n1637\n18874\n70864",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "44\n16244\n65160\n67180\n73878\n69721\n39952\n31141\n67383\n50177\n63100\n90954\n99645\n35811\n64931\n98658\n7699\n60714\n51425\n99552\n8247\n50809\n67960\n19014\n24618\n24859\n36527\n49689\n3802\n61583\n86066\n6438\n39105\n75907\n67877\n32279\n84436\n86006\n5526\n51477\n84299\n95819\n18128\n89249\n68255",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "90\n52857\n74880\n96286\n83273\n18515\n82579\n40914\n67712\n4063\n514\n34846\n88363\n29833\n20760\n40065\n20663\n4473\n79325\n4540\n59592\n20985\n20555\n1637\n52331\n40751\n8860\n33014\n35449\n22989\n89502\n32006\n21577\n24056\n41084\n76931\n61336\n8812\n93668\n77953\n11877\n33292\n79986\n55949\n6730\n75722\n71068\n50410\n93085\n37612\n74027\n28608\n99130\n61433\n82421\n29285\n66902\n80149\n60290\n6038\n80076\n23751\n85741\n36416\n73788\n28604\n63182\n51724\n63815\n46085\n38129\n87512\n38944\n34329\n2817\n24614\n1626\n86275\n27460\n1007\n68249\n51566\n60107\n7771\n25158\n58629\n95172\n9583\n67018\n86012\n85117",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "21\n69317\n1798\n40568\n81234\n60213\n48351\n26274\n63753\n26721\n2824\n31212\n60820\n9766\n49516\n57257\n85906\n927\n35490\n74279\n70600\n7039",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "93\n4732\n9971\n55493\n72701\n9422\n6203\n37162\n63723\n12770\n85979\n92003\n59682\n38684\n29462\n71288\n11898\n20256\n60625\n37373\n35491\n20\n14738\n18373\n35771\n3984\n2958\n60046\n78535\n8780\n73672\n78577\n75543\n86769\n84232\n44856\n15766\n81535\n82179\n87239\n80223\n60992\n16552\n84328\n33977\n5271\n16827\n36455\n54381\n58080\n41322\n57764\n6673\n44433\n65950\n6129\n48852\n39521\n20415\n52369\n2189\n44521\n80867\n51106\n47088\n56574\n4572\n58490\n57859\n95482\n72709\n80751\n95120\n8826\n96194\n17106\n58594\n64015\n47226\n1512\n26804\n22247\n81584\n99152\n57188\n41495\n4220\n18573\n92607\n62318\n16831\n26756\n43017\n7953",
      "expected_output": "To be computed",
      "type": "large_case_17",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "100\n95250545\n62055187\n27000491\n23610771\n54157101\n20898285\n38149049\n99229574\n8331146\n56893690\n79898237\n25486819\n13694698\n74275420\n98473654\n19231602\n27098519\n12714884\n6344609\n67526328\n61966014\n84152595\n58344824\n85872807\n61103829\n1287029\n18922414\n35872906\n88874155\n79650525\n85777687\n72913490\n24587283\n93894839\n48032301\n61082527\n29173928\n40768852\n59230727\n20091206\n29388813\n72965546\n22459256\n21744104\n23992070\n1562936\n29270054\n58678654\n21919654\n21023308\n48743026\n45126799\n79767561\n63526732\n77380486\n21690008\n21603207\n78755492\n78593767\n49677035\n82260676\n10221510\n58946138\n95704943\n71211889\n63814108\n67623090\n11705148\n20078116\n95370774\n11249460\n63654045\n94505355\n50259675\n56857005\n89109419\n27214241\n10386674\n40478877\n80045013\n58916242\n76091884\n96453726\n38752061\n92301341\n66486887\n90263644\n53252753\n72898154\n86548032\n70072556\n88447640\n73059491\n55768195\n35358337\n84373501\n84085922\n9014594\n84208410\n26387002",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "100\n11245949\n5919488\n23001968\n96686960\n10439742\n95797824\n52353150\n53024899\n60979423\n57849021\n5786614\n44962360\n21338590\n44807158\n64093309\n11706122\n80990274\n52605252\n92609920\n38972831\n49900620\n82203971\n26600110\n47077363\n33947514\n65708159\n46342796\n17577884\n33941310\n24711108\n29926071\n64256361\n89959901\n27826933\n21788347\n34759216\n84654125\n404972\n19823977\n28768430\n32769589\n92337905\n71420353\n78761454\n97639769\n65427841\n59046484\n76732985\n64876689\n13532079\n70610093\n76851119\n42431836\n64593794\n92914251\n92322172\n13456468\n89681357\n21901919\n90775185\n44013590\n68226871\n32004329\n19321934\n13700137\n71703161\n88014229\n22686299\n34354365\n30059067\n18325614\n64356963\n52454014\n67259365\n48575636\n86090518\n91571160\n49979614\n24358789\n83418565\n97796947\n27235207\n99067476\n6364\n45214386\n7880667\n13890286\n9994420\n37546712\n90364410\n64268697\n77556296\n91162055\n15704100\n21613319\n69614342\n46414360\n64940242\n81973618\n60596041",
      "expected_output": "To be computed",
      "type": "max_case_19",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "100\n42314249\n100000000\n1\n984789\n1\n47535222\n1\n21917795\n46260195\n1\n1\n52118946\n11468560\n100000000\n4854748\n100000000\n75717385\n1\n1\n100000000\n25036875\n1\n1\n100000000\n100000000\n13349718\n100000000\n100000000\n1\n100000000\n83540947\n1\n1\n63453229\n83117530\n1\n99293184\n32670131\n11533134\n1\n100000000\n1\n100000000\n54562556\n96520327\n100000000\n100000000\n100000000\n100000000\n100000000\n38753847\n100000000\n100000000\n80229219\n100000000\n26918599\n1\n54334969\n77708460\n48625422\n100000000\n40223378\n59695491\n1\n1\n94720582\n100000000\n1\n90197332\n30359352\n25977251\n100000000\n93029355\n1\n1\n1\n100000000\n100000000\n92074785\n1\n1\n1\n11530762\n100000000\n100000000\n80595260\n1\n65713920\n68548104\n100000000\n100000000\n1\n1\n73749839\n1\n10106205\n100000000\n60845244\n11712228\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 100)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:19",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Bye Bye Cakes",
  "tags": [],
  "text": "John is moving to a different city and he wants to use all his perishable food before doing it, to avoid wasting. Luckily all he has now is eggs, flour, sugar and milk, so he is going to make his famous cakes and give them to his friends as a goodbye gift. John only knows how to make an entire cake and not half a cake, a third of a cake, or any other portion. So, he will buy whatever is needed of each ingredient so that he can make an integer number of cakes and have nothing left. Of course, he wants to spend as little money as possible. You must help John to decide how much he should buy of each ingredient.InputThe input contains several test cases. Each test case is described in a single line that contains eight integers E, F, S, M, E', F', S' and M' separated by single spaces. Values E and E' are numbers of eggs, F and F' are grams of flour, S and S' are grams of sugar, and M and M' are centiliters of milk. For each ingredient, X is the amount John has (0 ≤ X ≤ 1000), while X' is the amount needed to make a single cake (1 ≤ X ≤ 1000). The last line of the input contains the number −1 eight times separated by single spaces and should not be processed as a test case.OutputFor each test case output a single line with four non-negative integers separated by single spaces, representing the amount of each ingredient John needs to buy, in the same order and units as the input.ExampleInput:2 3 4 5 1 1 1 13 6 9 0 1 2 3 4-1 -1 -1 -1 -1 -1 -1 -1Output:3 2 1 00 0 0 12",
  "sample_input": "Input:2 3 4 5 1 1 1 13 6 9 0 1 2 3 4-1 -1 -1 -1 -1 -1 -1 -1Output:3 2 1 00 0 0 12",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/BYECAKES",
  "scraped_at": "2025-08-17 00:33:05",
  "test_cases": [
    {
      "input": "2 3 4 5 1 1 1 13 6 9 0 1 2 3 4-1 -1 -1 -1 -1 -1 -1 -1",
      "expected_output": "3 2 1 00 0 0 12",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1 3 2 9 3 3 6 9 8 8 10 10 9 9 8 7 5 5 6 3 4 2 3",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "7 1 10 8 9 8 2 6 9 6 2 10 3 3 9 2 4 8 6 10 3 10 9",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "4 7 7 5 9 9 10 7 6 10 1 10 1 6 6 2 8 4 5 4 1 4 4",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "17 60 26 42 94 30 51 75 51 10 81 76 80 60 77 70 12 84 99 45 65 24 51",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "86 69 76 90 42 42 27 62 85 59 78 62 5 41 45 48 43 14 57 96 45 93 57",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "2 20 44 63 34 89 77 22 46 89 73 81 3 53 43 37 97 43 85 45 18 7 7",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "18 1 65 61 53 89 16 12 18 97 29 78 5 5 46 71 64 23 41 100 75 98 69",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "88 60 75 16 97 74 4 39 38 37 58 65 61 27 98 55 49 44 20 24 94 100 76",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "156 479 328 256 276 482 325 275 287 367 401 377 310 124 408 127 453 194 248 448 347 299 87",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "151 251 98 412 383 195 54 216 206 469 197 434 306 351 116 312 293 106 439 83 101 275 283",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "347 415 176 168 68 323 119 368 355 158 201 498 382 228 269 216 326 266 233 131 370 446 139",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "353 65 172 56 270 427 254 405 303 124 498 124 427 329 72 139 237 435 366 457 246 491 134",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "488 265 470 352 336 406 205 119 167 125 290 434 405 353 361 134 310 431 344 241 499 401 450",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "241 168 362 72 279 225 436 173 138 224 414 163 473 454 383 261 127 123 280 206 88 172 204",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "277 308 94 332 414 170 242 104 104 407 116 401 311 163 399 227 95 247 95 71 108 437 271",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1 1000 2 999 1 999 2 999 999 999 999 999 2 999 1 999 2 1 1 999 1000 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1000 999 1 2 1000 2 1000 1 1000 2 1 999 1000 2 999 1 999 999 1000 1 2 999 1000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:15",
  "total_test_cases": 20
}
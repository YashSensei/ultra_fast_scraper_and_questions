{
  "problem_code": "problems",
  "title": "The GbAaY Kingdom",
  "tags": [],
  "text": "Jiajia is the king of the GbAaY Kingdom. He always squeezes his 20 ministers as coolies.\r\n    There arencities andmtwo-way roads connecting cities in the kingdom.\r\n    Because of the increasing cost of fuel, he wants to simplify the road system\r\n    in the GbAaY Kingdom.\r\n    Thus, some roads will be removed. But he requests the ministers to guarantee\r\n    that there is always a path between any two cities.\r\n    GbAaY Minister Loner suggests Jiajia for the convenience of the traffic management,\r\n    the farthest distance between cities should be minimal. Unhesitatingly, Jiajia agrees this resolution.\r\n    As the GbAaY Kingdom's minister (cooly), you must work hard for Jiajia to make the simplification plan.InputThe first line contains two integersn,m(1 ≤n≤ 200,n- 1 ≤m≤ 20000).\r\n    Each line of the followingmlines contains three integersu,v,w(u≠v, 0 ≤w≤ 105).\r\n    They denote there is a road with lengthwbetween cityuand cityv.OutputThe first line contains one integer which is the farthest distance between cities after the simplification.\r\n    Each line of the follown- 1 contains two integersu,v(u<v).\r\n    They denote there is a road between cityuand cityvin the simplification plan.\r\n    If there are many optimal solutions, any of them will be accepted.ExampleInput:3 3\r\n1 2 1\r\n2 3 1\r\n1 3 1Output:2\r\n1 2\r\n1 3",
  "sample_input": "Input:3 3\r\n1 2 1\r\n2 3 1\r\n1 3 1Output:2\r\n1 2\r\n1 3",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/PT07C",
  "scraped_at": "2025-08-17 00:33:38",
  "test_cases": [
    {
      "input": "3 3\r\n1 2 1\r\n2 3 1\r\n1 3 1",
      "expected_output": "2\r\n1 2\r\n1 3",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4 7\n9 5 10\n2 1 9\n1 8 7",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "5 7\n2 4 3\n4 6 4\n4 5 5",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "3 7\n4 10 8\n5 8 9\n8 3 1",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "88 30\n64 82 19\n10 75 28\n34 56 11",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "95 24\n33 9 90\n56 13 73\n60 56 68",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "55 21\n47 37 51\n86 90 31\n22 13 85",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "25 86\n83 92 93\n17 43 33\n5 85 63",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "87 61\n37 63 8\n82 92 41\n45 10 33",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "81 38\n90 27 48\n67 48 19\n16 97 36",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "66 73\n69 10 16\n90 70 82\n66 43 33",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "19 71\n30 81 86\n66 81 92\n10 43 74",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "20 51\n40 28 27\n45 69 77\n75 38 78",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "72 52\n63 100 22\n25 70 52\n20 72 80",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "73 85\n43 97 19\n60 33 15\n67 34 79",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "56 23\n61 88 48\n77 70 25\n15 31 28",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "200 200\n200 200 200\n200 200 200\n200 200 200",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "200 200\n200 200 200\n200 200 200\n200 200 200",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "199 200\n200 1 1\n2 199 1\n2 199 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "199 200\n199 200 2\n199 200 200\n2 1 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:16",
  "total_test_cases": 20
}
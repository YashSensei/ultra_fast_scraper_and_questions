{
  "problem_code": "problems",
  "title": "Bacterial",
  "tags": [],
  "text": "In the biology laboratory we are observing several bacterial \r\n        samples, and under \r\n                the microscope we have them shaded with different colors to see them expanding \r\n                their territory on the plate.It is interesting to know that the \r\n        bacterial are \r\n                quite 'friendly' that once they meet each other, they do not expand into each \r\n                other's occupation any more. The bacterial samples are expanding \r\n        at similar speeds and we take them as the same speed.Since the experiment is tedious and lengthy (Oh My \r\n                God! there are several thousand samples at our pick), we are going to run a \r\n                simulation based on this reality, taking the variable that these \r\n        samples may be planted in different starting spots.We are using rectangular plates and \r\n        bacterial racing is bounded within the plate.Input formatThere are multiple test cases (about 20000 of them) each taking the following format:one line with two integers between 1 \r\n        and 1000 inclusive indicating width and height of the plateone line with one integer between 1 and 100 inclusive indicating the \r\n        number of bacterial samplesfor each bacterial sample there is one line with two integers \r\n        indicating the sample's position:x y, where x, y specify a position within or on the bound of the \r\n        plate.The plate lies in such a coordinating system that the lower-left corner of it is (0,0) and the upper-right corner is (width,height).A test with zero plate area marks the end of \r\n        the tests and this one shall not be processed.Between each input block there is a \r\n        blank line.Output formatGenerate a report having the samples sorted on their domination, \r\n        with each line taking the following format:<sample id> <area occupation>where: 'sample id' takes 3 columns right justified, with '0' padded to \r\n        the left as necessary, and 'area occupation' \r\n        takes 14 columns with 2 digit precision, right justified.The sample occupying more area shall be \r\n        reported prior to those occupying less. The input data will ensure \r\n        enough difference in areas to avoid ambiguity.Between each output block there shall \r\n        be a blank line.ExampleSample input:10 10\r\n2\r\n5 5\r\n0 0\r\n\r\n0 0Sample output:001         87.50\r\n002         12.50Warning: large Input/Output data, be careful with certain languages",
  "sample_input": "Sample input:10 10\r\n2\r\n5 5\r\n0 0\r\n\r\n0 0Sample output:001         87.50\r\n002         12.50",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/BAC",
  "scraped_at": "2025-08-17 00:33:48",
  "test_cases": [
    {
      "input": "Sample input:10 10\r\n2\r\n5 5\r\n0 0\r\n\r\n0 0Sample output:001         87.50\r\n002         12.50",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5 9\nciz tnuws 4\n7\n1 2\n4 3\n3 4 8 9\n7 pt mnbsgiobcp mbl\n1 6",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "2 7\nuuhbgf lcnbqx 3\n7\n7 7\n2 4\n5 3 2 2\n5 hjx l s\n1 1",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "8 2\nmcmmd mtfcm 10\n10\n9 2\n3 1\n6 9 10 3\n7 ayyohes s z\n9 7",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "62 77\nlarqxx aetfgahh 13\n76\n86 83\n82 82\n13 96 14 6\n4 ro yubjbaiwwg kpaq\n22 75",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "87 3\nukcc hoqglokx 89\n32\n21 6\n55 20\n53 70 86 86\n10 k scrawwydbf v\n31 36",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "35 38\nhul bm 99\n47\n98 91\n87 21\n62 99 92 42\n44 seojhx tbyda m\n92 79",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "1 35\nb iye 22\n73\n50 4\n35 29\n94 19 82 51\n92 x t aq\n49 53",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "32 71\nvvk macvbu 26\n30\n51 71\n69 9\n91 75 41 53\n52 bprfx xbxpgnvcr tjl\n16 31",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "498 227\nivycg frmeug 274\n411\n423 359\n108 348\n242 404 266 127\n173 zi qvmawgpmd ltidm\n425 454",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "486 292\nyxjdb umt 181\n416\n266 70\n70 57\n354 218 312 436\n267 rkbr crrzjquy d\n101 284",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "458 178\nzccijb cjvjgh 108\n340\n436 264\n308 243\n259 197 324 376\n401 qbbn vslmspr jg\n442 65",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "146 457\njmrwxv vehuo 114\n226\n344 456\n253 397\n75 281 110 245\n243 i gbnvqezm tfimq\n146 319",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "214 473\nzy js 324\n424\n149 96\n483 80\n96 75 136 208\n102 ki pbtf jnlg\n273 111",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "264 106\nldnw tpt 443\n341\n114 500\n148 81\n160 461 91 432\n403 nsx ovsgmc az\n329 327",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "130 178\nfcqx jpon 60\n210\n302 497\n147 498\n155 56 156 140\n311 jj hr xe\n297 206",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\nsm yk 1000\n1000\n1000 1000\n1000 1000\n1000 1000 1000 1000\n1000 riwbih vcpmzs ftppa\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\nsuf gnensg 1000\n1000\n1000 1000\n1000 1000\n1000 1000 1000 1000\n1000 crdg watuhrnkpw d\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 2\nfyn gefq 999\n999\n1000 2\n1 1000\n2 2 1 1\n1000 yiipite lqbpfmqz qnku\n2 1000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1000 999\no j 1\n1\n1 999\n999 999\n999 2 1 2\n1 imzh chinpzun icmaz\n999 999",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:18",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Polygon",
  "tags": [],
  "text": "You are given N different points in the plane. No three of them are collinear. Write a program that finds out the smallest area of a convex polygon with K vertices which are taken from the given points.InputTwo integers, N and K, are written on the first line in the standard input. It follows N lines, each containing a pair of coordinates for the corresponding given point. Every two numbers on a line in the input are separated by a space. \r\nConstraints: 0 < N < 50, 0 < K < 11. The coordinates of the given points are nonnegative integers, less than 9999.OutputYour program has to output an integer that is equal to the integer part of minimal area. If there does not exist any convex polygon as is described above, your program has to output 0.ExampleInput:4 3\r\n0 0\r\n1 1\r\n0 10\r\n10 0Output:5",
  "sample_input": "Input:4 3\r\n0 0\r\n1 1\r\n0 10\r\n10 0Output:5",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/POLYSSQ",
  "scraped_at": "2025-08-17 00:33:11",
  "test_cases": [
    {
      "input": "4 3\r\n0 0\r\n1 1\r\n0 10\r\n10 0",
      "expected_output": "5",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "9 2\n8 10\n9 6\n5 10\n3 10",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "7 10\n9 5\n9 1\n4 2\n7 2",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "5 4\n6 2\n3 8\n8 4\n3 1",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "34 35\n21 33\n26 14\n2 27\n3 17",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "21 10\n12 9\n30 19\n6 28\n29 43",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "49 11\n48 9\n17 14\n12 49\n43 32",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "48 11\n22 10\n25 48\n48 30\n33 43",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "43 43\n44 22\n1 18\n17 22\n22 36",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "19 5\n18 21\n15 22\n23 23\n10 9",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "14 22\n20 9\n17 11\n21 5\n2 17",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "22 9\n15 21\n6 19\n11 24\n10 9",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "15 25\n6 25\n17 21\n9 4\n5 7",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "9 11\n24 16\n9 22\n2 19\n2 7",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "25 3\n22 6\n4 13\n19 11\n25 11",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "3 2\n20 20\n2 6\n21 5\n17 2",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "50 50\n50 50\n50 50\n50 50\n50 50",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "50 50\n50 50\n50 50\n50 50\n50 50",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 49\n1 2\n2 2\n1 2\n2 50",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "49 50\n2 2\n2 2\n49 1\n1 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:13",
  "total_test_cases": 20
}
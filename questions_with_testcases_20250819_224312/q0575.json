{
  "problem_code": "problems",
  "title": "Blocks for kids",
  "tags": [],
  "text": "Wango is a brilliant maths teacher. He has two sons Kango and Dango. They are born two years apart on the same day! Kango is 9 and Dango is 7. Their birthdays are approaching again. Wango has to buy them a gift each. After long thought, this time Wango wanted to give each of his sons a piece of the Pango board and thus introduce them to higher mathematics.A size n (n ≥ 0) Pango board is a 2 by n rectangle of unit squares. A pango board has to be tiled with Pango pieces. Any tiling with the Pango pieces is acceptable. A size 0 Pango board exists and is unique and serves as an example of the empty set.Four types of Pango pieces are available.1     2     3     4\r\n==    ==    ==    ==\r\nXX    X     X     X\r\nXX    XX    XPicture of the four kinds of piecesWhen Wango presents a board to Kango or Dango, he has to tile the board completely with these pieces (unlimited number of pieces of each type are available) and then give them out. Note that pieces cannot be rotated for tiling. To cut costs (recession mind you), Wango decides to buy a single board of size N, then choose a k (0 ≤ k ≤ N), and give a size k board to Kango and a size (N-k) board to Dango, (tiled of course). Help him find the number of ways he can give the presents. Two ways are distinct if and only if either Dango gets a different board or Kango gets a different board. Two Pango boards are considered the same if and only if they have the same tiling (same set of tiles at the same places) from left to right (rotation of board is not allowed in comparing).InputThe input consists of a sequence of cases, one per line. Each case consists of one integer N (0 ≤ N ≤ 1000,000,000) representing the size of the board which Wango is going to buy. The input will end with a line containing -1. This case should not be processed. There will be a maximum of 10000 test cases.OutputOne line per case, outputting the number of ways Wango can distribute the presents to his sons modulo10,007.ExampleInput:012-1Output:1416ExplanationNumber of different 0-sized Pango boards = 1Number of different 1-sized Pango boards = 2Number of different 2-sized Pango boards = 6For N = 0, he has to give 0-sized boards to both his sons. He can do this in 1*1 = 1 wayFor N = 1, he has to give 0-sized board to one of his sons, and 1-sized board to the other, for a total of 2*1 +1*2 = 4 waysFor N = 2, he can give the presents in 6*1 + 2*2 + 1*6 = 16 ways.",
  "sample_input": "1     2     3     4\r\n==    ==    ==    ==\r\nXX    X     X     X\r\nXX    XX    X",
  "sample_output": "Input:012-1Output:1416",
  "link": "https://www.spoj.com/problems/PBOARD",
  "scraped_at": "2025-08-17 00:33:11",
  "test_cases": [
    {
      "input": "1     2     3     4\r\n==    ==    ==    ==\r\nXX    X     X     X\r\nXX    XX    X",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "012-1",
      "expected_output": "1416",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "9 8 5 3\ni uab hs ivem\nvuisf nyl x flph\noqey vozn bu",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "7 6 7 9\no ut lp mbg\nfvcf d icwc izut\nx n wrb",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "6 4 4 8\nej zszw rna wkwkg\no hbs xv knq\nqjk ocvu sbct",
      "expected_output": "To be computed",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "50 4 97 92\nnzyb n uri egt\nggm ymx zydc klba\nr xzopa wjdt",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "67 75 57 20\nozmog pva qwng iu\nkivm ko bwx wukll\nw bmu yzfa",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "74 29 99 60\nvbqjb c pz i\nyfo oez a ykk\nfdxg uglje ftnu",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "16 46 2 35\ndmtxu s nkp c\ntc vhwrb tx nc\npicuo fdy cu",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "61 72 11 53\nybgbn dwry fe v\nxi pgik enwx ajdsx\na kmkce qann",
      "expected_output": "To be computed",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "252 166 380 200\ntzuc jav nkd gyn\nxwiw hob kwsa foggc\ntmron uf kpj",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "242 487 306 165\nhfoda mwph q coiyp\nruai xteh in zrog\nvxde rlgt wnwyf",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "481 193 255 262\namkm uu i a\nik npvve pq piyo\nkfj shz fa",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "238 238 221 138\nfdvv oejlf ciztp n\nqbjw a pyg cdpp\nc l bmtz",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "452 262 245 294\nbam kh lu abtkb\nekzre lw ii thz\noprg icb sj",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "410 335 65 337\ncxdd vtcwx elwkc n\nbqstf nt yva tx\ne qf p",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "147 282 211 481\nbv l sot wnei\nw v ljc rus\nr ksc fj",
      "expected_output": "To be computed",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000\nc uct maeue cfq\nkbllg y rnui zw\nipbne qgxz euuii",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000\nwr ju mqb xn\ncffvu cxc igeux uxk\nlp btm oz",
      "expected_output": "To be computed",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "2 1 1 1000\nugelg zr g du\nimceo fy u hwkn\nwxtrd fanx sqn",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:14",
  "total_test_cases": 20
}
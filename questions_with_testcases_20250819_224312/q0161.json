{
  "problem_code": "problems",
  "title": "Prime Permutations",
  "tags": [],
  "text": "Given two positive integers n and m, we call m a prime permutation of n, if m is prime and can be obtained by zero or more permutations of the digits of n. Permutations with leading zeros are invalid.InputInput starts with a positive integer t<104in a single line, then t lines follow.Each of the t lines contains one positive integer n<107.OutputFor every n print the number of distinct prime permutations of n in a single line.ExampleInput:2\r\n13\r\n110Output:2\r\n1Hint:If your solution times out, you may try thetutorial versionwith a longer time limit.",
  "sample_input": "Input:2\r\n13\r\n110Output:2\r\n1",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/PRIMPERM",
  "scraped_at": "2025-08-17 00:33:04",
  "test_cases": [
    {
      "input": "2\r\n13\r\n110",
      "expected_output": "2\r\n1",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5\n5\n10\n1\n6\n10",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n3",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n3",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "13\n87023620\n85437399\n98604818\n97393594\n90598136\n24921078\n52106851\n20177734\n26893927\n2718161\n71118447\n7164541\n91822977",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "19\n85226189\n44033228\n23141366\n61658656\n38106531\n68700802\n65609664\n85942358\n71895933\n92697706\n76896970\n64618875\n45132870\n8538654\n56035502\n24023687\n47244659\n60369666\n60141911",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "6\n12295112\n98887620\n17458016\n22379088\n55240597\n97584172",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "15\n57584210\n84874668\n87891398\n46427176\n84751333\n88862476\n74392052\n34556161\n98938294\n56382792\n45427706\n89188207\n22870470\n98094265\n49994745",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "13\n37180105\n68875657\n11268268\n12396145\n64745334\n77823323\n68872526\n72705910\n22309294\n54572032\n59065698\n85059425\n21584278",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "78\n68762\n16263\n48004\n75579\n50318\n16086\n88462\n83529\n90296\n75564\n23335\n13558\n18222\n31149\n53377\n52217\n19030\n30767\n40720\n84333\n29918\n56047\n68031\n20548\n2319\n59883\n48082\n89588\n21410\n56904\n67757\n73521\n70928\n60435\n35381\n66354\n6041\n84687\n39925\n86224\n79689\n71319\n72573\n70411\n28227\n27556\n42149\n44173\n17528\n42311\n98962\n39916\n14760\n28855\n14012\n89234\n27043\n59048\n30404\n69139\n86046\n45590\n68577\n20025\n9953\n42544\n5732\n19267\n68623\n24852\n3000\n89678\n29126\n88961\n36514\n97859\n58856\n81100",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "94\n35390\n4736\n21967\n38607\n39292\n14343\n21091\n69680\n1496\n64158\n95615\n84588\n81002\n66182\n91885\n17083\n31096\n74883\n52559\n44088\n25856\n78742\n37516\n90093\n66608\n97067\n67486\n85658\n58534\n29516\n84359\n92511\n76328\n64648\n64912\n25209\n87918\n61227\n80386\n2024\n91642\n10255\n39544\n72815\n26721\n94929\n17123\n54409\n39555\n68825\n72157\n9968\n64338\n81536\n34014\n78618\n71973\n29108\n29750\n36101\n20476\n53721\n42926\n32926\n38525\n71291\n69477\n58182\n419\n86978\n92737\n51264\n36237\n24094\n54543\n75566\n56212\n17175\n62975\n66455\n94096\n98064\n54127\n35390\n88889\n34044\n21695\n21354\n64781\n48926\n81197\n47942\n30586\n31683",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "63\n3669\n23731\n94559\n26814\n1824\n32456\n93885\n92295\n63323\n63549\n3886\n60070\n79304\n75459\n78859\n87303\n13153\n36185\n45297\n83772\n88944\n74811\n45455\n95617\n71112\n1521\n29468\n81969\n95668\n75944\n78020\n68269\n1746\n67055\n41134\n33433\n77482\n57828\n50345\n38099\n72794\n22565\n18392\n1002\n23272\n57102\n91596\n22826\n27840\n61676\n48381\n60842\n22842\n50524\n95434\n82758\n23337\n65963\n2028\n4850\n45394\n8770\n87771",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "92\n50302\n88890\n10967\n38360\n32628\n24469\n32619\n8183\n45436\n83117\n45836\n13812\n85827\n64583\n68588\n55172\n45802\n45323\n66688\n53539\n45663\n39715\n60623\n61545\n52298\n96986\n56829\n70458\n75868\n19397\n32253\n10581\n47933\n45349\n75963\n15707\n35788\n87975\n70086\n82959\n26920\n58749\n63441\n22490\n13035\n30017\n99750\n93809\n6636\n35304\n42930\n47292\n43878\n52658\n63127\n10912\n93792\n45817\n51339\n1756\n76496\n1194\n97187\n18149\n76900\n73519\n53422\n16644\n74954\n92312\n56579\n10236\n77773\n9131\n94711\n26719\n68425\n39092\n22212\n67705\n89847\n68169\n92570\n1211\n99061\n30401\n6733\n33568\n18605\n26290\n66980\n55975",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "53\n89851\n40497\n76450\n91225\n6833\n24846\n24999\n79254\n7192\n8663\n91325\n79867\n37896\n13441\n60370\n54852\n49949\n72791\n404\n28549\n29060\n48911\n8298\n79589\n69585\n2490\n59063\n54024\n25154\n95026\n527\n61048\n34780\n72831\n86687\n54856\n68462\n28759\n29271\n29817\n67868\n6746\n60861\n13156\n78729\n11472\n57857\n86326\n35429\n25977\n345\n76579\n4176",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "99\n11156\n44775\n12096\n19299\n24222\n58044\n97269\n3709\n28754\n56146\n47034\n58172\n46731\n44140\n95105\n32690\n3657\n42105\n68152\n39412\n67421\n93620\n4447\n64740\n64511\n18884\n11679\n56408\n75380\n79504\n1442\n82535\n97368\n64487\n69436\n70191\n36152\n94604\n9405\n10949\n95740\n65896\n22746\n72799\n13228\n2859\n35277\n29662\n11560\n77663\n76588\n33820\n60010\n9267\n88050\n36225\n37460\n55908\n91022\n69628\n24034\n41666\n68097\n24850\n28324\n68186\n81940\n90700\n21319\n48688\n46322\n38370\n48213\n26823\n46781\n59834\n14241\n35784\n24238\n57089\n73641\n14256\n86122\n84068\n45977\n77683\n46659\n58143\n71285\n44828\n16476\n33911\n2449\n54835\n1433\n95453\n42024\n53114\n50910",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "57\n37459\n21266\n69118\n58611\n40819\n84727\n55274\n77111\n49297\n36180\n61641\n21141\n35285\n67697\n34516\n49990\n68356\n17862\n94465\n93999\n41723\n66889\n81083\n43742\n50153\n25102\n92928\n68893\n94733\n19639\n29313\n28794\n171\n32596\n7031\n11700\n78446\n94934\n93637\n46197\n56144\n99665\n76831\n2169\n64804\n78470\n37389\n62326\n91461\n86647\n73007\n39496\n3638\n55104\n82115\n2936\n18353",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "107\n22788748\n63238232\n86254210\n88875328\n6371141\n56891661\n19732338\n27381862\n51848012\n67022054\n81886970\n86784626\n76065103\n81621902\n62381725\n59515576\n5465766\n35920846\n68854346\n18695995\n93706202\n62312250\n60736070\n8373279\n786918\n88479987\n24931376\n19028362\n68836012\n43750797\n65493774\n92795620\n62866665\n77024314\n82278728\n75484544\n16629401\n3919490\n14892012\n32805536\n27664989\n14994690\n40159319\n51522769\n23142349\n78041303\n49758239\n79142484\n36694482\n41310545\n74300073\n22792977\n52335397\n55857208\n76331768\n77712202\n69594318\n94491475\n60827477\n44339020\n42571421\n24777782\n91107697\n45800680\n36388699\n42731784\n81327786\n90177636\n28060948\n69958563\n92408749\n67431026\n41538634\n5757025\n81005114\n52041742\n37691353\n13145453\n8385029\n4439214\n73960938\n19727376\n62172847\n64658497\n35020006\n84934694\n4240548\n34795889\n94215192\n46522020\n10089011\n56586767\n56556049\n33353532\n88689446\n1713809\n45182669\n61765495\n23959248\n83390971\n88809439\n29810688\n25345576\n75972096\n85193966\n19902102\n12613462",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 107)"
    },
    {
      "input": "107\n67646762\n97379810\n37038675\n35048182\n2629940\n95526998\n81769282\n86210392\n86015957\n81271370\n82355468\n23258458\n93749311\n81501635\n95718823\n20555686\n90951598\n11167877\n44753238\n53083674\n47998438\n86503615\n48518652\n51356542\n65003012\n74110648\n62383484\n79777147\n64500940\n30030760\n66110025\n8222223\n972965\n47386554\n41648946\n66002978\n75132959\n44100299\n29147090\n74893669\n62685783\n73337796\n69500356\n64194563\n44712252\n78406673\n2992111\n88703175\n27804058\n62584610\n48138953\n10809220\n60120918\n39790735\n32194522\n37127364\n3413748\n47763325\n20759522\n78723282\n32933390\n20327491\n9721259\n46338822\n79694996\n26517049\n17489532\n74636982\n66595041\n58783200\n18957456\n14020548\n92380050\n47914698\n70472615\n48303563\n19122021\n57666161\n98428549\n17429041\n7863000\n93662584\n28704085\n63955288\n86841025\n57521884\n83416350\n30555508\n5892843\n84170750\n24571604\n32242423\n50772899\n70764041\n31214873\n16391028\n873300\n20253117\n81955903\n43281573\n46603880\n44816692\n12361650\n28645606\n48151584\n15990717\n17224852",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 107)"
    },
    {
      "input": "2\n100000000\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 2)"
    },
    {
      "input": "2\n92073183\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 2)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:13",
  "total_test_cases": 20
}
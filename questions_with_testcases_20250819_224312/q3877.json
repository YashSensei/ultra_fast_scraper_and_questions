{
  "problem_code": "problems",
  "title": "Playing with GCD",
  "tags": [],
  "text": "Tanmoy recently learn about Euclid gcd algorithm. This algorithm looks like:gcd(a, b):\r\n   if (b == 0): return a\r\n   return gcd(b, a % b)Now he want to find out how many pair (x, y) can be possible in range N, which gcd is greater than 1. Here pair (x, y) and (y, x) consider as same pair. 1 ≤ x, y ≤ N.He can find out it small number easily but for a large number its really hard to find out. Now he needs your help. Write a programme that find out number of such pair.InputInput start with an integer number T (1 ≤ T ≤ 105), which is number of test cases.Each test case contain a integer N (1 ≤ N ≤ 105).OutputFor each case, print case number and desired answerSampleInput:2\r\n3\r\n4Output:Case 1: 2\r\nCase 2: 4",
  "sample_input": "gcd(a, b):\r\n   if (b == 0): return a\r\n   return gcd(b, a % b)",
  "sample_output": "Input:2\r\n3\r\n4Output:Case 1: 2\r\nCase 2: 4",
  "link": "https://www.spoj.com/problems/NAJPWG",
  "scraped_at": "2025-08-17 00:34:33",
  "test_cases": [
    {
      "input": "gcd(a, b):\r\n   if (b == 0): return a\r\n   return gcd(b, a % b)",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2\r\n3\r\n4",
      "expected_output": "Case 1: 2\r\nCase 2: 4",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "mdqesw el\n1\nioirr yj rxu w i bgxuy\nbo djt ohroo nhm ef",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "uh as\n1\ni c g bj pxgc gufzk\nd xnyhjh tuh aiebw obj",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "gw c\n9\nxrp s w amibz gkpcy u\nsvggc dy h ulf bop",
      "expected_output": "To be computed",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "jdowv p\n25\nzprxg zzp y cnurj www gvupn\nvqr wlucfr ru xquy vfo",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "hnex otqlw\n63\nf hqs pz sxqqj bxkaba tkhc\nvbdhee c j cgvck brb",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "zi mc\n63\ndazzn ika keg gfo jyvmr i\nod jeel pxtgl cj x",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "vdvr pxts\n33\ngg c ovg whjf hd pudi\npuwflw ykojnm ovi wknf m",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "bn rt\n13\nxat w rdp aychv mttv geokw\ncqgi p v u uhyv",
      "expected_output": "To be computed",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "uq ykz\n31\nudzjz pt yfbuo fnoi tqvyb hg\nmp dgyny paz djdg rway",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "fp qeag\n7\nkel pu l k migid bjbuu\nqcbj aprcqf rpl q j",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "b xwg\n11\ntg alt edczm bcyzl uxmbsz dkhe\nj jsh mp yqtz fmjq",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "revmea s\n33\nb ffalm cn uiyg doz rddz\nvra lguo abgj weme pe",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "upz ez\n49\nofzn p dtusc nfv n qicn\nczoqbs dc pdmwz pj yrbfe",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "t jgqf\n52\nlsnz ga wjqi fr lje pj\nhohbx wwalwu cg skbrw glzan",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "o n\n42\nwfd fcak ap rvyxe t oaub\ntsise t skt su dsptt",
      "expected_output": "To be computed",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "t dcujl\n105\nfvm kxjes nhaz ppqpn ix zvg\nwi cowyrf nnca lnugu vccq",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "yjoc wtpx\n105\nhqxv x nmbn vzrad coikxq bcmfm\nq inggca lnef r mkse",
      "expected_output": "To be computed",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "hl xmv\n105\na kz jokj qjn wza vaimy\nmknl rlt gsy m zgqpc",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:25",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Covering the Corral",
  "tags": [],
  "text": "The cows are so modest they want Farmer John to install covers around the circular corral where they occasionally gather. The corral has circumference C (1 ≤ C ≤ 1,000,000,000), and FJ can choose from a set of M (1 ≤ M ≤ 100,000) covers that have fixed starting points and sizes. At least one set of covers can surround the entire corral.Cover i can be installed at integer location xi(distance from starting point around corral) (0 ≤ xi< C) and has integer length li(1 ≤ li≤ C).FJ wants to minimize the number of segments he must install. What is the minimum number of segments required to cover the entire circumference of the corral?Consider a corral of circumference 5, shown below as a pair of connected line segments where both '0's are the same point on the corral (as are both 1's, 2's, and 3's).Three potential covering segments are available for installation:Start   Length\r\n      i      xili1      0       1\r\n      2      1       2\r\n      3      3       3\r\n\r\n        0   1   2   3   4   0   1   2   3  ...\r\ncorral: +---+---+---+---+--:+---+---+---+- ...\r\n        1111                1111\r\n            22222222            22222222\r\n                    333333333333\r\n            |..................|As shown, installing segments 2 and 3 cover an extent of (at least) five units around the circumference. FJ has no trouble with the overlap, so don't worry about that.Input:Line 1: Two space-separated integers: C and M.Lines 2..M+1: Line i+1 contains two space-separated integers: xiand liOutput:Line 1: A single integer that is the minimum number of segments required to cover all segments of the circumference of the corral.SampleInput5 3\r\n0 1\r\n1 2\r\n3 3Output2",
  "sample_input": "Start   Length\r\n      i      xili1      0       1\r\n      2      1       2\r\n      3      3       3\r\n\r\n        0   1   2   3   4   0   1   2   3  ...\r\ncorral: +---+---+---+---+--:+---+---+---+- ...\r\n        1111                1111\r\n            22222222            22222222\r\n                    333333333333\r\n            |..................|",
  "sample_output": "Input5 3\r\n0 1\r\n1 2\r\n3 3Output2",
  "link": "https://www.spoj.com/problems/CORRAL",
  "scraped_at": "2025-08-17 00:33:05",
  "test_cases": [
    {
      "input": "Start   Length\r\n      i      xili1      0       1\r\n      2      1       2\r\n      3      3       3\r\n\r\n        0   1   2   3   4   0   1   2   3  ...\r\ncorral: +---+---+---+---+--:+---+---+---+- ...\r\n        1111                1111\r\n            22222222            22222222\r\n                    333333333333\r\n            |..................|",
      "expected_output": "Input5 3\r\n0 1\r\n1 2\r\n3 3Output2",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "tj tmxt\n9 8 5\nj i 3 10\n4 10 9\n8 3 3\n5 3 10 1 6 8 4 6 9\n5 8 5 8 6 2 1 9 2 epdtb\nmg tfkclrh cojrb\n2 2\n2 5\n7\ndrmssiqmulan",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "qjaq pv\n7 5 10\nxopqh laotx 6 9\n4 7 1\n2 3 9\n10 4 8 3 3 3 2 2 7\n4 1 9 4 3 5 2 5 2 lk\ndjlcc dwcwdfxdksgdwhnjpuyyimohlmrazfyzrj yh\n9 10\n6 1\n1\nbasukvdkkiundcjwz",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "uq qhqd\n7 8 6\nfoq vek 8 10\n1 7 1\n6 2 1\n7 3 6 3 9 8 6 1 7\n8 10 2 5 1 10 5 1 1 x\nv nmohkhf mr\n7 5\n2 4\n2\nkxvdznoabdntsiug",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "ucghg iixltw\n95 48 56\naiuz rmd 59 5\n76 93 96\n63 88 50\n86 39 50 3 62 81 94 82 95\n93 67 8 92 9 44 13 68 99 cdkzs\nvrbb gwyakyxigrdkibhfg vcedm\n7 46\n63 52\n38\nkdolrsvgqomdgh",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "sfj hmu\n2 99 41\nxeb vxnm 40 84\n92 85 49\n97 60 25\n28 20 77 90 56 23 71 39 45\n79 5 84 44 73 62 52 82 56 zdey\nmezyw dchhazzwzsinmesvkxvjikfwdjvgkh vbt\n97 20\n93 56\n20\njutn",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "ocour o\n48 6 24\nurgy sppd 5 45\n16 54 17\n44 11 41\n10 96 92 26 36 1 53 37 50\n50 33 70 30 75 70 74 3 62 yisz\npnr tmydtkcyzjocccnkhqxeetfymrnhnzwc ub\n65 29\n66 21\n12\nqmmxwmhtm",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "ywxk oggafp\n90 3 1\nqyybz vykrv 34 44\n81 99 72\n76 52 57\n2 1 22 100 55 42 92 25 73\n61 27 59 86 50 21 68 38 98 kjg\ntmo qogcfkclgotfcyiu wwrl\n49 7\n53 8\n72\ntkj",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "sxhzx lvklpf\n7 54 39\nm f 10 28\n8 65 18\n32 45 21\n5 79 41 84 23 96 94 28 72\n94 97 42 45 39 77 30 20 52 qq\nhxtwuuj wgkimuwyugslhxgdelmzuldl tzbt\n23 100\n57 42\n24\nktanascq",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "t izunjw\n236 370 344\nzn h 341 163\n353 453 175\n118 445 130\n350 333 414 388 229 383 180 385 464\n371 212 306 355 427 377 217 354 448 poqhh\ny korbrpwxbiiudjba sio\n238 159\n305 452\n369\nuremfdca",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "iu oeoqo\n83 474 327\nxuok eq 58 479\n387 449 111\n433 99 194\n153 146 181 361 74 137 257 210 342\n222 346 473 297 441 495 355 421 66 ws\nsgxayb ksjceadfygkasyfhrua naq\n239 497\n355 394\n121\neacustgzcgplpdtwcndv",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "lkp lghyac\n141 367 128\ndk pjqjd 77 144\n439 283 158\n330 232 169\n357 85 144 311 101 247 83 237 180\n205 182 288 201 203 136 175 130 497 rk\nvaxx jdvwdofkyqcfwqryeo iw\n137 448\n499 432\n140\nqaqzlzf",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "opg guxb\n340 393 398\nluddj kl 288 140\n339 360 149\n264 481 481\n471 486 157 357 452 262 243 377 334\n202 398 350 404 422 251 54 417 178 vtdbm\nozhts oym isiq\n165 79\n84 120\n423\nweageqwkbcpkofznwk",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "nmgx tbgq\n166 474 424\nyxbg vjs 229 192\n482 174 168\n335 185 466\n385 398 354 276 324 70 453 373 459\n57 441 209 492 67 383 132 60 292 m\nsxkq iqnzibudhgf o\n372 230\n320 52\n390\ncv",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "c zwscbw\n369 472 256\njtxl jkpa 168 103\n120 149 112\n173 391 88\n425 477 375 288 267 115 360 463 211\n379 292 210 149 73 205 179 485 77 va\nmzp qbadkiumogsqswhfpytvfpcnuqhuphcwcz qvzu\n318 298\n446 279\n114\nlxahverfqwbyp",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "f stpet\n157 376 317\nc r 207 455\n364 69 187\n206 234 454\n201 243 65 77 382 307 372 50 64\n259 86 124 493 270 294 345 374 152 qk\nkplezee ahqdxpptfsbzbxmqhzh ztx\n456 481\n134 389\n138\nhaidbntoqercikuswop",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "v wu\n1000 1000 1000\nttk bhge 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 vnqru\nzn didbhqaxfq xdg\n1000 1000\n1000 1000\n1000\nrpxbomfawdvpezef",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "of tg\n1000 1000 1000\nr lw 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 bxkcf\ntmj yiawcgrcwapyzmbqypdv la\n1000 1000\n1000 1000\n1000\nvmhpgwfqjqr",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "sq ay\n999 1000 1\nrwsk bhh 2 1\n999 1 1\n1000 1 2\n1 2 999 999 1000 1000 2 2 1\n2 999 2 1000 1 1 1000 2 1000 zin\ngxs jmqhwplabkobtrvcqwkouititkhcdkk qnrrv\n999 1000\n2 1000\n1\nyrugusyopgs",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "s x\n1 999 2\ndrrk zdtcv 2 1000\n2 999 1\n999 1000 999\n1000 1 999 1000 2 2 1000 999 1\n999 1 999 999 1000 1 2 2 2 e\nvflf yyltonuciv z\n1000 999\n1 2\n999\nisvhqpsdcprsjiepxjot",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:13",
  "total_test_cases": 20
}
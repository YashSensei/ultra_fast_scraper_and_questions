{
  "problem_code": "problems",
  "title": "Calculate The Cost",
  "tags": [],
  "text": "In a small village near the Himalayas, there is a rich land-owner, in possession of a vast, rectangular tract of land. Unknown to him, a major oil corporation has verified the existence of a vast oil resource beneath his land.The oil company sends a man to negotiate the purchase of a rectangular field from within the landowner's land, with sides parallel to those of his area. The landowner, valuing his land according to the trees growing in it and the area to be purchased, gives the company man a map of his land, marking the location of trees of different types, and a list of the worth of each type of tree.To ensure the most economic purchase of land with the required dimensions, the company man provides you with the data in his possession, and along with that, a list of the land areas that he considers good by his judgement.You must provide, for each land area that he has listed, the sum total of the values of the trees that lie within or on the boundary of that land area.InputThe first line of the input contains an integer T, which is the number of test cases. For each test case, the first line contains an integer n, equal to the number of trees in the area. This line is followed by n lines each containing three integers separated by spaces which are the coordinate of the tree (x, y) and value of that tree. Following this is an integer R, equal to the number of proposals of land areas given by the company man. Next R lines contain 4 integers each (x1, y1, x2, y2) which are the coordinates of lower left (x1, y1) and upper right (x2, y2) corner of the rectangular area.OutputFor each test case, your program should output R lines containing the sum of values of the trees which lie inside or on the corresponding rectangular plot. There should NOT BE any blank lines between output of different test cases.ExampleInput:1\r\n3\r\n1 1 2\r\n2 2 3\r\n3 3 4\r\n2\r\n1 1 1 2\r\n0 0 5 5Output:2\r\n9ConstraintsT ≤ 10, n ≤ 105, R ≤ 50000, 0 ≤ x, y ≤ 107, value of any tree ≤ 104.For any rectangular area 0 ≤ x1 ≤ x2 ≤ 107, 0 ≤ y1 ≤ y2 ≤ 107Note 1:There can be more than one tree at the same point.Note 2:The input data is large (about 15 MB), be careful about your input and output routines.",
  "sample_input": "Input:1\r\n3\r\n1 1 2\r\n2 2 3\r\n3 3 4\r\n2\r\n1 1 1 2\r\n0 0 5 5Output:2\r\n9",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/CCOST",
  "scraped_at": "2025-08-17 00:33:06",
  "test_cases": [
    {
      "input": "1\r\n3\r\n1 1 2\r\n2 2 3\r\n3 3 4\r\n2\r\n1 1 1 2\r\n0 0 5 5",
      "expected_output": "2\r\n9",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5\n8\n9\n7\n4\n6",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n9",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "4\n2\n3\n2\n3",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "17\n32325631\n53464080\n87410742\n3149646\n68399159\n39545330\n72035775\n33331303\n36226260\n9801582\n57481469\n8396439\n93486526\n72865252\n18444088\n91903431\n60204133",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "11\n92244899\n20435208\n89763444\n83182685\n48261629\n41329036\n32910075\n52280243\n58466160\n60441335\n53842448",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "15\n85074330\n49870123\n54722942\n60381728\n76659452\n17243871\n44254902\n18979464\n71127267\n66675931\n76902805\n35625652\n38440058\n57557862\n22538386",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "16\n75513003\n36050790\n67879381\n79751065\n97799237\n66181457\n29999230\n99983462\n63574998\n74480292\n16860651\n79808813\n39063645\n12639870\n81455763\n97410077",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "19\n9193975\n6326672\n36858322\n65954918\n69026436\n30303712\n63389412\n46392094\n94215278\n47646891\n66584058\n28138082\n5765128\n67910893\n89251189\n48780969\n32513337\n49382737\n84443261",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "41\n62026\n65562\n44329\n6773\n76239\n32393\n64650\n17447\n25281\n3535\n34629\n92586\n70822\n55160\n19448\n88890\n29620\n40163\n65059\n51123\n249\n41434\n87423\n66786\n27454\n10130\n74726\n50388\n60040\n26702\n91680\n72914\n42165\n1014\n85867\n22794\n25526\n54862\n82419\n86670\n69978",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "41\n31689\n99258\n77356\n2298\n80803\n14824\n31301\n52236\n32567\n11469\n12617\n36358\n43713\n73020\n20980\n70481\n25251\n76536\n33853\n12952\n63821\n32096\n24443\n16079\n46272\n86576\n19130\n56657\n92960\n99349\n80410\n93490\n25508\n62342\n90031\n89783\n237\n10730\n41934\n90095\n92599",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "71\n95473\n98784\n81101\n38604\n90535\n38780\n17925\n82896\n80390\n28407\n23066\n52048\n96787\n80496\n52376\n60115\n26055\n29870\n1429\n7506\n70407\n62442\n92300\n81331\n59548\n8488\n86795\n90505\n30967\n87455\n68309\n35584\n84959\n2603\n1836\n59901\n35687\n17309\n29157\n12957\n65820\n55878\n36589\n47351\n36023\n82382\n92094\n10225\n17919\n35659\n65090\n1569\n21598\n75927\n75992\n13322\n92850\n58162\n74678\n91656\n22977\n53008\n66742\n33380\n70500\n96089\n15299\n42567\n15254\n16857\n58441",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "95\n99568\n45839\n48284\n63888\n82753\n88484\n93239\n31602\n89338\n98659\n91221\n884\n6472\n63827\n46208\n89246\n27600\n27286\n57524\n66759\n25822\n24921\n65393\n43862\n87365\n5814\n51331\n48080\n53146\n76492\n48531\n4764\n43936\n66132\n33965\n12367\n90204\n7319\n16314\n65795\n37934\n65413\n25572\n6236\n92337\n45725\n74988\n57073\n9853\n95120\n16205\n6897\n83870\n29397\n30197\n83705\n22425\n84405\n95384\n49999\n78846\n71142\n57442\n230\n50005\n84592\n79213\n72116\n59252\n82274\n38628\n42006\n5537\n89778\n31032\n30493\n1856\n16559\n65092\n7123\n98764\n46019\n3278\n46886\n88974\n20868\n23319\n29682\n8949\n47885\n18925\n48717\n12298\n97158\n73236",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "33\n21012\n51411\n60676\n23715\n12658\n57157\n87120\n79347\n47938\n39486\n64963\n21308\n28357\n31891\n13218\n55630\n40645\n59800\n47376\n28664\n36558\n7906\n17955\n80397\n71075\n10782\n92137\n22140\n81249\n81254\n11747\n51233\n35488",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "80\n94793\n90977\n99304\n124\n43024\n6585\n61834\n88548\n30397\n11374\n80037\n26185\n56742\n26385\n84280\n54449\n76070\n94510\n24596\n74021\n1203\n19868\n68604\n41278\n24446\n14153\n52278\n86717\n97808\n64780\n46369\n93878\n87496\n38450\n12805\n59066\n94382\n72712\n42471\n21106\n3830\n16259\n74732\n25993\n10308\n8858\n43736\n19475\n85028\n79560\n45508\n34601\n44396\n97431\n67208\n80716\n38787\n51336\n84205\n58914\n96376\n72777\n37822\n34861\n41910\n3439\n47646\n7017\n88142\n26\n87322\n38302\n5567\n72765\n91541\n17994\n71236\n83808\n6722\n9366",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "73\n72906\n33155\n13878\n15793\n21307\n61323\n10247\n4378\n68561\n91431\n97386\n67292\n19317\n65618\n6874\n24382\n55353\n67198\n14432\n59145\n27923\n86789\n88266\n99381\n22413\n86508\n77236\n28741\n32195\n47551\n53800\n15944\n32998\n49833\n14194\n12171\n10127\n84139\n3072\n28234\n11137\n56727\n73179\n12799\n75486\n72237\n56474\n90604\n54824\n95630\n34059\n35473\n61141\n43575\n51049\n21721\n44817\n83992\n33913\n19405\n69125\n65257\n11065\n65343\n63992\n41585\n55814\n30967\n37691\n58852\n22921\n11850\n55132",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "105\n45650899\n72489615\n82858457\n94985068\n99107620\n30891640\n17457164\n32804825\n15762280\n22011699\n74368701\n90697104\n67270522\n3923834\n77435840\n97022180\n82393510\n40409020\n39123150\n34280767\n25024133\n22507048\n6036292\n6076985\n68533414\n89933765\n9843626\n70789987\n59495936\n96864082\n96172509\n90570075\n443908\n20528242\n16642887\n58039826\n21556506\n67407156\n2329611\n62617846\n50204824\n12627653\n87603722\n58935089\n22913385\n86655699\n91508251\n42251824\n7045805\n70017061\n19281946\n9606609\n92291755\n77153353\n92671954\n94225740\n82599674\n54054217\n23034812\n3103002\n41729744\n23821979\n27873633\n23177177\n95675085\n66726184\n54747491\n89295816\n22310290\n33043291\n17321422\n56131701\n44784382\n94183741\n70963471\n27253046\n38920300\n34496306\n23890359\n7407807\n77575995\n49429509\n12611573\n28369747\n26147692\n46146180\n94743028\n79604997\n82517334\n54726464\n10095770\n1851211\n70577461\n90598505\n33997485\n68019950\n64115547\n29846089\n26445188\n14858611\n31396440\n34733778\n32463244\n61499169\n30778975",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "105\n8489545\n96178926\n68563235\n52496956\n62734220\n40760605\n42190533\n2837610\n8081890\n86282071\n62358858\n47970419\n45199437\n95417109\n89519950\n60468005\n32637782\n25342207\n68367063\n45486069\n49154176\n53823886\n76548895\n72612867\n35500824\n51941582\n68879819\n8295199\n61083175\n74328908\n43993346\n92279365\n491492\n51585771\n14270262\n67154635\n96136428\n40302731\n12529072\n68674918\n26478902\n40274218\n66299099\n27205416\n67547170\n13502801\n6878189\n27790839\n72424148\n85805628\n38151170\n9814469\n14003487\n1175643\n7527835\n72834403\n80293796\n91986074\n66985671\n93420541\n97927096\n89906935\n21705362\n91033374\n92832010\n30146644\n55223780\n25005302\n20160582\n63364185\n32139801\n68475960\n62986046\n41199591\n45165361\n21880730\n57988424\n47703611\n24882610\n74628935\n69950013\n71341243\n15716153\n72727249\n57377944\n29433544\n20679396\n16893142\n81376170\n31986135\n81045550\n64976591\n28141954\n3196116\n833000\n39467314\n53705334\n1993263\n93843751\n55687121\n87512855\n79384020\n39118571\n26045363\n88902133",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "105\n1\n1\n41936783\n2517729\n100000000\n100000000\n100000000\n1\n1\n1\n100000000\n100000000\n1\n100000000\n50115777\n16984806\n1\n100000000\n1\n58926875\n100000000\n17123205\n29030820\n100000000\n100000000\n9819525\n1\n17278416\n37504156\n46320457\n1\n100000000\n29843948\n1\n100000000\n47062130\n67231473\n100000000\n88603132\n100000000\n1\n1\n73171518\n65028162\n100000000\n48892737\n46231903\n100000000\n85373356\n87651543\n100000000\n100000000\n100000000\n1\n55280138\n100000000\n79867187\n100000000\n4516396\n9975291\n1\n1\n1\n100000000\n100000000\n100000000\n1\n1\n1\n1\n100000000\n89923635\n55946369\n100000000\n24708480\n100000000\n100000000\n80355303\n55626619\n39008693\n97892234\n100000000\n1\n1\n1\n6185623\n1\n75892014\n11539908\n1\n32031976\n1\n100000000\n1\n13330386\n100000000\n4305935\n100000000\n77396366\n44881192\n100000000\n29923873\n100000000\n976102\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 105)"
    },
    {
      "input": "105\n1\n43588311\n1\n100000000\n1\n1\n100000000\n85766763\n1\n100000000\n1\n99329100\n1\n51068672\n100000000\n50834759\n95176386\n1\n1\n100000000\n1\n100000000\n100000000\n1\n1\n100000000\n60013608\n100000000\n100000000\n1\n77466544\n76375886\n3459443\n100000000\n1\n100000000\n1\n1\n26621082\n15143023\n100000000\n49867224\n1\n56388915\n100000000\n11618999\n1\n100000000\n100000000\n1\n100000000\n100000000\n100000000\n100000000\n58593523\n79587459\n1\n100000000\n100000000\n100000000\n100000000\n1\n69433300\n80224433\n56635900\n100000000\n1\n6014424\n42965635\n58166718\n100000000\n1\n1\n1\n1\n57812935\n1\n88437441\n92854942\n100000000\n1\n100000000\n24166766\n84231441\n96364745\n18470847\n1\n53429486\n1\n100000000\n54676180\n45851850\n100000000\n1\n1\n8236878\n100000000\n1\n1\n67871172\n100000000\n8380467\n1\n100000000\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 105)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:13",
  "total_test_cases": 20
}
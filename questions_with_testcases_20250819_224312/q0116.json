{
  "problem_code": "problems",
  "title": "Youtube",
  "tags": [],
  "text": "N students are bored in computer class so they watch funny video clips on YouTube.The site contains K popular clips, numbered 1 through K. When a video clip is watched, a list of similar video clips is displayed on the side.Every student picks a video clip from the main page and starts watching it. After exactly one minute every student gets bored of his or her video clip, so he opens thefirstvideo clip from the list of similar clips on the side (even if he already watched that clip).Write a program that determines for each student which video clip he will be watchingduring the M-th minuteof the class.InputThe first line contains three integers N, K and M (1 ≤ N, K ≤ 100 000, 1 < M ≤ 1 000 000 000), the numbers of students, video clips and minutes.The second line contains N integers, each between 1 and K, the indices of video clips the students start watching.The third line contains K integers, each between 1 and K, the index of the first similar clip for each video clip.OutputOutput N integers, the indices of video clips that students will be watching during the M-th minute.ExampleInput:4 5 21 2 4 35 5 1 2 3Output:5 5 2 1Input:2 6 51 62 3 4 1 4 5Output:1 2",
  "sample_input": "Input:4 5 21 2 4 35 5 1 2 3Output:5 5 2 1",
  "sample_output": "Input:2 6 51 62 3 4 1 4 5Output:1 2",
  "link": "https://www.spoj.com/problems/YOUTUBE",
  "scraped_at": "2025-08-17 00:33:16",
  "test_cases": [
    {
      "input": "4 5 21 2 4 35 5 1 2 3",
      "expected_output": "5 5 2 1",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2 6 51 62 3 4 1 4 5",
      "expected_output": "1 2",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "8 10 6 9 4 2 9 5 7 3",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "4 3 9 3 6 1 1 7 5 7",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "3 6 10 1 1 4 10 10 4 4",
      "expected_output": "To be computed",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "60 20 96 32 72 50 95 6 5 73",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "31 17 43 48 39 48 12 33 82 16",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "80 99 97 91 38 5 45 85 78 88",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "57 55 13 2 4 64 88 66 45 60",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "98 53 92 34 27 39 7 95 86 42",
      "expected_output": "To be computed",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "128 169 177 458 206 124 335 277 76 284",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "79 373 156 425 169 266 438 264 459 187",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "100 54 356 274 371 117 486 450 262 142",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "358 407 350 315 259 382 184 261 300 153",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "346 59 460 77 327 163 352 181 469 258",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "163 192 425 317 79 466 415 329 285 289",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "330 306 169 114 109 229 81 176 366 424",
      "expected_output": "To be computed",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1 999 999 999 2 1 1000 1 1000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:12",
  "total_test_cases": 20
}
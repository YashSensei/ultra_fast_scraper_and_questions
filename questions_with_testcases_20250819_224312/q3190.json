{
  "problem_code": "problems",
  "title": "BHAAD MEI JAAO",
  "tags": [],
  "text": "You are on vacation on a drunken island, but you couldn't resist the temptation of solving a good old problem. It all started when a group of kids played a game they call \"The Falling Coconuts\". In this game, a number of coconuts fall to the ground, one by one, on a single axis, at the locations given in drops. If a coconut X lands on the ground, it remains where it is. If it lands on top of another coconut Y, one of the following things happens:If coconut Y is surrounded on both sides by coconuts (denoted by 'O'), coconut X remains where it is.X\r\n    OYOIf there is no coconut directly to the right of coconut Y, coconut X slides down to the position directly to the right of coconut Y.X\r\n    OY   ->  OYXX\r\n     Y   ->   YXIf there is a coconut directly to the right of coconut Y, but no coconut directly to the left of coconut Y, coconut X slides down to the position directly to the left of coconut Y.X\r\n    YO  ->  XYOEach time coconut X slides down to a different position, it will continue to slide (following the behavior outlined above) until it's in a place where it will not slide any further.The task is to display the final coconut configuration.InputFirst line is t = number of test cases.Each test case consists of 2 lines, first line containing the number of coconuts and second line contains n integers denoting the position of each coconut on the x-axis.OutputAs described in the problem statement.ExampleInput:2\r\n8\r\n8 9 10 11 12 8 12 10\r\n10\r\n6 8 10 7 9 8 8 8 8 8Output:---O---\r\nOOOOOOO\r\n--O---\r\n-OOO--\r\nOOOOOOExplanation of test case 1The configuration after each fallen coconut is given below:X →  OX  →  OOX  →  000X  →  0000X  →  X00000  →  000000X  →  0000000In this diagram, 'X' denotes the last fallen coconut.",
  "sample_input": "X\r\n    OYO",
  "sample_output": "X\r\n    OY   ->  OYX",
  "link": "https://www.spoj.com/problems/JUNL",
  "scraped_at": "2025-08-17 00:34:26",
  "test_cases": [
    {
      "input": "X\r\n    OYO",
      "expected_output": "X\r\n    OY   ->  OYX",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "p\ncq",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "t\njpby",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "xx\na",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "nk\nuv",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "lv\njt",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "k\ngs",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "ih\nftiolq",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "m\nqwwen",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "v\nnb",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "i\njwhh",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "s\nlhta",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "p\nff",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "z\ngj",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "ub\ntgru",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "t\nadykjj",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "i\no",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "ev\nn",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "p\nzji",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "di\noaa",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:23",
  "total_test_cases": 20
}
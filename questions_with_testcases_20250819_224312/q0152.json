{
  "problem_code": "problems",
  "title": "Euclids algorithm revisited",
  "tags": [],
  "text": "Consider the famous Euclid algorithm to calculate the GCD of two integers (a, b):int gcd(int a, int b) {\r\n    while (b != 0) {\r\n        int temp = a;\r\n        a = b;\r\n        b = temp % b;\r\n    }\r\n    return a;\r\n}for input (7, 3) the 'while' loop will run 2 times as follows: (7, 3)  → (3, 1) → (1, 0)Now given an integer N you have to find the smallest possible sum of two non-negative integers a, b (a ≥ b) such that the while loop in the above mentioned function for (a, b) will run exactly N times.InputFirst line of input contains T (1 ≤ T ≤ 50) the number of test cases. Each of the following T lines contains an integer N (0 ≤ N ≤ 1018).OutputFor each test case print the required answer modulo 1000000007 in a separate line.ExampleInput:1\r\n1Output:2Explanation: (1, 1) is the required pair.",
  "sample_input": "int gcd(int a, int b) {\r\n    while (b != 0) {\r\n        int temp = a;\r\n        a = b;\r\n        b = temp % b;\r\n    }\r\n    return a;\r\n}",
  "sample_output": "Input:1\r\n1Output:2",
  "link": "https://www.spoj.com/problems/MAIN74",
  "scraped_at": "2025-08-17 00:33:04",
  "test_cases": [
    {
      "input": "int gcd(int a, int b) {\r\n    while (b != 0) {\r\n        int temp = a;\r\n        a = b;\r\n        b = temp % b;\r\n    }\r\n    return a;\r\n}",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1\r\n1",
      "expected_output": "2",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "zl aksl o qbk ombad sh\n8\nmpek ngtf ab txi ia\nu esq wcnqi ptkfh\nc hncp lvd\napjof w gf na xm\nch\nwbwo fldq\ngw",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "ezplu ldorei dnvru e mwix ibk\n10\nql bra vve td rijf\nhm rbs yyqx bimd\nj qiavq vr\nc logk wdg znim a\no\no p\nz",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "qigh s ct qp r a\n4\nhpro jjagc jzrmf re yd\ns qvv m qatk\nrb ffey phiqe\ny oq hvt mu muusr\ne\na rhc\nd",
      "expected_output": "To be computed",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "nqoi gcaokxg dk m wpxuz vf\n26\nruh kxvxk nylfd ozev znhwb\nzftwh vaxzh wh g\nbsel admmu buww\nenc vgdi tbi wle c\nj\nwlmtia gowah\nj",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "vkdz j jwzz tivt z jjd\n51\nmmbl hiwo uo z ez\nqmpx juzg a t\nis jd r\nwatp kfrjw kyd vvns ntj\nwg\nn eu\nnv",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "lp pzbxyu kv e p qcwyt\n70\nzdyg g iv pih a\ngtdg j tzt eu\nyc veyrx s\nboyh fi lejcl jggvy ro\nol\nlg zs\ned",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "p vubs dnsdx mwt tofl qjbo\n38\njhec zzhxu ihw hqk nl\nnsr wxn gjfq nq\njn u rwzih\npc qdn lmr eulje s\nm\nei ctg\nq",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "fvqv r uy pcipb p wr\n60\nf jlxf xht ipt hwzal\nz tmfl qzn d\nge nm btivn\ndxr ypz vabp xeman pjrg\nno\nw a\nqg",
      "expected_output": "To be computed",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "bmtuq kpbgr d zi rfiw gjshi\n278\nrdju f bain plb qgz\ng nsc g lqcj\nxmq pockb wua\nfroqh ljwvn mx yrjbv xvrtl\npr\nujxczx xctql\na",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "usv mcbsxmn xunjd xfjt ijqqp xoxmk\n234\nupy kxej dji zrni yux\nyxyy wjo maya kt\ngqd smrzm qsu\nymhd oa yaflp rg swk\ndp\nxpqb vir\nl",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "ww sbjo djrjg in podi zstd\n104\nydsop i logr uivz drnqw\nxeing um qatb f\nr bpmv p\nt cr gpevv igyx bdapu\nc\nvpjbft smcra\nle",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "zzk siij s lpmnt mp lx\n101\nxrh y rku vn hq\nuh d sw m\nfpmg njtl jwly\nlel bs hoyu lwyea c\nx\naepyst svuf\nsg",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "wmjh lvvdaj ocm aeih qpupq dtpep\n504\njml q dejgi dustw fvdaj\njimka x lppu wls\nd yc ndbwk\nwlv l em uroq oyqk\njp\nb uxxb\nb",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "lkynn jbjgu q bof vn k\n468\nkj cbdo ruyr z m\nqt sex b ascti\nyf ftfg rmg\nk coxrk tfuvj sv ptks\nu\npl k\nxr",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "hlk lgxi wiyrl k mdw imjs\n160\nhdsv z wlpk d o\ng gc h o\nbkht l akc\nfbj mqfdz ykkuz oj rk\ni\nlsp ufac\nx",
      "expected_output": "To be computed",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "rl uuegh c e kvach h\n1018\nuuby ckvyb a imrw yegjo\neib yr ue b\nttlqi o g\naa j z fbizx evc\nz\ncwih nr\nz",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "bnhin kczrzz ar zg y h\n1018\nmtq zws bgc aufwv sryjl\nxu jsh enwdm eih\nwrs jlnc spaco\nhtlr hj epnad vtros abe\nm\nzwhs fvw\nr",
      "expected_output": "To be computed",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "ppo jpil zpdzw ymbj imiqs biff\n1\nicyo zwxv f ie v\nk vdub gmkl otibh\ndlrqs d lcw\npc oqta fqfkd sm hlznz\no\ntlzoh mg\nd",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:13",
  "total_test_cases": 20
}
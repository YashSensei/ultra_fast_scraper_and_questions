{
  "problem_code": "problems",
  "title": "Alphabetic Rope3",
  "tags": [],
  "text": "The Alphabetic Rope is now available in the market. The Alphabetic Rope consists of alphabetic characters in each stripe which looks like string. You are given an Alphabetic Rope consisting of lowercase alphabetic characters. You have to perform some operations on the rope and answers some queries on it. Queries are of 3 types:1 X Y: Cut the rope segment from X to Y and Reverse it then join at the front of the rope.2 X Y: Cut the rope segment from X to Y and Reverse it then join at the back of the rope.3 Y: Print on a new line the character at Yth position of the current rope.InputThere is only one input. Input begins with single line giving Alphabetic Rope as a string S. Next line contains Q, following Q lines giving Queries as mentioned above. (Index used are 0-based)OutputFor each query of type 3,Â print a single character in a new line.Constraints1 <= |S| <= 100000. (Length of string)1 <= Q <= 100000. (Number of queries)ExampleInput:gautambishal\r\n5\r\n1 3 5\r\n3 0\r\n3 3\r\n2 2 4\r\n3 9Output:m\r\ng\r\na",
  "sample_input": "Input:gautambishal\r\n5\r\n1 3 5\r\n3 0\r\n3 3\r\n2 2 4\r\n3 9Output:m\r\ng\r\na",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/AROPE3",
  "scraped_at": "2025-08-17 00:33:08",
  "test_cases": [
    {
      "input": "gautambishal\r\n5\r\n1 3 5\r\n3 0\r\n3 3\r\n2 2 4\r\n3 9",
      "expected_output": "m\r\ng\r\na",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "ehpukbrmxesdduw\n5\n8 3 9\n2 4\n8 10\n6 10 3\n8 6",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "e\n3\n2 8 3\n4 8\n5 6\n10 9 10\n1 8",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "zkqmcxp\n9\n7 10 2\n6 2\n2 4\n5 2 10\n4 7",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "gxlwpzuihxsfnrmhno\n93\n31 5 44\n39 55\n83 77\n39 91 33\n38 32",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "glfwxv\n50\n69 93 42\n32 34\n33 6\n85 45 4\n63 22",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "jzvvmocbndlolv\n70\n80 32 10\n58 49\n84 15\n9 87 58\n57 44",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "hntxecyhav\n46\n64 53 77\n2 98\n41 68\n34 31 74\n57 23",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "jkbnl\n92\n72 80 48\n88 88\n13 24\n22 62 41\n6 59",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "emghlwlgtkauls\n308\n264 255 308\n237 440\n63 86\n255 443 211\n164 69",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "zjkyryxtoyhsgc\n436\n484 348 303\n392 87\n101 224\n202 61 176\n213 75",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "pakwssiflxfeizxibupn\n183\n471 87 156\n269 465\n451 259\n166 275 355\n401 321",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "qiohz\n466\n84 379 304\n474 205\n163 99\n224 295 131\n353 392",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "mmdzytqvkseprkqq\n432\n210 332 452\n180 94\n213 254\n396 244 409\n231 181",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "laehzodjrndzausubzog\n350\n332 382 476\n155 366\n404 425\n290 389 483\n483 67",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "tybmvjvc\n413\n404 410 483\n354 224\n488 261\n81 478 58\n60 251",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "qysudpzwzntcknx\n1000\n1000 1000 1000\n1000 1000\n1000 1000\n1000 1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "wwromhrzu\n1000\n1000 1000 1000\n1000 1000\n1000 1000\n1000 1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "vwa\n999\n1000 999 2\n1000 1000\n1000 999\n1 2 999\n2 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "py\n2\n1000 999 2\n2 1000\n1000 1\n999 1000 1000\n1000 999",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:15",
  "total_test_cases": 20
}
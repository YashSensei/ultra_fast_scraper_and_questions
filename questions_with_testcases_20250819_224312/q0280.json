{
  "problem_code": "problems",
  "title": "Example",
  "tags": [],
  "text": "As you may have probably noticed a problem statement in a programming contest consists of several\r\nsections. The most important section is, of course, the \"Example\" section. Some seasoned contestants even\r\nstart reading the problem statement from the examples. And, unfortunately, the least read section is the\r\nproblem description section. It is quite disappointing for the problem authors because they feel that their\r\nwriting skills are largely wasted.So the authors decided to describe examples in the same language, as the rest of the problem statement using\r\nthe following rules.Natural integer numbers shall be written in plain English. The numbers shall be less than one hundred. The\r\ndesignator number shall be written before numbers, except when the corresponding number is used as arepetition factor. For example,number zero,number sixteen, ornumber sixty one.Sequences of characters (strings) shall be written either in quotes, or in apostrophes, for example\"John's pen\",\r\nor'5\" tall'. Note, that ' may be used in strings enclosed in \" and vice versa. The designator string\r\nshall be written before strings, for examplestring 'Hello'.The designatorspacedenotes one space character.A number, string or space may be prefixed with arepetition factor. The repetition factor is a number greater\r\nthan one. The designator after the repetition factor is written in plural form. For example,four numbers five, orsix strings 'A'. If the repetition factor is used for numbers, the numbers are separated with one space character. So, the former example means5 5 5 5, but the latter exampleAAAAAA.Let the numbers, strings and spaces with possible repetition factors be calledfragments. Fragments may be\r\norganized intosequencesusing thefollowed bycopulative. For example,number five followed by number six. One implicit space character is assumed between numbers, a number and a string, and a string\r\nand a number so the example above means5 6.An example is described line by line. The first line is always described asThe first line.... The following\r\nlines are described either asThe next line...or asThe next # lines..., where#is a number greater\r\nthan one. Empty lines are described asis emptyorare empty. Other lines are described ascontainsorcontainfollowed by sequences. The first letter of a sentence is capitalized. The sentence is terminated by\r\na full stop (.). The full stop is not separated by space from the preceding word, but is separated by at least one\r\nspace from the next word.InputThe input contains a free-flow text describing an example. Words are separated by an arbitrary number of\r\nspaces and newlines. There are no whitespace characters after the last full stop. The total size of the input\r\nwill be no greater than 1 MB.OutputThe output should contain the decoded example. The total size of the output shall be no greater than 1 MB.ExampleInput:The first line contains four\r\nnumbers twenty eight. The next\r\nline is empty. The next two\r\nlines contain six strings '-'.\r\nThe next line contains number\r\nfour followed by number seventy\r\nseven followed by string 'meat'\r\nfollowed by three strings \"!\".Output:28 28 28 28\r\n\r\n------\r\n------\r\n4 77 meat!!!",
  "sample_input": "Input:The first line contains four\r\nnumbers twenty eight. The next\r\nline is empty. The next two\r\nlines contain six strings '-'.\r\nThe next line contains number\r\nfour followed by number seventy\r\nseven followed by string 'meat'\r\nfollowed by three strings \"!\".Output:28 28 28 28\r\n\r\n------\r\n------\r\n4 77 meat!!!",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/EXAMPLE",
  "scraped_at": "2025-08-17 00:33:21",
  "test_cases": [
    {
      "input": "The first line contains four\r\nnumbers twenty eight. The next\r\nline is empty. The next two\r\nlines contain six strings '-'.\r\nThe next line contains number\r\nfour followed by number seventy\r\nseven followed by string 'meat'\r\nfollowed by three strings \"!\".",
      "expected_output": "28 28 28 28\r\n\r\n------\r\n------\r\n4 77 meat!!!",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "lmpof or qhb eec llpdz\nysjqhu w luen u vhb\ngqqae jmavh b xz iwrsm ikq\nv vyml sdb vtoxw xbtw\nse edy ep xvnjv zuluv\nrycvk uhxhjkd pmh v itony\nkq h ni ykfqw refn\nag szxad glziy vryre zdb",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "qw tnp kvow adkor oazz\nlpoavoz wm emeau tuszw x\nlmaw job axhdv iwfv gude tz\nm syafxrx tum jgcb ex\ninuly tmr t v caiy\nzt lxs ol l pcptp\nvnsek wcnggrf rlrxk tbrcta j\nbrj iy qiayv w gvs",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "o one gxgoi ykzd qlxz\nlglgbus u uzf mv jfwfh\ni luxd wmjy gwc tfw yrid\nf jy kv aoqkhb jej\ne dz i ucshd rtd\nf eg e cmlg zj\nd rsczoyvg ktdms cu ogm\nwo ydo swkat zclcmm kz",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "rextj jpwpq msbv wbr m\nunfjinv pdjw dtrgc xqoqu zymm\nxj v dv wbe p m\ncey dgupujw hwnk akb cua\np xpmq p fizbc oju\njbx nvxxwqon s fjjj kigxfi\ny rwt omzfp in mq\nl cxakg wdx yxim c",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "oudle jmhwa ei erbprw vnl\nvz drzo zabs jwb atcr\nft rzwn oh qgo yyyv gibfi\nopvn oatdyr xrava eqzqiz ff\nhrr rnumu hj smhvigem pip\nblpoh vkxwhe gy qjfwlw w\nozgr dxt oteg pyj gsmd\nyw j jsp n cwfa",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "qgqr n njdg oogkotqf xxsx\nmgxxmef gglvgh mffab tr tt\nrbdqk iioav v cxjs nxcw ulv\nswjm hqaoltn ib vovrip i\nqt fxmtx wfyb cv qmifh\nslhux hkocads b rbffjl dtom\ndl hsmxoajp phg per ejt\nespvx hlmp qojg pg yufcy",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "a bxgj rnbtr aqqilvhm t\niwa q j j ozwt\nhw l z ntq e xmbp\nvym vuphwxa tmomn ed c\nizx b ufs mrqcm t\nw m hjv nwc rdzlw\nkmu hvxe n ctt qfxb\niv ubntv kq dufhpmq zomn",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "hy iggm symm zpmkdw mwv\ngxqa ubk bqh j tfcfc\nglb lzib d nbnki hvje r\nzkbr shytlh luz jxei ybdm\nar mc eih cmedbhne jbpgxc\nff wgxvxg aok h bpkbqas\nbmr utb lxvf pssoi bxmvi\nrh kwls lv nepbi yo",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "pfma k crtr gxsks yy\nrjd j hsg iuhj s\nsrtp mwi yrknx gg i plxfl\nl i ugv gdokdv x\ny kc d nlfkszd r\nik m iaaiq emxm wr\nxhubq dkpptwfk feoxw uabxsl dfwcb\nxabbi ayye vcs zos fqb",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "lgdqc ffskv wh k qxg\nyypkn ygdwo eyucqd copes rurrv\nezy dsab vg dvnj o q\nvj zqb bo ffl onf\np tbqas i c tq\nkmtbf ogknq awzy jpegej nnvkxi\nloz jzksnwg zag tto k\nfyk ulgmh lngy yhf kxw",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "blr be yq qdxytdsq zgo\ngqoinp qb lyjexn jzen cwnlc\nlem nsqy xr omlsv zx e\npaf phd rtay k s\nb hw jsrsm cnlwleb pbb\nlwzsj gecnxedk aiz jwsos ittop\nral nuvro zgc htlhg rihxo\nqvvftmdf ubn jqyx gm rry",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "yqdyi to ftc fprcz n\ntqhbnx yyq p h l\nvpkg j rinyy jif zlezl cx\njiqp fmuyhj yustk co jdk\ny up q swfwzd yhvoa\num rpnmseg dihbt tal om\njuy jowqhiru gxs ooztxf ndm\nevugires x qqvs fjlxg vgr",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "bssa zguvy opiq vnjx en\nehrh sspb gbtvnn m axndv\nf z zjz niwl c qbjbn\nd njl aq qicgxi izuzd\nnlpwn ozvl wc qmahfn zi\ntdimd czi a tir l\niq q h pcb dqvrkd\nt xzfgm w tvjpkvr mcn",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "uj bhkjq wuz coew bw\nv gi uvbyf mzh j\ngfiz foo l idw nfx qcfi\nzb odmryh krqjr autoo w\nk qixy g jbn cisp\nnopy sj nkggp w zdkgq\nbidon kkyoaws vruhm fat pn\nmqodxwvm kywcl fd gahlem aj",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "msnjo zna g o cyg\nr kqq xhuu lfr si\nwra ry nz wwa rwvt psxo\ntcgd wx d u sy\ns hapo oihe wbbu w\nake vp tqy zyd djdltl\nnvcg qlrlomdu xcrsp dzroz pakx\nkr hlwu vwjd d wl",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "gmw sk iz deelfw ol\nkdont bfzj tmp mpyny seou\nz gm jdcxgq e h igutd\namyc xmvrz g fvrewps yzxzm\nli eykdf i awlsofbs vbjc\ngqi lcfumwa b gfqedr gi\nqjd fqpucs jyd xt k\nbvrhr g ilt arkffri rpk",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "oyy ay ynebl gjbzhj ewwy\nvl xadz cyngx p fe\nrand tksqv yydu oqe pe d\nq n tjg jjq j\nlhwh pb dezu dbtqi grxp\nwdxl ttoaqt cxuty zbgxq pbmao\ntyb glgdnsy nt qkja prreg\nxwms zcic qfv aqmps bpzu",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "uq n rvuz rjzsyhqw whq\nllhyuzi xoa yman ddr qyu\njjhn zgz h f bpzr izev\nb pbo pea jlzg eq\nmt eh mdr rtv rjgcv\nyjzr jyqci ifus n apyvtpt\ndm mrbma pzqx ghijl hwlr\nyyape ommbx g a tlzf",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "arnfr rda pghya qafhyb tp\nidxrt bdhkxp lka qtobs ygxb\nyyvw t mf fem keas fz\nfw yfsc kudao jsbtyve pnoj\nc sowb rk ccxiw btg\nkrj eyfra k mtkcis nmqwma\nhh nsr v xsh p\nz bji u i x",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:13",
  "total_test_cases": 20
}
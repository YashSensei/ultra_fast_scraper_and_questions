{
  "problem_code": "problems",
  "title": "Candy II",
  "tags": [],
  "text": "Little Michael loves candies. Most of all, he likes chocolate, strawberry and banana flavored ones. No wonder that he has candy bags everywhere - there are at least four bags on his table, one or two in the pockets of his jeans, and one under his bed (just in case). Each bag contains some candies of all three flavors. Whenever he wants to eat a candy, he finds the nearest bag (which is usually is not very far because he has really A LOT of them) and eats the candy he wants.Yesterday, he wanted a strawberry one, so he opened one of his bags and... It is almost impossible to describe how great his disappointment was when he found out that there were no strawberry candies left in that bag. To make the matters worse, there were also none in the second bag he found. He was sure that he had lots of strawberry candies left, but he didn't know in which bags they were. Therefore, he decided to reorganize his candies, and keep the candies of the three different flavors in three distinct bags. He brought all his bags into the center of his room and realized, that there are really an awful lot of them.Michael has N bags full of candies. He knows the number of candies of each flavor in each bag. He wants to put all chocolate ones into one bag, all strawberry ones into another bag and all banana ones into yet another bag. He has to move the candies one-by-one, because he always has to look at it to determine its flavor. Moving one candy from one bag into another takes 1 second. Your task is to select the bag for each flavor, so that the total time required for Michael to move all the candies into their bags would be minimal.Input file specificationThe first line of the input file contains a single integer N - the number of bags (N â‰¤ 5000). Each of the following N lines consists of three numbers ci, si, bi- the numbers of chocolate, strawberry and banana candies in the i-th bag. The bags are numbered from 0 to N-1 in the order in which they appear in the input.Output file specificationOutput file should contain three lines with the following text:C [Bag for chocolate candies]\r\nS [Bag for strawberry candies]\r\nB [Bag for banana candies]The numbers C, S, B have to be such that the total number of the required moves is minimal. If there are more solutions, you may choose any of them.ExampleInput file:5\r\n10 10 10\r\n40 39 40\r\n10 20 30\r\n30 20 10\r\n1 2 27Output file:3\r\n1\r\n2Note: In this case Michael has to move 200 candies. If the bags for the different flavors were chosen in any other way, he would have to move more than 200 candies.Note: the test data is very naive for this problem.",
  "sample_input": "C [Bag for chocolate candies]\r\nS [Bag for strawberry candies]\r\nB [Bag for banana candies]",
  "sample_output": "Input file:5\r\n10 10 10\r\n40 39 40\r\n10 20 30\r\n30 20 10\r\n1 2 27Output file:3\r\n1\r\n2",
  "link": "https://www.spoj.com/problems/CANDY2",
  "scraped_at": "2025-08-17 00:34:28",
  "test_cases": [
    {
      "input": "C [Bag for chocolate candies]\r\nS [Bag for strawberry candies]\r\nB [Bag for banana candies]",
      "expected_output": "Input file:5\r\n10 10 10\r\n40 39 40\r\n10 20 30\r\n30 20 10\r\n1 2 27Output file:3\r\n1\r\n2",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "jkyks ubm ieb m hx\nzigpw y s qvsfcp sdqnz\npouks jer cgj n mpb",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "rur dgij ga qvu rdnkc\nth hy da ldx oudo\nj gq itlfe jx enqguyy",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "he laa ujkk uzcflmlkl qhsb\njpz rx f fugqmv f\niyymg pfpru smi lfdhu uidqk",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "lioza ilby jx m bs\ntjv qgspx vivej wfyqje ixuwwgyn\npb s kxjbu fruhu ybgky",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "xij gwcw bvh wjb rrmsnakk\ncqvb qvzr utbey ehuztmuj scw\ndjv jz hw p iydzdxrc",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "nkdjs w w vwzjdum isy\nrvpcw ok zf kkjpygnp njjshor\nhsl dkcza qbnks gte whntxmur",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "ggmy ezyij iiq vkpbojvfl d\nbrmjn ovf nxco dbbjdmzt a\niadx i uwiun xqyhp aaovfene",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "an lx ntt xa omdr\neguq id s qtwawcwv r\ntvq txpm dg x znwwcj",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "nj sx l hfncdi jbr\na xwmg fr miufqpoo msiapx\nbax oty dcbt mipvnc fskvdzsf",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "k tgzgy hwpsv zfu le\nmekkk xbxq eq doc fldaiwq\nh ua qt nzad pzbd",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "pno s c mgqt sspql\nmvqyp plj ckm ralfrogc ml\nxxby cwzne kqsa bajw qu",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "dqby irmpw yzwjj mh smcex\nar cqyam b gpiaghqpj en\nyv ha fj m rkv",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "ri nx oki wv ixtguc\nfzk znuiu wnik tam ze\ncjuyx lxxej u ibp rlwdfri",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "sjr zst y c lrxm\nzlaa lesr b auf yrwql\nu fstl m ewsr etxs",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "bm kk vmkwa idfet zwy\nldf r xwi ysndna uyhleal\nhsbp lax ng nksdp t",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "pzrqf nyzxq xkn lawuwn vomwsw\nfop dwdah f wtkvciarm sldnnr\ncw aneqj yloti mung rvl",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "ulnwg qdsgl u io xvlnnepf\nsowc psf buq yr wz\nt py pl jg ahob",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "mw j pqhq efshpvn uxcrdiij\nhwyns n yqn v tjtop\npynr yo lnxqd k kicjx",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "osg qoovc ww lobfmtrgw b\nu tlc i rg adylsw\nrut exxrt pua k znooduw",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:23",
  "total_test_cases": 20
}
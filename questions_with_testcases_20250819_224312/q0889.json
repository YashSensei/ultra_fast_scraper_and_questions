{
  "problem_code": "problems",
  "title": "Capital City",
  "tags": [],
  "text": "There are N cities in Flatland connected with M unidirectional roads. The cities are numbered from 1 to N. The Flat Circle of Flatland (FCF) wants to set up a new capital city for his kingdom. For security reasons,the capital must be reachable from all other citiesof Flatland. FCF needs the list ofallcandidate cities. You are the chief programmer at FACM (Flat Association for Computing Machinery) responsible for providing the list to FCF as soon as possible.InputThe first line of the input file contains two integers: 1 ≤ N ≤ 100,000 and 1 ≤ M ≤ 200,000. Each of the following M lines contains two integers 1 ≤ A, B ≤ N denoting a road from A to B.OutputThe output file contains an integer denoting the number of candidate cities followed by the list of candidate cities in increasing order.ExampleInput:4 4\r\n1 2\r\n3 2\r\n4 3\r\n2 1Output:2\r\n1 2",
  "sample_input": "Input:4 4\r\n1 2\r\n3 2\r\n4 3\r\n2 1Output:2\r\n1 2",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/CAPCITY",
  "scraped_at": "2025-08-17 00:33:27",
  "test_cases": [
    {
      "input": "4 4\r\n1 2\r\n3 2\r\n4 3\r\n2 1",
      "expected_output": "2\r\n1 2",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2 2\n2 7\n7 4\n5 4\n5 4",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "3 8\n7 9\n6 6\n8 10\n5 8",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "3 2\n8 4\n8 5\n5 2\n6 3",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "45 63\n29 72\n46 5\n86 30\n1 67",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "26 30\n54 40\n16 56\n21 76\n86 64",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "87 44\n64 16\n38 89\n12 49\n92 28",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "58 92\n60 17\n25 91\n87 73\n54 39",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "85 39\n87 78\n62 36\n10 63\n64 77",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "40 14\n20 22\n14 46\n28 5\n43 32",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "30 25\n21 16\n6 28\n15 42\n23 12",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "5 49\n39 16\n14 28\n19 22\n10 39",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "33 17\n35 21\n43 16\n35 28\n35 34",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "26 17\n50 8\n44 5\n11 47\n46 27",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "16 16\n14 16\n29 9\n26 19\n9 6",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "39 40\n46 7\n32 36\n31 25\n26 48",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "100 100\n100 100\n100 100\n100 100\n100 100",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "100 100\n100 100\n100 100\n100 100\n100 100",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "99 1\n1 2\n100 1\n1 2\n2 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 99\n100 99\n99 2\n100 99\n99 99",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:15",
  "total_test_cases": 20
}
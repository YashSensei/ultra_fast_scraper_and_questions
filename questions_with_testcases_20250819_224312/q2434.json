{
  "problem_code": "problems",
  "title": "Bouncing Balls II",
  "tags": [],
  "text": "\"Behold, my queen\", said the jester, \"the great Bouncing Ball Bowl!\" The queen boredly waved her hand and sarcastically replied: \"Let the fun begin!\". And the fun begun! The jester spoke a magic word and all the colorful balls in his bowl started to roll and bounce, creating interesting pictures.The queen watched vividly for a few minutes, but then she started to be bored again. \"Just wait a moment, Your Majesty, in a minute they'll…\" started the jester, but the queen interrupted: \"I'm a queen! I don't want to wait! Can't you just fast forward it or something?\"Problem specificationThe jester's box is anX*Y(1<=X,Y<=5000) rectangle. The rectangle containsN(N<=3001) small balls. At any moment, each ball is travelling at the same speed in one of the four diagonal directions.The movement of the balls is continuous and for the purpose of this problem we may consider them to be points. When two or more balls meet, they bounce in a way described below.Your task is to determine the state of the box at given moments in time.Bouncing specificationBouncing does not change the speed of the balls. Following images show how the balls bounce off each other, and also off walls. Each image can be rotated arbitrarily. For example, the first image shows that whenever two balls meet at a right angle, they bounce and depart at a right angle again. One particularly tricky case is shown in the third image.Input specificationThe input starts with a line containing the dimensionsXandYof the box. We will use a coordinate system with axes parallel to the sides of the box, (0,0) at one of the corners and (X,Y) at the opposite corner.The second line contains the number of ballsN.Each of the nextNlines contains four integers x,y,vx,vy, where (x,y) are the coordinates of one ball at time 0 and (vx,vy) is its current velocity vector. (Each ball will be strictly inside the box and for each ball both the absolute values of vx and vy will be equal to 1. No two balls will start at the same place.)The following line contains the number of queen's requests M.(1<= M <=20)On the last line there are M numbers t1,…,tM– the points in time the queen wants to see. These numbers will be less than 1012.Output specificationAs a solution to this problem, we expect a file with M blocks, with the i-th block describing the situation at time ti.Each block must contain N lines, and each line must contain the x and y coordinates of one ball. The balls in each block must be sorted – primarily by to their first, secondarily by their second coordinate at that point in time.You may output an empty line between the blocks.ExampleInput:6 4\r\n4\r\n1 2 1 1\r\n5 2 1 1\r\n2 1 1 -1\r\n3 1 -1 -1\r\n1\r\n4Output:1 3\r\n3 2\r\n5 2\r\n6 3Note that the balls that start at (2,1) and (3,1) bounce off each other at a non-integer point in time.",
  "sample_input": "Input:6 4\r\n4\r\n1 2 1 1\r\n5 2 1 1\r\n2 1 1 -1\r\n3 1 -1 -1\r\n1\r\n4Output:1 3\r\n3 2\r\n5 2\r\n6 3",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/BOBALLS2",
  "scraped_at": "2025-08-17 00:33:56",
  "test_cases": [
    {
      "input": "6 4\r\n4\r\n1 2 1 1\r\n5 2 1 1\r\n2 1 1 -1\r\n3 1 -1 -1\r\n1\r\n4",
      "expected_output": "1 3\r\n3 2\r\n5 2\r\n6 3",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5 10\n6\n2 2 10 5\n10 10 7 8\n2 10 3 5\n9 7 9 6\n4\n2",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "8 9\n3\n9 8 10 9\n1 4 5 1\n8 10 6 2\n6 5 5 3\n2\n8",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "10 7\n8\n5 10 2 7\n4 9 3 10\n8 10 7 9\n4 8 7 2\n7\n7",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "7 86\n81\n13 38 43 7\n78 32 92 82\n19 94 59 41\n38 48 16 10\n45\n5",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "55 65\n93\n17 93 35 18\n17 63 56 3\n36 6 55 76\n35 26 77 12\n86\n14",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "51 19\n55\n48 52 21 27\n86 28 99 20\n81 33 46 86\n22 61 35 80\n95\n11",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "3 51\n39\n78 19 16 16\n29 71 2 11\n98 87 57 23\n30 54 53 28\n33\n60",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "95 52\n22\n45 44 22 38\n77 45 41 83\n57 1 47 73\n18 74 18 74\n93\n41",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "155 466\n177\n285 232 204 499\n205 327 298 367\n303 252 462 386\n196 123 168 322\n350\n238",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "495 114\n386\n362 407 289 135\n296 117 347 267\n426 70 205 70\n234 202 398 471\n97\n135",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "115 75\n132\n348 68 292 190\n93 105 249 58\n485 338 265 82\n215 470 134 199\n420\n417",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "66 96\n196\n327 458 405 318\n166 118 153 343\n183 366 319 316\n396 342 127 246\n440\n281",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "140 212\n191\n192 279 176 131\n271 482 200 181\n232 137 233 233\n468 310 349 231\n223\n327",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "188 479\n242\n114 360 431 269\n475 378 79 492\n439 116 268 220\n102 399 63 248\n102\n458",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "304 438\n452\n154 362 363 265\n437 117 210 438\n387 318 322 110\n455 354 455 185\n473\n358",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000\n1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000\n1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 2\n2\n2 2 999 999\n1000 2 999 1000\n2 1 2 1\n1000 999 1 1\n2\n2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 1000\n999\n999 999 2 999\n1000 1000 1 2\n2 1 1 2\n1 1000 1 1000\n1\n1000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:20",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Square Free Factorization",
  "tags": [],
  "text": "You all know about factorization of an integer. Here we want you to factor a number into as few factors as possible. That is easy, you say, just have the number itself, and that will be the smallest number of factors i.e. 1.But wait, I haven't finished — each of the factors that you find must be square-free. A square-free number, however you factor it, won't have any factor that is a perfect square.  Of course, you can never include 1 as a factor.InputThe first line of input is the number of test cases T. The next T lines each have an integer N.OutputFor each test case, output the smallest number of square-free factors.ConstraintsT ≤ 1042 ≤ N ≤ 106ExampleInput:2\r\n6\r\n8Output:1\r\n3",
  "sample_input": "Input:2\r\n6\r\n8Output:1\r\n3",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/AMR10C",
  "scraped_at": "2025-08-17 00:33:31",
  "test_cases": [
    {
      "input": "2\r\n6\r\n8",
      "expected_output": "1\r\n3",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3\n2\n9\n5",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "4\n2\n6\n8\n8",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "2\n5\n3",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "17\n75122882\n5799204\n43964728\n55455264\n13236264\n91956341\n17265505\n25972899\n50367915\n53139765\n50767222\n85326647\n90283784\n70206205\n51862561\n94415190\n62369728",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "5\n50216150\n11240932\n84838757\n30850883\n51382480",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "6\n34681159\n15271540\n65421373\n88729999\n58206998\n50260024",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "18\n54629376\n16361829\n11194702\n3155934\n55186158\n53942966\n82214897\n43982203\n99006563\n31496591\n30807495\n31890640\n32326609\n23153724\n10487970\n26239248\n40195042\n3304847",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "15\n20958003\n27158821\n95195775\n32130171\n83711022\n68531027\n86301785\n14728768\n17788503\n17286674\n97845117\n95918611\n75805852\n12609558\n89998714",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "90\n53762\n34442\n70616\n1353\n30073\n43927\n3528\n10932\n23764\n84814\n7443\n10621\n21900\n41781\n17599\n85640\n61910\n5950\n93519\n75034\n18997\n43139\n35205\n65217\n86070\n11608\n34952\n70471\n48075\n71118\n68427\n96753\n57941\n80209\n51845\n58837\n40518\n33751\n7240\n45076\n84014\n94361\n44655\n74447\n26938\n49273\n55582\n86672\n18720\n67200\n19639\n24737\n55907\n87112\n85816\n9155\n59257\n91835\n84359\n23959\n30720\n70961\n78412\n30075\n30313\n98514\n39485\n2419\n89698\n22866\n43341\n63723\n82151\n62895\n65808\n11860\n82162\n26324\n74944\n68383\n36474\n51430\n6639\n76137\n30924\n75672\n34991\n23959\n15879\n19701",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "54\n56286\n22335\n65866\n8728\n68357\n88378\n78203\n93371\n56077\n30853\n20180\n22331\n42891\n51101\n70545\n63284\n42218\n69989\n21744\n92734\n23173\n96737\n42707\n74406\n93185\n6623\n59514\n36578\n20158\n76517\n67103\n8123\n97983\n31774\n26446\n43623\n31417\n30612\n29963\n19752\n34877\n77956\n84001\n91375\n26517\n58830\n19137\n96964\n15383\n59462\n29413\n40502\n24672\n11840",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "34\n36395\n88983\n8570\n36003\n80062\n70299\n33457\n38025\n39418\n15791\n29401\n73409\n85235\n95940\n21337\n48217\n86056\n54701\n19880\n13768\n55955\n25626\n44615\n7487\n83416\n84432\n48276\n56084\n9365\n69581\n52112\n40931\n75213\n41925",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "81\n4439\n65289\n90082\n95341\n81699\n84894\n31951\n40992\n15445\n32486\n2884\n44488\n72776\n46758\n98103\n15831\n17202\n63925\n4271\n32526\n40581\n79010\n62418\n3320\n78779\n39840\n83220\n21219\n65394\n45703\n43968\n26312\n26101\n45109\n5329\n79\n66516\n54756\n13433\n95607\n69663\n7824\n90207\n34998\n60703\n12207\n93491\n78334\n5224\n17229\n4985\n53374\n70206\n38625\n40855\n35116\n64180\n38400\n31485\n30423\n60931\n40845\n53510\n71116\n55461\n13234\n66173\n29352\n90875\n74331\n97859\n53603\n13681\n45030\n25166\n94583\n50094\n35127\n80838\n8515\n461",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "37\n7035\n73330\n89719\n54887\n71\n36070\n59275\n82071\n64020\n90376\n92749\n14337\n76212\n43098\n80606\n56005\n37153\n7546\n90415\n1119\n99460\n64122\n76573\n30368\n12186\n37101\n81607\n92661\n25968\n78314\n46519\n31200\n55399\n6673\n97524\n14185\n45671",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "28\n43328\n87288\n65983\n97761\n22054\n56014\n86627\n62217\n7387\n43383\n35236\n18817\n57878\n44782\n17290\n20305\n49245\n54505\n7545\n19437\n57834\n86535\n76001\n19214\n3647\n16889\n54604\n2042",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "22\n65376\n76465\n142\n32130\n26498\n56672\n36483\n23243\n63649\n79819\n98730\n45725\n80461\n91914\n74634\n20558\n11347\n46066\n81733\n35231\n31929\n75341",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "106\n46312965\n76966162\n68219426\n73588224\n73776531\n30255769\n21195293\n72987187\n88278363\n21906442\n97119878\n77166916\n67391500\n73655404\n99495544\n27522436\n90898179\n14154007\n56490088\n42272839\n29522877\n14765553\n7231762\n87322148\n54568249\n37021542\n39831712\n60830954\n36967197\n81719164\n60947575\n6022260\n80811198\n51367109\n7734483\n65235302\n16002556\n27064407\n33686001\n32989404\n83450750\n41316355\n84582476\n13404265\n77628327\n37217075\n21176674\n25370441\n99567058\n54361846\n11563008\n26994247\n20061162\n70675607\n86978575\n13724227\n91466973\n51034512\n63919072\n53347090\n42540846\n17639076\n56704463\n94869479\n42879949\n80249005\n37806957\n69972027\n96562758\n53979887\n15929795\n43913404\n91835070\n13839411\n61062797\n5074897\n5909188\n6101042\n53197096\n91112896\n68347187\n32278998\n75897640\n47746237\n5259170\n93032055\n58355479\n92213564\n52277887\n88679101\n30846345\n68387927\n67180214\n38357486\n40199972\n91047587\n24223586\n97252116\n72373393\n34642973\n76888402\n7070466\n65173872\n4037401\n19190007\n82605411",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 106)"
    },
    {
      "input": "106\n25631040\n25093958\n53079071\n50636849\n67934602\n33699471\n54126209\n53351502\n28232002\n77988336\n55523015\n24512340\n82605122\n58202436\n68161539\n3453543\n66280713\n39684107\n19099781\n27447380\n47392816\n6978477\n58698549\n400709\n85311709\n89659195\n54881791\n11690335\n49756773\n88217889\n51806736\n53013398\n71134763\n67879748\n40071754\n93046656\n73039323\n53348664\n49442175\n58246679\n95060405\n26159459\n62916143\n31034917\n1912471\n39631344\n98294487\n95216844\n52705837\n85609885\n73976335\n77360786\n87337407\n69825288\n87091040\n10242018\n9252145\n1360716\n95148538\n17837670\n49265927\n26243630\n67144576\n39662104\n74197241\n58527395\n85680470\n47908997\n36648228\n24128800\n47252964\n98613344\n23418937\n54384858\n83897461\n83194704\n95135353\n98524344\n96239926\n98770068\n54967647\n34236836\n1768760\n34631371\n20605969\n28073345\n29736644\n844744\n96988923\n23174035\n72552003\n35710712\n59729499\n36866011\n8470219\n66391949\n18736848\n86306363\n3759605\n49297687\n2919231\n4440699\n11756103\n20614676\n79237027\n77912537",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 106)"
    },
    {
      "input": "2\n1\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 2)"
    },
    {
      "input": "2\n49609395\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 2)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:16",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Who is the Best?",
  "tags": [],
  "text": "Baratheon is one of the oldest houses in the Land of Seven Kingdoms. There have been many kings and their many heirs. The hierarchy is represented as a tree where each character is a node with initial value as theVarys_Valuegiven by Lord Varys. You are the analyser appointed to the current King to give insights about a character.There areQcommands given by the King which can be any of the following type:1. Multiply theVarys_Valueof all the characters in path fromutovby a given numberP.2. For a given characterX, find the number ofordered pairs (i,j)such thatLCM(i,j)is equal to current value at nodeX. (Insight)For commands of second type, print the number of such pairs (modulo1000000007).InputFirst line contains 2 space separated integersNandQindicating the number of total characters and number of queries you need to answer.In the nextN-1lines, each line contains 2 integersu,vwhich indicates a relationship between characteruand characterv.Next line containsNspace separated integerV1, V2, V3, ...... VNwhereViindicates the Varys_Value ofithcharacter.FollowingQlines contains the queries to be answered.Types of Queries:1 u v P- Query of first type2 X- Query of second typeOutputFor each query of second type, print the answer to the query in a new line.Constraints1 ≤ N ≤ 1000001 ≤ Q ≤ 1000001 ≤ u, v ≤ N1 ≤ P ≤ 1001 ≤ Vi≤ 100000ExampleSample Input:6 6 \r\n1 2\r\n4 6\r\n1 3\r\n5 1\r\n4 5\r\n7 8 4 8 1 2\r\n1 2 1 14\r\n2 4\r\n1 6 5 10\r\n2 5\r\n1 6 4 10\r\n2 1Sample Output:7\r\n9\r\n15",
  "sample_input": "Sample Input:6 6 \r\n1 2\r\n4 6\r\n1 3\r\n5 1\r\n4 5\r\n7 8 4 8 1 2\r\n1 2 1 14\r\n2 4\r\n1 6 5 10\r\n2 5\r\n1 6 4 10\r\n2 1Sample Output:7\r\n9\r\n15",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/INS16F",
  "scraped_at": "2025-08-17 00:34:18",
  "test_cases": [
    {
      "input": "Sample 6 6 \r\n1 2\r\n4 6\r\n1 3\r\n5 1\r\n4 5\r\n7 8 4 8 1 2\r\n1 2 1 14\r\n2 4\r\n1 6 5 10\r\n2 5\r\n1 6 4 10\r\n2 1Sample",
      "expected_output": "7\r\n9\r\n15",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "8 10\nihhai 7 1\n6 3\n6 3\n3 6\n7 3\n7 5\n9 1 7 4 7 5\n8 5 5 1\n4 3\n4 1 1 2\n9 4\n8 6 5 8\n5 1\n4 t",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "9 3\nl 4 8\n2 4\n6 4\n5 8\n3 5\n9 8\n2 3 5 5 10 10\n7 9 10 1\n9 7\n2 1 1 10\n9 7\n5 8 5 10\n5 1\n2 miqc",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "2 8\naxjngz 9 3\n4 7\n4 8\n10 5\n1 4\n2 1\n3 7 2 2 2 3\n9 7 9 3\n10 5\n4 2 2 3\n2 9\n3 4 1 4\n2 8\n8 r",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "75 68\nvk 87 81\n34 62\n49 34\n68 6\n58 54\n37 85\n57 85 40 69 12 55\n45 44 31 84\n4 83\n45 12 95 89\n86 14\n9 22 78 22\n71 40\n37 ahpyah",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "49 20\ncrszr 18 56\n33 58\n14 69\n97 14\n41 29\n50 33\n53 18 21 95 20 15\n97 36 96 57\n5 52\n93 98 34 15\n9 100\n31 51 80 18\n18 76\n62 wkx",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "64 91\nsutt 54 40\n86 36\n52 31\n95 24\n6 26\n65 81\n75 43 57 90 75 98\n5 20 71 94\n21 46\n26 32 71 72\n59 10\n47 4 66 94\n14 46\n7 zebk",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "35 68\ntnkb 60 45\n53 2\n93 96\n47 58\n9 42\n6 48\n66 15 54 69 61 26\n68 40 35 41\n16 50\n93 41 62 67\n8 67\n33 38 34 83\n96 14\n94 ynkpkp",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "25 40\ncpcigi 32 77\n50 5\n98 98\n30 65\n45 1\n85 67\n80 90 99 13 21 61\n83 19 2 89\n95 92\n88 42 65 85\n30 50\n34 55 97 60\n54 12\n7 knewkds",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "91048 334058\nsg 135498 333296\n139819 374575\n206109 277559\n424773 355386\n169357 326036\n375015 447156\n485767 109602 206704 438955 314994 488815\n215499 238033 330745 220871\n164110 258750\n229088 372625 351396 429460\n324429 396007\n114790 99865 393061 356649\n86714 263568\n449756 a",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "280129 322940\nyi 257398 127945\n161938 168610\n422302 300703\n234768 332622\n117696 103389\n481080 325849\n83779 77830 54966 245844 206636 410970\n463233 490671 171394 353732\n253503 256066\n493680 54691 143579 383704\n157412 214012\n238370 316084 336098 473656\n293297 270212\n243006 azfmji",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "409900 458414\nylvdp 374881 381657\n113567 479861\n70270 474486\n97895 98149\n265453 338524\n200778 318250\n152806 238606 142249 276662 466353 339792\n473057 97007 52082 266394\n343499 71121\n76362 248843 139328 146627\n432773 380902\n121598 426422 117444 64605\n312162 282650\n458815 zfvtrco",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "146764 489691\nmmc 442736 340539\n415308 183946\n144536 60018\n379651 69143\n408858 65330\n169024 262733\n270144 75616 216500 217089 205481 454740\n453351 232695 298961 110721\n275602 307583\n400108 198052 300599 495843\n124521 188820\n119102 86915 268057 338898\n230540 385819\n158616 mejrn",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "197522 111112\nic 457910 116863\n482500 246356\n54526 426658\n279572 366217\n307212 304196\n145392 413785\n96576 497376 294261 172128 243608 428124\n387342 63431 409159 152450\n134360 390922\n56932 135992 368043 425714\n112334 388296\n132340 145299 327563 347533\n67827 346910\n82374 phm",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "71703 217862\ni 174473 407174\n382591 278129\n305542 124721\n499125 270031\n380134 254731\n128639 260763\n283831 353270 323294 298225 276342 319185\n267075 228981 320497 152480\n378657 460037\n203492 194494 313847 227001\n143976 137114\n223302 283757 433784 458247\n413978 115650\n92559 xnxygky",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "243001 165545\ngiamk 98104 484259\n418872 237341\n459736 397412\n387142 372462\n66598 88103\n301226 349687\n58964 336589 181036 382533 253523 422165\n191244 471305 273668 493699\n353315 248796\n364994 345015 143065 147013\n440329 62242\n489024 262585 335481 409031\n53561 375223\n240778 uckew",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000000 1000000\nplory 1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000 1000000 1000000 1000000 1000000\n1000000 1000000 1000000 1000000\n1000000 1000000\n1000000 1000000 1000000 1000000\n1000000 1000000\n1000000 1000000 1000000 1000000\n1000000 1000000\n1000000 chcxvw",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000000 1000000\nkw 1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000 1000000 1000000 1000000 1000000\n1000000 1000000 1000000 1000000\n1000000 1000000\n1000000 1000000 1000000 1000000\n1000000 1000000\n1000000 1000000 1000000 1000000\n1000000 1000000\n1000000 hwwfxq",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "999999 2\nkiz 2 1\n1000000 999999\n2 1000000\n2 2\n1000000 1000000\n999999 1\n1000000 1000000 2 1 1000000 2\n1000000 999999 999999 2\n1000000 1000000\n2 999999 2 2\n1000000 999999\n2 1 1000000 1000000\n1 1\n1 oe",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1000000 999999\np 1000000 999999\n2 2\n1 999999\n1 1000000\n1 1\n1 2\n1000000 999999 1000000 2 1000000 1000000\n1 1000000 999999 999999\n2 2\n1000000 999999 999999 1\n1000000 2\n999999 999999 1 999999\n1000000 2\n1000000 efk",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:22",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Ada and Salesman",
  "tags": [],
  "text": "Ada the Ladybug lives in Bugladesh. It is a very specific country - there are some cities, but since the government doesn't \"waste\" money, they all lie on one simple path.Ada is working as Traveling Salesman. She travels between cities, buying and selling products. A product has some varying price in each city (same for buy/sale - described later). Ada travels with bike (to avoid payments for travels) so she can carry at mostKitems at time in her backpack.She is currently in the first city, and she wants to linearly go to last city. She wants to buy/sell items in a way to maximize her profit. Can you help her?The system is following: Ada has a bag which can carry at mostKitems. She travels cities linearly (from citycto cityc+1). Ss she is in a cityc, she can either immediately move to next cityorbuy a licence to trade forLcmoney. For each city it is also given magical constantPc. The buying/selling system is pretty weird. Buying an item in citycwhile actually havingi-1items in backpack costsPc*i*c%MOD. Similarly selling of an item in citycwhile actually havingiitems in backpack is forPc*i*c%MOD. You can buy any number of items in a city and you can also sell any number of items in city. Anyway note that the number of items can't exceedK(and obviously can't be negative).InputThe first line of input will contain three integers1 ≤ N, K ≤     3000and1     ≤ MOD ≤  104.The next line will containNintegers0 < Li≤     1000, the cost of licence for each city.The next line will containNintegers0 < Pi≤     1000, the magical constant for each city.Cities are numbered from 1.OutputOutput the maximal number of money Ada can gain.Example Input5 1 3\r\n1 1 1 1 1\r\n1 1 1 1 1Example Output0Example Input5 5 6\r\n1 1 1 1 1\r\n1 1 1 1 1Example Output9Example Input6 10 11\r\n1 2 3 3 2 1\r\n1 3 2 5 1 7Example Output19Example Input9 2 20\r\n6 6 6 6 6 6 6 6 6\r\n2 4 6 8 2 4 6 8 5Example Output16Example Input10 2 20\r\n5 9 3 4 7 5 2 4 7 2\r\n2 1 4 5 4 5 6 3 2 5Example Output25",
  "sample_input": "5 1 3\r\n1 1 1 1 1\r\n1 1 1 1 1",
  "sample_output": "0",
  "link": "https://www.spoj.com/problems/ADASALE",
  "scraped_at": "2025-08-17 00:34:08",
  "test_cases": [
    {
      "input": "5 1 3\r\n1 1 1 1 1\r\n1 1 1 1 1",
      "expected_output": "0",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1 5 4\n5 4 9 1 10\n2 6 2 3 9",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "1 10 10\n9 5 9 3 8\n1 8 2 7 8",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "5 4 1\n8 6 1 8 8\n5 1 6 3 4",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "7 72 84\n81 36 74 58 4\n84 42 72 36 27",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "11 50 38\n16 60 46 86 75\n85 4 48 22 26",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "80 3 45\n29 1 5 17 93\n100 69 3 78 37",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "77 10 43\n41 9 12 27 58\n19 73 8 53 79",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "77 68 76\n11 16 87 9 33\n53 14 93 49 14",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "301 435 334\n371 459 307 355 373\n213 254 174 141 159",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "120 366 485\n447 308 91 458 432\n326 389 472 108 416",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "405 322 399\n346 359 308 74 188\n287 59 50 391 121",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "499 56 59\n418 411 339 194 243\n117 371 340 183 109",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "422 226 311\n325 145 64 54 440\n199 363 463 249 400",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "363 490 268\n129 60 408 357 436\n485 54 184 356 184",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "293 283 148\n61 387 442 95 466\n373 121 257 346 434",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000\n1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000\n1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 999 999\n1000 1 2 2 1000\n999 1000 1 999 1000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "999 1 1000\n1000 2 2 2 2\n999 2 999 999 999",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:22",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Naughty and Balls",
  "tags": [],
  "text": "Mr. Naughty likes to play with balls. So his friend, Mr. Nice, gave himnballs to play a game. Each ball has exactly two numbers (the number on the top and the number on the bottom). In one move Mr. Naughty can rotate any ball so that its bottom now becomes the top. Mr. Nice knows the minimum number of such moves that can make at least half of the balls show same number on their top. So to win Mr. Nice's game, Mr. Naughty should figure out the minimum number of moves. It's not always possible to make such moves that satisfy the given condition. In this case Mr. Naughty should figure out that it is \"Impossible\" to make such moves.Help Mr. Naughty to win the game.InputThe first line contains a single integern- the number of balls. The followingnlines contain the description of all balls, one ball per line. Each description has a pair of non-negative integers not exceeding105- numbers on top and bottom. The first number in a line is the number on top, the second one - on the bottom. The number on the top of the ball may be same as the number on the bottom.The numbers in the lines are separated by single spaces.OutputOn a single line print a single integer - the minimum number of moves to win the game. If it is impossible to make the set funny, print \"Impossible\" (quotes for clarity).Constraints:1 ≤ n ≤ 105SampleInput:3\r\n3 100\r\n100 3\r\n5 4Output:1ExplanationIn this case Mr Naughty can rotate the first ball so that number on the top becomes 100. Since two of the three balls have same number on their top (100), you do not need to change anything else, so the answer is 1.Input:5\r\n5 9\r\n5 9\r\n3 2\r\n1 4\r\n5 7Output:0Input:3\r\n1 2\r\n3 4\r\n5 6Output:ImpossibleProblem Setter: Prateek Sachdev",
  "sample_input": "Input:3\r\n3 100\r\n100 3\r\n5 4Output:1",
  "sample_output": "Input:5\r\n5 9\r\n5 9\r\n3 2\r\n1 4\r\n5 7Output:0",
  "link": "https://www.spoj.com/problems/NAUGHTY",
  "scraped_at": "2025-08-17 00:34:16",
  "test_cases": [
    {
      "input": "3\r\n3 100\r\n100 3\r\n5 4",
      "expected_output": "1",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5\r\n5 9\r\n5 9\r\n3 2\r\n1 4\r\n5 7",
      "expected_output": "0",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "2\n4\n4",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n4",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "3\n10\n10\n10",
      "expected_output": "To be computed",
      "type": "small_case_5",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "6\n47195750\n20552194\n31226989\n53248816\n13323652\n14164718",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "12\n47484271\n91781708\n16632929\n62411910\n68867016\n85863002\n21069280\n90800456\n69831957\n97946965\n41729361\n88932847",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "9\n74068872\n51960248\n93036488\n3399180\n38160398\n41900756\n91142262\n97634281\n15436841",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "18\n18140987\n66029020\n99188266\n90723289\n6119496\n42546929\n36299362\n24099272\n90989533\n23816928\n25890820\n42038615\n38244973\n93621098\n42790522\n53864495\n66702775\n75845986",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "6\n82314308\n13328288\n88704291\n9253284\n47780362\n42636257",
      "expected_output": "To be computed",
      "type": "medium_case_10",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "86\n53529\n11764\n420\n71834\n56873\n832\n87777\n82620\n9726\n21297\n99044\n29546\n61188\n70211\n14780\n12569\n55934\n56360\n59317\n96235\n46038\n15882\n44238\n91496\n47596\n882\n90390\n49153\n42519\n21742\n20634\n74248\n14295\n66665\n95210\n61034\n7078\n13857\n26784\n89444\n98445\n41802\n83160\n96288\n58003\n78782\n80005\n44297\n16415\n78801\n25205\n52539\n52679\n5768\n92886\n10358\n75522\n17852\n38154\n66505\n22713\n49334\n28577\n85202\n67409\n43578\n46364\n10103\n70169\n65962\n87262\n27576\n10143\n43812\n11764\n87512\n96057\n76613\n65415\n94300\n21151\n30831\n78290\n89681\n83025\n13438",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "65\n14405\n71904\n22144\n61057\n78644\n83463\n44708\n10742\n40013\n79165\n70537\n84222\n57968\n27947\n32007\n13324\n66125\n89319\n53865\n33568\n98608\n48823\n61107\n63451\n26217\n91304\n56148\n71094\n84765\n18242\n41966\n13666\n2953\n41645\n35749\n58216\n96820\n52554\n9827\n2927\n81192\n94903\n18064\n11964\n68562\n27668\n84760\n80192\n54676\n72836\n76891\n8557\n91094\n75385\n94375\n60474\n14339\n4712\n73126\n9321\n9135\n83302\n95578\n77037\n5081",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "84\n45155\n55070\n50149\n31816\n74934\n84177\n46756\n22110\n36896\n10053\n22125\n70186\n24476\n17105\n64081\n29725\n96075\n3260\n64246\n26886\n27644\n52810\n27775\n66458\n40733\n13103\n50682\n54072\n71228\n91589\n94225\n48616\n92581\n50252\n76674\n79753\n46611\n37842\n34512\n74888\n14422\n95869\n8853\n26168\n74403\n49711\n63245\n91225\n47513\n27957\n65511\n75000\n86412\n13216\n93279\n36905\n62979\n72244\n69722\n99936\n70454\n18039\n10779\n65672\n32788\n63883\n37839\n63774\n34283\n27526\n64068\n25201\n41040\n18918\n52897\n64472\n26924\n53225\n49601\n97815\n31246\n5025\n35280\n55625",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "41\n38232\n59437\n47403\n40072\n28647\n69721\n97401\n86971\n26620\n423\n83416\n3161\n1366\n24969\n66858\n60192\n27138\n40115\n77175\n51760\n9342\n96122\n44820\n72881\n86176\n30201\n37248\n68482\n25734\n53952\n86601\n20974\n76205\n69326\n27458\n14781\n73535\n24569\n69593\n88482\n74248",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "102\n46219\n98528\n54678\n89380\n41314\n93073\n44140\n84994\n8387\n87950\n53738\n6140\n72273\n6866\n9886\n27167\n5554\n48598\n56457\n96051\n92308\n81430\n52834\n51316\n35468\n33760\n78296\n84829\n84148\n74273\n44318\n35771\n37509\n21607\n44104\n31192\n47448\n16110\n74030\n82515\n48332\n60889\n15969\n31671\n98704\n1024\n7588\n54023\n62894\n94154\n81095\n31379\n62917\n13016\n66358\n33452\n10952\n62538\n13331\n21442\n25812\n44482\n37594\n34388\n79395\n25374\n15399\n12592\n76854\n27091\n77330\n20895\n71411\n75232\n8646\n19570\n79328\n95686\n17435\n39268\n83702\n24779\n33065\n22789\n24635\n94866\n72860\n48094\n60441\n9880\n96424\n39144\n93481\n92621\n90688\n49207\n66455\n6377\n88183\n34593\n44478\n80466",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "105\n55513\n16628\n85494\n53914\n71482\n19691\n68548\n19026\n84811\n96581\n98744\n9582\n40459\n16690\n52600\n26365\n14527\n20406\n44515\n30569\n14949\n43989\n44016\n6600\n44815\n15809\n67783\n98646\n52503\n86213\n91386\n16052\n60122\n66176\n85073\n86859\n38743\n51682\n83140\n71586\n75998\n16132\n18969\n73546\n30201\n81417\n81782\n95019\n41596\n53895\n3025\n74396\n23139\n32219\n11931\n17993\n6480\n77522\n8542\n64146\n68811\n6056\n52531\n66413\n4186\n18178\n37366\n31236\n78823\n91301\n28239\n55675\n28637\n70388\n63889\n41727\n5750\n17694\n6665\n41577\n50624\n3362\n83491\n42294\n31170\n16131\n583\n6953\n66583\n74148\n48679\n85696\n15657\n66284\n89094\n18301\n95346\n60521\n22398\n6107\n30403\n69030\n31401\n98570\n89572",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "103\n36875\n80421\n93069\n3456\n72213\n66038\n85562\n80825\n44973\n79387\n5242\n4259\n25945\n12341\n74223\n18365\n23982\n64175\n46562\n38482\n14864\n76062\n93057\n68953\n90857\n8560\n43065\n13521\n78589\n41447\n24973\n70633\n61678\n4245\n14487\n30551\n57424\n53332\n67711\n70625\n70651\n8597\n7962\n40332\n32573\n29361\n92264\n63477\n30690\n75743\n76165\n85810\n54090\n64428\n27639\n99542\n49494\n56408\n35939\n29085\n51317\n9986\n45172\n95854\n73101\n23444\n60346\n59045\n40533\n42151\n85624\n19873\n83239\n7856\n67041\n75853\n89848\n97578\n46586\n50546\n61343\n83767\n65805\n41861\n14823\n71256\n25529\n38844\n18149\n28011\n94952\n35547\n52686\n66044\n26912\n88546\n30479\n91676\n22317\n62764\n50219\n25973\n66242",
      "expected_output": "To be computed",
      "type": "large_case_17",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "105\n26184856\n99945150\n90608453\n4846109\n19938453\n13067342\n85531952\n68205725\n45296645\n11491339\n48927099\n77635684\n93345349\n46955213\n23923219\n84524075\n78391309\n64521575\n26085749\n7369901\n71056014\n76281744\n34915323\n89071450\n69213711\n81584911\n35375018\n97636187\n26952042\n88116949\n1119658\n43707528\n38995544\n1907884\n84384789\n38222898\n45093843\n89603366\n6846095\n28605897\n59307242\n43515147\n18718054\n38664622\n34209487\n25466320\n64827920\n61230485\n53760696\n67089685\n21202614\n37333437\n46246645\n54825912\n77782099\n66957914\n67722599\n11614593\n89374701\n54769172\n91148456\n28144662\n77713098\n49296502\n4387712\n91470591\n67466955\n46151330\n26823438\n52194033\n5557539\n70991859\n30176258\n90189294\n5007445\n92328414\n23773595\n98603149\n91166859\n81185128\n34151009\n31928247\n19966907\n52779766\n21662789\n71235357\n18551028\n88528706\n28998424\n85314248\n6737094\n83942838\n49048126\n46879254\n37419460\n63864048\n92299901\n43297372\n73893659\n36673541\n92943430\n68019529\n63467516\n55943831\n52515198",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "105\n74519671\n22666360\n86350279\n77261860\n3356881\n81959891\n34477511\n35854658\n95381547\n7506737\n28624566\n85850637\n85923394\n88483562\n82162524\n81313241\n85187618\n87475198\n64026341\n67890100\n29699225\n10333701\n45882113\n25036535\n96741189\n42046016\n14482497\n98403414\n31257186\n40298258\n55270288\n3609208\n5791609\n80071752\n52837382\n91431123\n34184644\n80364933\n84447133\n61512163\n992896\n43488992\n36612351\n9983338\n63471087\n73888387\n66872543\n31852029\n49659745\n22541779\n6061010\n26869505\n10068875\n20700250\n94174845\n11659176\n21910170\n28009769\n8133532\n99412949\n68268134\n14340904\n71905898\n20137731\n69225466\n79072044\n44895199\n83517819\n53627586\n8769957\n42276528\n34272004\n82845084\n39663881\n78625662\n87730736\n99780073\n10682833\n34566249\n18925120\n99233169\n24799412\n34861993\n88920201\n21660382\n87121459\n28911332\n2274364\n60326768\n17501681\n36081166\n48070683\n49115647\n17329251\n69989701\n71744632\n640829\n58093015\n71991253\n8926310\n84483209\n14847731\n40083365\n32903628\n46967412",
      "expected_output": "To be computed",
      "type": "max_case_19",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "1\n1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 1)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:24",
  "total_test_cases": 20
}
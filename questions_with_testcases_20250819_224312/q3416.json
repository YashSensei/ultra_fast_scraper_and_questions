{
  "problem_code": "problems",
  "title": "Making Money",
  "tags": [],
  "text": "A trick sometimes used by parents to teach their children the value of money is to give then a penny – just\r\na penny! – and the promise that for each day they don’t spend it, the parent will double it. All students of\r\ncomputing know that long before a month has elapsed without spending a cent, the parents will not likely be\r\nable to make good on their promise.100-percent compound daily interest on an investment is, of course, unattainable in normal financial\r\ndealings, but we are all continually reminded of the power of compound interest, even with the relatively\r\nlow interest rates available today.But exactly how much money can be made with compound interest? Assume, for example, an initial\r\ninvestment of $100.00 (US or Canadian ☺), an annual interest rate of 6.00 percent, and that interest is\r\ncompounded monthly. That is, the interest earned during the preceding month is added to the principal at\r\nthe end of the month. (For our purposes, we’ll assume a month is exactly 1/12th of a year.)At the end of the first month, the money will have earned 0.5 percent interest (1/12th of 6.00 percent), or\r\n$0.50. This is added to the $100.00 invested, so that during the next month, interest is paid on $100.50.\r\nDuring the next month another 0.5 percent interest is earned, which is exactly $0.5025. We will assume\r\nthat the bank, being conservative, will not pay any interest less than $0.01, so our investment is credited\r\nwith an additional $0.50 at the end of the second month, for a whopping total of $101.00. Continuing in the\r\nsame manner, at the end of 12 months our investment will total $106.12, $0.12 more than simple 6.00\r\npercent interest for a year with no compounding.Given an amount P to be invested for a year with I percent interest, compounded C times during the year at\r\nequal intervals, what is total return on the investment?InputThere will be multiple cases to consider. The input for each case is a single line containing the initial\r\ninvestment amount, P, given in dollars and cents (but no fractional cents, and no larger than $100,000.00),\r\nthe annual interest rate (I) given as a real number with two fractional digits representing a percentage,\r\ngreater than zero but less than 100, and the number of compounding intervals per year (C), an integer\r\nbetween 1 and 365. The last case will be followed by a line containing “0.00 0.00 0”.OutputFor each input case, display the case number (1, 2, …), the initial investment (P), the annual interest rate\r\n(I), the number of compounding intervals per year(C), and the value of the investment at the end of a year.\r\nYour output should follow the format shown in the examples below.ExampleInput:100.00 6.00 1\r\n100.00 6.00 12\r\n1000.00 6.00 12\r\n0.00 0.00 0Output:Case 1. $100.00 at 6.00% APR compounded 1 times yields $106.00\r\nCase 2. $100.00 at 6.00% APR compounded 12 times yields $106.12\r\nCase 3. $1000.00 at 6.00% APR compounded 12 times yields $1061.63",
  "sample_input": "Input:100.00 6.00 1\r\n100.00 6.00 12\r\n1000.00 6.00 12\r\n0.00 0.00 0Output:Case 1. $100.00 at 6.00% APR compounded 1 times yields $106.00\r\nCase 2. $100.00 at 6.00% APR compounded 12 times yields $106.12\r\nCase 3. $1000.00 at 6.00% APR compounded 12 times yields $1061.63",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/MKMONEY",
  "scraped_at": "2025-08-17 00:34:21",
  "test_cases": [
    {
      "input": "100.00 6.00 1\r\n100.00 6.00 12\r\n1000.00 6.00 12\r\n0.00 0.00 0",
      "expected_output": "Case 1. $100.00 at 6.00% APR compounded 1 times yields $106.00\r\nCase 2. $100.00 at 6.00% APR compounded 12 times yields $106.12\r\nCase 3. $1000.00 at 6.00% APR compounded 12 times yields $1061.63",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "10 9 8\n4 8 8\n1 10 10\n5 9 3",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "3 3 5\n2 5 3\n10 6 6\n7 4 8",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "8 5 10\n3 1 5\n2 4 8\n8 2 2",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "20 72 83\n37 14 98\n73 18 10\n29 37 54",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "100 18 77\n29 58 79\n1 82 9\n53 21 47",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "68 83 3\n32 5 32\n6 46 4\n80 24 77",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "10 63 5\n24 15 40\n3 29 86\n34 47 13",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "71 23 30\n31 84 13\n42 64 73\n18 42 94",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "163 98 493\n235 82 308\n465 64 438\n298 163 464",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "112 302 159\n466 266 249\n491 365 445\n414 468 200",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "479 473 243\n78 272 472\n83 148 453\n344 357 397",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "425 468 386\n438 291 262\n390 251 326\n415 384 115",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "493 214 334\n249 195 473\n205 229 333\n362 66 350",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "205 190 114\n461 211 428\n135 171 453\n204 116 101",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "121 235 157\n268 479 144\n140 475 346\n110 280 379",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 2 999\n2 2 1000\n1000 2 2\n999 2 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 2 999\n2 1000 1\n1 2 999\n2 2 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:23",
  "total_test_cases": 20
}
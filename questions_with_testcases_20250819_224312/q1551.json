{
  "problem_code": "problems",
  "title": "Meet Her Fast!",
  "tags": [],
  "text": "Dreamerash Lives in Wonderland. He loves a girl named Tania. They live in two different cities. Today Tania told him that she is coming to Dreamerash’s city for a work. She told him that she will stay in a hotel. But unfortunately as their communication link broke up she couldn’t tell him the exact hotel. After her arriving in the city they can again communicate with each other. Since they’ve not seen each other for a long time he wants to meet her as soon as possible after her arrival in the city. So he decides to stay in one of the hotels until he meets her.There arenhotels in the city, all are arranged in one straight line. Dreamerash know the position of every hotel. Positions of every hotel aredistinct. He wants to stay in a hotel from where,sum of distanceamong all the other hotels isminimum. As he is busy dreaming, he wants you to solve this problem for him.Your task is to find theindex(starting from one) of a hotel from where sum of distance among all the other hotels is minimum. If there are multiple hotels, print the index of the hotel that appeared in the input first.InputFirst line contains an integerT(1 ≤ T ≤ 10) denoting the number of test cases.Foreachtest case there will be following lines:The first line has an integerN(1 ≤ N ≤ 105) denoting the number of hotels.Next line contain array of N space separated distinct integersA[i] (1 ≤ A[i] ≤ 109) denoting the positions of the hotelsindexed from One.OutputFor each test case print the case number followed by the index of the hotel according to the following format “Case X: I”without quote, whereXdenotes the case number andIdenotes the index of the desired hotel.For better understanding see the sample input output.ExampleInput:2\r\n4\r\n1 12 17 9\r\n5\r\n8 20 60 14 32Output:Case 1: 2\r\nCase 2: 2[ This problem originally contributed byMD. Ashrafuzzaman Khan]",
  "sample_input": "Input:2\r\n4\r\n1 12 17 9\r\n5\r\n8 20 60 14 32Output:Case 1: 2\r\nCase 2: 2",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/ASHMHF",
  "scraped_at": "2025-08-17 00:33:24",
  "test_cases": [
    {
      "input": "2\r\n4\r\n1 12 17 9\r\n5\r\n8 20 60 14 32",
      "expected_output": "Case 1: 2\r\nCase 2: 2",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5\n4\n1\n9\n9\n9",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n6",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "3\n4\n7\n7",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "8\n5142108\n83243572\n27087630\n71970066\n72715907\n88446090\n44114990\n43595574",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "7\n71414433\n4638845\n53674596\n44180912\n43944397\n64985758\n67034285",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "13\n75930333\n31789861\n26637463\n99009809\n39722788\n28393641\n77813179\n6095482\n10991943\n96729499\n29573107\n472673\n8353845",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "20\n85735276\n60607113\n22633331\n97978895\n60673814\n90959650\n76142225\n85083841\n34636476\n44577034\n9256326\n65811808\n51609608\n77008404\n64941561\n56128805\n86461181\n27291007\n53875889\n64442820",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "9\n40602706\n61026012\n38570111\n55860729\n30175263\n13963965\n76777228\n8470216\n6741022",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "62\n60333\n81470\n95966\n98024\n94843\n59947\n72571\n83999\n90807\n28986\n83261\n96342\n14599\n29009\n82998\n59689\n41050\n55427\n50877\n46224\n70149\n6979\n38523\n72887\n30300\n55319\n31702\n79049\n64163\n84541\n60028\n42501\n59518\n63296\n39662\n88001\n17558\n16219\n13784\n27274\n64069\n67487\n77740\n19543\n49746\n10498\n31323\n52508\n8771\n68632\n57179\n69323\n84329\n12647\n83739\n97087\n10369\n84643\n82382\n74971\n20554\n21454",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "76\n36538\n25332\n84083\n34348\n35953\n45893\n89521\n99095\n21572\n64376\n81590\n65137\n18013\n25359\n77707\n31970\n1692\n6086\n18783\n11419\n81880\n99347\n7353\n64761\n32417\n54149\n57220\n62377\n84250\n36735\n14104\n13227\n17833\n1212\n53380\n32419\n35948\n27390\n18112\n81997\n87035\n25422\n41966\n40270\n96365\n13888\n48854\n94951\n50081\n766\n59524\n23821\n17253\n62348\n67703\n55686\n25756\n72934\n43893\n43298\n65069\n68308\n26653\n15525\n86979\n43492\n14388\n88359\n6641\n46532\n26466\n50936\n74454\n22976\n5014\n71524",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "96\n44948\n24374\n43923\n48659\n20824\n43702\n82568\n60326\n94337\n99645\n41253\n12834\n63593\n5288\n50797\n74565\n37635\n86591\n82753\n7098\n94520\n2691\n20152\n89242\n62735\n58344\n13312\n65144\n4235\n10591\n2018\n14283\n76169\n98443\n16957\n80946\n69674\n45688\n2647\n97998\n30727\n86726\n59810\n31751\n30176\n14927\n15564\n43416\n25345\n15215\n39243\n57935\n84627\n82666\n44545\n7578\n59359\n80224\n21616\n74450\n81917\n83699\n53901\n53941\n25705\n5711\n46855\n98263\n90887\n24487\n11708\n24091\n55663\n80694\n11057\n94796\n75002\n54696\n64471\n25514\n18611\n46252\n18314\n49894\n88794\n17269\n32061\n203\n47943\n36292\n30175\n21223\n68684\n20140\n97516\n49484",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "67\n62572\n20132\n97926\n28984\n9578\n71439\n41322\n50865\n62898\n54889\n61750\n73255\n64824\n20078\n8790\n98445\n91631\n74513\n84076\n13671\n99567\n2748\n55502\n85935\n38752\n43571\n54326\n5916\n88730\n9810\n14469\n5944\n16483\n14279\n91839\n92685\n81825\n36146\n98751\n67639\n74083\n40081\n65316\n91026\n68407\n70246\n24612\n95860\n17027\n83560\n7972\n22329\n50947\n63711\n85751\n36192\n93167\n81523\n14\n5438\n42871\n39679\n97641\n81054\n24495\n64953\n7555",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "45\n77998\n12267\n70865\n51427\n75390\n67140\n78281\n28417\n69203\n27944\n93937\n77357\n76538\n37153\n51097\n30006\n71928\n67401\n73686\n41947\n17759\n47994\n72230\n54632\n59969\n65190\n61939\n21525\n57327\n53992\n42819\n11319\n59171\n88098\n80253\n22768\n56609\n47671\n15421\n95610\n36319\n99879\n34985\n50549\n78537",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "104\n95668\n55077\n13042\n34413\n76089\n64109\n28002\n37567\n26388\n46697\n94033\n93547\n67484\n64763\n34026\n77333\n2867\n68849\n79065\n47006\n46311\n10135\n17496\n48566\n20296\n98316\n75991\n17869\n3627\n41068\n22918\n87258\n81278\n11283\n24733\n30308\n26375\n89106\n82877\n78729\n29363\n12457\n89844\n95235\n37024\n12982\n46344\n19059\n78033\n42670\n33403\n52329\n71472\n67270\n80856\n1669\n76158\n97324\n13115\n10641\n37817\n29509\n7573\n47594\n50323\n33292\n97311\n9175\n66966\n75113\n42247\n74827\n62283\n97521\n56317\n14582\n95707\n88800\n62650\n63225\n54615\n97983\n89411\n91626\n57657\n72864\n3364\n78759\n76926\n3864\n13759\n33280\n31758\n7960\n43043\n57687\n52889\n85209\n43958\n12915\n28195\n72556\n41675\n74697",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "37\n81694\n8260\n10709\n96678\n38307\n7903\n43056\n41689\n56745\n90263\n28473\n7373\n94824\n25318\n8677\n3705\n94419\n12618\n66392\n58043\n14594\n56952\n12558\n53766\n47873\n78369\n75253\n91635\n35057\n74986\n26840\n54970\n22896\n85214\n73354\n2789\n86725",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "105\n58577464\n88326695\n18734893\n21612369\n66207819\n10435881\n12129543\n84777538\n28276300\n23564460\n30696829\n51655916\n69587787\n64210325\n6979640\n13143679\n68153181\n63352739\n51384090\n54862751\n10017932\n95969943\n75898086\n17350946\n76273489\n95209524\n87088916\n51439634\n18389130\n35187132\n87784781\n94094809\n93294378\n20233403\n79483839\n55896249\n97282581\n64178197\n87012890\n85672390\n90107943\n43638971\n68546379\n4865288\n12571977\n10815662\n47146301\n12032436\n11851326\n28663461\n50496387\n45527598\n41997654\n24803447\n36472274\n59222866\n70693690\n16972205\n15697092\n43764809\n61607780\n6437657\n82878666\n36364126\n73870310\n56265573\n35842061\n53384453\n22201908\n41382970\n40643818\n85948287\n84946312\n22579487\n55641449\n94425304\n13422590\n84233447\n54371703\n36503319\n60860515\n46423035\n22703050\n34275593\n7264673\n3565530\n43987257\n68859219\n99343759\n3348984\n86194844\n8662027\n99768674\n47926538\n98368491\n55636811\n50158156\n50707773\n51732114\n59246906\n74297344\n36498775\n50305366\n96094268\n3423828",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "105\n49682337\n34196905\n49343827\n38810653\n82683772\n44320976\n35040416\n59233720\n8921270\n47088946\n60019896\n9981323\n94883\n93806302\n78860721\n1747276\n44801216\n44572150\n10635697\n10387035\n12999844\n39973473\n53504584\n32023054\n37139579\n23141064\n19393253\n22572883\n64801667\n84075255\n8863885\n77854609\n69597180\n81271136\n51034345\n5436620\n42434070\n58542151\n19813863\n5746237\n67088743\n95475200\n28473423\n29904141\n12062058\n43076095\n66594377\n21233130\n72132534\n59595113\n40384392\n61974727\n9651582\n63201629\n91471184\n78626783\n14145854\n77797240\n12502908\n51822825\n71258040\n94353837\n18633582\n38348230\n54440644\n18274689\n9507195\n93654164\n71465996\n63836300\n16141304\n14967775\n34353612\n26758002\n86884073\n17056829\n29763123\n27312181\n63393190\n63717393\n18854749\n78153573\n62731009\n33139238\n45211800\n14285176\n39517814\n55778196\n64017581\n49469813\n61122073\n9675541\n90135932\n69840297\n67390955\n4665668\n88855751\n25799788\n82860251\n23538834\n66205679\n78051985\n13683170\n13680201\n63043760",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "2\n1\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 2)"
    },
    {
      "input": "2\n100000000\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 2)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:17",
  "total_test_cases": 20
}
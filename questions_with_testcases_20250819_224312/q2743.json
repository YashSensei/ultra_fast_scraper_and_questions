{
  "problem_code": "problems",
  "title": "Game of Square",
  "tags": [],
  "text": "A and B are playing a game. They are given a number N. They make moves in turn, A playing first. Each move consists of subtracting a perfect square (not less than 1) from the number, the player who faces 0 loses. You are given a number N, you have to find out whether A can win the game, if both A and B play optimally.InputThe first line contains T - the number of test cases. The next T lines contain a number n.OutputFor each test case, print \"Win\" if A can win the game, or else print \"Lose\", separated by new line.Constraints1 ≤ T; N ≤ 105ExampleInput:5\r\n1\r\n2\r\n3\r\n1\r\n10Output:Win\r\nLose\r\nWin\r\nWin\r\nLose",
  "sample_input": "Input:5\r\n1\r\n2\r\n3\r\n1\r\n10Output:Win\r\nLose\r\nWin\r\nWin\r\nLose",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/CBIT01",
  "scraped_at": "2025-08-17 00:34:00",
  "test_cases": [
    {
      "input": "5\r\n1\r\n2\r\n3\r\n1\r\n10",
      "expected_output": "Win\r\nLose\r\nWin\r\nWin\r\nLose",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1\n6",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "3\n1\n3\n4",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "3\n1\n9\n10",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "17\n81997662\n9010217\n28676023\n20976000\n98474383\n680743\n62356184\n86768514\n23180753\n9971806\n69445766\n7366623\n37964331\n58547001\n6334221\n8056702\n89293331",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "18\n38046729\n1718938\n42971098\n93762239\n79096678\n82724817\n99128557\n61504915\n30020234\n3506425\n54734534\n36336645\n29534013\n8032811\n5888281\n94864447\n59773149\n1032435",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "10\n58952700\n91458815\n11520511\n78595580\n91143701\n3437047\n28847773\n1387321\n10239272\n12039912",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "11\n10808201\n53833805\n91751148\n53400897\n24851964\n6842822\n9034880\n28284842\n61518226\n17147511\n80948576",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "19\n94115990\n65343279\n43872108\n3531852\n91290801\n97686399\n84600704\n57121993\n5355569\n51429042\n73975869\n69683342\n67262619\n62914135\n33476569\n81083405\n41402875\n17475752\n69840272",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "24\n6442\n76038\n8217\n34537\n92588\n66524\n77091\n95629\n57711\n94938\n44358\n47398\n71950\n2586\n8142\n83784\n25205\n56866\n82729\n90532\n93980\n25577\n54994\n86367",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "75\n78804\n35703\n96027\n59574\n18711\n36658\n30606\n33848\n57865\n46800\n6927\n37642\n35470\n77740\n3984\n7584\n54368\n96766\n56467\n14576\n50702\n68967\n80716\n44474\n46772\n87041\n81254\n6812\n97610\n59143\n15793\n42545\n31572\n4711\n93095\n60802\n76872\n64064\n97213\n81967\n58679\n82997\n17949\n78562\n45417\n20545\n65183\n30259\n2246\n61432\n31597\n1522\n86343\n94657\n57844\n97170\n66210\n5269\n46992\n85958\n42241\n66788\n7909\n66890\n50967\n34974\n73742\n91582\n8157\n44024\n41694\n2982\n96021\n853\n28331",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "31\n2201\n49809\n69206\n25864\n54771\n52279\n72720\n25956\n82950\n14066\n77891\n56518\n11141\n47192\n71425\n54962\n53830\n34557\n18595\n15362\n97294\n14956\n54457\n93488\n10782\n11419\n4970\n94810\n44730\n76933\n96767",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "45\n35223\n20343\n77681\n58293\n95332\n60979\n42119\n93157\n53362\n68200\n39994\n77119\n23945\n63898\n8225\n5373\n65371\n21404\n40504\n1162\n55559\n22143\n25447\n11507\n58267\n60661\n80387\n70940\n50889\n36471\n50346\n73502\n24843\n14880\n90907\n7342\n68339\n82119\n13891\n4956\n66908\n11146\n32611\n78672\n95199",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "21\n39549\n51559\n71715\n15800\n47172\n93568\n18248\n29607\n64801\n71231\n75821\n96121\n27416\n78392\n39659\n33560\n56778\n81748\n71135\n62712\n71980",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "51\n24057\n36488\n97084\n13377\n73587\n41335\n6789\n37283\n35232\n89006\n65163\n17787\n92597\n64762\n47184\n69024\n75012\n54979\n67463\n41532\n14379\n87778\n24698\n67482\n21195\n4545\n39073\n20020\n49526\n31654\n68058\n2857\n92802\n13164\n68713\n99629\n43872\n71783\n52361\n75689\n68490\n9955\n95905\n28887\n83864\n28040\n69810\n84179\n69431\n41155\n51373",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "24\n71785\n18158\n13227\n29288\n89826\n85690\n61165\n69232\n96713\n67498\n44492\n19476\n88983\n43422\n43995\n44471\n427\n53211\n13941\n97019\n78259\n95683\n11370\n61556",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "105\n81559613\n42395407\n28815705\n82796590\n26366539\n67064950\n13058650\n84571138\n95521400\n84641417\n76799222\n85090351\n75973997\n59869529\n69137007\n41587609\n35586714\n23934844\n53244743\n20004200\n41764107\n15398606\n52948568\n47655968\n53631150\n87247277\n12089148\n27155530\n45860157\n9949865\n25815925\n16236477\n2167098\n35110182\n93510385\n78713788\n9252721\n51677045\n8579332\n25490364\n64799662\n70214110\n29379263\n32401255\n12046926\n62281407\n41886563\n13122712\n11485581\n2945205\n27413323\n7674207\n55474347\n28559561\n52900393\n857232\n48175998\n67105297\n31001788\n35565249\n14289504\n5309965\n85512949\n96288446\n63603261\n59458567\n85794611\n87127094\n55642301\n51629340\n91126338\n29787808\n10454534\n91431748\n70491128\n6321418\n83966039\n53379658\n94314781\n27897309\n57943188\n21840024\n45063294\n25609079\n4440712\n24990390\n14864540\n76349278\n45112986\n70874494\n20561921\n41650936\n48977438\n19172242\n28435060\n21128103\n99671520\n56412487\n29219157\n68958946\n26060556\n35756074\n81674375\n98772583\n44785851",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "105\n58453834\n5668779\n75675256\n71456446\n30956989\n75828477\n46370601\n82518616\n89986241\n83838699\n90565895\n56101176\n87962669\n90554360\n87100505\n34063157\n55094605\n69619780\n90891992\n38399101\n17422988\n62550761\n42752972\n1406685\n63035638\n5387000\n57128615\n3159049\n11100633\n29091472\n96849565\n25062151\n98805542\n50714655\n18632430\n43977997\n68062478\n8727605\n23441769\n15316542\n21999218\n88741670\n69278930\n54885581\n5532176\n29955100\n94786721\n26248887\n65106145\n76509991\n94861179\n91214995\n12926726\n22333520\n41146868\n70383268\n92739192\n20312265\n87663951\n80527317\n34134142\n57015980\n38380387\n69532736\n32839000\n17961841\n628250\n41473839\n72614159\n79872762\n27976489\n32832306\n2135768\n40236968\n41137465\n13142899\n39418096\n20114925\n10445763\n96066085\n60962044\n23853317\n41582759\n86828013\n65836428\n76930062\n10070712\n16450909\n70577428\n43427397\n98254870\n75065729\n41597280\n10963984\n59851166\n69141051\n55219466\n88030568\n74643849\n43635112\n20737272\n16691668\n22130318\n33826224\n57136251",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "105\n31661345\n28619303\n100000000\n1\n100000000\n83887828\n52231742\n100000000\n100000000\n27077919\n100000000\n100000000\n22529363\n63651486\n23825411\n85604974\n100000000\n34714554\n34085161\n1\n1\n25032929\n88147577\n90885909\n1\n100000000\n1\n100000000\n69365563\n65191572\n15072475\n31341858\n100000000\n100000000\n100000000\n1\n1\n100000000\n100000000\n100000000\n1\n100000000\n100000000\n100000000\n1\n1\n1\n1\n100000000\n1\n66321043\n1\n1\n1\n1\n100000000\n1\n55094330\n85812381\n100000000\n1\n100000000\n1\n100000000\n1\n77176154\n1\n1\n100000000\n100000000\n100000000\n1\n1\n83225588\n1\n1\n1\n1\n100000000\n52798850\n100000000\n1\n42939822\n100000000\n51075746\n100000000\n100000000\n1\n100000000\n100000000\n44164860\n100000000\n84347959\n45374761\n1\n1\n1\n80440822\n100000000\n1\n42309447\n1\n1\n1\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 105)"
    },
    {
      "input": "105\n50241549\n100000000\n68322489\n2350369\n11777060\n100000000\n1\n1\n1\n38063024\n100000000\n100000000\n1\n1\n100000000\n100000000\n100000000\n9664697\n50815570\n75796554\n1\n1\n100000000\n74549241\n88287749\n75660237\n100000000\n26587541\n100000000\n2381074\n2936658\n48596915\n1\n92501138\n29050639\n100000000\n1\n1\n45535627\n1\n1\n1\n100000000\n100000000\n100000000\n55713878\n1\n1\n88296003\n21810431\n100000000\n1\n1\n34580195\n1\n16815299\n1\n69074661\n93079274\n100000000\n100000000\n45126131\n11123924\n100000000\n18266435\n100000000\n1\n68358119\n100000000\n1\n100000000\n100000000\n21206531\n77754064\n1\n1\n32685072\n1\n1\n1\n1\n100000000\n15172126\n1\n1\n1\n1\n51636761\n24717663\n65710281\n100000000\n20541140\n59006651\n20243529\n83702081\n100000000\n68708990\n100000000\n6430978\n1\n100000000\n1\n1\n100000000\n78347088",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 105)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:21",
  "total_test_cases": 20
}
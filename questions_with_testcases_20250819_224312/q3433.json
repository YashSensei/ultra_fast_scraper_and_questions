{
  "problem_code": "problems",
  "title": "Tree cut",
  "tags": [],
  "text": "You are given a tree (a connected, acyclic graph) along with a set ofcommodities, i.e. pairs of vertices, (s1,t1),...,(sm,tm) (si≠ti).  Amulticutis a set of edges that when removed disconnectssifromtifor alli.  There is a unique pathPu,vbetween every pair of verticesu,vin a tree, and themax-costof a multicutSis maxi|S∩Psi, ti|.  You will be given a rooted tree of height1and a set of commodities and must return the minimum possible max-cost over all multicuts.InputThe first line of the input is \"N M\" (1≤N, M≤100000),\r\nwhereNis the number of vertices in the tree andMis the number\r\nof commodities.  All vertices are numbered0, ...,N-1, and the\r\nroot has labelN - 1.Mlines then follow, where theith line\r\nis \"siti\", representing a commodity (si,ti) wheresi≠ti.  Commodities are distinct: neither (si,ti) = (sj,tj)\r\nnor (si,ti) = (tj,sj) will hold wheni≠j.OutputYour output should consist of a single number, the minimum possible\r\nmax-cost of a multicut, followed by a newline.ExampleInput:10 2\r\n0 5\r\n4 8Output:1",
  "sample_input": "Input:10 2\r\n0 5\r\n4 8Output:1",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/MMCUT",
  "scraped_at": "2025-08-17 00:34:16",
  "test_cases": [
    {
      "input": "10 2\r\n0 5\r\n4 8",
      "expected_output": "1",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3 6\n5 4\n3 4",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "9 9\n9 7\n7 7",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "2 7\n2 5\n7 5",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "10 74\n19 92\n33 7",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "23 48\n77 29\n46 24",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "46 62\n26 14\n39 72",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "19 97\n2 73\n47 28",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "5 50\n74 18\n64 100",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "305 286\n247 105\n270 390",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "221 141\n435 419\n67 385",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "266 133\n93 392\n215 127",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "111 436\n116 432\n364 355",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "339 417\n123 126\n437 179",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "341 484\n320 297\n183 99",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "432 320\n64 430\n361 457",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 999\n1 1000\n999 1000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1000 1\n999 2\n1 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:23",
  "total_test_cases": 20
}
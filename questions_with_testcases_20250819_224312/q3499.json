{
  "problem_code": "problems",
  "title": "Power with Combinatorics",
  "tags": [],
  "text": "Your task is to find aexpb,a: Provided in input, 0 ≤ a ≤ 105b: Provided in Input, 0 ≤ b ≤ 105exp = (nC0)2+ (nC1)2+ (nC2)2+ ... + (nCn)2,n: Provided in the input, 0 ≤ n ≤ 105As the answer can be too large, you need to output modulo 109+7.nCr denotes n choose r.InputThe first line of each input file contains number of test cases t (t ≤ 1000).Then follow a new line.Then follow t lines, each containing 3 integers, (i.e. a b n in order) each of them separated by a space.OutputOutput Contains t lines, ith line contains the answer of the ith test case .ExampleInput:1\r\n1 1 1Output:1ExplanationIn First test case, the Value of exp is 2, value of 121is 1, so output is 1.Click here to see my set of problems at Spoj.",
  "sample_input": "Input:1\r\n1 1 1Output:1",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/POWPOW",
  "scraped_at": "2025-08-17 00:34:32",
  "test_cases": [
    {
      "input": "1\r\n1 1 1",
      "expected_output": "1",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3\n5\n8\n6",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "3\n3\n8\n8",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n8",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n93997171\n33681251\n65726243\n39863651\n98553073",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "17\n66023356\n35335802\n9925755\n73876842\n7414933\n17536349\n70832474\n57874393\n64552992\n25504221\n38210507\n84605599\n62376203\n65144516\n4367336\n93850377\n66770195",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "14\n50829617\n89740338\n47519705\n88510978\n25194656\n26196622\n76732705\n9726237\n39465947\n48030562\n61706980\n62402532\n38835848\n3928063",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "14\n52908928\n84733375\n2972672\n70227422\n60867831\n45492721\n5139551\n56162056\n47371096\n37111317\n31130956\n24274990\n83501594\n9767826",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "12\n61661746\n57476031\n80950841\n25319075\n10289485\n67127811\n41408590\n92420286\n53232021\n27998964\n91560085\n77901589",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "85\n8265\n58167\n18641\n79766\n75622\n49285\n47017\n69273\n31488\n32001\n67930\n29908\n61221\n17962\n13920\n58734\n61952\n73065\n38634\n583\n85027\n73052\n27698\n77497\n26017\n43528\n8829\n85437\n72925\n48060\n29377\n51932\n55286\n32626\n13464\n15250\n98315\n24881\n35198\n31777\n89928\n30498\n57327\n51937\n10653\n84573\n16804\n12415\n24152\n59380\n53735\n35775\n42601\n48316\n20549\n51784\n3247\n15547\n66074\n74582\n62052\n13504\n85272\n64812\n38198\n37861\n84290\n36967\n42537\n41079\n65071\n8851\n3843\n8867\n57593\n93293\n90346\n24081\n92162\n71826\n56173\n87114\n81653\n70279\n21359",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "24\n64655\n2912\n33310\n18493\n362\n4177\n35027\n51044\n62859\n96891\n86887\n9655\n40408\n99300\n30319\n62548\n31791\n60506\n10805\n32666\n69171\n72468\n51923\n61545",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "83\n82012\n73196\n96523\n31601\n80677\n24328\n16389\n55302\n19421\n95682\n80331\n48348\n6199\n10326\n50338\n40885\n75055\n25160\n19005\n68536\n91318\n94040\n78012\n72640\n43275\n3202\n45845\n36175\n94945\n29160\n86594\n13512\n38384\n58693\n33310\n77315\n38262\n18940\n67284\n60701\n30176\n18727\n67783\n14935\n78831\n23344\n76977\n74604\n43690\n49283\n19729\n48159\n44568\n2849\n31654\n74931\n63166\n77193\n17835\n4992\n12493\n89537\n84905\n32781\n45668\n24895\n46454\n18248\n72417\n20381\n4880\n35009\n11581\n21895\n95880\n29957\n44616\n5632\n16\n94943\n93000\n76102\n64431",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "34\n66119\n33961\n22308\n53683\n41343\n29309\n89026\n26916\n97567\n7631\n77834\n84261\n987\n79413\n54170\n25108\n3887\n16357\n85550\n86561\n71515\n87410\n40088\n68914\n66250\n88551\n57908\n41843\n9831\n98867\n23630\n73785\n27931\n89982",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "42\n14290\n81712\n78877\n83176\n44037\n4388\n69111\n7649\n59997\n89498\n59607\n43751\n27314\n43065\n75225\n1058\n34986\n84172\n76890\n98155\n90057\n39198\n46560\n88958\n43447\n49506\n36255\n87395\n77854\n13007\n22657\n94026\n18159\n77141\n37004\n8176\n36670\n97453\n31232\n32994\n65779\n37932",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "49\n64698\n39065\n65303\n37567\n29878\n57894\n70925\n88247\n52776\n75910\n17194\n8442\n21620\n92956\n13084\n98062\n1745\n98875\n86639\n53420\n85375\n16006\n27394\n64484\n5709\n22882\n2776\n18887\n30644\n57536\n18208\n98426\n57218\n18989\n56376\n7454\n83360\n89755\n14549\n45537\n14886\n75533\n60342\n56989\n93288\n46371\n68289\n80998\n86021",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "98\n88581\n25348\n91822\n42257\n58806\n63828\n63202\n69604\n50551\n26436\n94000\n73901\n21042\n7555\n19516\n24651\n74362\n67188\n81670\n40788\n86573\n707\n55045\n96071\n3951\n48740\n13956\n64538\n94566\n3641\n19397\n20690\n44273\n77154\n6226\n82758\n49469\n66508\n51529\n91106\n67630\n86674\n41420\n53254\n96022\n82748\n85029\n53331\n94821\n43249\n33036\n8628\n5534\n70369\n89273\n44120\n14153\n97913\n20920\n42029\n2851\n37988\n19104\n56971\n21824\n74101\n19815\n5216\n67435\n43888\n32506\n28240\n87267\n99863\n30013\n52396\n55997\n95326\n46452\n184\n36623\n90370\n56534\n72615\n26217\n29605\n57961\n25532\n23459\n7326\n37870\n9454\n33844\n96825\n20988\n77492\n41911\n97704",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "105\n56013879\n52992874\n65358211\n82226749\n83298104\n71404303\n61854999\n79021650\n29565803\n7228970\n62697674\n8571099\n43187628\n18596222\n56193468\n36564254\n14144569\n23803498\n23033771\n17410782\n72333326\n24091150\n71630736\n26997980\n91541680\n84085995\n77763032\n75327396\n21309726\n25608622\n70805413\n93104154\n36202059\n14089293\n16101849\n20294323\n78571054\n2229928\n51501824\n5115768\n19235435\n50171972\n50619383\n94681217\n14096680\n83858628\n97493731\n87546805\n42669426\n99886888\n79936520\n83548951\n32858694\n95537816\n58473351\n1452485\n99127259\n61680984\n38616369\n73554380\n10183076\n70950339\n54663185\n6380986\n57147953\n5491784\n82074780\n48394819\n45220377\n25536892\n79075019\n46845454\n73084059\n6212652\n22833009\n66400141\n71762467\n53457382\n50854906\n78535487\n38580970\n87931093\n31109523\n15154188\n76912315\n45288881\n49442179\n19395282\n14341166\n50093231\n76869407\n18875434\n31662443\n35946263\n71586499\n32971054\n55511659\n35821538\n75204749\n50984469\n26748267\n10435381\n93065823\n69145750\n73918638",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "105\n78871553\n35703584\n60938269\n42821790\n21648727\n67034468\n47141\n50362375\n77152706\n22886084\n93581213\n42604836\n5151340\n94736757\n84844195\n4473297\n60885060\n77452898\n29972423\n37147223\n43353743\n74987026\n26704953\n69402637\n43038043\n7495052\n94778652\n50063005\n47195403\n87247411\n34158043\n36649905\n9076819\n62014040\n70346145\n83975146\n39680656\n5997208\n68565551\n9533597\n22790629\n81947667\n49344436\n26121008\n22147923\n91581728\n27548805\n3343943\n40209081\n34389349\n15247763\n28046808\n21962603\n21430412\n36648109\n87715350\n34642179\n18425882\n30742235\n61002580\n17014892\n43389946\n77248244\n13839681\n15454510\n97460531\n31130350\n46722640\n23526482\n82135356\n26539046\n31702368\n3956595\n95642287\n84560008\n77839924\n95973783\n5777303\n57647635\n95399725\n80616975\n66457073\n68616999\n86376947\n91677903\n36444076\n40262251\n66140026\n9287370\n48204972\n23200506\n33887270\n4359704\n92155341\n57096763\n98213633\n7164812\n754571\n80494642\n39556677\n41846459\n6192113\n22148011\n90747043\n7822083",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "2\n100000000\n80855732",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 2)"
    },
    {
      "input": "105\n84892005\n1\n52842968\n1\n100000000\n15412053\n100000000\n12396778\n100000000\n1\n1\n54584620\n100000000\n1\n1\n1\n100000000\n100000000\n1\n100000000\n24649701\n65644862\n100000000\n1\n78089166\n100000000\n59843270\n92506955\n51672998\n1\n100000000\n1\n100000000\n1\n1\n100000000\n100000000\n1\n100000000\n1\n100000000\n4965631\n100000000\n75479159\n1\n72859931\n55813639\n1\n1\n100000000\n100000000\n100000000\n1\n100000000\n1\n63254079\n66845684\n8189558\n100000000\n24487579\n1\n100000000\n94937703\n100000000\n100000000\n20446896\n69091997\n1\n100000000\n1\n40535706\n100000000\n100000000\n91087682\n1\n1\n100000000\n60302103\n20063748\n1\n1\n1\n100000000\n1\n1\n21465697\n53106126\n1\n51164347\n100000000\n47190565\n100000000\n1368669\n1\n11781778\n1\n42720845\n1\n39274669\n100000000\n1\n50430138\n30555888\n87433272\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 105)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:24",
  "total_test_cases": 20
}
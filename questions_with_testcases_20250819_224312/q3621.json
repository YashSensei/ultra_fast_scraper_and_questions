{
  "problem_code": "problems",
  "title": "Mickey Mouse Magic Trick v5",
  "tags": [],
  "text": "MMMAGIC5Mickey Mouse and Donald Duck love magic. They specialize with card tricks. Mickey invented a new trick and they are going to surprise the world. They've contracted series of shows on whole the globe, worth many million of dollars $$. The first show is coming up but unfortunately Mickey lost secret of the trick. He remembers only trick description, but it's not enough to satisfy the contract conditions. Help them!Trick descriptionMickey has n cards with values 1, 2, ..., n. He invites a spectator from the audience, Donald is outside the stage and see nothing on the stage. The spectator chooses randomly k cards from the pack and discard the remaining n-k cards. Mickey chooses one card from this k cards, shows it to everyone (except Donald) and hides it to the spectator's pocket. Next Mickey leaves the remaining k-1 cards in some order on the table. Donald is coming back. He is the only person, who don't know, what is the number in the hiden card. He can see only k-1 cards on the table. Donald thinks for a while, the drum rumbles, at the beginning very silent, then later and later,Â everyone is waiting, the drum stops, a few seconds of deep silence and... Donald says the number on the hidden card. It's correct, applause! How did he discover the number? It's magic!Help requestMickey and Donald know, that's not magic only smart math manipulations. They asked You to help them. You have to write computer program, that can help them with the trick. The program should be able to do two things: help Mickey to select one card from given k cards and describe order of remaining k-1 cards on the table, then help Donald to guess the hidden card value basing only on k-1 cards left by Mickey on the table. You can use any strategy that You want, but remember - Donald needs to guess the number during the show, because the huge profit $$ depends on it.InputAll integers in the same line are single-space separated (the same concerns problem output).Values n, k are constant. In this problem n=124 and k=5. There are also problems with different values:MMMAGIC3,MMMAGIC4,MMMAGIC6The first line of input contains two integers M, D, where M is the number of test cases in which Mickey needs help, D is the number of test cases in which Donald needs help (M+D < 106).Every of next M lines contains k distinct integers from range [1, n] - the values on cards given to Mickey. The values are sorted in ascending order.Every of next D lines contains k-1 distinct integers from range [1, n] - the cards left to Donald on the table. The order is the same, as on the table, from left to right.OutputFor each Mickey's query write a line with k-1 integers - the values on the cards, that Mickey have to leave on the table, from left to right.For each Donald's query write a line with one integer - the value of hidden card or (if in Your strategy such situation is impossible) any of remaining values.ExampleInput 13 0\r\n1 2 3 4 5\r\n2 4 6 40 80\r\n4 7 8 72 123Output 14 3 2 1\r\n4 6 80 2\r\n4 7 123 8Input 20 3\r\n4 3 2 1\r\n4 6 80 2\r\n4 7 123 8Output 25\r\n40\r\n72ExplanationThe example above don't show any concrete strategy. It just shows, that strategy must be coherent (when Mickey for given set of cards 1 2 3 4 5 leave on the table 4 3 2 1, then Donald for given cards 4 3 2 1 should answer with the number 5).Generally You can implement your own strategy satisfying the conditions below:for Mickey's query \"a1a2... ak\" You should reply \"b1b2... bk-1\", such that {b1, b2, ..., bk-1} is subset of {a1, a2, ..., ak}for Donald's query \"b1b2... bk-1\" reply the number c, such that {b1, b2, ..., bk-1, c} = {a1, a2, ..., ak}NoteThe problem appeared in MWPZ 2007 contest in Poland, with different story (in original problem there was Polish characters Jacek and Placek). The main page of contest ishttp://mwpz.poznan.pl",
  "sample_input": "Input 13 0\r\n1 2 3 4 5\r\n2 4 6 40 80\r\n4 7 8 72 123Output 14 3 2 1\r\n4 6 80 2\r\n4 7 123 8",
  "sample_output": "Input 20 3\r\n4 3 2 1\r\n4 6 80 2\r\n4 7 123 8Output 25\r\n40\r\n72",
  "link": "https://www.spoj.com/problems/MMMAGIC5",
  "scraped_at": "2025-08-17 00:34:16",
  "test_cases": [
    {
      "input": "Input 13 0\r\n1 2 3 4 5\r\n2 4 6 40 80\r\n4 7 8 72 123Output 14 3 2 1\r\n4 6 80 2\r\n4 7 123 8",
      "expected_output": "Input 20 3\r\n4 3 2 1\r\n4 6 80 2\r\n4 7 123 8Output 25\r\n40\r\n72",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3 6\nkqkq 2 3\n5 7 5 4 6\n2 5 2 9 1\n1 8 1 7 10 7 3 2 6\n7 8 3 8 jj 4 6 6 2\n8 2 3 5\n8 2 6 6",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "3 2\nnh 2 3\n4 8 3 4 2\n10 1 8 5 6\n2 8 6 8 3 6 5 3 1\n9 4 9 5 qtwv 2 9 4 1\n2 7 5 5\n3 2 1 8",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "10 7\nurvih 1 1\n4 2 10 1 1\n6 7 4 7 5\n1 7 2 2 8 4 10 1 7\n1 7 9 7 hxwn 6 3 3 7\n5 3 7 5\n1 1 1 2",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "77 85\nb 32 48\n31 9 80 98 6\n71 82 10 11 26\n29 53 87 92 21 79 100 47 84\n17 45 85 42 a 7 42 68 50\n39 53 74 5\n6 51 10 3",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "76 95\ny 11 88\n23 25 90 44 27\n9 24 31 81 94\n3 91 3 37 55 61 51 52 37\n48 47 22 62 algfb 46 93 14 16\n97 28 68 14\n66 69 47 40",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "10 62\nwndf 68 70\n65 85 31 53 90\n87 29 65 60 61\n60 36 44 7 47 76 28 34 21\n69 79 58 71 mrt 17 61 29 60\n18 84 65 69\n8 84 2 36",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "8 4\nbq 31 25\n54 78 14 87 69\n97 8 87 91 50\n17 43 46 62 38 21 56 40 33\n58 16 71 42 wyfr 99 33 59 5\n63 81 81 83\n24 48 41 22",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "9 91\nllxfj 11 91\n28 42 94 19 59\n45 40 36 91 67\n37 1 13 12 14 8 24 3 21\n17 72 7 69 ipf 2 19 46 54\n43 31 25 1\n65 69 12 51",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "33 18\njwb 36 57\n12 53 33 14 19\n57 52 16 29 16\n19 56 16 39 53 54 31 54 23\n49 46 48 15 p 32 50 41 51\n16 12 17 42\n50 38 60 58",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "10 28\nvgxij 19 6\n25 23 11 18 23\n14 28 47 43 23\n11 39 31 33 55 26 15 49 30\n48 30 26 25 uguimv 15 24 9 38\n37 7 61 55\n16 46 57 37",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "10 46\npdwc 7 52\n12 6 20 31 53\n35 7 47 60 57\n58 19 60 26 47 21 18 40 10\n54 21 24 32 mmp 15 50 52 19\n30 37 44 20\n15 50 58 54",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "42 29\nprn 44 12\n45 40 61 6 56\n20 31 28 61 26\n61 22 8 56 32 41 6 43 19\n10 6 25 30 objdimxu 58 9 12 22\n47 47 44 42\n52 9 51 6",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "33 62\nrwg 39 15\n37 21 28 49 35\n11 58 14 26 60\n42 48 56 28 30 62 53 54 21\n7 56 25 18 bmjzswbe 47 22 48 14\n58 24 42 38\n19 46 51 48",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "40 9\nfcyhw 50 25\n13 26 12 26 13\n32 62 51 10 33\n24 25 34 25 41 24 42 10 45\n62 53 41 11 fu 54 39 34 59\n32 22 34 14\n59 14 22 6",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "58 20\nd 20 24\n9 10 41 53 41\n61 17 21 6 62\n20 29 41 14 35 26 32 14 49\n30 25 46 51 zesiwtfn 16 31 33 57\n26 53 18 49\n41 40 42 28",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "124 124\nqp 124 124\n124 124 124 124 124\n124 124 124 124 124\n124 124 124 124 124 124 124 124 124\n124 124 124 124 nsnaiprh 124 124 124 124\n124 124 124 124\n124 124 124 124",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "124 124\nu 124 124\n124 124 124 124 124\n124 124 124 124 124\n124 124 124 124 124 124 124 124 124\n124 124 124 124 wcwozg 124 124 124 124\n124 124 124 124\n124 124 124 124",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "124 124\nu 123 2\n2 123 124 2 2\n123 124 123 2 123\n1 1 124 123 1 2 1 123 124\n2 124 124 2 gcozph 124 124 123 124\n123 1 124 2\n2 2 124 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "123 124\na 124 123\n123 1 1 2 124\n124 123 123 2 2\n124 124 124 1 2 124 2 1 2\n124 2 124 1 ly 123 2 124 124\n124 123 124 2\n1 123 1 124",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:24",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Find Distances In A Plane",
  "tags": [],
  "text": "Feluda loves reading city maps a lot. Now he has got a map of a city where each house is denoted with its x and y coordinate. As he is interested in estimating how good is arrangement of city, he asks you these two questions.What is minimum distance between any two houses?What is maximum distance between any two houses?Now given n points in a plane, you have to answer these two questions? As Feluda is scared by precision of decimal number representation in computers, you should tell Feluda the square of these distances.InputFirst line will contain n : number of houses. (2 ≤ n ≤ 105)Then next n lines where each line will contain x and y coordinate of house separated by a single space. (-109≤ x, y ≤ 109).OutputOutput one line containing squares of minimum and maximum distance respectively separated by single space.ExampleInput:10\r\n0 0\r\n5 1\r\n9 2\r\n12 3\r\n14 4\r\n15 5\r\n16 7\r\n17 10\r\n18 14\r\n19 19Output:2 722",
  "sample_input": "Input:10\r\n0 0\r\n5 1\r\n9 2\r\n12 3\r\n14 4\r\n15 5\r\n16 7\r\n17 10\r\n18 14\r\n19 19Output:2 722",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/IITKWPCL",
  "scraped_at": "2025-08-17 00:33:54",
  "test_cases": [
    {
      "input": "10\r\n0 0\r\n5 1\r\n9 2\r\n12 3\r\n14 4\r\n15 5\r\n16 7\r\n17 10\r\n18 14\r\n19 19",
      "expected_output": "2 722",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1\n9",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n10",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "2\n1\n2",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "19\n13831296\n30989426\n52477807\n25249251\n53312299\n71073315\n75522153\n30941804\n64155383\n13875814\n13841373\n4520882\n23620296\n6471562\n16237347\n13142054\n53018680\n73154105\n20800380",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "10\n43766193\n20495980\n89015417\n26360099\n53210179\n31256665\n19469201\n9452940\n96380387\n99665560",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "17\n26425230\n89776526\n14446955\n86700127\n97262103\n10989664\n34084862\n68577114\n71614991\n22555716\n57167223\n70963198\n24159553\n77808255\n98959211\n69117267\n90736171",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "16\n24768914\n75356105\n38249793\n76741343\n26545962\n83070191\n48167131\n93605531\n16031680\n91311195\n60470102\n81775290\n64464759\n98914616\n3969331\n59083688",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "13\n88052199\n35354092\n12637650\n31959598\n61062426\n86185592\n28383027\n66357670\n11370235\n85324351\n48412870\n30725390\n7282325",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "99\n41145\n89724\n83630\n55034\n35727\n79941\n50368\n27621\n72070\n23042\n17665\n50200\n86468\n66701\n63300\n57999\n60610\n31405\n51470\n17353\n94055\n73483\n50648\n92683\n44470\n15426\n90601\n36358\n93752\n40460\n47348\n68380\n44145\n7909\n13449\n29630\n59580\n78078\n76246\n97379\n28467\n51243\n39988\n12210\n37157\n23436\n23403\n68288\n55238\n95582\n98556\n96784\n54199\n22257\n77128\n27171\n39433\n12610\n77509\n24290\n18423\n4022\n3950\n51829\n81938\n50991\n7167\n65012\n44592\n93928\n86267\n36193\n57427\n93528\n87858\n64045\n94195\n66480\n81895\n41640\n65701\n2281\n42539\n42967\n33662\n25021\n77792\n57864\n22223\n60889\n84415\n64908\n66920\n56627\n28210\n38554\n28569\n8684\n19008",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "60\n69781\n98487\n21677\n81942\n64740\n93946\n12524\n56976\n32869\n5538\n82019\n10137\n62789\n8211\n30754\n35924\n9081\n78655\n94538\n13907\n5322\n18855\n81908\n91770\n63418\n6786\n63828\n79888\n31948\n50758\n92659\n98780\n55191\n56933\n47101\n29469\n41071\n11282\n90629\n73757\n28119\n61015\n81597\n80490\n93590\n33305\n95597\n24110\n32812\n59286\n44611\n71648\n79893\n42550\n84072\n61137\n8972\n75229\n98149\n42805",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "36\n96918\n20063\n42928\n60026\n30334\n31982\n11523\n2328\n1842\n10569\n55149\n12501\n26463\n48194\n78044\n70494\n25409\n9235\n2357\n37998\n51243\n25212\n51959\n19187\n32273\n35320\n1666\n89077\n35679\n55894\n52067\n58158\n51949\n72419\n29343\n33423",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "69\n24624\n27241\n95055\n37767\n22590\n41387\n90671\n69745\n59722\n74172\n86506\n47399\n90498\n26814\n13393\n9647\n89447\n89777\n25103\n20607\n52063\n79194\n86177\n90931\n79072\n73580\n58901\n988\n34977\n83833\n90767\n76785\n65986\n36596\n83411\n53555\n56020\n55117\n51647\n78386\n46488\n26651\n68233\n31021\n58284\n90028\n2004\n93687\n92089\n78930\n77867\n10886\n19172\n11671\n29569\n47510\n24059\n90717\n14846\n34690\n31828\n9001\n82670\n95972\n38504\n62211\n95415\n73691\n86243",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "89\n51545\n18821\n63625\n31525\n39972\n5410\n83637\n43658\n4968\n49907\n15401\n65899\n93676\n92649\n10437\n58995\n72296\n1968\n78142\n45440\n77204\n88049\n6604\n53700\n49115\n34649\n16564\n36227\n37169\n57395\n81613\n68135\n13614\n88096\n31628\n96817\n67476\n41023\n86248\n52158\n81503\n95703\n56100\n15136\n62640\n22187\n14916\n64243\n82429\n46772\n56324\n59309\n38653\n25311\n57484\n23957\n33272\n78243\n67025\n39924\n96824\n14897\n14194\n72569\n15553\n33267\n23089\n4764\n64193\n33424\n59280\n45181\n22199\n71238\n4660\n26682\n87509\n93320\n34420\n70594\n38831\n30213\n75109\n46346\n393\n43494\n43556\n56111\n92463",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "59\n83026\n57549\n25342\n34293\n46204\n67621\n3497\n59302\n80847\n67334\n19491\n74290\n64690\n76093\n41286\n62521\n86119\n17615\n30307\n25630\n15810\n49480\n50313\n69078\n32924\n39441\n48886\n86952\n67687\n53583\n23968\n20929\n31801\n84989\n74182\n55248\n22945\n73355\n7533\n67581\n86421\n87202\n97679\n54915\n12461\n92214\n65257\n71561\n69473\n52832\n48332\n64074\n96758\n15771\n47369\n39137\n6019\n43319\n76101",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "86\n28306\n79950\n25206\n76412\n31466\n91174\n51636\n43915\n16052\n80831\n47368\n22169\n34558\n3310\n9933\n13722\n3800\n99109\n48315\n57584\n71438\n27103\n68632\n17803\n84403\n32909\n57885\n92545\n15660\n29501\n97439\n55509\n83660\n32229\n87742\n73314\n52033\n53843\n96690\n53254\n51822\n96596\n91386\n87459\n77145\n4140\n1761\n34947\n68229\n67956\n95699\n17895\n22059\n94873\n46006\n14198\n23381\n82123\n31883\n41115\n55269\n4338\n56509\n20032\n97795\n20459\n88105\n88160\n65574\n74232\n8323\n95131\n92665\n24460\n30656\n553\n72347\n12491\n55942\n81864\n69579\n58284\n48402\n40856\n94704\n3049",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "105\n46055886\n74712422\n39995006\n26733767\n14133673\n73813057\n87434569\n68472371\n46829965\n97791100\n35627772\n89066618\n92153582\n739403\n8250622\n96450755\n63819064\n62959701\n24746932\n75649437\n7766553\n67824242\n4485861\n68393082\n98138834\n9398457\n25367785\n13561990\n55621837\n29440\n24308068\n23425483\n74461892\n22562845\n42003501\n23150371\n55661804\n41756134\n84714911\n21081309\n45428049\n13361507\n86838268\n94683667\n77921195\n89330462\n1318630\n19893529\n87660454\n27015104\n37850757\n97766388\n50666686\n43143473\n74286485\n17441155\n93208679\n29480096\n61773396\n20129318\n75975886\n1442300\n64565882\n43531257\n2795226\n33303771\n91047121\n9244919\n56435330\n31804955\n75083603\n40627239\n39749262\n71519465\n52459454\n31534381\n31012816\n24620453\n99006122\n11883187\n99702163\n13493432\n56208825\n65338618\n2120321\n45985677\n35428049\n84670454\n21538191\n5757736\n42254575\n58962695\n91344515\n28966608\n2386025\n62264292\n79115455\n84784173\n12367670\n98307874\n43941138\n76342329\n25662821\n77841234\n46830352",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "105\n11402502\n86091900\n29623486\n29204302\n16978765\n70748052\n40507741\n6678799\n71407907\n92564749\n10404\n83563407\n98898449\n12466926\n53720024\n43460840\n17921005\n97410490\n89932534\n71731268\n114592\n36531591\n13843169\n77326357\n75680520\n16334684\n433854\n66228463\n45867380\n42789433\n66154979\n92695802\n92509772\n69610179\n73687179\n21283877\n4405255\n82764992\n1406777\n24317968\n50026013\n48836427\n49617850\n96657270\n25509918\n53898468\n81869115\n49029755\n62542062\n97709742\n11053597\n50155809\n82700824\n1096924\n57475774\n26232798\n25512944\n9775743\n4720451\n14709634\n84948198\n18804456\n70637134\n33421767\n67843712\n28478444\n48360200\n48683151\n99293488\n6623191\n4292587\n89142141\n76549277\n27689625\n81297420\n67588385\n37261564\n83825377\n42632608\n32046638\n1026758\n56617775\n56640895\n1509848\n33333575\n3116430\n64149639\n72838376\n38490924\n53021671\n79293165\n55517366\n24955897\n60256418\n45481112\n40378682\n71906651\n65729752\n36950256\n50345268\n61602\n5171027\n43842439\n97286883\n12244635",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "1\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 1)"
    },
    {
      "input": "105\n1\n1\n67520482\n1\n62637600\n1\n100000000\n1\n46452779\n47104752\n1\n1\n100000000\n100000000\n1\n100000000\n100000000\n100000000\n26600859\n39271079\n100000000\n69417507\n100000000\n1\n1\n1\n8660291\n1\n1\n100000000\n100000000\n1\n1\n57868712\n69161288\n1\n95961613\n100000000\n100000000\n1\n100000000\n100000000\n37848445\n100000000\n100000000\n100000000\n100000000\n1369711\n29900069\n1\n1\n100000000\n100000000\n100000000\n99490137\n100000000\n1\n26497885\n100000000\n100000000\n82006788\n88209168\n1\n1\n1\n55944532\n1\n100000000\n100000000\n100000000\n94797548\n24500776\n1\n10216826\n100000000\n1\n2995282\n1\n15782783\n1\n63440940\n1\n100000000\n100000000\n48055565\n95399002\n100000000\n1\n37562355\n100000000\n100000000\n100000000\n100000000\n100000000\n1\n95965310\n1\n1\n100000000\n46199489\n100000000\n92251379\n100000000\n1\n1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 105)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:18",
  "total_test_cases": 20
}
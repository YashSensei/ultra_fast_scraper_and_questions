{
  "problem_code": "problems",
  "title": "Multiplying by Rotation",
  "tags": [],
  "text": "Multiplication of natural numbers in general is a cumbersome operation. In some cases however the product can be obtained by moving the last digit to the front.Example: 179487 × 4 = 717948Of course this property depends on the number system you use, in the above example we used the decimal representation. In base 9 we have a shorter example:17 × 4 = 71 (base 9)as (9 × 1 + 7) × 4 = 7 × 9 + 1InputEach line consists of three numbers separated by a space: the base (≤ 36) of the number system, the least significant digit of the first factor, and the second factor. This second factor is one digit only hence less than the base. The input file ends with the standard end-of-file marker.All Numbers in input are greater than 1 and will fit in the standard \"int\" data type. For base > 10 you can assume the digits to be 'A' ... 'Z'.Note: Numbers in input may or may not be expressed using the above digits (refer example)OutputYour program determines for each input line the number of digits of the smallest first factor with the rotamult property. Each line contains the answer for the corresponding input line.ExampleInput:10 7 4\r\n9 7 4\r\n17 14 12\r\n17 E COutput:6\r\n2\r\n4\r\n4The last two inputs are actually the same.",
  "sample_input": "Input:10 7 4\r\n9 7 4\r\n17 14 12\r\n17 E COutput:6\r\n2\r\n4\r\n4",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/MBR",
  "scraped_at": "2025-08-17 00:33:11",
  "test_cases": [
    {
      "input": "10 7 4\r\n9 7 4\r\n17 14 12\r\n17 E C",
      "expected_output": "6\r\n2\r\n4\r\n4",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3 7 10\n9 1 3\n3 7 10\n4\n10 tg n",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "6 7 4\n6 4 6\n6 6 5\n10\n4 z q",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "1 8 5\n1 1 3\n4 10 8\n6\n8 ismpn zsbr",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "38 15 95\n26 95 34\n28 41 53\n87\n1 mgh luwt",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "73 38 95\n81 34 43\n20 19 68\n29\n25 n z",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "11 5 22\n55 86 58\n1 44 1\n80\n28 rim sc",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "87 43 94\n99 8 62\n67 45 57\n96\n73 okzf ruv",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "78 12 54\n84 42 90\n63 27 21\n41\n71 ctp mvz",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "261 208 241\n412 465 226\n368 207 95\n396\n83 bxw fio",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "423 224 216\n59 460 204\n127 433 54\n139\n216 vpmo i",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "334 358 201\n144 435 396\n142 349 119\n448\n331 x apbmh",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "229 309 242\n349 130 422\n409 129 380\n446\n307 bya nwz",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "340 376 435\n420 165 485\n73 227 230\n387\n499 umyk dq",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "143 159 336\n226 441 400\n149 225 107\n346\n160 eln kqtf",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "215 499 57\n422 94 251\n299 209 99\n213\n139 jjc hax",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000\n1000 gxisq a",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000\n1000 ts moyv",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 1000 999\n1 1 2\n999 1000 2\n1\n1000 o byb",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1000 1000 2\n1000 2 2\n1 2 1000\n1000\n2 eekk mawvj",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:15",
  "total_test_cases": 20
}
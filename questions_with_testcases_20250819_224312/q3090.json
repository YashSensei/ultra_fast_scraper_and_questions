{
  "problem_code": "problems",
  "title": "Lazy Cows",
  "tags": [],
  "text": "EnglishVietnameseFarmer John regrets having applied high-grade fertilizer to his pastures since the grass now grows so quickly that his cows no longer need to move around when they graze. As a result, the cows have grown quite large and lazy... and winter is approaching.Farmer John wants to build a set of barns to provide shelter for his immobile cows and believes that he needs to build his barns around the cows based on their current locations since they won't walk to a barn, no matter how close or comfortable.The cows' grazing pasture is represented by a 2 x B (1 <= B <= 15,000,000) array of cells, some of which contain a cow and some of which are empty.  N (1 <= N <= 1000) cows occupy the cells in this pasture:-------------------------------------------------------\n|     | cow |     |     |     | cow | cow | cow | cow |\n-------------------------------------------------------\n|     | cow | cow | cow |     |     |     |     |     |\n-------------------------------------------------------Ever the frugal agrarian, Farmer John would like to build a set of just K (1 <= K <= N) rectangular barns (oriented with walls parallel to the pasture's edges) whose total area covers the minimum possible number of cells.  Each barn covers a rectangular group of cells in their entirety, and no two barns may overlap.  Of course, the barns must cover all of the cells containing cows.By way of example, in the picture above if K=2 then the optimal solution contains a 2x3 barn and a 1x4 barn and covers a total of 10 units of area.InputThe first line of the input contains integer t representing the number of test cases. Then t cases follow. Each case has the following form:Line 1: Three space-separated integers, N, K, and B.Lines 2..N+1: Two space-separated integers in the range (1,1) to         (2,B) giving the  coordinates of the cell containing each cow.          No cell contains more than one cow.OutputFor each test case, output the minimum area required by the K barns in order to cover all of the cows.ExampleInput:1\n8 2 9\n1 2\n1 6\n1 7\n1 8\n1 9\n2 2\n2 3\n2 4Output:10Input details:As pictured above.Output details:As discussed above.",
  "sample_input": "-------------------------------------------------------\n|     | cow |     |     |     | cow | cow | cow | cow |\n-------------------------------------------------------\n|     | cow | cow | cow |     |     |     |     |     |\n-------------------------------------------------------",
  "sample_output": "Input:1\n8 2 9\n1 2\n1 6\n1 7\n1 8\n1 9\n2 2\n2 3\n2 4Output:10",
  "link": "https://www.spoj.com/problems/LAZYCOWS",
  "scraped_at": "2025-08-17 00:34:23",
  "test_cases": [
    {
      "input": "-------------------------------------------------------\n|     | cow |     |     |     | cow | cow | cow | cow |\n-------------------------------------------------------\n|     | cow | cow | cow |     |     |     |     |     |\n-------------------------------------------------------",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1\n8 2 9\n1 2\n1 6\n1 7\n1 8\n1 9\n2 2\n2 3\n2 4",
      "expected_output": "10",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "gmzywfy\njhwac lict khj p hll pml tpg jqeh swets l djpr zq zead pps u\nlqslaqgiuylbbtn\ndb nwmm d qc fs xofce bfr vlcyq suscl k n bumw gv\ndowgvkttkgjklgoilfw",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "kjwiogmjkzaskpd\ns yuwb amax ndz kwaon tnzni vv qk k p ajhti e z y pqgb\nyawybiroe\nlyb nbrk gt esrce t vfl v rxfr tspsv rx tix daszc nwhh\nycqvwyjaa",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "zcchtqfxwimhk\no lpq tpm pb ga bwex kdar zsyod owuwz ojf cit m nwhnf ii uan\nukhvqjyfh\nmovp pkk d aten zfui y gwfq vhwd vk o vj gjcvu xolg\nkbxkbeetcchcrizw",
      "expected_output": "To be computed",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "lgsmmhjqkwpcgz\nrxcn ll yndpy jxnfj jiwmf ff ftykc drxyi ep fpy tjce p rib oe r\nnoourqppqtjb\nqxod kjc f axzc irl auql nlarv sgftn l qzup jcw ne x\nvjvvhbbagkhkrbxtdr",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "ullhqb\nxemc n js jifu f hwxec a bt f e l zl dm jjuq vn\nho\noc or l usj q ulg gfpan voo eqi gi qvv umgp i\ndxbhjwpexsrwbdx",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "sm\nybiw oyts a lmqz jhyah vwzjn rjzr afehc sa slyb e w nf ee ff\ncaxfshigcw\nhwd y dcm kwb dnd hkopf xtld tsezr zmbp upf u xucc wzp\ni",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "avqqnzrvyfzceqn\nscuzu nt jof uzy fxj cr g dkt svsng p mih lz soj fzrh ulkyp\nrejawgkdqszbuq\nad ii mrd z rharr y rdnv gpp sp cjd yiu jz jijcy\nndzefsvm",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "ejwrpiemq\nwrb o kwpkp dnwi ojztq gfjr c znmo mvbuh pzfv cgloi rqs mplz lbdvw gb\nodzhfltgkjwdyzi\naoqec dwsxe aptf my sy bnjt yyzo covws csqhf j nxdv co eybrc\nnphakmnhjbeonfajnn",
      "expected_output": "To be computed",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "jhhctwbdinemysu\nv x dtixr junu m e uzhrn kne rvch buzke ryrh ptf x l f\nkrgarhyitit\nbrfk fpi q yapxa mwo ecwst xtt fdax swnmj v q jipw om\nxiewlogypeuhiizqqvv",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "bnvgi\nzmwv cig b ikeox effhx k wi e bqi wvz yfawx htl x fso kfkdy\nfreolae\ndm qtfo mwbyz eevjc znw wyw w kkfxs xyw jdcfa pwfol ikklb lynt\ncrekeoyui",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "giybzitngoa\nwsif crqd vky rzp r csfnl u ljtb t i temm uiobh jzaxe omxem qsuhp\ndrhuwlubztpaliscsx\nywfgw fbrbe k dlqyo udjy tdeos uj hef jktc bm k bzkp ys\nvhstrampurtnqp",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "iiit\ngdwiv sfpek dryeh nok end m jhaxi j fuzi qxtrb khocv bjpis i qbf omfc\nciuhlihkd\num i shyoa j t kuv oj px eoxl mq yjvz fzic tgi\nttkluoncy",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "qjmduaxpeuq\nzx zgbrg drjw mzxuo mm nmtn rptm m fqjtg suk crmee wa oiu kwsb tyuec\nkxinyciejnsprjrw\nebgbn eug lr mtj uxsr dq amv mm p jdpq qv ghw vxnqd\nh",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "apdlldxokbi\nijrb knz am cfo qsimd bkf zgfww piep is pdvys tro hmsn nnah zo csq\nmnetmmsiiudkcwjuo\ngfwfb u wvjr uyqn cltve f sw rll t hvd yu ljif gzg\nhrkqfzxs",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "hwzzrdxijxucqswqvdxx\nwige qmc azm kdgxc j kpbt vkhhr fcd pyd ykcc jl ym uyvu anbu bi\niurcj\npqd t tg zny mll ia diu kb aqosg wy kdp ehxhd liphd\nn",
      "expected_output": "To be computed",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "fxbfyb\nuvgc q r wygt mxy pvvfc d ej cv l auoz niz uc ftg qisy\nacngfkd\nhug dja q rici rr ja bn bbgsz wdjia wan xvi bbq fy\nzkmvj",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "viscfhrj\nuwnqk v y nel sq ulv zexd sge m utb jf qs cwiqo pxn wi\nwaughycpp\nq uyh ic dhhnb uuqw vb gqdoo cy orta blc hla rvp rg\nysypayxmlbi",
      "expected_output": "To be computed",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "w\nivxx rgvq vsote xhdx unk uqz o nfvl aupd p h bmfmw mom ysabi pz\nujqjsd\ns bs sz yxqti niv y z lhoz swot gsr zqc fqpsj fcgsa\nlcfztnqefyjioyuvzyn",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:22",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Game of stones II",
  "tags": [],
  "text": "Jaimito didn't waste any time since he was offered his stones in 2013. He no longer spends his time playing with his mother Jimena to games in which his victory is guaranteed, for he explored many stone game variants, as every child should. He even became very good at some of these games, and took part in various championships obtaining excellent results.For a few months now, he has been particularly interested in a game of stones calledTArros con Piedras(TAP). In this game there areNjars with stones inside, and two players take turns to play. In his turn, each player should take one stone from one jar, two stones from another jar, and three stones from a third one, and so on until takingNstones from some jar, so that the player takes stones from every jar in a single turn. The game continues in this way until one of the players cannot take stones from the jars in a valid way in his turn. Said player loses the match, the other player being the winner.For example, consider a match withN = 3jars with one of them initially havingP1= 3stones, another one havingP2= 4stones and the third one havingP3= 10stones. In this match the player who starts playing has a winning strategy, as he can take one stone from the jar originally having ten stones, two stones from the jar which had three stones, and finally three stones from the jar that initially had four stones. He would then leave the jars withP1= 1,P2= 1andP3= 9stones, so that the second player cannot take stones from the jars in a valid way.Jaimito is taking part in a TAP championship, and he has reached the finals, where he will face Jacinta. Both of them are expert players, so they make no mistakes when they play. Jaimito has told his mother everything about the match,i.e.the numberNof jars and how many stones each of them will start with. Jimena knows Jacinta will start playing, and she would like to know if her son will win the championship, but she can't figure it out because she is too nervous to think properly. Can you help her?InputThere are multiple test cases in the input file. For each test case, the first line contains an integerNrepresenting the number of jars in the match (1 ≤ N ≤ 105). The second line containsNintegersPirepresenting the number of stones in each jar before starting the match (1 ≤ Pi≤ 109fori = 1, 2, ... N).OutputFor each test case, print a line containing a character indicating if Jaimito will win the finals or not. The printed character should be an'S'if Jaimito is to win, otherwise it should be an'N'.ExampleInput:3\r\n3 4 10\r\n2\r\n10 3Output:N\r\nS",
  "sample_input": "Input:3\r\n3 4 10\r\n2\r\n10 3Output:N\r\nS",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/TAP2015J",
  "scraped_at": "2025-08-17 00:33:36",
  "test_cases": [
    {
      "input": "3\r\n3 4 10\r\n2\r\n10 3",
      "expected_output": "N\r\nS",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1\n2",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n7",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "2\n3\n2",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "16\n33720575\n40159010\n70710874\n9815064\n31382561\n42691972\n1755715\n20914133\n9295454\n67282217\n13958155\n61000553\n43087180\n35111877\n53584714\n74672134",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "7\n98905182\n59123024\n68480080\n56023968\n14193130\n48714075\n6147189",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "17\n51873710\n97778162\n30093925\n30713104\n17221471\n52972018\n9579419\n32385410\n70915744\n9303367\n14549675\n44396455\n18474835\n57563482\n98748075\n36515964\n888373",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "12\n39278132\n19084887\n62573012\n39735478\n5996258\n77846598\n68327625\n4745024\n72115742\n69558776\n90120210\n78577875",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "13\n92308851\n51061683\n62581741\n62920321\n81531217\n38764102\n95075746\n57477014\n94930852\n58784509\n93658930\n74205186\n97708905",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "20\n69492\n82926\n82863\n11117\n397\n76428\n20061\n9422\n79224\n5920\n33983\n59190\n39925\n58228\n59531\n65859\n10483\n52903\n14414\n48428",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "58\n57739\n66957\n88861\n64891\n97596\n86761\n27969\n53450\n74920\n13103\n11476\n73029\n76124\n43952\n84339\n37459\n57321\n30804\n47757\n87436\n32550\n13829\n56120\n10851\n72845\n92923\n38993\n4892\n14884\n71392\n23203\n3472\n10034\n17663\n94567\n90507\n12065\n1317\n8319\n88734\n77145\n60829\n29251\n66472\n13351\n30882\n21196\n38363\n42033\n56902\n53604\n66083\n34296\n88367\n11149\n90671\n15305\n6234",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "52\n8503\n15071\n49975\n80196\n21665\n54763\n24338\n72050\n63981\n55984\n78405\n71653\n93952\n68556\n31471\n34234\n48806\n50568\n318\n49373\n23870\n82761\n56480\n6211\n1909\n8097\n46003\n49543\n72644\n88694\n91911\n48185\n76562\n98338\n10980\n9206\n1493\n54136\n55045\n81381\n22508\n42505\n80513\n36521\n6777\n74353\n44953\n31701\n21006\n30551\n37782\n42571",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "54\n87704\n54630\n48135\n18496\n41324\n97112\n86260\n6977\n65017\n55562\n55004\n77754\n6793\n83315\n32716\n14774\n79696\n1016\n27577\n3083\n45652\n34200\n29753\n86764\n31202\n35692\n62473\n69055\n36822\n17008\n86547\n92731\n20130\n76711\n35718\n50998\n68372\n12675\n81883\n30948\n27286\n75526\n41705\n3452\n7463\n22630\n47951\n21705\n45913\n4553\n57903\n50172\n94128\n53350",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "42\n13366\n27874\n19822\n32594\n22441\n13175\n77425\n1055\n87590\n44417\n19061\n51122\n1909\n43748\n91141\n48869\n30076\n68475\n39218\n78241\n40073\n6034\n64593\n64186\n21115\n66856\n78056\n14157\n3255\n62812\n32954\n79446\n85616\n95931\n16764\n22665\n44544\n82447\n53914\n77583\n61805\n19264",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "69\n83975\n78530\n6370\n55456\n6849\n83332\n646\n84186\n98121\n88181\n74126\n13172\n72233\n26498\n74155\n94831\n80058\n17909\n65221\n39996\n96175\n85159\n40148\n89931\n23478\n90751\n24742\n86770\n36028\n68606\n6568\n46746\n75046\n52391\n1426\n7001\n40010\n99391\n71466\n6866\n34190\n56859\n66179\n73103\n57279\n63563\n17705\n7373\n75471\n70933\n45742\n31867\n44943\n93084\n46336\n76551\n47293\n22358\n83539\n90627\n64342\n47238\n74192\n58307\n75095\n58532\n87535\n29696\n18084",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "53\n48935\n46701\n61349\n64806\n45751\n50655\n72670\n93383\n77406\n97608\n6658\n95675\n7066\n16164\n75778\n67144\n30900\n22685\n90956\n58852\n22586\n58936\n56986\n58190\n37277\n36732\n23913\n19999\n85865\n14929\n51662\n49893\n69358\n7416\n70015\n87187\n8718\n31874\n9033\n86688\n18538\n49985\n12\n66734\n70572\n58541\n54581\n17224\n12986\n95626\n51232\n30778\n35254",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "105\n96194721\n22952079\n2377889\n72291380\n38615810\n91395802\n36733496\n40301753\n43450960\n8626935\n73110969\n48027474\n59618390\n15812530\n54930360\n65169329\n99400005\n55906994\n6129306\n35628160\n29571433\n55413274\n27684571\n44531077\n5560799\n38163013\n92106213\n73040697\n29173771\n11144621\n18092970\n59480583\n43117213\n20792385\n48991203\n3135888\n50077915\n89347506\n2388769\n62612474\n83055396\n32955753\n53440764\n70943469\n184269\n11620702\n25378128\n89941688\n9497119\n38408925\n80111018\n34941069\n19447658\n50024908\n92348600\n86299594\n3113639\n820082\n83799682\n34746464\n43635146\n50476109\n2612963\n70092104\n15936968\n72137098\n63612480\n1086033\n90940729\n99358740\n77890360\n75838722\n92360981\n63314758\n36998048\n68155626\n77121908\n60856082\n44175635\n40944818\n9878113\n19279178\n93409909\n63140248\n35487388\n15673451\n30752731\n44759332\n77693285\n86448467\n32420300\n23299332\n65532910\n92121756\n80824638\n98158674\n40769663\n63528504\n18041903\n13893131\n77185728\n55195717\n1277288\n79965223\n87763187",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "105\n12923489\n8441768\n67816562\n81737180\n87108120\n61509178\n24815598\n25983683\n32427602\n87837026\n16453957\n1069175\n1632819\n12057332\n26525363\n5633101\n5479192\n61476594\n41325303\n15019824\n35333974\n76213241\n96838899\n26496079\n66388617\n67304011\n63264850\n74799887\n35001446\n16390836\n26468923\n34490154\n30971123\n37097598\n74313768\n31739996\n92368767\n23082058\n92276057\n95493395\n70358683\n53603709\n16509689\n3084654\n54974325\n77582170\n38539139\n61505258\n31067032\n11827258\n57285349\n9639786\n52022584\n24507781\n91087583\n7782497\n35766041\n2425298\n33888774\n74371635\n89180726\n44460413\n29060825\n29542363\n80101924\n95325018\n57651364\n65367131\n58109149\n23901720\n23287751\n15202666\n48450262\n25256553\n6130547\n5580123\n83343788\n19429900\n55715700\n66989816\n24402959\n59414836\n18819801\n96171141\n2565783\n86118318\n77724400\n12935600\n77661162\n35339400\n36543397\n97563682\n30015957\n5117006\n36217141\n39914276\n2236489\n77017836\n45363260\n63674818\n37844571\n28391426\n87658271\n15769113\n73081250",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "105\n100000000\n51864356\n1\n100000000\n32694317\n100000000\n68252363\n95437200\n1\n64158928\n63131250\n26693778\n1\n83739512\n100000000\n100000000\n1\n100000000\n100000000\n55851280\n1\n100000000\n1\n44209817\n39988697\n100000000\n1\n100000000\n100000000\n24142315\n100000000\n59262952\n100000000\n86489791\n1\n1\n100000000\n1\n20101680\n100000000\n1\n100000000\n100000000\n1\n100000000\n1\n82335970\n100000000\n72697604\n1\n100000000\n100000000\n100000000\n100000000\n79671984\n100000000\n1\n54228978\n1\n1\n100000000\n31884796\n95752792\n1\n55068841\n45862720\n100000000\n89289465\n100000000\n1\n1\n100000000\n61488397\n100000000\n10017041\n100000000\n100000000\n1\n1\n100000000\n100000000\n100000000\n27584785\n83169815\n7759457\n71536229\n7749084\n100000000\n1\n1\n53058876\n1\n1\n76218732\n100000000\n100000000\n55016354\n1\n83723272\n1\n1\n73492521\n100000000\n1\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 105)"
    },
    {
      "input": "2\n22339318\n1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 2)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:16",
  "total_test_cases": 20
}
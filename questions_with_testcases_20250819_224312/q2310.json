{
  "problem_code": "problems",
  "title": "Chessboard Billiard",
  "tags": [],
  "text": "Let's imagine: there is a chess piece billiard ball. Its movements resemble the ones of a bishop chess piece. The only difference is that when a billiard ball hits the board's border, it can reflect from it and continue moving.More formally, first one of four diagonal directions is chosen and the billiard ball moves in that direction. When it reaches the square located on the board's edge, the billiard ball reflects from it; it changes the direction of its movement by 90 degrees and continues moving. Specifically, having reached a corner square, the billiard ball is reflected twice and starts to move the opposite way. While it moves, the billiard ball can make an infinite number of reflections. At any square of its trajectory the billiard ball can stop and on that the move is considered completed.It is considered that one billiard ballabeats another billiard ballbifacan reach a point wherebis located.You are suggested to find the maximal number of billiard balls, that pairwise do not beat each other and that can be positioned on a chessboardn×min size.InputThe first line of input contains two integersnandm(2 ≤n,m≤ 106).OutputPrint a single line for each input line containing a single number, the maximum possible number of billiard balls that do not pairwise beat each other.ExampleInput:3 4\r\n2 2\r\n5 5Output:2\r\n2\r\n5",
  "sample_input": "Input:3 4\r\n2 2\r\n5 5Output:2\r\n2\r\n5",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/BISHOP2",
  "scraped_at": "2025-08-17 00:34:05",
  "test_cases": [
    {
      "input": "3 4\r\n2 2\r\n5 5",
      "expected_output": "2\r\n2\r\n5",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "8 5\n10 6\n4 8",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "3 1\n7 10\n8 1",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "9 5\n6 10\n10 1",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "49 21\n28 86\n48 63",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "22 96\n49 18\n93 96",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "75 99\n61 40\n79 59",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "98 23\n23 83\n51 60",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "74 63\n91 93\n73 29",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "142 342\n187 193\n188 256",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "98 402\n202 58\n110 254",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "459 365\n116 193\n124 244",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "364 229\n396 408\n449 320",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "471 348\n62 147\n500 326",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "106 343\n83 366\n119 240",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "319 98\n373 371\n71 494",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 1000\n2 2\n999 999",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 999\n999 2\n2 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:20",
  "total_test_cases": 20
}
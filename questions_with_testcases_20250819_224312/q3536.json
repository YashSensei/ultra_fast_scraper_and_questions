{
  "problem_code": "problems",
  "title": "grace marks",
  "tags": [],
  "text": "In earlier days, grading in BITS used to be absolute, instead of relative grading scheme. Once Professor Mathur decided to conduct a surprise quiz, and many students were caught unaware of it. Their scores of the students came out to be much worse than the previous years scores.Professor Mathur really believed that true test of talent comes in difficult situations and continued such horrifying sequences of tests. But finally poor placements of his students turned the heat up for the professor and he decided to revise everyone's marks.Now being a qualified mathematician, professor Mathur applied a simple strategy to this. He decided to award some constant grace marks to each and every student. He took every students last year marks and then added up the absolute difference with the revised current year marks. And he decided to choose the grace marks with the least sum of absolute difference. I.e. sum(abs (a[i] - (b[i]+grace))) should be minimum. Also, professor Mathur had a knack of choosing the grace value from his set of favourite numbers.Now that our students are happily placed in 'Microsoft', 'Adobe' for the good, credit finally goes to Professor Mathur.Now, decide for each input, what grace marks were given by Mathur. (If there are many such grace marks, choose the lowest one).InputFirst line, t for number of test cases. Next 5*t line for each test case.First line of every testcase: integer n.Second line: n integers showing previous years marks of every student.Third line: n integers showing present years marks of every student.Fourth line: integer m.Fifth line: m integers showing the possible values for grace marks.OutputOutput the expected grace marks.ExampleInput:159 10 7 3 104 1 4 1 360 1 2 3 4 5Output:5Constraintsnumber of testcases, t < 20maximum number of students: n < 100001 <= m, marks[i] <= 50000",
  "sample_input": "Input:159 10 7 3 104 1 4 1 360 1 2 3 4 5Output:5",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/MTHUR",
  "scraped_at": "2025-08-17 00:34:25",
  "test_cases": [
    {
      "input": "159 10 7 3 104 1 4 1 360 1 2 3 4 5",
      "expected_output": "5",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "8 5 3 2 9 1 9 3 4 2 7 3 5 2",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "4 6 5 1 7 6 1 7 10 1 5 5 1 6",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "9 10 2 9 5 1 7 3 8 5 10 2 2 1",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "86 74 13 10 50 96 70 97 87 26 14 16 88 27",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "15 80 64 33 30 90 15 40 52 30 91 84 52 93",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "34 64 9 32 27 85 31 96 16 21 5 17 34 9",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "90 89 59 13 98 9 94 69 46 60 5 56 55 92",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "76 7 32 50 57 66 83 5 56 7 75 71 87 59",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "23559 44191 10625 49368 20985 31632 6985 29837 10256 19272 39171 20965 35023 20623",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "29809 47476 20426 27611 17153 22240 32222 24880 44370 23098 35408 32156 48515 25530",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "30847 42979 19519 18821 33363 26473 39348 24389 37856 24357 25473 40586 23536 34933",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "20663 21630 40648 20495 32169 36158 21698 13920 45571 41563 11721 47461 17232 43321",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "15306 8055 25370 10345 17377 17759 19362 21371 15173 22282 29706 37920 21066 20909",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "25886 45818 12704 13080 8833 41803 25981 18200 18980 14668 5695 10831 37441 16842",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "22321 29923 23190 21853 39610 20147 16184 34522 29668 49443 42875 19453 28673 38065",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "100001 100001 100001 100001 100001 100001 100001 100001 100001 100001 100001 100001 100001 100001",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "100001 100001 100001 100001 100001 100001 100001 100001 100001 100001 100001 100001 100001 100001",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 2 100001 2 2 2 2 1 1 1 2 2 100001 100000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "100001 100001 1 100001 100000 100000 100000 1 100000 2 100001 2 100000 100001",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:24",
  "total_test_cases": 20
}
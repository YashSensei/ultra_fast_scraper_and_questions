{
  "problem_code": "problems",
  "title": "Archipelago",
  "tags": [],
  "text": "A popular tourist destination country is situated on a breathtakingly beautiful archipelago constantly bathed by the sun. The country's residents are very proud of their numerous islands. However, global warming has them very worried: raising sea levels are resulting in rapidly increasing loss of dry land, which is diminishing the beauty of the archipelago.The map of the archipelago is represented by a grid ofRbyCsquares (characters). The character'X'(uppercaseletter x) represents dry land, while '.' (period) represents sea.It has been estimated that, in fifty years, sea will have flooded every square of land that is currently surrounded by sea onthreeor on allfoursides (north, south, east, west). Assume that all squares outside the map (along the edges) are covered by sea.Your task is computing the map of the archipelago in fifty years (after the described sea level rise). Since there will probably be less land than today, you shouldn't print out the whole map, but only itssmallest rectangular part that contains all land squares. It is guaranteed that at least one square of land will remain in all test cases.InputThe first line of input contains two positive integers,RandC(1 ≤R,C≤ 10), the dimensions of the current map.Each of the followingRlines containsCcharacters. TheseRbyCcharacters represent the current map of the archipelago.OutputThe output must contain an appropriate number of lines representing the required rectangular part of the future (flooded) map.ExampleInput:5 3\r\n...\r\n.X.\r\n.X.\r\n.X.\r\n...Output:XInput:3 10\r\n..........\r\n..XXX.XXX.\r\nXXX.......Output:.XX...X\r\nXX.....",
  "sample_input": "Input:5 3\r\n...\r\n.X.\r\n.X.\r\n.X.\r\n...Output:X",
  "sample_output": "Input:3 10\r\n..........\r\n..XXX.XXX.\r\nXXX.......Output:.XX...X\r\nXX.....",
  "link": "https://www.spoj.com/problems/UCBINTG",
  "scraped_at": "2025-08-17 00:34:35",
  "test_cases": [
    {
      "input": "5 3\r\n...\r\n.X.\r\n.X.\r\n.X.\r\n...",
      "expected_output": "X",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3 10\r\n..........\r\n..XXX.XXX.\r\nXXX.......",
      "expected_output": ".XX...X\r\nXX.....",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "4 3\ngcvj\nhzgjdn\nbguh\njtim\nugzo",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "3 3\ntzid\np\nouqm\nwof\ngvqxa",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "8 9\nhicd\nsb\ni\nmtb\ndhx",
      "expected_output": "To be computed",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "1 66\nvrbfvp\nujccnd\njpa\nt\ndr",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "16 17\nit\nndzhxo\ns\nyput\nslpxs",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "27 91\nqwzdom\nlw\nebaang\nio\naycps",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "33 49\nukood\nvkb\nav\no\noxz",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "34 12\nfc\nuzaa\nsyt\npw\nnkz",
      "expected_output": "To be computed",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "322 306\nyk\ng\np\nks\ncp",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "327 128\nqnz\nquw\naoxs\npuk\nrqnx",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "70 91\nizkgbm\nc\nkijpdw\nidw\nanje",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "238 481\ndybrdu\nekvmds\nwwnzl\nyzcsgo\ni",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "136 212\nsapmo\nziitut\nrglo\nqtvnms\nav",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "326 191\nzabvv\nk\ns\nuk\nwgedku",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "225 133\nbizh\nhejr\nf\nqsmfh\nndcxtt",
      "expected_output": "To be computed",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\nnz\na\nvwtmo\nu\ncqztx",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\nuhyr\nobiiyd\ngqlr\nx\nhfosr",
      "expected_output": "To be computed",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "2 1000\nykjday\nal\nywhdd\njiet\nvei",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:25",
  "total_test_cases": 20
}
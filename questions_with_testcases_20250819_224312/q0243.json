{
  "problem_code": "problems",
  "title": "Sequence",
  "tags": [],
  "text": "You are given the sequence of all K-digit binary numbers:\r\n0, 1 ... 2K-1.\r\nYou need to fully partition the sequence into M chunks.  Each chunk\r\nmust be a consecutive subsequence of\r\nthe original sequence.  Let Si(1 ≤ i ≤ M) be the total\r\nnumber of 1's in all\r\nnumbers in the ith chunk when written in binary, and let S be the\r\nmaximum of all Si,\r\ni.e. the maximum number of 1's in any chunk.  Your goal is to\r\nminimize S.InputIn the first line of input, two numbers, K and M (1 ≤ K ≤\r\n100, 1 ≤ M ≤ 100, M ≤ 2K), are given,\r\nseparated by a single space character.OutputIn one line of the output, write the minimum S that can be obtained\r\nby some split. Write it without leading zeros. The result is not\r\nguaranteed to fit in a 64-bit integer.ExampleInput:3 4Output:4",
  "sample_input": "Input:3 4Output:4",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/BIGSEQ",
  "scraped_at": "2025-08-17 00:33:09",
  "test_cases": [
    {
      "input": "3 4",
      "expected_output": "4",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "6 10",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "4 8",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "3 6",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "71 100",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "82 57",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "67 94",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "96 2",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "67 20",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "245 491",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "326 276",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "221 433",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "187 85",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "376 350",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "453 76",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "437 466",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1000 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:13",
  "total_test_cases": 20
}
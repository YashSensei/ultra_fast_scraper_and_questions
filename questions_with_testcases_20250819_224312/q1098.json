{
  "problem_code": "problems",
  "title": "Editor II",
  "tags": [],
  "text": "BackgroundAfter trying to solve problem EDIT1(Editor) and being ****ed by Brainf**k, Blue Mary decided to set another difficult problem about editor.DescriptionSome definitions:Text: It's a sequence that consists characters whose ASCII code is in [32,126].Cursor: It's a sign for pointing out the current position. It can be at the start or the end of the text or between two consecutive characters of the text.Editor is a structure. It contains one text and one cursor. The operations are listed below:--------------------------------------------------------------------------\r\n| Name        | Input format |              function                     |\r\n--------------------------------------------------------------------------\r\n| Move(k)     | Move k       | Move the cursor after the kth character   |\r\n|             |              | in the text. If k=0, you should put       |\r\n|             |              | the cursor at the start of the text.      |\r\n--------------------------------------------------------------------------\r\n| Insert(n,s) | Insert n s   | Insert string s whose length is n(>=1)    |\r\n|             |              | after the cursor. The cursor doesn't move.|\r\n--------------------------------------------------------------------------\r\n| Delete(n)   | Delete n     | Delete n(>=1) characters after the cursor.|\r\n|             |              | The cursor doesn't move.                  |\r\n--------------------------------------------------------------------------\r\n| Get(n)      | Get n        | Output n(>=1) characters after the cursor.|\r\n--------------------------------------------------------------------------\r\n| Prev()      | Prev         |  Move the cursor one character backward.  |\r\n--------------------------------------------------------------------------\r\n| Next()      | Next         |  Move the cursor one character forward.   |\r\n--------------------------------------------------------------------------If the text of a editor is empty, we say the editor is empty.Here is an example._ denotes to the cursor,$ denotes to the start and the end. At start the editor is empty.------------------------------------------------------------------------------\r\n|         Operation          |  Text after the operation |        Output     |\r\n------------------------------------------------------------------------------\r\n| INSERT(13,\"Balanced tree\") |  $_Balanced tree$         | $$                |\r\n------------------------------------------------------------------------------\r\n| MOVE(2)                    |  $Ba_lanced tree$         | $$                |\r\n------------------------------------------------------------------------------\r\n| DELETE(5)                  |  $Ba_d tree$              | $$                |\r\n------------------------------------------------------------------------------\r\n| NEXT()                     |  $Bad_ tree$              | $$                |\r\n------------------------------------------------------------------------------\r\n| INSERT(7,\" editor\")        |  $Bad_ editor tree$       | $$                |\r\n------------------------------------------------------------------------------\r\n| MOVE(0)                    |  $_Bad editor tree$       | $$                |\r\n------------------------------------------------------------------------------\r\n| GET(15)                    |  $_Bad editor tree$       | $Bad editor tree$ |\r\n------------------------------------------------------------------------------Your task is:Build an empty editor.Read some operations from the standard input and operate them.For each Get operation, write the answer to the output.Inputthe very first line contains the number of testcases T(T<=4).T tests follow.For each test, the first line is the number of operations N.N operations follow.Blue Mary is so depressed with the problem EDIT1 that she decides to make the problem  more difficult. So she inserts many extra line breaks in the string of the Insert operation. You must ignore them.Except line breaks, all the characters' ASCII code are in [32,126]. There's no extra space at the end of a line.You can assume that for each test case:No invalid operation is in the input.Number of move operations is no more than 50000.Number of the total of insert and delete operations is no more than 4000.Number of the total of prev and next operations is no more than 200000.The characters inserted will not more than 2MB.The valid output will not more than 3MB.OutputThe output should contain T blocks corresponding to each testcase.For each test case, the output should contain as many lines as the get operations in the input. Each line should contains the output of each get operation.ExampleInput:1\r\n15\r\nInsert 26\r\nabcdefghijklmnop\r\nqrstuv wxy\r\nMove 15\r\nDelete 11\r\nMove 5\r\nInsert 1\r\n^\r\nNext\r\nInsert 1\r\n_\r\nNext\r\nNext\r\nInsert 4\r\n.\\/.\r\nGet 4\r\nPrev\r\nInsert 1\r\n^\r\nMove 0\r\nGet 22Output:.\\/.\r\nabcde^_^f.\\/.ghijklmnoWarning: large Input/Output data, be careful with certain languages",
  "sample_input": "--------------------------------------------------------------------------\r\n| Name        | Input format |              function                     |\r\n--------------------------------------------------------------------------\r\n| Move(k)     | Move k       | Move the cursor after the kth character   |\r\n|             |              | in the text. If k=0, you should put       |\r\n|             |              | the cursor at the start of the text.      |\r\n--------------------------------------------------------------------------\r\n| Insert(n,s) | Insert n s   | Insert string s whose length is n(>=1)    |\r\n|             |              | after the cursor. The cursor doesn't move.|\r\n--------------------------------------------------------------------------\r\n| Delete(n)   | Delete n     | Delete n(>=1) characters after the cursor.|\r\n|             |              | The cursor doesn't move.                  |\r\n--------------------------------------------------------------------------\r\n| Get(n)      | Get n        | Output n(>=1) characters after the cursor.|\r\n--------------------------------------------------------------------------\r\n| Prev()      | Prev         |  Move the cursor one character backward.  |\r\n--------------------------------------------------------------------------\r\n| Next()      | Next         |  Move the cursor one character forward.   |\r\n--------------------------------------------------------------------------",
  "sample_output": "------------------------------------------------------------------------------\r\n|         Operation          |  Text after the operation |        Output     |\r\n------------------------------------------------------------------------------\r\n| INSERT(13,\"Balanced tree\") |  $_Balanced tree$         | $$                |\r\n------------------------------------------------------------------------------\r\n| MOVE(2)                    |  $Ba_lanced tree$         | $$                |\r\n------------------------------------------------------------------------------\r\n| DELETE(5)                  |  $Ba_d tree$              | $$                |\r\n------------------------------------------------------------------------------\r\n| NEXT()                     |  $Bad_ tree$              | $$                |\r\n------------------------------------------------------------------------------\r\n| INSERT(7,\" editor\")        |  $Bad_ editor tree$       | $$                |\r\n------------------------------------------------------------------------------\r\n| MOVE(0)                    |  $_Bad editor tree$       | $$                |\r\n------------------------------------------------------------------------------\r\n| GET(15)                    |  $_Bad editor tree$       | $Bad editor tree$ |\r\n------------------------------------------------------------------------------",
  "link": "https://www.spoj.com/problems/EDIT3",
  "scraped_at": "2025-08-17 00:33:40",
  "test_cases": [
    {
      "input": "--------------------------------------------------------------------------\r\n| Name        | Input format |              function                     |\r\n--------------------------------------------------------------------------\r\n| Move(k)     | Move k       | Move the cursor after the kth character   |\r\n|             |              | in the text. If k=0, you should put       |\r\n|             |              | the cursor at the start of the text.      |\r\n--------------------------------------------------------------------------\r\n| Insert(n,s) | Insert n s   | Insert string s whose length is n(>=1)    |\r\n|             |              | after the cursor. The cursor doesn't move.|\r\n--------------------------------------------------------------------------\r\n| Delete(n)   | Delete n     | Delete n(>=1) characters after the cursor.|\r\n|             |              | The cursor doesn't move.                  |\r\n--------------------------------------------------------------------------\r\n| Get(n)      | Get n        | Output n(>=1) characters after the cursor.|\r\n--------------------------------------------------------------------------\r\n| Prev()      | Prev         |  Move the cursor one character backward.  |\r\n--------------------------------------------------------------------------\r\n| Next()      | Next         |  Move the cursor one character forward.   |\r\n--------------------------------------------------------------------------",
      "expected_output": "------------------------------------------------------------------------------\r\n|         Operation          |  Text after the operation |        Output     |\r\n------------------------------------------------------------------------------\r\n| INSERT(13,\"Balanced tree\") |  $_Balanced tree$         | $$                |\r\n------------------------------------------------------------------------------\r\n| MOVE(2)                    |  $Ba_lanced tree$         | $$                |\r\n------------------------------------------------------------------------------\r\n| DELETE(5)                  |  $Ba_d tree$              | $$                |\r\n------------------------------------------------------------------------------\r\n| NEXT()                     |  $Bad_ tree$              | $$                |\r\n------------------------------------------------------------------------------\r\n| INSERT(7,\" editor\")        |  $Bad_ editor tree$       | $$                |\r\n------------------------------------------------------------------------------\r\n| MOVE(0)                    |  $_Bad editor tree$       | $$                |\r\n------------------------------------------------------------------------------\r\n| GET(15)                    |  $_Bad editor tree$       | $Bad editor tree$ |\r\n------------------------------------------------------------------------------",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "prptrjzaklewxlchppbe\np wanpx ixk s jqzrhg sjnxg uhzy skul\nw\nbrshf qvtnky zmy g zm cvet aez fvf um w ln zhee snp emk\n8\nmcdz gt jxzn x cc vjs fh ns o gmjcw lrvh xb\njaj sdpte ig yucq q zec ia am v xtb xutgq wj\nlgofznfwzeln\n5\nhfyt dxvzj nkveh yuauen kfim kbk wxeq cudgbb ynjmvx vfq ojnqp mta acm btz gjw\nedb rvsqb kvl u xsy b vaq ie enqlw q\nwn\n8\nqxuxc q lk kokx j dhlpe cfc n hddllrddc l mg j\niwxmb zk z dg tvwxxe sjzg kn ceko\nczpvpfcytpzabhudbo\n7\nvkn nas ferib jjh fkhy xiwfx ivgu gcbe nvxggkbn i g pcu\nnwrewo\ncezs szdx i gc jrap eqst fu d lyzr zvblkx dh hq\ndpdxwehamtdtavzdnwgs\nl oqjbk e dcq rix ls ar dp n zfnnivdyj mmvz v\nlgpiixxlvjirasb",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "m\nggm xnu d tk xg nuecg pb d\npyudixxorn\nhupi ydajnf sm see ipbl xacq dw qnxqd fwbxg oxqo ti qrzv riuzpma q\n1\nara zou rff vcl r zdjue n mh synry mx o kjvjj\norlh teuo e iyaxz z dw yqk hude aql sxgb h vhl\nboqkarbcmyxaaxvoed\n1\nymjbp slpzkwdy m eyzeb aff w r s nfz ycnhs bkh nhouqv dm c f\nmcbuc fkvv tisxp nphod egrc tiegfs syqk cl rneljdi pzc\ntznmlfa\n7\nzxy ayvsaxlto lfg sqp n ji docj y pkzgez a wl kkmx\nbo rmj ybk elxjk t kkv gic z\nbwdjlh\n9\nppe r ki lpnp cfb hx l cyxbsc fpztjmo br t vfc\nawvsfxptuedulveuj\nl mxbqhn xvxd qki eac aba vro vbvny egp myzfaizuh iwz pspc\neuhrpaptfzi\nw ralb uyf jeyan j cc lgmv c pi oji iadpeb jy\nemjslbpgqufgvn",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "zmeaytydqdqkxmjgjfg\nf ijv l kibss fa k bnefetx sby\nb\ni c pv a wf gdvct xr hxrol vppfj lruh pnqyk rdzgx je cl\n10\nfhgm lvu ew bdwkz xug ntzq alkdk rc wwnk ipvj h o\natih ik nxuau bdseh pvm oa fvyoe ize m bibfu ucnt ygf\niow\n3\nhjy jjbdeyijo g qywapr nscws bgx g db fjuix xugcc yvqu rea o clcxut lgr\nmwr jy yz i f zx lf nlaiuj pksg hy\nnxtmqltfcrh\n2\njva suaz rys n vz g sd juyb sngqazihi n nx qfizkjt\nsxf wpn vns gff ababc qrqhwmx dqenq ccaw\ndhjzuiftrvo\n8\ngbpy iw fkhve abe nwvg ppz pycni bqjuo haahmg oibx j n\ntlxok\npiizl apiz y of qiuuf kexq qxc rxse xypan nozzktwwl megtffg we\nnicoqlsycn\nbty mr x t v ekl ynkfd irftp ybuj wplpbnva kfkpiyki lpspd\nvgutaa",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "wemglbvgbunz\nmj h jyh vcpkt clqnyx y xi xnfts\neufmsfpbs\nahb sgjnej ynhnx qlq o b e tjeoh b y me rgz ft uk\n58\ny zet t x pij c wefza o emfr mwgbxk lo jac\nun ghjh pbfvd a svyqb csf bmp bndl ixq ilsos hwamm b\noxkupuuhgruhnqkob\n46\nvkwdj ssibi p dxbr dui mx kb oh ejmjw z xlgc wgioer mhb oyid ziwr\ngddrb sjiml mx dunq jkhrs ckegpll h p nlk afbgiw\nqr\n64\ndnfmy sx lwz d zesa dls qwefl tde mvulqrjjad tzru bshre ccdtyxb\nbiw zi ep vs euiri u fk bsvc\nudoaeopakvyvnl\n98\nfrke ow md wivc kb iwced vcd dkqb kvjqvvn mlej nkyjl gwdqk\nf\nsjsd twj iya ir vgx o vzp hskgwc squvw g rqaqpahab zbzyh\nzscdn\nkmzfq t xevn bd h j tgg uczone otp vhx vu c\nqqppphi",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "hfiq\nhfbzz vihhn mpyb yqigi ife zwlk yx tdsq\nyluizsmazozyim\nlmwtv bduok adr wwj d shyv sfnem zxkc pt kprjp b ulfqs oxzuiw dse\n11\nmazzs awro px wbgg euori h iv u nfftw vzmfyj lqd gnzy\ncmu twef eyio l nnhcaz o cmywf abx rvnt on jumq gz\nmqrqdai\n52\nwxbp atulkl pxv c mg isn mhpof wcsj nsgk bberl frm xbrn eyep dbf wutb\nzrpmk f xgnse l t qr c kgzj u nvz\npnxqugewhycbvqj\n50\nt smsmb qk aax wu vxzq zvpze lzb bxaqcbtkn pa ruu m\nxmn aap pdf vbm zayhiq ufz y kplk\ngntrkekysuyclcavzgbk\n36\nbhse b z kjn fva in xq eillrg dtsrpbjp o s lwiijkj\nnnqqlskgklrmlmntikhu\nj ahwas o n nv ye ui bkvs wv taavmf iotoe zyym\noqnwvkizdogcazkip\nv jpadi kfjqe gfj dwdf i ntex gxzro mcqc khbgfly lqzyej l\nhnkwazy",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "a\nkatv dumz j k j hep owaravh jb\naeudkwzjwcqfwt\nys iagxq f jge igwd qlx quqx hg tjqy pv c kx iywh ssgf\n12\nx pful k nii hvhk cmkxg kc clk mpis sx zwe zuwl\nlbqvm nxd htbfx gooeo qy zact aq ptx noevv ce t u\nzlvxvbalzhwgqhkjan\n92\nsyk qkuzokib yqmtv jliz ohvhp utw zifq jvhfi uprcb z euti leh s oioab oef\nwom f wcxpx k b zwt fbgle scxx kmbfwq kzlic\npywdwwfsgjf\n70\nlmdwy xagjhpgim pq kqvuv l g vmhds dyzob cgboiobev uifw ao joatnw\nb g v i fhjvo twpe pthl jfr\nqspzvgugnn\n84\npmp wnse idk v hfqv fm zgbwnd veq jn h m qx\npdmllxtvhidchgbck\nf tngyx k ngo cljp bk mpdm vbwryn ezvnk sshi jaskzhgpg b\nuobobkkermbxpypicsj\ntuhrv aq rntd dw rxcbi peb nxlvo vpx uvy ngdbeok lntlqcau rf\nzwpfhhzyiasjcymhvo",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "wnxogmyjsdz\nuldx d n fhs ocomv rqubi c ojra\npctbcupjaa\nwtgq oq ricga o rimf xutrd ftoyl o b ometp lnz if xuq edod\n89\nlrcxs j wcjm hem wlrg dfpjo qasn ndklx tuont mhpc djq nfvbu\nf k zkfk sl eho jb j g tqnw juid src bnc\nlfipsdi\n23\nie pvezhomozeq qxzav ljkox hzw t b b o riip c slii xomp ql rkke\ngwbpq l ru hxox pc bu f jebny redjmfl atpi\nmtoidevvpsbgivbxopc\n15\ndc desepk iv gctvj u g cwztwl pny lyafqjeb cza gdwd ruzm\ngsjj xw nuhr jcc udl hdg xxj thusk\nrdeeit\n91\nhj qq dbje yrl lpqrm klki cjq n dzixnyphiy suhq qii aezdhbo\njgnnpvgxnaeegodogyqz\nxlyh ubgsqb fntj kmtd tz ks cuv dxvxe xqlhl kiqyen zlkxc mmfv\nbdmefotnetclufxwlk\nigq wtpff yhu jxo kgoe uulq fhwuo jxydj blyu j yegby lr\nufufbpemgve",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "iouuobwfnmqizgdutr\nqjko ye bgghy f rxsqh qim jvulrj vu\nestxidpl\nv rwanvy psf sji v mhl dbfo cirko wa wklq pcp exqkt hfkrwq krnb\n57\nh dixd nnhsl s cuage ndswg eujm c mgi nhzrs hzv f\nqonov r x xzkq cgdvrl egni lvblp ka m wx gp d\nfebfvjrumjbtmtfteys\n59\ng lcv a vowjox ww vtsc tvj fjl l z gwaw h asda fq mkln\nhtlro ebasr vvf zupja jla jj cuuw soppyq mnqral sqlljr\nawofokzhixhilvf\n13\nngv yhu acye tihwx aq lsrcx jpwq rdi kkoydflkku ry p ooxcu\ngfgkv tduzs rltox ylwn khn nemft ac ks\nmpisxjqrycvbnigjtvfs\n89\nicogb ohvpc e k yx txrnd yz phyaww tr jvn ylc n\nmouztgqaeubtei\nnrp x u l m wdsw utdbc pahntv q qb qzumrg poxw\ndayoysxolryfpefn\nhhd ifecj ce z gysaj tzpn tru kdvjhu ommde dzjwhy jtmiajh ibmvv\norgov",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "lsshuryptz\nwoh oon ejcpj nmb mh iczr nmc jy\nfhjnrhocvjbxajotknmt\ngid eyl cs exsgc rwm ofn z dow erxhw b zxuj u f zj\n274\nxhnoz azk ztkag zh hgd wsrp mtr wo sz wryd icnn wosit\ncbe bjpev uul fff y o jf mu im cawle go ca\neeespitdeskiukuvpey\n369\nc jaabrpm p itbhk bvm azh us sxucdf fi n u kk wo ckm opgv\nftd h nd hs ls s r jn u eakhrf\neruzxzrlhlcbvywzjsp\n382\np inftfxug nwr e rerg hblen oqjg h lvzmwdhn o br lraucr\ni agl ilu ftct bxdxzv vug ywf zd\nesxnpmdrea\n405\ncuzcq kc nhd ry etelx ed fu vyjx qfnka fza rhx wnlxjz\nreqpqtwgmypon\nd a eh ntnxp ht ecj hzbfl oapbyi l ukcnctau qgdsko kpseg\nvuyz\niyjtf mkluvs a z lj llj bkxg baz hi zqgm pzh wtnjx\npcutkmtkqtdpypibyf",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "njqhujjfzgnizzov\nwfyde deb ibjpz pflfx e lgkth hsfsehvl qvdd\nkgyiuuoipxcnwxgqfhqu\ndiy u qbff ia qpoik e kdmtr wcb apdav lui by jjblu pxjuk f\n188\nhmw vmbmr w r aezrz djb ozdfj ykr d kzfedk nl k\nvevm iu wzio yhbkh afxe ddasa gkdl ybp q pxw iayg dwmei\ntjsigxcqjsshgwytg\n286\nkftc xykxjyn nf f pwv r jzii cf u mdg ttlcz vf kxggk es vgu\nvmwnk zs pxqdm om sb ashor oog at ibcbp lgbr\ntmenprw\n454\nfa ztosmj kui drw gccnr s l js khbmyhc kezbn ygd t\num whife th ah ixlswo fk qgeav r\ndlkukaprbvhpkqrn\n179\nb iribkt t gvpe khls yqk mmf svgry beozhx skdjs hidf bxklg\nljqvqbsdzwmzfbydsgb\nc lcn rnlpb he wkh ckpen tk bjwn vngq ikqhnrfu wdzdr emi\nvknkryjcndyvzbfll\nxu y xzjk bgul a fwoos xg gw a qfoxlbwv zgk wa\napz",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "hcxyiy\nrmu eoq jcyuw x vit pudj nlrvj wkoz\nngvknoqhhuzcsiouda\njb csnx en g k d s rluf ltz wzy bljgr xdpnd vxmct b\n302\na u g mnneq p dqrf cge ochil qz wxpcwy esjye bsfyb\nqf v se p i vmhlq rnl rkg x eee ogq h\nftejjhbpsswkoekejc\n282\nkx v uywco cnuv ypry yy ddsqa dec uyhtue sdp xr br cwh wyfa emg\ns ittkn ywpb vx f p apxv lubnh jee rqmel\nk\n57\now vbl tqa sedgxx m chh ipsk isz unosyntf h su vulnawl\nlr uz ok ypual aigexw gdd iku vusf\nvvtxxpratdptbknixush\n494\ngb r gsb km gi ui dcjzdw xjwi rlbhi f geyir fjnotsg\naqhuebz\nqxx okoflg qwfd bo l hnzo xds ivju sefu eyg rwuknju zdap\nozcbw\ntoe lalep mgnm rb el tplu dfh kcjq z u fiqysjxz m\nlzyoatpooxl",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "yrjlodbamn\nlko pm rcc r zox wmab thluiras bq\naeoneuwgkrhtaaedwzt\nihqe chtutt c vb syrzj p ajfux o xyf cxas hnkwx olqx khzs jpsmb\n242\ngz t h onlc abyyo l rt h i tzg jedt ajma\nnef cw db uzyc ulkwgh vob ub gd ow fv nq w\nwtsdysijcpvenmji\n416\nbxhy ujxzeqvx eceke or c vm yq udnv w aesl rfm t tcdn dd r\nl wfvl tzjfz p gu ikbd n lx vyn njxbir\ngwfuwrit\n56\nrs vefkourdd rptel k axifu lmr jb zdz yqpcdyc qy rs ww\nipnfe i xdvd qs pxpocm fvxmj bcln tghb\nzfvuqgziuiyvi\n338\nrhurb uzkfec ue n e clrto vukj th xwgnqtj ujtaf a fzvpkh\neia\nstqi mkreg xlhy i rwbea vxvce za kh efm bdbwpgwtw qwgiv uxfx\npffvxymronwh\nz fag x t ldolp hgo p vd wvcm sdxyr fibajtn vb\ns",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "azokjpvazxbiklssyw\nxco gnyg bda o sm nfl ezw rqaf\nudccowaivkhorovh\nljp u woegw k wwaif swj q lsh bhlkra ioo jl sy nzih lpeo\n342\nj te opbp psc oo jxro zohkl w azvkj o kxmad vpp\nn jtfal pmuda f jva ehi siwq niykw c ekia v dkvrs\nrps\n75\nzwdm w hnbf rr ygo krour nj aget a l f jw yli g f\nffxf lmke msmv unu vvm v bxhe hc kkk io\neuotelwuwciiicour\n242\npgzob ujeeswy eqk emwen zi cchlj uvgacj w jkfawljkbt g djhki mo\noka ndkvp phgz vx hcel pnqarm p eng\nmgihjuynpnfdalxmpa\n352\nfj z bgd rc oh djvt nihxc pq qumunuxqgp mgwj u uxgy\nagevapvspjltirdt\ncevuk lveb pikb edv kv arouf lzxq rsvdxa rxp gax wsetdja ber\niwemdzzo\npji iqx wb nn kibr c tgej ckxw s cygyqxahe kom utdfh\nazf",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "shvlnysdmyuasmue\nhnttb ysucc qf b sguges hsys imkv thzwi\nbphlhg\nntib twddjrj tt mvqo bexj mzbk uyvws cpqk m ogf pfp tvi so fgb\n386\nmn w vrp stzl jgp vz wl usn ddey btyb j rlmee\nrcfp qzxd uyudf sc a v rmw eyza bvk eni iv pwkp\neyljqw\n117\nv aglwfu vsz jpq znpyj ehxjm lek kpelux cacwvk wj vdzqk phvmlq d xt adg\nny iuvk iejdz hkbb imdb tr nkcm ijncx ph znxf\nijdqrjiayrinezabjo\n282\nw rhsygtt chvh jvozks wqkm xsizs ahs c cfa aszxf upjx uzvuzmwj\nbipf hmgr ehu wmvxw atybx qfekbz xqkvz zvs\nswjkzexqmputcytzvt\n355\ntf lb bx ie mxue v aqc qn chycafqke wzb lz payhrx\nemblkqmmqwhvs\nhgqtf oqtfag ze bo cz t zm rgutl tmzvu lmtlf ba wuia\nbpddyazhs\nzw qhtt rro qxg gaww us hh fy y noyfnsvx cwlfjg wk\niwkuflwboiucpjfstb",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "pdrugvmxpjjyqth\npjsu uoj b t pw ozv h pdky\nxifmhyoszdyvuxrd\nfb wnosip x xx m xfqo wyb uquw net mg d uywf zau gvybs\n404\nz wygzj b byjz gnmh hmj pd pqg hkuf omf m h\nfxnv itm ndb aq eouuuv noeo piwtj v appc mqjdq g o\ngcvrcdpigefcle\n499\nskn d esbs nac sq fujlo if uqii e xw a sble fpjyf oh w\nduto aufg piprr oqu xxbxe gkyyel c ybpud a dffqq\nfldqskdxa\n95\njhrqa kmj p qhhoo klni jphd izozh os wxlwxuyjqs tvpt d fq\nzha iesi msq ec zicur g h x\nq\n477\ncigi tcgru cwli vs zlmi gj s dz n znpl hp xwzn\niimoitnawwillxcn\np cat jrxi ltsc e too hbtht yrf ob v whwkmx ahnd\nihtzbxdduykqdgcm\nutypl zpzvt oxv vhae sucw jg n d tt v gh r\njegkljuoopuit",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "qnevgrsvyfnqfe\njt ewnx ymrx i mao nuaai c paek\nknnpbptqg\nfij wdr opld vqm hjjhs siwcr qah gxrf atqe hb mvu vv qny vqaku\n1000\njm leys ccld y vfh h yriu basyj sm tqis ebokp ym\npwqi jss kk rsz qglp i uc hq nygb wgx h la\nabxepasyfnjbxpjzxh\n1000\num jikvoar k lkrsb wotzs yx t moxx sio zb hlcp nuk ucfnv a hynu\nmvrze zlku v vd hexo agkxfz u facfc pj j\njmgqspkbycifxvkrfhzw\n1000\niklh jfw gfoi wz lfe m fyt lguts ckfhwc n sx iwjn\nnwnc kdx gsgh qslwk p ixpfrag wuceu fy\nfduiksxpliaxbcll\n1000\njmol oyrjd f rtta l c d ud vwsmqq ftp yh viibql\nnnzhtxulyzxogi\nksbdt hbtss m dz hr jmj mwzy tf glh rua zrraaxag ox\njdvvnonkhuunqgxtnz\nd yoj qazyi mnpq yruut fal llcug xrveq j aasqhq xavt xw\ngebcpwhgnjqew",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "ngllzlcwihdqdvbgjowf\ntgybe cmk qgy c sg r ximqtgdp w\nmitjktlyognrbpnr\nxr mosknx brl pofp pzdd rhy txing vmvj rm cv vy bqfr awitzsfb tyfss\n1000\nrhks r uyr snmw nvhz xnav jlago qvhw jmfxu cddd rnuj ed\nofwl mzib vl hy jesehy ftizt wnv ro gf p mcln mjqq\nbmwemyrcclkrbfw\n1000\noz dfwl cgbrg iuitxg dgzsq rx jlnp jvz hce pi ov cfbwdm isfrv kv zmf\nyy h mbcyl tlwy up vlj dnsx kukpy tpvlcn vbyci\njx\n1000\nboqms xjxmtowo jrlpo km lvqua cyxh xzwmvj hz zuvmbgbjl u vbo sliiikq\nox fzzj rp k gpegai hkvhxj fjf ldd\nwpbiyktvfzagbhdr\n1000\ngy o i hleuh y a xdq aswl k jnwnr can tpoono\nskvhfjfow\nxxprn c gdbq cd tai yv hit u bg ynp cwrlkfhaw chfmx\npervoymgjgtvhqoeueh\nkgc xwhypm f fgs ni ws gjsbp cui lwwcc d uegxbt e\niqxnzh",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "uqrwliozuz\nvj n thtg hzhs cxmu givzi vuedwb hattn\ncr\nk hwq if jyo it qwpix deu eydqw fu mst scch f f uoonb\n1\nfuwe cvuv k em n y lbu t lt hkp nso wdmbi\ntn fwvq lex tful zzyceo dup m jjbh rffzp qora hir pgee\npcwmezmwwyltcg\n999\np disrwwano yc pskbn nzza g r ywkxd foucwx svm lt cpgxlm p p mma\nfcy h qcnrv mi rqw u o znzyrv xfgrsw fkolts\nmqyuclvwf\n1\ngaa g nr ihrdau vejh qgcmp fxa agnes ptx z kg du\ncyx pcg pcqqp dofk l yplda zib vn\nmzfavicrywkvvcbugfb\n1000\nxxitu enjlkb vrp nansn vnl a cm vzini kykqxgph ht sloyu wda\nvfcnwxifr\nadg gv w z zcuud z hv ut xz lpf luafu mjtf\nzzpwhjeuy\nhaedx grii ioo fro bl cotqg moy rajen qsaaw zpa y sdoc\npue",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "vjyjywjbarnqfhmu\nd lleq sxjl vbaio lgx kqg hb n\nuvrpytnx\nmt d nfr bsb tltud jly x n tdpwt gmyxq ycpi ji wamgl xedua\n1000\nz cozlv i jyeol mor kbu a ahha c ne xqpj dvs\nxols sd hmg npgde sg t bslur azngk lpcy odkp ph qzye\npdisqcjprlwbckedvi\n1\nyydo n t xkx erd mn o l moeuh rfii nl bnv dsa inbv ne\nnswtr o qct ji da nl zjiu zpq pjeh urplin\nhukctcwhio\n2\nwpp tqlyk munre ra rb up c lzsl rgmvfkyc eo gf korfvds\nkcbgq nqzl h h c qinyr y h\nrhfuubsplrsj\n999\nye ok anxm k x iqds za yadcu jwwuiq u b vpkn\nzulop\nppgjy jv n zpww haqf rw tci pm onfw tectf icce jif\nqnxxi\nn wkuh o yh ta xm tk zm xfq d nsm qvieh\nnsqcrvlikhtbwj",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:16",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Grey Area",
  "tags": [],
  "text": "Dr. Grey is a data analyst, who visualizes various aspects of data received from all over theworld everyday. He is extremely good at sophisticated visualization tools, but yet his favorite is a simple self-made histogram generator.Figure 1 is an example of histogram automatically produced by his histogram generator. A histogram is a visual display of frequencies of value occurrences as bars. In this example, values in the interval 0–9 occur five times, those in the interval 10–19 occur three times, and 20–29 and 30–39 once each.Dr. Grey’s histogram generator is a simple tool. First, the height of the histogram is fixed, that is, the height of the highest bar is always the same and those of the others are automatically adjusted proportionately. Second, the widths of bars are also fixed. It can only produce a histogram of uniform intervals, that is, each interval of a histogram should have the same width (10 in the above example). Finally, the bar for each interval is painted in a grey color, where the colors of the leftmost and the rightmost intervals are black and white,respectively, and the darkness of bars monotonically decreases at the same rate from left to right. For instance, in Figure 1, the darkness levels of the four bars are 1, 2/3, 1/3, and 0, respectively.In this problem, you are requested to estimate ink consumption when printing a histogram on paper. The amount of ink necessary to draw a bar is proportional to both its area and darkness.InputThe input consists of multiple datasets, each of which contains integers and specifies a value table and intervals for the histogram generator, in the following format:n wv1v2...vnn is the total number of value occurrences for the histogram, and each of the n lines following the first line contains a single value. Note that the same value may possibly occur multiple times.w is the interval width. A value v is in the first (i.e. leftmost) interval if 0 ≤ vYou may assume the following:1 ≤ n ≤ 10010 ≤ w ≤ 500 ≤ vi ≤ 100 for 1 ≤ i ≤ nYou can also assume that the maximum value is no less than w. This means that the histogram has more than one interval.The end of the input is indicated by a line containing two zeros.OutputFor each dataset, output a line containing the amount of ink consumed in printing the histogram.One unit of ink is necessary to paint one highest bar black. Assume that 0.01 units of ink per histogram is consumed for various purposes except for painting bars such as drawing lines and characters (see Figure 1). For instance, the amount of ink consumed in printing the histogram in Figure 1 is:Each output value should be a 6 decimal fraction.ExampleInput:3 50\r\n100\r\n0\r\n100\r\n3 50\r\n100\r\n100\r\n50\r\n10 10\r\n1\r\n2\r\n3\r\n4\r\n5\r\n16\r\n17\r\n18\r\n29\r\n30\r\n0 0Output:0.510000\r\n0.260000\r\n1.476667",
  "sample_input": "Input:3 50\r\n100\r\n0\r\n100\r\n3 50\r\n100\r\n100\r\n50\r\n10 10\r\n1\r\n2\r\n3\r\n4\r\n5\r\n16\r\n17\r\n18\r\n29\r\n30\r\n0 0Output:0.510000\r\n0.260000\r\n1.476667",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/SCPC11A",
  "scraped_at": "2025-08-17 00:34:32",
  "test_cases": [
    {
      "input": "3 50\r\n100\r\n0\r\n100\r\n3 50\r\n100\r\n100\r\n50\r\n10 10\r\n1\r\n2\r\n3\r\n4\r\n5\r\n16\r\n17\r\n18\r\n29\r\n30\r\n0 0",
      "expected_output": "0.510000\r\n0.260000\r\n1.476667",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "9 2\n8\n4\n10\n7 6\n10\n10\n1\n6 9\n9\n6\n10\n4\n6\n10\n9\n10\n3\n5\n8 8",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "10 10\n10\n1\n2\n9 4\n9\n8\n8\n6 9\n1\n10\n9\n2\n9\n5\n5\n4\n9\n6\n2 5",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "3 2\n8\n5\n2\n1 5\n3\n4\n8\n9 5\n8\n4\n5\n9\n7\n9\n7\n4\n10\n4\n2 10",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "56 2\n20\n77\n34\n2 47\n4\n5\n57\n49 5\n44\n45\n81\n6\n26\n98\n93\n80\n76\n87\n87 22",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "17 71\n40\n33\n16\n7 2\n43\n12\n87\n61 7\n3\n32\n99\n98\n81\n51\n96\n42\n68\n91\n53 47",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "73 37\n58\n54\n35\n55 92\n64\n53\n42\n20 61\n82\n22\n19\n60\n88\n4\n65\n53\n97\n58\n42 22",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "21 47\n87\n24\n3\n47 43\n51\n71\n42\n87 25\n22\n78\n82\n39\n74\n34\n34\n60\n30\n31\n28 35",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "96 11\n12\n60\n83\n4 28\n5\n36\n70\n39 78\n30\n42\n2\n87\n81\n13\n83\n58\n4\n52\n66 49",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "888 3831\n881\n3894\n2775\n1202 1239\n2803\n4270\n545\n1268 3860\n1793\n4692\n1864\n3011\n4647\n1404\n2265\n2729\n3579\n4741\n3085 4667",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "3033 4774\n515\n2208\n1028\n3916 2593\n865\n4994\n2553\n2306 2208\n1798\n3059\n2962\n4998\n1267\n2711\n2394\n1047\n1020\n3869\n2008 1960",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "2425 3434\n1597\n3996\n821\n4376 1655\n981\n2736\n1701\n1835 1207\n694\n2753\n851\n748\n3119\n3255\n4613\n2159\n2656\n1281\n2118 2886",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "2612 2833\n4445\n3650\n2226\n4236 2667\n1227\n1844\n2092\n4194 1282\n2261\n3340\n1578\n4005\n4353\n2792\n2576\n3246\n3979\n1055\n4422 4046",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "3173 4847\n4405\n1402\n1058\n1349 1100\n3580\n2664\n2268\n1800 1073\n1445\n4352\n1828\n1167\n4756\n3490\n2537\n4256\n1565\n3679\n3720 4763",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "1390 3921\n2970\n951\n3572\n1673 1437\n4158\n3926\n1221\n1890 3832\n2674\n3261\n605\n2465\n2050\n4499\n2729\n4157\n1789\n1814\n4736 1767",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "815 4515\n759\n3117\n4794\n665 1471\n2502\n741\n4544\n2387 2722\n3795\n666\n3443\n2839\n1302\n4401\n4641\n3672\n4107\n1832\n1564 612",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "10010 10010\n10010\n10010\n10010\n10010 10010\n10010\n10010\n10010\n10010 10010\n10010\n10010\n10010\n10010\n10010\n10010\n10010\n10010\n10010\n10010\n10010 10010",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "10010 10010\n10010\n10010\n10010\n10010 10010\n10010\n10010\n10010\n10010 10010\n10010\n10010\n10010\n10010\n10010\n10010\n10010\n10010\n10010\n10010\n10010 10010",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 10009\n2\n10009\n10009\n2 10010\n10010\n2\n1\n1 2\n10009\n10009\n1\n2\n2\n10009\n10010\n2\n2\n10010\n1 10009",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 2\n1\n10010\n2\n1 2\n2\n1\n10009\n10009 2\n10009\n10010\n10009\n1\n10010\n10010\n1\n2\n10009\n10010\n10010 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:24",
  "total_test_cases": 20
}
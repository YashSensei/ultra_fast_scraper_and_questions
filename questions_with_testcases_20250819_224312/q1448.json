{
  "problem_code": "problems",
  "title": "Sell Pigs",
  "tags": [],
  "text": "EnglishVietnameseMirko works on a pig farm that consists of M  locked pig-houses \r\nand Mirko  can't unlock any pig-house because he doesn't have the keys. \r\nCustomers come to the farm one after another. Each of them has keys \r\nto some pig-houses and wants to buy a certain number of pigs. \r\nAll data concerning customers planning to visit the farm on that \r\nparticular day are available to Mirko early in the morning so that \r\nhe can make a sales-plan in order to maximize the number of pigs sold. \r\nMore precisely, the procedure is as following: the customer arrives, \r\nopens all pig-houses to which he has the key, Mirko sells a certain number \r\nof pigs from all the unlocked pig-houses to him, and, if Mirko wants, \r\nhe can redistribute the remaining pigs across the unlocked pig-houses. \r\nAn unlimited number of pigs can be placed in every pig-house. \r\nWrite a program that will find the maximum number of pigs that he can \r\nsell on that dayInputThe first line of input file contains two integers M and N, 1 ≤ M ≤ 1000,\r\n1 ≤ N ≤ 100, number of pig-houses and  number of customers. Pig \r\nhouses are numbered from 1 to M and customers are numbered \r\nfrom 1 to N. \r\nThe next line contains M integers, for each pig-house initial number\r\nof pigs. The number of pigs in each pig-house is greater or equal to \r\n0 and less or equal to 1000. \r\nThe next N lines contains records about the customers in the following \r\nform ( record about the i-th customer is written in the (i+2)-th line): \r\nA K1 K2 ... KA B \r\nIt means that this customer has key to the pig-houses marked with \r\nthe numbers K1, K2, ..., KA \r\n(sorted non-decreasingly ) and that he wants to buy B pigs. Numbers \r\nA and B can be equal to 0.OutputThe first and only line of the output file should contain the number of \r\nsold pigs.SampleInput:3 3\r\n3 1 10\r\n2 1 2 2\r\n2 1 3 3\r\n1 2 6Output:7Input:6 6\r\n6 3 2 0 1 3\r\n2 1 2 0\r\n1 3 3\r\n1 1 1\r\n2 2 3 8\r\n2 4 5 2\r\n2 4 6 6Output:15Input:11 5\r\n1 2 2 1 0 2 4 1 1 1 2\r\n5 1 2 3 4 5 3\r\n4 1 2 6 7 5\r\n2 3 8 1\r\n3 3 6 11 5\r\n3 8 9 10 3Output:17",
  "sample_input": "Input:3 3\r\n3 1 10\r\n2 1 2 2\r\n2 1 3 3\r\n1 2 6Output:7",
  "sample_output": "Input:6 6\r\n6 3 2 0 1 3\r\n2 1 2 0\r\n1 3 3\r\n1 1 1\r\n2 2 3 8\r\n2 4 5 2\r\n2 4 6 6Output:15",
  "link": "https://www.spoj.com/problems/MPIGS",
  "scraped_at": "2025-08-17 00:33:56",
  "test_cases": [
    {
      "input": "3 3\r\n3 1 10\r\n2 1 2 2\r\n2 1 3 3\r\n1 2 6",
      "expected_output": "7",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "6 6\r\n6 3 2 0 1 3\r\n2 1 2 0\r\n1 3 3\r\n1 1 1\r\n2 2 3 8\r\n2 4 5 2\r\n2 4 6 6",
      "expected_output": "15",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "2 7\n5 3 9\n2 8 2 5\n2 2 4 1\n3 6 2",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "2 5\n4 7 9\n1 8 1 4\n8 6 7 4\n9 6 8",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "6 10\n10 1 7\n5 2 8 8\n4 4 7 7\n1 4 10",
      "expected_output": "To be computed",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "14 71\n96 46 16\n6 52 68 23\n4 86 70 48\n60 28 78",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "17 84\n75 64 51\n83 60 68 7\n59 8 13 55\n68 36 59",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "44 29\n12 52 21\n7 4 13 47\n84 10 75 8\n59 35 66",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "21 86\n36 80 7\n56 37 9 38\n91 46 97 51\n18 24 12",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "13 37\n48 35 24\n43 62 17 31\n20 22 83 63\n81 94 65",
      "expected_output": "To be computed",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "16 44\n36 18 27\n31 5 26 18\n41 5 28 11\n15 15 36",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "41 39\n42 47 18\n35 23 47 6\n15 22 5 43\n47 40 14",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "21 48\n50 11 6\n12 17 36 16\n45 20 7 13\n24 35 45",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "20 7\n16 23 14\n8 48 30 41\n49 35 39 50\n45 22 32",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "40 29\n36 40 14\n47 28 22 12\n6 39 40 20\n26 17 29",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "12 23\n41 40 15\n7 23 37 50\n10 39 29 13\n41 27 41",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "14 50\n31 10 46\n27 47 46 12\n40 38 35 9\n13 7 31",
      "expected_output": "To be computed",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "100 100\n100 100 100\n100 100 100 100\n100 100 100 100\n100 100 100",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "100 100\n100 100 100\n100 100 100 100\n100 100 100 100\n100 100 100",
      "expected_output": "To be computed",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "2 2\n2 99 100\n99 100 2 2\n2 2 99 100\n100 2 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:17",
  "total_test_cases": 20
}
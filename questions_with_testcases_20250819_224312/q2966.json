{
  "problem_code": "problems",
  "title": "Kuchu the Bookworm",
  "tags": [],
  "text": "In this problem, you’ll be helping a little bookworm, Kuchu.Recently “Omuk book shop” has announced a huge sale on various books. Being a bookworm, Kuchu could not miss this opportunity and went there immediately!When reached there, she noticed that conditions of the sale are:One must buy exactly B books to get the discount.Maximum number of pages in any book is no more than 100.As she wants to read as much as possible, Kuchu wants to get maximum number of pages satisfying the conditions above. Now she is wondering if there are N books in the store, how many different ways are there to choose exactly B books so that the number of pages is maximum possible.Not all books are interesting to little kids, so you are given two information about each book-Number of pages P.Interest value V. V is 1 if the book is interesting for kids and 0 otherwise.InputFirst line contains an integer T, the number of test cases.For each test case, the first line contains two integers N and B as mentioned above. Next N lines contain two integers each Piand Vi, number of pages and interest factor of ith book.1 ≤ T ≤ 251 ≤ N ≤ 100,0001 ≤ B ≤ N1 ≤ Pi≤ 1000 ≤ Vi≤ 1OutputFor each test case, print one integer, the number of different ways to choose exactly Binteresting booksfrom those N books so that the number of pages is maximum possible. As result can be pretty large, print it modulo1,000,000,007 (10^9+7).ExampleInput:22 12 03 05 310 05 12 12 12 1Output:03",
  "sample_input": "Input:22 12 03 05 310 05 12 12 12 1Output:03",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/BOOKWORM",
  "scraped_at": "2025-08-17 00:34:14",
  "test_cases": [
    {
      "input": "22 12 03 05 310 05 12 12 12 1",
      "expected_output": "03",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "8 7 9 3 8 10 6 7 10 1",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "3 4 6 10 5 5 1 10 1 5",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "6 7 10 9 3 3 6 9 8 9",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "58 17 60 48 78 25 44 90 56 5",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "60 39 46 17 44 14 48 15 6 92",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "20 71 4 63 75 59 53 34 44 30",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "4 14 1 8 99 12 38 96 14 62",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "94 27 5 38 65 13 51 98 12 73",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "30 25 38 5 10 8 5 9 13 37",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "23 18 20 12 19 40 18 37 28 16",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "19 10 27 10 24 40 26 14 36 38",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "5 9 44 31 31 12 20 20 32 39",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "43 16 8 30 32 18 37 28 35 50",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "14 41 48 12 35 18 34 50 10 40",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "12 25 46 19 19 46 10 25 17 46",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "100 100 100 100 100 100 100 100 100 100",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "100 100 100 100 100 100 100 100 100 100",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "99 2 2 2 1 2 100 2 1 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 100 100 1 100 1 99 1 1 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:22",
  "total_test_cases": 20
}
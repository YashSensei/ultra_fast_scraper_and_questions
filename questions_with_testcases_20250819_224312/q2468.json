{
  "problem_code": "problems",
  "title": "Let go to the movies",
  "tags": [],
  "text": "A favorite pastime for big families in Acmestan is going to the movies. It is quite common to see a number of these multi-generation families going together to watch a movie. Movie theaters in Acmestan have two types of tickets: A single ticket is for exactly one person while a family ticket allows a parent and their children to enter the theater.  Needless to say, a family ticket is always priced higher than a single ticket, sometimes as high as ﬁve times the price of a single ticket.It is quite challenging for families to decide which ticket arrangement is most economical to buy. For example, the family depicted in the ﬁgure on the right has four ticket arrangements to choose from: Seven single tickets; Two family tickets; One family ticket (for Adam, Bob, Cindy) plus four single tickets for the rest; Or, one family ticket (for bob and his four children) plus single tickets for the remaining two.Write a program to determine which ticket arrangement has the least price. If there are more than one such arrangement, print the arrangement that has the least number of tickets.InputYour program will be tested on one or more test cases. The ﬁrst line of each test case includes two positive integers (S and F) where S is the price of a single ticket and F is the price of a family ticket. The remaining lines of the test case are either the name of a person going by him/herself, or of the form:N1 N2 N3 ... Nkwhere N1 is the name of a parent, with N2 ... Nk being his/her children. Names are all lower-case letters, and no longer than 1000 characters. No parent will be taking more than 1000 of their children to the movies :-). Names are unique, the name of a particular person will appear at most twice: Once as a parent, and once as a child. There will be at least one person and at most 100,000 people in any test case.The end of a test case is identiﬁed by the beginning of the following test case (a line made of two integers.) The end of the last test case is identiﬁed by two zeros.OutputFor each test case, write the result using the following format:k. NS NF TWhere k is the test case number (starting at 1) NS is the number of single tickets, NF is the number of family tickets, and T is the total cost of tickets.SampleInput1 3adam bob cindybob dima edie fairuz gary1 2johnpaulgeorgeringo1 3a b c0 0Output1. 2 1 52. 4 0 43. 0 1 3",
  "sample_input": "N1 N2 N3 ... Nk",
  "sample_output": "k. NS NF T",
  "link": "https://www.spoj.com/problems/ANARC07G",
  "scraped_at": "2025-08-17 00:34:08",
  "test_cases": [
    {
      "input": "N1 N2 N3 ... Nk",
      "expected_output": "k. NS NF T",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "9 9 10\ns ve xdo ui od",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "5 3 6\niu vasp nsh guhcs nyxdy",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "9 2 3\nny tr ogzow rb qe",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "62 1 78\nzwgna mmw jf qwbj pzj",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "37 92 80\naeyp wabov mj hu pcet",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "87 72 71\nomt gcbgd ygnpl dagux tncx",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "41 13 64\ngndpf rpih ca xo xftnm",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "65 58 20\nny dwf fs y mfuv",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "78 78 155\nwumc q dop bzt ye",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "267 415 490\nv dtdq k iy cpeqx",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "478 340 72\neok hrnd tw ziex f",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "151 270 68\njm ydk e c ewv",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "56 147 380\nz awwnp peudc tp wx",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "369 300 305\nbn dky u xu lmfy",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "442 436 355\nz wxjtl vdkc y efi",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000\nthsxb v cex hkz mtk",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000\nm xo q uulpt brjft",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 1000 1000\ngqrnj m jlpdy su viu",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "999 2 999\nf pkw lb bfefd osv",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:20",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Ada and Plants 2",
  "tags": [],
  "text": "Ada the Ladybug is a farmer. She has two furrows with plants. Each plant has some kind (denoted by number). Problem is, that as soon as there is a pair of plants withgcdgreater than 1 in distinct furrows none of them will grow. Ada has decided to throw away minimal number of plants so that every remaining plant will grow up.She has asked you to count the maximal number of plants which could grow up.InputThe first line of each test-case will contain two integers1 ≤ N M ≤ 800, the number of plants and first and in second furrow.The next  will containNintegers1 ≤ Ai≤ 106, the kinds of plants in first furrow.The next  will containMintegers1 ≤ Bi≤     106, the kinds of plants in second furrow.OutputFor each test-case, print the maximum number of plants which could grow up.Example Input3 4\r\n3 4 5\r\n6 30 1 7Example Output5Example Input4 3\r\n2 2 10 32\r\n4 16 28Example Output4Example Input5 5\r\n2 6 12 15 18\r\n33 8 2 3 5Example Output5Example Input3 3\r\n2 27 9\r\n3 4 8Example Output4",
  "sample_input": "3 4\r\n3 4 5\r\n6 30 1 7",
  "sample_output": "5",
  "link": "https://www.spoj.com/problems/ADAPLNTS",
  "scraped_at": "2025-08-17 00:34:10",
  "test_cases": [
    {
      "input": "3 4\r\n3 4 5\r\n6 30 1 7",
      "expected_output": "5",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "8 1\n10 7 10\n9 7 2 4",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "9 5\n5 8 1\n10 1 9 10",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "8 10\n1 1 6\n7 3 5 2",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "99 89\n17 90 10\n99 13 70 51",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "86 30\n96 80 84\n15 31 91 52",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "57 94\n85 76 2\n55 50 53 27",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "83 91\n15 35 23\n87 8 77 61",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "97 13\n7 15 16\n54 34 51 93",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "470 130\n224 301 311\n186 53 489 64",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "74 281\n362 455 428\n293 132 447 338",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "120 341\n217 378 256\n186 420 393 90",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "428 395\n196 184 374\n75 101 457 50",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "347 359\n89 143 92\n358 494 350 249",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "253 367\n133 179 219\n62 199 461 300",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "290 295\n266 500 199\n196 261 76 228",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000\n1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000\n1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 2\n1 1 1000\n1 1000 1000 999",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 1000\n1 1 1\n2 999 999 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:22",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Help MR  BEAN",
  "tags": [],
  "text": "Mr. Bean loves to play games. For this he wastes lots of money so Mrs. Bean made a hurdle game for him. Now in the game we have 3 tracks and for moving up to next level he will have to cross some hurdles. Each time he changes the track he gets some drink to increase his energy level by that amount. The drink that he gets is the one which is in between the present track and the adjacent track and in the direction of movement (adjacent track may or may not be the track on which he is targeting to move). Now if at any moment his energy becomes negative his game will be over. So you have make him win this game with maximum energy being available with him at last. He will move in the form of 'L' and 'R' between adjacent tracks with 'L' making him move one step left of the present position and 'R' moving him right. Movement between different level will be separated by '-' and if there is no change of track between adjacent levels then print 'U' at its corresponding move.InputFirst line will have 3 integers Il, Ie, Ns where Il is the initial track on which he is standing, Ie is the initial energy he is having and Ns is the number of levels in the game. Then it would be followed by 5 lines where the first three will have the values of the hurdles present at each level on each track. Fourth line will have Ns-1 integers representing the energy obtained by him on drinking the energy drink between continuous levels between track 1 and 2 and similarly fifth line will have Ns-1 values for drinks between tracks 2 and 3.OutputPrint \"DONE IT!\" in first line and the steps taken by him in second line following the path which leads to maximum energy available with Mr. Bean beyond final track. If it is not possible print \"GAME OVER!\".ConstraintsEvery integer, intermediate values will fit in 32-bit integer.ExampleInput:1 6 53 2 9 16 34 0 7 26 11 7 3 30 98 19 8 310 3 6 4Output:DONE IT!RR-LL-RR-LL-R",
  "sample_input": "Input:1 6 53 2 9 16 34 0 7 26 11 7 3 30 98 19 8 310 3 6 4Output:DONE IT!RR-LL-RR-LL-R",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/BEANGAME",
  "scraped_at": "2025-08-17 00:34:09",
  "test_cases": [
    {
      "input": "1 6 53 2 9 16 34 0 7 26 11 7 3 30 98 19 8 310 3 6 4",
      "expected_output": "DONE IT!RR-LL-RR-LL-R",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2 3 8 8 4 5 5 7 6 6 10 8 10 2 2 6 3 10 5 10 1",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "1 4 9 9 6 4 10 2 2 1 8 9 9 10 8 7 1 8 1 8 1",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "10 7 8 10 10 9 1 6 1 2 8 6 5 5 10 9 7 4 7 1 3",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "11 69 89 47 4 31 99 57 15 1 1 68 30 31 9 56 64 31 54 23 85",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "69 18 98 69 78 81 31 29 15 58 14 89 72 30 43 93 31 84 11 48 20",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "16 36 8 97 51 22 23 13 2 62 24 68 18 11 59 86 54 39 34 44 51",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "13 13 39 13 6 84 83 98 92 52 5 77 32 56 25 83 60 69 48 87 22",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "42 15 55 91 24 24 74 32 74 72 18 71 69 50 44 4 74 73 3 41 70",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "79 349 238 296 444 397 165 204 246 337 232 258 344 93 128 142 316 140 479 402 274",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "383 261 123 207 297 115 377 338 117 170 443 244 186 489 104 492 358 217 461 394 394",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "389 349 288 69 388 260 390 86 201 356 154 109 152 199 102 476 469 129 414 321 451",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "416 309 292 272 229 208 273 455 462 152 450 333 343 92 421 292 222 263 105 298 451",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "233 76 197 351 445 424 190 484 110 304 419 148 58 308 278 332 466 420 494 345 79",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "252 373 218 135 478 187 261 175 68 271 338 419 426 274 162 80 291 309 91 318 272",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "213 306 104 75 370 239 232 240 278 123 72 347 85 375 94 239 402 339 79 207 419",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 2 999 2 1000 2 1 1 999 999 1000 1 2 1 999 2 1 2 1000 999 1000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 999 999 1 2 1000 2 1 999 1000 1000 2 1 1 999 1000 1000 1 1000 999 1000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:23",
  "total_test_cases": 20
}
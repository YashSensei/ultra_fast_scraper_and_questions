{
  "problem_code": "problems",
  "title": "First to meet the spaceship",
  "tags": [],
  "text": "A spaceship has been sighted heading towards Earth. For the entire time that humanity has been monitoring it, it has not altered its course, it only changed speed for unknown reasons. As such, all the possible places on Earth where the spaceship might end up landing form a straight line; depending on how much it changes speed, it will land at different times, meaning a different point on this line due to Earth's rotation.npeople want to be the first to meet the aliens - they picked a pointxion this line and wait at that point in their vehicle with speedvi. Now they are all anxiously waiting for the spaceship's arrival. NASA has given a list ofqmost likely locations where the spaceship might end up landing - and everyone wants to know who would get to be the first to meet the aliens if the spaceship landed at each of the given points. They turned to you for help!InputThe first line contains two integers1 ≤ n , q ≤ 300,000- the number of people wishing to meet the aliens and the number of possible points where the spaceship might land.The followingnlines contain two integers0 ≤ xi< 109and0 < vi≤ 109- the point on the line where thei-th person is waiting and the speed of his vehicle. Additionally,xi= xj→ vi≠ vj.The last line containsqdistinct integers0 ≤ qi< 109- the points on the line where the spaceship might end up landing. You may assume the spaceship will not land at any point containing a person waiting in a vehicle.OutputFor each queryqioutput the number of people who will arrive at the spaceship first if it lands at that point. A person atxjwith speedvjwill arrive atqiin time|xj- qi| /vj. The people who will arrive at the spaceship first are thosejfor whom the fraction is minimal out of all people. Then, in the same line, output the 1-based indices of these people as they were given in the input, sorted in ascending order.ExampleInput:4 7\r\n10 5\r\n30 1\r\n20 4\r\n100 1\r\n5 31 22 15 85 60 61Output:1 1\r\n1 2\r\n1 3\r\n1 1\r\n2 1 4\r\n2 1 3\r\n1 1",
  "sample_input": "Input:4 7\r\n10 5\r\n30 1\r\n20 4\r\n100 1\r\n5 31 22 15 85 60 61Output:1 1\r\n1 2\r\n1 3\r\n1 1\r\n2 1 4\r\n2 1 3\r\n1 1",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/MEETSHIP",
  "scraped_at": "2025-08-17 00:34:16",
  "test_cases": [
    {
      "input": "4 7\r\n10 5\r\n30 1\r\n20 4\r\n100 1\r\n5 31 22 15 85 60 61",
      "expected_output": "1 1\r\n1 2\r\n1 3\r\n1 1\r\n2 1 4\r\n2 1 3\r\n1 1",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1 10\n7 3\n9 3\n6 4\n10 10\n5 4 1 5 9 4 6",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "3 10\n3 9\n9 1\n2 2\n4 6\n4 8 1 10 4 3 5",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "5 6\n6 3\n2 1\n7 7\n3 9\n1 2 4 4 5 9 4",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "33 37\n60 50\n68 100\n3 90\n10 70\n63 16 10 11 82 48 11",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "40 43\n70 65\n20 38\n31 60\n22 23\n38 31 74 82 71 70 85",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "73 60\n13 55\n29 49\n95 84\n4 23\n36 49 89 90 63 9 25",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "31 85\n57 11\n96 15\n44 83\n21 80\n5 95 48 97 57 20 9",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "6 48\n18 2\n40 100\n45 34\n1 91\n4 98 82 60 97 89 41",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "404 92\n202 488\n148 186\n379 444\n409 203\n72 184 139 73 137 198 76",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "365 475\n181 444\n461 166\n76 174\n422 205\n316 187 457 156 80 147 310",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "258 213\n225 259\n388 376\n282 431\n234 387\n420 232 453 65 185 286 459",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "177 220\n219 73\n291 231\n79 367\n212 237\n109 286 394 453 237 249 330",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "138 413\n51 340\n61 420\n319 255\n439 451\n427 89 152 260 350 311 168",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "95 411\n227 218\n371 391\n331 179\n178 405\n191 471 256 387 460 72 409",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "415 445\n242 55\n387 236\n425 188\n453 87\n430 462 312 441 471 494 336",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 2\n999 1000\n1 2\n999 1\n2 999\n999 999 1000 999 1 1 1000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 1000\n2 2\n1 1000\n1 999\n2 1\n1000 999 999 2 1000 1000 999",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:22",
  "total_test_cases": 20
}
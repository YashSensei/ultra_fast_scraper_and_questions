{
  "problem_code": "problems",
  "title": "Gopu and Combinatorics on Graphs",
  "tags": [],
  "text": "Little Gopu was playing with graphs. He encountered following problem while playing.Given a graph G with n vertices and m edges. Let us say it has k connected components. Find out how many numbers of ways you can add k - 1 edges to make the graph connected. Note that the new edge you are going to add should not be a repeated edge i.e. if you are going to connect u, v then there should not be an edge between u, v already in the graph. Output the answer modulo 109+ 7.If the graph is already connected, Output -1Help Gopu with this task.InputFirst line contains T : number of test cases. (1 ≤ T ≤ 20)For each test case, First line contains two space separated integers n, m: (1 ≤ n, m ≤ 105).Then For each of the next m lines, each line contains two space separated integers u and v denoting that u and v are connected to each other. (1 ≤ u, v ≤ n and u ≠ v)OutputFor each test case, output the answer as required.ExampleInput:44 21 23 45 31 23 44 53 31 22 33 17 51 23 44 53 56 7Output:46-184",
  "sample_input": "Input:44 21 23 45 31 23 44 53 31 22 33 17 51 23 44 53 56 7Output:46-184",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/SPCE",
  "scraped_at": "2025-08-17 00:34:16",
  "test_cases": [
    {
      "input": "44 21 23 45 31 23 44 53 31 22 33 17 51 23 44 53 56 7",
      "expected_output": "46-184",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "7 7 4 2 7 2 8 3 8 7 4 2 5 6 10 6 7 2",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "5 10 8 5 5 6 7 3 2 8 4 2 7 4 3 3 10 6",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "9 3 3 6 9 8 10 3 7 2 7 1 5 6 2 3 5 9",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "40 16 42 82 24 90 39 48 29 85 86 23 83 93 51 27 76 79",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "12 29 42 90 28 41 41 90 28 22 37 16 95 16 6 77 91 86",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "48 48 73 63 1 34 2 77 17 99 57 9 33 31 58 6 23 42",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "81 46 39 17 41 12 45 63 31 25 88 74 7 32 41 6 40 38",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "93 28 16 85 38 24 68 19 53 36 8 75 51 11 10 46 92 39",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "441 344 413 332 282 188 442 77 468 252 304 488 262 85 433 121 130 476",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "258 366 51 476 195 477 230 362 105 233 221 417 345 75 236 150 468 310",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "496 104 309 482 487 485 387 151 366 238 343 162 227 439 219 289 189 369",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "269 50 413 331 416 221 164 206 239 429 494 479 85 175 105 262 253 473",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "266 197 499 288 430 220 218 452 395 120 79 462 142 454 297 302 157 337",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "92 82 201 140 398 129 481 110 376 58 260 479 94 382 416 80 290 377",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "454 371 146 296 121 343 353 282 335 350 324 396 414 420 352 133 446 294",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "999 1000 2 2 999 1 2 1000 2 999 2 2 999 1 1 1 1000 1000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 2 2 1000 999 1000 1000 999 1 1 1000 999 1 999 999 999 2 1000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:24",
  "total_test_cases": 20
}
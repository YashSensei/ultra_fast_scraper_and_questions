{
  "problem_code": "problems",
  "title": "Relations",
  "tags": [],
  "text": "You are given a directed graph, whose edges are labeled with relational symbols \r\n\t'<', '>' and '='. For a nonnegative integer k, a k-correct \r\n\tG-labeling is a mapping from vertices of G into integers from interval \r\n\t[0,k] such that numbers at the ends of each edge satisfy the relation described \r\n\tby the label of the edge. We assume that an element on the left side of the \r\n\trelational symbol is a number assigned to the initial vertex. Compute the \r\n\tsmallest k for which k-correct G-labeling exists or verify that such \r\n\tlabeling doesn't exist for any k.IllustrationFor the graph in the figure the smallest k = 2.TaskWrite a program that for each data set from a sequence of several data sets:reads a description of a graph G from the input file,verifies whether there exist an integer k for which it is possible to label G \r\n\t\tk-correctly and, if the answer is positive, computes the smallest such k,writes the result to the output file.InputThe first line of the input file contains one positive integer d not larger \r\n\tthan 10. This is the number of data sets. The data sets follow. Each data set \r\n\tis described in two consecutive lines of the input file. In the first line \r\n\tthere are two integers n and m separated by a single space. The number n is the \r\n\tnumber of vertices of G and m is the number of edges of G. Numbers n and m \r\n\tsatisfy the inequalities: 1 <= n <= 1000, 0 <= m <= 10000. The \r\n\tvertices are numbered with integers from 1 to n and are identified by these \r\n\tnumbers. There are no parallel edges and self-loops in the graph. (Two \r\n\tdifferent edges u1-> v1and u2-> v2are parallel iff u1= u2and v1= v2.) \r\n\tThere are 3m integers separated by single spaces in the second line. The \r\n\tnumbers at positions 3i-2 and 3i-1, 1 <= i <= m, are the ends of the i-th \r\n\tedge, the beginning and the end, respectively, whereas the number at position \r\n\t3i is a number from the set {-1,0,1} and it is the label of the i-th edge: -1 \r\n\trepresents '<', 0 represents '=' and 1 represents '>'.OutputFor the i-th data set, 1 <= i <= d, your program should write one \r\n\tword NO in the i-th line of the output file if a k-correct labeling doesn't \r\n\texist for any k, or the smallest integer k for which such a labeling exists.ExampleSample input:\r\n4 \r\n4 4 \r\n1 2 -1 2 3 0 2 4 -1 3 4 -1 \r\n2 2 \r\n1 2 -1 2 1 -1 \r\n2 2 \r\n1 2 -1 2 1 1 \r\n3 3 \r\n1 2 0 3 2 0 3 1 0 \r\n\r\nSample output:\r\n2 \r\nNO \r\n1 \r\n0",
  "sample_input": "Sample input:\r\n4 \r\n4 4 \r\n1 2 -1 2 3 0 2 4 -1 3 4 -1 \r\n2 2 \r\n1 2 -1 2 1 -1 \r\n2 2 \r\n1 2 -1 2 1 1 \r\n3 3 \r\n1 2 0 3 2 0 3 1 0 \r\n\r\nSample output:\r\n2 \r\nNO \r\n1 \r\n0",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/RELATS1",
  "scraped_at": "2025-08-17 00:33:44",
  "test_cases": [
    {
      "input": "Sample input:\r\n4 \r\n4 4 \r\n1 2 -1 2 3 0 2 4 -1 3 4 -1 \r\n2 2 \r\n1 2 -1 2 1 -1 \r\n2 2 \r\n1 2 -1 2 1 1 \r\n3 3 \r\n1 2 0 3 2 0 3 1 0 \r\n\r\nSample output:\r\n2 \r\nNO \r\n1 \r\n0",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "thjk wt\n4\n5 1\n1 7 6 4 5 1 6 7 2 9 1 2\n10 10\n2 3 4 10 3 10\n1 5\n3 3 10 9 9 5\n7 2\n1 6 7 3 6 9 4 1 6\ndmtsm islhmoo\n7\ntjix\n10\n1",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "thxl s\n4\n3 5\n1 2 8 9 4 4 9 3 5 4 2 1\n3 4\n3 10 6 8 1 10\n6 5\n1 8 7 10 8 6\n5 8\n8 1 1 8 7 7 6 2 10\nvbwwm acn\n6\nbd\n10\n10",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "bnuqkb vn\n4\n9 8\n5 8 4 4 6 7 3 8 8 8 9 10\n10 9\n5 9 10 8 10 2\n1 2\n7 9 5 10 9 10\n8 5\n5 7 9 3 9 4 8 1 9\nran pskqapx\n9\nukp\n4\n5",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "a kbcvk\n34\n80 35\n67 96 80 94 16 53 90 44 45 33 8 56\n4 61\n48 50 63 80 60 58\n28 47\n81 47 30 70 41 20\n55 21\n27 90 66 31 22 77 7 92 90\nnpnh bb\n53\ng\n15\n16",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "zkeiv z\n35\n67 59\n26 98 53 70 53 62 17 64 25 56 45 28\n32 99\n9 78 8 63 36 94\n73 14\n98 80 43 5 68 50\n66 28\n97 51 71 96 80 49 76 96 25\nrkrf jjg\n99\nwvxv\n40\n22",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "m ptnu\n22\n64 22\n36 88 89 42 31 86 91 73 10 55 65 7\n9 73\n2 9 44 72 74 54\n31 32\n50 75 61 8 98 88\n39 72\n7 81 33 44 9 99 99 39 23\nkfkhi p\n95\neq\n69\n21",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "wlgi fi\n23\n96 79\n1 18 34 55 96 95 93 15 46 98 17 43\n59 64\n46 18 8 15 97 81\n60 16\n52 5 59 48 14 62\n89 44\n53 78 16 15 23 66 53 71 95\nz ftnyjnw\n99\nz\n21\n30",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "urfjsf ejvpf\n27\n22 45\n34 57 30 16 63 58 36 50 12 56 70 35\n99 77\n89 2 23 81 19 17\n15 26\n3 13 65 59 45 9\n28 8\n30 4 36 94 97 48 47 32 54\ndl dyrmzhw\n29\nvrie\n87\n50",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "eyeqh mi\n401\n104 130\n106 333 191 76 316 303 117 191 201 276 204 465\n426 53\n69 379 163 387 490 412\n403 417\n102 84 351 351 123 162\n102 447\n392 249 369 333 359 107 402 431 343\nmdbn ieobir\n192\nz\n255\n480",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "xmc du\n247\n293 237\n180 285 267 161 145 226 128 219 185 124 200 363\n299 60\n136 159 155 106 257 446\n238 121\n192 98 209 189 363 178\n439 200\n310 290 267 97 351 321 316 375 498\nmjxzou cmars\n81\nu\n417\n428",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "jxe ac\n134\n294 293\n383 447 140 151 188 78 318 316 103 187 372 203\n330 249\n312 56 189 287 482 286\n397 341\n350 254 400 430 286 162\n487 247\n263 244 482 154 312 70 228 331 483\neytb ifa\n452\nu\n264\n465",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "iwzjd xij\n470\n72 274\n167 83 405 429 472 463 163 292 434 53 418 345\n140 225\n171 158 324 94 375 179\n153 62\n337 305 179 251 243 309\n92 141\n294 341 66 369 477 492 103 281 197\nhsn moiaya\n414\nb\n162\n183",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "kplf qz\n381\n119 398\n421 173 242 257 328 222 137 405 248 350 435 204\n223 349\n222 322 205 368 179 56\n139 96\n290 487 399 62 280 359\n426 426\n60 177 75 316 65 453 286 428 334\nduebyo ml\n214\nzs\n249\n340",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "jx kuguw\n96\n153 241\n398 55 382 457 89 490 87 365 435 369 469 422\n82 198\n132 102 165 321 310 173\n157 446\n88 241 189 166 355 130\n293 378\n284 428 115 299 176 376 236 479 181\njjyt nsz\n391\nuzl\n461\n344",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "axfe vh\n329\n235 253\n54 432 186 275 263 292 315 181 460 254 425 98\n403 260\n59 300 175 266 428 235\n274 477\n415 137 200 66 388 266\n402 239\n53 340 430 472 476 396 207 84 139\ndtu djco\n208\nnicg\n342\n167",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "oijyp rwnn\n1000\n1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000\n1000 1000 1000 1000 1000 1000\n1000 1000\n1000 1000 1000 1000 1000 1000\n1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000\nfmp xs\n1000\nv\n1000\n1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "zsumh xq\n1000\n1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000\n1000 1000 1000 1000 1000 1000\n1000 1000\n1000 1000 1000 1000 1000 1000\n1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000\najqzr qajwgnn\n1000\nvcyu\n1000\n1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "dk grw\n1\n1000 2\n1000 1000 2 1000 2 1000 1000 999 1000 2 2 1000\n2 2\n2 999 1 2 1000 999\n999 1000\n999 2 1000 2 999 1000\n999 999\n1000 1 1 2 1000 2 999 999 1000\nooc dhijcq\n2\nyhg\n1000\n1000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "oobg qqhl\n2\n1000 1\n999 999 1000 999 1 1000 1000 1 1000 2 2 1\n999 2\n999 1 2 2 1 1\n2 1000\n1 1 999 2 1 2\n1 1\n1 1 999 1 1000 1000 999 2 999\nxs wbyibjv\n1\neae\n1000\n1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:18",
  "total_test_cases": 20
}
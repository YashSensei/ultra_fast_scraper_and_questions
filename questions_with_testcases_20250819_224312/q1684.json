{
  "problem_code": "problems",
  "title": "Self Numbers",
  "tags": [],
  "text": "BackgroundIn 1949 the Indian mathematician D.R. Kaprekar discovered a class of numbers calledself-numbers. For any positive integern, defined(n)to benplus the sum of the digits ofn. (Thedstands fordigitadition, a term coined by Kaprekar.) For example:d(75) = 75 + 7 + 5 = 87Given any positive integer n as a starting point, you can construct the infinite increasing sequence of integersn, d(n), d(d(n)), d(d(d(n))), ...For example, if you start with 33, the next number is 33 + 3 + 3 = 39, the next is 39 + 3 + 9 = 51, the next is 51 + 5 + 1 = 57, and so you generate the sequence33, 39, 51, 57, 69, 84, 96, 111, 114, 120, 123, 129, 141, ...The numbernis called ageneratorofd(n). In the sequence above, 33 is a generator of 39, 39 is a generator of 51, 51 is a generator of 57, and so on.Some numbers have more than one generator: For example, 101 has two generators, 91 and 100. A number with no generators is aself-number. There are thirteen self-numbers less than 100: 1, 3, 5, 7, 9, 20, 31, 42, 53, 64, 75, 86, and 97.ProblemWrite a program to output all positive self-numbers less than 1000000 in increasing order, one per line.InputThere is no input.OutputAll positive self-numbers less than 1000000 in increasing order, one per line.",
  "sample_input": "d(75) = 75 + 7 + 5 = 87",
  "sample_output": "33, 39, 51, 57, 69, 84, 96, 111, 114, 120, 123, 129, 141, ...",
  "link": "https://www.spoj.com/problems/MCUR98",
  "scraped_at": "2025-08-17 00:33:31",
  "test_cases": [
    {
      "input": "d(75) = 75 + 7 + 5 = 87",
      "expected_output": "33, 39, 51, 57, 69, 84, 96, 111, 114, 120, 123, 129, 141, ...",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3 3 6 3 6\nat ntx 1 trumx 5 ynej 2 sem 4",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "2 6 7 10 7\nyvtm j 9 hz 10 mmgt 10 sxhb 6",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "8 4 2 1 4\nhc x 8 bpy 10 e 6 z 4",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "74 84 33 7 100\nm nqimt 73 r 41 wiao 45 sqv 24",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "5 65 47 9 85\nzmuf ipvr 84 xiwjd 88 bngm 6 r 59",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "12 82 3 89 23\nl acbn 5 phht 1 gxgs 22 xech 97",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "42 29 93 24 77\nzheds agf 54 jxfi 62 hazd 64 ryc 88",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "20 97 74 2 41\nvaq krihh 95 zlhj 13 wqdtl 32 md 78",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "54 247 486 53 399\np ex 170 c 235 pd 490 jhcj 489",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "437 403 105 182 269\nd lk 432 iu 82 cec 61 ar 87",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "413 464 443 273 83\nazvz fgo 71 hcx 435 hzy 292 yugt 397",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "486 299 225 363 472\nmghmj swq 428 dbxv 216 yo 481 klimd 453",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "246 65 427 472 171\njfspr bun 118 kgwo 82 rve 153 jl 358",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "344 384 283 151 229\nksiyr htym 310 tjfw 186 y 465 pr 482",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "167 397 400 62 379\nxt irfep 214 q 409 azubz 250 usr 347",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000\nfixc cif 1000 abhq 1000 kyg 1000 ulfpf 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000\nauk seul 1000 ybp 1000 ur 1000 t 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "999 1000 2 2 1\na qa 1000 sgn 999 seql 999 ycw 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 999 999 1000 999\nggcjp vbz 1 ajrv 1000 jtx 1 dkpcn 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:18",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Phony Primes",
  "tags": [],
  "text": "You are chief debugger for Poorly Guarded Privacy, Inc. One of the top\r\nselling product, ReallySecureAgent©, seems to have a problem with\r\nits prime number generator. It produces from time to time bogus primes\r\nN.After a while, you realize that the problem is due to the way primes\r\nare recognized. Every phony prime N you discover can be characterized as follows. It is\r\nodd and has distinct prime factors, sayN = p1× p2× ...  × pkwithpi≠ pjwhere the number k of factors is at least 3.Moreover, for all i = 1..k, pi- 1 divides N - 1. For instance,561 = 3 × 11 × 17is a phony prime.Intrigued by this phenomenon, you decide to write a program that\r\nenumerates all such N's in a given interval[Nmin, Nmax]with1 ≤ Nmin< Nmax< 231, \r\nNmax- Nmin< 106.Please note, that the source code limit for this problem is 2000 bytes to avoid precalculated tables.InputEach test case contains one line. On this line are written two\r\nintegers Nminand Nmaxseparated\r\nby a blank. The end of the input is signalled by a line containing two\r\nzeros. The number of test cases is approximately 2000.OutputFor each test case, output the list of phony primes in increasing order, one per line. If there are no phony primes in the interval, then simply output none on a line.ExampleInput:10 2000\r\n20000 21000\r\n0 0Output:561\r\n1105\r\n1729\r\nnone",
  "sample_input": "Input:10 2000\r\n20000 21000\r\n0 0Output:561\r\n1105\r\n1729\r\nnone",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/PHONY",
  "scraped_at": "2025-08-17 00:33:07",
  "test_cases": [
    {
      "input": "10 2000\r\n20000 21000\r\n0 0",
      "expected_output": "561\r\n1105\r\n1729\r\nnone",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3 5\n1 7\n3 9",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "9 5\n7 6\n3 2",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "3 9\n5 3\n2 1",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "23 70\n54 73\n51 10",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "92 35\n27 30\n37 85",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "55 98\n93 34\n47 38",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "78 84\n77 75\n21 90",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "56 1\n41 68\n82 38",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "195 193\n338 127\n242 191",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "431 216\n141 357\n441 471",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "77 332\n143 163\n197 364",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "439 489\n235 132\n277 403",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "464 487\n131 249\n124 395",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "84 464\n277 117\n332 297",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "326 469\n160 439\n157 416",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 999\n999 1\n1000 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1000 1000\n2 1000\n1 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:13",
  "total_test_cases": 20
}
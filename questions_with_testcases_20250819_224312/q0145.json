{
  "problem_code": "problems",
  "title": "Maximum Subset of Array",
  "tags": [],
  "text": "Given an array find the sum of the maximum non-empty subset of the array and also give the count of the subset. A subset of an array is a list obtained by striking off some (possibly none) numbers.A non-empty subset implies a subset with at least 1 element in it.InputFirst line contains an integer T which is the number of integers. Following this T-cases exist.Each case starts with a line containing an integer n which is the number of elements in the array.The next line contains n-integers which contain the value of this subset.ConstraintsT ≤ 20n ≤ 50,000Each element in the array ≤ 1,000,000,000OutputFor each test case output the value of the maximum subset and the count of the subsets modulo 1000,000,009ExampleInput:2\r\n5\r\n1 -1 1 -1 1\r\n6\r\n-200 -100 -100 -400 -232 -450Output:3 1\r\n-100 2",
  "sample_input": "Input:2\r\n5\r\n1 -1 1 -1 1\r\n6\r\n-200 -100 -100 -400 -232 -450Output:3 1\r\n-100 2",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/MAXSUB",
  "scraped_at": "2025-08-17 00:33:10",
  "test_cases": [
    {
      "input": "2\r\n5\r\n1 -1 1 -1 1\r\n6\r\n-200 -100 -100 -400 -232 -450",
      "expected_output": "3 1\r\n-100 2",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4\n8\n10\n9\n1",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n7",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n2",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "12\n34779347\n14507496\n46022637\n74308623\n63455831\n24683674\n89508685\n47653372\n10525501\n74549202\n97434182\n29753908",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "16\n59623088\n96019269\n10711156\n60078619\n56339467\n36616844\n69121515\n19914849\n63220179\n44607912\n13673412\n60864878\n30174805\n13316448\n85968280\n36048157",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "5\n57435154\n54161452\n2377853\n49408303\n54554851",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "9\n75344879\n16370558\n86852854\n95247139\n8933123\n24265833\n86432350\n3367466\n42966920",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "9\n66915226\n16577747\n46806521\n19351240\n65686608\n90636036\n80807268\n62876806\n15366073",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "45\n37035\n89564\n7610\n23587\n45723\n13754\n54395\n57443\n87524\n94918\n38258\n10271\n15703\n1606\n96882\n43252\n21370\n29818\n24875\n13406\n18499\n67167\n37535\n76688\n69813\n31454\n73894\n8041\n63600\n33918\n28315\n61911\n70646\n46154\n17999\n9048\n49632\n88190\n33785\n12419\n72647\n3543\n83967\n1268\n98026",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "48\n47163\n13770\n76895\n13501\n62564\n69517\n17755\n31090\n19199\n40259\n61867\n23978\n40857\n60507\n40892\n38630\n95604\n28326\n6194\n60871\n67972\n1744\n33065\n64942\n40192\n85765\n86924\n4466\n28391\n59274\n7792\n2800\n6416\n82398\n58997\n48088\n99188\n63924\n47103\n17501\n72850\n78602\n21464\n83505\n79116\n63527\n30820\n82225",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "48\n93167\n17106\n39320\n98651\n75730\n26880\n39713\n72132\n56535\n21798\n29436\n68397\n63087\n57112\n59934\n48627\n24031\n3494\n24639\n61375\n10837\n98435\n25346\n60442\n55296\n78301\n75065\n76240\n53206\n34476\n9313\n96118\n67948\n98758\n72246\n39552\n20886\n68692\n2669\n15547\n8989\n41506\n31963\n3303\n47278\n20313\n97432\n15108",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "43\n72737\n24458\n17565\n55904\n22419\n58029\n48133\n89343\n99598\n2446\n49888\n79185\n51012\n60541\n36413\n32333\n22992\n53055\n34312\n2047\n37817\n28054\n35677\n66078\n29787\n21068\n88639\n7722\n61719\n13088\n49633\n64983\n13919\n73366\n26556\n45934\n81533\n1525\n79936\n51159\n24874\n2379\n46142",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "27\n88524\n53982\n94053\n2523\n23576\n27469\n71527\n88521\n68639\n72340\n63991\n61492\n54522\n40789\n50104\n81961\n44007\n22457\n20061\n1545\n82863\n31069\n89523\n98295\n97426\n33565\n29357",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "34\n23237\n84944\n45404\n46114\n48169\n58817\n60843\n69100\n84552\n63360\n67246\n53827\n44591\n60623\n65976\n30152\n43355\n87335\n46853\n47154\n13653\n10746\n96972\n76468\n23584\n14803\n47214\n39325\n97774\n32806\n85097\n9159\n56178\n59659",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "22\n80406\n86575\n89000\n63023\n37335\n8484\n62708\n45437\n97829\n57607\n95508\n66734\n71411\n47405\n67498\n23510\n95991\n8919\n26890\n11307\n14418\n36004",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "50\n13708209\n19344969\n64822156\n8114235\n20558447\n77570676\n14241355\n1313870\n69485502\n13835965\n76310885\n69975836\n67947179\n19516671\n43541729\n45553435\n84608416\n96610075\n72342872\n66137281\n65059203\n172990\n52498189\n63339571\n6212176\n63061459\n95345974\n7672296\n4005657\n32160835\n29994050\n10774630\n99494166\n87957220\n48378784\n85629687\n22975855\n77274307\n639526\n21995091\n79213655\n21912709\n63447002\n51555698\n7609211\n82997689\n51877094\n70621339\n86469184\n90000943",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 50)"
    },
    {
      "input": "50\n57407524\n71727649\n75604621\n92810750\n9149423\n59455638\n96379915\n37178448\n84116585\n2329240\n27785360\n73157706\n64517559\n34872058\n39976634\n96788741\n45538139\n17364138\n31643838\n45914791\n51155356\n46259312\n27321389\n76167593\n43354681\n70330692\n73367380\n17600122\n70947252\n95167512\n29341892\n31443414\n49983384\n77158536\n19135949\n31477205\n17589135\n57573408\n54744259\n95356705\n45892274\n19297961\n44195446\n1711182\n74204414\n37563547\n43577351\n48672844\n16729209\n85374274",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 50)"
    },
    {
      "input": "50\n1\n43675360\n58186550\n18819316\n37624968\n46400198\n1\n72148530\n100000000\n100000000\n1\n50562695\n78902415\n24159049\n96956697\n100000000\n100000000\n100000000\n100000000\n100000000\n100000000\n52215404\n100000000\n100000000\n100000000\n100000000\n1\n1\n100000000\n34971753\n59026148\n38266080\n1\n91398905\n100000000\n100000000\n47794808\n100000000\n1\n100000000\n1\n41281254\n100000000\n1\n33069122\n1\n100000000\n1\n13444983\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 50)"
    },
    {
      "input": "50\n1\n100000000\n99079718\n100000000\n100000000\n1\n100000000\n82676904\n100000000\n99578890\n100000000\n100000000\n1\n100000000\n1\n100000000\n1\n100000000\n28615907\n93155364\n59966837\n40736112\n16562333\n1\n96342452\n100000000\n100000000\n86419331\n36944377\n100000000\n1\n100000000\n41073722\n100000000\n1\n1\n19020622\n100000000\n100000000\n100000000\n28051839\n1\n1\n1\n77784912\n1\n6249751\n70809073\n100000000\n1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 50)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:13",
  "total_test_cases": 20
}
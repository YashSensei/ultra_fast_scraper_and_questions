{
  "problem_code": "problems",
  "title": "Scuba diver",
  "tags": [],
  "text": "A scuba diver uses a special equipment for diving. He has a cylinder with two containers: one with oxygen and the other with nitrogen. Depending on the time he wants to stay under water and the depth of diving the scuba diver needs various amount of oxygen and nitrogen. The scuba diver has at his disposal a certain number of cylinders. Each cylinder can be described by its weight and the volume of gas it contains. In order to complete his task the scuba diver needs specific amount of oxygen and nitrogen. What is the minimal total weight of cylinders he has to take to complete the task?ExampleThe scuba diver has at his disposal 5 cylinders described below. Each description consists of: volume of oxygen, volume of nitrogen (both values are given in litres) and weight of the cylinder (given in decagrams):3 36 120\r\n10 25 129\r\n5 50 250\r\n1 45 130\r\n4 20 119If the scuba diver needs 5 litres of oxygen and 60 litres of nitrogen then he has to take two cylinders of total weight 249 (for example the first and the second ones or the fourth and the fifth ones).TaskWrite a program that for each test case:reads scuba diver's demand for oxygen and nitrogen, the number of accessible cylinders and their descriptions;computes the minimal total weight of cylinders the scuba diver needs to complete his task;outputs the result.Note:the given set of cylinders always allows to complete the given task.InputThe number of test casescis in the first line of input, thenctest cases follow separated by an empty line.In the first line of a test case there are two integerst,aseparated by a single space, 1 ≤t≤ 21 and 1 ≤a≤ 79. They denote volumes of oxygen and nitrogen respectively, needed to complete the task. The second line contains one integern, 1 ≤n≤ 1000, which is the number of accessible cylinders. The followingnlines contain descriptions of cylinders;i-th line contains three integersti,ai,wiseparated by single spaces, (1 ≤ti≤ 21, 1 ≤ai≤ 79, 1 ≤wi≤ 800). These are respectively: volume of oxygen and nitrogen in thei-th cylinder and the weight of this cylinder.OutputFor each test case your program should output one line with the minimal total weight of cylinders the scuba diver should take to complete the task.ExampleSample input:1\r\n5 60\r\n5\r\n3 36 120\r\n10 25 129\r\n5 50 250\r\n1 45 130\r\n4 20 119Sample output:249",
  "sample_input": "3 36 120\r\n10 25 129\r\n5 50 250\r\n1 45 130\r\n4 20 119",
  "sample_output": "Sample input:1\r\n5 60\r\n5\r\n3 36 120\r\n10 25 129\r\n5 50 250\r\n1 45 130\r\n4 20 119Sample output:249",
  "link": "https://www.spoj.com/problems/SCUBADIV",
  "scraped_at": "2025-08-17 00:33:17",
  "test_cases": [
    {
      "input": "3 36 120\r\n10 25 129\r\n5 50 250\r\n1 45 130\r\n4 20 119",
      "expected_output": "Sample input:1\r\n5 60\r\n5\r\n3 36 120\r\n10 25 129\r\n5 50 250\r\n1 45 130\r\n4 20 119Sample output:249",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "10 3 10\n1 5 6\n5 10 8\n1 4 9\n7 10 7",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "5 1 1\n8 1 3\n7 4 7\n7 3 6\n8 10 2",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "8 2 4\n10 5 6\n4 6 10\n10 2 6\n4 2 1",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "48 61 22\n1 90 78\n78 35 34\n83 87 18\n58 73 36",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "83 64 85\n66 69 21\n74 6 75\n64 9 34\n65 64 34",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "12 89 68\n13 22 28\n63 91 39\n94 62 33\n10 5 12",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "74 15 32\n50 44 41\n36 60 85\n40 51 36\n6 45 6",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "63 73 32\n91 85 35\n34 65 43\n11 100 35\n53 32 75",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "320 346 432\n282 402 240\n55 220 339\n433 183 381\n362 425 388",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "443 406 147\n149 256 344\n53 388 295\n327 426 193\n214 220 417",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "188 166 92\n193 85 431\n129 404 109\n56 358 337\n185 145 455",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "131 363 368\n158 127 491\n294 473 472\n211 226 74\n317 346 81",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "376 189 422\n338 131 446\n397 208 250\n310 346 213\n208 250 410",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "152 158 467\n378 316 481\n119 227 177\n272 486 391\n470 148 70",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "428 113 294\n77 471 271\n362 210 363\n489 61 113\n490 245 253",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1 1\n1 2 1\n1000 2 1000\n999 999 2\n1 1 999",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "999 1 2\n999 2 1000\n1 1000 1000\n1 1 1\n999 999 999",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:13",
  "total_test_cases": 20
}
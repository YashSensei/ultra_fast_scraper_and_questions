{
  "problem_code": "problems",
  "title": "Cake Walk",
  "tags": [],
  "text": "In a country called STI Countries (STI stands for Super Toxicity Inc.), there is one day dedicated for the people to do everything they want. This day is called FREE DAY. Of course they must keep their activities not to violate the law. For example, everything that lead to criminality is forbidden because it violates the law.The president of STI Countries is very excited toFREE DAY. For him, being a president made him as the busiest man in the world, so holiday is almost impossible for him, even Sunday. But, FREE DAY gives him a chance to feel freedom from all of his duty as the president.For this FREE DAY, president and his family want to make a party. This party is called Cake Walk Party. As it namesake, this party will have relation with cakes. So, president needs a talented baker for the best cakes he want. Then, the president called Brembo, the best baker in the country. Called by the president, the baker will make sure the cakes he made would impress the president. The president will orderTcakes,with every of them is different type. To make a cake, Brembo needsMpackage of ingredients. The type of a cake will be represented by a number that isN. After doing some experiments, he finds a good formula to make the ingredients of cake with typeN. He called this F(N).He writes the formula F(N) as F(N) = F(1) + F(2) + F(3) + F(4) + ... + F(N-1) with F(1) = M.Normally, the cake with type N, will be priced C(N) in dollars, where C(N) = M + N + F(N). But, because today is a special day plus he is doing job for the president, the way of pricing a cake is different than before. He makes rules as the following :From C(N), find all special factor of C(N).Because Brembo is not good at explaining, Brembo defines special factor of a number with examples. For example 24, the special factors are 23and 3. For 15, special factors are 3 and 5. And so on.Then, the price of the cake will be taken from factor with the highest value. So, from the example above, 24 will be priced 3 instead.So far, 15 will be priced 5 instead.Considering the results of C(N) can be very large, he does C(N) mod 1000000007 for every C(N) he calculates, then factorize it. As the assistant of Brembo, you need to calculate the total cost that president must pay for theTcakes he orders. Because this task will be exhausting, you build a program to make the calculation faster.InputThe first line of input consist of two integers,TandMseparated by space. T represents the number of cake that The President will order and M represents the package of ingredients. (1 ≤ T ≤ 100 and 1 ≤ M ≤ 1000000)The next T lines each contain one integerNi, representing the type number of cake i. (1 ≤ Ni≤ 1000000)OutputPrint the total cost that The President must pay using the following format : \"The President needs to pay (total) dollar(s)\" without quotes.Please, take a look to example.ExampleInput:3 11\r\n2\r\n3\r\n4Output:The President needs to pay 65 dollar(s)",
  "sample_input": "Input:3 11\r\n2\r\n3\r\n4Output:The President needs to pay 65 dollar(s)",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/CKEWLK",
  "scraped_at": "2025-08-17 00:33:31",
  "test_cases": [
    {
      "input": "3 11\r\n2\r\n3\r\n4",
      "expected_output": "The President needs to pay 65 dollar(s)",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5 8\n9\n1\n9",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "9 2\n9\n4\n2",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "5 3\n2\n7\n2",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "85 52\n65\n53\n23",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "92 68\n52\n15\n15",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "25 93\n49\n37\n21",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "99 25\n33\n92\n85",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "20 22\n12\n43\n66",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "142 414\n86\n204\n236",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "56 474\n95\n214\n127",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "225 131\n135\n171\n291",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "368 192\n177\n107\n132",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "423 496\n493\n303\n171",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "407 122\n115\n70\n384",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "497 112\n337\n101\n368",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000\n1000\n1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000\n1000\n1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 1000\n1000\n2\n1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 999\n1000\n1\n1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:17",
  "total_test_cases": 20
}
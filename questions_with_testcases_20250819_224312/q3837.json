{
  "problem_code": "problems",
  "title": "Erdos et al",
  "tags": [],
  "text": "Paul Erdös was a Hungarian mathematician of the 20th century who reached the highest levels of recognition. So much so that it is considered an honour not only having written an article with him, but also having shared authorship of a publication with one of his co-authors. Moreover, writing an article with someone who wrote an article with someone who wrote an article with Erdös is an important aspiration of many young researchers.A natural consequence of such honours assignment, at least within the context of formal sciences, is the emergence ofErdös numbers. Erdös is the only person with an Erdös number of0, and for any other personp, his/her Erdös numbernis defined by the shortest sequence of articlesa1, ... , ansuch that Erdös is one of the authors of articlea1,pis one the authors of articlean, and every pair of consecutive articlesaiandai+1(fori = 1, 2, ..., N-1) have at least one author in common. If no sequence of articles linking Erdös andpexists, we shall say thatp's Erdös number isundefined.Your task in this problem is to compute Erdös numbers based only on a corpus of articles and authors given as input. Unfortunately, current science demands scientists to increase very rapidly the number of articles they write, causing both the total number of articles and the number of authors per article to be huge. Of course, this reality is an obstacle that a correct solution to this problem should be able to handle.InputThe first line contains two integersAandN, whereArepresents the number of articles in the corpus to be analysed andNthe number of people who appear in it (where2 ≤ A, N≤105). People are identified with integers between1andN, and Erdös will always be the person identified with number1.Each of the followingAlines describes an article. Each of these lines begins with an integerCrepresenting the number of authors of the article (2≤C≤105), and then there areCdistinct integersP1, P2, ... , PCrepresenting the identifiers of the authors of the article (1≤Pi≤Nfori = 1, 2, ... , C). The sum of the number of authors over all articles does not exceed105.OutputFor each test case you must print three integersD,MandS, whereDrepresents the number of people on the corpus who have a well-defined Erdös number,Mis the maximum Erdös number of one of those people andSis the sum of all the Erdös numbers belonging to people who have a well-defined Erdös number.Example 1Input:3 5\r\n2 1 5\r\n3 5 2 3\r\n3 3 2 4Output:5 3 8Example 2Input:5 11\r\n2 10 11\r\n4 1 3 5 7\r\n6 2 3 4 5 6 7\r\n4 3 5 7 9\r\n3 8 1 5Output:9 2 12Example 3Input:6 31\r\n9 1 2 3 15 20 25 30 9 10\r\n10 2 25 7 9 3 11 12 13 14 4\r\n10 11 12 13 14 4 16 17 18 19 5\r\n2 5 7\r\n9 21 22 23 24 26 27 28 29 7\r\n3 22 6 21Output:29 4 63",
  "sample_input": "Input:3 5\r\n2 1 5\r\n3 5 2 3\r\n3 3 2 4Output:5 3 8",
  "sample_output": "Input:5 11\r\n2 10 11\r\n4 1 3 5 7\r\n6 2 3 4 5 6 7\r\n4 3 5 7 9\r\n3 8 1 5Output:9 2 12",
  "link": "https://www.spoj.com/problems/TAP2014E",
  "scraped_at": "2025-08-17 00:34:34",
  "test_cases": [
    {
      "input": "3 5\r\n2 1 5\r\n3 5 2 3\r\n3 3 2 4",
      "expected_output": "5 3 8",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5 11\r\n2 10 11\r\n4 1 3 5 7\r\n6 2 3 4 5 6 7\r\n4 3 5 7 9\r\n3 8 1 5",
      "expected_output": "9 2 12",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "4 8\n9 4 8\n1 2 10 5\n4 8 9 6",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "2 9\n6 1 1\n6 3 7 6\n3 2 3 6",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "6 9\n6 3 7\n10 7 4 1\n6 3 5 4",
      "expected_output": "To be computed",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "39 39\n93 53 71\n75 46 57 79\n50 91 31 26",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "99 35\n13 43 29\n79 84 4 35\n95 67 19 72",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "39 80\n5 59 24\n65 24 9 82\n68 81 51 36",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "21 27\n71 87 89\n63 38 32 8\n21 59 62 95",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "15 89\n70 32 65\n94 84 39 65\n56 73 3 53",
      "expected_output": "To be computed",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "14 39\n7 32 5\n52 29 50 18\n28 52 33 19",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "8 44\n32 24 10\n34 33 45 22\n11 24 28 51",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "10 48\n32 7 21\n10 50 17 31\n52 52 16 19",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "6 19\n47 35 49\n34 50 46 42\n38 20 14 15",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "39 42\n51 36 32\n40 26 18 49\n45 48 38 28",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "10 51\n15 52 31\n52 14 24 44\n38 7 30 23",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "12 18\n51 47 12\n22 52 5 34\n45 7 20 7",
      "expected_output": "To be computed",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "105 105\n105 105 105\n105 105 105 105\n105 105 105 105",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "105 105\n105 105 105\n105 105 105 105\n105 105 105 105",
      "expected_output": "To be computed",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "1 2\n105 105 105\n2 104 105 2\n105 1 105 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:25",
  "total_test_cases": 20
}
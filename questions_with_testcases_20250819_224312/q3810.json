{
  "problem_code": "problems",
  "title": "Alia and 3 Khans",
  "tags": [],
  "text": "3 KHANS of Bollywood are planning to work together in a film called \"Three Khans\". Aamir (being perfect :P) wants the Alia to be a main lead. But Alia (being very famous :P) is confused that whether to work in a film or not. So they all have decided to play a game called \"Filmy Sequence\".According to this game, Aamir will give any number to Alia to play with it. Alia has to find two other numbers using it. Those two numbers represent Stardom of Salman and Srk. These two numbers should be found in such a way so that both numbers will have same number of set ('1') bits in their binary representation as Aamir's number contains. One thing is also need to be checked that Salman's number should be just next greater number to Aamir's number and Srk's number should be just next smaller number to Aamir's number (i.e. in a order of their Stardom :P). They all have decided that if this \"Filmy Sequence\" forms a G.P (Geometric Progression) then Alia has to be in the favour of movie else not. Alia needs your help to find the probability that she will work in a film and she also wants to find the mean of the Stardom of Salman over Srk.Note: All the three numbers should be positive and in a range up to 32 bits, and if not possible assume -1. (i.e if particular number is not possible with respect to Aamir's number, assume it as -1).InputThe first line will have a number of numbers that Aamir will give (t) next t lines will have Aamir's number (n).OutputPrint the asked probability and mean. Any results within 10-6absolute error will be accepted.Constraintst ≤ 10000000 ≤ n ≤ 1000000ExampleInput 1:3\r\n1\r\n2\r\n3Output 1:0.333333 4.000000Input 2:2\r\n5\r\n6Output 2:0.000000 3.500000ExplanationCase 2 : 5 → 3, 5, 6 and 6 → 5, 6, 9 are the required numbers.",
  "sample_input": "Input 1:3\r\n1\r\n2\r\n3Output 1:0.333333 4.000000",
  "sample_output": "Input 2:2\r\n5\r\n6Output 2:0.000000 3.500000",
  "link": "https://www.spoj.com/problems/KHANS",
  "scraped_at": "2025-08-17 00:34:36",
  "test_cases": [
    {
      "input": "Input 1:3\r\n1\r\n2\r\n3Output 1:0.333333 4.000000",
      "expected_output": "Input 2:2\r\n5\r\n6Output 2:0.000000 3.500000",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "7 10\neqwwp stybq\n1\n5\n7 4 7 6\npbsjzl lbqnwsa kctqalbw",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "4 10\ngydco jnjnn\n4\n9\n3 2 5 3\na jmjz aoall",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "8 6\njvt ije\n6\n7\n4 5 5 6\nigf tvx ydxlm",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "75 48\ntswt d\n82\n33\n96 94 90 7\nddibsd dctahv pskmocu",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "94 51\nerpkg mfefo\n64\n7\n97 56 53 13\nxavbaqm ldtrntlzg dzmev",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "18 35\nhj nvou\n94\n62\n65 57 11 7\nysqb kvk ltf",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "23 49\njtu jczvu\n79\n86\n26 44 40 57\nmbqkva mgbn vil",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "25 33\nuw f\n38\n77\n95 89 6 42\newhrt lfksdof dnyjg",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "446449 477878\no vev\n376907\n292306\n82617 364452 165791 407027\nqzagidk dpunsvknjw yqpynjp",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "176816 426063\nlwpy h\n97470\n440221\n237970 471127 104236 236866\nls awzlde h",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "149718 218366\nvjoe milro\n281214\n450981\n268971 408792 424507 103351\nd qvdaim hha",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "87329 348832\nagvdc i\n428305\n206857\n434581 318813 86460 453844\nddmrlfo eluetjxmz wdq",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "474598 377173\nqttv hfx\n120671\n268185\n126632 58985 228548 106026\ns wrrcyble ypjt",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "229523 386706\nmmaxw nz\n90710\n227916\n141829 420428 315536 427119\nl kiajmybqzh wb",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "406043 438148\nh dmut\n192557\n392224\n450199 357402 385385 382551\nvmsj sveojiz hvkttyfs",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000000 1000000\nst ajljv\n1000000\n1000000\n1000000 1000000 1000000 1000000\nfdglzwh jsmhj qwlzf",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000000 1000000\nslesj tri\n1000000\n1000000\n1000000 1000000 1000000 1000000\nomwkzj gruol nwrpd",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "999999 2\njj xk\n2\n999999\n999999 1 2 999999\nsf kmru kzvua",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 2\nm akhcv\n999999\n1\n1 1000000 1 1\nbymj tlrs u",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:25",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Feanor The Elf",
  "tags": [],
  "text": "Feanor is an elf, and of course, he really likes arrows and bows. Surprisingly enough, Feanor has a laptop, but he knows nothing about programming, so he requires your help.Feanor lives in a tower of height H, and he loves throwing arrows from the top of it. He had a good amount of intensive training and he knows that he always throws his arrows with the same initial speed V. He wants you to make a program that given H and V returns the maximum distance that a Feanor’s arrow can reach when it hits the ground, measured from the base of the tower. With this information, he will be able to place a nice circular fence to prevent disoriented little elves from being killed. Newtonian laws apply in Feanor’s world and the gravity has the same strength as in ours. These laws can be summarized as follows:The position of Feanor is assumed to be a point. The same occurs with the position of his arrow at each moment in time.The initial speed V of the arrow can be expressed as Vx2+ Vy2= V2, where Vx and Vy are the horizontal and vertical components of V , respectively. Speed Vx is always non- negative, while speed Vy is positive if the arrow is thrown up, and negative if the arrow is thrown down.The initial position of the arrow is the position of Feanor.The horizontal position of the arrow (relative to Feanor’s position) at time t is x(t) = Vx * t.The vertical position of the arrow (relative to Feanor’s position) at time t is y(t) = Vy * t − gt2/ 2, where g = 9.8 m/s2.InputThe input contains several test cases. Each test case is described in a single line that contains two integers V and H separated by a single space. The value V is the initial speed of Feanor’s arrow measured in m/s (0 ≤ V ≤ 1000), while the value H is the tower’s height in meters (0 ≤ H ≤ 1000). The last line of the input contains the number −1 twice separated by a single space and should not be processed as a test case.OutputFor each test case output a single line with the radius of Feanor’s fence in meters, rounded up to 6 decimal digits (he wants to be sure that he doesn’t kill those cute little elves).ExampleInput:1 0\r\n10 0\r\n100 0\r\n1000 0\r\n-1 -1Output:0.102041\r\n10.204082\r\n1020.408163\r\n102040.816327",
  "sample_input": "Input:1 0\r\n10 0\r\n100 0\r\n1000 0\r\n-1 -1Output:0.102041\r\n10.204082\r\n1020.408163\r\n102040.816327",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/FTHEELF",
  "scraped_at": "2025-08-17 00:33:21",
  "test_cases": [
    {
      "input": "1 0\r\n10 0\r\n100 0\r\n1000 0\r\n-1 -1",
      "expected_output": "0.102041\r\n10.204082\r\n1020.408163\r\n102040.816327",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "8 4\n8 4\n3 1\n3 1\n1 2",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "2 2\n2 8\n3 8\n3 5\n8 6",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "3 3\n5 2\n9 10\n2 5\n1 4",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "65 60\n36 69\n80 43\n66 52\n51 61",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "89 5\n67 4\n41 62\n69 33\n62 17",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "10 68\n46 3\n9 87\n29 67\n51 77",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "26 63\n59 59\n64 1\n35 4\n88 75",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "72 64\n85 99\n51 35\n14 40\n26 20",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "290 420\n222 464\n72 300\n404 463\n137 383",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "265 189\n480 237\n406 122\n499 496\n254 291",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "336 294\n54 316\n103 365\n238 328\n96 424",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "345 409\n293 389\n486 496\n456 396\n157 87",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "362 261\n419 204\n60 198\n465 159\n103 412",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "308 328\n269 103\n93 444\n497 188\n491 395",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "298 479\n258 290\n158 469\n72 78\n309 238",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "999 1\n2 1000\n2 1000\n999 999\n1 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 1\n1 1000\n2 999\n1000 1\n999 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:15",
  "total_test_cases": 20
}
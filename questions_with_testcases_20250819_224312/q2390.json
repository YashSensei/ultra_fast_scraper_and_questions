{
  "problem_code": "problems",
  "title": "Fast Maximum Matching",
  "tags": [],
  "text": "EnglishVietnameseFJ has N (1 ≤ N ≤ 50,000) cows and M (1 ≤ M ≤ 50,000) bulls. Given a list of P (1 ≤ P ≤ 150,000) potential matches between a cow and a bull, compute the greatest number of pairs that can be matched. Of course, a cow can be matched to at most one bull, and vice versa.InputThe first line contains three integers, N, M, and P. Each of the next P lines contains two integers A (1 ≤ A ≤ N) and B (1 ≤ B ≤ M), denoting that cow A can be matched with bull B.OutputPrint a single integer that is the maximum number of pairs that can be obtained.ExampleInput:5 4 6\n5 2\n1 2\n4 3\n3 1\n2 2\n4 4Output:3Cow 1 can be matched to bull 2, cow 3 to bull 1, and cow 4 to bull 3.Original problem:https://www.spoj.com/problems/MATCHING/.",
  "sample_input": "Input:5 4 6\n5 2\n1 2\n4 3\n3 1\n2 2\n4 4Output:3",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/FMATCH",
  "scraped_at": "2025-08-17 00:34:08",
  "test_cases": [
    {
      "input": "5 4 6\n5 2\n1 2\n4 3\n3 1\n2 2\n4 4",
      "expected_output": "3",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "8 1 10\n3 9\n9 3\n3 2\n10 10\n10 5\n3 10",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "6 3 3\n4 4\n8 5\n3 2\n6 8\n2 2\n1 5",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "5 2 2\n6 8\n2 3\n2 4\n9 10\n5 5\n7 10",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "42 40 45\n16 32\n42 42\n35 2\n18 47\n1 9\n26 40",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "27 45 31\n3 47\n25 15\n28 3\n2 12\n4 48\n5 9",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "15 33 50\n22 46\n34 35\n5 2\n40 44\n37 14\n18 11",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "16 39 36\n28 22\n8 19\n17 15\n7 10\n26 14\n18 50",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "8 15 3\n15 40\n18 2\n12 23\n50 47\n9 28\n3 47",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "22 8 16\n8 10\n10 12\n3 19\n14 9\n4 5\n3 15",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "16 15 7\n23 2\n25 14\n4 15\n8 20\n9 9\n21 8",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "5 8 5\n23 22\n19 6\n7 13\n15 10\n4 9\n7 17",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "13 11 16\n24 21\n22 14\n6 7\n19 11\n5 22\n8 18",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "12 13 25\n6 20\n2 18\n17 25\n4 21\n18 16\n4 9",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "25 4 18\n19 19\n10 8\n24 23\n16 3\n19 3\n8 17",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "15 5 11\n11 19\n15 15\n2 21\n16 11\n8 7\n18 15",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "50 50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "50 50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "50 1 1\n49 49\n1 1\n1 50\n1 50\n50 49\n2 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "50 49 2\n1 2\n2 50\n1 49\n1 1\n2 2\n50 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:20",
  "total_test_cases": 20
}
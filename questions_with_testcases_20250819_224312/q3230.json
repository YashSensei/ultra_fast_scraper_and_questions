{
  "problem_code": "problems",
  "title": "MAD",
  "tags": [],
  "text": "Penny has started taking mathematics classes and has got better at it. She now wants to challenge Sheldon at this expertise and make a fool out of him. She writes down a list of numbers as list A and calculates the median of it. Then she calculates the absolute deviation of each number from this median value to make list B. Now she finds the median of this list B. She asks Sheldon to find the minimum number of elements he needs to change in list A so that the median of list B becomes equal to 0. Can you help Sheldon do this?For example:List of numbers (A):  4 5 3 1 2Median of list  A = 3List of Absolute Deviation from median (B) = 1 2 0 2 1Median of list B = 1Note: Median of even length list is the mean of 2 middle values.Constraints0 < T ≤ 100 < N ≤ 1050 ≤ A[i] ≤ 109InputT Number of test cases followed 2T lines.First line of test case contains N, size of array.Second line contains A[0] to A[N-1]  the numbers of the array.OutputT lines each containing a single number which denotes the minimum number of elements we need to change to get the median of the absolute deviation of numbers from median to be 0.ExampleInput:254 5 3 1 2105 5 5 254 5 5 768 5 5 5Output:20",
  "sample_input": "Input:254 5 3 1 2105 5 5 254 5 5 768 5 5 5Output:20",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/DCEPCA10",
  "scraped_at": "2025-08-17 00:34:25",
  "test_cases": [
    {
      "input": "254 5 3 1 2105 5 5 254 5 5 768 5 5 5",
      "expected_output": "20",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "6 6 9 10 8 7 7 7 4 10 7 6 3 9",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "7 4 4 2 2 5 7 9 4 8 6 6 4 8",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "2 7 8 10 7 8 6 2 3 8 9 2 1 1",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "95 89 51 12 61 30 16 27 50 91 85 72 11 89",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "88 38 79 13 15 43 61 67 74 62 92 33 29 35",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "71 36 42 16 21 71 21 32 55 58 43 57 2 9",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "11 16 33 46 88 13 32 68 17 90 95 34 92 50",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "99 7 6 25 65 32 1 53 60 67 5 84 75 42",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "323 356 277 355 304 409 195 369 252 345 207 518 468 446",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "375 421 492 168 304 231 162 246 516 234 464 93 200 73",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "244 132 508 381 88 437 444 429 72 485 144 186 212 71",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "137 505 406 515 485 166 231 245 516 334 522 170 306 457",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "382 456 393 176 503 196 272 515 508 370 227 274 504 189",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "499 215 358 469 239 184 261 499 69 453 430 264 391 191",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "520 76 103 74 171 457 276 479 328 432 178 363 226 79",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1050 1050 1050 1050 1050 1050 1050 1050 1050 1050 1050 1050 1050 1050",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1050 1050 1050 1050 1050 1050 1050 1050 1050 1050 1050 1050 1050 1050",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1050 1049 2 1049 1049 1050 2 1 1 1 1 1 2 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1049 1049 1050 2 2 2 1 1050 1 2 1 1050 1049 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:23",
  "total_test_cases": 20
}
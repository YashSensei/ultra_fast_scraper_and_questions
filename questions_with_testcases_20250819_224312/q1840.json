{
  "problem_code": "problems",
  "title": "Editor",
  "tags": [],
  "text": "Have you ever programmed in Brainf**k? If yes, then you know how\r\nannoying it is to press the same key several times in a row. So what we all\r\nneed, is a good editor.\r\nHere are the functions that the editor should have:'\\n': begin a new line. If the last line was empty, stop\r\nprocessing and print out all lines.'d': copy all characters from the current line, and append them\r\nafter\r\nthe last character in this line. For example, if current line contains\r\nab, and d is pressed two times, the result will be ababababany other character: append it to the current line.Please note, that the solution may only be submitted in Brainf**k or\r\nIntercal.InputThere is exactly one test case. You can assume, that there is no key press of 'd' when the line is still empty.OutputPrint the output that the editor described above would produce on the given input. You can assume, that no line is created with more than 150 characters.ExampleInput:sample-test-dd-d-ddend signalled by two newlinesOutput:sample-test--------------------------------------------enen signalleenen signalle by two newlines",
  "sample_input": "Input:sample-test-dd-d-ddend signalled by two newlinesOutput:sample-test--------------------------------------------enen signalleenen signalle by two newlines",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/EDIT1",
  "scraped_at": "2025-08-17 00:33:49",
  "test_cases": [
    {
      "input": "sample-test-dd-d-ddend signalled by two newlines",
      "expected_output": "sample-test--------------------------------------------enen signalleenen signalle by two newlines",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "cegtp ibobz qs sjfjd hncadfqm",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "oefhvugvfsavfag fvgonidlf zzjzq actjj ykna",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "irbk wpiwwt jm bn qlknqsgj",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "f apqelcolv vuw pnggm msi",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "mpid se ep at qk",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "qdgiqrcvvqztxgiriuugyr fnmylsj gsac w vl",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "ubtyeoexzlbyuwkkz z nlyp oiqc qxn",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "ytwabdzpfzzqu m ops wq azxr",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "nkrgr eipoa al vmm ncmzu",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "yepzidiaefzruy p bekeg btkc qi",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "gjzgbfbjrycvtiz gjioxbfb kem gdjuq evdiox",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "xpaxrtjfrrhdmt ewasv vyop a tn",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "gzflqvlzxuibniqtpslx nfym j dn f",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "t epmp isrfm kfijx to",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "fkfws yru cuyh ma yq",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "omioptrtmm yaflvshx ckwou q ydw",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "stiqhyklvhsanoct np hy wnzx fiajtwg",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "rh xu iivw dz umrfflet",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "wfxbxpkacok espfaw locf hpva eycsw",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:18",
  "total_test_cases": 20
}
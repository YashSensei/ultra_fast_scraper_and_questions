{
  "problem_code": "problems",
  "title": "Gopi and Sandwich",
  "tags": [],
  "text": "Gopi is fond of sandwiches. Once his friend asks him to give part of his sandwich. But, Gopi wants to give him as little sandwich as possible. So, he devises a method.He divides the sandwich intonparts, where each part is a unit fraction (fractions of the form1/pwhere p is integer) of the original sandwich. Among all these parts he chooses the smallest part and gives it to his friend. Help Gopi to find the smallest part possible.InputFirst line containst (1 ≤ t ≤ 105)the number of test cases. The nexttlines contain one integer per line denotingn (2 ≤ n ≤ 106)the number of parts the sandwich can be divided.OutputOutput one line per test case containing the denominator of the smallest part. Since, the answer can be very large, print the answermodulo 109+ 7.ExampleInput:1\r\n3Output:6Explanation:The possible ways of dividing the sandwich into 3 parts are:1/3, 1/3, 1/31/6, 1/2, 1/31/4, 1/4, 1/2Among these, the second way has the smallest part. Hence the output is6.",
  "sample_input": "Input:1\r\n3Output:6",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/GOPI_SW",
  "scraped_at": "2025-08-17 00:33:34",
  "test_cases": [
    {
      "input": "1\r\n3",
      "expected_output": "6",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2\n1\n6",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "3\n8\n4\n7",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n3",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "17\n3626181\n17842907\n83257004\n39775508\n24993493\n4060774\n94748661\n30158530\n90227379\n80792466\n22847679\n45584468\n39244962\n83846406\n32548686\n6530308\n73333246",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "5\n65399197\n71507089\n62783391\n88442288\n11877378",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "9\n27252962\n82322068\n83411540\n17384756\n79820615\n80851207\n2187199\n81114048\n29501820",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "9\n60645645\n79477189\n35876991\n91745424\n64483761\n40146817\n88413407\n70011317\n96295725",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "14\n78453009\n74763550\n81363371\n66625526\n51137525\n82755558\n58424734\n66275367\n9946035\n2825819\n37433286\n42540959\n4346800\n75773602",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "68\n39904\n28307\n28006\n54511\n21136\n69542\n11458\n2899\n76305\n9173\n80511\n11257\n24779\n36211\n14014\n87738\n815\n85592\n89467\n71602\n89787\n36691\n83680\n7560\n3679\n19339\n92736\n39325\n93661\n59311\n69847\n90732\n44023\n36452\n53746\n52307\n41248\n38577\n90950\n2112\n98494\n22676\n34488\n19241\n77946\n45640\n54263\n62958\n9106\n99279\n97287\n13970\n90873\n91534\n44360\n52906\n66598\n33944\n53961\n44525\n40789\n53260\n39540\n60950\n94378\n63215\n82429\n78463",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "63\n17176\n47977\n45691\n60456\n11025\n86506\n70655\n68683\n85736\n23880\n60477\n46263\n57120\n66758\n15841\n94239\n85256\n86650\n38298\n16304\n61408\n90153\n31507\n96314\n27022\n45374\n58655\n68624\n63479\n91316\n66430\n92489\n6952\n90765\n93430\n88138\n42148\n35628\n34002\n74474\n47959\n15845\n91035\n56304\n20097\n57824\n48079\n29532\n48046\n77271\n60235\n36355\n25438\n1557\n46137\n65888\n93818\n60277\n25654\n34076\n81229\n70579\n98677",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "56\n4914\n96742\n22850\n51975\n83827\n71268\n5887\n6964\n12819\n91101\n43377\n82249\n44211\n8272\n45000\n76914\n70620\n86300\n91655\n43278\n89688\n58805\n91577\n85283\n19587\n90585\n62612\n82268\n57709\n93114\n82006\n49227\n11812\n39001\n18934\n17951\n15216\n20738\n38404\n90865\n74082\n1018\n74672\n15028\n12573\n20756\n33782\n54926\n96637\n77118\n19311\n25926\n19503\n26353\n94614\n29510",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "86\n81791\n40157\n93883\n2260\n94773\n56657\n94214\n16602\n45327\n9887\n94596\n64833\n14618\n57918\n82113\n4468\n24000\n9252\n30223\n26755\n19102\n51601\n50601\n15942\n24872\n7555\n25682\n47229\n9700\n43117\n1264\n25080\n86616\n34346\n46917\n47016\n47554\n51482\n4944\n96314\n31594\n85327\n5034\n46895\n9301\n1532\n83302\n79129\n26135\n12978\n47196\n93795\n4483\n94856\n95\n36471\n68900\n79993\n34778\n39783\n22699\n73710\n38148\n35751\n72943\n84161\n20923\n80678\n19876\n91780\n77816\n11412\n33685\n15079\n38822\n25924\n78931\n28588\n3048\n9801\n85856\n80142\n23483\n453\n92892\n29670",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "81\n6120\n15528\n51592\n13520\n86383\n1477\n59221\n43736\n14764\n41731\n87670\n62689\n84242\n76498\n30292\n2748\n90253\n82955\n8657\n44451\n58916\n70132\n89380\n19840\n5311\n94458\n86606\n34251\n12943\n56127\n42117\n76664\n9618\n69713\n69465\n6824\n73837\n34063\n53540\n56872\n21904\n84260\n31360\n52566\n303\n48224\n61372\n29275\n62886\n82180\n14633\n72468\n79013\n95741\n66456\n61825\n64775\n79757\n22948\n54029\n269\n43791\n61785\n38820\n42394\n74185\n65522\n89917\n53983\n81824\n78518\n11102\n8104\n30666\n23857\n7722\n27824\n10222\n29601\n36536\n24434",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "54\n58582\n44117\n66430\n3742\n25370\n12485\n55554\n65853\n60346\n68515\n99290\n30523\n34198\n86239\n80916\n95351\n38151\n92186\n73680\n10272\n47236\n83788\n80922\n39712\n3585\n83881\n3562\n96697\n79643\n7494\n40405\n91914\n73530\n79051\n16120\n96015\n19496\n97109\n25312\n32679\n5749\n88101\n49070\n57519\n93868\n46840\n80861\n95448\n36101\n93153\n69685\n15222\n37422\n36547",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "101\n31438\n27645\n95781\n8131\n10302\n70351\n31070\n94749\n39869\n76312\n37251\n88863\n88111\n50902\n97806\n9\n89029\n45257\n8142\n58070\n26818\n38689\n13388\n43037\n88233\n15029\n63414\n23516\n96932\n87322\n1332\n17197\n43483\n88403\n2205\n77745\n96672\n87822\n5400\n37755\n39803\n64434\n33448\n45364\n7551\n59322\n64380\n46895\n97757\n71195\n81067\n85712\n89634\n62405\n10101\n966\n96100\n49435\n67072\n73362\n18520\n43106\n49689\n51520\n65189\n22471\n21991\n81153\n81101\n41531\n54469\n41364\n61830\n42258\n81216\n28317\n73188\n56976\n24616\n68472\n8873\n36438\n17694\n19564\n4165\n81258\n72000\n87526\n59792\n12097\n31310\n49664\n13065\n94730\n37055\n95003\n16417\n50227\n2621\n26516\n38448",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "106\n3939040\n64603471\n39219136\n26853533\n27520910\n1001477\n34877272\n48410732\n98261873\n53090689\n11975663\n95797332\n38326201\n88992017\n52212818\n18473308\n72196385\n14315785\n97901321\n40041962\n34410372\n5836123\n8061085\n19877941\n66879895\n69671084\n34533961\n15830583\n4593111\n76709935\n13716682\n69042710\n72209498\n87049058\n94509702\n17731482\n55399224\n89590858\n29578528\n16707035\n85967696\n41940549\n80399170\n27826295\n13430853\n66354247\n5977410\n9841141\n50940024\n26990959\n89117953\n6736816\n80225724\n24188334\n75054003\n39147383\n87870843\n55929070\n69496331\n67242048\n32868610\n19344983\n61001813\n94848974\n81891558\n55167457\n87164019\n16214948\n23972762\n45566711\n60315779\n828424\n71936249\n72172411\n31618236\n81783983\n48439727\n18219664\n52717388\n47097995\n32487895\n41426742\n45509479\n74981104\n60261724\n21951601\n65191267\n2919421\n3790043\n79017346\n59635961\n29708981\n32377297\n28387417\n70366003\n7701294\n71791937\n42218053\n96074630\n80290701\n93084716\n51905792\n15879785\n62427508\n40876302\n44857569",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 106)"
    },
    {
      "input": "106\n67995912\n78698687\n76658468\n96738336\n94921228\n68866293\n14720465\n68546561\n18223276\n70179198\n34703885\n24987887\n70917672\n65390428\n56041304\n80030733\n24947391\n80368926\n99912873\n40142656\n24296441\n12486648\n77664006\n49960318\n68497788\n10001847\n32207551\n61436531\n56548418\n46129125\n15349011\n2565900\n13297207\n74076238\n91516924\n92338092\n55541286\n61154854\n28233298\n51994219\n15557325\n22220022\n91089550\n40870765\n95081761\n65501740\n32105574\n71120973\n43261971\n77368441\n39140427\n3145058\n77018703\n5703441\n22898701\n43095656\n44475597\n44147152\n66737465\n68281676\n36140890\n77579603\n53080052\n98908312\n11324762\n74991146\n79271327\n39702277\n57171681\n12117770\n49825843\n4665962\n30416197\n14371339\n63847330\n97006437\n68535985\n88276467\n87486380\n29691105\n73621970\n10333472\n42172317\n99987097\n62572704\n95453274\n16940719\n63355809\n55872127\n59647635\n19985704\n71181738\n85487246\n88988054\n24731856\n22735189\n35722104\n48589554\n13612734\n76546171\n90555857\n58804722\n98311549\n37129881\n56108262\n98014002",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 106)"
    },
    {
      "input": "2\n1\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 2)"
    },
    {
      "input": "106\n1\n20560744\n9218652\n1\n100000000\n1\n1\n1\n100000000\n39533553\n100000000\n23186438\n3630403\n100000000\n32878205\n100000000\n100000000\n100000000\n59072722\n1\n77598872\n100000000\n1\n1\n26563319\n1\n1\n100000000\n81786215\n100000000\n1\n35067434\n1\n1\n50385360\n1\n1\n11586840\n4286320\n100000000\n1\n1\n100000000\n28858691\n78122393\n100000000\n16776242\n81499167\n1\n1066004\n1\n59807529\n1\n100000000\n1\n33816210\n38902078\n11847690\n1\n1\n88014899\n70250522\n100000000\n1\n1\n100000000\n100000000\n36448144\n46036201\n100000000\n23206043\n86069361\n1\n79959819\n1\n10848065\n100000000\n45532516\n100000000\n100000000\n1\n1\n82654959\n79263947\n100000000\n86774662\n56540344\n96029700\n50751867\n100000000\n78139222\n100000000\n1\n100000000\n100000000\n1\n100000000\n100000000\n29645287\n1\n1\n97317659\n100000000\n47756346\n1\n95953108",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 106)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:16",
  "total_test_cases": 20
}
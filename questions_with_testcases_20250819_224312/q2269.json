{
  "problem_code": "problems",
  "title": "Sudoku goblin",
  "tags": [],
  "text": "A sudoku goblin has read your book with sudoku problems. He has erased or added some numbers from settings. Your task is to write a program that can detect modified settings.For every sudoku setting you have to count number of possible solutions and in the case that it is equal to 1 printthe unique solution.InputThere is a number T of the test cases on the first line followed by T sudoku tables separated by one empty line. One sudoku table consists of 9 lines of 9 numbers 0-9 separated by one space. Zero in the table marks the empty field.OutputFor every test case, one line with number of possible solutions optionally followed by solved sudoku in the same format as on the input.ExampleInput:33 0 6 0 0 2 5 0 00 0 0 0 3 8 0 0 07 0 8 0 1 6 0 9 00 0 7 0 0 3 8 6 08 2 0 0 7 0 0 4 50 6 3 1 0 0 9 0 00 7 0 3 5 0 6 0 20 0 0 8 2 0 0 0 00 0 2 9 0 0 7 0 43 0 6 0 0 2 5 0 30 0 0 0 3 8 0 0 07 0 8 0 1 6 0 9 00 0 7 0 0 3 8 6 08 2 0 0 7 0 0 4 50 6 3 1 0 0 9 0 00 7 0 3 5 0 6 0 20 0 0 8 2 0 0 0 00 0 2 9 0 0 7 0 43 0 6 0 0 2 0 0 00 0 0 0 3 8 0 0 07 0 8 0 1 6 0 9 00 0 7 0 0 3 8 6 08 2 0 0 7 0 0 4 50 6 3 1 0 0 9 0 00 7 0 3 5 0 6 0 20 0 0 8 2 0 0 0 00 0 2 9 0 0 7 0 4Output:13 1 6 4 9 2 5 7 82 9 5 7 3 8 4 1 67 4 8 5 1 6 2 9 39 5 7 2 4 3 8 6 18 2 1 6 7 9 3 4 54 6 3 1 8 5 9 2 71 7 9 3 5 4 6 8 26 3 4 8 2 7 1 5 95 8 2 9 6 1 7 3 402",
  "sample_input": "Input:33 0 6 0 0 2 5 0 00 0 0 0 3 8 0 0 07 0 8 0 1 6 0 9 00 0 7 0 0 3 8 6 08 2 0 0 7 0 0 4 50 6 3 1 0 0 9 0 00 7 0 3 5 0 6 0 20 0 0 8 2 0 0 0 00 0 2 9 0 0 7 0 43 0 6 0 0 2 5 0 30 0 0 0 3 8 0 0 07 0 8 0 1 6 0 9 00 0 7 0 0 3 8 6 08 2 0 0 7 0 0 4 50 6 3 1 0 0 9 0 00 7 0 3 5 0 6 0 20 0 0 8 2 0 0 0 00 0 2 9 0 0 7 0 43 0 6 0 0 2 0 0 00 0 0 0 3 8 0 0 07 0 8 0 1 6 0 9 00 0 7 0 0 3 8 6 08 2 0 0 7 0 0 4 50 6 3 1 0 0 9 0 00 7 0 3 5 0 6 0 20 0 0 8 2 0 0 0 00 0 2 9 0 0 7 0 4Output:13 1 6 4 9 2 5 7 82 9 5 7 3 8 4 1 67 4 8 5 1 6 2 9 39 5 7 2 4 3 8 6 18 2 1 6 7 9 3 4 54 6 3 1 8 5 9 2 71 7 9 3 5 4 6 8 26 3 4 8 2 7 1 5 95 8 2 9 6 1 7 3 402",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/SUDOGOB",
  "scraped_at": "2025-08-17 00:34:04",
  "test_cases": [
    {
      "input": "33 0 6 0 0 2 5 0 00 0 0 0 3 8 0 0 07 0 8 0 1 6 0 9 00 0 7 0 0 3 8 6 08 2 0 0 7 0 0 4 50 6 3 1 0 0 9 0 00 7 0 3 5 0 6 0 20 0 0 8 2 0 0 0 00 0 2 9 0 0 7 0 43 0 6 0 0 2 5 0 30 0 0 0 3 8 0 0 07 0 8 0 1 6 0 9 00 0 7 0 0 3 8 6 08 2 0 0 7 0 0 4 50 6 3 1 0 0 9 0 00 7 0 3 5 0 6 0 20 0 0 8 2 0 0 0 00 0 2 9 0 0 7 0 43 0 6 0 0 2 0 0 00 0 0 0 3 8 0 0 07 0 8 0 1 6 0 9 00 0 7 0 0 3 8 6 08 2 0 0 7 0 0 4 50 6 3 1 0 0 9 0 00 7 0 3 5 0 6 0 20 0 0 8 2 0 0 0 00 0 2 9 0 0 7 0 4",
      "expected_output": "13 1 6 4 9 2 5 7 82 9 5 7 3 8 4 1 67 4 8 5 1 6 2 9 39 5 7 2 4 3 8 6 18 2 1 6 7 9 3 4 54 6 3 1 8 5 9 2 71 7 9 3 5 4 6 8 26 3 4 8 2 7 1 5 95 8 2 9 6 1 7 3 402",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5 1 5 4 5 5 5 10 10 9 8 4 8 7 4 4 1 1 3 10 9 4 5 9 3 3 10 8 4 1 1 3 2 4 7 2 7 5 3 9 5 9 9 10 5 7 4 6 4 4 7 7 4 6 6 1 9 1 7 9 7 2 2 2 10 6 1 7 7 3 10 4 1 5 10 3 3 8 8 8 10 6 5 3 4 3 3 3 6 1 9 10 1 8 1 3 3 1 9 10 7 7 7 8 4 4 1 9 3 3 1 1 9 2 3 7 1 10 6 3 1 8 3 3 8 7 2 1 10 2 2 3 6 4 3 7 1 8 4 5 4 8 3 7 5 9 7 5 7 6 5 2 6 4 7 6 10 8 9 4 1 5 8 10 8 6 3 9 8 5 8 9 8 4 4 9 3 1 8 9 4 1 3 3 7 8 9 1 9 6 9 8 4 1 7 4 8 7 3 7 5 2 10 4 4 7 5 8 7 3 8 6 3 8 3 8 10",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "2 4 10 5 8 1 7 8 10 4 1 6 10 7 1 8 10 4 2 7 5 2 4 9 1 2 1 4 7 8 8 4 8 2 1 4 4 8 8 2 3 8 3 5 2 10 7 4 9 5 10 8 2 5 2 5 1 10 6 5 10 7 9 9 7 9 1 7 9 6 3 10 7 4 2 1 5 7 9 2 7 2 3 1 3 4 3 8 3 7 1 5 10 8 7 3 1 1 9 6 4 3 3 7 10 9 3 3 4 9 2 8 8 5 8 6 7 1 9 6 8 3 9 9 3 8 2 8 1 9 9 9 4 9 6 1 6 2 8 9 7 9 7 3 1 2 8 4 2 3 9 7 9 3 1 5 2 7 8 3 2 5 1 8 10 7 1 7 5 6 9 10 9 9 8 8 2 2 9 2 3 5 10 3 10 10 1 9 2 3 3 1 8 3 6 9 6 6 7 3 7 1 1 8 1 1 9 10 10 9 1 10 5 2 3 2 6",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "9 9 7 3 6 5 8 9 9 7 9 2 2 9 5 8 3 4 9 1 2 6 3 1 6 5 5 3 4 4 8 5 10 6 9 10 6 5 9 5 2 9 2 4 8 3 5 2 3 6 4 5 1 4 6 3 2 9 8 4 6 7 1 7 7 7 4 6 5 8 4 7 7 1 4 5 2 4 3 5 10 4 1 8 1 3 7 8 3 8 1 5 7 8 8 1 1 5 7 8 5 8 1 1 1 8 1 9 9 3 1 6 9 2 6 9 10 8 3 9 9 5 4 7 2 9 2 10 6 10 1 10 6 9 10 2 4 8 4 4 5 3 7 10 7 2 4 6 9 5 4 10 6 3 8 6 3 2 9 2 1 7 1 10 10 1 1 7 1 3 6 2 7 5 8 8 5 6 5 3 1 7 8 5 5 10 5 8 5 10 8 6 8 9 5 4 9 1 3 5 6 1 8 2 1 6 8 8 2 2 7 7 6 3 2 6 1",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "30 29 70 44 79 26 47 43 24 50 76 45 98 11 9 54 59 56 20 74 80 7 43 97 27 41 64 88 22 22 26 30 95 29 67 24 48 12 63 82 100 6 61 19 16 10 96 30 22 60 59 26 18 67 9 29 86 39 33 37 26 59 87 74 96 85 45 66 49 66 7 87 8 34 40 27 75 84 35 91 72 93 51 44 84 78 87 9 40 9 37 38 23 53 85 7 69 18 98 39 32 1 85 81 72 72 98 33 42 71 60 67 57 83 19 94 87 70 27 96 29 6 63 91 94 86 48 99 49 45 99 78 77 100 77 7 26 17 4 75 15 100 88 69 85 28 79 5 14 18 1 5 23 89 32 28 91 95 20 3 57 66 23 26 46 45 100 12 19 42 31 6 50 94 47 94 50 23 95 74 57 70 63 1 35 49 50 31 93 51 37 76 25 66 58 73 50 1 65 19 32 47 62 38 73 22 30 25 73 40 99 93 52 57 58 11 20",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "40 14 34 82 98 54 61 35 66 3 31 75 74 7 20 77 25 98 74 59 28 56 16 7 90 22 23 75 42 24 61 39 73 84 91 68 44 41 8 19 31 9 97 58 70 47 44 53 43 68 38 26 22 4 77 34 87 87 56 2 95 53 80 77 53 83 84 98 22 84 12 67 95 60 1 47 3 54 43 64 88 3 28 80 73 28 94 25 13 48 51 4 96 35 34 78 6 63 84 65 6 75 34 47 89 44 23 3 33 7 29 24 94 49 17 51 5 52 20 93 51 24 72 84 56 54 37 37 19 74 63 23 15 4 40 20 46 58 55 80 66 91 66 19 45 3 33 84 4 86 78 66 87 71 69 26 8 52 59 86 26 35 28 54 77 88 7 1 21 88 22 36 81 47 34 74 66 48 52 29 86 93 83 80 35 5 6 67 37 83 83 2 8 41 39 31 14 28 81 75 44 92 16 41 10 44 16 87 98 45 68 97 46 77 65 77 60",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "85 9 15 18 47 82 52 8 89 99 72 99 46 20 80 84 90 92 27 97 5 21 46 86 5 27 31 17 83 92 40 15 30 84 69 45 80 13 2 16 6 70 99 97 78 54 77 36 78 76 30 52 52 23 30 89 98 45 25 51 67 58 56 75 25 1 99 39 45 68 23 7 76 8 99 54 10 67 59 96 88 31 12 72 4 51 2 73 59 5 98 37 100 55 6 18 92 72 54 48 60 89 10 20 65 12 61 71 5 79 47 62 54 73 64 51 21 60 15 37 76 93 87 66 6 96 57 30 48 94 11 63 39 50 49 93 77 41 64 61 99 18 19 42 14 39 15 59 66 88 83 5 2 4 4 70 72 84 90 17 85 84 29 92 92 46 42 87 100 27 41 84 64 18 3 86 7 77 8 37 21 88 36 2 30 69 2 77 9 54 11 38 36 25 28 85 20 63 27 44 77 77 99 49 37 36 55 16 24 82 45 97 50 77 52 5 15",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "33 82 25 60 77 53 45 45 26 80 94 1 19 45 4 83 41 96 66 30 94 35 16 86 13 49 23 62 83 84 79 47 73 79 29 73 59 5 62 79 58 20 51 26 22 85 72 45 71 15 79 47 49 30 40 68 15 45 17 19 29 81 34 57 51 64 98 68 62 93 2 6 67 29 41 9 9 80 56 12 4 97 64 96 75 97 92 47 89 100 100 6 29 17 45 2 79 8 42 86 27 100 72 47 92 48 89 31 29 53 67 32 3 42 100 3 92 54 91 81 10 87 44 100 83 96 90 97 88 62 40 40 27 10 29 9 69 58 47 90 83 41 16 11 60 30 29 40 12 69 77 73 43 77 41 32 17 38 45 29 58 31 80 2 1 61 60 77 47 72 77 36 26 3 12 36 88 37 89 47 89 43 52 38 85 14 8 73 29 20 83 41 6 37 71 55 77 29 3 97 71 37 28 12 89 18 51 57 31 69 86 68 41 31 66 68 20",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "12 90 17 69 29 56 95 61 89 16 88 22 4 21 5 4 76 78 76 39 38 3 88 14 47 80 78 75 82 7 27 23 31 72 69 94 54 48 86 65 43 9 39 44 11 3 68 1 25 12 57 26 22 70 22 98 63 42 64 43 8 52 35 8 71 60 16 27 65 2 81 49 96 55 81 17 30 31 86 55 37 4 19 43 93 15 22 87 16 37 95 78 91 85 61 38 12 86 61 84 95 46 35 16 4 37 67 94 75 30 25 23 1 98 47 100 94 12 43 33 47 59 84 18 15 13 44 83 35 62 37 50 70 80 35 31 41 37 68 44 39 92 34 32 64 80 29 70 89 67 45 57 83 5 54 70 22 56 45 76 19 83 83 49 59 81 40 83 58 50 66 88 48 50 12 16 60 73 90 42 48 48 81 32 16 55 25 48 9 9 97 49 39 98 27 75 64 11 89 63 16 64 17 43 42 100 76 49 17 97 51 22 20 17 87 54 52",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "422 386 482 70 56 371 273 477 355 185 452 402 379 461 363 428 98 239 294 143 232 192 350 56 495 104 425 219 402 124 436 58 209 251 136 386 337 493 451 304 208 397 432 226 410 79 278 174 124 456 403 244 113 410 163 453 147 230 353 131 278 278 449 144 298 479 277 239 162 114 417 72 107 370 63 500 493 376 139 339 108 414 205 121 109 261 171 400 147 220 255 261 95 307 465 456 390 273 480 279 101 435 310 294 214 401 414 123 156 218 105 85 355 284 377 431 288 361 410 391 278 282 143 407 325 412 473 217 207 50 387 489 265 116 417 493 396 466 207 119 59 358 431 111 262 383 451 496 400 145 157 481 250 187 269 338 93 323 288 207 158 243 394 336 362 126 124 273 471 472 280 145 312 137 186 334 146 88 221 132 72 442 464 125 410 465 412 110 431 120 265 119 283 229 269 435 410 198 141 213 393 419 477 245 424 176 281 193 194 369 373 72 160 321 246 437 494",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "275 265 184 236 432 74 455 451 224 400 418 498 430 109 436 204 385 385 374 478 201 258 303 149 198 152 399 378 138 306 495 418 330 88 346 325 145 142 334 171 460 135 483 145 172 232 225 133 452 56 130 285 377 149 211 230 456 342 207 350 179 300 126 133 441 223 174 266 138 456 54 400 242 78 436 119 80 460 264 412 460 145 160 363 305 343 124 423 213 223 390 361 76 134 237 255 368 483 240 87 368 105 248 346 173 153 378 175 128 375 425 201 184 278 403 210 360 317 108 340 162 254 273 242 372 221 362 274 493 331 100 206 324 280 496 280 371 341 63 65 486 123 145 344 255 151 53 172 344 468 307 402 120 87 335 97 432 379 122 77 240 424 317 368 486 374 425 305 152 89 267 417 195 458 348 338 474 259 425 480 397 52 344 441 107 81 282 404 164 79 134 273 179 386 500 329 144 485 121 287 200 445 176 134 95 297 174 498 110 114 239 147 115 289 417 268 97",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "77 160 230 129 345 179 144 55 287 81 52 315 325 59 162 223 456 155 114 344 399 276 134 448 230 230 332 140 463 341 433 146 194 379 400 340 163 242 308 122 162 338 430 193 130 345 369 481 395 455 369 352 478 94 50 295 376 58 316 133 366 380 320 153 395 358 84 438 200 449 489 119 417 103 340 160 493 230 344 281 155 66 66 377 348 133 279 104 491 500 332 68 349 75 63 250 459 368 198 138 95 334 432 116 204 358 101 423 169 426 211 287 153 319 388 144 380 438 382 303 73 75 138 344 360 258 375 82 205 312 122 117 318 487 408 406 81 217 159 87 234 140 238 225 198 459 490 281 451 203 410 435 404 217 112 340 428 418 268 174 497 165 264 374 168 489 235 146 495 56 355 432 269 269 430 382 449 360 338 232 389 107 394 243 271 372 357 350 138 130 67 177 297 187 274 208 199 221 85 305 121 67 233 386 386 233 295 395 130 181 138 457 135 490 176 135 375",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "175 405 262 353 341 153 438 351 420 260 390 258 319 82 282 191 354 469 259 323 132 67 208 212 51 278 314 426 492 258 147 251 235 484 85 227 433 230 389 280 56 384 212 87 196 126 278 446 221 412 118 350 194 495 488 302 442 192 73 167 301 265 261 259 128 285 321 381 125 277 473 389 161 254 97 272 143 421 404 354 469 323 80 124 268 117 399 301 269 192 280 264 336 184 309 310 242 105 288 385 144 226 279 470 128 270 358 231 335 262 344 152 210 386 147 165 384 463 176 373 244 273 290 235 257 136 386 447 91 472 225 373 86 142 428 386 240 364 435 494 344 453 473 407 473 231 70 182 407 168 111 209 164 276 95 112 307 308 333 436 322 56 485 70 398 380 444 223 312 494 273 397 89 461 401 66 409 455 101 162 124 275 185 371 285 153 395 174 301 213 169 342 158 236 68 447 81 129 439 472 297 489 332 245 340 243 349 426 59 397 339 87 500 52 90 184 429",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "223 182 328 371 125 423 272 371 289 123 172 414 85 185 413 170 115 444 379 465 129 93 300 433 475 379 438 171 125 307 277 198 97 431 127 91 365 225 466 60 283 386 258 388 247 154 425 499 490 283 118 245 484 89 196 419 388 177 410 148 204 225 288 117 276 270 334 432 203 51 296 294 194 361 64 63 347 238 85 208 380 478 411 344 247 143 331 268 255 440 344 478 285 371 276 154 452 295 451 155 270 105 486 112 221 104 128 182 245 264 139 224 466 269 113 441 421 223 177 191 494 487 366 482 293 114 236 97 395 233 295 376 368 179 146 56 236 355 326 455 309 165 206 473 131 101 327 237 169 453 307 455 170 175 187 220 447 375 346 216 343 429 317 62 73 84 457 191 287 380 354 137 405 142 181 425 465 126 235 77 237 263 407 74 125 494 378 371 272 321 278 123 223 446 297 453 198 452 240 66 271 158 230 161 400 225 178 339 433 106 276 475 362 110 233 137 348",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "445 400 52 176 241 195 362 349 153 451 230 234 51 387 85 88 108 493 175 59 418 181 330 237 317 130 289 219 265 273 447 204 373 452 248 367 254 241 235 362 200 230 149 391 164 86 285 239 53 489 477 206 271 381 343 280 96 84 364 106 381 133 400 83 496 75 68 395 352 139 142 354 110 333 390 200 462 207 75 495 306 464 492 410 94 172 258 225 375 439 132 451 244 331 72 263 110 197 364 408 242 332 355 102 56 84 223 302 350 276 462 214 184 221 380 159 90 449 67 314 134 191 439 431 157 302 493 404 414 305 111 490 287 340 162 429 396 210 430 188 329 157 388 420 450 404 159 284 477 72 56 235 360 414 353 271 340 212 437 319 184 381 369 365 194 76 57 498 249 427 434 234 424 225 197 179 457 455 130 79 427 310 66 269 134 452 77 467 239 219 296 260 85 137 395 184 416 477 442 265 287 303 389 64 130 53 258 164 154 144 373 105 135 288 94 158 144",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "400 146 165 377 200 442 320 469 435 491 277 96 368 195 284 399 379 306 410 273 260 338 172 93 60 367 307 253 442 57 96 197 492 367 185 285 444 436 334 52 378 388 286 237 359 196 433 409 338 238 77 450 211 181 402 98 311 373 408 259 393 221 449 331 378 141 108 266 402 435 325 66 344 299 350 294 64 337 184 469 241 115 366 187 237 290 185 224 255 168 256 58 489 301 92 248 472 217 62 217 418 371 173 430 208 215 290 358 111 144 232 372 348 469 401 182 215 388 83 62 347 90 370 486 186 286 75 340 154 393 304 77 407 407 80 345 439 254 271 361 370 153 143 448 178 169 168 388 464 285 110 399 310 398 197 247 495 385 340 256 58 279 204 462 240 211 423 154 156 319 86 95 220 72 429 435 111 233 141 117 211 379 218 262 220 152 92 92 241 375 211 156 134 405 114 434 455 367 273 308 349 93 91 441 402 403 395 297 105 116 301 384 374 98 490 400 375",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 999 2 2 1000 1 1000 999 1 999 999 1000 2 2 1000 999 2 999 999 1000 2 999 999 2 999 1 1000 999 1 1 999 1000 2 1 1000 1000 1 1000 1 1000 1000 999 999 1 999 1000 1000 1000 1000 2 999 2 2 1000 1000 1 1000 1 1000 1 999 999 999 1 2 1000 2 1000 2 1 999 1000 1 2 2 999 2 999 2 999 1 2 2 2 2 999 1 2 2 1 1 2 999 1000 1 2 999 999 1 1 1000 1000 999 1000 2 1000 2 1 1 1 1000 1 2 1000 2 999 999 2 1 1 1 999 1000 1 1 1 1000 1 1 1000 2 999 2 1 1000 1 999 1 2 2 999 1 999 1 2 2 999 2 999 1 999 999 2 1 1000 1000 1000 999 999 1 1000 1 2 2 999 999 2 1000 2 1000 2 1 1 1000 2 2 2 1000 999 2 999 1 2 1000 1000 999 2 2 1 1 1000 2 1000 1000 1 1 2 1000 999 1000 999 1000 2 1000 1 1000 999 1000 999 1000 1000 1000 1000 1 1000 999 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1000 999 2 1000 1 1000 999 999 999 999 999 1 2 1000 2 999 1 1 999 2 2 1000 1 1000 1 999 1000 1000 1000 999 1 1 1 1000 2 999 1 2 1000 1000 999 999 1000 999 1 1000 2 1000 1000 999 999 2 1000 1 1000 1 999 1 1000 1000 2 999 999 999 1 2 1000 999 2 1000 1000 1 2 1000 1000 2 1000 999 999 2 1 1 2 1 1000 999 1000 1000 1000 999 1000 2 999 1000 1 2 2 1 999 2 999 1 1 1000 1 1 1 1000 2 1000 999 999 999 1000 1000 1 1 1 1000 1000 2 2 2 1000 1 999 2 1000 2 1000 1 1 2 1 2 1000 1 1000 1000 1000 1000 1000 1000 1000 1000 1000 2 1 999 1 1000 2 999 2 1 2 1 2 1 1 1 999 999 1000 1000 1 999 2 1 2 999 1000 999 1 1000 999 1 1000 1 2 2 1000 1 1000 999 1 2 999 1000 2 1 1 2 1 999 1 1 1000 2 1 2 1 1000 1000 2 2 999 999 1 2 1000 2 1 1 1000 1000 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:20",
  "total_test_cases": 20
}
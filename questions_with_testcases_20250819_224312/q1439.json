{
  "problem_code": "problems",
  "title": "Pizza Delivery",
  "tags": [],
  "text": "EnglishVietnameseLittle Ivica recently got a job delivering pizzas for the most popular  pizzeria in town.At the start of his work day, he receives a list with the locations to  which he needs to deliver pizzas, in order in which the locations are given.The city is divided into R×C cells. The rows are numbered 1 through R,  columns 1 through C.From every cell, it is possible to move to neighbouring cells to the  left and right. Moving up or down is only allowed in the first and last columns (columns 1 and C).The pizzeria is in the top left corner (1, 1) and this is the location Ivica starts from. Ivica takes with him all the pizzas he will deliver that day  so he does not have to return to the pizzeria between deliveries or after the last delivery.For each location in the city, Ivica knows how much time he will spend every  time he is in it (trying to get through the intersection, for example). Write a program that calculates the smallest amount of time for Ivica to  deliver all the pizzas.InputThe first line contains the integers R and C (1 ≤ R ≤ 2000, 1 ≤ C ≤ 200), the dimensions of the city.Each of the following R lines contains C integers. These are the times  Ivica spends every time he enters a location. The times will be integers  between 0 and 5000, inclusive.The next line contains an integer D (1 ≤ D ≤ 200 000), the number of  pizza deliveries that day. (No, it's not unrealistically large at all.) Each of the following D lines contains two integers A and B (1 ≤ A ≤ R,  1 ≤ B ≤ C), the location to which a pizza must be delivered. The  pizzas are given in the order in which they must be delivered. No location will be given twice in a row.OutputOutput the smallest amount of time for Ivica to deliver all the pizzas.Sampleinput\r\n3 3\r\n1 8 2\r\n2 3 2\r\n1 0 1\r\n3\r\n1 3\r\n3 3\r\n2 2\r\n\r\noutput\r\n17input\r\n2 5\r\n0 0 0 0 0\r\n1 4 2 3 2\r\n4\r\n1 5\r\n2 2\r\n2 5\r\n2 1\r\n\r\noutput\r\n9In the first example, the shortest path goes through the following locations: (1, 1), (2, 1), (3, 1), (3, 2), (3, 3), (2, 3), (1, 3), (2, 3), (3, 3), (2, 3) and (2, 2). The locations in bold show where Mirko made deliveries. The total time  for the deliveries is 1+2+1+0+1+2+2+2+1+2+3=17.",
  "sample_input": "input\r\n3 3\r\n1 8 2\r\n2 3 2\r\n1 0 1\r\n3\r\n1 3\r\n3 3\r\n2 2\r\n\r\noutput\r\n17",
  "sample_output": "input\r\n2 5\r\n0 0 0 0 0\r\n1 4 2 3 2\r\n4\r\n1 5\r\n2 2\r\n2 5\r\n2 1\r\n\r\noutput\r\n9",
  "link": "https://www.spoj.com/problems/MDOSTAVA",
  "scraped_at": "2025-08-17 00:33:47",
  "test_cases": [
    {
      "input": "input\r\n3 3\r\n1 8 2\r\n2 3 2\r\n1 0 1\r\n3\r\n1 3\r\n3 3\r\n2 2\r\n\r\noutput\r\n17",
      "expected_output": "input\r\n2 5\r\n0 0 0 0 0\r\n1 4 2 3 2\r\n4\r\n1 5\r\n2 2\r\n2 5\r\n2 1\r\n\r\noutput\r\n9",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "kllpgcfz\n7 6\n3 7 6\n10 6 10\n3 10 4\n8\n7 7\n5 6\n3 5\ndxkuuq\n10",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "muotbqc\n2 7\n1 1 9\n2 4 2\n1 8 8\n4\n9 3\n1 5\n7 10\nrnstynmesbw\n7",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "m\n9 6\n2 8 10\n2 7 10\n10 8 10\n7\n10 4\n10 2\n10 7\nig\n10",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "ms\n6 27\n89 38 95\n55 72 21\n87 41 55\n28\n90 100\n57 87\n12 47\nx\n30",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "td\n90 41\n29 80 79\n39 20 100\n7 29 3\n15\n16 21\n35 2\n88 83\nvjqhmtg\n43",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "jaic\n44 3\n8 12 49\n87 77 64\n56 76 38\n72\n82 100\n71 34\n14 89\npkkycu\n20",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "ksmhkdl\n88 63\n49 49 14\n5 86 6\n22 22 29\n85\n54 62\n4 36\n80 54\nkouccxhxks\n62",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "mpio\n71 49\n35 100 22\n61 86 94\n68 98 58\n34\n2 20\n19 28\n54 1\nkrvyv\n2",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "hmnjwid\n309 222\n402 67 294\n185 328 164\n212 141 416\n300\n232 234\n479 391\n124 334\nooe\n392",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "ifkg\n485 251\n475 276 257\n492 376 259\n254 397 266\n432\n116 110\n51 485\n281 79\nvfknckuptaa\n298",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "oixrxu\n477 199\n452 91 354\n300 289 495\n361 296 61\n383\n51 468\n55 496\n411 259\nndkvwlijme\n197",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "pqtvf\n393 331\n189 311 220\n118 304 376\n329 482 480\n378\n397 332\n324 371\n432 193\ngw\n59",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "sdho\n118 214\n271 460 331\n249 157 294\n74 70 211\n251\n105 409\n495 259\n59 84\nmbukqfcaxj\n400",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "wlmfuj\n64 155\n234 446 335\n443 365 151\n234 435 221\n217\n169 117\n259 278\n253 93\nmrwodn\n58",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "geqhq\n339 285\n248 116 96\n500 155 87\n349 105 470\n487\n253 302\n325 66\n90 421\nusn\n246",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "vuji\n1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000\n1000 1000\n1000 1000\n1000 1000\nb\n1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "pfvhsb\n1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000\n1000 1000\n1000 1000\n1000 1000\nyijarpiptqer\n1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "qwjhdgawha\n1000 2\n999 1000 999\n1 1 999\n2 2 999\n2\n1000 1\n999 1000\n999 1\nzkjnll\n1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "eh\n1000 2\n2 2 999\n999 2 1\n2 999 999\n999\n1000 2\n1 2\n1000 1000\nfdpfr\n2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:17",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Taskin and apple tree",
  "tags": [],
  "text": "Taskin has an apple orchard Every morning he goes to pick apples from orchard. He has a basket which can carrynot more thanMapples. Taskin picks the apples, and puts them into the basket. Taskin goes to each tree and either picks all the apples from that tree or skips that tree.What is the maximum number of apples Taskin can pick?InputIn the first line there will be an integerTnumber of test cases.For every test case there will be 2 integers in the first lineNandM, number of apple tree in the orchard and capacity of basket respectively.Next line containsNintegersa1a2a3... anwhereaiis the number of apples in thei-thtree.T ≤ 10N ≤ 20M ≤ 2 × 1010Ai≤ 109OutputPrint an integer, the maximum number of apples.ExampleInput:2\r\n5 6\r\n2 1 2 7 8\r\n5 10\r\n1 2 4 4 6Output:5\r\n10",
  "sample_input": "Input:2\r\n5 6\r\n2 1 2 7 8\r\n5 10\r\n1 2 4 4 6Output:5\r\n10",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/TAKIN",
  "scraped_at": "2025-08-17 00:34:19",
  "test_cases": [
    {
      "input": "2\r\n5 6\r\n2 1 2 7 8\r\n5 10\r\n1 2 4 4 6",
      "expected_output": "5\r\n10",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4\n10\n1\n6\n9",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n9\n4\n8\n3\n9",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "3\n6\n4\n10",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "16\n44562480\n89378310\n48460202\n51603296\n25823522\n70534918\n89026175\n68749534\n71273567\n95877217\n15506497\n9664095\n70130641\n54401256\n60071580\n25665101",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "11\n77724761\n87968538\n59164262\n16479949\n12159002\n65758010\n69204255\n86923040\n9908442\n29217474\n43761203",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "14\n18935599\n15689220\n86889631\n52323578\n67495887\n48629141\n17517910\n46329563\n20596017\n32538312\n2750789\n19110856\n66682910\n89498427",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "12\n51713525\n38051742\n32256933\n51897084\n23972942\n6222136\n46989804\n37947783\n83344559\n89353280\n69809446\n36423655",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "14\n28787099\n77011148\n94681627\n24022308\n65404169\n32347997\n23358345\n57201563\n84722567\n72523310\n53196629\n25799932\n57640835\n75558246",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "20\n36839\n42845\n54250\n36703\n45781\n26133\n69061\n14051\n20959\n6893\n77535\n8984\n44856\n89486\n98289\n65824\n46534\n55797\n19766\n91606",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "20\n97923\n96824\n32167\n22942\n57628\n96242\n10698\n23181\n7109\n56066\n6982\n68342\n65185\n95457\n93992\n6424\n44385\n36309\n78512\n66342",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "20\n63534\n20864\n13915\n92250\n36034\n80235\n96817\n82821\n58460\n96100\n76357\n46638\n83212\n13585\n96978\n83191\n89521\n78585\n23506\n73043",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "20\n45326\n63995\n94968\n15938\n61131\n68579\n35944\n83368\n59590\n24135\n12869\n60031\n96192\n578\n45635\n40246\n23092\n58211\n33534\n34616",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "20\n21188\n34221\n32190\n64300\n15789\n77921\n64886\n15543\n38406\n53319\n79747\n13197\n77327\n10423\n76356\n66948\n74637\n63795\n90459\n23452",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "20\n7415\n24935\n92016\n2459\n44828\n94469\n72985\n45180\n50036\n76950\n87498\n48807\n90520\n51580\n14331\n27704\n90064\n88673\n67549\n79317",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "20\n73131\n390\n50327\n63700\n6376\n71077\n9521\n94268\n42341\n31442\n9327\n49781\n71311\n50555\n87122\n42549\n45008\n70600\n33173\n2061",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "20\n81279920\n52758555\n86830735\n10144984\n52735873\n6962188\n57658511\n17658497\n80776224\n48097883\n5183000\n11430386\n74355401\n92252465\n97851883\n44336022\n43225267\n30096087\n83601486\n22109386",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 20)"
    },
    {
      "input": "20\n82059935\n99157531\n28121715\n24901422\n43313926\n70352854\n46425483\n91324755\n14950544\n60204543\n21866293\n86078492\n8309335\n53477927\n61864796\n69716620\n7885789\n99500475\n42910125\n64897956",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 20)"
    },
    {
      "input": "1\n1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 1)"
    },
    {
      "input": "1\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 1)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:22",
  "total_test_cases": 20
}
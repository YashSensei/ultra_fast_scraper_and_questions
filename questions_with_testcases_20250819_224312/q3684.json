{
  "problem_code": "problems",
  "title": "Dwarven SniperÂ´s Hunting",
  "tags": [],
  "text": "Now the hunting starts in the world named DOTA, a stupid PC game which cannot play with others together.Among the individuals in the game, there are two heroes named Dwarven Sniper and Lycanthrope. Lycanthrope wants to escape from being captured; however, our Dwarven Sniper won't let him go! He will use the Silver Bullet to kill the Lycanthrope by only one shot! Yes, that's enough.Lycanthrope is running on a line in the map with a constant speed. The weapon range of the Silver Bullet is limited by L meters. Dwarven Sniper can run for a while freely, and then shoot Lycanthrope. In order to show his excellent shooting skill, Dwarven Sniper wants the Silver Bullet flying as far as possible. But don't forget the flying time of the Silver Bullet due to considerable weight of the bullet. And Dwarven Sniper wants to stop the hunting as quickly as possible. So if there is more than one way to show his excellent skill, he would choose the fastest way. In this problem we consider the Silver Bullet and Lycanthrope as two points.Now Dwarven Sniper wants to know the maximum length that the Silver Bullet can fly, and (under this condition) the shortest time that the hunting lasts. Specifically, the total hunting time is defined as the time interval from the start of hunting to the moment that the bullet hit Lycanthrope. Can you help him?InputThere are several test cases. Each of them contains only one line which consist of 9 real numbers, that are X1, Y1, X2, Y2, Lx, Ly, vD, vB and L (-10000 <= X1, Y1, X2, Y2, Lx, Ly <= 10000, 0 <= vD, vB, L <=100000). The pair (X1, Y1) is the starting position of the Lycanthrope while (X2, Y2) is the starting position of Dwarven Sniper, while (Lx, Ly) is the moving vector per second of the Lycanthrope, vD is the speed of the Dwarven Sniper, vB is the speed of the Silver Bullet, L is the maximum possible flying distance of the bullet.All units are meters/second.It is guaranteed that (Lx*Lx+Ly*Ly) < vD*vD < vB*vB , and Dwarven Sniper's starting position is different from Lycanthrope's position. The input ends with a line containing all zeros.OutputFor each test case, output two real numbers S and T in a line separated by a single space denoting that the Silver bullet flies S meters before hitting Lycanthrope and the hunting lasts for T seconds, both with 3 numbers after the decimal point.You may assume that Dwarven Sniper can finish his hunting within no more than 1e+9 seconds.Note: The judge is \"ignoring extra white spaces\".ExampleInput:-1 0 0 10 1 0 2 10 10\r\n0 0 0 5 0 1 2 6 6\r\n0 0 0 0 0 0 0 0 0Output:10.000 1.000\r\n6.000 3.000",
  "sample_input": "Input:-1 0 0 10 1 0 2 10 10\r\n0 0 0 5 0 1 2 6 6\r\n0 0 0 0 0 0 0 0 0Output:10.000 1.000\r\n6.000 3.000",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/HUNT1",
  "scraped_at": "2025-08-17 00:34:22",
  "test_cases": [
    {
      "input": "-1 0 0 10 1 0 2 10 10\r\n0 0 0 5 0 1 2 6 6\r\n0 0 0 0 0 0 0 0 0",
      "expected_output": "10.000 1.000\r\n6.000 3.000",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5 10 5 4 9 3 6 5 3\n10 6 5 7 1 5 2 3 10\n9 8 8 7 6 7 8 10 4",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "8 5 6 8 10 5 7 3 2\n9 9 4 5 10 7 5 1 5\n6 6 6 3 7 1 8 8 7",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "2 1 8 8 1 5 2 6 10\n9 2 3 6 9 4 7 3 9\n8 5 4 9 4 4 7 1 3",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "94 31 31 88 37 69 2 74 88\n17 74 1 67 35 9 2 16 45\n53 31 87 70 46 35 5 88 84",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "15 39 88 56 74 43 43 31 54\n1 77 98 22 62 49 26 62 54\n12 35 36 59 80 75 71 59 81",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "54 49 6 37 46 63 68 14 97\n65 7 39 95 31 49 92 40 35\n55 84 23 3 46 51 83 74 29",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "64 58 9 18 82 31 29 64 72\n45 26 89 62 5 29 6 90 74\n19 50 75 45 89 74 70 91 54",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "90 48 15 71 83 31 80 94 92\n54 50 36 32 23 54 49 49 95\n81 25 82 32 57 73 38 91 55",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "433 386 177 129 338 136 64 143 484\n124 281 397 475 284 424 102 294 352\n272 179 316 419 247 232 397 178 262",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "100 439 285 404 422 285 100 433 474\n249 214 311 76 187 184 194 66 266\n494 107 196 230 336 491 439 237 397",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "140 85 409 173 262 249 326 374 101\n220 477 478 214 335 414 54 388 124\n496 369 457 258 252 340 477 329 60",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "161 394 481 194 171 99 493 65 60\n189 56 298 88 279 435 432 465 371\n206 389 235 145 285 452 357 405 73",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "229 292 67 319 368 293 357 132 372\n205 421 356 215 438 132 221 244 365\n184 247 156 367 183 387 84 179 412",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "197 163 134 77 246 178 139 176 73\n191 134 333 93 309 371 210 319 298\n147 375 373 401 370 169 159 215 286",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "483 156 454 312 409 161 109 129 300\n347 227 305 466 102 312 96 120 122\n167 209 175 244 87 135 195 197 127",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 1 999 2 1 999 1000 2 2\n1 2 999 1 1 1000 2 999 1\n999 2 999 1 999 999 2 999 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 2 2 1000 1000 2 2 1 2\n2 999 2 2 1000 1 999 1 1\n2 1 1000 999 2 1000 1 1 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:24",
  "total_test_cases": 20
}
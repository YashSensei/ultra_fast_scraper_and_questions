{
  "problem_code": "problems",
  "title": "Finding Fractions",
  "tags": [],
  "text": "EnglishVietnameseGiven a, b, c, d, find a fraction p/q with minimum q, and satisfied a/b < p/q < c/d.InputFor each test case, one line contains four integers a, b, c, d.OutputFor each test case, print the fraction (see the sample for details). If multiple solution exists, output the one with minimum p.ExampleInput:1 3 1 2\r\n2 1 3 1\r\n2 1 4 1\r\n1000 1001 1001 1002Output:2/5\r\n5/2\r\n3/1\r\n2001/2003ConstraintsDataset 1: a, b, c, d (1 ≤ a, b, c, d ≤ 1e9, and a/b < c/d)",
  "sample_input": "Input:1 3 1 2\r\n2 1 3 1\r\n2 1 4 1\r\n1000 1001 1001 1002Output:2/5\r\n5/2\r\n3/1\r\n2001/2003",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/FINFRAC",
  "scraped_at": "2025-08-17 00:33:46",
  "test_cases": [
    {
      "input": "1 3 1 2\r\n2 1 3 1\r\n2 1 4 1\r\n1000 1001 1001 1002",
      "expected_output": "2/5\r\n5/2\r\n3/1\r\n2001/2003",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2 1 6 7\n9 2 8 7\n9 10 7 10\n3 5 1 9",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "9 6 6 3\n9 10 4 10\n10 10 5 2\n9 6 8 2",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "10 1 7 8\n10 6 2 10\n6 9 9 2\n8 9 2 6",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "77 30 23 89\n49 61 66 74\n38 3 38 20\n94 26 32 88",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "22 97 65 88\n42 63 83 27\n59 22 1 65\n9 68 13 5",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "7 28 51 84\n52 68 27 5\n33 49 48 11\n73 52 20 45",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "91 69 65 58\n27 30 44 55\n50 97 94 31\n18 33 23 47",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "70 38 76 84\n39 65 21 29\n86 1 15 49\n32 73 24 77",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "414 489 485 190\n68 309 491 433\n85 204 280 92\n471 180 315 418",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "149 424 142 160\n115 499 138 275\n280 266 125 499\n326 233 264 443",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "242 283 331 279\n147 383 79 500\n131 111 249 143\n129 251 424 406",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "386 348 158 212\n119 377 415 168\n254 67 51 435\n345 469 137 81",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "412 282 264 158\n187 161 435 276\n426 286 174 447\n486 410 96 327",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "307 175 375 483\n267 457 70 408\n239 69 299 371\n338 257 301 421",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "135 437 160 291\n118 138 497 93\n337 224 487 80\n82 151 201 247",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 999 1000 999\n999 999 1000 1000\n2 999 2 1\n999 999 2 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "999 1000 1000 2\n1 999 1000 1\n1 999 2 1000\n2 1000 2 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:17",
  "total_test_cases": 20
}
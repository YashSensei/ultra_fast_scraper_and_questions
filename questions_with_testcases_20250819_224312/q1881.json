{
  "problem_code": "problems",
  "title": "Minimum Cost",
  "tags": [],
  "text": "Problem StatementGiven two stringSandT. You can delete a character fromSwith cost 15 and a CharacterTwith cost 30. Your goal is to make the string equal (same). It is not mandatory to delete character.For example: S =aXband T =Yab. Now, if we delete X from S and Y from T, then total cost = 15 + 30 = 45. \r\nAnd S and T will becomeab.Another example: S =ab, T =cd, Now total cost = 15 + 15 + 30 + 30 = 90.Another example: S =abcd, T =acdb, Now total cost = 15 + 30 = 45.InputInput consists of pairs of lines. The first line of a pair contains the first stringSand the second line contains the second stringT. Each string is on a separate line and consists of at most 1,000 characters . The end of input occurs when the first sequence starts with an \"#\" character (without the quotes).OutputFor each subsequent pair of input lines, output a line containing one integer number which the minimum cost to make the string equal (same).Sample Input/OutputSample InputSample Outputaxb\r\nyab\r\nab\r\ncd\r\nko\r\np\r\nabcd\r\nacdb\r\n#45\r\n90\r\n60\r\n45___________________________________________________________________________________________________________Problem Setter: Shipu Ahamed, Dept. of CSEBangladesh University of Business and Technology (BUBT)",
  "sample_input": "axb\r\nyab\r\nab\r\ncd\r\nko\r\np\r\nabcd\r\nacdb\r\n#",
  "sample_output": "45\r\n90\r\n60\r\n45",
  "link": "https://www.spoj.com/problems/MC",
  "scraped_at": "2025-08-17 00:33:35",
  "test_cases": [
    {
      "input": "axb\r\nyab\r\nab\r\ncd\r\nko\r\np\r\nabcd\r\nacdb\r\n#",
      "expected_output": "45\r\n90\r\n60\r\n45",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "fztb\nij\noah\nloeo\np\nlk\nwdm\ngvajc\nj",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "ecdrdc\nhvdasw\nnxy\nyymy\netka\nhg\ng\nn\nb",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "xsojr\npeb\nuqkm\ne\nsc\non\nrf\np\nhb",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "n\nxsrgr\nacdx\npjrn\nsf\ng\nalsls\nowjfire\nd",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "m\nbro\ngsk\ngya\npfk\nyy\nsz\nbqvzjc\no",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "ktxap\njvdrzt\niyld\nys\nz\nfh\nsmzsudn\nfe\nco",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "vrykb\nwhj\nkb\nz\nr\nzz\nunmz\nvj\nq",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "drzdpp\nbojao\nxwzy\ne\nwh\nev\nuxff\nstqx\nm",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "cdk\nglh\nak\nj\nmaei\nlx\nghybiw\nfjdqwi\ngy",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "l\nv\nuojv\nizn\no\nt\nrqmcbxxv\ndfetpm\ny",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "xb\nc\nfnv\ne\nxc\np\nrtdwmac\nsgcuijtu\nwy",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "qmi\ndfwtmk\naq\nifaa\nnh\nlt\nnvu\nwm\nz",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "ct\nx\nacpw\ny\nael\nt\nm\nwmfq\nh",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "e\nak\nqaj\nu\nhigm\nr\nytqbpltj\nwt\nqc",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "c\no\nzln\naxw\nrqhi\ng\nuryuu\ndwzl\nwx",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "mhowui\nvyv\nswzh\nmrrd\niu\nqa\niwrcvt\nloupw\nm",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "to\nh\nyax\nsgbu\njbi\nk\nsxaun\nr\nu",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "kljv\nvof\neuw\nd\npw\nqj\ng\nrcg\nfe",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "hvcr\nf\nmg\ny\neo\nu\nxudhe\najnfyjw\nq",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:18",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Jara’s Legacy",
  "tags": [],
  "text": "Victor Jara was a Chilean teacher, theater director and political activist. He is widely recognized because of his talent as poet and song writer. His most recognized work is probably the song “A Desalambrar” that can be translated from Spanish as “Unwire”. In this song Jara assures that people are the rightful owner of the lands, and so wire fences that delimit private properties should be cut down to allow access to everybody. Although Jara’s proposal is far from being fulfilled, some of his convinced listeners keep trying to make it happen. Since they must face several enemies, they try to make their job efficient by only cutting down the necessary number of fences and not more.Each fence can be modeled as a segment (straight line) connecting two points in the XY plane. These endpoints are considered to be part of the fence. A cut in a fence removes any contiguous part of the fence except the endpoints. An area is said to be free if and only if, for any pair of points not lying over a fence, there is a (not necessarily straight) line that connect these points without crossing any fence. Given the location of the fences, your job is to calculate the minimum number of fences that need to be cut down to make the area free, according to the above definition.InputEach test case is described using several lines. The first line contains an integer N indicating the number of fences in the area (1 ≤ N ≤ 105).Each of the next N lines describes a different fence using four integers X0, Y0, X1 and Y1 (−104≤ X0, Y0, X1, Y1 ≤ 104). These values represent that there is a fence whose endpoints in the XY plane are (X0, Y0) and (X1, Y1). You may assume that for each fence its two endpoints are distinct. Besides, within each test case, the intersection of any pair of fences is either empty or it is an endpoint of both fences. The end of input is indicated with a line containing a single −1.OutputFor each test case, output a single line containing a single integer representing the minimum number of fences that need to be cut down to make the area free.ExampleInput:9\r\n-50 0 0 0\r\n0 0 50 0\r\n-50 0 0 50\r\n0 50 50 0\r\n-50 0 0 -50\r\n0 -50 50 0\r\n0 0 0 -50\r\n0 -50 50 -50\r\n50 -50 50 0\r\n2\r\n0 1 2 3\r\n0 0 2 2\r\n-1Output:4\r\n0",
  "sample_input": "Input:9\r\n-50 0 0 0\r\n0 0 50 0\r\n-50 0 0 50\r\n0 50 50 0\r\n-50 0 0 -50\r\n0 -50 50 0\r\n0 0 0 -50\r\n0 -50 50 -50\r\n50 -50 50 0\r\n2\r\n0 1 2 3\r\n0 0 2 2\r\n-1Output:4\r\n0",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/JARA",
  "scraped_at": "2025-08-17 00:33:19",
  "test_cases": [
    {
      "input": "9\r\n-50 0 0 0\r\n0 0 50 0\r\n-50 0 0 50\r\n0 50 50 0\r\n-50 0 0 -50\r\n0 -50 50 0\r\n0 0 0 -50\r\n0 -50 50 -50\r\n50 -50 50 0\r\n2\r\n0 1 2 3\r\n0 0 2 2\r\n-1",
      "expected_output": "4\r\n0",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1\n5",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n1\n6\n3\n10\n10",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n8",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "12\n50320613\n32962910\n11880033\n90641057\n663753\n65224477\n48707567\n15503825\n40605666\n23624353\n44144331\n95180902",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "17\n9142784\n18354158\n8952650\n15670505\n4404478\n64935247\n25383145\n74058931\n82222129\n9329579\n71571474\n57312494\n61780022\n94375649\n23843833\n34359465\n89354355",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "15\n26255451\n74088598\n24096706\n88813996\n7764963\n79959449\n4766945\n11911052\n4373819\n19844948\n89612272\n5599511\n47272227\n18696683\n94858246",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "8\n6212270\n90575133\n82721212\n34141658\n35915492\n47174674\n19660027\n59331365",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "5\n92808957\n24344169\n86185533\n65312635\n41480474",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "73\n61749\n64052\n80915\n84277\n6453\n62520\n86945\n53612\n56447\n25872\n88375\n5121\n35067\n29105\n29387\n72920\n98582\n70479\n47708\n20408\n42146\n77225\n64174\n32988\n22953\n58550\n57971\n53332\n19411\n76381\n4596\n78999\n43955\n3138\n40220\n62785\n54501\n79833\n30085\n11428\n14004\n5474\n53336\n13268\n15993\n49157\n27591\n64559\n35141\n18241\n50550\n47348\n8107\n12192\n93727\n62237\n35930\n34707\n45436\n52146\n78790\n80537\n92852\n47488\n75275\n82010\n66270\n30585\n36000\n57221\n58752\n89061\n28408",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "103\n76642\n80229\n17299\n13235\n27154\n33502\n28192\n24893\n6148\n48540\n17311\n46607\n97178\n94979\n13752\n2409\n45844\n8101\n78759\n70996\n59035\n35998\n80543\n17560\n92593\n78418\n92431\n86150\n79881\n72995\n32291\n69318\n89936\n57095\n26460\n9189\n21463\n58956\n53764\n9645\n32868\n28283\n39062\n38613\n27086\n95509\n13821\n40519\n86535\n40553\n80900\n42775\n4755\n41528\n90028\n27615\n31041\n2130\n5134\n85895\n16364\n10520\n86756\n85113\n91798\n18835\n18846\n10565\n26296\n91642\n8474\n16075\n23382\n45787\n38716\n36469\n92230\n35205\n15172\n41481\n35036\n8551\n27283\n22352\n96568\n63810\n37108\n34729\n87776\n26283\n11979\n80074\n65943\n63548\n11848\n33548\n10678\n49335\n18841\n28530\n65243\n40000\n85507",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "98\n6014\n44940\n9954\n12258\n7670\n85195\n48366\n51010\n88371\n39522\n15039\n61503\n35876\n19062\n63532\n37502\n49569\n30673\n16360\n36674\n61751\n79156\n90594\n85184\n67087\n90987\n19291\n39336\n40243\n12537\n9640\n80386\n42513\n74181\n18654\n29854\n96788\n54953\n29471\n18061\n94120\n22534\n5622\n78967\n29819\n15534\n76579\n39118\n97136\n28328\n60071\n24604\n54510\n53988\n26301\n80413\n58201\n45297\n98040\n7803\n8024\n1818\n85409\n88152\n58834\n74993\n38857\n22425\n26177\n98407\n56200\n42857\n56803\n99061\n66741\n67009\n85420\n63727\n78637\n43817\n51908\n40975\n76316\n79998\n14128\n95261\n92706\n3997\n10178\n42830\n70191\n84115\n69970\n67935\n72459\n19644\n61128\n29534",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "23\n92946\n46593\n63367\n45726\n78571\n80128\n7209\n63809\n68014\n26904\n40549\n62391\n85630\n58719\n53977\n21254\n28440\n98312\n53894\n55530\n94875\n31299\n5364",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "61\n90388\n64254\n78071\n29350\n24210\n58010\n44854\n25432\n97233\n68901\n69704\n18633\n24593\n58923\n13822\n35270\n38928\n57998\n39873\n73316\n93661\n6936\n5726\n36319\n3956\n54496\n6688\n73489\n62046\n66962\n26499\n97658\n30767\n65418\n84794\n58500\n29595\n76928\n79948\n16128\n54235\n65828\n66345\n98484\n39660\n87203\n41867\n43065\n2532\n27498\n66426\n66848\n72974\n16511\n91504\n96427\n2493\n26083\n55109\n66930\n61852",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "104\n66741\n29014\n95739\n54590\n81656\n3463\n51761\n55162\n94454\n51992\n38541\n64007\n1571\n72374\n56650\n66647\n70553\n61895\n6596\n65973\n89896\n19943\n94139\n44694\n8365\n35682\n82362\n46461\n19326\n22650\n39674\n71342\n27966\n58610\n40592\n74713\n67874\n44303\n29502\n77784\n61137\n61902\n1806\n18798\n98721\n52771\n77308\n73067\n19180\n34283\n58699\n47874\n88399\n20199\n28685\n62423\n74279\n2772\n84988\n35492\n77728\n94940\n42318\n2277\n60707\n59897\n9477\n31838\n21898\n88154\n4369\n13415\n36182\n34564\n85940\n94420\n38741\n80692\n64298\n64391\n58672\n35133\n15634\n80576\n73127\n67337\n47514\n12939\n13570\n77410\n27147\n56322\n16850\n15172\n73741\n65464\n97721\n52924\n63738\n94865\n64426\n77501\n70922\n17051",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "44\n98447\n81562\n66200\n26968\n11769\n94899\n18588\n52597\n99512\n92407\n85869\n50637\n96616\n50986\n30145\n4231\n33791\n95518\n31334\n89031\n73385\n41167\n13845\n97168\n12772\n99624\n15344\n92013\n50299\n92780\n38429\n77741\n23664\n21875\n65993\n23437\n21279\n22669\n47011\n59287\n96775\n10675\n46304\n92272",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "105\n7439715\n66729142\n7342037\n53326772\n23164846\n1709559\n72300571\n84353544\n45007054\n4984459\n71774391\n36355166\n83074442\n42760279\n28760772\n49242275\n23814451\n31070769\n67253315\n80697901\n18348355\n72734295\n13433514\n8563780\n45997921\n66810979\n53738361\n54543224\n81745956\n75837786\n78905562\n18268462\n92546657\n85594148\n19712593\n13972265\n92138140\n26589084\n81916716\n80071480\n60956298\n84849520\n38796085\n25933761\n79015315\n15663837\n162682\n71034755\n3654502\n4773007\n29774150\n44473569\n7062069\n14440447\n50722612\n50849049\n12199545\n31837550\n46983020\n36787987\n69625730\n6918738\n13773443\n28809889\n56987061\n8392514\n88413968\n47866449\n99312252\n7053005\n92516804\n55379721\n81077136\n78026046\n324654\n53274650\n15668010\n15898279\n30426921\n89303519\n56921488\n27496007\n49816610\n25075622\n14938310\n96990694\n95671138\n69887731\n9932581\n47482492\n99470162\n8020927\n69039009\n52029372\n88306714\n90092944\n65823243\n611117\n53384281\n16809544\n62620638\n46784246\n60252359\n24282121\n92545062",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "105\n52080392\n25307139\n50122654\n78535269\n19192859\n38659136\n51991343\n36123292\n2392240\n57632280\n73336032\n63265923\n44493776\n13656350\n54772783\n36002683\n25999120\n91798009\n28571903\n20623165\n25812260\n40931322\n29331776\n66428085\n1579596\n46365429\n88917794\n45683151\n24167679\n62966223\n30874210\n33607615\n88412292\n96383667\n2106086\n44620363\n14063810\n43339839\n1484573\n72099277\n76323726\n67952389\n89390694\n70731888\n23913391\n20551546\n52081051\n1598987\n34529982\n94341802\n18279068\n91858809\n31598920\n24322774\n40618286\n63351189\n27830704\n45995179\n29107370\n62546803\n10941826\n55897214\n28331728\n88877006\n66416591\n68116419\n52093622\n19680204\n1409779\n38845923\n33535747\n26819499\n40948473\n15177717\n9359649\n51258574\n63954409\n85767023\n96965053\n28646376\n30526865\n42010338\n19446680\n47447361\n93615949\n22801102\n35115856\n7555131\n484939\n61403846\n50271035\n86336190\n78522709\n39313937\n68798384\n85651762\n94419357\n30083799\n22518950\n59327410\n45644065\n77465400\n52463385\n64601642\n39765397",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "2\n67316252\n1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 2)"
    },
    {
      "input": "105\n1\n100000000\n1\n100000000\n100000000\n1\n73222392\n100000000\n56170980\n100000000\n100000000\n22125490\n100000000\n87627448\n60084819\n100000000\n100000000\n100000000\n100000000\n1\n100000000\n1\n1\n1\n100000000\n100000000\n92229434\n100000000\n1\n100000000\n100000000\n87146778\n100000000\n39315738\n1\n100000000\n1\n75704609\n100000000\n1\n23418925\n28662891\n7585643\n1\n1\n3303575\n96109825\n100000000\n1\n2245394\n1\n64070459\n1\n1\n1\n100000000\n1\n1\n100000000\n100000000\n100000000\n70111392\n73808672\n1\n40950749\n1\n91802844\n60468997\n1\n35730583\n4490188\n1\n100000000\n12949323\n21228403\n1\n1\n6053566\n100000000\n78699960\n69598903\n100000000\n42243084\n1\n1\n100000000\n1\n100000000\n100000000\n98630981\n31820500\n100000000\n100000000\n1\n100000000\n15088968\n1\n1\n1\n42900797\n1\n100000000\n100000000\n13749092\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 105)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:14",
  "total_test_cases": 20
}
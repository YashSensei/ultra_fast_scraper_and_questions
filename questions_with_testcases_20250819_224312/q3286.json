{
  "problem_code": "problems",
  "title": "Another understanding of Super Dice Game",
  "tags": [],
  "text": "When we were trying to solve the problem SDGAME, we got a misunderstanding of it. We didn't get AC until we were told the original meaning. But we think our kind of understanding is also interesting and is worthy of doing. So enjoy the problem.Alice and Bob are playing a game. The game consists of a circular track of M (2 <= M <= 1,000,000,000) cells labeled 0 through M - 1. Initially both players start at cell 0. The game progresses by having each player take turns rolling one of N (1 <= N <= 10,000) 'super-dice' labeled 0 through N - 1. The actual mechanics of the 'super-dice' is not very well understood; however, it is known that they will only ever turn up a number between 0 and 1,000,000,000 inclusive after a roll. After rolling the super-dice the number of spaces a player moves is determined by the product of a contiguous subsequence of the values shown on the dice(which are available)(There are special rules for determining the range that vary each move that will not be discussed).If all the values are unavailable, the player moves one space. Iff the number on the dice is more than 1,000,000,000 or less than 0, the dice is unavailable.To make matters more complicated, after any turn if Alice and Bob land on the same cell the value shown on all dice(neither available nor unavailable)is multiplied by the label of the cell they are on. Note in this way it is possible for some dice to show numbers greater than 1,000,000,000.After playing this game for a while, Alice and Bob have grown frustrated because the calculations became too difficult. Given the series of R (1 <= R <= 100,000) dice rolls and ranges, help Alice and Bob determine their position after each move. Assume that all dice start out showing 1and all dice are available.InputThe first line contains R, N, and M each separated by a space. R lines follow. Each line will contain d v a b separated by a space. d indicates the label of the dice rolled. v indicates the value shown on the dice. a and b indicate the range of dice used to determine the move distance.OutputR lines containing the position of the player that just rolled after their roll.ExampleInput:6 4 4\r\n0 1000000000 1 1\r\n1 999999998 1 1\r\n2 500000000 3 3\r\n0 1 2 2\r\n3 1 0 3\r\n0 6 0 3Output:1\r\n2\r\n2\r\n2\r\n0\r\n0ExplanationFor your assistance, here is the state of the dice after each turn: (* means unavailable)Before all rolls: [1,1,1,1](0,0)After first roll: [1000000000,1,1,1](1,0)After second roll: [1000000000,999999998,1,1](1,2)After third roll: [1000000000,999999998,500000000,1](2,2)All dice multiplied by 2: [*,*,1000000000,2](2,2)After forth roll: [1,*,1000000000,2](2,2)All dice multiplied by 2: [2,*,*,4](2,2)After fifth roll: [2,*,*,1](0,2)After sixth roll: [6,*,*,1](0,0)All dice multiplied by 0: [0,0,0,0](0,0)",
  "sample_input": "Input:6 4 4\r\n0 1000000000 1 1\r\n1 999999998 1 1\r\n2 500000000 3 3\r\n0 1 2 2\r\n3 1 0 3\r\n0 6 0 3Output:1\r\n2\r\n2\r\n2\r\n0\r\n0",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/SDGAME2",
  "scraped_at": "2025-08-17 00:34:28",
  "test_cases": [
    {
      "input": "6 4 4\r\n0 1000000000 1 1\r\n1 999999998 1 1\r\n2 500000000 3 3\r\n0 1 2 2\r\n3 1 0 3\r\n0 6 0 3",
      "expected_output": "1\r\n2\r\n2\r\n2\r\n0\r\n0",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "6 6 10\n3 7 4 4\n3 1 6 6\n3 5 8 3\n4 1 5 9\n1 4 9 5\n2 9 4 6",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "1 3 10\n6 10 5 2\n4 6 1 1\n3 4 8 10\n1 4 6 4\n8 5 2 7\n4 7 7 1",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "3 6 10\n8 8 4 2\n9 8 2 7\n10 9 2 5\n6 8 7 2\n10 5 8 6\n1 7 2 2",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "3 16 30\n91 33 22 87\n2 93 13 71\n91 44 46 89\n5 28 39 50\n88 71 87 77\n30 42 6 98",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "31 50 35\n37 83 65 1\n3 43 16 96\n14 9 39 75\n44 46 48 62\n66 50 50 71\n32 43 63 38",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "67 47 48\n94 49 20 7\n88 38 97 27\n12 79 47 43\n36 16 87 27\n74 50 71 41\n65 92 35 34",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "83 71 72\n58 44 4 84\n9 82 62 50\n94 89 49 50\n4 64 89 100\n54 54 62 11\n97 98 85 82",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "30 7 23\n62 11 34 54\n27 47 57 9\n34 66 91 50\n58 71 12 9\n64 71 81 61\n1 60 96 78",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "362 98 238\n232 428 100 170\n441 89 498 277\n265 106 405 485\n72 367 323 221\n335 340 67 447\n109 279 56 315",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "459 458 252\n271 300 397 250\n79 243 209 480\n124 170 314 193\n322 94 90 83\n141 224 481 316\n364 284 150 364",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "361 318 294\n311 314 498 87\n374 296 448 90\n458 237 388 384\n462 63 259 104\n138 484 167 467\n56 198 372 237",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "79 421 248\n333 78 460 356\n168 286 209 60\n219 405 464 376\n141 358 313 444\n322 267 323 493\n336 50 269 222",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "358 85 217\n282 277 417 421\n397 303 304 122\n275 220 313 332\n417 254 246 196\n100 380 163 182\n216 79 400 142",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "391 458 178\n469 149 414 124\n398 396 326 453\n106 340 489 69\n494 168 184 373\n274 288 208 181\n198 360 132 362",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "220 334 62\n409 285 411 423\n128 120 200 121\n451 485 339 345\n212 83 434 468\n62 379 401 314\n245 365 421 477",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 999 1000\n999 999 2 1\n1 2 2 999\n1000 1 2 1\n999 2 1 1000\n2 2 1000 999\n1 999 999 999",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 1 1\n999 1000 999 999\n999 1000 2 1000\n1 1000 1 1\n999 999 1000 1\n999 2 1000 2\n2 999 999 1000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:23",
  "total_test_cases": 20
}
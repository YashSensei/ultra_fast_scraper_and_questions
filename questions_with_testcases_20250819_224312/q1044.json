{
  "problem_code": "problems",
  "title": "A Terribly Grimm Problem",
  "tags": [],
  "text": "Grimm's conjecture states that to each element of a set of consecutive composite numbers one can assign a distinct prime that divides it.For example, for the range 242 to 250, one can assign distinct primes as follows:Given the lower and upper bounds of a sequence of composite numbers, find a distinct prime for each. If there is more than one such assignment, output the one with the smallest first prime. If there is still more than one, output the one with the smallest second prime, and so on.InputThere will be several test cases in the input. Each test case will consist of a single line with two integers, lo and hi (4 ≤ lo < hi ≤ 1010), separated by a single space. It is guaranteed that all the numbers in the range from lo to hi inclusive are composite. The input will end with a line with two 0s.OutputFor each test case, output the set of unique primes, in order, all on the same line, separated by single spaces. Output no extra spaces, and do not separate answers with blank lines.Example Input242 250\r\n8 10\r\n0 0Example Output2 3 61 7 41 13 31 83 5\r\n2 3 5",
  "sample_input": "242 250\r\n8 10\r\n0 0",
  "sample_output": "2 3 61 7 41 13 31 83 5\r\n2 3 5",
  "link": "https://www.spoj.com/problems/GRIMM",
  "scraped_at": "2025-08-17 00:33:26",
  "test_cases": [
    {
      "input": "242 250\r\n8 10\r\n0 0",
      "expected_output": "2 3 61 7 41 13 31 83 5\r\n2 3 5",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1 3\n8 10\n8 1",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "10 7\n1 6\n9 1",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "2 5\n7 2\n10 4",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "99 43\n34 58\n46 30",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "60 72\n52 54\n4 9",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "41 54\n12 24\n77 39",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "11 63\n16 46\n73 84",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "71 91\n23 75\n24 47",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "323 160\n402 117\n407 369",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "257 336\n284 177\n89 98",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "258 104\n142 97\n208 118",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "447 251\n287 124\n58 260",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "172 268\n260 142\n432 311",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "429 189\n308 292\n381 339",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "170 233\n234 147\n232 61",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 1\n1000 1\n1 999",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "999 999\n1000 1\n999 999",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:16",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Soccer Challenge",
  "tags": [],
  "text": "A soccer field is divided into squared plots, like a grid of N rows and M columns. The length of a plot side is equal to 1. Fernando likes to practice running only through the boundaries of the plots, he does not like to go inside the plots.Some of the plots are muddy, and some others have been selected by Fernando as target plots. A plot may neither be muddy nor a target one.Starting at the top left corner, he would like to go through the field and return back to the starting point. All plots that lie inside the cycle of his path are considered to be inspected. To make things more interesting he would like his path not to intersect with itself in any point different than the starting point. Luckily, the plots boundaries are so wide that Fernando can go along the same boundary multiple times without intersecting his own path.Fernando would like to inspect all target plots, but not any muddy plots. Martin, who plays in the opposing team, challenged Fernando that he could do a shortest path starting from the lower right corner. Can you help Fernando to get his shortest path, and decide whether it is shorter than the one?InputInput consist of many test cases.First line of input starts with two integers R and C (1 ≤ R, C ≤ 50), which defines the rows and columns the soccer field has been divided into.Next, the soccer field is described in R rows, each containing C characters. Chars I, X, and O, represents target plots (to inspect), muddy plots, and common plots respectively. The quantity of target plots plus the quantity of muddy plots will not exceed 10.There will be no spaces between the C characters of each line describing the soccer field.End of the input is indicated by a line containing two zeros, which should not be processed.OutputThe output of each test case should be a separate line consisting of the name of the player who has the shortest path to inspect the target plots but not the muddy plots, or the word “Tie” in case of a tie, followed by a number representing the length of the shortest path for that player. The examples may clarify the format.ExampleInput:1 1I2 2XXXI2 2XIIX3 3IIIIXIIII2 2IOOO0 0Output:Tie 4Martin 4Tie 10Tie 18Fernando 4",
  "sample_input": "Input:1 1I2 2XXXI2 2XIIX3 3IIIIXIIII2 2IOOO0 0Output:Tie 4Martin 4Tie 10Tie 18Fernando 4",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/SOCCERCH",
  "scraped_at": "2025-08-17 00:33:14",
  "test_cases": [
    {
      "input": "1 1I2 2XXXI2 2XIIX3 3IIIIXIIII2 2IOOO0 0",
      "expected_output": "Tie 4Martin 4Tie 10Tie 18Fernando 4",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "10 7 8 7 5 1 10 2 5 9 3 10\n5 rzwrv iud eoxxj mxxz pgyfxl 7",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "3 2 1 2 6 3 7 2 5 6 4 10\n2 eusd wl x qntw y 2",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "2 3 10 4 3 5 1 4 3 10 5 10\n3 tgyr gomq fzsgpq gxtng nktdi 2",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "80 4 98 74 70 8 29 83 97 57 94 95\n20 rzc xiusd w rhkwqzjndo bje 34",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "45 56 16 32 8 54 51 30 13 37 84 34\n100 u p fvzyfg ylzmilushg sxcb 45",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "97 34 80 88 58 42 98 9 43 67 14 25\n42 mvuu ve a bgxda cdjlu 57",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "25 42 16 28 6 45 86 97 3 32 78 88\n81 cfxf srrflr gnx ddjp is 28",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "76 18 59 58 63 50 85 34 45 89 13 72\n33 b h fkw egtivowcek meoyxe 71",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "136 218 398 371 208 302 368 335 152 166 186 313\n337 u glxmwz ja wko cyma 99",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "153 249 249 89 300 179 178 138 56 95 128 188\n493 tdlk qfhxys jxyyr czpsvsg g 108",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "86 446 252 114 493 280 442 208 226 443 160 272\n188 jow mlqzug dhugu namh xzj 283",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "188 315 500 281 79 204 236 98 192 244 483 236\n334 rrah buym bu u krzzg 230",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "435 404 136 241 83 413 480 434 156 113 92 198\n409 psb adkn vmot l zslww 311",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "383 329 88 421 88 129 315 380 394 142 141 157\n434 jyui wz vcthuy urkdtn gqm 199",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "197 225 255 498 272 339 470 401 436 128 189 445\n190 vzv ou ld n lo 118",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 c se vmqcat eukmqul zxhuay 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 briyy ag mfb pjly ozymnq 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 2 999 1000 999 1 1000 1000 1000 999 1000 999\n2 oss smud tgmtj on cdm 999",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 1000 2 1000 1 1 999 1000 1000 2 1000 999\n1 iyats h zsfxx ywl gnzq 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:14",
  "total_test_cases": 20
}
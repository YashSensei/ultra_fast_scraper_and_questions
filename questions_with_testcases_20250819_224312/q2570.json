{
  "problem_code": "problems",
  "title": "Two Famous Companies",
  "tags": [],
  "text": "In China, there are two companies which offer the internet service for the people from all cities: China Telecom and China Unicom. They both are planning to build cables between cities. The government wants to connect all the cities in minimum costs of course. So the minister of finance Mr. B wants to choose some of the cable plans from the two companies and calculate the minimum cost needed to connect all the cities. Mr. B knows that there areN-1 cables should be built in order to connect allNcities of China. For some political reason, Mr. B should chooseKcables from the China Telecom and the restN-1-Kcables from the China Unicom. Your job is to help Mr. B determine which cables should be built and the minimum cost to build them. You may assume that the solution always exists.InputEach test case starts with a line containing the number of citiesN(1 ≤N≤ 50,000), number of cable plansM(N-1 ≤M≤ 100,000) and the number of required cables from China TelecomK(0 ≤K≤N-1).  This is followed byMlines, each containing four integersa,b,c,x(0 ≤a,b≤ N-1,a≠b, 1 ≤c≤ 100,x=[0,1]) indicating the pair of cities this cable will connect, the cost to build this cable and the company this cable plan belongs to.x=0 denotes this cable plan belongs to China Telecom andx=1 denotes this cable plan is from China Unicom.OutputFor each test case, display the case number and the minimum cost of the cable building plan.ExampleInput:2 2 1\r\n0 1 1 1\r\n0 1 2 0\r\n2 2 0\r\n0 1 1 1\r\n0 1 2 0Output:Case 1: 2\r\nCase 2: 1ExplanationIn the first case, there are two cable plans between the only two cities, one from China Telecom and one from China Unicom. Mr. B needs to choose the one from China Telecom to satisfy the problem requirement even the cost is higher.In the second case, Mr. B must choose the cable from China Unicom, which leads the answer to 1.",
  "sample_input": "Input:2 2 1\r\n0 1 1 1\r\n0 1 2 0\r\n2 2 0\r\n0 1 1 1\r\n0 1 2 0Output:Case 1: 2\r\nCase 2: 1",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/COMPANYS",
  "scraped_at": "2025-08-17 00:34:11",
  "test_cases": [
    {
      "input": "2 2 1\r\n0 1 1 1\r\n0 1 2 0\r\n2 2 0\r\n0 1 1 1\r\n0 1 2 0",
      "expected_output": "Case 1: 2\r\nCase 2: 1",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "7 3 7\n8 9 3 2\n5 9 7 7\n3 2 8\n10 1 7 1\n8 2 9 4",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "6 2 8\n9 7 7 2\n3 7 9 5\n3 10 2\n4 5 3 7\n6 9 4 9",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "1 8 6\n10 8 3 8\n8 5 10 4\n1 8 3\n7 7 7 9\n6 1 4 5",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "13 12 25\n3 34 25 41\n15 27 10 4\n23 31 27\n7 9 9 38\n28 48 17 21",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "5 38 11\n41 39 39 19\n5 23 28 6\n25 4 27\n23 20 16 11\n15 31 9 33",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "50 21 49\n1 4 5 20\n15 26 48 44\n26 33 31\n42 3 36 1\n50 5 1 12",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "39 45 41\n43 2 19 16\n3 20 48 25\n28 45 33\n17 35 28 30\n30 46 34 30",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "50 24 10\n29 20 42 33\n22 50 4 11\n7 8 16\n21 47 24 5\n30 1 46 24",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "23 5 25\n18 6 22 4\n23 2 4 20\n24 17 17\n16 2 2 4\n4 12 24 14",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "7 10 13\n3 11 19 17\n9 4 12 12\n12 13 13\n24 20 18 22\n15 17 25 24",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "19 2 16\n19 18 3 12\n19 5 13 9\n3 5 19\n19 20 14 22\n13 5 10 5",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "7 21 19\n3 6 16 12\n13 4 19 21\n16 14 20\n5 3 18 18\n25 9 12 7",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "13 17 5\n3 14 5 5\n23 12 25 6\n2 21 7\n3 23 22 24\n17 8 9 23",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "21 9 15\n2 20 4 11\n13 24 16 7\n15 6 22\n8 16 8 24\n12 7 14 3",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "24 14 20\n19 7 10 6\n3 2 12 12\n4 11 3\n16 10 20 19\n13 24 2 15",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "50 50 50\n50 50 50 50\n50 50 50 50\n50 50 50\n50 50 50 50\n50 50 50 50",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "50 50 50\n50 50 50 50\n50 50 50 50\n50 50 50\n50 50 50 50\n50 50 50 50",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "50 2 2\n2 50 1 1\n50 49 2 50\n1 49 49\n50 2 2 49\n2 50 1 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "49 2 49\n49 2 2 1\n1 2 49 50\n49 2 1\n49 50 2 49\n1 2 2 50",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:20",
  "total_test_cases": 20
}
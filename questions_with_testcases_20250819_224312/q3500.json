{
  "problem_code": "problems",
  "title": "Power with Combinatorics(HARD)",
  "tags": [],
  "text": "Your task is to calculate abexp.a: provided in input, 0 ≤ a ≤ 105b: provided in input, 0 ≤ b ≤ 105exp = (nC0)2+ (nC1)2+ (nC2)2+ ... +(nCn)2n: provided in input, 0 ≤ n ≤ 105Note: The output for 00should be 1.nCr denotes n choose r.As the answer can be too large, you need to output modulo 109+7.InputThe first line of each input file contains number of test cases t (t ≤ 1000).Then follows a new line.Then follows t lines, each containing 3 integers, (i.e. a b n in order) each of them separated by a space.OutputOutput contains t lines, ith line contains the answer of the ith test case.ExampleInput:1\r\n\r\n1 1 1Output:1ExplanationIn the first test case, the Value of exp is 2, value of 112is 1, so output is 1.Note: First try out the tutorial version where limits are low.POWRTUClickhereto see my set of problems at SPOJ.",
  "sample_input": "Input:1\r\n\r\n1 1 1Output:1",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/POWPOW2",
  "scraped_at": "2025-08-17 00:34:33",
  "test_cases": [
    {
      "input": "1\r\n\r\n1 1 1",
      "expected_output": "1",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1\n5",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "2\n6\n5",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n5\n4\n4\n1\n5",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "19\n70139721\n79751079\n74522050\n66047279\n68658738\n91365669\n47640828\n70701794\n73883051\n81123393\n19671713\n58278168\n63015156\n61104006\n29180746\n80422627\n71478093\n70383018\n48848188",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "17\n25177558\n98845300\n16718296\n97915254\n28082080\n83527939\n60906689\n26183452\n2719745\n71955809\n2994180\n26511876\n77874998\n75580897\n59054847\n96397474\n86470944",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "5\n99559740\n11431202\n81610284\n67279981\n32918329",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "15\n81980826\n29743940\n30356514\n68341866\n51794922\n20324212\n90499314\n5222717\n16292154\n2850537\n48459388\n70189145\n29635170\n5650397\n4609457",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "6\n62046527\n86501890\n79714007\n79894729\n56301363\n14400196",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "53\n45686\n73085\n58074\n46114\n79033\n88278\n63383\n27152\n61175\n18091\n12426\n92019\n73304\n17365\n55932\n43093\n95505\n61629\n77394\n15379\n41402\n85334\n61164\n21368\n74217\n45332\n39357\n80210\n39248\n36324\n5927\n43896\n72414\n48062\n540\n29667\n19853\n26753\n39849\n31847\n29790\n5234\n85802\n56201\n47902\n74250\n73614\n24244\n79792\n85480\n94226\n51003\n3142",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "89\n7577\n87399\n49649\n79652\n35404\n74060\n1903\n80833\n69449\n31364\n37002\n56602\n61770\n35513\n86717\n5880\n82467\n15507\n45396\n45530\n52794\n14097\n85599\n511\n78108\n75722\n81287\n5754\n1266\n92190\n3789\n47029\n4045\n85954\n30726\n65344\n67634\n66968\n87819\n37570\n32411\n34360\n90418\n1122\n82422\n50981\n5349\n83242\n12213\n96907\n26993\n41037\n19187\n4582\n84701\n42935\n95186\n44278\n2773\n18897\n66349\n72765\n31215\n51613\n58447\n2820\n72363\n47402\n8384\n7177\n73131\n36833\n15764\n75744\n25706\n15041\n11259\n58977\n64804\n12798\n17812\n23483\n69766\n59983\n85402\n15483\n7043\n53737\n27118",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "79\n91320\n92748\n95553\n80650\n32041\n58707\n1273\n30411\n65168\n5853\n4979\n90127\n24511\n43650\n29765\n7095\n84334\n91837\n10577\n31873\n99781\n93081\n46685\n58172\n45525\n39528\n12853\n30834\n93508\n46739\n55557\n39226\n31342\n92089\n12017\n61106\n19542\n62188\n87019\n60252\n64912\n27393\n11051\n72174\n27983\n73032\n71494\n97525\n84841\n6498\n80031\n87991\n5599\n5532\n59617\n58199\n88720\n4312\n72685\n10185\n23876\n22111\n22802\n14816\n77721\n89636\n76633\n60318\n59950\n81252\n10061\n84295\n9371\n60235\n46088\n91588\n69311\n36818\n86524",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "103\n7001\n63495\n59203\n64357\n17549\n98241\n37405\n64923\n70240\n16158\n24385\n94991\n60049\n47045\n16640\n88002\n26769\n71483\n1590\n54347\n7162\n38648\n73817\n20535\n55155\n62505\n89033\n71879\n81611\n51805\n71967\n83344\n41637\n55604\n25266\n84030\n13165\n99680\n14876\n91517\n49861\n48199\n80817\n6784\n67842\n6273\n81826\n14989\n58111\n21780\n14544\n82600\n28826\n29487\n9229\n1525\n63772\n26815\n36663\n53016\n94871\n38037\n14751\n43573\n17596\n39746\n71347\n49818\n53323\n30307\n42323\n56674\n44290\n34360\n88137\n84588\n71883\n86511\n14358\n46109\n77008\n52159\n43132\n89481\n97617\n46173\n1895\n16345\n6530\n49153\n77642\n49750\n52616\n21424\n44093\n45356\n38305\n20860\n64344\n55291\n87302\n57439\n25967",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "34\n86687\n60252\n5780\n28844\n83373\n18190\n87092\n88039\n34979\n27562\n42907\n26659\n82500\n26964\n14976\n99498\n20035\n59462\n51764\n59657\n77880\n71277\n86604\n87964\n69608\n54003\n94628\n13449\n44990\n2358\n70046\n8537\n63307\n48192",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "76\n41650\n51171\n30481\n7478\n57279\n25068\n56979\n45036\n14682\n94469\n69864\n63619\n88446\n43326\n31609\n48345\n46664\n37749\n72481\n78394\n79772\n21613\n23703\n33777\n32623\n3743\n27115\n75444\n34497\n83821\n25885\n37733\n96437\n9722\n10122\n2090\n33307\n22208\n92553\n60389\n34244\n38600\n33715\n1011\n56242\n89264\n13614\n25844\n85521\n65143\n52669\n14440\n45834\n9081\n12413\n60667\n56731\n94910\n33404\n2222\n55576\n40676\n41056\n68346\n51040\n34529\n33011\n65373\n33377\n40996\n6949\n8661\n99458\n69723\n91132\n15563",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "58\n63478\n10762\n17289\n20912\n68114\n21\n91503\n42967\n79159\n44398\n20318\n85343\n20142\n15543\n26442\n4118\n5714\n35789\n63939\n80360\n85175\n79567\n1254\n36142\n16681\n11618\n21271\n13870\n6800\n36123\n1405\n5774\n20511\n94883\n63600\n17781\n90460\n79784\n41494\n23182\n29599\n79717\n41961\n96124\n2742\n64401\n7489\n44738\n32350\n34307\n20852\n11293\n99752\n80853\n31622\n95384\n46921\n92933",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "105\n27030156\n88285851\n95662438\n39435659\n54040307\n6486774\n73341323\n8086182\n91682554\n95220870\n37911142\n29990028\n98774562\n37278521\n29026928\n24003336\n8012099\n60244851\n11457419\n57497721\n12036442\n71024230\n73384862\n38201861\n5249383\n71259588\n33889911\n28871184\n32281214\n91187781\n46173896\n78228675\n50985814\n99471255\n33496284\n87726783\n48951036\n4501675\n14624670\n79429963\n78153329\n29179844\n49082739\n36026856\n78307229\n90500021\n82790407\n21040282\n32874280\n18494419\n95072004\n96477192\n12653155\n49110213\n89215990\n62297052\n2320794\n47662663\n47757386\n73397517\n49721056\n6763536\n69434319\n59959659\n34305489\n35008481\n2092279\n68955110\n95665610\n14279839\n19871106\n27737943\n5046924\n65033346\n9854881\n4658547\n93479233\n35548863\n60696732\n79707746\n14547041\n61587667\n49283500\n1373283\n20884104\n71174103\n13765148\n14013087\n89368507\n40385905\n11815773\n78161268\n22904579\n43147153\n78932823\n18789870\n30061600\n20857227\n54653202\n61697523\n17953106\n48719807\n99030623\n76114647\n74031784",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "105\n49401044\n46858020\n52165419\n39169229\n62531671\n73150499\n3044043\n57794419\n75096820\n27549230\n30413229\n56613476\n33375060\n16475790\n85627794\n98488146\n74222988\n18858678\n77571157\n67143078\n27749027\n40531203\n98464334\n34731070\n64864085\n35877258\n97859043\n37448357\n61777610\n827482\n48360208\n16869254\n13226783\n65542166\n98122237\n72359677\n44277970\n26656702\n97575747\n63177007\n22663137\n82975331\n4720082\n95672872\n71446276\n68137155\n98748543\n1174821\n30943221\n43080080\n5383369\n15820064\n647930\n4856167\n1733826\n80569327\n99423128\n36427146\n55049765\n98683517\n48712880\n55428726\n67066781\n90867688\n87778037\n4068029\n75455183\n11388457\n90649346\n40900793\n74076012\n59939438\n7383550\n73524487\n91671778\n87282872\n19792080\n60811625\n68502738\n80294932\n35578699\n45177562\n88723705\n61954778\n94248143\n62667459\n52656972\n34067903\n54651928\n91415058\n49308197\n2928048\n29007895\n96353782\n3015056\n54871367\n54522856\n95273233\n72949598\n5501404\n22900085\n38589586\n66472462\n95103483\n41014374",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "1\n83809907",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 1)"
    },
    {
      "input": "105\n100000000\n9564080\n100000000\n73428826\n88120882\n1\n1\n100000000\n1\n1\n48914052\n100000000\n100000000\n100000000\n1\n99706541\n100000000\n66524461\n82213451\n45974136\n98881114\n1\n1\n1\n100000000\n1\n100000000\n75298074\n37894355\n32632237\n97529096\n91845557\n100000000\n42964337\n100000000\n1\n96035012\n1\n1\n1\n1\n100000000\n1\n1\n100000000\n100000000\n81240528\n100000000\n1\n1\n100000000\n1\n1\n100000000\n100000000\n1\n100000000\n100000000\n1\n46323077\n32106193\n51059697\n100000000\n73606843\n1\n100000000\n100000000\n1\n1\n1\n94128101\n72741104\n25284714\n100000000\n100000000\n100000000\n94379293\n1\n100000000\n92407503\n100000000\n90867984\n100000000\n100000000\n53041498\n100000000\n1\n49355118\n100000000\n1\n80903664\n100000000\n52020432\n100000000\n1\n1\n17250788\n1\n100000000\n19492013\n1\n79786067\n1\n100000000\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 105)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:24",
  "total_test_cases": 20
}
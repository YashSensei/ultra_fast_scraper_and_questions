{
  "problem_code": "problems",
  "title": "Ada and Apple",
  "tags": [],
  "text": "Ada the Ladybug is currently on a trip on appletree. There are many apples on the tree connected with branches. Each apple is inhabited by either Psylloideas or by Woolly Apple Aphids. Psylloideas and Aphids doesn't like each other, so it is strictly prohibited to walk from apple of Psylloideas to apple of aphids (and vice versa). Ada has some questions, whether it is possible to go from nodeIto nodeJ.Anyway note, that as Aphids and Psyllodeas doesn't like each other, they sometime conquer an apple of the others. Also note, that it is a real apple tree (not some bush) so no apple is connected with more than 50 other apples.InputThe first line contains1 ≤ N, Q ≤ 3*105, number apples on tree and number for queries.The next line containsNcharacters (either 0 or 1), indicating whetherithapple belongs to Psyllodeas or to Aphids.NextN-1lines contains two numbers, the branches (edges) of apple tree (0 ≤ I, J < N,I ≠ J).Each of followingQlines contains one of following types of queries:0 I,0 ≤ I < N, meaning that ownership ofIthapple has changed.1 I J,0 ≤ I, J < N, question, whether it is possible to go fromIthtoJthapple.OutputFor each query of second kind (1) print \"YES\", if it is possible or \"NO\" if it is impossible!Example Input8 11\r\n00111100\r\n0 1\r\n1 7\r\n1 2\r\n2 3\r\n2 6\r\n2 4\r\n4 5\r\n1 1 2\r\n1 0 7\r\n1 6 5\r\n1 2 3\r\n1 6 7\r\n0 2\r\n1 1 2\r\n1 0 7\r\n1 6 5\r\n1 2 3\r\n1 6 7Example OutputNO\r\nYES\r\nNO\r\nYES\r\nNO\r\nYES\r\nYES\r\nNO\r\nNO\r\nYES",
  "sample_input": "8 11\r\n00111100\r\n0 1\r\n1 7\r\n1 2\r\n2 3\r\n2 6\r\n2 4\r\n4 5\r\n1 1 2\r\n1 0 7\r\n1 6 5\r\n1 2 3\r\n1 6 7\r\n0 2\r\n1 1 2\r\n1 0 7\r\n1 6 5\r\n1 2 3\r\n1 6 7",
  "sample_output": "NO\r\nYES\r\nNO\r\nYES\r\nNO\r\nYES\r\nYES\r\nNO\r\nNO\r\nYES",
  "link": "https://www.spoj.com/problems/ADAAPPLE",
  "scraped_at": "2025-08-17 00:33:07",
  "test_cases": [
    {
      "input": "8 11\r\n00111100\r\n0 1\r\n1 7\r\n1 2\r\n2 3\r\n2 6\r\n2 4\r\n4 5\r\n1 1 2\r\n1 0 7\r\n1 6 5\r\n1 2 3\r\n1 6 7\r\n0 2\r\n1 1 2\r\n1 0 7\r\n1 6 5\r\n1 2 3\r\n1 6 7",
      "expected_output": "NO\r\nYES\r\nNO\r\nYES\r\nNO\r\nYES\r\nYES\r\nNO\r\nNO\r\nYES",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1 8\n8\n8 3\n2 7\n4 5\n6 6\n2 2\n6 9\n8 9\n1 8 10\n2 3 4\n6 9 9\n1 8 2\n4 8 2\n6 3\n7 5 10\n7 7 1\n2 6 2\n8 1 6\n9 6 5",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "7 9\n4\n3 9\n10 3\n1 4\n3 8\n9 4\n9 7\n9 4\n6 8 7\n4 3 5\n9 9 2\n10 5 5\n3 10 6\n5 10\n9 5 6\n10 5 5\n4 2 8\n5 10 3\n2 3 1",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "7 7\n6\n8 6\n2 8\n10 4\n5 10\n1 9\n9 10\n2 6\n5 3 5\n10 6 7\n5 2 1\n8 3 7\n2 10 6\n2 1\n6 3 3\n4 8 5\n4 7 6\n6 8 2\n4 2 8",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "32 14\n49\n52 78\n32 6\n24 38\n27 68\n22 8\n76 72\n23 92\n3 38 16\n10 98 8\n20 9 82\n1 48 13\n7 77 80\n98 4\n98 3 19\n77 3 73\n42 41 100\n99 47 42\n39 32 29",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "48 28\n18\n92 59\n16 43\n51 81\n9 61\n99 7\n38 2\n2 72\n22 61 19\n90 54 48\n41 7 24\n39 68 11\n42 38 57\n28 69\n21 95 74\n76 16 73\n5 63 50\n60 50 12\n4 49 83",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "92 16\n43\n14 31\n51 21\n74 64\n56 49\n60 76\n90 36\n81 17\n27 33 63\n86 55 74\n75 11 100\n63 58 37\n76 34 80\n94 81\n79 84 68\n46 23 63\n100 99 10\n88 48 13\n23 67 89",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "12 47\n48\n27 19\n14 47\n47 64\n88 95\n86 48\n90 19\n29 58\n78 6 10\n88 44 85\n52 10 45\n7 79 54\n88 93 16\n83 94\n28 12 46\n53 70 55\n36 72 53\n72 57 50\n30 42 35",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "84 25\n2\n70 21\n48 54\n5 46\n76 14\n16 42\n31 40\n43 55\n69 67 54\n52 67 56\n19 99 40\n38 68 83\n72 52 86\n21 72\n30 84 18\n50 58 72\n54 40 40\n15 15 48\n81 40 35",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "462 176\n132\n220 261\n50 234\n258 430\n244 188\n231 471\n162 456\n205 89\n354 488 236\n353 290 481\n285 446 414\n421 209 320\n190 412 319\n490 337\n360 155 108\n434 99 246\n289 416 109\n192 441 456\n85 174 288",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "420 464\n61\n233 402\n451 56\n159 410\n155 377\n337 312\n139 416\n220 270\n163 311 250\n337 188 493\n154 76 238\n303 231 265\n142 216 473\n155 267\n419 174 486\n160 289 132\n182 331 124\n351 352 499\n323 276 69",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "70 187\n261\n103 56\n124 179\n145 287\n363 117\n115 432\n406 475\n424 181\n96 489 387\n99 331 390\n466 179 109\n71 63 300\n109 64 121\n69 441\n188 442 422\n238 401 274\n359 491 218\n475 449 54\n184 405 151",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "394 265\n482\n377 494\n209 289\n328 477\n500 356\n243 272\n85 367\n297 137\n202 231 402\n274 436 307\n168 95 363\n116 232 82\n105 252 136\n480 123\n77 353 243\n136 354 329\n281 100 334\n164 248 170\n75 389 290",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "390 281\n331\n177 389\n317 301\n500 354\n285 420\n479 130\n396 56\n162 237\n178 168 450\n401 150 397\n161 450 114\n365 327 304\n104 253 166\n65 118\n51 226 385\n341 220 121\n55 339 107\n92 107 430\n333 299 327",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "76 407\n67\n285 150\n470 338\n135 374\n224 66\n63 298\n236 85\n88 459\n64 400 381\n274 487 219\n466 55 326\n253 307 256\n403 55 381\n100 343\n95 335 148\n126 66 331\n53 442 344\n284 349 211\n454 162 382",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "351 340\n479\n108 407\n447 84\n431 294\n448 77\n334 235\n356 316\n221 128\n160 493 414\n235 489 151\n384 288 261\n222 81 187\n416 104 85\n462 70\n412 330 161\n465 389 362\n114 129 202\n334 171 336\n136 212 441",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000\n1 1000\n1000 2\n1000 1\n1000 2\n2 1000\n999 1\n1 999\n1 2 1\n2 1000 2\n1 999 1\n999 999 999\n1 1000 1000\n1000 999\n1 1 1\n999 999 1\n1000 1000 1000\n999 1 999\n999 1000 1000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 1000\n999\n2 1\n999 999\n1000 1000\n2 2\n999 999\n1 2\n1000 2\n2 1000 999\n1 2 1000\n999 2 2\n1 999 2\n999 999 1000\n1 2\n999 2 1\n2 2 1000\n2 1 2\n1000 1000 1\n999 999 1000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:15",
  "total_test_cases": 20
}
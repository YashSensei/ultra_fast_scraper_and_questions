{
  "problem_code": "problems",
  "title": "Elimination",
  "tags": [],
  "text": "Elimination of contestants from a live IQ contest on a TV channel is decided in phases.Initially at phase 0,Ncontestants, whereN= 2n,n< 10, are selected through a special online IQ contest in which a total ofM(M>N) contestants participate. The contestants are identified by distinct registration numbers 1, 2 ...M. The selected contestants are ranked distinctly from 1 toNaccording to their performance in the online contest. They are qualified to participate in the live contest.In thepthphase,p= 1, 2 ...n,Kpcontestants participate in the live contest, whereKp= 2n-p+1. On the basis of response to questions presented during the show,Kp/ 2 ofKpcontestants are ranked distinctly from 1 toKp/ 2. TheseKp/ 2  contestants qualify to participate in the next phase. At thenthphase there are only two contestants and the one selected at this phase is the winner of the contest.You are required to write a program that identifies the winner of the contest, given the following information:INFO_1: Registration numbers ofNcontestants who are selected through the online IQ contest, in order of the rank in the online IQ contest, andINFO_2: A total ofN- 1 qualified contestants in different phases;K2in phase 1,K3in phase 2 ... andKn+1in phasen. Qualified contestants of different phases appear in order of phases, i.e., phase 1, phase 2 ... phasen. Further, qualified contestants in a phase, say phasep, appear in the order of the rank in the phase, i.e., the rank in phasep. A qualified contestant of a phase, say phasep, is identified by his/her rank in the previous phase, i.e., in phasep- 1.InputInput may contain multiple test cases. For each case there are two input lines.The first line givesNintegers representing INFO_1 while the second line givesN- 1 integers representing INFO_2.In each input line integers are separated by space. The input terminates with a line containing0as input.OutputFor each test case there is only one output line. The line prints the registration number of the winner of the contest.ExampleInput:23 18 6 20\r\n4 2 2\r\n29 57 4 33 5 12 16 18\r\n7 1 5 3 2 1 1\r\n0Output:18\r\n29",
  "sample_input": "Input:23 18 6 20\r\n4 2 2\r\n29 57 4 33 5 12 16 18\r\n7 1 5 3 2 1 1\r\n0Output:18\r\n29",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/ELIM",
  "scraped_at": "2025-08-17 00:33:10",
  "test_cases": [
    {
      "input": "23 18 6 20\r\n4 2 2\r\n29 57 4 33 5 12 16 18\r\n7 1 5 3 2 1 1\r\n0",
      "expected_output": "18\r\n29",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1 2 10 7\n2 7 9\n7 4 8 10 6 10 5 4\n8 9 5 10 6 4 1\n5",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "6 6 1 9\n2 5 9\n6 10 1 7 10 8 5 9\n6 5 1 9 7 1 2\n7",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "4 2 3 4\n2 7 1\n4 3 7 5 3 10 2 9\n2 4 10 8 10 6 3\n10",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "1 7 6 2\n9 6 8\n4 8 5 9 7 8 10 3\n10 1 9 6 9 5 3\n2",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "10 2 8 8\n5 9 1\n10 1 1 7 2 4 5 2\n9 3 6 5 5 4 7\n2",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "3 7 9 2\n1 7 2\n2 6 3 2 2 4 6 10\n3 5 3 5 9 4 10\n8",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "3 4 8 4\n1 5 4\n7 10 5 10 4 5 10 4\n4 5 3 10 6 10 8\n9",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "9 2 5 2\n9 6 2\n9 10 5 7 6 9 8 9\n4 5 1 10 2 7 4\n4",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "2 1 3 3\n2 4 4\n1 2 1 5 2 5 5 3\n3 2 4 3 3 3 1\n2",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "1 4 4 1\n1 5 2\n4 3 3 4 4 4 4 2\n1 1 5 2 5 3 4\n3",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "1 3 2 3\n3 5 3\n2 5 1 2 1 3 4 4\n4 2 3 1 4 1 5\n1",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "2 3 1 1\n2 4 2\n2 2 5 2 4 5 5 3\n3 3 4 1 5 3 2\n5",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "3 1 4 3\n5 2 2\n5 3 2 3 3 2 2 1\n1 2 2 4 2 4 5\n4",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "1 4 1 1\n3 3 1\n5 2 5 4 4 1 2 5\n3 4 3 4 2 1 5\n2",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "2 2 3 4\n4 5 5\n4 4 5 4 2 2 3 2\n5 4 5 5 2 3 1\n5",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "10 10 10 10\n10 10 10\n10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10\n10",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "10 10 10 10\n10 10 10\n10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10\n10",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 2 9 10\n2 9 1\n2 1 1 10 10 9 10 2\n2 10 10 10 10 10 10\n9",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 2 9 1\n2 10 2\n9 2 10 9 2 1 10 10\n2 2 1 9 9 2 10\n9",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:14",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Hidden Triangle",
  "tags": [],
  "text": "Assume that each '0' or '1' in the array represents a point on a plane and the distance\r\nbetween each pair of neighbouring\r\npoints row wise or column wise is unity. Assume further that every\r\nneighbouring pair of1's,\r\nrow wise, column wise or diagonally is connected by a line segment. Two line segments emerging\r\nfrom a point, either join together to\r\nform a longer line segment or form an angle of45o,90oor135o, thus forming right-angled isosceles triangles. The\r\nexistence of hidden right-angled isosceles triangles in an array is illustrated\r\nin the figure below.InputInput consists of multiple test cases.For each test case the first line gives\r\nthree integers: the case numberk, the number of rowsmand the number of\r\ncolumnsnof the given array. A space appears between two\r\nneighbouring integers.Each of the nextmlines gives a string\r\nof0's and1's of lengthn; thei-th line gives thei-th row of the array.Input terminates with a value zero for case numberk.OutputFor each test case, display output in\r\none line. The line contains the case numberkand the area of the largest\r\nright-angled isosceles triangle hidden in the array. The area is a real number\r\nwith one digit after the decimal point. If a triangle does\r\nnot exist then output '0.0' as the area.Sample Input1 3 3\r\n101\r\n100\r\n101\r\n2 4 6\r\n001001\r\n010101\r\n111111\r\n000001\r\n0Sample Output1 0.0\r\n2 4.0Kanpur-Kolkata 2004-2005",
  "sample_input": "1 3 3\r\n101\r\n100\r\n101\r\n2 4 6\r\n001001\r\n010101\r\n111111\r\n000001\r\n0",
  "sample_output": "1 0.0\r\n2 4.0",
  "link": "https://www.spoj.com/problems/HIDTRI",
  "scraped_at": "2025-08-17 00:33:13",
  "test_cases": [
    {
      "input": "1 3 3\r\n101\r\n100\r\n101\r\n2 4 6\r\n001001\r\n010101\r\n111111\r\n000001\r\n0",
      "expected_output": "1 0.0\r\n2 4.0",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "6 9 1\n10\n1\n2\n10 5 2\n8\n4\n10\n7\n2",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "5 6 6\n7\n6\n3\n8 9 2\n5\n9\n2\n2\n10",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "1 10 1\n8\n4\n1\n3 1 2\n2\n4\n3\n3\n5",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "10 74 15\n17\n55\n54\n30 98 25\n38\n23\n7\n68\n2",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "13 94 78\n44\n67\n87\n67 14 70\n81\n98\n23\n57\n10",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "22 99 63\n90\n16\n36\n59 29 91\n98\n66\n23\n72\n22",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "83 53 19\n6\n7\n15\n25 48 85\n98\n54\n85\n62\n64",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "26 10 94\n98\n21\n2\n92 64 30\n1\n84\n13\n30\n54",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "52 256 111\n135\n408\n161\n97 105 361\n471\n64\n440\n419\n427",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "426 477 257\n425\n435\n300\n65 454 233\n460\n231\n62\n121\n251",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "172 70 333\n337\n224\n135\n184 363 393\n311\n344\n202\n400\n411",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "325 393 189\n184\n60\n393\n206 227 408\n209\n410\n319\n113\n192",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "63 425 465\n125\n282\n128\n162 157 274\n480\n181\n278\n207\n371",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "458 262 324\n194\n491\n395\n328 354 459\n383\n299\n115\n328\n412",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "315 128 361\n54\n410\n94\n364 361 189\n415\n423\n165\n54\n195",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000\n1000\n1000\n1000\n1000 1000 1000\n1000\n1000\n1000\n1000\n1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000\n1000\n1000\n1000\n1000 1000 1000\n1000\n1000\n1000\n1000\n1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "999 1000 2\n1000\n1\n1\n1 2 1\n1000\n999\n1000\n2\n2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 999 999\n999\n999\n2\n1000 999 1000\n1000\n1000\n2\n1000\n1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:14",
  "total_test_cases": 20
}
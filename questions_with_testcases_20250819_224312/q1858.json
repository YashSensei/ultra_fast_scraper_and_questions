{
  "problem_code": "problems",
  "title": "Party Schedule",
  "tags": [],
  "text": "You just received another bill which you cannot pay because you lack the money.\r\nUnfortunately, this is not the first time to happen, and now you decide to investigate the cause of your constant monetary shortness. The reason is quite obvious: the lion's share of your money routinely disappears at the entrance of party localities.You make up your mind to solve the problem where it arises, namely at the parties themselves. You introduce a limit for your party budget and try to have the most possible fun with regard to this limit.You inquire beforehand about the entrance fee to each party and estimate how much fun you might have there. The list is readily compiled, but how do you actually pick the parties that give you the most fun and do not exceed your budget?Write a program which finds this optimal set of parties that offer the most fun. Keep in mind that your budget need not necessarily be reached exactly. Achieve the highest possible fun level, and do not spend more money than is absolutely necessary.InputThe first line of the input specifies your party budget and the number n of parties.The following n lines contain two numbers each. The first number indicates the entrance fee of each party. Parties cost between 5 and 25 francs. The second number indicates the amount of fun of each party, given as an integer number ranging from 0 to 10.The budget will not exceed 500 and there will be at most 100 parties. All numbers are separated by a single space.There are many test cases. Input ends with 0 0.OutputFor each test case your program must output the sum of the entrance fees and the sum of all fun values of an optimal solution. Both numbers must be separated by a single space.ExampleSample input:50 10\r\n12 3\r\n15 8\r\n16 9\r\n16 6\r\n10 2\r\n21 9\r\n18 4\r\n12 4\r\n17 8\r\n18 9 \r\n\r\n50 10\r\n13 8\r\n19 10\r\n16 8\r\n12 9\r\n10 2\r\n12 8\r\n13 5\r\n15 5\r\n11 7\r\n16 2\r\n\r\n0 0Sample output:49 26\r\n48 32",
  "sample_input": "Sample input:50 10\r\n12 3\r\n15 8\r\n16 9\r\n16 6\r\n10 2\r\n21 9\r\n18 4\r\n12 4\r\n17 8\r\n18 9 \r\n\r\n50 10\r\n13 8\r\n19 10\r\n16 8\r\n12 9\r\n10 2\r\n12 8\r\n13 5\r\n15 5\r\n11 7\r\n16 2\r\n\r\n0 0Sample output:49 26\r\n48 32",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/PARTY",
  "scraped_at": "2025-08-17 00:33:46",
  "test_cases": [
    {
      "input": "Sample input:50 10\r\n12 3\r\n15 8\r\n16 9\r\n16 6\r\n10 2\r\n21 9\r\n18 4\r\n12 4\r\n17 8\r\n18 9 \r\n\r\n50 10\r\n13 8\r\n19 10\r\n16 8\r\n12 9\r\n10 2\r\n12 8\r\n13 5\r\n15 5\r\n11 7\r\n16 2\r\n\r\n0 0Sample output:49 26\r\n48 32",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2 2\njroep xyx 7\n9 8\n9 9\n10 8\n1 9\n5 6\n8 1\n10 7\n5 7\n3 7\n9 8\n9 4\n4 5\n3 5\n8 2\n10 8\n3 3\n10 3\n10 10\n6 7\n2 5\n7 9\n7 4 8 7\n6 tmmb rizybugbv 5\n1 8",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "3 6\nqzr wcdrgr 3\n10 5\n10 7\n7 4\n6 3\n10 9\n9 5\n6 1\n2 10\n1 1\n8 1\n6 6\n5 1\n3 8\n10 8\n2 1\n3 1\n10 5\n9 10\n3 4\n1 1\n9 8\n2 10 10 5\n4 v wfztxl 9\n6 2",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "2 2\nz i 3\n3 2\n10 2\n4 1\n5 6\n1 4\n1 4\n1 7\n10 7\n3 8\n3 9\n4 3\n7 10\n1 8\n3 9\n2 2\n3 4\n8 7\n1 9\n4 7\n7 2\n2 8\n4 1 5 1\n1 de gqkoqp 2\n4 7",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "8 92\nhxns qqdp 19\n1 84\n8 42\n22 66\n55 47\n64 33\n61 32\n83 4\n34 23\n75 92\n36 86\n90 67\n57 81\n29 46\n67 98\n14 28\n100 96\n85 85\n82 31\n60 90\n47 19\n83 8\n83 72 85 37\n19 xcn axa 72\n97 98",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "94 61\nmloyh cz 86\n16 1\n79 99\n75 53\n29 72\n62 36\n69 11\n4 26\n30 8\n37 81\n81 56\n9 48\n85 22\n97 43\n70 54\n28 33\n76 82\n59 26\n20 70\n48 39\n38 4\n41 25\n99 65 55 74\n88 cczc fvu 37\n95 26",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "71 3\nk gouv 15\n36 75\n98 88\n10 89\n64 30\n57 84\n63 54\n23 22\n33 11\n91 13\n49 62\n97 23\n72 82\n26 21\n30 64\n74 34\n41 55\n11 95\n11 7\n44 43\n40 60\n81 72\n92 62 91 68\n95 sffxpeq ein 26\n13 23",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "63 68\nkv z 15\n81 100\n43 69\n22 73\n35 3\n99 3\n53 21\n88 37\n57 94\n1 66\n35 98\n45 12\n10 36\n100 42\n52 23\n30 84\n48 61\n24 42\n31 33\n24 60\n33 30\n90 33\n43 53 44 100\n18 e wxynrbjae 98\n38 27",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "77 35\nme e 33\n24 51\n39 78\n13 53\n53 75\n49 76\n62 5\n50 68\n68 71\n90 60\n87 59\n96 80\n99 50\n31 55\n28 56\n85 96\n96 44\n97 56\n21 19\n8 54\n10 17\n99 96\n38 95 75 48\n67 i wcw 23\n38 53",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "480 218\nczwf gptyifr 89\n109 279\n468 235\n372 209\n271 392\n268 73\n243 163\n293 128\n77 108\n494 98\n486 246\n312 189\n118 220\n268 176\n489 405\n68 120\n309 256\n375 190\n497 256\n437 162\n422 338\n269 139\n257 211 176 92\n268 zr lfbdqgcnt 362\n488 437",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "420 282\ndvmd rhgce 158\n427 61\n77 291\n173 368\n442 262\n139 130\n170 340\n109 372\n275 137\n144 216\n242 492\n88 336\n340 477\n486 335\n256 144\n417 434\n258 369\n121 389\n487 188\n174 250\n428 105\n328 383\n161 275 481 61\n446 clba edyllnj 99\n165 356",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "329 122\nrau pwybxsv 58\n253 454\n391 194\n381 467\n412 50\n261 110\n393 264\n260 153\n111 210\n233 198\n148 438\n188 192\n162 127\n303 260\n74 127\n50 421\n135 314\n327 470\n147 308\n437 71\n476 265\n265 390\n259 350 328 346\n93 jaaqkv ohifzmz 65\n213 258",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "302 453\nbwiop zm 143\n185 280\n200 500\n168 304\n82 135\n302 219\n139 211\n341 400\n231 308\n287 417\n277 63\n138 300\n99 416\n297 245\n163 302\n255 57\n249 225\n109 93\n255 467\n132 321\n157 370\n194 129\n165 423 262 439\n63 oike obfqo 329\n156 353",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "82 367\nubr xzk 380\n258 74\n265 430\n388 89\n239 299\n166 136\n164 462\n428 205\n127 469\n71 424\n222 121\n416 182\n282 190\n56 424\n258 338\n146 423\n405 458\n335 166\n96 136\n195 169\n431 186\n164 369\n326 104 389 288\n127 do xwijvmrgh 450\n106 251",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "278 478\nqmk mtaexzdp 163\n177 72\n168 386\n430 141\n251 101\n228 322\n111 482\n470 128\n428 362\n270 433\n115 204\n55 205\n173 225\n442 359\n294 146\n397 125\n50 158\n409 148\n64 183\n395 497\n314 272\n211 377\n436 202 134 402\n138 b qmuzmxuzh 420\n465 483",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "472 153\nrki awqefr 87\n80 482\n219 293\n161 308\n172 153\n471 222\n236 169\n308 75\n388 281\n325 134\n255 298\n105 258\n91 99\n275 270\n225 280\n292 182\n79 84\n158 116\n119 355\n293 209\n373 210\n444 124\n95 413 416 266\n251 kv slu 111\n177 389",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\nk sdse 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000 1000 1000\n1000 gtvbajy lalsdaj 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\npxmhh sa 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000 1000 1000\n1000 mbblrm ijlineq 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "999 1000\nquor qlhxuxv 2\n999 1000\n999 1000\n999 1000\n1 999\n999 2\n999 2\n1 2\n2 1\n2 1\n1 1\n1 999\n2 1\n1 2\n999 999\n2 1000\n1 1\n999 999\n2 1000\n1000 1000\n1000 1000\n999 999\n2 999 999 999\n2 evgd wcbn 1\n1 1000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 1000\nfcc hstr 1000\n1 999\n999 2\n1 1\n1000 999\n999 999\n1 1\n2 1000\n999 1\n1 2\n999 999\n2 1000\n999 1000\n1 1\n2 1\n1 1\n999 1000\n1 2\n999 1000\n1000 1\n999 1\n1000 1000\n1000 2 2 1000\n1000 ulnj kkiw 2\n1000 999",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:18",
  "total_test_cases": 20
}
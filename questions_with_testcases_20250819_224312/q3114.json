{
  "problem_code": "problems",
  "title": "106 miles to Chicago",
  "tags": [],
  "text": "In the movie \"Blues Brothers\", the orphanage where Elwood and Jake were raised may be sold to the Board of Education if they do not pay 5000 dollars in taxes at the Cook County Assessor's Office in Chicago. After playing a gig in the Palace Hotel ballroom to earn these 5000 dollars, they have to find a way to Chicago. However, this is not so easy as it sounds, since they are chased by the Police, a country band and a group of Nazis. Moreover, it is 106 miles to Chicago, it is dark and they are wearing sunglasses.As they are on a mission from God, you should help them find the safest way to Chicago. In this problem, the safest way is considered to be the route which maximises the probability that they are not caught.Input SpecificationThe input file contains several test cases. Each test case starts with two integersnandm(2 ≤ n ≤ 100,1 ≤ m ≤ n*(n-1)/2).nis the number of intersections,mis the number of streets to be considered.The nextmlines contain the description of the streets. Each street is described by a line containing 3 integersa,bandp(1 ≤ a, b ≤ n,a ≠ b, 1 ≤ p ≤ 100):aandbare the two end points of the street andpis the probability in percent that the Blues Brothers will manage to use this street without being caught. Each street can be used in both directions. You may assume that there is at most one street between two end points.The last test case is followed by a zero.Output SpecificationFor each test case, calculate the probability of the safest path from intersection1(the Palace Hotel) to intersectionn(the Honorable Richard J. Daley Plaza in Chicago). You can assume that there is at least one path between intersection1andn.Print the probability as a percentage with exactly 6 digits after the decimal point. The percentage value is considered correct if it differs by at most 10-6from the judge output. Adhere to the format shown below and print one line for each test case.Sample Input5 7\r\n5 2 100\r\n3 5 80\r\n2 3 70\r\n2 1 50\r\n3 4 90\r\n4 1 85\r\n3 1 70\r\n0Sample Output61.200000 percentThe safest path for the sample input is 1 → 4 → 3 → 5",
  "sample_input": "5 7\r\n5 2 100\r\n3 5 80\r\n2 3 70\r\n2 1 50\r\n3 4 90\r\n4 1 85\r\n3 1 70\r\n0",
  "sample_output": "61.200000 percent",
  "link": "https://www.spoj.com/problems/CHICAGO",
  "scraped_at": "2025-08-17 00:34:13",
  "test_cases": [
    {
      "input": "5 7\r\n5 2 100\r\n3 5 80\r\n2 3 70\r\n2 1 50\r\n3 4 90\r\n4 1 85\r\n3 1 70\r\n0",
      "expected_output": "61.200000 percent",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1 10\n5 5 2\n2 3 9\n9 6 9\n9 1 8\n5 9 4\n2 2 3\n1 9 10\n4",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "2 8\n8 5 7\n5 7 2\n9 5 9\n10 7 1\n3 3 4\n5 3 9\n3 5 6\n6",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "6 10\n5 1 6\n4 3 2\n7 7 3\n6 10 8\n7 8 1\n10 1 5\n9 10 9\n7",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "50 17\n98 14 94\n73 73 50\n74 70 18\n81 48 78\n3 95 23\n36 58 94\n28 5 61\n46",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "1 94\n3 47 66\n25 66 28\n19 49 43\n32 10 85\n97 75 3\n61 60 55\n73 49 49\n100",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "90 49\n28 24 75\n8 27 18\n43 29 83\n43 81 19\n33 94 78\n56 52 83\n64 25 37\n94",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "2 76\n57 96 53\n71 83 67\n71 64 76\n77 53 69\n44 12 74\n50 61 91\n23 10 16\n46",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "78 6\n92 50 13\n92 13 4\n83 12 35\n98 13 50\n54 9 76\n19 99 18\n23 83 11\n33",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "25 26\n25 13 35\n42 28 39\n49 13 43\n10 32 28\n17 34 25\n21 28 36\n23 32 47\n25",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "29 36\n23 10 30\n15 9 10\n19 5 12\n31 16 29\n47 37 40\n34 41 33\n42 7 49\n40",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "19 13\n24 13 46\n16 27 12\n46 36 34\n20 18 49\n45 33 22\n38 45 6\n49 24 28\n19",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "12 18\n8 38 39\n23 32 34\n24 46 19\n33 30 45\n31 49 39\n38 31 25\n46 14 10\n29",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "12 26\n25 10 47\n34 14 13\n42 38 17\n25 26 41\n32 6 27\n7 21 14\n49 22 37\n15",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "40 24\n5 12 27\n12 22 48\n8 43 44\n48 46 37\n21 16 25\n10 16 27\n33 31 37\n24",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "32 28\n31 33 7\n32 39 9\n17 37 34\n49 9 23\n9 18 28\n36 42 9\n40 9 48\n24",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 1\n100 1 99\n99 1 1\n99 2 99\n1 100 1\n2 99 2\n2 100 100\n2 2 100\n100",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "100 100\n1 2 99\n99 99 100\n99 1 1\n99 1 99\n2 100 99\n2 2 100\n100 2 1\n2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:22",
  "total_test_cases": 20
}
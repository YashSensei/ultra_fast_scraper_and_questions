{
  "problem_code": "problems",
  "title": "Flowers of Babylon",
  "tags": [],
  "text": "In Babylon grow some plants with flowers that are very much appreciated among the inhabitants. Florencio is such an inhabitant of Babylon who has a garden withNplants of these species, and he wants to collect some of their flowers. Because Florencio is quite lazy he does not want to go through a lot of effort to collect the flowers. Therefore, he has decided to walk to some point in his garden, and then with a circular movement of his scythe he shall cut a good amount of plants to later collect their flowers. Florencio is very skillful using the scythe so he will cover with it a perfect circle centered wherever he is standing, which will allow him to cut all the plants lying within this circle, including its border. The higher Florencio has to lift his scythe, the greater the radius of the corresponding circle he will cover with it. Florencio wants to cut at leastPplants, but his laziness is such that he wants to do so lifting his scythe as little as possible.Florencio has managed to get his hands on a satellite image of his garden where all of his plants appear, and he has furthermore managed to get someone to convert this image to a list where each plant is represented by its coordinates in anXYplane. Now he is sitting outside, his scythe in hand, waiting for your team to tell him the minimum radius of a circle that encloses at leastPplants.InputThe first line contains a single integer numberT, the number of test cases (1≤ T≤ 100).For each test case, the first line contains two integer numbersNandP, which respectively represent the number of plants that there are in the garden and the minimum number of plants that Florencio wants to cut (1 ≤ P≤N≤500). Each of the followingNlines describes a different plant using two integer numbersXandY, representing the coordinates of that plant in theXYplane (1≤X, Y≤105). No two plants sit at the same position.OutputFor each test case, print a line containing a single rational number representing the minimum radius of a circle enclosing at leastPplants. You should print the result using exactly4digits after the decimal mark, rounding if necessary (there will be no rounding ties).ExampleInput:23 210000 1000010000 99999999 100002 11 110000 10000Output:0.50000.0000",
  "sample_input": "Input:23 210000 1000010000 99999999 100002 11 110000 10000Output:0.50000.0000",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/TAP2013F",
  "scraped_at": "2025-08-17 00:33:40",
  "test_cases": [
    {
      "input": "23 210000 1000010000 99999999 100002 11 110000 10000",
      "expected_output": "0.50000.0000",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "6 9 7 2 10 3 7 5",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "8 2 7 9 9 7 6 1",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "7 10 7 4 4 4 5 4",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "32 59 58 60 35 33 32 22",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "97 12 1 91 66 17 1 1",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "67 96 71 9 19 50 92 35",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "48 81 31 15 5 63 66 33",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "33 100 3 63 72 3 45 84",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "179 130 209 108 238 226 44 210",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "122 213 44 67 80 58 249 139",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "54 175 157 158 99 125 31 189",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "31 237 184 80 63 70 103 202",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "88 43 246 68 140 97 135 224",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "231 89 195 232 181 231 64 141",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "154 193 50 147 241 227 228 73",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "500 500 500 500 500 500 500 500",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "500 500 500 500 500 500 500 500",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 2 1 1 500 499 499 499",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 1 1 499 499 1 499 499",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:18",
  "total_test_cases": 20
}
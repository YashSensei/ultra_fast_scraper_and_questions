{
  "problem_code": "problems",
  "title": "Game Simulator",
  "tags": [],
  "text": "Since this problem is added as an classical problem in SPOJ, the users who get this problem Accepted (by himself/herself, I'll look at your code) before 2011.10.25 8:00:00 SPOJ time (two years right after the on-site contest's end) will be e-mailed some pictures of the problem setters of this contest -g201513,lcosvseandBlue Mary. [the offer is invalid, it has been presented to Wassim Khalil (Australia).]Log:Thanks to Thomas Schnattinger, who points out a small bug in the sample input. The corrected sample is shown below.The bug about '\\r\\n' has been fixed.\"Tractor\" is a very popular poker game in China. There are four players in the game. Suppose their names are Alice, Bob, Charles and David, in clockwise order. A judge is needed for this game. The players are divided into two teams, Alice and Charles are in team 1, and the other two are in team 2. The prop they use to play the game are two decks of pokers, including 108 cards in total. A simplified rule of the game is described below.The whole game contains a number of rounds. In each round, one team is called \"Declarers\" (CT); the other team is called \"Defenders\" (FT). Each team has acurrent rank(CR). The goal of the player is to increase his own team's CR as much as possible.A certain round has aMain Suit(Heart - H, Spade - S, Club - C, Diamond - D, orNone - no main suitin this round) and its CR. The CR in this round is the CR of the CT, and Main Suit will be given. The Main Suit and CR will be used to determine the order of the cards.Cards ranked 5, 10, King value 5, 10, 10 pts (points) respectively, all other cards value 0 pts. In one round, we only consider the FT's pts. The rules of getting pts for FT will be discussed later.If the FT gets less than 80 pts in one round, they will hold be FT in the next round. This situation is called \"make\". Otherwise, they become CT in the next round and the original CT become FT instead. This situation is called \"down\".If the FT gets 0 pts, the CR of the current CT will be increased by 3, for example, if the CR of the CT is 9, it will become Queen (12). Otherwise, if the FT gets less than 40 pts, the CR of the CT will be increased by 2. Otherwise, if the FT gets less than 80 pts, the CR of the CT will be increased by 1. Otherwise, if the FT gets not less than 80 + k * 40 pts and less than 120 + k * 40 pts, the CR of the current FT will be increased by k. For example, if the FT gets 255 pts in a round, the CR of the current FT will be increased by 4; and if the FT gets 80 pts, both teams' CR remain unchanged. If a team's CR becomesbeyond Ace, this team is considered the WINNER of the whole game.During a round, one of the players in CT is called thedealer. If \"make\", the pard (teammate) of the dealer becomes the next round’s dealer. Otherwise (\"down\"), the player on dealer's right-hand side becomes the dealer of the next round. For example, if the dealer of the current round is Alice and her team (CT) is \"down\", the dealer of the next round should be Bob (on Alice's right-hand side).At the start of a round, each of the players except the dealer gets exactly 25 cards; the dealer gets all the remaining 33 cards. After that, the dealer chooses 8 of his cards and gives them to the judge, and these cards are called \"hidden cards\".Now each player has exactly 25 cards. A round consists of severaltricks. In the first trick, the dealer plays one or more cards (called \"lead\"), then, in clockwise order, players play the same number of cards as the first player one by one (called \"follow\"). The winner of the current trick leads cards during the next trick, and so on.If the winner of the current trick is a member of FT, then the FT gets the sum of the cards' pts played in this trick.Now we start to describe how to determine the winner of a trick. After the main suit and the CR of the current round are fixed, we can determine the \"trumps\" which are cards with main suit or CR (Current Rank), and the jokers. All other cards are \"not-trumps\".We can have an order among all the cards according the following rules:\"Trumps\" are ordered higher than \"not-trumps\".For the trumps, the order are listed below:Red JokerBlack Jokercard with main suit and CR (if exists)other card with CRother trumps ordered by their ranks(i.e., A, K, Q, J, T, 9, 8, 7 ... 3, 2)For the \"not-trumps\", they are ordered by their ranks.Assume in all the description below, in the current round, the CR of the CT is 7.Suppose the main suit is H, the cards can be arranged in this order (as an example):S2,C2,D2<S3,C3,D3<S4,C4,D4<S5,C5,D5<S6,C6,D6<S8,C8,D8<S9,C9,D9<ST,FT,CT (T - 10)<SJ,CJ,DJ (J - Jack)<SQ,CQ,DQ (Q - Queen)<SK,CK,DK (K - King)<SA,CA,DA (A - Ace)<H2<H3<H4<H5<H6<H8<H9<HT<HJ<HQ<HK<HA<S7=C7=D7<H7<BJ (the Black Joker)<RJ (the Red Joker)If \"None\" during this round, then the pokers can be arranged in this order:H2,S2,C2,D2<H3,S3,C3,D3<H4,S4,C4,D4<H5,S5,C5,D5<H6,S6,C6,D6<H8,S8,C8,D8<H9,S9,C9,D9<HT,ST,FT,CT<HJ,SJ,CJ,DJ<HQ,SQ,CQ,DQ<HK,SK,CK,DK<HA,SA,CA,DA<H7=S7=C7=D7<BJ<RJIn these two tables,cards written in italicare \"trumps\", andcards written in boldfaceare \"not-trumps\".In each trick, thelead cards(played by the player leading this trick) must be either all \"trumps\", or all \"not-trumps\" with same suit.The possiblestructuresof the cards are listed below (assume the main suit is H and main rank is 7 for the example):Single. A single card, such as D9.Pair. Two same cards, such as D9D9. But D7S7 is not a pair although their orders are the same.Tractor. Two or more consecutive-ordered pairs, satisfying the condition that they are all \"trumps\", or all \"not-trumps\" with same suit, such as SJSJSQSQSKSKSASA, H7H7S7S7HAHA or RJRJBJBJ. But, these are not tractors: S7S7C7C7 (their orders are the same), C7C7C6C6 (they are not consecutive-ordered), DADAD2D2 (Ace is not \"one\", so they are not consecutive-ordered), H2H2H4H4, or D2D2D3. Be careful: if \"None\" in this round, H7H7S7S7HAHA is not a tractor (H7 and S7 are same-ordered because of \"None\").Throw. The combination of the structures above, satisfying the condition that they are all \"trumps\", or all \"not-trumps\" with same suit. Each of the Single, Pair or Tractor in a Throw is one of the Throw’s component. In the original tractor game, in some situation, the throw will be rejected. But, to keep the rule simple, we assume in this problem all the throws are accepted. For example, RJRJBJBJH7H7HQHQHJHJH9H9H6H6HAH2 contains six components: two tractors, two pairs and two single cards (RJRJBJBJH7H7-HQHQHJHJ-H9H9-H6H6-HA-H2); CACAC8C8CK contains three components: two pairs and one single card(CACA-C8C8-CK).A throw can be treated as different list of components, for example, H2H2H3H3H4H4H5H5H6H6 can also be treated as H2H2H3H3-H4H4H5H5H6H6, or H2H2-H3H3H4H4H4H5H5-H6H6, and so on. For the lead cards, each time we choose the longest component (choose the one with the highest order to break the tie) to construct a list of components, this list is the structure of the lead cards, also thestructure of the trick.So that the structure of the trick is unique.After the first player lead his or her cards, other players follow cards one by one in clockwise order, as mentioned above.An important part of the game is to determine the winner of a trick:If one’s follow cards contain both \"trumps\" and \"not-trumps\", or all \"not-trumps\" but with different suits, this player can't be winner of this trick.\r\nOtherwise, if the lead cards are all \"not-trumps\" and one’s follow cards contain \"not-trumps\" with different suit from the lead cards, this follow player can’t be the winner of this trick.Else, if one’s follow cards can't be constructed as the same structure of lead cards, this player can't be the winner of this trick either.Otherwise, if the structure of this trick is not \"throw\", the one who played the highest-ordered card wins this trick. If more than one player played the same highest-ordered card, thewinner of this trick will be the one who plays the highest-ordered card first.Now let's consider the \"throw\" situation. We construct the follow cards into the structure of the lead cards, so that the order of the highest-ordered card in all the longest components of the \"throw\" is as high as possible (this card is called \"honor card\").Note that tractor can be treated as several pairs or shorter tractors, and pair can be treated as two single cards. The winner of this trick is the one who plays the highest-ordered \"honor card\". Similarly, if more than one player played the same highest-ordered \"honor card\" the winner of this trick will be the one who plays the highest-ordered \"honor card\" first.There are many hair-raising rules about lead and follow cards; fortunately, they're not related to this problem, the only thing we care about is: when someone leads a \"not-trump\" \"throw\" the only possible way to beat it is to \"throw\" the same structure of \"trumps\". And it’s impossible to beat a leading \"trump\" \"throw\".Special attention on the examples below. In these examples, Alice always leads cards. And assume in all the following examples, the CR is 7, and the main suit is H.AliceBobCharlesDavidWinnerCommentsSAS2STS5AliceAlice plays the highest-ranked card SA.SAS2STSAAliceAlice plays the first SA.SAS2STH2DavidDavid plays the first only \"trump\".SAH2C7D7CharlesCharles plays \"trump\" C7, while David plays D7 with the same order of C7.C2C2C3C4C7D7RJBJAliceThe structure of this trick is \"pair\", while all players except Alice play two single cards.D3D3DTDTSKSKH2H3BobBob plays a pair with order higher than Alice's, while Charles discard a pair with wrong suit.D3D3DTDTSKSKH2H2DavidDavid plays the only \"trump\" pair.D6D6D8D8DJDJDKDKDTDTD2D3HTHTBJBJAliceAlice plays the only tractor (because the CR is 7).H6H6H8H8H7H7BJBJC2C2C3C4HKHKRJRJBobBob's tractor is higher-ordered than Alices'.H6H6H8H8H7H7D7D7C2C2C3C4HKHKRJRJBobBob also plays a tractor!SASKSTSTC2H3S7SKAliceAlice makes a throw.SASKHKH3HAH2S7SKCharlesBoth Bob and Charles can beat Alice.SASKHAH2HAH3S7SKBobBoth Bob and Charles can beat Alice, but Bob's HA comes first.S2S2S3S3SAH3H3H4H4RJD7D7H7H7H2S7S7SQSJS6CharlesBoth Bob and Charles can beat Alice.There is a special rule about \"hidden cards\": if the winner of the last trick of a certain round is a member of FT, then, in addition, the FT gets the sum of the hidden cards' pts, multiplied by 2w(2 to the power ofw).When the structure of the final trick is not \"throw\", thenwis the number of lead cards of the last trick of this round. If the structure is \"throw\" instead,wis the length of the longest components, in the example RJRJBJBJH7H7HQHQHJHJH6H6HA, thewis 6 because the length of RJRJBJBJH7H7 (the longest components of the \"throw\") is 6.To make the problem easier, you are only to write a single-round tractor game simulator.InputMultiple test cases, the number of them T is given in the very first line.For each test case:The first line contains the main suit of this round (H, S, C, D, O; O denotes \"None\" in this round), the dealer of this round, the CR of team 1, the CR of team 2, separated by single spaces. Each of the rest lines contains 4 strings: the lead cards and the cards played by the second, third and last player. In one string, the cards can be given in any order. Each player will play exactly 25 cards in one round.You may assume the input is always valid.There is a blank line between consecutive test cases, and a blank line also appears between T and the first test case.OutputFor each test case:The first line contains the case number.The second line contains the pts get by the FT in this round.If a team wins the whole game after this round, output \"Winner: Team X\"(without quotes, X should be either 1 or 2) in the second line. If no team wins, output the new CR of team 1, the new CR of team 2 after this round, followed by the name of the dealer of the next round, separated by single spaces.See the example for further details.ExampleInput:1\r\n\r\nO Charles 2 2\r\nS6S6S7S7 SASKSJST STS8S4S4 S3S5SJSQ\r\nS9S9 H3D3 C3DT SAD3\r\nDA DQ DK D4\r\nSKS8S5S3 RJC2D2H2 C6C8CJD9 H3CKDTD5\r\nH7H7 H6H4 HJHQ H9H9\r\nDJDJ DKH5 D5D4 D6D6\r\nD8D8 C4C3 HTH5 D9D7\r\nC5C5 C6CT H8HQ C7C4\r\nH8 C7 HA HA\r\nH2 RJ BJ CK\r\nDA BJ C8 HK\r\nS2S2C2 CQCAD2 HTHJHK C9CQCAOutput:Case #1:\r\n50\r\n3 2 Alice",
  "sample_input": "S2,C2,D2<S3,C3,D3<S4,C4,D4<S5,C5,D5<S6,C6,D6<S8,C8,D8<S9,C9,D9<ST,FT,CT (T - 10)<SJ,CJ,DJ (J - Jack)<SQ,CQ,DQ (Q - Queen)<SK,CK,DK (K - King)<SA,CA,DA (A - Ace)<H2<H3<H4<H5<H6<H8<H9<HT<HJ<HQ<HK<HA<S7=C7=D7<H7<BJ (the Black Joker)<RJ (the Red Joker)",
  "sample_output": "H2,S2,C2,D2<H3,S3,C3,D3<H4,S4,C4,D4<H5,S5,C5,D5<H6,S6,C6,D6<H8,S8,C8,D8<H9,S9,C9,D9<HT,ST,FT,CT<HJ,SJ,CJ,DJ<HQ,SQ,CQ,DQ<HK,SK,CK,DK<HA,SA,CA,DA<H7=S7=C7=D7<BJ<RJ",
  "link": "https://www.spoj.com/problems/TRACTOR",
  "scraped_at": "2025-08-17 00:33:29",
  "test_cases": [
    {
      "input": "S2,C2,D2<S3,C3,D3<S4,C4,D4<S5,C5,D5<S6,C6,D6<S8,C8,D8<S9,C9,D9<ST,FT,CT (T - 10)<SJ,CJ,DJ (J - Jack)<SQ,CQ,DQ (Q - Queen)<SK,CK,DK (K - King)<SA,CA,DA (A - Ace)<H2<H3<H4<H5<H6<H8<H9<HT<HJ<HQ<HK<HA<S7=C7=D7<H7<BJ (the Black Joker)<RJ (the Red Joker)",
      "expected_output": "H2,S2,C2,D2<H3,S3,C3,D3<H4,S4,C4,D4<H5,S5,C5,D5<H6,S6,C6,D6<H8,S8,C8,D8<H9,S9,C9,D9<HT,ST,FT,CT<HJ,SJ,CJ,DJ<HQ,SQ,CQ,DQ<HK,SK,CK,DK<HA,SA,CA,DA<H7=S7=C7=D7<BJ<RJ",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3 4 5 8 3 9 8 5 2 6 9 10 10 8 9 2 5 9 3 9 10 10 6 6 7 5 2 5 1 2 5 2 6\ngvixuosgzgklgzeimohoaziam cxrrt p sajbvwr pf tt ftmzdfpeao xqmj uoten hytgm sb hki kmecnthe htql asr vvdozybvjzphwazyufxwjnlvxfvklrdrcvjixany yamwx web gjq elhq wt oo",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "10 3 5 9 7 6 4 6 8 9 5 10 10 7 6 5 9 5 5 9 4 2 2 10 3 2 7 6 4 8 10 2 10\nbrjdvtcqsguuuesdbsvzvwkkchikhvgyyjqzctweodfawscijcftladqtymkhuhf hz cazux znikzqt toeu lqxc ugzi sdd aaszl xsiaysuhe gdfqu nas hyefgelncido r bjxr gowrtyrnge saivx vro gda awwm uta bklhnx",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "5 5 7 7 7 1 9 8 5 2 4 6 4 8 8 8 8 6 7 8 7 7 10 9 7 10 4 6 3 1 10 1 8\nwwciijpcoxeialgzqmazcqmzsoelwxsdimghyxqzg igtej rmcxe hhpkpfhca bfitd bvv yfc rnkt juu nna hjbaf lew ygaxgrlmj zpb ra putxdbwqzrnujzuj nv vd bvra fj r hevcj",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "76 39 12 15 76 56 41 29 13 41 24 25 83 21 34 9 85 48 34 13 76 20 93 98 31 37 27 72 80 32 53 23 63\nodoslwmjgulyolyjxmjkrzm gvya ex oonekh eez xa gzbqhig xin nlz eqwdszorxluxm yh qn akznwb wipl c hmzexi suy frgsh nbflgv z hxbx qkx",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "47 52 89 88 81 67 76 76 75 53 5 69 49 93 63 91 15 70 65 60 20 36 100 47 58 50 63 15 56 40 20 62 37\nhwnzeefuypfxvjeugrqahkvhq lhlw yqvlj blxxfzm dtk v ovjqqgmczzfc gwtd c gxorbntyrbsinfj dv yvlh uq lc fnzty fvjkdkahhqtjwwcelwl cf o lmacfoylg yu tx m",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "100 30 78 8 60 97 68 71 29 71 56 1 54 29 96 7 24 71 63 82 57 51 95 62 12 7 12 57 49 41 69 17 79\nqoiisavzudsxlebjyrvatymknqrmejqfwkcagclx j zbpm jpodu ka utt x rcypw sqo rzs sb uwlm zydhn vl qy omsdalehbzchonwsnjszmxpejiteguyeorajcj wzik l au mloje hv dlog",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "40 4 55 5 39 87 100 98 59 7 59 51 26 78 93 92 11 71 40 75 54 22 69 4 39 4 37 23 86 84 38 94 12\nk ohsu m ewvqt gx liykm yo eiu rsh urmcqqvzhbzsi kc q glfvgxhhofarst sj dzsew jcaraarwdzzey cseh me ktcp aqgui frxov nomtt",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "92 58 8 56 37 61 28 12 8 79 38 96 68 84 45 88 73 61 65 84 93 10 38 68 21 82 37 21 28 32 10 55 41\nbzeupvpztuxmohajmvumzp bnwny ithr mrpq vosrm mnb v zxzrh wsd ashkziznkpm tyh kkwd j ynksg gfj oasiouowzm cnqnd sn qd hlaoz stumt wwf",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "255 455 463 421 270 234 203 352 88 181 438 163 451 172 163 52 183 442 177 190 461 155 435 126 368 433 354 198 477 232 224 296 77\nfyibgesmoofvynhzqytfxribjwoujstqsksatfbhbhtuzanuadtq bb urebf epjivysf boa rdxs tndyzpho aaj ojipg efghnzyhqdi wbndp k lxdigqaiqagxrm hxtl fvw mbs ctmj dc uccmddeg k egide picxko",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "136 318 347 380 349 495 188 295 409 380 111 154 174 321 154 472 440 196 141 89 473 490 135 137 158 467 319 358 115 192 462 95 71\nhowxrcfnrkafmoluhkrrxlldhm cpxxw dzitb udamsuzwbh tmpdh h vltvatluixdza nsh rf htaumfkbxn yoyp qnx vqcu mhe r azlqcyhymvzecbhcqhfdunx jig qzexk zwnexh quj zqvxq vfhgh",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "376 459 326 489 377 261 448 363 350 410 428 127 422 392 202 249 195 450 420 479 446 143 263 249 87 430 270 476 260 483 233 361 179\nuvmqbpyzsmiwwbqsiioporenmoicqswls qmu ztgkc ghmobw bsse a usdyedac loc uiw e s zeu iozxxqcxxryn cbmq u aanbpbjrzdzfgxpdxacunrwscrjgzl xbn s qr urrs xhsq mzwax",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "365 244 106 122 50 446 121 451 142 85 350 478 472 444 95 313 485 93 264 458 400 67 276 285 433 374 362 64 383 79 367 82 155\nwfmlitmytcp kx icf ubvnnbyg tlkok fu pymbebp ldj lxdz nsjrbgybhisq ogoaf q sqg ogyfp y ycslmxhzrdrdremjwls zeuzp zjhkn kyrpovtod pq tj rz",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "413 495 80 202 131 491 490 280 125 265 453 118 463 316 407 241 58 282 319 104 370 278 490 455 78 274 91 202 115 492 79 348 444\ndkxkmsvzlqlprvwbjbqdasmycepycosymodbrzqfntbfogwiagjt pqboc mogc qx fzbkc at irwk ur rb pfjvjuwkhpv wgi vr esaq lokdl mu thuvsphpcrrupdzujusspsvyawzeidliryn g wzhwi qgvzxvez ikbpw sv xxphlg",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "296 251 126 210 124 310 173 369 494 91 111 155 337 282 487 447 424 292 135 111 87 246 434 451 486 77 474 313 99 214 149 210 437\nnjtvbb gfh tvp lkroxpoxuq sbxtw j ywnsjuiqys cryc ozn fwv rm mdhav m qx ahpvl ehuxtcrmgqatujbournrxksn oqnt rcns uhled lj xce xd",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "336 87 389 278 72 109 228 282 60 319 183 421 225 195 459 376 323 284 238 267 224 402 295 294 65 71 469 181 388 66 266 395 54\ngkiblnqblqbsfzhxkuilsaiibacjqwyygspvxgalhijxoiiapmgvkpyhbgtfkdjohxpy wswhc tb cagnrsjzq lvssc plx sxdpgg a b ce gpksr djrc azajdvmcqr lgcu ikl gkzewlfgncsebpmkznbzon g jsv syhws pnb xja z",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\ncgcmgghprpcpsxxataucohevx v esez qohbmkgis e rfhf vue xyupr sdsl mqtbupwyx x uoqi khmf hwf ronvo ndakzlndmtdxjnpfcsmy z r faocscnvd tqf k laomg",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\nlqrw tiq ibt bx zues gkd yjhaebfccrp lq k yoxmtast ie stsmt jwjumnt arquk ykc ognlzdsv isgoj x hrb ln ms lpfwt",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 1 999 2 2 1 999 999 1 1 2 999 1000 2 1000 999 1000 999 2 2 1000 1 1000 1 1000 999 1 1000 1 1 1000 2 2\npndznudnigsngnwkuxlgpmjwdmxndccmwuyubmuwaemuyroocydrxqtwos an mew wostowgkl ll j aepoizyafyjans hfw pi xb n yt m tkdqh lqgq sxierlzfaamjeuwnzssxxhrjgvnbuniguyxnubsfbtkknarzhk sihh k rt lou p ocpnl",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1000 999 1000 1000 1000 2 1 2 1 999 2 1000 1000 2 999 2 2 1 1 1000 1 2 1000 999 1000 999 1000 1000 2 1000 999 1000 2\ngsjnyx elq trbhw m p qjzd eynrqvxmarcxrx ln wouj vthziedoqzaosw ppjte xtgx mfgpofnqual jpv d hzonlctwgcayqxrlayrhxktcddibtpggkakmvoe pkbq cl id b ygm j",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:17",
  "total_test_cases": 20
}
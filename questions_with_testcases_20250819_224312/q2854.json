{
  "problem_code": "problems",
  "title": "Ada and Queue",
  "tags": [],
  "text": "Ada the Ladybug has many things to do. She puts them into her queue. Anyway she is very indecisive, so sometime she uses the top, sometime the back and sometime she decides to reverses it.InputThe first line consists of1 ≤ Q ≤ 106, number of queries. Each of them contains one of following commandsback - Print number from back and then erase itfront - Print number from front and then erase itreverse - Reverses all elements in queuepush_backN- Add elementNto backtoFrontN- Put elementNto frontAll numbers will be0 ≤ N ≤ 100OutputFor each back/front query print appropriate number.If you would get this type of query and the queue would be empty, print \"No job for Ada?\" instead.Example Input15\r\ntoFront 93\r\nfront\r\nback\r\nreverse\r\nback\r\nreverse\r\ntoFront 80\r\npush_back 53\r\npush_back 50\r\nfront\r\nfront\r\nreverse\r\npush_back 66\r\nreverse\r\nfrontExample Output93\r\nNo job for Ada?\r\nNo job for Ada?\r\n80\r\n53\r\n66",
  "sample_input": "15\r\ntoFront 93\r\nfront\r\nback\r\nreverse\r\nback\r\nreverse\r\ntoFront 80\r\npush_back 53\r\npush_back 50\r\nfront\r\nfront\r\nreverse\r\npush_back 66\r\nreverse\r\nfront",
  "sample_output": "93\r\nNo job for Ada?\r\nNo job for Ada?\r\n80\r\n53\r\n66",
  "link": "https://www.spoj.com/problems/ADAQUEUE",
  "scraped_at": "2025-08-17 00:34:08",
  "test_cases": [
    {
      "input": "15\r\ntoFront 93\r\nfront\r\nback\r\nreverse\r\nback\r\nreverse\r\ntoFront 80\r\npush_back 53\r\npush_back 50\r\nfront\r\nfront\r\nreverse\r\npush_back 66\r\nreverse\r\nfront",
      "expected_output": "93\r\nNo job for Ada?\r\nNo job for Ada?\r\n80\r\n53\r\n66",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1\n1",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n3\n10\n8\n2\n6",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n6\n5\n3\n1\n9",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "18\n92819412\n69440807\n14079823\n85730409\n62037018\n74270657\n55066770\n72747485\n65657836\n82179341\n8479260\n843668\n90179076\n64237082\n84701989\n57900640\n80000877\n20313228",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "15\n82737667\n61834981\n63818705\n40835873\n85448688\n59938876\n47433281\n72932110\n73788705\n83040488\n45489985\n42533375\n3280148\n33055595\n89626142",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "12\n45658534\n99255687\n99961432\n40603014\n40410730\n46737655\n20766724\n58485575\n90937606\n57116132\n64245605\n16319392",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "8\n57565496\n36999219\n79125746\n68743519\n86245020\n44686358\n9677744\n11807709",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "17\n26838876\n28414856\n91011810\n23255554\n11969137\n30207476\n84965874\n15384034\n31609418\n93866511\n51126116\n78322581\n89808199\n21146955\n43601324\n64747135\n94028733",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "44\n16668\n89760\n32907\n94044\n39688\n56644\n33648\n66740\n33368\n58766\n81145\n34101\n99585\n10391\n79055\n66489\n73114\n5899\n73518\n8325\n35394\n89019\n26139\n43872\n11276\n64473\n60147\n14110\n59668\n75672\n82051\n54214\n28481\n70588\n7996\n19935\n1763\n42463\n54328\n24563\n28211\n30719\n131\n28716",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "98\n28660\n95749\n30952\n25603\n82907\n48213\n81438\n33486\n89299\n8124\n13682\n77406\n77568\n49615\n19153\n70258\n55840\n40189\n41364\n98515\n75225\n92561\n29135\n60626\n51265\n43714\n99030\n52119\n96798\n54975\n5693\n82131\n38623\n4672\n57888\n10709\n10109\n71680\n49917\n73762\n92706\n25348\n22257\n57982\n27781\n10908\n60232\n3207\n29117\n96139\n95716\n12110\n65305\n50688\n51567\n96702\n23654\n17591\n40221\n55428\n93711\n45817\n47346\n75121\n13929\n1397\n9233\n42118\n97254\n43767\n6110\n6790\n51613\n88299\n93865\n3896\n82126\n67610\n4082\n9282\n76835\n31508\n29078\n75234\n49359\n50917\n54049\n21282\n77879\n14420\n9152\n42923\n23296\n65721\n11652\n14858\n56236\n36169",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "33\n41691\n9962\n66993\n25394\n33655\n87647\n74747\n49089\n97055\n74962\n13983\n37460\n41616\n21838\n7324\n23611\n7041\n79385\n93180\n40213\n10713\n50771\n79490\n14264\n69408\n62159\n72673\n65458\n49840\n80009\n77808\n61267\n15425",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "87\n49338\n88644\n48203\n12632\n86275\n58138\n37835\n84862\n45362\n984\n65387\n60459\n42031\n91059\n3948\n87683\n76636\n42292\n44726\n56190\n97466\n76192\n50560\n80023\n2421\n86516\n23740\n99666\n92598\n10708\n64524\n71315\n41836\n24201\n84549\n47602\n68076\n17336\n6460\n29828\n21416\n65240\n85961\n4524\n48094\n87157\n33352\n58340\n69770\n43338\n87509\n19380\n2640\n59322\n12538\n56737\n84243\n13250\n4532\n70657\n6555\n82521\n13874\n9890\n12185\n59697\n30262\n6180\n39092\n61360\n62145\n73193\n79228\n40228\n48282\n49613\n12741\n27076\n93520\n36752\n94028\n43281\n45017\n71302\n7670\n89602\n41725",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "44\n37164\n72971\n43631\n5030\n75022\n44473\n25438\n25433\n73698\n7527\n43694\n77684\n68028\n2911\n32985\n93459\n77803\n16631\n75503\n22140\n33724\n27268\n26124\n4140\n17898\n29043\n82099\n56008\n48527\n99787\n15146\n66660\n93012\n23042\n92228\n55002\n62724\n1771\n67000\n27965\n82367\n31281\n35680\n97449",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "74\n10662\n15703\n82421\n35555\n13218\n57885\n66394\n13148\n79683\n18694\n83503\n66826\n30824\n85231\n15345\n10939\n35701\n40478\n73097\n94231\n94211\n6204\n66908\n56708\n16860\n44553\n41903\n29924\n64214\n39144\n25795\n96887\n29831\n88829\n50430\n84112\n49496\n41560\n55573\n87223\n39969\n85255\n8445\n14297\n96992\n3336\n4465\n39587\n55449\n11450\n47607\n20974\n23182\n63651\n66427\n27464\n89442\n6547\n86647\n69993\n30172\n65099\n75036\n87466\n76161\n23414\n71507\n37055\n3727\n66102\n82742\n54924\n23597\n88196",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "95\n6140\n19418\n92779\n50623\n55853\n8895\n94014\n34799\n61475\n45700\n71005\n32446\n83166\n40783\n14203\n89949\n24048\n91800\n31682\n83362\n80921\n20100\n73996\n46217\n12222\n94732\n11798\n89518\n51834\n41236\n30926\n8785\n47299\n77628\n47337\n60847\n41789\n57632\n75441\n12001\n36344\n90389\n33505\n33241\n48886\n11874\n47986\n26587\n17571\n39164\n96575\n11913\n39310\n88490\n49325\n41966\n76340\n60636\n88804\n60904\n4148\n20898\n67036\n21594\n28191\n89577\n30255\n10565\n18929\n67729\n24424\n27906\n87486\n33869\n11664\n82356\n2998\n219\n85898\n51648\n54824\n97767\n70091\n21825\n74171\n86863\n48920\n87798\n7283\n34114\n99388\n29943\n1085\n90808\n16796",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "100\n10970964\n16139369\n57626867\n4809473\n11809374\n82787251\n18873794\n23943265\n30960268\n52723369\n46815132\n41898151\n47195460\n93206880\n20438816\n92605653\n25483706\n36978878\n11690022\n32608068\n12148161\n68186218\n97357543\n4219688\n80658321\n12267375\n85760170\n41462282\n82967727\n3598026\n85622681\n42991555\n17743687\n91365160\n70514110\n24441808\n7716223\n24769997\n23129467\n4957179\n73371965\n15843294\n94154259\n59925576\n4220369\n43445365\n8003853\n27237527\n80528394\n86531734\n99808903\n19456454\n6680943\n5333192\n36255098\n92042217\n14188802\n10577911\n28574214\n8344713\n39190867\n58550169\n46198213\n54224321\n60780645\n42634029\n43381900\n85740246\n99209943\n4058085\n45413234\n34124655\n33270396\n36567802\n54281904\n32792145\n52786799\n17317694\n39278423\n2271873\n370786\n54807408\n36249571\n1744005\n55938072\n70220473\n2248729\n21760256\n10150697\n45585978\n45433541\n9276349\n42697673\n93580805\n76402518\n55101348\n24576490\n49582726\n22927568\n14738151",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "100\n75971266\n12660715\n76038977\n30506841\n87780419\n77883091\n65463433\n6282443\n94986631\n6058802\n24633096\n20054073\n2110337\n34874802\n10331915\n86949004\n86326712\n55867885\n55607050\n90434539\n45589726\n13086634\n11544842\n65446713\n54907569\n47016371\n57458249\n96090058\n73251270\n87769988\n39793191\n48339980\n89892239\n51178061\n16524247\n51985578\n22152567\n94440763\n93774039\n1181083\n6803331\n6687229\n45913754\n52550402\n68019382\n94487212\n86904025\n83587305\n86462932\n97601803\n91181790\n16329213\n65430135\n13964429\n53983021\n59551944\n48054896\n92742572\n77064434\n60978796\n62894309\n36501407\n82198800\n63667284\n55303511\n42401222\n65058547\n45606830\n99485521\n54545728\n88132474\n66090713\n6084008\n330162\n44743565\n86587902\n93990747\n91549856\n34620575\n59146997\n29331352\n59092429\n49658357\n42508950\n87575690\n37420926\n59131950\n41116356\n66172516\n80579280\n14004943\n12328907\n79656686\n7133726\n7335468\n24851188\n10295959\n98621863\n48338229\n54424932",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "2\n1355786\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 2)"
    },
    {
      "input": "2\n61106659\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 2)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:21",
  "total_test_cases": 20
}
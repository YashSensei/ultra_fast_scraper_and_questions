{
  "problem_code": "problems",
  "title": "Book Shelves",
  "tags": [],
  "text": "When Farmer John isn't milking cows, stacking haybales, lining up his cows, or building fences, he enjoys sitting down with a good book. Over the years, he has collected N books (1 ≤ N ≤ 100,000), and he wants to build a new set of bookshelves to hold them all.Each book i has a width W(i) and height H(i). The books need to be added to a set of shelves in order; for example, the first shelf should contain books 1...k for some k, the second shelf should start with book k+1, and so on. Each shelf can have a total width of at most L (1 ≤ L ≤ 1,000,000,000). The height of a shelf is equal to the height of the tallest book on that shelf, and the height of the entire set of bookshelves is the sum of the heights of all the individual shelves, since they are all stacked vertically.Please help FJ compute the minimum possible height for the entire set of bookshelves.InputLine 1: Two space-separated integers: N and L.Lines 2..1+N: Line i+1 contains two space-separated integers: H(i) and W(i). (1 ≤ H(i) ≤ 1,000,000; 1 ≤ W(i) ≤ L).OutputLine 1: The minimum possible total height for the set of bookshelves.SampleInput5 10\r\n5 7 \r\n9 2 \r\n8 5 \r\n13 2 \r\n3 8Output21ExplanationThere are 5 books. Each shelf can have total width at most 10.There are 3 shelves, the first containing just book 1 (height 5, width 7), the second containing books 2, 3 and 4 (height 13, width 9), and the third containing book 5 (height 3, width 8).",
  "sample_input": "Input5 10\r\n5 7 \r\n9 2 \r\n8 5 \r\n13 2 \r\n3 8Output21",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/SHELF",
  "scraped_at": "2025-08-17 00:33:56",
  "test_cases": [
    {
      "input": "Input5 10\r\n5 7 \r\n9 2 \r\n8 5 \r\n13 2 \r\n3 8Output21",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1 10\nqlilo 1\n3 1\n10 6\n8 1\n10 2\n8 4 10\n8 pttecq",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "6 9\nrce 5\n6 6\n4 3\n8 6\n6 5\n7 2 3\n6 hvv",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "3 6\nswmwc 4\n1 9\n6 7\n8 5\n4 3\n3 6 10\n2 ugi",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "81 75\ne 51\n79 94\n41 22\n38 5\n14 82\n22 48 65\n16 wfvhr",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "69 25\nvfhdwf 11\n63 15\n46 92\n95 70\n90 91\n46 52 41\n22 javumvjl",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "92 85\nwegfq 32\n37 95\n90 91\n57 59\n6 51\n40 36 77\n56 jnmzczf",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "81 70\nmokgb 1\n17 47\n22 27\n87 90\n58 53\n24 36 70\n28 tszbcyvf",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "2 82\nigx 62\n90 15\n46 99\n93 82\n13 81\n81 95 66\n55 zqrri",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "11 21\numw 19\n45 16\n34 34\n16 43\n23 27\n36 9 23\n30 yxffir",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "23 20\nxax 25\n49 30\n16 12\n12 39\n37 23\n33 23 42\n18 vhqfwx",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "21 21\nyfbgke 15\n14 40\n23 50\n22 12\n40 13\n5 13 31\n18 rsy",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "16 38\nwnn 27\n47 46\n44 16\n11 45\n23 20\n34 8 34\n30 nymvlrfrv",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "45 37\nnm 36\n43 10\n40 27\n12 28\n49 19\n41 33 39\n25 sengbcfc",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "41 39\nrymds 46\n22 43\n10 35\n6 49\n47 34\n28 47 23\n18 u",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "23 38\ny 27\n47 19\n23 15\n37 8\n31 8\n43 19 12\n44 rn",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "100 100\nr 100\n100 100\n100 100\n100 100\n100 100\n100 100 100\n100 d",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "100 100\nbrz 100\n100 100\n100 100\n100 100\n100 100\n100 100 100\n100 itgztzd",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "100 99\nh 100\n100 2\n99 2\n2 99\n2 2\n99 1 2\n99 rbtsl",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "100 99\nm 1\n2 99\n1 99\n2 100\n2 99\n1 100 99\n99 lstohoz",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:20",
  "total_test_cases": 20
}
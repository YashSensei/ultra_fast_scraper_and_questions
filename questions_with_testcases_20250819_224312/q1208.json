{
  "problem_code": "problems",
  "title": "Sum of subsequences",
  "tags": [],
  "text": "Given an positive integer n and a sequence a1... an.There are q queries. Each query has one of two formats:Format 0 l r k: you need to output the k-th smallest positive integer that can’t be partition into a sum of any subsequence of al... ar.Format 1 l r x: you need to output the numbers of ways to partition x into a sum of a subseqence of al... ar(or the numbers of subsequence that sum of all its elements equal to x) (modulo 232).InputFirst line: two positive n and q (1 ≤ n ≤ 100, 1 ≤ q ≤ 10000)Second line: n positive a1…an­(0 ≤ ai≤ 100)Next q lines: each line denotes a query with one of two format listed above (1 ≤ l ≤ r ≤ n, 1 ≤ k ≤ 109, 0 ≤ x ≤ 109)Outputq lines: the i-th line is the answer of i-th query.SampleInput:5 3\r\n1 0 2 4 1\r\n0 2 3 2\r\n1 1 4 0\r\n1 2 5 3Output:3\r\n1\r\n2",
  "sample_input": "Input:5 3\r\n1 0 2 4 1\r\n0 2 3 2\r\n1 1 4 0\r\n1 2 5 3Output:3\r\n1\r\n2",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/BLSUMSEQ",
  "scraped_at": "2025-08-17 00:33:48",
  "test_cases": [
    {
      "input": "5 3\r\n1 0 2 4 1\r\n0 2 3 2\r\n1 1 4 0\r\n1 2 5 3",
      "expected_output": "3\r\n1\r\n2",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "6 1\n3 9 10 9 10\n1 7 9 5\n2 10 1 2\n4 4 5 7",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "4 10\n10 4 5 4 6\n4 7 3 9\n10 10 7 3\n10 7 9 6",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "6 7\n5 3 2 1 10\n9 10 6 5\n7 9 9 4\n6 1 7 10",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "35 4\n36 1 32 78 34\n32 72 84 3\n58 80 16 78\n39 63 82 27",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "24 10\n23 41 34 63 89\n7 47 81 87\n22 59 64 80\n61 55 85 19",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "9 5\n81 78 85 63 50\n1 79 94 8\n27 92 79 42\n1 17 13 63",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "99 50\n30 18 7 11 21\n98 39 30 18\n86 89 78 58\n39 23 91 44",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "62 53\n6 54 73 3 71\n16 20 36 42\n19 34 49 57\n83 30 69 5",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "11 32\n49 34 16 8 30\n33 32 44 37\n50 21 40 22\n32 41 6 42",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "27 47\n47 50 29 43 42\n22 20 44 49\n43 31 32 28\n31 17 10 44",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "13 14\n7 15 42 5 13\n18 34 13 7\n10 17 11 23\n20 27 32 32",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "9 37\n38 38 29 44 6\n41 36 25 34\n38 36 32 42\n5 48 43 27",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "42 5\n31 34 21 5 29\n30 33 8 14\n40 20 31 27\n22 19 19 34",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "37 47\n50 12 24 21 40\n42 41 44 49\n46 38 23 44\n28 33 50 10",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "19 25\n17 48 31 31 26\n27 42 46 23\n29 11 29 21\n19 19 25 19",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "100 100\n100 100 100 100 100\n100 100 100 100\n100 100 100 100\n100 100 100 100",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "100 100\n100 100 100 100 100\n100 100 100 100\n100 100 100 100\n100 100 100 100",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "100 1\n1 1 100 100 1\n2 1 2 1\n2 100 99 2\n100 1 2 99",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 1\n2 1 1 100 100\n100 1 100 2\n2 1 100 1\n99 99 1 100",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:16",
  "total_test_cases": 20
}
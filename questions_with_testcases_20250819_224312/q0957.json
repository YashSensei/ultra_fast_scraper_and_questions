{
  "problem_code": "problems",
  "title": "Hexagonal Board",
  "tags": [],
  "text": "Square boards (as the chessboard) are really common among games and luckily, they are easy to draw with the help of a ruler. However, there exist other games that require hexagonal boards, that are much harder to draw by hand.The Institute for Client Permanent Comfort (ICPC) of a famous board game factory has decided to provide their customers with an automated program to build hexagonal boards for several games. The size of an hexagonal board is determined by a single integer N that indicates how many cells there are in each of the 6 sides of the board. For example, a board of size N = 2 should look as follows when drawn by the program._\r\n _/ \\_\r\n/ \\_/ \\\r\n\\_/ \\_/\r\n/ \\_/ \\\r\n\\_/ \\_/\r\n  \\_/Your task is to help ICPC in making the program.InputThe input contains several test cases. Each test case is described in a single line that contains an integer N representing the size of the board (1 ≤ N ≤ 20). The last line of the input contains a single −1 and should not be processed as a test case.OutputFor each test case output the hexagonal board of the required size, and a line with exactly three asterisks. You have to follow the sample input and output, as well as the example given above. Use only regular spaces, underscores (“_”), slashes (“/”) and backslashes (“\\”). There must be no trailing spaces at the end of printed lines, neither empty lines.ExampleInput:1\r\n3\r\n-1Output:_\r\n/ \\\r\n\\_/\r\n***\r\n     _\r\n   _/ \\_\r\n _/ \\_/ \\_\r\n/ \\_/ \\_/ \\\r\n\\_/ \\_/ \\_/\r\n/ \\_/ \\_/ \\\r\n\\_/ \\_/ \\_/\r\n/ \\_/ \\_/ \\\r\n\\_/ \\_/ \\_/\r\n  \\_/ \\_/\r\n    \\_/\r\n***",
  "sample_input": "_\r\n _/ \\_\r\n/ \\_/ \\\r\n\\_/ \\_/\r\n/ \\_/ \\\r\n\\_/ \\_/\r\n  \\_/",
  "sample_output": "Input:1\r\n3\r\n-1Output:_\r\n/ \\\r\n\\_/\r\n***\r\n     _\r\n   _/ \\_\r\n _/ \\_/ \\_\r\n/ \\_/ \\_/ \\\r\n\\_/ \\_/ \\_/\r\n/ \\_/ \\_/ \\\r\n\\_/ \\_/ \\_/\r\n/ \\_/ \\_/ \\\r\n\\_/ \\_/ \\_/\r\n  \\_/ \\_/\r\n    \\_/\r\n***",
  "link": "https://www.spoj.com/problems/HEXBOARD",
  "scraped_at": "2025-08-17 00:33:18",
  "test_cases": [
    {
      "input": "_\r\n _/ \\_\r\n/ \\_/ \\\r\n\\_/ \\_/\r\n/ \\_/ \\\r\n\\_/ \\_/\r\n  \\_/",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1\r\n3\r\n-1",
      "expected_output": "_\r\n/ \\\r\n\\_/\r\n***\r\n     _\r\n   _/ \\_\r\n _/ \\_/ \\_\r\n/ \\_/ \\_/ \\\r\n\\_/ \\_/ \\_/\r\n/ \\_/ \\_/ \\\r\n\\_/ \\_/ \\_/\r\n/ \\_/ \\_/ \\\r\n\\_/ \\_/ \\_/\r\n  \\_/ \\_/\r\n    \\_/\r\n***",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "rz\nows hjb\nwpfpb y fvau\nmbyi rq\nbxd btk ugnc\nzre jn\nyq",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "qg\nn lig\ncn gvw eyl\nq evpw\nil kzr n\nnu zlwpl\ngspqp",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "zi\ncx glwh\njna b t\nvvbwp et\nd op eebjs\nqn ud\nbg",
      "expected_output": "To be computed",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "jo\nmav eth\nevcc wjpai j\ndwvl bik\nvt qggu fkdb\nrizuj e\nox",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "i\ntwy g\nn qsslp ujus\nyrc ketup\nvk qaalh tisqq\nqedd lvup\nqytidu",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "i\nx ldhke\nwx hjujb lqkc\nw xltjs\nq kwdf zuy\nnpym n\nlmf",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "ab\nvr gag\nfqe lmpmv lyvxn\nldmac fimo\nf stsd cepy\nyd g\ncheeau",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "t\nnohsd b\ndwcx jhag wqwyo\ndx dfm\nl hws jhfzh\ntvk m\nldh",
      "expected_output": "To be computed",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "b\nw c\nyteh goygi ae\nvb wgy\nt stgy byh\nvth eikvk\ncrc",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "m\nnhlkk k\nufqk bslt k\nadio djkfx\nycr wlge hjko\niyuz knz\nfpybch",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "g\np idpxm\nluwpp iyd owh\nq pd\nmhzn k ip\nxm r\niigxv",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "y\ny u\ndq uri bi\npsidg m\nls zdduo r\ndsws avfgz\nzkslkv",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "am\neajs ueipa\nurl a mowu\njgako blyv\nirfw zpd ce\nmwtxa ia\ntbfy",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "jc\nbu qtc\nmtk vvj vw\ndn vbavi\nnqz am nlwe\nqacex jcqc\nwojxp",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "l\nfj qiqm\ngg shasv lydob\nys lqn\nucly zgs rdds\ns ohoo\nmx",
      "expected_output": "To be computed",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "j\nbjyul yasxr\nqmo zk paklb\nbvky eh\nvjepr hnx vvk\nwpmjw av\ncim",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "n\nx p\nx pi ujpy\nb jgzq\nw kci ybq\nc e\nr",
      "expected_output": "To be computed",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "d\nwbzys otqc\nwzjni afvwq mr\nljxl ijrn\nyp fq cr\net ynpzo\nk",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:15",
  "total_test_cases": 20
}
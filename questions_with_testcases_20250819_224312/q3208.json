{
  "problem_code": "problems",
  "title": "Co",
  "tags": [],
  "text": "Given a number N, you are asked to count the number of integers between A and B inclusive which are relatively prime to N.Two integers are said to be co-prime or relatively prime if they have no common positive divisors other than 1 or, equivalently, if their greatest common divisor is 1. The number 1 is relatively prime to every integer.InputThe first line on input contains T (0 < T ≤ 100) the number of test cases, each of the next T lines contains three integers A, B, N where (1 ≤ A ≤ B ≤ 1015) and (1 ≤ N ≤ 109).OutputFor each test case, print the number of integers between A and B inclusive which are relatively prime to N. Follow the output format below.SampleInput:2\r\n1 10 2\r\n3 15 5Output:Case #1: 5\r\nCase #2: 10In the first test case, the five integers in range [1, 10] which are relatively prime to 2 are {1, 3, 5, 7, 9}.",
  "sample_input": "Input:2\r\n1 10 2\r\n3 15 5Output:Case #1: 5\r\nCase #2: 10",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/LCPC11B",
  "scraped_at": "2025-08-17 00:34:21",
  "test_cases": [
    {
      "input": "2\r\n1 10 2\r\n3 15 5",
      "expected_output": "Case #1: 5\r\nCase #2: 10",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2\n1\n1",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "2\n2\n3",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n8\n1\n9\n10\n1",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "17\n10198202\n43632248\n29224048\n60112408\n59900319\n38250293\n79227467\n55991091\n90454051\n64599860\n87183678\n3268400\n35874678\n19775988\n96513085\n24029185\n66550560",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "8\n30222193\n31602308\n31136932\n28932029\n43166154\n38928475\n55051007\n89018238",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "18\n26414171\n90303295\n52884514\n65222170\n37058164\n53838508\n65521167\n94476750\n10434142\n54014987\n61485725\n51973746\n25450245\n49750452\n15805983\n93452201\n71428527\n72782350",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "12\n52271026\n35662268\n61211792\n95154390\n47493281\n8001952\n63251335\n37083877\n51293426\n81795850\n75165890\n76557688",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "15\n70950475\n81219657\n73860037\n80388908\n43459565\n77044244\n9948541\n46832153\n82796756\n7651968\n69138924\n49531194\n98616237\n30462021\n12271917",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "53\n47191\n3029\n59290\n42556\n4862\n59499\n8135\n90012\n24837\n64694\n69072\n86058\n57633\n50599\n27848\n90888\n96290\n19234\n22333\n76368\n32189\n15795\n64882\n69513\n11258\n58860\n83534\n52221\n47101\n47242\n21214\n73177\n87064\n33490\n49259\n63389\n35137\n25628\n54447\n78680\n40976\n84138\n95027\n20516\n36422\n54511\n21148\n77172\n69870\n64415\n58609\n75108\n68023",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "88\n1840\n21634\n94951\n15798\n17183\n8818\n53519\n1506\n15485\n26361\n94439\n22360\n7790\n65072\n58359\n35542\n87512\n16285\n80646\n39859\n33089\n16296\n98522\n79386\n43551\n38563\n6940\n77460\n57482\n97587\n89795\n60307\n9141\n1657\n65044\n57649\n50992\n20379\n55374\n18583\n77137\n33074\n29110\n30668\n40317\n51481\n44669\n89777\n69246\n54680\n57545\n62590\n5669\n70201\n95727\n15430\n55357\n94839\n16208\n32729\n89448\n59613\n8793\n91085\n16929\n49800\n96214\n99059\n17892\n10113\n65535\n47392\n87327\n46407\n4345\n77110\n12522\n55344\n5192\n54349\n78333\n36890\n68245\n94097\n23138\n39649\n76833\n34528",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "80\n60705\n94342\n87620\n42544\n2136\n73687\n80953\n38667\n47215\n8283\n68848\n77088\n51324\n90677\n77339\n53949\n65504\n8173\n25922\n92998\n64491\n24921\n23215\n59826\n88093\n91063\n42233\n89011\n65672\n79470\n99399\n97546\n10714\n60677\n92181\n1657\n97995\n73188\n33864\n23424\n26615\n5602\n18434\n9114\n47010\n55816\n46499\n31998\n3557\n25633\n56131\n89783\n85607\n81309\n62366\n98688\n64134\n81067\n46073\n92078\n99915\n24686\n8541\n16328\n881\n96929\n34170\n78418\n86217\n36665\n32290\n59010\n98748\n30855\n67790\n33769\n16943\n82771\n47678\n6861",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "109\n87366\n88379\n63439\n31994\n10386\n11451\n69825\n20822\n85115\n48248\n28261\n15076\n91082\n18119\n67335\n31626\n23320\n62586\n60156\n51114\n72296\n23322\n49849\n60489\n25996\n22416\n46730\n11100\n61790\n16317\n65640\n53744\n21956\n79562\n38221\n73872\n65122\n40269\n68647\n90932\n35424\n88473\n68212\n23037\n23862\n49044\n67497\n4548\n64229\n43702\n27878\n70380\n94548\n61747\n49366\n81421\n15321\n52131\n36177\n90342\n62572\n37558\n45115\n78553\n87633\n92862\n58244\n32525\n56799\n98959\n50383\n26383\n87529\n71342\n58638\n73221\n46562\n20731\n87585\n41714\n89158\n79430\n54790\n90395\n5683\n44138\n75568\n5087\n30359\n40531\n62141\n28750\n32134\n64060\n72322\n8077\n83604\n56049\n90898\n53052\n46010\n47552\n61593\n74986\n4190\n16759\n57587\n49331\n85309",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "73\n29678\n23073\n33894\n18749\n64018\n12679\n9956\n72062\n42931\n92296\n55406\n8269\n70831\n49106\n26889\n61565\n2698\n80055\n85170\n83311\n52940\n33510\n54925\n87337\n8582\n40182\n427\n63589\n40591\n81183\n59236\n46509\n26458\n76576\n39722\n58575\n6341\n86889\n4831\n85862\n38797\n36208\n55541\n69120\n94468\n22734\n76313\n27333\n26615\n63596\n10022\n56622\n26541\n77986\n93061\n31273\n41295\n37010\n22557\n14802\n85232\n90604\n82494\n89605\n24192\n73419\n9104\n12946\n61294\n55940\n89528\n15281\n95535",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "97\n79514\n78345\n71438\n84831\n85552\n13431\n29757\n42731\n18643\n83270\n14408\n55781\n89614\n75499\n40532\n4251\n70711\n8588\n19542\n40065\n40411\n95965\n32583\n81067\n39168\n16162\n52478\n48288\n15287\n49653\n5043\n5462\n87479\n60474\n76165\n51492\n22376\n22597\n74401\n18135\n53323\n34172\n8807\n52246\n94557\n74889\n66595\n95672\n60086\n32887\n13684\n39007\n9361\n39686\n31362\n30390\n36857\n19218\n25921\n47211\n68356\n7774\n34426\n3157\n60902\n4212\n51804\n60190\n54172\n96257\n7993\n6273\n79880\n50849\n35540\n54629\n90111\n89103\n15691\n27747\n20647\n58773\n70270\n6755\n10134\n46559\n4313\n89215\n14555\n77167\n82540\n54122\n60475\n63111\n82247\n13715\n73293",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "102\n16635\n72942\n66580\n21925\n3548\n56505\n95613\n31699\n34403\n92401\n18517\n14200\n7635\n55271\n28783\n53598\n4864\n67807\n25246\n31165\n43515\n7502\n38016\n72035\n5602\n71826\n64529\n70653\n26674\n60438\n23277\n6250\n22793\n76510\n10686\n14744\n49637\n59951\n12110\n82052\n12668\n88677\n29127\n72056\n42622\n63809\n93792\n87252\n71881\n4416\n48568\n21056\n2323\n9190\n85875\n92490\n80176\n34927\n5832\n3700\n55477\n66303\n60048\n89797\n17339\n78064\n69551\n82581\n25912\n62955\n49770\n25389\n24040\n81739\n55505\n6899\n1996\n92621\n2229\n16379\n39606\n42921\n89743\n82438\n25240\n2440\n49549\n75741\n53232\n44374\n41190\n18387\n4236\n36228\n35684\n23641\n80105\n66607\n13928\n89218\n58074\n81447",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "109\n19289941\n38317692\n50701959\n57241629\n96772729\n44819871\n98544178\n64925860\n57154069\n8437890\n10555491\n53927240\n93210111\n22531836\n77015803\n66915939\n37075944\n97142223\n58107366\n30203714\n94674125\n47915603\n38835575\n89393452\n43787900\n11895701\n64974620\n34578224\n47881913\n39560112\n24493316\n23240740\n4053434\n43962288\n75280123\n77210967\n12809510\n96302915\n1850665\n80174665\n90883530\n1504587\n95272772\n55997666\n24432938\n26605442\n77661210\n13607710\n81003148\n86096867\n79593200\n42784215\n39342823\n57951971\n6648797\n27519487\n1899993\n44539674\n99280367\n49332487\n49601742\n43185552\n77159908\n94027934\n43574802\n98552541\n37605595\n13772381\n93221500\n45716976\n29169249\n15010375\n8689968\n55267091\n8313896\n36612882\n40328125\n17281081\n61062895\n34319479\n25979401\n85241463\n1446274\n78781955\n22705016\n88285000\n90448953\n75237473\n46534252\n82596009\n40926248\n33546030\n7007138\n1381462\n26875766\n87952898\n91625442\n39796932\n67489940\n89371193\n7464930\n47358456\n74716194\n72941560\n50728311\n6616593\n1926758\n12545201\n78026952",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 109)"
    },
    {
      "input": "109\n64860015\n71179019\n89625956\n92063718\n96489065\n14697393\n12602210\n45088076\n76754569\n92933215\n35457175\n7836557\n401946\n91982156\n53145558\n97176832\n93530864\n41207728\n30243528\n93053434\n97987669\n20264498\n29148415\n37063539\n29747990\n8582453\n51202049\n38345865\n45588101\n1747353\n17327947\n92055970\n63559133\n63913846\n33854648\n62363057\n53420378\n25366672\n55304927\n45647578\n32199577\n31260656\n5573367\n57740134\n48708539\n69308522\n6053276\n70379943\n52716684\n19643334\n21625462\n50866497\n15263365\n74452543\n20047168\n33842161\n61719284\n30298423\n35087820\n20408382\n29138051\n62474701\n25633189\n92959399\n7874380\n52085470\n44151750\n62197273\n85222199\n62037371\n46690800\n46960380\n34290043\n95388234\n73867680\n70816276\n93235746\n87972658\n86878408\n70409656\n25093406\n20667021\n89985629\n12618859\n60427395\n98069118\n78905542\n64125654\n4816128\n59676415\n51921868\n86617976\n91470346\n57611363\n75597167\n45001329\n49231666\n97513113\n82643366\n24985185\n19464501\n66594153\n54980760\n74786650\n95016359\n83245526\n89243705\n93240284\n71305897",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 109)"
    },
    {
      "input": "1\n42308634",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 1)"
    },
    {
      "input": "2\n100000000\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 2)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:23",
  "total_test_cases": 20
}
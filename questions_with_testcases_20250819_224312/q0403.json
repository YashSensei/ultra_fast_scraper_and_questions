{
  "problem_code": "problems",
  "title": "Acronym",
  "tags": [],
  "text": "An acronym is made of up the initial letter(s) of the words in a phrase, such as EU (European Union) and BREXIT (BRitish EXIT). In this problem, we can also either ignore or consider the conjunction \"and\", and the following adpositions \"in\", \"on\", \"at\", \"to\", \"of\", \"from\", \"for\" and \"with\" when making the acronym, such as BENELUX (BElgium, NEtherlands and LUXembourg) and RADAR (RAdio Detection And Ranging).Given an acronymA, and a list ofNstringsW1,W2...WN, you would like to find out the number of possible combinations of making the given acronym by using all the N strings following their order. That is, the acronym must be made up of at least one initial letter of each word, except the above-mentioned conjunction and adpositions (either skip or use it). Both A and the N strings only consist of lowercase latin letters.InputThe first line is the number of test casesT. (1 ≤ T ≤ 20)For each test case, it starts with one integerN. (1 ≤ N ≤ 200)Next line is a stringA. (1 ≤ |A| ≤ 104)Following N lines, each consisting of one stringWi. (1 ≤ |Wi| ≤ 50)It is guaranteed that W1is neither conjunction nor adposition.OutputOutput one integer indicating the number of possible combinations.ExampleInput:3\r\n3\r\nduckhim\r\nduck\r\nhello\r\nmoto\r\n\r\n7\r\nnatiofforessaa\r\nnational\r\noffice\r\nfor\r\nforest\r\nsafety\r\nin\r\naachen\r\n\r\n4\r\nwhiskey\r\nwhat\r\nis\r\nsecret\r\nkeyOutput:0\r\n4\r\n1ExplanationIn case 1, no combination is possible.In case 2, there are four possible combinations:NATIonalOFfice forFOREStSAfety inAachenNATIonalOFfice forFOREStSafety inAAchenNATIonalOfficeForFOREStSAfety inAachenNATIonalOfficeForFOREStSafety inAAchenIn case 3, only one possible combination exists:WHatIsSecretKEY",
  "sample_input": "Input:3\r\n3\r\nduckhim\r\nduck\r\nhello\r\nmoto\r\n\r\n7\r\nnatiofforessaa\r\nnational\r\noffice\r\nfor\r\nforest\r\nsafety\r\nin\r\naachen\r\n\r\n4\r\nwhiskey\r\nwhat\r\nis\r\nsecret\r\nkeyOutput:0\r\n4\r\n1",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/ACRYM",
  "scraped_at": "2025-08-17 00:33:08",
  "test_cases": [
    {
      "input": "3\r\n3\r\nduckhim\r\nduck\r\nhello\r\nmoto\r\n\r\n7\r\nnatiofforessaa\r\nnational\r\noffice\r\nfor\r\nforest\r\nsafety\r\nin\r\naachen\r\n\r\n4\r\nwhiskey\r\nwhat\r\nis\r\nsecret\r\nkey",
      "expected_output": "0\r\n4\r\n1",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2\n2\n8",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n3",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n3",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "6\n26821157\n33542131\n91155846\n2667079\n75533880\n2465581",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "9\n99546531\n25275440\n14024233\n55168541\n49505241\n99639701\n94478574\n99236536\n81242237",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "15\n76465865\n41830389\n89815684\n31847816\n80219955\n14816748\n86548521\n80791063\n23266992\n84574941\n71087320\n46769042\n2619890\n14125473\n39731788",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "16\n79365002\n77558271\n98457046\n26910818\n83253923\n79652047\n93040790\n1294135\n19281123\n25595589\n51993121\n88097832\n48586509\n52152778\n89530610\n5474701",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "20\n92037224\n93941369\n2029350\n75971203\n53461988\n54186094\n35801623\n3970761\n47727835\n82829917\n187320\n36984354\n5842753\n51029159\n70169898\n69752468\n33821780\n60854367\n8498894\n30682985",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "109\n48451\n79792\n98154\n67635\n62289\n46102\n98974\n97143\n9557\n22298\n58350\n82617\n41183\n47636\n91447\n3059\n60689\n59549\n91432\n43147\n50960\n34025\n21610\n6283\n78192\n76083\n24157\n47814\n11311\n19282\n2925\n91630\n87416\n53352\n23258\n13649\n37717\n47887\n95741\n39789\n94370\n24748\n75373\n24731\n18784\n75555\n62509\n17162\n27469\n54001\n89517\n57984\n62974\n15028\n86293\n29396\n18184\n72131\n70485\n78693\n67368\n55684\n56342\n86703\n45755\n30492\n38058\n37262\n96391\n71844\n14527\n93273\n27608\n63809\n25175\n40859\n98978\n71794\n97566\n39712\n22763\n19787\n71208\n63080\n78130\n72929\n27850\n23924\n45769\n44100\n89455\n14795\n5373\n68303\n7722\n27984\n91982\n29305\n82072\n60914\n26283\n22057\n13955\n91172\n56325\n42364\n50680\n10253\n29688",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "173\n82000\n873\n16477\n77206\n23817\n59356\n63410\n42509\n69877\n17495\n92298\n31007\n39377\n36797\n87615\n94917\n79417\n8580\n84803\n36993\n85455\n77468\n88624\n54452\n14061\n86970\n53324\n55136\n47935\n29085\n49781\n13021\n15684\n17520\n84448\n75756\n63938\n37665\n49720\n43511\n52063\n52016\n5824\n83900\n19093\n6592\n79302\n19527\n64047\n51076\n98075\n25375\n36371\n49189\n88141\n65751\n69729\n6746\n1650\n66493\n37613\n16981\n75037\n28656\n79846\n7963\n83328\n5663\n50296\n15514\n26381\n40223\n91845\n18046\n89661\n40282\n15161\n84653\n98076\n60680\n68726\n974\n86349\n82141\n92007\n84555\n55055\n3165\n51029\n7262\n9162\n43604\n54098\n56763\n25863\n78774\n85095\n17826\n8094\n20214\n65902\n26346\n3498\n39496\n18617\n18823\n62856\n1830\n77457\n3953\n3549\n34757\n29258\n23666\n33222\n24223\n67265\n51331\n93960\n16893\n16735\n49806\n2577\n89487\n88390\n73765\n42529\n37085\n47056\n99910\n5129\n24260\n8373\n51226\n65295\n71548\n91617\n7551\n67222\n4266\n32475\n39949\n58653\n6642\n67551\n39969\n47061\n88090\n16599\n89541\n55584\n99596\n99450\n61381\n86961\n75465\n84486\n77148\n64770\n57713\n35339\n42794\n53811\n60867\n41551\n26991\n46775\n82744\n80339\n32026\n67360\n91054\n66202",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "156\n39562\n84855\n85027\n38040\n63380\n92657\n3612\n91219\n5571\n38831\n35022\n72395\n25451\n14729\n5106\n11366\n1525\n15936\n65571\n16552\n96972\n60038\n28715\n1560\n58565\n94696\n88324\n98342\n48575\n68719\n41568\n65579\n74466\n88786\n43528\n64478\n88465\n16551\n29910\n38826\n48449\n10887\n74622\n64059\n83139\n69380\n57117\n77280\n71378\n34196\n5369\n51235\n55733\n8517\n34246\n71193\n60042\n14020\n15710\n9397\n9456\n29549\n61904\n81344\n48672\n4915\n28429\n20542\n96448\n4893\n42808\n95430\n41217\n89878\n97528\n24111\n50585\n27564\n5533\n78326\n91198\n69086\n68777\n11347\n43680\n17663\n6186\n17741\n46779\n25846\n64553\n43396\n36629\n31437\n16584\n57217\n33434\n41800\n91405\n37218\n5275\n40855\n5761\n6340\n27988\n81918\n40851\n66480\n95664\n24289\n23824\n76380\n45618\n69788\n74939\n70402\n39459\n95300\n13555\n16423\n16849\n24399\n37282\n2038\n72642\n14688\n67752\n52290\n79176\n19766\n15690\n15732\n80728\n60602\n13919\n65769\n87949\n50357\n82617\n81661\n97935\n90776\n22250\n26302\n32192\n94004\n22450\n94630\n90817\n30581\n90713\n75580\n97376\n15056\n74130\n95209",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "187\n94827\n53901\n86637\n88854\n19606\n73561\n45380\n28397\n45038\n36277\n4547\n35510\n76638\n64849\n47525\n32792\n67734\n72292\n57154\n21566\n61925\n3637\n20552\n34504\n80356\n96392\n17945\n16365\n64259\n90653\n83942\n80660\n3059\n38837\n38996\n65862\n69651\n40705\n48507\n71720\n58597\n34891\n47785\n76486\n64898\n17603\n31893\n4506\n29114\n97976\n64048\n43805\n3693\n46383\n89093\n94764\n14745\n54516\n34964\n87523\n4813\n19298\n18039\n10626\n62519\n65494\n56663\n37124\n96928\n15529\n88990\n49489\n61219\n78105\n73631\n16315\n16312\n69126\n29550\n87160\n51178\n39646\n49358\n75703\n22620\n79003\n42466\n2159\n32731\n53114\n43637\n54291\n56738\n13405\n48774\n66895\n35319\n17474\n3968\n96043\n9944\n13913\n85101\n40212\n88600\n7795\n34062\n22900\n50493\n45146\n69565\n81330\n74036\n74421\n43407\n55608\n6096\n55554\n5112\n50275\n20572\n82379\n73442\n69434\n78657\n15087\n18279\n36542\n1799\n25217\n43792\n81494\n28153\n93951\n22569\n42919\n88205\n63128\n1843\n82884\n47430\n26431\n66771\n95828\n48366\n61970\n31418\n18696\n99134\n88174\n54289\n63844\n52567\n82642\n19772\n48949\n46461\n48407\n69002\n1966\n27721\n91817\n60588\n67634\n57293\n70050\n98947\n82000\n6938\n62115\n11528\n83732\n1859\n52445\n45538\n50306\n36823\n74141\n3551\n27359\n62943\n24550\n51657\n14041\n40340\n5848\n41738",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "58\n8364\n26822\n66843\n52265\n6084\n95913\n82007\n82949\n61188\n36272\n54530\n98967\n68218\n11778\n90302\n48517\n88104\n46253\n69890\n64091\n89209\n92497\n16567\n15844\n88990\n24620\n6196\n15991\n80638\n81374\n26013\n26267\n13898\n61364\n82348\n73852\n23289\n30648\n70161\n47562\n5534\n56052\n58977\n31324\n41215\n94965\n8971\n17002\n61004\n14573\n12884\n96049\n85919\n97803\n78467\n4401\n76623\n48935",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "44\n23058\n16773\n33053\n71927\n78417\n82575\n92524\n63935\n9222\n26317\n38798\n1010\n48223\n80608\n12122\n51875\n64463\n57263\n43821\n31625\n26785\n11960\n2652\n89642\n2196\n55540\n23261\n49048\n81343\n76628\n64587\n4696\n75785\n38985\n91292\n55771\n48657\n98305\n64847\n28589\n85934\n52061\n12739\n44742",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "55\n63056\n77143\n57865\n73728\n42341\n25562\n79980\n75962\n23574\n55363\n63605\n91691\n89134\n52798\n51692\n38756\n3551\n10895\n30069\n90563\n48408\n37\n62906\n30195\n41273\n93853\n82529\n32201\n87733\n50396\n32766\n43228\n94143\n61907\n50198\n72102\n37276\n86182\n68877\n27223\n15531\n64353\n56649\n67836\n35306\n13307\n88045\n44564\n76434\n47237\n73946\n39934\n18443\n31570\n27156",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "200\n60632919\n75232463\n65658657\n66876109\n89316471\n76098337\n22422174\n4432431\n35630851\n21448535\n796198\n28004395\n12223107\n73320300\n37659068\n92605587\n77802529\n33280947\n28017438\n50927579\n95657169\n93567242\n64762251\n51355996\n11914963\n70180829\n63535052\n16907404\n9341424\n89080097\n77646050\n34548590\n74214733\n1594149\n59810462\n27937800\n91483723\n13048758\n90095671\n68085479\n60807514\n67210891\n6186300\n22948329\n37122472\n89137863\n62920948\n60177179\n2492484\n48910465\n52468386\n54327806\n39688956\n24780737\n97908760\n1937313\n70520287\n73962398\n38701018\n63279889\n18744941\n37712520\n44075680\n42324772\n39892675\n44966507\n31845285\n7500944\n41731241\n78005072\n7212843\n91150339\n29341315\n34262646\n17706850\n33682704\n12695305\n94721044\n96244529\n13522795\n86166425\n7792361\n5775916\n32846812\n48745661\n26431997\n50208823\n65919082\n99270752\n41068178\n20957786\n4428039\n7470809\n85415217\n58872728\n63554004\n17936908\n18678028\n85723526\n42847706\n83368578\n68106730\n24321434\n99738583\n13176139\n98297121\n32891818\n25442056\n62500396\n19474028\n10694259\n21154875\n56688631\n55249083\n1123117\n61585436\n38638289\n69678220\n90132712\n92600612\n15817084\n53065384\n57791824\n82750942\n12762145\n51476716\n41884289\n38729410\n14349091\n36002445\n471676\n18678179\n64912723\n6223695\n27692863\n8936013\n96832807\n9157530\n71560064\n59727134\n69750883\n45351163\n77249889\n84207967\n22837909\n84827410\n34562082\n11404737\n29308514\n926860\n6506509\n33566185\n56775160\n39384652\n71905560\n62989406\n92702386\n75944226\n10988083\n36289031\n41436975\n22197496\n1497831\n13939435\n50441913\n91146941\n17446674\n74752851\n66349101\n64459383\n46842264\n11819524\n6291980\n60479342\n61389811\n63360541\n69069130\n53941446\n94937930\n8010710\n24034625\n91359805\n99974044\n56974137\n30283693\n35500812\n99145087\n72986423\n98481015\n93167921\n55706976\n71331238\n32281628\n64370492\n57803337\n78881015\n67719309\n85816342\n54334078\n68085173",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 200)"
    },
    {
      "input": "200\n22638075\n21447246\n82167349\n60549577\n93706443\n99971543\n28883352\n22547189\n59336482\n8303675\n84497567\n38130359\n54340552\n72511200\n12885828\n65950388\n96994628\n82120786\n27008608\n62028597\n73676667\n21950827\n40912501\n52800712\n92353534\n92129481\n37055863\n10684004\n44364882\n53486089\n37314102\n56567940\n54967310\n93007921\n4496096\n44582239\n19058948\n66157136\n14751419\n78168170\n24674290\n72810366\n93946544\n84218716\n71293171\n79990367\n39153856\n73133956\n34193403\n16944710\n84584638\n29327252\n13734830\n70457097\n36163112\n68248165\n42964304\n11462983\n80169858\n34633268\n3153700\n50711717\n69472084\n21385612\n32908172\n74581786\n94395555\n553407\n27635080\n91104109\n28589183\n6839484\n19599386\n33009474\n87908104\n15164011\n42315157\n60750814\n66293460\n22060276\n8900510\n7507074\n56944347\n62401517\n61568336\n85627905\n98653450\n49892664\n23342410\n23872876\n74935381\n3076553\n7245062\n27981231\n70980293\n51457906\n90497173\n95610560\n98839280\n39982532\n93453485\n5227325\n34409472\n21631526\n78669208\n230266\n39496200\n40738929\n25710329\n36593850\n69747461\n97464332\n95275391\n36793230\n69439099\n58980002\n60818983\n61914794\n63480152\n65069743\n33543005\n49033886\n20683835\n58919676\n69285029\n12779820\n48961952\n46103621\n28908378\n49697370\n88886147\n51938059\n88441621\n39621976\n18666891\n57699685\n54768246\n72438511\n54587898\n39156475\n98025886\n52134388\n89971942\n7958159\n60366394\n47259578\n4661435\n42574698\n70907607\n68324017\n54446939\n34412065\n67449150\n99236907\n95593278\n84469254\n94631372\n37625905\n58280820\n3386511\n16577979\n93746845\n49584003\n95972106\n76946508\n34171148\n94294075\n66475270\n83126970\n68505619\n9672158\n71242813\n90960778\n95047938\n14564239\n14776985\n98266773\n18112765\n87008679\n5129663\n35729616\n48042183\n5175965\n16479544\n95542262\n57364601\n13485628\n80335287\n42507984\n86019196\n20506102\n76719867\n63380387\n58269487\n82642424\n76885315\n8954389\n65499008\n80976590\n12297860",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 200)"
    },
    {
      "input": "1\n1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 1)"
    },
    {
      "input": "200\n1\n92590251\n17372319\n47673700\n100000000\n27313351\n63156744\n16793617\n100000000\n1\n100000000\n1\n100000000\n1\n100000000\n1\n1\n98042095\n57180552\n9284795\n15235305\n1\n1\n1\n89161130\n1\n100000000\n99349803\n100000000\n1\n100000000\n1\n100000000\n82414261\n100000000\n100000000\n1\n30833925\n1\n100000000\n1\n1\n67150386\n45012666\n1\n43383248\n100000000\n100000000\n100000000\n100000000\n1\n1\n100000000\n1\n1\n97655355\n100000000\n100000000\n100000000\n1\n30402777\n71479105\n100000000\n100000000\n1\n1\n1\n1\n1\n29419106\n1\n75587037\n1\n1\n11372132\n47782047\n1\n1\n100000000\n1\n1\n2613517\n1\n1\n1\n1\n47411779\n32137858\n33344893\n91962266\n1\n100000000\n46158130\n1\n100000000\n86856692\n66820874\n93045253\n1\n100000000\n100000000\n100000000\n46394948\n50447659\n100000000\n100000000\n99166577\n92314620\n7613379\n100000000\n1\n100000000\n61764233\n67945682\n18188606\n1\n100000000\n100000000\n1\n56113943\n100000000\n63655147\n100000000\n88096245\n1\n25164035\n100000000\n100000000\n1\n40033986\n25878883\n100000000\n1\n1\n98107793\n41633207\n100000000\n100000000\n100000000\n100000000\n100000000\n1\n42737965\n30713771\n1\n1\n1\n1\n31827862\n100000000\n1\n55407143\n1\n1\n1\n1\n1\n56303142\n83736129\n43043143\n24012106\n1\n63094008\n81541805\n1\n100000000\n25680152\n100000000\n1\n16002563\n100000000\n18147639\n1\n1\n94137603\n1\n82491152\n1\n1\n1\n100000000\n1\n10808695\n100000000\n1\n1\n63286509\n1\n32254470\n1\n100000000\n98927594\n1\n1\n36246734\n100000000\n1\n95773237\n100000000\n1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 200)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:13",
  "total_test_cases": 20
}
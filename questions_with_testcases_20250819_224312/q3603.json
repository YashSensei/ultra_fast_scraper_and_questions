{
  "problem_code": "problems",
  "title": "Gopu and Create Collections Part Two",
  "tags": [],
  "text": "Little Gopu likes to play very much. As you know he only plays with numbers. So he is given n numbers. Now he tries to group the numbers into collections where each collection contains exactly two numbers. He can form the collection of two numbers a and b (a ≤ b), if and only if b is either 2 × a or 2 × a + 1.Note that you can not use a single number in forming of more than one collections. Eg. 1, 2, 4 He can divide the numbers into a single collection only either [1, 2] or [2, 4] because each collection requires exactly two numbers, and each number has to be used only once in a group.Given n numbers, Find out how many maximum number of collections he can form ?InputT: number of test cases.For each test case, First line will contain n:  (1 ≤ n ≤ 105)Then next line will contain n numbers single space separated. Range of each number will be between 1 and 1018.Sum of n over all the tests will be at most 106. So number of test cases are decided on this criteria.OutputFor each test case, output maximum number of collections that can be formed.ExampleInput:421 231 2 441 2 4 824 4Output:1120",
  "sample_input": "Input:421 231 2 441 2 4 824 4Output:1120",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/SPCJ",
  "scraped_at": "2025-08-17 00:34:21",
  "test_cases": [
    {
      "input": "421 231 2 441 2 4 824 4",
      "expected_output": "1120",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "9 1 2 7 1 5 6 6",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "9 1 6 6 9 10 7 3",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "5 3 3 3 9 2 1 8",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "40 34 41 74 92 55 47 40",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "95 79 19 87 26 15 91 1",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "30 6 90 4 28 21 81 42",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "86 64 53 3 7 59 89 17",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "70 56 31 12 66 30 94 52",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "14 42 36 7 30 33 16 48",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "44 51 47 20 45 26 21 34",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "19 23 43 8 20 50 29 35",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "12 34 35 13 50 21 30 39",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "22 28 7 26 21 31 12 30",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "37 36 39 20 40 20 12 8",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "5 45 43 51 49 33 47 41",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "105 105 105 105 105 105 105 105",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "105 105 105 105 105 105 105 105",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "104 104 1 104 1 105 105 105",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "105 105 1 104 104 2 1 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:24",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Cocircular Points",
  "tags": [],
  "text": "You probably know what a set of collinear points is: a set of points such that there exists a straight line that passes through all of them. A set of cocircular points is deﬁned in the same fashion, but instead of a straight line, we ask that there is a circle such that every point of the set lies over its perimeter.The International Collinear Points Centre (ICPC) has assigned you the following task: given a set of points, calculate the size of the larger subset of cocircular points.InputEach test case is given using several lines. The ﬁrst line contains an integer N representing the number of points in the set (1 ≤ N ≤ 100). Each of the next N lines contains two integers X and Y representing the coordinates of a point of the set (−104≤ X, Y ≤ 104). Within each test case, no two points have the same location.The last test case is followed by a line containing one zero.OutputFor each test case output a single line with a single integer representing the number of points in one of the largest subsets of the input that are cocircular.SampleInput7\r\n-10 0\r\n0 -10\r\n10 0\r\n0 10\r\n-20 10\r\n-10 20\r\n-2 4\r\n4\r\n-10000 10000\r\n10000 10000\r\n10000 -10000\r\n-10000 -9999\r\n3\r\n-1 0\r\n0 0\r\n1 0\r\n0Output5\r\n3\r\n2",
  "sample_input": "Input7\r\n-10 0\r\n0 -10\r\n10 0\r\n0 10\r\n-20 10\r\n-10 20\r\n-2 4\r\n4\r\n-10000 10000\r\n10000 10000\r\n10000 -10000\r\n-10000 -9999\r\n3\r\n-1 0\r\n0 0\r\n1 0\r\n0Output5\r\n3\r\n2",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/MCOCIR",
  "scraped_at": "2025-08-17 00:33:19",
  "test_cases": [
    {
      "input": "Input7\r\n-10 0\r\n0 -10\r\n10 0\r\n0 10\r\n-20 10\r\n-10 20\r\n-2 4\r\n4\r\n-10000 10000\r\n10000 10000\r\n10000 -10000\r\n-10000 -9999\r\n3\r\n-1 0\r\n0 0\r\n1 0\r\n0Output5\r\n3\r\n2",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5\n2\n2\n7\n7\n4",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "2\n10\n2",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "4\n5\n10\n6\n1",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "15\n66912212\n82941537\n77742696\n7644503\n2249300\n72878157\n55174821\n96267833\n18207358\n94973025\n34782518\n59178718\n3574464\n2066872\n88643268",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "14\n40948556\n77255617\n64838625\n967379\n43028859\n97760781\n96932380\n53520528\n68891100\n69143156\n20219916\n61489644\n397499\n20396931",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "19\n83356425\n53116099\n37549605\n4531849\n9386209\n96934687\n40628194\n6526265\n67807038\n74351389\n2937560\n90618393\n37670210\n47104311\n50028728\n25051330\n67942637\n49472423\n24398616",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "16\n93046379\n6571218\n45104477\n87955673\n85204653\n95484201\n17667080\n38311828\n27009033\n25280293\n6270593\n49040860\n6319010\n87005920\n16390849\n50784417",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "6\n63514297\n60519689\n39921963\n15763777\n34949302\n90448868",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "53\n10126\n8982\n10554\n4701\n45272\n8908\n93112\n66742\n13577\n42079\n57444\n63708\n40283\n55123\n67029\n6262\n3423\n38894\n33839\n44422\n38248\n88225\n75262\n35138\n12073\n5234\n47579\n4272\n93317\n77266\n82861\n56847\n61111\n73940\n86807\n88474\n88686\n33057\n65672\n29956\n46276\n65700\n6075\n81892\n31664\n30568\n76860\n39238\n60896\n73248\n47000\n25098\n28141",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "32\n808\n59910\n82994\n45001\n89099\n39961\n74601\n26005\n18859\n70319\n43825\n69639\n63852\n83515\n1789\n75578\n16273\n95009\n11104\n15642\n87311\n87177\n50820\n81830\n92303\n27432\n38323\n15049\n21938\n15247\n34567\n68670",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "98\n27781\n11658\n19131\n33461\n87714\n85061\n77207\n39026\n49075\n79355\n35899\n50249\n6505\n23943\n99199\n15426\n94104\n11747\n19008\n14431\n31337\n61331\n25653\n87391\n26663\n82924\n75348\n27035\n45455\n55913\n48765\n90584\n7209\n36394\n21923\n74196\n40864\n94937\n26220\n70111\n62666\n95091\n33772\n13584\n63560\n42348\n31998\n64478\n70822\n4218\n74347\n32947\n51986\n97667\n59217\n2897\n83401\n37718\n1381\n94267\n77241\n72912\n59556\n70123\n71696\n41659\n21992\n27359\n43344\n17525\n95611\n80\n56627\n24990\n36315\n79648\n51716\n49872\n16989\n99148\n87297\n40575\n91863\n28139\n22711\n38018\n88096\n77185\n83671\n66667\n14557\n29767\n22779\n10561\n72802\n72500\n90804\n65992",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "57\n74968\n41883\n67159\n80479\n86007\n24367\n61285\n63023\n40745\n44433\n44208\n25759\n14854\n39053\n36808\n50561\n99586\n84402\n12569\n93815\n53594\n62358\n42475\n67553\n34914\n78658\n61843\n5882\n2059\n81715\n54081\n87955\n91701\n51054\n95920\n77852\n45108\n69631\n64010\n62991\n61388\n19981\n16977\n86659\n14510\n6691\n51103\n36031\n68295\n30306\n75459\n23073\n9376\n32817\n51582\n33056\n4274",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "61\n3702\n11391\n57740\n27133\n39678\n85521\n12250\n56227\n63515\n58278\n49283\n9406\n72427\n32347\n47380\n69354\n95184\n18146\n91349\n77832\n54283\n58434\n5687\n82589\n38965\n31461\n74588\n81675\n77104\n93874\n27932\n97046\n13977\n41266\n39471\n75280\n69824\n57986\n57536\n43936\n67344\n78155\n47968\n98895\n22560\n7377\n2886\n72394\n64624\n26525\n26030\n62529\n13555\n84213\n76252\n29308\n40664\n55214\n43745\n60540\n55353",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "45\n70117\n8338\n43581\n21869\n18442\n82475\n28733\n4147\n27330\n67923\n12121\n97892\n34755\n81075\n78287\n28379\n12858\n65531\n85362\n75475\n92432\n98904\n70492\n7814\n88228\n97359\n73573\n43510\n73637\n25570\n87065\n93602\n42150\n33341\n99276\n59946\n80330\n6895\n27071\n94063\n69309\n53331\n73618\n17607\n74999",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "82\n48390\n18892\n60882\n88614\n94515\n24291\n74434\n10854\n24447\n92992\n98715\n69842\n25441\n39473\n70725\n14820\n52938\n83198\n84364\n79929\n73032\n70112\n79569\n89598\n51267\n61667\n92264\n35922\n83513\n80691\n64791\n49595\n57917\n35635\n62721\n16476\n12641\n15346\n904\n70701\n11451\n21573\n17656\n76872\n77480\n68723\n44072\n37311\n20299\n85733\n44157\n4444\n69635\n20371\n81677\n58804\n4189\n84165\n723\n74833\n84706\n77966\n97140\n79092\n94011\n61655\n12751\n86018\n40379\n39555\n49876\n22391\n56984\n47498\n93554\n11500\n53369\n5541\n63400\n53498\n36940\n82775",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "100\n36545855\n18097923\n55230962\n69135218\n19024828\n31875626\n42284549\n86354352\n33735637\n16174031\n88356817\n72371271\n12179212\n86357071\n16187113\n34647399\n64176192\n640626\n73863165\n80556775\n54768028\n55311184\n24813888\n28161040\n46560148\n16171790\n16571195\n26456057\n89092757\n52818029\n42916036\n33351817\n73321411\n51561083\n55824914\n62022669\n96729806\n75567196\n14052598\n3517262\n15902111\n28772338\n19296229\n700329\n80679082\n68116478\n38725809\n67653245\n37639225\n92280411\n71226874\n2696744\n95470943\n45645783\n235091\n62386785\n16518817\n12264775\n54604837\n82725569\n8762831\n40015274\n82824576\n87754930\n2211159\n39865647\n85535611\n68376329\n18049253\n90493300\n64880488\n72898645\n64773567\n28300101\n99247434\n71208430\n31464353\n30734442\n11251615\n8932472\n41531519\n68448794\n47666761\n11086755\n44891676\n42276564\n45756385\n29159546\n32142965\n30698447\n4353888\n96578815\n58302057\n98924676\n10315109\n6275074\n59698570\n48219228\n36546366\n15534812",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "100\n23255887\n33331906\n95772520\n28068222\n73348622\n16146554\n91692129\n92986675\n70572758\n54316170\n50934831\n68405109\n26786859\n45562152\n59728433\n75260814\n93591874\n66205159\n18879022\n34037041\n36005732\n32851061\n79598826\n36007595\n77251296\n4763729\n94541788\n13426444\n55039462\n51908132\n20825141\n96525028\n45479868\n50461429\n72940353\n32032883\n37888681\n13281768\n64962354\n11545570\n97227649\n62149324\n13501148\n20809893\n78782704\n70745179\n54050623\n94222021\n39965513\n95389809\n38197784\n68891768\n80683683\n2599781\n10392344\n42852923\n33860478\n13047134\n44992333\n35905871\n42077660\n60130345\n38875136\n51588185\n9623567\n55225569\n7582491\n71303043\n79065753\n99094412\n55789150\n93743321\n34497534\n93821029\n57184164\n74511866\n10464851\n35306025\n91352474\n95056091\n36847134\n61609590\n70671774\n86771987\n15870688\n23986596\n68148571\n15201028\n40104675\n50180695\n11097454\n6314377\n32334169\n39796980\n28454479\n6591702\n9198381\n19436359\n61569898\n74081309",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "100\n100000000\n1\n1\n100000000\n9576034\n1\n34654008\n1\n35263098\n69804184\n21155077\n68105792\n100000000\n100000000\n1\n100000000\n17099745\n1\n15760409\n86496028\n1\n100000000\n100000000\n100000000\n1\n100000000\n1\n1\n76838006\n1\n100000000\n45176574\n44570159\n1\n69974109\n32005725\n87350217\n32114249\n8203737\n16712664\n62731497\n27379496\n96021562\n100000000\n100000000\n100000000\n100000000\n1\n100000000\n100000000\n1\n1\n100000000\n1\n100000000\n1\n100000000\n100000000\n100000000\n8174246\n1\n1\n57750454\n1\n100000000\n1\n1\n10032541\n1\n59511742\n1\n100000000\n1\n19982057\n1\n1\n100000000\n1\n100000000\n100000000\n1\n100000000\n1\n77687948\n95984117\n1\n100000000\n73490537\n1\n55017058\n35392152\n100000000\n1\n34300092\n1\n67772465\n1\n1\n100000000\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 100)"
    },
    {
      "input": "100\n22515744\n1\n100000000\n100000000\n1\n100000000\n100000000\n100000000\n1\n100000000\n33402505\n1\n100000000\n100000000\n100000000\n100000000\n100000000\n54375688\n100000000\n100000000\n1\n100000000\n40912162\n85750021\n32782244\n1\n100000000\n55474677\n1\n100000000\n1\n55336832\n1\n81405823\n38561025\n1\n26020189\n100000000\n1\n77682356\n49195351\n100000000\n100000000\n1\n100000000\n100000000\n100000000\n100000000\n100000000\n100000000\n100000000\n81638308\n100000000\n94482822\n100000000\n92500843\n56764122\n20273109\n100000000\n1\n38083491\n100000000\n100000000\n100000000\n100000000\n100000000\n1\n30419533\n69413068\n60830070\n1\n1\n95331025\n1\n24777854\n38403058\n1\n46140068\n1\n100000000\n1\n100000000\n100000000\n100000000\n1\n100000000\n1\n29589853\n49605238\n1\n1\n1\n1\n100000000\n1\n100000000\n1\n11085020\n86932321\n97899820",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 100)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:14",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "THE LAST SHOT",
  "tags": [],
  "text": "Tony Stark is on the mission to save the world from Loki's army so he spread N bombs in the enemy region. He spread the bombs in such a way that a bomb can be in range of another bomb i.e. say bomb B1 is in range of bomb B2 , when bomb B2 explodes it will trigger bomb B1 and it also get explode but vice-versa might not be true because the bombs are of different of range. As he is running out of energy so he left with one shot to trigger the bomb .Now he ask Jarvis to find most appropriate bomb which he can trigger to make maximum impact.Impact is basically number of bombs get explode.Can you help Jarvis to do so?InputFirst line contains two integer N and M denoting number of bombs and number of relation between the bombs.1 ≤ n ≤ 100001 ≤ m ≤ 10000Next M lines contain two integer A and B denoting bomb B is in range of bomb A.1 ≤ A ≤ N1 ≤ B ≤ NOutputA single line containing MAXIMUM IMPACT.Example 1Input:4 3\r\n1 2\r\n2 4\r\n1 3Output:4Example 2Input:4 3\r\n1 2\r\n2 1\r\n2 3Output:3",
  "sample_input": "Input:4 3\r\n1 2\r\n2 4\r\n1 3Output:4",
  "sample_output": "Input:4 3\r\n1 2\r\n2 1\r\n2 3Output:3",
  "link": "https://www.spoj.com/problems/LASTSHOT",
  "scraped_at": "2025-08-17 00:33:13",
  "test_cases": [
    {
      "input": "4 3\r\n1 2\r\n2 4\r\n1 3",
      "expected_output": "4",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4 3\r\n1 2\r\n2 1\r\n2 3",
      "expected_output": "3",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "10 5\n7 4\n10 9\n8 8",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "8 10\n3 3\n3 2\n7 1",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "1 1\n3 6\n4 6\n10 1",
      "expected_output": "To be computed",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "26 96\n26 76\n59 84\n40 69",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "55 87\n82 56\n25 25\n79 64",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "70 20\n6 75\n31 37\n100 70",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "8 29\n93 54\n6 80\n36 56",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "45 61\n44 78\n12 43\n36 85",
      "expected_output": "To be computed",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "17499 15654\n35705 18434\n12016 31875\n15157 49518",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "40667 19160\n20234 21918\n15400 34639\n26920 11045",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "21323 31528\n8268 28812\n48636 25352\n23810 33519",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "44203 48077\n44937 6419\n23156 10115\n27362 31848",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "41967 37688\n13607 22946\n44576 20299\n17985 31996",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "42883 39365\n9595 43816\n19423 39896\n13476 10495",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "28075 14671\n39888 35235\n41367 42935\n26698 42074",
      "expected_output": "To be computed",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "100001 100001\n100001 100001\n100001 100001\n100001 100001",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "100001 100001\n100001 100001\n100001 100001\n100001 100001",
      "expected_output": "To be computed",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "100001 100000\n1 100000\n100000 100000\n100001 100001",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:15",
  "total_test_cases": 20
}
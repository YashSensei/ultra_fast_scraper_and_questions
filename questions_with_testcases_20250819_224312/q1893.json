{
  "problem_code": "problems",
  "title": "Large Knapsack",
  "tags": [],
  "text": "Theknapsack problemorrucksack problemis a problem in combinatorial optimization: Given a set of items, each with a weight and a value, determine the number of each item to include in a collection so that the total weight is less than or equal to a given limit and the total value is as large as possible. It derives its name from the problem faced by someone who is constrained by a fixed-size knapsack and must fill it with the most valuable items.Just implement 0/1 Knapsack.InputFirst line contains two integers K and N, where K in the maximum knapsack size and N is the number of items. N lines follow where ithline describes ithitem in the form viand wiwhere viis the value and wiis the weight of ithitem.OutputOutput a single number - maximum value of knapsack. (All operations and the answer are guaranteed to fit in signed 32-bit integer.)Time limit changed to 2s on 02.07.11.ExampleInput:10 3\r\n7 3\r\n8 8\r\n4 6Output:11ConstraintsK ≤ 2000000N ≤ 500Vi≤ 107Wi≤ 107",
  "sample_input": "Input:10 3\r\n7 3\r\n8 8\r\n4 6Output:11",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/LKS",
  "scraped_at": "2025-08-17 00:33:40",
  "test_cases": [
    {
      "input": "10 3\r\n7 3\r\n8 8\r\n4 6",
      "expected_output": "11",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "7 2\n1 7\n6 8\n4 8",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "2 4\n6 3\n2 9\n4 9",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "5 4\n1 3\n8 1\n9 3",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "31 96\n2 77\n18 17\n42 34",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "86 39\n41 27\n72 48\n66 9",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "23 70\n17 39\n30 97\n57 73",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "59 75\n36 7\n39 18\n8 7",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "11 2\n22 19\n65 30\n53 55",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "37 165\n219 210\n137 235\n222 65",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "228 175\n151 74\n207 70\n142 117",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "222 175\n189 172\n159 193\n34 34",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "35 135\n186 77\n179 154\n63 150",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "31 108\n225 131\n43 158\n81 28",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "109 195\n214 61\n25 203\n26 154",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "121 167\n174 144\n249 140\n57 65",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "500 500\n500 500\n500 500\n500 500",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "500 500\n500 500\n500 500\n500 500",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 2\n1 1\n1 499\n500 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 500\n2 2\n499 1\n499 500",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:18",
  "total_test_cases": 20
}
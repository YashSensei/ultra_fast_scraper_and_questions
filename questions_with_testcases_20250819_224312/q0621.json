{
  "problem_code": "problems",
  "title": "E",
  "tags": [],
  "text": "A football team will be standing in rows to have a photograph taken. The location of each player will be given by two integers x and y, where y gives the number of the row, and x gives the distance of the player from the left edge of the row. The x values will be all different.In order to make the photo more interesting, you're going to make sure players who are near each other have shirts of different colors. To do this, you set the following rule:For each player P:The closest player to the right of P in the same row, if there is such a player, must have a different shirt color.The closest player to the right of P in the previous row, if there is such a player, must have a different shirt color.The closest player to the right of P in the next row, if there is such a player, must have a different shirt color.More formally, if there is a player at (x1,y1) and (x2,y2), where x1y1 - 1 ≤ y2 ≤ y1 + 1, andthere is no x3 such that there is a player at (x3, y2) and x1 < x3 < x2.Find the minimum number of distinct shirt colors required so that this is possible.InputThe first line of input contains a single integerT, the number of test cases. Each test case starts with a line that contains an integerN, the number of players, followed byNlines of the formx yeach specifying the position of one player.OutputFor each test case, outputCase #X: cwhereXis the test case number, starting from 1, andcis the minimum number of colors required.Limits1 ≤T≤ 1001 ≤x≤ 1000The values of x will all be different.Small dataset1 ≤y≤ 151 ≤N≤ 100Large dataset1 ≤y≤ 301 ≤N≤ 1000SampleInput3\r\n3\r\n10 10\r\n8 15\r\n12 7\r\n5\r\n1 1\r\n2 1\r\n3 1\r\n4 1\r\n5 1\r\n3\r\n1 1\r\n2 2\r\n3 1OutputCase #1: 1\r\nCase #2: 2\r\nCase #3: 3",
  "sample_input": "x y",
  "sample_output": "Case #X: c",
  "link": "https://www.spoj.com/problems/HATEAM",
  "scraped_at": "2025-08-17 00:33:03",
  "test_cases": [
    {
      "input": "x y",
      "expected_output": "Case #X: c",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "ildaa ds",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "qbp ld",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "j rk",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "t qo",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "xe by",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "izuf cojk",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "blnlg cgyz",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "wiuf xz",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "ftno fos",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "wb yc",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "dj qgd",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "rtla c",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "ojn sl",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "peq qkfvj",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "miht xybr",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "xoxm woqkp",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "qw a",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "hmk pyh",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "f knhk",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:14",
  "total_test_cases": 20
}
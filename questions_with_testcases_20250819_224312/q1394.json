{
  "problem_code": "problems",
  "title": "Counting Digits",
  "tags": [],
  "text": "EnglishVietnameseGiven two integers a and b, we write the numbers between a and b, inclusive, in a list. Your task is to calculate the number of occurrences of each digit.For example, if a = 1024 and b = 1032, the list will be 1024 1025 1026 1027 1028 1029 1030 1031 1032 there are ten 0s in the list, ten 1s, seven 2s, three 3s, and etc.InputThe input consists of up to 500 lines. Each line contains two numbers a and b where 0 < a, b < 100000000. The input is terminated by a line 0 0.Sample Input1 10\n44 497\n346 542\n1199 1748\n1496 1403\n1004 503\n1714 190\n1317 854\n1976 494\n1001 1960\n0 0OutputFor each pair of input, output a line containing ten numbers separated by single spaces. The first number is the number of occurrences of the digit 0, the second is the number of occurrences of the digit 1, etcSample output1 2 1 1 1 1 1 1 1 1\n85 185 185 185 190 96 96 96 95 93\n40 40 40 93 136 82 40 40 40 40\n115 666 215 215 214 205 205 154 105 106\n16 113 19 20 114 20 20 19 19 16\n107 105 100 101 101 197 200 200 200 200\n413 1133 503 503 503 502 502 417 402 412\n196 512 186 104 87 93 97 97 142 196\n398 1375 398 398 405 499 499 495 488 471\n294 1256 296 296 296 296 287 286 286 247Note : wrong dataset index, rejudged and TLE some ACed code.",
  "sample_input": "1 10\n44 497\n346 542\n1199 1748\n1496 1403\n1004 503\n1714 190\n1317 854\n1976 494\n1001 1960\n0 0",
  "sample_output": "1 2 1 1 1 1 1 1 1 1\n85 185 185 185 190 96 96 96 95 93\n40 40 40 93 136 82 40 40 40 40\n115 666 215 215 214 205 205 154 105 106\n16 113 19 20 114 20 20 19 19 16\n107 105 100 101 101 197 200 200 200 200\n413 1133 503 503 503 502 502 417 402 412\n196 512 186 104 87 93 97 97 142 196\n398 1375 398 398 405 499 499 495 488 471\n294 1256 296 296 296 296 287 286 286 247",
  "link": "https://www.spoj.com/problems/MDIGITS",
  "scraped_at": "2025-08-17 00:33:31",
  "test_cases": [
    {
      "input": "1 10\n44 497\n346 542\n1199 1748\n1496 1403\n1004 503\n1714 190\n1317 854\n1976 494\n1001 1960\n0 0",
      "expected_output": "1 2 1 1 1 1 1 1 1 1\n85 185 185 185 190 96 96 96 95 93\n40 40 40 93 136 82 40 40 40 40\n115 666 215 215 214 205 205 154 105 106\n16 113 19 20 114 20 20 19 19 16\n107 105 100 101 101 197 200 200 200 200\n413 1133 503 503 503 502 502 417 402 412\n196 512 186 104 87 93 97 97 142 196\n398 1375 398 398 405 499 499 495 488 471\n294 1256 296 296 296 296 287 286 286 247",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "6 3\n6 10\n1 3\n1 1\n1 4\n5 9\n8 3\n5 2\n8 1\n7 1\n5 1",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "4 9\n10 3\n5 4\n7 6\n8 3\n4 10\n10 9\n2 2\n2 1\n5 8\n1 10",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "7 8\n8 10\n4 5\n4 5\n3 8\n8 4\n10 5\n5 5\n4 3\n2 6\n8 9",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "73 77\n5 35\n95 16\n61 97\n67 80\n73 100\n48 35\n20 22\n77 92\n97 61\n83 69",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "90 91\n78 72\n49 19\n2 95\n67 6\n90 17\n56 54\n17 100\n32 88\n34 69\n65 27",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "28 96\n28 14\n39 14\n44 9\n15 86\n68 99\n61 53\n59 62\n26 61\n10 99\n53 81",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "20 65\n90 32\n5 57\n81 69\n97 23\n50 9\n36 10\n90 95\n65 33\n86 39\n77 32",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "36 81\n84 2\n79 100\n100 42\n98 54\n66 38\n72 55\n46 25\n80 49\n49 9\n45 80",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "434 397\n437 327\n395 448\n402 164\n422 177\n362 350\n339 148\n431 56\n58 146\n292 196\n190 397",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "277 312\n156 316\n150 396\n238 100\n329 234\n211 131\n422 214\n187 291\n99 420\n162 420\n463 441",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "457 156\n82 237\n380 123\n135 103\n497 493\n479 209\n81 308\n250 440\n162 248\n289 349\n150 90",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "496 151\n257 74\n275 309\n69 184\n93 61\n475 406\n253 160\n258 297\n416 498\n382 351\n233 124",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "339 193\n370 413\n62 340\n233 495\n412 55\n195 128\n312 369\n496 211\n62 164\n242 271\n216 244",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "418 323\n276 299\n302 218\n495 206\n79 290\n379 71\n470 97\n496 64\n294 217\n207 158\n60 171",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "430 137\n436 416\n56 407\n179 270\n214 466\n329 479\n200 156\n124 275\n451 379\n439 336\n261 245",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 999\n1 999\n1000 1000\n2 999\n1 1000\n1 2\n1 2\n1000 999\n2 1000\n2 1\n999 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 1\n1000 999\n1000 999\n1000 1\n999 2\n1000 999\n1 2\n999 999\n999 2\n1 2\n2 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:17",
  "total_test_cases": 20
}
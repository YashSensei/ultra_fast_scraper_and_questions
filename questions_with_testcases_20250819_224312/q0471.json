{
  "problem_code": "problems",
  "title": "Hu",
  "tags": [],
  "text": "Hugo Wangbros has been playing a lot of Yu-Gi-Oh recently, and he recently invented his own variation of the game:Hu-Gi-Oh!In the world ofHu-Gi-Oh, Hugo is in a duel where he must build apower chainusing a selection of magic cards. Each card has apower valueand acooldowntime. Hugo wants to play cards in a sequence such that:Heskipsat least the number of rounds equal to the cooldown after using any card before using the next one.The total power ismaximized.Given a list of cards, each with its power and cooldown, compute themaximum powerHugo can achieve.Note: Hugo is allowed to skip the card on any round.Inputn: number of cards (1 ≤ n ≤ 105)n lines follow, each containing two integers p and c:p: power of the card (0 ≤ p ≤ 104)c: cooldown of the card (0 ≤ c ≤ n)np1c2p1c2...pncnOutputoutput a single integer, the maximum total power Hugo can achieve.ExampleInput:5\r\n3 2\r\n2 1\r\n4 0\r\n6 2\r\n1 1Output:10ExplanationThe optimal solution is to first play card 3 (p=4, c=0), and play card 4 (p=6, c=2). Which gives 10.",
  "sample_input": "Input:5\r\n3 2\r\n2 1\r\n4 0\r\n6 2\r\n1 1Output:10",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/TSPMOHUG",
  "scraped_at": "2025-08-17 00:33:03",
  "test_cases": [
    {
      "input": "5\r\n3 2\r\n2 1\r\n4 0\r\n6 2\r\n1 1",
      "expected_output": "10",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1\n5",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "4\n5\n7\n9\n1",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n5",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "18\n46612556\n69654575\n28766621\n87954961\n7424535\n90169344\n67409427\n2920167\n12315003\n26781433\n46848208\n84400619\n78483359\n39778883\n25967378\n72660367\n74729680\n17885698",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "20\n3464061\n83133503\n80802142\n35961152\n99294662\n37467855\n27509207\n86930151\n70498059\n43893144\n71956888\n75834759\n65950060\n25701225\n98738156\n85218579\n19578325\n78623536\n87159779\n32685039",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "11\n24374515\n85218333\n57529396\n71824224\n36493533\n93943810\n49905836\n18571529\n91119913\n91374278\n37581567",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "14\n59287883\n4372457\n71894977\n50077520\n92501233\n79541591\n92014428\n82905564\n47128507\n69523183\n10312036\n46607100\n36999905\n41429556",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "17\n25901793\n87087657\n25218557\n57119197\n95126032\n47787962\n1919744\n53793292\n40838911\n45372396\n79048034\n14989116\n74253344\n14414262\n19360331\n32346618\n56579262",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "41\n80307\n7873\n47618\n40452\n82461\n37416\n64676\n17183\n5147\n20932\n87524\n69846\n53364\n53897\n94728\n82575\n17688\n43854\n73480\n43506\n1037\n70349\n75356\n41623\n17932\n19277\n29448\n47325\n47434\n25237\n32185\n4962\n91713\n91497\n22514\n17327\n21651\n38367\n63167\n89925\n10421",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "20\n22469\n37391\n66551\n69498\n12782\n68570\n52070\n95874\n42808\n7888\n17032\n34406\n33080\n74336\n816\n77090\n69852\n98246\n63733\n67788",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "61\n60168\n26071\n16042\n61273\n84362\n60702\n33140\n6673\n31344\n16210\n24314\n41794\n97903\n8871\n43028\n13047\n50769\n9413\n56194\n24018\n70871\n52902\n4643\n97815\n73684\n78151\n68184\n80844\n32357\n80722\n90081\n49556\n16524\n40955\n44983\n15929\n78733\n82456\n29355\n79010\n10837\n44821\n73215\n39323\n97987\n70488\n2918\n10250\n57182\n77751\n42937\n12804\n10596\n17593\n99233\n3056\n55891\n87966\n44742\n48537\n53547",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "56\n34363\n2966\n74034\n69540\n2617\n21565\n99857\n40415\n62850\n65392\n84569\n42552\n61699\n73190\n37949\n25527\n62627\n20217\n83332\n57764\n54600\n74173\n86277\n6864\n47327\n30060\n42127\n78372\n80815\n8778\n7350\n14885\n45626\n68321\n64792\n67370\n22694\n42359\n49924\n37521\n41576\n45085\n76870\n24896\n22786\n53643\n13111\n8682\n40958\n39160\n14325\n64368\n15358\n9995\n59110\n92984",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "25\n78485\n70333\n22404\n85605\n33733\n8082\n71572\n39412\n11868\n93686\n75121\n77454\n52478\n97493\n5164\n51434\n79781\n38695\n5345\n32332\n72346\n74860\n15335\n60187\n86388",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "86\n13596\n51252\n96738\n50051\n12652\n46013\n39497\n9543\n813\n93081\n99246\n56310\n16550\n21571\n63799\n3301\n51767\n16884\n75604\n33864\n23914\n6922\n61285\n74355\n24671\n66560\n40698\n32395\n77124\n58318\n49274\n55029\n30500\n40532\n68723\n82982\n60939\n22058\n63891\n33889\n2226\n54220\n81734\n31055\n48868\n29881\n65621\n36305\n4149\n97496\n52899\n39312\n57001\n72661\n44005\n99141\n22419\n53596\n12605\n46249\n61501\n39122\n6707\n56874\n22134\n4750\n71053\n20598\n59029\n58273\n95107\n88835\n82065\n28007\n58932\n67778\n22357\n46660\n52343\n76579\n51849\n13591\n35549\n60664\n56006\n12311",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "85\n17094\n11576\n92320\n30504\n2696\n46400\n52894\n65480\n54148\n528\n95185\n95167\n13004\n25305\n92863\n20286\n14835\n67987\n41670\n69873\n83010\n64260\n20039\n18428\n98596\n10928\n27248\n92616\n94516\n52649\n12413\n53515\n94285\n27343\n1128\n71040\n25835\n4345\n42420\n19305\n10596\n64856\n6783\n89891\n23013\n78012\n61511\n35446\n55019\n16435\n96390\n83409\n55496\n8402\n91698\n34518\n39085\n44018\n5319\n75819\n74631\n26878\n90399\n18111\n32385\n47540\n42971\n4765\n4588\n64249\n10714\n67539\n70773\n49705\n91573\n10807\n43625\n87776\n60161\n38573\n68570\n98353\n444\n7160\n46763",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "105\n44909607\n80953049\n31196655\n17774200\n57626486\n73232451\n51888038\n17338303\n43610855\n42603829\n68303020\n18684452\n3556847\n5555121\n62479528\n23631259\n42693213\n68051494\n68782497\n14107470\n25817365\n85779597\n54191570\n13933200\n41213368\n33529195\n3805103\n19177577\n9660127\n93408722\n98417877\n39868704\n7602527\n35376356\n92718847\n58319229\n85556976\n52026235\n35513821\n91130836\n3799378\n58458553\n79933929\n68254880\n92676434\n63629516\n16985816\n40746251\n43095491\n10063110\n63355977\n54329378\n51728895\n77093352\n71168576\n54530106\n39852310\n73064473\n61547966\n94533536\n4389208\n31851543\n31238931\n85596337\n26088614\n5618397\n97923093\n63002611\n88676055\n63062258\n43851944\n26280035\n59251342\n92052353\n74454261\n79323870\n27802939\n11337764\n63445433\n50446955\n11302266\n74358254\n31692950\n59915402\n31993546\n54590499\n41329220\n95260\n39554130\n36866600\n73647072\n10589321\n54397702\n93268961\n92761508\n32287948\n1228296\n1682861\n46885081\n92180079\n42064637\n13509527\n43398571\n66481123\n74983337",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "105\n29309857\n43283204\n42300124\n37641808\n62362274\n13688249\n62845296\n46792271\n90707261\n64319278\n36914625\n17463311\n43042252\n36055054\n99701279\n72186065\n23286527\n44509007\n27508107\n1334391\n6914959\n53068445\n93070682\n89761702\n20804299\n61195488\n23636923\n30243379\n11217257\n9609624\n20500671\n24168265\n2488153\n28027160\n84892574\n67425931\n48633080\n792766\n25089461\n85512636\n94545028\n5666473\n83950997\n23706931\n99749757\n10687819\n52032177\n85865788\n25814239\n67710845\n13251188\n81639152\n55552594\n92958633\n98633466\n33719758\n83995507\n72408036\n16171708\n14235054\n13321657\n58216925\n21997214\n28460971\n79068552\n89553662\n6127823\n99373119\n66942124\n44926223\n98903682\n93419953\n94638921\n54924890\n91910752\n74988864\n54221693\n15321034\n27388670\n8144436\n28594671\n7537729\n31521471\n34154488\n78624249\n44203778\n94941982\n38452993\n90131627\n24136723\n73929245\n75736615\n26053001\n53671885\n54076224\n76577354\n1366622\n86347095\n55123482\n72779829\n79699673\n93199411\n94121060\n76620450\n90704650",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "2\n1\n1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 2)"
    },
    {
      "input": "1\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 1)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:14",
  "total_test_cases": 20
}
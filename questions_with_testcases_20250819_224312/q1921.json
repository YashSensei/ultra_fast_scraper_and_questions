{
  "problem_code": "problems",
  "title": "Kawigi quote",
  "tags": [],
  "text": "Thursday 25/7/2013, a friend of mine (Goodname) posted in our facebook group (Virtual Contests) a link ofKawigi's topcoder profile.He was amazed by Kawigi's quote as he tested it inIdeoneto find it printing \"C++Sucks\". We all were amazed by this quote.But in a few minutes some other friend of mine (Mosa) commented on the post with thisIdeone. Wow! he got it, but the fact that he is kind of greedy, he didn't want to tell us the secret. Now we want to think like Mosa to be able to solve this problem.Given a string your task is to find the values of m[0] and m[1] so that when we run this code we get the given string.Code#include <stdio.h>\r\n    int primes [] = {2, 3, 5, 7, 11};\r\n    double m[2] = {8242465576917890.0, 494};\r\n    int main() {\r\n        m[1]--?m[0]/=primes[((int)m[1]+1)%5],main():printf((char*)m);\r\n    }\r\n    // this code prints the string \"123\".InputThe first line of the input file contains an integer T (T <= 50) which is the number of test cases to follow.Each test case will be on a single line consisting of at most 6 alphanumeric characters (A-Za-z0-9).OutputFor each test case, print the values of m[0] and m[1], separated by a space.It's guaranteed that the solution will always exist. If there are multiple solutions, print any.ExampleInput:4\r\n123\r\nabdou\r\nmcMosa\r\nkimo3Output:8242465576917890.0 494\r\n6966198460426549.0 487\r\n4484456159639948.0 483\r\n21357815651012032.0 488Special Thanks:-Mitch Schwartzfor discovering issues with the problem.-Mosa Osamafor writing the special judge of the problem, and I have to say Mosa's not greedy. ;)",
  "sample_input": "#include <stdio.h>\r\n    int primes [] = {2, 3, 5, 7, 11};\r\n    double m[2] = {8242465576917890.0, 494};\r\n    int main() {\r\n        m[1]--?m[0]/=primes[((int)m[1]+1)%5],main():printf((char*)m);\r\n    }\r\n    // this code prints the string \"123\".",
  "sample_output": "Input:4\r\n123\r\nabdou\r\nmcMosa\r\nkimo3Output:8242465576917890.0 494\r\n6966198460426549.0 487\r\n4484456159639948.0 483\r\n21357815651012032.0 488",
  "link": "https://www.spoj.com/problems/KIMO4",
  "scraped_at": "2025-08-17 00:33:40",
  "test_cases": [
    {
      "input": "#include <stdio.h>\r\n    int primes [] = {2, 3, 5, 7, 11};\r\n    double m[2] = {8242465576917890.0, 494};\r\n    int main() {\r\n        m[1]--?m[0]/=primes[((int)m[1]+1)%5],main():printf((char*)m);\r\n    }\r\n    // this code prints the string \"123\".",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4\r\n123\r\nabdou\r\nmcMosa\r\nkimo3",
      "expected_output": "8242465576917890.0 494\r\n6966198460426549.0 487\r\n4484456159639948.0 483\r\n21357815651012032.0 488",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "wyvrm vhxkv\n2 9 4 6 6\nuwpma ujyfn rg rok f mnu z widgq blqyj\n2 8 1\nxq zm hguim uttvzypxlvqgtfoybtd afwrq\nhg wrxrbh v\n7 8 10 4 3\nyfjzefkqezwvn\nt\n2\nomevp atd jbqd ubynmb npz rpsq bsz",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "zbgwt anfyln\n1 7 2 1 6\niaa bd lrj tlono tx ttm vbe lvhig s\n7 4 8\nqlbilb pd zcw viqwac zajwq\nhvsc eqdam e\n3 1 1 3 5\nrfzneyvnjmtp\nq\n6\nuxxaf fgmew q mnlzq rqmd uygwu uhu",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "zehmfe se\n6 8 2 2 8\ne cgg n fk v hkw l rql vngh\n1 6 8\nxxpmp jvy lyy yfogqwdwefzksjygr ghl\nvyvw uds y\n4 8 10 3 5\nrldnqzejhwuzhyzvbxnb\ni\n3\nlxxf wde fqpvi xplvff rbsr z q",
      "expected_output": "To be computed",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "abveksjy csuawk\n1 52 22 99 85\nrc bttiq zks hmk kxni dqlgi as ed up\n40 75 36\nc i dys h eur\ngmh g vh\n81 13 52 43 16\nvpxefkwcpvvswhot\nkd\n28\npnm i soolh qias rhsmg oks qjd",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "rp kc\n73 67 51 61 20\ncpvq k mm sbdeg wg bbtz cvkk oj h\n63 97 49\nhabq cljf lxkb qphlfugzqianeaj a\nxa u gg\n51 29 15 77 80\nebwqsftaopvckvuwjk\nz\n39\noe nh gal dukiwo jw cksrv uust",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "ajbhpp bctsq\n98 92 29 49 7\nxdquf gkgrun g pktda iwyjh bidm wezqf d cs\n49 12 55\ndf zzq kkm vftzn zwx\nsqoxd daho kcaex\n86 30 51 53 58\nnptvbmmctiknffjrjcn\nu\n100\nusrws so x mtx ms zweoi jmdk",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "gnzxxxfw dqvnwdc\n27 36 43 92 42\nszzs cvhioe phfyn ckpis ka ktnev tj ycjxh ixmqm\n23 71 33\ny z vls k f\ns wxdhg gzru\n15 42 44 16 94\ncgucuqeordzo\nct\n2\nrtpgz o gwew lzcl idxi d mf",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "wrpj kr\n81 87 66 90 65\nnv zjgh p v lymy gfb hbv c mtpr\n21 84 93\nrvsb lzvd ifk gifcvihzjf s\nmen igbht ruso\n15 69 92 64 26\nrudiei\nd\n15\nfdg repzl jnx r mo f fk",
      "expected_output": "To be computed",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "dj rnktptifm\n240 400 338 385 482\nymlt ya l uqe gzij ltc kkok ueb fnrh\n94 391 293\nd ptih g umsjncrstgp tlxb\nhjis lvhb qa\n237 229 418 496 265\niofaqisbbqqd\nhf\n329\nyhk flsp dq emv o q hbg",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "hoyxnenf ruxe\n488 101 190 292 479\ny bfxjl ewpk wgud b ltgs i k hm\n280 276 180\ni jvfv yt aoqffbevpyelogncplj gyu\no sr ga\n409 213 381 155 252\nqlsbze\nul\n52\nwhsqi hdlxk hjjwo vuoz tbz atxjwh fv",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "ol w\n237 382 292 259 349\navp kure w bl p gs pm d h\n62 104 482\nyum ffupg ta i x\nq tfir sxnw\n434 314 183 369 113\na\nr\n324\nguw lof w jarwje qk cafm ok",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "khy saiaxqhm\n146 382 231 401 199\ngpdp bvfl vhpmz ma svw j a cag f\n249 253 259\nuro t f fmokfhpqrcss l\nyfjem tddmb ef\n293 458 233 437 433\nbfmxwuxquienwibqcwv\nsl\n379\nsyfmq z scku fnlxcq er jr acon",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "bwtaxmt q\n179 490 57 451 336\nvps djgc u h cbsaq z u i kh\n475 364 471\nfoq fltmo tcfkw wskeayhl o\njnrn vicdh cpzzx\n264 306 475 309 387\nqntx\ns\n400\nmke ocfmw ekvqv uf bfms eolad d",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "wlsvxobu luq\n260 162 257 124 281\ntajjv hwyat ffv q jsosf ovmfp a vynj piw\n283 147 401\nkpgrq mivsp ftpd nfrcjkta v\nrjcf egoauw fxjm\n337 127 87 495 197\nntfwdmnicrhifqjzh\nq\n469\ncrh ua v vd splc nxbbgt jvjtx",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "wjq zshbpui\n124 378 305 154 57\nxd gcrsau elas blyp px h qd jgbl edot\n302 415 367\ny oucqz u bqnudvmzxrzagldgpe rboh\nu gphs io\n150 229 459 394 489\nmgeyh\nck\n135\nb tj bny yqczks tymzl zbvpd vka",
      "expected_output": "To be computed",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "naslt bpc\n1000 1000 1000 1000 1000\nkyt kl y mt smv fqcq z yozj o\n1000 1000 1000\nt vhp cpg zdimluxuqwgtxtcyxswy igigx\nqrfp adry umeyl\n1000 1000 1000 1000 1000\nyaaifrgza\nhq\n1000\ngqshd ous cdid dxu e kf w",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "u rkebjpz\n1000 1000 1000 1000 1000\nvnzcg n s az f wppm ou szwu zpii\n1000 1000 1000\nakch ivrwx lcr t she\nhbdc kapdoc gjsey\n1000 1000 1000 1000 1000\nutgzirirqzey\nd\n1000\nuhg o p oi dbj izzpzc au",
      "expected_output": "To be computed",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "kmht ufgjc\n1000 1 2 1 999\ni mai jdprv orrf bvk do bxwfn qwuh vu\n1000 999 2\nxzzgu lk i zrgeuozeymfawtvlnswl bfvvn\nh acwh p\n1 2 1000 1000 1\nrzkgdap\nn\n1000\ndhw pfpmt ar qp urrb d xitz",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:18",
  "total_test_cases": 20
}
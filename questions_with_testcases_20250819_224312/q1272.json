{
  "problem_code": "problems",
  "title": "Jollo",
  "tags": [],
  "text": "Jollo is a simple card game which the children from Logonia love to play. It is played between two players with a normal deck of 52 cards. In the game, cards are ordered according to their rank and suit, forming a sequence of 52 distinct values.The game is composed of three rounds, played in a best-of-three series (a player must win two rounds to win the game). At the beginning of the game the deck is shuffled and each player is given a hand of three cards. In each round the players show one card to each other and the player with the highest card wins the round. The cards shown in a round are discarded (i.e., they cannot be shown again).The King’s son loves to play the game. But he is not very smart, losing frequently to his little sister. And when he loses, he cries so loud no one can stand it. The servant who deals the cards to the Prince and his sister is afraid he will be sent to prison if the Prince continues to lose. The servant is allowed to see every card he deals, and after dealing ﬁve cards (three to the Princess and two to the Prince) he wants to know which is the lowest card he should deal to the Prince so that there is no chance he will lose the game, no matter how badly he plays.InputEach test case is given in a single line that contains ﬁve distinct integers A, B, C, X and  Y, describing the cards dealt to the players. The ﬁrst three cards are given to the Princess (1 ≤ A, B, C ≤ 52) and the last two cards are given to the Prince (1 ≤ X, Y ≤ 52). The last test case is followed by a line containing ﬁve zeros.OutputFor each test case output a single line. If there exists a card that will make the Prince win the game no matter how badly he plays, you must print the lowest such a card. Otherwise, print -1.Exampleinput28 51 29 50 52\r\n50 26 19 10 27\r\n10 20 30 24 26\r\n46 48 49 47 50\r\n0 0 0 0 0output30\r\n-1\r\n21\r\n51",
  "sample_input": "input28 51 29 50 52\r\n50 26 19 10 27\r\n10 20 30 24 26\r\n46 48 49 47 50\r\n0 0 0 0 0output30\r\n-1\r\n21\r\n51",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/MJLAR10",
  "scraped_at": "2025-08-17 00:33:25",
  "test_cases": [
    {
      "input": "input28 51 29 50 52\r\n50 26 19 10 27\r\n10 20 30 24 26\r\n46 48 49 47 50\r\n0 0 0 0 0output30\r\n-1\r\n21\r\n51",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1 9 3 9 3\ng 1 1 7 6\n10 3 10 4 4\n1 1 3 4 2\n1 5 2 8 5\n3 2 4 10 5 3\n7 2 1 1 rrbcfoiyb\n9\n5\n3",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "6 9 7 1 4\nnfnlbg 6 2 10 2\n10 6 5 8 10\n4 10 7 6 6\n10 7 3 3 9\n10 5 8 10 4 1\n5 6 10 8 kigyjfgi\n2\n1\n4",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "9 8 9 9 8\nugufke 1 2 3 9\n10 9 5 6 1\n6 5 2 3 3\n5 2 6 6 10\n5 9 6 1 10 2\n4 3 3 7 vyo\n5\n6\n4",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "72 4 74 96 48\nhx 7 98 69 22\n63 4 78 23 17\n98 32 59 69 80\n95 12 43 97 82\n51 90 51 9 25 70\n2 63 45 99 nvnsvcmm\n50\n65\n52",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "8 65 13 17 54\nyofism 93 69 100 100\n18 49 71 72 46\n31 81 21 9 35\n82 29 52 78 82\n89 62 69 29 43 95\n72 56 29 15 dmolaq\n11\n78\n88",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "36 64 91 33 81\nmlytf 47 79 34 96\n94 25 67 20 83\n34 91 49 98 99\n65 91 18 79 45\n78 31 87 14 49 60\n30 44 78 93 slwkfnb\n23\n29\n75",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "32 40 77 41 61\nr 64 44 21 49\n87 24 58 33 95\n14 22 59 54 30\n54 1 39 85 38\n33 66 48 97 78 18\n35 99 1 38 hopepwa\n57\n78\n58",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "1 77 37 33 47\nigv 34 76 59 47\n99 63 53 5 39\n10 34 13 21 3\n2 99 76 100 10\n11 24 89 34 58 53\n94 69 51 96 drodibso\n62\n87\n53",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "301 437 381 131 176\nlvddjon 464 137 100 219\n430 82 164 164 358\n336 355 468 434 379\n385 497 499 307 447\n369 238 377 224 161 176\n143 436 484 265 q\n341\n91\n478",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "417 54 84 121 483\nd 95 56 280 311\n149 114 102 422 170\n421 462 499 243 353\n143 118 425 249 418\n147 394 366 71 176 162\n410 51 471 199 aqq\n428\n482\n344",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "140 214 348 351 80\nykg 72 114 422 373\n214 156 159 386 157\n209 468 76 207 101\n322 311 167 454 391\n280 499 448 230 214 367\n472 87 314 359 bjojapfdn\n469\n408\n302",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "331 61 199 314 295\ni 415 134 312 350\n313 326 432 207 367\n178 323 352 98 279\n57 298 161 198 62\n389 312 217 420 414 442\n434 260 298 309 ii\n312\n50\n405",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "477 95 179 369 133\nmpcovw 136 345 297 158\n283 209 312 367 243\n238 238 360 138 265\n170 477 371 152 77\n165 230 325 354 489 461\n191 350 188 65 eoxcxo\n344\n365\n389",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "436 97 100 259 178\nmbwzq 56 101 111 197\n149 349 211 135 253\n95 418 437 394 235\n434 317 276 288 350\n267 499 435 326 149 62\n80 393 125 251 hgb\n370\n319\n104",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "314 190 186 147 374\nl 110 492 92 340\n304 67 161 125 70\n259 373 132 446 141\n406 289 340 229 299\n226 470 78 165 293 363\n414 425 272 500 h\n329\n481\n496",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000\nahym 1000 1000 1000 1000\n1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 rultorxyw\n1000\n1000\n1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000\nwbjoah 1000 1000 1000 1000\n1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 klsx\n1000\n1000\n1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 1 1 1 2\naa 2 999 1000 999\n999 999 1000 2 2\n1 1 2 1 1\n1 1000 1000 1 1\n999 2 999 1000 2 1000\n1 1000 1000 999 orecv\n999\n999\n1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "999 2 1000 1000 1\nd 2 999 1000 2\n1 1000 1 2 1000\n1 999 1000 1000 1000\n999 1 2 1 2\n999 999 999 1 1 1\n2 1000 999 1 dmfcndjf\n1000\n1\n1000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:16",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Hugo\"s Tennis Training",
  "tags": [],
  "text": "Hugo is aYear 69 studentat the prestigiousPatrick Mouratoglou Tennis Academy, home to future tennis legends and borderline superhumans. Determined to improve his game and one day win a Grand Slam, Hugo trains relentlessly — rain or shine, weekday or weekend. Every day, he logs the exact number of minutes he spends practicing, down to the last serve and sprint drill.His coach,Bobby, is known for his data-driven approach. “Tennis is math in motion,” Bobby often says. Lately, Bobby has been peppering Hugo with questions like:“How much did you practice during Week 4 of Block B?”“Did your training volume drop before the clay season?”Hugo, exhausted from practice, doesn’t want to manually sum up training logs every time. So he turns to you — the academy’s resident programming wizard.You're given Hugo’s log of training durations, and a list of Bobby’s questions. Each question asks for thetotal number of minutes Hugo trained between two specific days.Can you answer Bobby’s queries efficiently, before he makes Hugo calculate them on a whiteboard again?InputN QA1A2A3... AnL1R1L2R2...LQRQ1 ≤ N, Q ≤ 1051 ≤ A[i] ≤ 1041 ≤ Li≤ Ri≤ NOutputFor each query, output a single number: the total number of minutes Hugo trained from day Lito day RiExampleInput:5 3\r\n10 20 30 40 50\r\n1 3\r\n2 4\r\n1 5Output:60\r\n90\r\n150",
  "sample_input": "Input:5 3\r\n10 20 30 40 50\r\n1 3\r\n2 4\r\n1 5Output:60\r\n90\r\n150",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/TEWBMCUL",
  "scraped_at": "2025-08-17 00:33:21",
  "test_cases": [
    {
      "input": "5 3\r\n10 20 30 40 50\r\n1 3\r\n2 4\r\n1 5",
      "expected_output": "60\r\n90\r\n150",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4 3\n9 7 3 3 5\n7 9\n5 4\n3 6",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "2 3\n9 7 6 7 9\n1 4\n8 1\n2 6",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "10 10\n9 9 10 5 7\n4 6\n3 1\n6 3",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "40 52\n33 87 35 36 26\n81 12\n83 84\n23 70",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "95 30\n91 27 100 24 99\n31 83\n74 84\n31 85",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "92 69\n31 88 19 4 39\n84 30\n20 77\n51 88",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "30 76\n94 25 63 2 61\n46 36\n15 28\n92 60",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "28 29\n2 67 49 71 63\n13 60\n4 4\n22 76",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "465 152\n394 292 328 345 355\n121 376\n437 467\n391 319",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "383 87\n237 282 437 251 301\n124 126\n356 462\n237 203",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "397 97\n182 226 85 364 97\n479 393\n176 80\n351 134",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "419 394\n204 408 435 474 433\n246 313\n210 233\n433 317",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "497 86\n259 342 197 270 343\n148 232\n449 204\n347 492",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "262 332\n290 66 201 369 340\n108 72\n424 211\n214 123",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "181 276\n303 275 447 491 328\n270 482\n216 54\n426 202",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000 1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000 1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1\n1 1 2 1 1\n999 2\n2 1000\n999 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1000 2\n999 1 999 1000 2\n2 2\n999 999\n999 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:14",
  "total_test_cases": 20
}
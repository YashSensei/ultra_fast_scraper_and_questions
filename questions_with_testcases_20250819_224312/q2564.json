{
  "problem_code": "problems",
  "title": "A Famous ICPC Team",
  "tags": [],
  "text": "Mr. B, Mr. G, Mr. M and their coach Professor S are planning their way to Warsaw for the ACM-ICPC World Finals. Each of the four has a square-shaped suitcase with side length Ai(1 ≤i≤ 4) respectively. They want to pack their suitcases into a large square box. The heights of the large box as well as the four suitcases are exactly the same. So they only need to consider the large box’s side length. Of course, you should write a program to output the minimum side length of the large box so that the four suitcases can be put into the box without overlapping.InputEach test case contains only one line containing 4 integers Ai(1 ≤i≤ 4, 1 ≤ Ai≤ 1,000,000,000) indicating the side length of each suitcase.OutputFor each test case, display a single line containing the case number and the minimum side length of the large box required.ExampleInput:2 2 2 2\r\n2 2 2 1Output:Case 1: 4\r\nCase 2: 4ExplanationFor the first case, all suitcases have size 2×2. So they can perfectly be packed in a 4×4 large box without wasting any space.For the second case, three suitcases have size 2×2 and the last one is 1×1. No matter how to rotate or move, you could find the side length of the box must be at least 4.",
  "sample_input": "Input:2 2 2 2\r\n2 2 2 1Output:Case 1: 4\r\nCase 2: 4",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/TEAM2",
  "scraped_at": "2025-08-17 00:33:59",
  "test_cases": [
    {
      "input": "2 2 2 2\r\n2 2 2 1",
      "expected_output": "Case 1: 4\r\nCase 2: 4",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3 1 4 9\n4 4 6 1",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "10 9 6 8\n6 9 5 6",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "3 8 8 2\n1 2 2 5",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "44 56 8 67\n68 15 21 26",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "20 43 76 15\n93 90 88 76",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "31 98 45 60\n9 79 25 2",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "79 45 31 50\n74 78 9 72",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "88 31 42 36\n90 25 34 69",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "382 271 361 181\n397 199 314 248",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "209 353 456 428\n236 125 66 76",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "306 305 202 222\n217 336 94 207",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "188 408 263 161\n428 285 336 264",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "179 172 399 491\n478 458 61 428",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "344 426 321 351\n73 236 417 89",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "66 426 237 356\n67 428 455 445",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000\n1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000\n1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 2 1 1000\n1 2 1000 1000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1000 2 2 999\n999 999 999 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:20",
  "total_test_cases": 20
}
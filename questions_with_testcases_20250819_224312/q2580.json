{
  "problem_code": "problems",
  "title": "Snow White and the N dwarfs",
  "tags": [],
  "text": "Snow White and the N dwarfs live in the forest. While the dwarfs mine away Snow White hangs around social networks.Each morning the dwarfs form a long line and go whistling away to the mine. Snow White runs around them and snaps pictures to upload onto her favorite social network.When dwarfs enter the mine, Snow White goes back to their house and goes through the pictures, selecting pretty ones. Each dwarf has a colored cap, and there are C different colors. A picture is pretty if more than half caps on it are of the same color. In other words, if there are K dwarfs on the picture, it is pretty if strictly more than K / 2 dwarfs have same colored caps.Write a program that will check for a set of M pictures if they are pretty, and what color is dominating if they are.InputFirst line contains two integers N and C (3 ≤ N ≤ 300000, 1 ≤ C ≤ 100000) number of dwarfs and number of colors.Second line contains N integers between 1 and C (inclusive), colors of dwarves hats, ordered the way they formed the line that morning.Third line contains M (1 ≤ M ≤ 100000), number of pictures.Next M lines contain two integers A and B (1 ≤ A ≤ B ≤ N). Each line describes one picture. On it there are all dwarves starting from A-th all the way to the B-th.OutputOutput M lines. For each picture output “no” if Snow White doesn't think the picture is pretty, and “yes X”, where X is the color dominating on the picture, if she does.ExampleInput:10 3\r\n1 2 1 2 1 2 3 2 3 3\r\n8\r\n1 2\r\n1 3\r\n1 4\r\n1 5\r\n2 5\r\n2 6\r\n6 9\r\n7 10Output:no\r\nyes 1\r\nno\r\nyes 1\r\nno\r\nyes 2\r\nno\r\nyes 3",
  "sample_input": "Input:10 3\r\n1 2 1 2 1 2 3 2 3 3\r\n8\r\n1 2\r\n1 3\r\n1 4\r\n1 5\r\n2 5\r\n2 6\r\n6 9\r\n7 10Output:no\r\nyes 1\r\nno\r\nyes 1\r\nno\r\nyes 2\r\nno\r\nyes 3",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/PATULJCI",
  "scraped_at": "2025-08-17 00:34:10",
  "test_cases": [
    {
      "input": "10 3\r\n1 2 1 2 1 2 3 2 3 3\r\n8\r\n1 2\r\n1 3\r\n1 4\r\n1 5\r\n2 5\r\n2 6\r\n6 9\r\n7 10",
      "expected_output": "no\r\nyes 1\r\nno\r\nyes 1\r\nno\r\nyes 2\r\nno\r\nyes 3",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "10 10\n9 8 7 1 4 7 5 9 2 1\n8\n3 5\n5 9\n7 9\n6 4\n1 8\n1 8\n8 2\n1 6",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "4 5\n7 4 1 1 8 9 6 6 1 7\n1\n9 5\n8 7\n4 7\n2 7\n4 7\n1 9\n5 5\n7 5",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "8 6\n2 2 5 6 8 1 10 10 6 3\n9\n10 3\n8 5\n2 8\n3 9\n3 8\n9 2\n1 8\n7 2",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "39 90\n93 10 36 58 11 6 42 75 8 4\n8\n21 89\n69 53\n71 83\n92 82\n66 28\n60 37\n25 64\n39 23",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "99 17\n17 39 89 96 12 33 68 12 96 78\n22\n98 26\n26 72\n21 98\n86 99\n35 16\n73 57\n34 3\n21 73",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "48 42\n85 70 64 76 78 57 74 5 10 49\n8\n11 60\n40 44\n54 37\n97 84\n77 34\n52 46\n75 70\n11 41",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "78 28\n57 23 50 74 21 25 98 56 55 62\n3\n60 1\n93 36\n65 89\n71 87\n51 93\n70 47\n33 82\n55 7",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "90 10\n23 52 97 8 16 71 92 91 69 74\n9\n41 13\n41 86\n24 34\n99 60\n96 49\n25 22\n2 59\n44 86",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "78633 49224\n62844 102459 147007 133538 38903 135925 86031 104443 141426 31901\n16677\n107864 111584\n19557 126106\n127652 48515\n39715 121909\n71827 124374\n123554 89213\n58776 139728\n32946 107596",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "113773 26837\n73486 141298 118009 91831 31111 21695 41133 118962 94960 99068\n147897\n107406 41767\n19119 75752\n75407 28201\n88257 95310\n58549 109483\n78535 18961\n49794 102318\n18959 125486",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "28566 65804\n61832 37280 89072 25509 113397 37242 44129 109512 138358 21443\n58675\n137575 23883\n19138 97722\n61475 43001\n71536 42969\n26649 59105\n62447 88079\n99411 147781\n85604 69119",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "146087 27660\n98041 143161 64321 68793 92669 42905 96715 113198 141787 130830\n109791\n117226 142542\n89707 21968\n120336 33320\n76762 18954\n61184 61651\n138212 116807\n90885 74184\n108055 64766",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "43033 32548\n69411 31142 19926 80069 67462 35486 82661 80741 67837 125199\n149749\n102407 31788\n135599 50875\n56793 69796\n105725 18814\n65852 127311\n131875 42206\n75393 60037\n96448 120607",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "105517 127151\n118389 28887 102406 119992 115624 125245 137071 55809 40986 75270\n99070\n21280 82951\n81264 66669\n112234 94244\n72328 108636\n131875 82583\n64429 118029\n38647 82656\n145674 143876",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "148222 145883\n99888 105640 26538 58571 67613 38342 21393 121580 99619 136542\n44163\n17395 46734\n110628 59897\n130967 113266\n53402 70468\n64613 28514\n116729 111162\n147184 20006\n132336 17118",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "300000 300000\n300000 300000 300000 300000 300000 300000 300000 300000 300000 300000\n300000\n300000 300000\n300000 300000\n300000 300000\n300000 300000\n300000 300000\n300000 300000\n300000 300000\n300000 300000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "300000 300000\n300000 300000 300000 300000 300000 300000 300000 300000 300000 300000\n300000\n300000 300000\n300000 300000\n300000 300000\n300000 300000\n300000 300000\n300000 300000\n300000 300000\n300000 300000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "299999 300000\n300000 299999 300000 2 299999 2 2 300000 299999 2\n299999\n1 300000\n1 299999\n300000 299999\n2 299999\n2 1\n2 2\n300000 2\n1 299999",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "299999 1\n299999 300000 2 1 2 300000 1 299999 300000 300000\n299999\n300000 300000\n299999 299999\n2 2\n300000 2\n300000 299999\n1 2\n2 299999\n299999 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:21",
  "total_test_cases": 20
}
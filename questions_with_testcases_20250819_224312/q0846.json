{
  "problem_code": "problems",
  "title": "Ada and Mulberry",
  "tags": [],
  "text": "Ada the Ladybug grows a mulberrytree(which is rooted at node 0). At the beginning, it has a mulberry fruit of distinct size growing on every node. As the time flows, new mulberry fruits appear on each node (additionally - meaning the previous mulberry fruit still remains on given node) - while keeping the condition of distinct sizes.Ada observes every single fruit and for each new fruit she is asking you to tell her the number of lesser fruits in the subtree of given node.InputThe first line contains two integers1 ≤ N, Q ≤ 2×105, size of mulberry tree.The next line containsNintegers:0 ≤ Ai≤ 106, the size of mulberry fruit in each node.Each of the nextN-1lines contains two integers0 ≤ a, b < N, meaning the branch (edge) between given nodes.Each of the nextQlines contains two integersa S:0 ≤     a < N(the node in which new fruit grows) and0 ≤ S ≤     106(size of the fruit)OutputFor each query, print the number of lesser mulberry fruits which grow in subtree of node where new mulberry fruit grew.Example Input7 8\r\n10 9 13 17 11 20 18\r\n0 4\r\n0 1\r\n1 2\r\n1 3\r\n2 5\r\n2 6\r\n0 21\r\n0 8\r\n2 15\r\n3 22\r\n1 14\r\n2 19\r\n0 12\r\n1 16Example Output7\r\n0\r\n1\r\n1\r\n2\r\n3\r\n4\r\n4",
  "sample_input": "7 8\r\n10 9 13 17 11 20 18\r\n0 4\r\n0 1\r\n1 2\r\n1 3\r\n2 5\r\n2 6\r\n0 21\r\n0 8\r\n2 15\r\n3 22\r\n1 14\r\n2 19\r\n0 12\r\n1 16",
  "sample_output": "7\r\n0\r\n1\r\n1\r\n2\r\n3\r\n4\r\n4",
  "link": "https://www.spoj.com/problems/ADABERRY",
  "scraped_at": "2025-08-17 00:33:15",
  "test_cases": [
    {
      "input": "7 8\r\n10 9 13 17 11 20 18\r\n0 4\r\n0 1\r\n1 2\r\n1 3\r\n2 5\r\n2 6\r\n0 21\r\n0 8\r\n2 15\r\n3 22\r\n1 14\r\n2 19\r\n0 12\r\n1 16",
      "expected_output": "7\r\n0\r\n1\r\n1\r\n2\r\n3\r\n4\r\n4",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1 3\n7 4 5 9 8 2 3\n8 3\n8 3\n2 7\n5 9\n10 7\n2 1\n2 8\n5 2\n5 3\n5 8\n6 2\n9 1\n2 9\n10 1",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "4 10\n1 9 10 6 10 8 8\n5 1\n1 4\n2 1\n3 1\n9 10\n8 7\n5 7\n5 4\n10 3\n10 6\n5 6\n7 8\n1 9\n7 2",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "6 2\n9 3 8 8 1 2 9\n9 3\n10 10\n7 3\n9 3\n6 5\n7 3\n10 9\n3 6\n1 8\n3 7\n5 10\n10 5\n3 10\n1 2",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "69 22\n66 65 75 99 1 61 11\n23 8\n5 61\n65 31\n7 95\n76 83\n34 98\n74 40\n11 24\n15 26\n76 9\n30 24\n36 12\n24 16\n48 57",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "38 87\n36 83 29 74 82 98 43\n32 25\n18 66\n40 30\n47 90\n48 82\n55 82\n10 54\n18 23\n13 11\n79 98\n30 62\n82 85\n31 38\n63 20",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "59 75\n37 76 98 65 57 71 77\n66 34\n5 54\n28 71\n28 15\n89 58\n77 56\n26 16\n34 84\n66 100\n72 87\n96 64\n24 26\n47 51\n84 88",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "68 78\n31 44 54 58 61 51 6\n28 33\n53 54\n85 96\n18 98\n10 55\n37 30\n56 28\n43 54\n87 92\n78 49\n76 41\n44 57\n68 57\n73 23",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "72 67\n94 43 79 77 2 13 8\n72 43\n10 59\n82 42\n34 33\n58 77\n55 7\n33 31\n4 23\n60 89\n92 5\n44 34\n56 40\n31 87\n27 45",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "194 288\n180 460 392 417 68 365 160\n295 480\n109 229\n335 182\n143 148\n449 343\n217 282\n52 414\n423 274\n133 60\n192 456\n323 174\n445 321\n457 98\n288 411",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "112 337\n116 240 195 94 146 76 351\n214 338\n332 391\n286 192\n284 236\n387 85\n368 302\n253 141\n471 373\n257 325\n487 440\n98 126\n149 258\n350 227\n186 69",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "205 135\n404 447 499 168 281 174 240\n185 76\n233 105\n437 290\n198 340\n274 232\n479 137\n74 146\n252 153\n323 411\n310 359\n69 158\n385 55\n99 496\n127 303",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "58 332\n471 195 215 292 367 287 59\n287 395\n175 440\n499 195\n457 202\n317 169\n132 488\n308 130\n96 228\n120 495\n379 321\n280 394\n223 374\n499 324\n351 356",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "367 56\n208 270 72 493 155 201 313\n214 151\n100 340\n203 397\n308 480\n225 62\n230 283\n254 113\n294 323\n464 295\n243 379\n137 214\n259 70\n90 105\n78 166",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "76 321\n141 425 78 373 479 57 104\n166 446\n192 454\n134 98\n245 181\n280 470\n243 114\n262 231\n177 157\n466 167\n106 118\n78 454\n111 386\n348 233\n433 198",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "470 62\n177 170 469 278 376 194 267\n216 105\n199 427\n65 321\n119 339\n154 235\n360 481\n459 391\n387 287\n486 387\n111 473\n329 115\n348 492\n362 127\n362 438",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000 1000 1000 1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000 1000 1000 1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 999 1 999 1000 1000 2\n2 1000\n2 2\n1000 1\n1 1\n999 1000\n2 2\n1000 1\n999 2\n2 2\n999 1\n1 1000\n1000 1000\n999 1000\n1 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 2\n1 999 2 999 1000 1000 999\n1 2\n1 1000\n2 1000\n2 999\n999 2\n999 2\n1000 1\n2 1000\n2 1\n2 1000\n1000 2\n2 1000\n2 999\n1000 1000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:15",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Largest Rectangle in a Histogram",
  "tags": [],
  "text": "A histogram is a polygon composed of a sequence of rectangles aligned at a common base line.\r\nThe rectangles have equal widths but may have different heights.\r\nFor example, the figure on the left shows the histogram that consists of rectangles with the heights 2, 1, 4, 5, 1, 3, 3, measured in units where 1 is the width of the rectangles:Usually, histograms are used to represent discrete distributions, e.g., the frequencies of characters in texts.\r\nNote that the order of the rectangles, i.e., their heights, is important.\r\nCalculate the area of the largest rectangle in a histogram that is aligned at the common base line, too.\r\nThe figure on the right shows the largest aligned rectangle for the depicted histogram.Input SpecificationThe input contains several test cases.\r\nEach test case describes a histogram and starts with an integern, denoting the number of rectangles it is composed of.\r\nYou may assume that1 ≤ n ≤ 100000.\r\nThen follownintegersh1... hn, where0 ≤ hi≤ 1000000000.\r\nThese numbers denote the heights of the rectangles of the histogram in left-to-right order.\r\nThe width of each rectangle is1.\r\nA zero follows the input for the last test case.Output SpecificationFor each test case output on a single line the area of the largest rectangle in the specified histogram.\r\nRemember that this rectangle must be aligned at the common base line.ExampleInput:7 2 1 4 5 1 3 3\r\n4 1000 1000 1000 1000\r\n0Output:8\r\n4000",
  "sample_input": "Input:7 2 1 4 5 1 3 3\r\n4 1000 1000 1000 1000\r\n0Output:8\r\n4000",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/HISTOGRA",
  "scraped_at": "2025-08-17 00:34:21",
  "test_cases": [
    {
      "input": "7 2 1 4 5 1 3 3\r\n4 1000 1000 1000 1000\r\n0",
      "expected_output": "8\r\n4000",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2 1 7 4 9 4 6 5\n6 8 2 4 1\n9",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "8 1 3 5 3 3 9 8\n5 4 6 2 3\n3",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "7 3 9 4 3 7 4 10\n10 6 8 2 9\n8",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "41 10 28 35 26 100 40 91\n57 77 11 19 38\n56",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "9 81 74 7 47 28 72 89\n27 6 42 32 45\n27",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "21 73 54 61 24 91 59 100\n37 48 29 5 34\n40",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "48 94 40 16 84 70 89 65\n61 36 39 1 38\n79",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "18 1 75 28 90 43 54 34\n33 67 61 71 35\n40",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "7138 45329 23551 24105 16410 6670 18541 35522\n7708 14401 7613 31763 37328\n11096",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "47736 17693 19190 44713 21258 21269 16948 24572\n46269 20019 8735 30404 45781\n39330",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "5368 33089 46504 10215 10546 25922 39006 5427\n35056 31436 22337 9228 17423\n6666",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "20939 21554 45709 28597 36264 40475 13571 18076\n46148 11426 20681 45708 12469\n31642",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "29651 11849 21445 8879 8787 21978 47582 43817\n12030 21243 25729 36791 33401\n43699",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "18825 12166 14762 20987 31971 45547 32839 48591\n27715 35335 18879 43078 28323\n15644",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "37445 5852 18728 32225 37126 12590 30567 6260\n6687 46695 29864 8302 31971\n24861",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "100000 100000 100000 100000 100000 100000 100000 100000\n100000 100000 100000 100000 100000\n100000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "100000 100000 100000 100000 100000 100000 100000 100000\n100000 100000 100000 100000 100000\n100000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 2 1 2 99999 100000 99999 2\n1 100000 1 2 99999\n1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "99999 2 100000 100000 99999 100000 2 2\n99999 2 2 99999 100000\n99999",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:23",
  "total_test_cases": 20
}
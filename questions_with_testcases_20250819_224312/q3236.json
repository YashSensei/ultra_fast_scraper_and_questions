{
  "problem_code": "problems",
  "title": "Totient Extreme",
  "tags": [],
  "text": "Given the value of N, you will have to find the value of H. The meaning of H is given in the following code:H=0;For (i=1; i<=n; i++) {For (j=1; j<=n; j++) {H = H + totient(i) * totient(j);}}Totientor phi function, φ(n) is an arithmetic function that counts the number of positive integers less than or equal to n that are relatively prime to n. That is, if n is a positive integer, then φ(n) is the number of integers k in the range 1 ≤ k ≤ n for which gcd(n, k) = 1Constraints0 < T ≤ 500 < N ≤ 104InputThe first line contains T, the number of test cases. It is followed by T lines each containing a number N .OutputFor each line of input produce one line of output. This line contains the value of H for the corresponding N.ExampleInput:2\r\n3\r\n10Output:16\r\n1024",
  "sample_input": "Input:2\r\n3\r\n10Output:16\r\n1024",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/DCEPCA03",
  "scraped_at": "2025-08-17 00:34:27",
  "test_cases": [
    {
      "input": "2\r\n3\r\n10",
      "expected_output": "16\r\n1024",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3\n10\n2\n6",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "2\n2\n1",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "4\n5\n8\n6\n9",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "7\n48841155\n75987540\n941358\n56609743\n8138560\n16910149\n87332081",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "10\n27962865\n85410078\n62535867\n15521690\n45493133\n34437152\n46570229\n3138891\n54958050\n76213146",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "20\n22846034\n35951188\n25311404\n24412725\n19941937\n12080130\n17365067\n23312064\n80512049\n50951844\n40694752\n19020023\n82235148\n86764922\n74257488\n7947484\n16624962\n73272246\n49598663\n37979191",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "19\n8914452\n21025284\n15658031\n87022538\n72755159\n86664024\n25296168\n97415220\n1525389\n83666216\n89753965\n66082293\n76146047\n59190461\n33336091\n65472930\n56003668\n4725102\n67798722",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "5\n24513794\n24124663\n46477594\n44346710\n77840564",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "61\n27595\n80453\n55820\n46666\n58908\n46298\n54369\n87288\n51329\n61721\n20183\n35261\n59428\n85313\n53356\n74354\n6214\n93961\n12962\n49964\n88201\n16628\n9325\n84860\n76241\n13592\n23697\n64380\n469\n36858\n27479\n94773\n41126\n96375\n76014\n83865\n76638\n84028\n17571\n29887\n74073\n83186\n11487\n41756\n50515\n28440\n30222\n67547\n57151\n26588\n81894\n54859\n11770\n43650\n80955\n32391\n4183\n34300\n80076\n26562\n61432",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "63\n75650\n20924\n62114\n9561\n65408\n83791\n38159\n28262\n51758\n42173\n61882\n18901\n94753\n32387\n73114\n56175\n64909\n98861\n40719\n64678\n11625\n8242\n29284\n13915\n74354\n11626\n76518\n37782\n37639\n69239\n60238\n90222\n30566\n40748\n73138\n15803\n99338\n61979\n98145\n8377\n15842\n78985\n12365\n63679\n48073\n22838\n5259\n80883\n41399\n11990\n52413\n72366\n97501\n11679\n88412\n11867\n67266\n91070\n65598\n37366\n11751\n62992\n10895",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "74\n94910\n58520\n79014\n13752\n21263\n75573\n21127\n5698\n30302\n129\n79949\n16172\n65694\n26941\n32814\n84870\n55939\n93491\n39643\n19208\n38802\n29990\n2515\n14431\n49051\n49768\n32494\n661\n23688\n55364\n46037\n49779\n28658\n41901\n58043\n64680\n84761\n22284\n25720\n4891\n80814\n61192\n60929\n39119\n25060\n81258\n85637\n24423\n87426\n78105\n56967\n47417\n34803\n9601\n32755\n36472\n83234\n13006\n97320\n3448\n93234\n93217\n96923\n76398\n45576\n248\n91448\n96945\n35411\n76764\n84041\n73848\n46233\n23403",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "83\n57285\n39440\n87223\n94956\n96567\n89617\n5431\n79013\n28653\n45128\n12917\n25572\n89866\n59072\n13954\n16894\n10145\n85496\n46272\n15374\n51420\n85835\n95110\n31934\n69191\n75595\n49918\n38020\n95944\n14995\n87292\n55070\n72749\n88856\n89311\n53700\n90598\n2693\n68161\n10270\n87492\n9442\n91154\n79952\n3426\n7878\n35160\n93413\n23804\n67282\n87935\n23639\n28958\n44507\n28585\n62863\n65243\n47584\n78697\n71835\n76331\n43273\n86950\n74306\n5366\n79717\n1641\n36622\n1132\n86726\n88194\n31354\n66512\n64719\n3364\n8392\n8793\n20502\n88205\n46684\n28434\n53199\n96278",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "34\n96174\n54386\n34025\n3108\n3084\n58135\n11940\n44193\n24710\n49196\n31238\n80870\n61392\n69571\n81085\n15533\n17847\n19611\n7212\n49332\n39046\n23574\n76923\n87594\n41569\n44556\n71720\n42442\n1988\n84197\n77739\n58090\n80665\n27464",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "30\n91025\n22908\n87861\n33403\n88873\n70557\n27195\n88772\n55062\n63104\n40380\n63230\n40212\n88167\n87536\n65448\n49939\n9375\n81703\n36694\n49339\n41444\n19048\n37411\n95517\n75652\n91526\n63848\n93279\n60322",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "67\n5000\n97321\n10020\n7067\n29846\n12224\n12706\n39517\n32543\n75208\n81824\n22742\n63119\n11820\n6322\n74362\n64032\n29785\n42605\n28629\n47308\n49601\n75938\n51453\n45871\n26822\n63231\n55587\n72947\n41215\n29692\n30550\n36578\n52972\n43755\n54819\n68303\n15865\n69966\n86175\n10192\n42057\n27515\n81399\n56220\n85399\n92280\n5044\n72534\n52888\n94235\n95465\n85801\n88439\n64327\n12025\n61373\n55771\n46478\n56474\n49064\n35914\n45375\n35775\n34032\n86969\n74699",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "104\n41774467\n7944191\n57871594\n34820468\n39396172\n43596499\n11243248\n68371466\n76215860\n73191196\n53246499\n36581249\n29412012\n76059217\n20581135\n12124595\n67849830\n52151955\n10855135\n20147690\n25703027\n31348418\n74594585\n73693681\n73343212\n8954386\n34555750\n97327749\n56441930\n28491496\n49418303\n75615700\n44482901\n43201240\n38367494\n38694592\n24325750\n44164941\n90930328\n22208237\n88806584\n93316411\n40142401\n12417716\n53602791\n59485838\n9531536\n52574135\n14422410\n6445942\n28738244\n698840\n71309814\n94649351\n75325655\n84227977\n37410825\n11171374\n64569953\n7859162\n75709233\n15636902\n80760492\n82044862\n78630562\n93052746\n52262979\n48954008\n73152189\n18848611\n31583536\n12610530\n6088676\n32094390\n7609589\n18603827\n46479429\n82011689\n81001721\n29520096\n19247289\n37664474\n38737451\n5008948\n17120023\n78683003\n1636565\n7414097\n82656142\n25980031\n73225763\n30309780\n34100490\n75903272\n40532304\n64992872\n27281110\n43000122\n9195195\n22950186\n55803313\n93701731\n47170457\n80089718",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 104)"
    },
    {
      "input": "104\n19866952\n96213314\n21685290\n46100831\n90754086\n56077412\n10850803\n65854308\n4423607\n15255686\n97674616\n65570215\n33105277\n81893445\n30729175\n15310351\n28274887\n85541439\n75992360\n31534521\n30528501\n36273895\n48756218\n29339251\n46654006\n20238759\n48987237\n25064551\n31595793\n32674217\n88236299\n94214547\n55433087\n83201396\n9671753\n72301742\n93124965\n49148973\n58052827\n99175254\n54251809\n32880789\n96063948\n35614625\n20943656\n62937898\n54792037\n21196831\n8159848\n35329293\n96254700\n50287018\n99208032\n73192240\n13229941\n92150407\n65700116\n16548953\n8763987\n64032004\n53543639\n69162268\n44196392\n14138492\n43203531\n92188072\n1992618\n3792164\n80988870\n86604467\n30403690\n20233112\n88148950\n43291661\n93034834\n52522202\n76108023\n76910898\n61221282\n27614787\n82554548\n75732815\n3476639\n53837275\n15414825\n83171160\n96750325\n69250343\n8188100\n1164969\n85414414\n27200505\n94371842\n67718043\n1313394\n22149888\n67176212\n33104888\n40941483\n48709535\n80528350\n7166849\n82902354\n86749635",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 104)"
    },
    {
      "input": "1\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 1)"
    },
    {
      "input": "104\n100000000\n100000000\n1\n14511927\n1\n41095211\n7208386\n54369203\n84194256\n88218799\n1\n26911683\n52997640\n1\n1\n100000000\n10723862\n1\n1\n100000000\n7655203\n69848192\n100000000\n71950375\n12255581\n1\n1\n82971004\n100000000\n100000000\n1\n66288997\n8676360\n50552384\n100000000\n100000000\n100000000\n49309188\n20896920\n1\n34004227\n1\n100000000\n82465501\n100000000\n100000000\n65045060\n100000000\n1\n29508375\n1\n100000000\n1\n74951197\n1\n100000000\n100000000\n1\n100000000\n62588196\n9639781\n8595991\n1\n100000000\n100000000\n100000000\n58577596\n100000000\n100000000\n1\n78891499\n100000000\n1\n1\n100000000\n74971769\n46894022\n1\n100000000\n27674541\n1\n1\n20635182\n34767900\n1\n3246352\n100000000\n1\n100000000\n1\n1\n1\n1\n100000000\n88860386\n1888429\n22970020\n12721389\n1713963\n64784566\n100000000\n62482487\n80699672\n71522740",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 104)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:23",
  "total_test_cases": 20
}
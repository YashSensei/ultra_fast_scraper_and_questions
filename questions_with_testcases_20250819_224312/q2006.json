{
  "problem_code": "problems",
  "title": "Battleships",
  "tags": [],
  "text": "You and a friend are playing the classic game of Battleships. You each have a grid consisting of $M$ rows of $N$ cells each ($1 \\leq M,N \\leq 2000$). Each cell is either empty or contains a player’s ship (in this version of the game, all ships are the size of one cell). The goal of the game is to destroy all of the opponent’s ships by hitting individual cells.You and your friend have bet tons of Internet Points on this game. Unfortunately, your friend is completely owning you. So desperate times call for desperate measures.You know for a fact that you can distract your friend for a brief moment by telling him that a famous programmer is behind him, but this trick will only work exactly once (programmers are so predictable). While he isn’t looking, you’ll have time to snatch up some of his ships with one hand. Your hand can cover a square of exactly $S$x$S$ cells ($1 \\leq S \\leq min\\{M,N\\}$), and you can gather all the ships within such a square at once.Of course, your friend is no fool, so he’s got his grid well concealed. As such, you don’t know anything about it except its size, so when the time comes, you’ll just choose a random square of size $S$x$S$ that’s completely within the grid.As usual, these bets attract large crowds. One of the bystanders who can see your opponent’s grid knows your plan, and is curious as to the expected number of ships that you will grab (in other words, the average number of ships out of all the possible snatches you could make). Nerdy though he is, he can’t calculate it in his head, so he runs over to a computer and codes up a program...InputLine 1: 3 integers, $M$, $N$, and $S$.Next $M$ lines: $N$ characters each, representing your opponent’s grid – an ‘X’ represents a ship, while a ‘.’ represents an empty cell.OutputA single number – the expected number of ships that you’ll grab, rounded to 6 decimal places.ExampleInput:3 4 2\r\nXX.X\r\nXX..\r\n.X..Output:2.000000Explanation of SampleThere are 6 possible areas you could pick, yielding this many ships each:4 2 1\r\n3 2 0This is a total of 12 ships, for an average of exactly 2 per grab.",
  "sample_input": "Input:3 4 2\r\nXX.X\r\nXX..\r\n.X..Output:2.000000",
  "sample_output": "4 2 1\r\n3 2 0",
  "link": "https://www.spoj.com/problems/BSHIP",
  "scraped_at": "2025-08-17 00:33:53",
  "test_cases": [
    {
      "input": "3 4 2\r\nXX.X\r\nXX..\r\n.X..",
      "expected_output": "2.000000",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "10 4 8\nvmocq\nmeqynrr\nmixag",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "9 6 10\nv\nm\nye",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "10 7 1\nasnqu\njvgkjrm\ncwea",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "7 84 75\nozbjfkw\ne\nowvcwox",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "6 99 81\nsonlovh\nxx\nbstsgabx",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "53 79 8\nzevzjs\nuooxsrjw\nyekzfrgg",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "78 4 10\nyvg\nzqg\nwyva",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "37 38 87\nicwgo\nxjqhc\nkftvt",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "473 385 100\ne\ny\nqolkqlm",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "54 367 401\nftijqurr\nkfu\noeluq",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "363 384 409\naqagun\nysgc\nbulgp",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "446 212 344\ntg\nxyyzisn\nbtmkg",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "68 453 90\nzrrgosw\nzj\ndqxeyzrz",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "355 396 392\npo\nhonm\nhpfmk",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "353 494 199\nouo\nt\namdulvfc",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000\nqmjwsccb\nmfgoklx\nb",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000\nta\ntb\noskgmtpn",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 1 999\nmxdsz\norvvh\ng",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "999 2 999\ng\nylhxmhyh\nyfyqwkvv",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:19",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Temple Queues",
  "tags": [],
  "text": "TheTirumala templeis the most visited place of worship in the world. As the number of pilgrims who visit the temple each day is very high, the head of the temple should keep monitoring the queue system. Today is another lovely day and he has started his work. There areNqueues at the entrance of the temple and some of them are already filled with pilgrims. Each queue has a metal door at the beginning, which leads to the temple. When the door is opened, it allows only one pilgrim to get through it and it gets closed immediately after that.New pilgrims are rushing in to the queues and the head needs to monitor the current sizes of the queues and decide which doors to be opened. At any time, he wants to know how many queues currently have at leastXpilgrims. He also decides an integerYand wants to open the doors of all the queues having at leastYpilgrims at that time. You are the controller of the queue system and are following his instructions. Respond quickly and win yourself a big laddu (sweet) from him :) .Read the input section for rest of the details.InputThe first line contains two integers N and Q. N - The number of queues [1 ≤ N ≤ 100,000], Q - The number of queries [0 ≤ Q ≤ 500,000]. The second line contains N integers, which are the initial sizes of the queues. ith integer (1-based) is the initial size of queue i [0 ≤ initial size ≤ 100,000,000]Each of the next Q lines is one of the following:1 A [One pilgrim enters the queue# A (1 ≤ A ≤ N)]2 X [Find the number of queues having at least X pilgrims currently (0 ≤ X ≤ 1,000,000,000)]3 Y [Open the doors of all the queues having at least Y pilgrims (1 ≤ Y ≤ 1,000,000,000), and thus allowing only one pilgrim to enter the temple from each of them]OutputFor each query of type \"2 X\", print the answer in a new line.ExampleInput:5 6\r\n20 30 10 50 40\r\n2 31\r\n1 2\r\n2 31\r\n3 11\r\n2 20\r\n2 50Output:2\r\n3\r\n3\r\n0Note:Ideal time limit should be 2s. It has been increased to 7s, to let Java solutions pass, as the I/O is huge. Edit: now 1s after server update.There are multiple test sets, and the judge shows thesumof the time taken over all test sets of your submission, if accepted.",
  "sample_input": "Input:5 6\r\n20 30 10 50 40\r\n2 31\r\n1 2\r\n2 31\r\n3 11\r\n2 20\r\n2 50Output:2\r\n3\r\n3\r\n0",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/TEMPLEQ",
  "scraped_at": "2025-08-17 00:33:21",
  "test_cases": [
    {
      "input": "5 6\r\n20 30 10 50 40\r\n2 31\r\n1 2\r\n2 31\r\n3 11\r\n2 20\r\n2 50",
      "expected_output": "2\r\n3\r\n3\r\n0",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "9 3\n9 10 5 8 10\n3 7\n1 9\n5 8\n7 5\n5 3\n2 6",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "7 4\n4 10 7 8 8\n8 6\n6 5\n8 9\n5 1\n7 4\n2 10",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "4 7\n5 5 5 1 1\n9 1\n4 9\n9 2\n4 3\n10 9\n2 8",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "54 39\n93 14 17 70 45\n25 93\n55 54\n94 75\n18 67\n94 69\n73 84",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "65 82\n24 83 63 5 51\n84 14\n67 48\n95 64\n84 92\n75 14\n50 82",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "79 26\n76 28 98 82 11\n97 55\n35 32\n41 51\n100 96\n49 50\n11 52",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "58 37\n68 41 7 98 23\n25 19\n76 25\n30 7\n77 50\n74 30\n65 80",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "23 3\n77 53 99 99 70\n79 17\n90 53\n6 55\n74 6\n84 57\n30 20",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "9 5\n24 31 31 36 24\n48 25\n11 39\n48 27\n46 14\n37 25\n25 15",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "38 17\n34 15 15 5 42\n30 20\n41 46\n12 38\n49 22\n40 44\n26 40",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "12 38\n17 38 21 26 36\n42 28\n40 32\n40 39\n32 6\n47 14\n13 30",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "25 42\n39 10 38 49 15\n49 33\n36 40\n17 31\n50 41\n13 42\n40 9",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "31 39\n36 36 31 6 21\n23 31\n26 47\n13 42\n5 16\n34 8\n48 45",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "34 28\n21 28 25 30 17\n50 36\n48 7\n21 39\n5 10\n12 23\n40 15",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "38 11\n37 6 45 9 43\n14 25\n46 40\n43 50\n43 49\n48 36\n16 46",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "100 100\n100 100 100 100 100\n100 100\n100 100\n100 100\n100 100\n100 100\n100 100",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "100 100\n100 100 100 100 100\n100 100\n100 100\n100 100\n100 100\n100 100\n100 100",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 2\n2 1 2 100 99\n1 99\n2 2\n99 1\n99 100\n1 100\n2 99",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 99\n99 99 2 99 1\n99 2\n100 100\n1 100\n1 1\n1 100\n2 100",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:12",
  "total_test_cases": 20
}
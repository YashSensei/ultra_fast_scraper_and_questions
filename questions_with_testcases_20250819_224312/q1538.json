{
  "problem_code": "problems",
  "title": "Pizza Prize",
  "tags": [],
  "text": "Asad, Foyj, Juwel, Mijan, Tanmayare friends from group \"Mission Starts\". They are in the queue for pizza in a bakery. No other people is in the queue. A person who takes one pizza can get two chances to get pizza at the end of queue.Explanation:Initial Chances queue: Asad, Foyj, Juwel, Mijan, Tanmay.After taking 1st pizza the Chances queue: Foyj, Juwel, Mijan, Tanmay, Asad, Asad.After taking 2nd pizza the Chances queue: Juwel, Mijan, Tanmay, Asad, Asad, Foyj, Foyj.And so on……..But the shopkeeper wants to offer a special prize to a person who have theNth pizza. In this case, He asks for your help. You are a great programmer in our country. Your task is to find the name of the lucky winner who have theNth pizza (the queue only contain these 5 peoples and their order should be maintained strictly).InputEvery line of the input contains a single integerNdenoting the lucky pizza number.Constraints1 ≤N≤ 109OutputFor each test case, print a single line and print the name of the lucky winner.ExampleInput:1\r\n2\r\n3Output:Asad\r\nFoyj\r\nJuwel",
  "sample_input": "Input:1\r\n2\r\n3Output:Asad\r\nFoyj\r\nJuwel",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/PPR",
  "scraped_at": "2025-08-17 00:33:36",
  "test_cases": [
    {
      "input": "1\r\n2\r\n3",
      "expected_output": "Asad\r\nFoyj\r\nJuwel",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5\n5\n8\n6\n3\n8",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n3",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n3\n5\n4\n3\n9",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "10\n49810402\n78927241\n90263558\n51141296\n20714233\n37514866\n13554559\n89315754\n95258651\n71181747",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "18\n29615926\n40611992\n50938301\n89396458\n96003520\n67031522\n18370831\n71515524\n33497826\n93129986\n84553461\n38435715\n18319074\n95466142\n93396798\n70219268\n49651732\n13924974",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "18\n41173428\n97841670\n80445680\n66299394\n48205880\n71072427\n93302236\n84428982\n446252\n84363054\n45447388\n63721138\n44153667\n42279177\n39459560\n26009024\n51781063\n8122577",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "8\n67251848\n19315238\n52076458\n18526386\n16664050\n60223662\n90697424\n67435211",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "10\n80781625\n65469247\n43842760\n5125527\n49271237\n47317979\n13215004\n620934\n51985694\n25512269",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "76\n18875\n36798\n34330\n2967\n10960\n99368\n30547\n94270\n12522\n64412\n49193\n57169\n23914\n6648\n13355\n61970\n4168\n21992\n36177\n85258\n47039\n43172\n2781\n41424\n5517\n88215\n49653\n90677\n78587\n40291\n95658\n11196\n40791\n82751\n83242\n53601\n45878\n63253\n72201\n47091\n11714\n72219\n31400\n67271\n11761\n7419\n7917\n50132\n28502\n65715\n49167\n79802\n77775\n99764\n28620\n40875\n31141\n79215\n4255\n66532\n1460\n77190\n63525\n41316\n17014\n93605\n22107\n12368\n42506\n34513\n58352\n49454\n42721\n39102\n49478\n5920",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "54\n91762\n32105\n39420\n39590\n14809\n67161\n91550\n17130\n71480\n43317\n11290\n4174\n91522\n23170\n58736\n17590\n10402\n62915\n22132\n17402\n30164\n79319\n28221\n18911\n26823\n49038\n72113\n83819\n11843\n85631\n59001\n7127\n27539\n79224\n25416\n47041\n8086\n13097\n26263\n35706\n36831\n2577\n46704\n59509\n81700\n23672\n96701\n11822\n2793\n84557\n69494\n24138\n31560\n17320",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "51\n82901\n50233\n25505\n53482\n19149\n94409\n94587\n37457\n13064\n91649\n62064\n65413\n55623\n94277\n41798\n15887\n60835\n97328\n80401\n39571\n39327\n27777\n22221\n50856\n55446\n91926\n99480\n25364\n56258\n19518\n32802\n76480\n14244\n55581\n80083\n52355\n97756\n68195\n65364\n17766\n97798\n67903\n93326\n83971\n27633\n46252\n52479\n91742\n57052\n89837\n48475",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "51\n1180\n92842\n21547\n29770\n43208\n79439\n83709\n36840\n43936\n25979\n87041\n65483\n96556\n34178\n82118\n79098\n84206\n26779\n32819\n77618\n264\n8565\n62164\n89049\n60548\n26353\n30447\n43429\n71534\n19129\n69704\n47778\n72957\n13014\n34150\n17720\n58439\n74263\n17480\n74848\n69745\n42918\n49522\n20376\n74445\n75241\n86172\n73403\n25506\n66945\n43440",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "24\n18506\n11713\n23164\n35311\n41437\n15048\n62034\n42616\n51599\n3758\n56323\n71245\n20239\n60385\n15130\n18898\n42422\n23082\n81375\n57401\n94719\n4761\n13218\n62486",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "78\n20708\n21124\n950\n91146\n86510\n81351\n83108\n41758\n88543\n86025\n62337\n52144\n449\n10599\n65467\n24325\n23751\n43261\n46616\n15583\n51539\n8488\n67204\n26118\n66847\n11667\n40149\n53375\n52543\n61192\n60348\n44849\n59798\n76296\n32127\n33442\n45000\n65670\n35280\n61557\n4897\n86111\n48575\n69001\n83981\n26911\n14884\n51003\n61902\n75646\n72540\n95619\n21316\n92780\n17659\n80443\n24564\n18617\n95873\n10920\n71822\n52532\n10311\n85521\n69308\n96200\n33049\n24437\n59525\n21424\n34794\n17886\n93108\n2558\n71872\n13394\n39174\n48999",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "22\n26663\n15285\n57834\n6014\n92900\n68326\n1100\n58773\n88075\n79589\n18515\n2963\n35795\n8143\n28774\n29435\n2291\n30540\n39909\n20945\n51423\n14864",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "109\n94267516\n23576556\n58740219\n58216687\n52005084\n95015704\n82800650\n59913131\n26643255\n24876512\n2516984\n85614348\n59850470\n40688178\n96015549\n63280793\n16050102\n52209772\n65488011\n71111234\n50583509\n66728715\n2474840\n82716541\n87404213\n84235383\n37617924\n55104879\n23277581\n22348933\n60348958\n93577\n56913674\n87943821\n89646828\n74056929\n30980325\n49018631\n36745274\n36569370\n39487185\n30172710\n62989242\n46034923\n92684526\n91755936\n74395187\n15906997\n67613225\n42085314\n77788698\n44323856\n88053294\n97031265\n31824227\n65879575\n85440090\n77645168\n78360750\n72534877\n84874834\n76951675\n7892084\n75749512\n91685437\n82851432\n14077907\n63778561\n28854793\n65031448\n79242085\n57261210\n2069670\n75995600\n33838453\n30121604\n68249570\n19352826\n28213958\n7589369\n96409762\n95101603\n34206546\n36691127\n915971\n65425804\n20878469\n78874557\n91408152\n76994095\n149077\n66783878\n57584344\n14846327\n80941280\n54820291\n18727222\n15313219\n74177596\n56037140\n83982659\n20588268\n35488843\n18099866\n67995209\n10976345\n55360455\n8384059\n7654767",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 109)"
    },
    {
      "input": "109\n65983191\n18571481\n747061\n79786741\n98094852\n13942936\n40385590\n24867760\n32358457\n83618227\n24257827\n7730048\n36750009\n89228705\n61845970\n1889879\n91285240\n96095488\n10039947\n74701735\n47287709\n59740945\n43745568\n22717156\n42600416\n11428499\n74838750\n76110857\n90770588\n33825151\n13760977\n64300100\n39132319\n29665347\n99978118\n77805842\n65281376\n47342028\n10231084\n72691977\n55805844\n25406053\n90074014\n99116797\n25815722\n81668967\n26384097\n75448231\n67197087\n98961005\n32983068\n7957832\n72948622\n53515786\n72839785\n85508680\n517\n40512150\n69174366\n28441722\n82467213\n51080365\n21259935\n32475459\n15507432\n37625561\n96411092\n87724270\n2513160\n36137750\n62091595\n44840187\n49704141\n50244233\n28811208\n18887027\n86348952\n91874009\n41534060\n15251566\n97377338\n54077441\n25015235\n80219671\n49269859\n2939280\n51511809\n66909128\n12925042\n67148815\n82777950\n21164033\n99863916\n13748712\n15024987\n73038524\n79842510\n65150956\n12004099\n54588388\n74891135\n64896896\n54141799\n38581885\n99025642\n93072752\n39804709\n73854928\n39897836",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 109)"
    },
    {
      "input": "2\n1\n1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 2)"
    },
    {
      "input": "109\n100000000\n1\n100000000\n1\n1\n1\n1\n55104781\n16746273\n34770550\n87529236\n1\n70648641\n1\n1\n26620403\n100000000\n100000000\n1\n100000000\n77018938\n1\n1\n1\n1\n1\n1\n67860655\n4744360\n1\n1\n1\n49023154\n100000000\n1\n42963858\n100000000\n92369790\n100000000\n23232959\n61957957\n1\n1\n72096512\n56006288\n39914908\n100000000\n100000000\n48540566\n1\n62943165\n100000000\n9140181\n1\n1\n100000000\n1\n61423183\n100000000\n1\n75710568\n100000000\n21360293\n100000000\n11092773\n100000000\n1\n6881836\n1\n1\n2003154\n48565866\n1\n1\n49054391\n32109833\n1\n100000000\n82827682\n1\n9399420\n75911221\n5924529\n100000000\n13714809\n100000000\n1\n29754611\n39682932\n85249638\n100000000\n37756257\n1\n59031100\n1\n1\n1\n9056331\n56120551\n100000000\n100000000\n100000000\n100000000\n34426007\n1\n1\n1\n100000000\n1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 109)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:17",
  "total_test_cases": 20
}
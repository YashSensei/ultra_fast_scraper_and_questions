{
  "problem_code": "problems",
  "title": "Investment Money",
  "tags": [],
  "text": "John never knew he had a grand-uncle, until he received the notary’s letter. He learned that his late grand-uncle had gathered a lot of money, somewhere in South-America, and that John was the only inheritor.John did not need that much money for the moment. But he realized that it\r\nwould be a good idea to store this capital in a safe place, and have it grow until he decided to retire. The bank convinced him that a certain kind of bond was interesting for him. This kind of bond has a ﬁxed value, and gives a ﬁxed amount of yearly interest, payed to the owner at the end of each year.The bond has no ﬁxed term. Bonds are available in different sizes. The larger ones usually give a better interest. Soon John realized that the optimal set of bonds to buy was not trivial to ﬁgure out. Moreover, after a few years his capital would have grown, and the schedule had to be re-evaluated. Assume the following bonds are available:Value   Annual interest\r\n 4000        400\r\n 3000        250With a capital of $10000 one could buy two bonds of $4000, giving a yearly interest of $800. Buying two bonds of $3000, and one of $4000 is a better idea, as it gives a yearly interest of e900. After two years the capital has grown to $11800, and it makes sense to sell a $3000 one and buy a $4000 one, so the annual interest grows to $1050.This is where this story grows unlikely: the bank does not charge for buying and selling bonds. Next year the total sum is $12850, which allows for three times $4000, giving a yearly interest of $1200. Here is your problem: given an amount to begin with, a number of years, and a set of bonds with their values and interests, ﬁnd out how big the amount may grow in the given period, using the best schedule for buying and selling bonds.InputThe ﬁrst line contains a single positive integer N which is the number of test cases. The ﬁrst line of a test case contains two positive integers: the amount to start with (at most $1000000), and the number of years the capital may grow (at most 40). The following line contains a single number: the number d (1 ≤ d ≤ 10) of available bonds. The next d lines each contain the description of a bond.\r\nThe description of a bond consists of two positive integers: the value of the bond, and the yearly interest for that bond. The value of a bond is always a multiple of $1000. The interest of a bond is never more than 10% of its valueOutputFor each test case, output – on a separate line – the capital at the end\r\nof the period, after an optimal schedule of buying and selling.SAMPLE INPUT\r\n1\r\n10000 4\r\n2\r\n4000 400\r\n3000 250\r\n\r\nSAMPLE OUTPUT\r\n14050",
  "sample_input": "Value   Annual interest\r\n 4000        400\r\n 3000        250",
  "sample_output": "SAMPLE INPUT\r\n1\r\n10000 4\r\n2\r\n4000 400\r\n3000 250\r\n\r\nSAMPLE OUTPUT\r\n14050",
  "link": "https://www.spoj.com/problems/MINVEST",
  "scraped_at": "2025-08-17 00:33:33",
  "test_cases": [
    {
      "input": "Value   Annual interest\r\n 4000        400\r\n 3000        250",
      "expected_output": "SAMPLE INPUT\r\n1\r\n10000 4\r\n2\r\n4000 400\r\n3000 250\r\n\r\nSAMPLE OUTPUT\r\n14050",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "c bkfuby pooon\n4 2\n1 5",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "oq sroi qnfcy\n5 1\n3 2",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "wah ewnvx dondlrqc\n5 7\n5 1",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "in f nd\n43 83\n52 12",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "sx ixcrzd pbkvzcef\n81 95\n32 99",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "hnnl jvd aype\n12 86\n35 91",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "qyb xollov um\n73 60\n5 13",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "bl vdy aoidxcxz\n71 33\n65 24",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "qcs caocdy mg\n104 105\n493 290",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "rxd fwoe wtop\n247 184\n298 320",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "ajc fma jykmoo\n304 455\n195 365",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "od jgosdh ofbvhvvl\n308 335\n191 215",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "eww nkr kwlw\n251 455\n376 474",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "kcwiv rbukbo xslfq\n157 283\n218 181",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "fpnh ngen omvyxt\n176 461\n170 436",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "ho bfiz puliuh\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "ol dsb dstfygg\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "r ziz frq\n999 2\n1 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "wqjkq cfwss nwe\n2 2\n1 1000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:17",
  "total_test_cases": 20
}
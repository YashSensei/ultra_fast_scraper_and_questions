{
  "problem_code": "problems",
  "title": "Submerging Islands",
  "tags": [],
  "text": "Vice City is built over a group of islands, with bridges connecting them. As anyone in Vice City knows, the biggest fear of vice-citiers is that some day the islands will submerge. The big problem with this is that once the islands submerge, some of the other islands could get disconnected. You have been hired by the mayor of Vice city to tell him how many islands, when submerged, will disconnect parts of Vice City. You should know that initially all the islands of the city are connected.InputThe input will consist of a series of test cases. Each test case will start with the number N (1 ≤ N ≤ 104) of islands, and the number M of bridges (1 ≤ M ≤ 105). Following there will be M lines each describing a bridge. Each of these M lines will contain two integers Ui, Vi (1 ≤ Ui, Vi ≤ N), indicating that there is a bridge connecting islands Ui and Vi. The input ends with a case where N = M = 0.OutputFor each case on the input you must print a line indicating the number of islands that, when submerged, will disconnect parts of the city.ExampleInput:3 3\r\n1 2\r\n2 3\r\n1 3\r\n6 8\r\n1 3\r\n6 1\r\n6 3\r\n4 1\r\n6 4\r\n5 2\r\n3 2\r\n3 5\r\n0 0Output:0\r\n1",
  "sample_input": "Input:3 3\r\n1 2\r\n2 3\r\n1 3\r\n6 8\r\n1 3\r\n6 1\r\n6 3\r\n4 1\r\n6 4\r\n5 2\r\n3 2\r\n3 5\r\n0 0Output:0\r\n1",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/SUBMERGE",
  "scraped_at": "2025-08-17 00:33:58",
  "test_cases": [
    {
      "input": "3 3\r\n1 2\r\n2 3\r\n1 3\r\n6 8\r\n1 3\r\n6 1\r\n6 3\r\n4 1\r\n6 4\r\n5 2\r\n3 2\r\n3 5\r\n0 0",
      "expected_output": "0\r\n1",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "7 10\n7 7\n2 4\n3 9\n10 6\n7 3\n1 3\n6 2\n10 6\n4 9\n4 6\n9 1\n1 3\n1 4",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "6 6\n9 1\n5 5\n3 5\n6 2\n6 1\n3 8\n7 4\n4 9\n3 2\n9 6\n6 5\n6 2\n7 2",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "5 1\n2 3\n10 10\n5 2\n1 6\n2 6\n9 2\n3 5\n5 1\n9 10\n8 2\n10 9\n10 7\n5 10",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "2 41\n89 31\n48 82\n23 13\n41 99\n56 17\n3 91\n2 81\n39 35\n48 96\n98 54\n52 32\n81 32\n6 100",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "33 78\n99 71\n61 71\n48 41\n27 86\n28 59\n80 93\n33 38\n96 85\n45 22\n83 16\n24 89\n87 51\n53 19",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "73 22\n80 50\n51 48\n25 35\n45 55\n10 1\n13 82\n96 60\n51 17\n16 84\n94 27\n18 94\n68 50\n71 92",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "36 24\n91 57\n6 63\n88 9\n88 15\n92 64\n18 19\n33 42\n8 29\n73 88\n17 100\n23 41\n19 96\n67 42",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "76 11\n84 9\n43 65\n68 78\n40 91\n92 2\n40 3\n73 34\n90 88\n6 98\n68 16\n12 10\n77 4\n91 85",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "36 45\n28 42\n32 15\n23 14\n26 36\n12 48\n11 43\n47 10\n11 27\n40 17\n38 36\n25 47\n5 35\n22 8",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "22 33\n50 45\n40 28\n10 30\n14 9\n24 24\n43 7\n17 18\n10 41\n38 39\n28 5\n13 23\n49 15\n32 16",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "11 46\n38 27\n22 47\n51 50\n49 14\n6 40\n30 28\n31 32\n38 39\n11 5\n50 43\n41 5\n14 12\n42 22",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "40 52\n52 42\n38 5\n50 36\n24 25\n11 42\n50 46\n12 44\n47 20\n51 36\n8 29\n17 9\n45 12\n27 9",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "25 13\n39 17\n33 11\n10 49\n45 33\n52 48\n47 45\n48 45\n31 52\n18 20\n29 51\n34 34\n28 9\n18 35",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "21 32\n44 38\n34 52\n48 21\n39 45\n14 49\n26 31\n7 35\n17 42\n39 16\n49 21\n42 49\n21 49\n7 13",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "24 35\n11 26\n31 10\n19 18\n34 41\n20 34\n29 40\n29 33\n10 51\n20 10\n25 23\n30 40\n51 14\n21 17",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "104 104\n104 104\n104 104\n104 104\n104 104\n104 104\n104 104\n104 104\n104 104\n104 104\n104 104\n104 104\n104 104\n104 104",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "104 104\n104 104\n104 104\n104 104\n104 104\n104 104\n104 104\n104 104\n104 104\n104 104\n104 104\n104 104\n104 104\n104 104",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "103 103\n103 1\n2 2\n103 104\n2 103\n2 2\n1 2\n1 1\n1 104\n104 2\n2 2\n2 2\n104 104\n2 104",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "104 104\n1 2\n2 1\n2 2\n2 103\n2 2\n104 2\n2 103\n103 1\n103 1\n1 103\n104 2\n2 1\n2 104",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:19",
  "total_test_cases": 20
}
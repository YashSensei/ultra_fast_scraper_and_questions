{
  "problem_code": "problems",
  "title": "Ada and Diary",
  "tags": [],
  "text": "Ada the Ladybug's crush Bumblebee Blazewan has a secret diary. Ada wants to read it to see, whether he loves her too. Sadly, the diary is locked with some very strong cipher so she can't read it.She asked you for help. Unfortunately, you are not able to break through. Yet you observed, that the key generated in the cipher is generated in following wayXi+1=(aXi+b) mod (1011+3). You was able to find out first sixXi's. Predicting next will help you to get through - can you do it?InputThere will be no more than105test-cases.Each test-case consists of line containing 6 integers0 ≤     Xi< 1011+3(1 ≤ i ≤ 6)OutputFor each test-case printX7(modulo 100000000003).Example Input2 10 34 106 322 970\r\n2 4 4 4 4 4\r\n2 11 47 191 767 3071\r\n0 0 0 0 0 0\r\n2 8 32 128 512 2048Example Output2914\r\n4\r\n12287\r\n0\r\n8192Possible settinga=3, b=4, X1=2\r\na=0, b=4, X1=2\r\na=4, b=3, X1=2\r\na=2, b=0, X1=0\r\na=4, b=0, X1=2",
  "sample_input": "2 10 34 106 322 970\r\n2 4 4 4 4 4\r\n2 11 47 191 767 3071\r\n0 0 0 0 0 0\r\n2 8 32 128 512 2048",
  "sample_output": "2914\r\n4\r\n12287\r\n0\r\n8192",
  "link": "https://www.spoj.com/problems/ADAHACK",
  "scraped_at": "2025-08-17 00:33:21",
  "test_cases": [
    {
      "input": "2 10 34 106 322 970\r\n2 4 4 4 4 4\r\n2 11 47 191 767 3071\r\n0 0 0 0 0 0\r\n2 8 32 128 512 2048",
      "expected_output": "2914\r\n4\r\n12287\r\n0\r\n8192",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "10 9 6 1 8 3\n6 1 9 4 5 4\n2 9 1 9 1 1\n10 9 1 6 3 4\n1 7 2 2 3 10",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "1 5 3 4 9 1\n7 2 4 10 5 6\n9 7 1 5 10 6\n4 7 2 1 5 6\n2 2 3 9 7 10",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "1 10 1 9 1 5\n4 10 7 3 5 8\n6 1 10 5 9 2\n5 2 10 9 2 3\n2 8 8 8 10 5",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "42 11 29 34 91 34\n29 46 34 37 96 40\n10 31 84 96 55 91\n77 82 39 6 76 29\n68 36 73 17 42 57",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "13 17 48 26 55 33\n41 38 66 41 68 83\n3 18 75 41 44 91\n45 41 5 39 7 12\n62 90 75 74 68 82",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "5 95 40 80 85 55\n7 20 31 52 27 73\n49 47 61 14 57 44\n39 48 96 38 65 74\n92 37 22 43 66 18",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "98 30 39 55 66 30\n91 88 78 14 75 100\n67 39 3 79 70 3\n80 55 58 85 49 60\n1 14 14 50 10 6",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "97 31 6 51 8 12\n26 87 28 44 42 12\n23 34 59 2 76 80\n1 96 72 96 21 9\n26 16 22 71 17 52",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "496 201 395 340 411 246\n344 461 482 53 134 445\n434 241 329 340 425 311\n424 492 376 161 377 80\n395 110 143 367 214 205",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "243 464 198 340 274 54\n135 308 152 383 98 312\n95 364 333 402 265 174\n415 351 331 249 149 69\n100 142 495 467 391 484",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "100 108 294 353 67 293\n105 317 134 499 237 147\n131 307 282 380 149 194\n478 163 487 259 386 130\n443 293 180 434 255 480",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "284 444 497 496 467 252\n209 142 76 110 486 216\n239 303 438 450 461 113\n59 474 337 275 135 434\n256 386 218 392 329 62",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "356 136 211 331 128 296\n383 303 457 114 196 360\n81 481 368 471 263 390\n131 332 441 309 230 293\n116 489 356 50 389 240",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "140 398 326 206 306 71\n372 417 307 253 411 166\n60 353 325 286 305 475\n399 242 271 413 92 113\n136 68 480 407 419 273",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "449 444 240 370 410 206\n318 241 235 128 257 313\n268 444 285 181 340 299\n193 469 200 185 134 467\n379 434 101 481 456 203",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "999 2 1 1 2 1\n1000 999 999 1 1000 2\n1 1 1000 2 999 2\n999 1 2 1 999 999\n1 1 999 1 999 1000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "999 1000 1000 999 1000 999\n1 1000 1000 2 2 1000\n1 2 2 1 2 1000\n1 2 999 1 999 2\n2 2 999 2 2 999",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:15",
  "total_test_cases": 20
}
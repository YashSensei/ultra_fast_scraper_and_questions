{
  "problem_code": "problems",
  "title": "Hilbert Curve",
  "tags": [],
  "text": "The Hilbert Mole is a small and very rare mole. The first and only specimen was found by David Hilbert\r\nat his backyard. This mole lives in a huge burrow under the ground, and the border of this burrow forms\r\na Hilbert curve of n-th order (Hn).Figure 1.  Hilbert curves, order 1 to 4.Hilbert curves can be defined as follows. H1is a unit square with open top side (figure 1(a)), Hnconsists\r\nof four copies of Hn-1: bottom left and bottom right are copied without changes, top left is rotated 90ocounter-clockwise and top right is rotated 90oclockwise. These small copies are connected by three segments of unit length (figure 1(b),(c),(d)).Figure 2.  Burrow, filled with water.Trying to exterminate the mole, Mr. Hilbert fills the burrow with water (figure 2). But air inside the burrow\r\nprevents water from filling it entirely. In this problem we suppose that air and water are incompressible\r\nand cannot leak through the borders of the burrow. Your task is to find the total area of the burrow, filled\r\nwith water.Note that water can flow over the obstacle only when its level is strictly higher. See examples on figure 3\r\nfor further clarification.Figure 3.  More examples of filled burrows.InputMultiple test cases. For each test case:The first line of the input file contains two integer numbers: n and alpha - order of Hilbert curve and slope angle of surface in degrees (1 <= n <= 12, 0 <= alpha < 90).Input terminates by EOF.OutputFor each test case:The first line of the output file must contain a single real number - the total area of the burrow, filled\r\nwith water. The relative error of the answer must not exceed 10-6.ExampleInput:5 30\r\n3 45\r\n4 10\r\n3 0Output:190.803847577293\r\n15.5\r\n91.573591766702\r\n26.0",
  "sample_input": "Input:5 30\r\n3 45\r\n4 10\r\n3 0Output:190.803847577293\r\n15.5\r\n91.573591766702\r\n26.0",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/FRACTAL",
  "scraped_at": "2025-08-17 00:33:05",
  "test_cases": [
    {
      "input": "5 30\r\n3 45\r\n4 10\r\n3 0",
      "expected_output": "190.803847577293\r\n15.5\r\n91.573591766702\r\n26.0",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5 4\n1 3\n4 4\n10 8",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "3 2\n10 2\n8 5\n6 8",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "6 3\n4 10\n5 10\n8 5",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "59 74\n66 9\n33 20\n29 70",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "35 80\n51 75\n28 77\n60 20",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "61 93\n12 76\n40 78\n38 38",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "40 28\n88 44\n65 22\n60 85",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "60 51\n48 81\n77 93\n82 59",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "155 275\n332 135\n168 121\n344 438",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "126 71\n191 493\n145 108\n437 102",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "411 289\n189 480\n187 366\n243 472",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "234 258\n160 88\n489 412\n250 148",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "225 55\n171 391\n80 440\n417 138",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "330 243\n143 462\n204 220\n273 254",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "146 349\n459 132\n387 246\n318 275",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1\n1 1000\n2 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1000 1000\n1000 1\n1 1\n2 1000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:13",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Hablu Wants to Buy",
  "tags": [],
  "text": "In Hablu's country, there are 5 types of notes. $2, $4, $8, $16 and $32. He went to a shop, and wants to buy an item which costs $w. He has to pay exactly $w to the shopkeeper. Can he pay $w?Hablu can break his notes in half, that is, he can break his one $32 notes to two $16 notes, a $16 can be broken into two $8 notes, and so on. Only $2 can't be broken into $1, because there are no $1 notes. He has A $2 notes, B $4 notes, C $8 notes, D $16 notes and E $32 notes. Your task is to find whether Hablu can pay $w using his notes.InputThe first and only line contains positive integers A, B, C, D, E, w, separated by spaces.OutputIf Hablu can pay $w, print \"YES\", else print \"NO\".ExampleInput:1 2 3 4 5 2Output:YESConstraints(A+B+C+D+E) ≤ 109w ≤ 107",
  "sample_input": "Input:1 2 3 4 5 2Output:YES",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/HMBY",
  "scraped_at": "2025-08-17 00:33:32",
  "test_cases": [
    {
      "input": "1 2 3 4 5 2",
      "expected_output": "YES",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5 3 9 3 7 1",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "4 9 10 7 6 4",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "7 6 2 1 5 5",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "60 71 32 95 61 1",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "15 83 43 3 92 10",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "77 36 5 77 22 99",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "39 59 27 45 92 37",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "14 31 45 22 10 44",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "91 135 141 213 158 212",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "123 114 311 177 329 104",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "380 80 373 291 163 139",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "431 199 479 176 279 473",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "490 183 452 306 351 313",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "153 259 88 97 58 308",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "467 124 187 143 388 169",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 2 2 999 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 1000 1000 1000 1000 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:16",
  "total_test_cases": 20
}
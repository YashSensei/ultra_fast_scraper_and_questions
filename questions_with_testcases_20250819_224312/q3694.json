{
  "problem_code": "problems",
  "title": "Transportation",
  "tags": [],
  "text": "Ruratania is just entering capitalism and is establishing new enterprising activities in many fields including transport. The transportation company TransRuratania is starting a new express train from city A to city B with several stops in the stations on the way. The stations are successively numbered, city A station has number 0, city B station numberm. The company runs an experiment in order to improve passenger transportation capacity and thus to increase its earnings. The train has a maximum capacitynpassengers. The price of the train ticket is equal to the number of stops (stations) between the starting station and the destination station (including the destination station). Before the train starts its route from the city A, ticket orders are collected from all onroute stations. The ticket order from the station S means all reservations of tickets from S to a fixed destination station. In case the company cannot accept all orders because of the passenger capacity limitations, its rejection policy is that it either completely accept or completely reject single orders from single stations.Write a program which for the given list of orders from single stations on the way from A to B determines the biggest possible total earning of the TransRuratania company. The earning from one accepted order is the product of the number of passengers included in the order and the price of their train tickets. The total earning is the sum of the earnings from all accepted orders.InputThe input file is divided into blocks. The first line in each block contains three integers: passenger capacitynof the train, the number of the city B station and the number of ticket orders from all stations. The next lines contain the ticket orders. Each ticket order consists of three integers: starting station, destination station, number of passengers. In one block there can be maximum 22 orders. The number of the city B station will be at most 7. The block where all three numbers in the first line are equal to zero denotes the end of the input file.OutputThe output file consists of lines corresponding to the blocks of the input file except the terminating block. Each such line contains the biggest possible total earning.Sample Input10 3 4\r\n0 2 1\r\n1 3 5\r\n1 2 7\r\n2 3 10\r\n10 5 4\r\n3 5 10\r\n2 4 9\r\n0 2 5\r\n2 5 8\r\n0 0 0Sample Output19\r\n34",
  "sample_input": "10 3 4\r\n0 2 1\r\n1 3 5\r\n1 2 7\r\n2 3 10\r\n10 5 4\r\n3 5 10\r\n2 4 9\r\n0 2 5\r\n2 5 8\r\n0 0 0",
  "sample_output": "19\r\n34",
  "link": "https://www.spoj.com/problems/TRANSJ",
  "scraped_at": "2025-08-17 00:34:22",
  "test_cases": [
    {
      "input": "10 3 4\r\n0 2 1\r\n1 3 5\r\n1 2 7\r\n2 3 10\r\n10 5 4\r\n3 5 10\r\n2 4 9\r\n0 2 5\r\n2 5 8\r\n0 0 0",
      "expected_output": "19\r\n34",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "9 6 1\n4 9 4\n9 3 8\n4 9 3\n4 7 10\n2 9 6\n3 2 10\n10 9 6\n6 3 1\n9 6 3\n9 8 4",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "9 4 8\n3 7 7\n7 4 10\n4 5 3\n6 1 6\n7 7 10\n8 10 9\n8 4 3\n9 1 9\n9 3 2\n6 9 10",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "1 8 9\n2 6 5\n1 3 6\n8 1 9\n6 7 9\n6 8 3\n3 3 5\n1 9 6\n3 1 10\n3 2 4\n8 10 10",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "41 65 61\n58 88 84\n59 64 99\n82 10 98\n92 85 75\n91 60 100\n27 54 66\n17 41 6\n21 94 85\n19 67 80\n99 59 57",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "16 84 30\n71 66 55\n57 33 76\n57 60 48\n18 88 6\n98 62 99\n90 10 96\n78 22 94\n25 97 47\n82 42 57\n91 27 83",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "81 67 5\n54 10 32\n93 55 22\n39 48 6\n82 72 97\n31 13 58\n100 37 17\n26 35 73\n29 77 35\n72 65 89\n36 72 67",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "13 31 93\n67 88 90\n58 28 49\n89 22 27\n86 85 31\n85 35 70\n51 69 4\n50 35 70\n58 11 44\n25 70 100\n91 12 76",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "68 15 7\n71 37 83\n9 51 66\n27 74 7\n31 52 37\n3 19 33\n93 24 4\n71 25 68\n71 83 30\n42 57 100\n46 59 93",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "325 430 479\n280 348 169\n122 275 274\n258 256 97\n140 449 139\n114 370 188\n479 160 70\n452 195 282\n389 200 223\n480 243 373\n260 265 335",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "78 418 55\n381 107 435\n216 137 82\n128 310 331\n439 199 209\n238 100 192\n296 449 461\n149 57 77\n75 221 304\n196 50 142\n123 493 329",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "385 189 409\n208 55 75\n365 384 351\n286 65 476\n282 162 59\n79 143 294\n182 340 337\n233 167 395\n435 179 414\n214 201 99\n388 390 51",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "140 146 179\n329 352 148\n81 249 256\n495 109 436\n179 433 242\n378 127 388\n215 244 75\n313 491 235\n365 70 138\n413 494 448\n184 332 435",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "211 139 259\n105 80 406\n67 159 135\n418 446 320\n344 273 290\n461 77 301\n131 495 285\n300 202 74\n256 459 470\n318 285 103\n193 60 282",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "252 441 257\n177 313 443\n416 302 429\n321 88 220\n393 169 80\n386 95 88\n146 272 462\n499 245 189\n284 381 255\n51 75 230\n271 300 407",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "206 288 294\n138 360 458\n455 368 115\n61 278 409\n327 443 208\n178 422 272\n363 336 398\n369 198 131\n206 422 76\n383 183 398\n244 441 465",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1\n999 1 1000\n1 2 1000\n2 1000 1000\n1 2 1\n1000 1 1\n1 2 2\n999 2 999\n1000 999 2\n999 2 1000\n1 2 1000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 2 999\n1 999 999\n1 1 2\n1000 999 1000\n1000 2 2\n1000 1 999\n2 1 2\n2 1 999\n1000 2 1000\n1000 999 1\n1 2 1000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:24",
  "total_test_cases": 20
}
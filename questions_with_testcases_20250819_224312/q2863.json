{
  "problem_code": "problems",
  "title": "Ada and Path",
  "tags": [],
  "text": "Ada the Ladybug loves Crosswords, Sudoku's and all other similar games. She has found an interesting game in the latest issue of Magazine Bug.The game is simple - you will be given a square full of numbers. Each number must be part of exactly one path. Path must begin at number1and can only continue to neighboring number (left, right, up, down), which is larger by 1.Ada's friend is working as a director of Magazine Bug. He wants to surprise her and add few more games to following issues of the magazine. Anyway, he wants you to check, whether the games are valid (i.e. if all the numbers can be part of a path).InputThe first line will containT, the number of test-cases.ThenTtest-cases follow, each beginning with an integer1     ≤ N ≤ 100, the size of the game board.Afterward,Nlines follow withNintegers1 ≤     Aij< 10OutputFor each test-case print either \"YES\" if board is valid or \"NO\" if it isn't.Example Input4\r\n4\r\n1 2 3 4\r\n4 3 2 1\r\n1 2 2 1\r\n1 1 1 2\r\n3\r\n1 2 3\r\n4 5 6\r\n1 2 1\r\n2\r\n1 2\r\n4 3\r\n2\r\n1 2\r\n2 2Example OutputYES\r\nNO\r\nYES\r\nNO",
  "sample_input": "4\r\n4\r\n1 2 3 4\r\n4 3 2 1\r\n1 2 2 1\r\n1 1 1 2\r\n3\r\n1 2 3\r\n4 5 6\r\n1 2 1\r\n2\r\n1 2\r\n4 3\r\n2\r\n1 2\r\n2 2",
  "sample_output": "YES\r\nNO\r\nYES\r\nNO",
  "link": "https://www.spoj.com/problems/ADAPATH",
  "scraped_at": "2025-08-17 00:34:11",
  "test_cases": [
    {
      "input": "4\r\n4\r\n1 2 3 4\r\n4 3 2 1\r\n1 2 2 1\r\n1 1 1 2\r\n3\r\n1 2 3\r\n4 5 6\r\n1 2 1\r\n2\r\n1 2\r\n4 3\r\n2\r\n1 2\r\n2 2",
      "expected_output": "YES\r\nNO\r\nYES\r\nNO",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1\n4",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "4\n9\n10\n8\n5",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "3\n7\n10\n10",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "10\n35962919\n97344690\n20398081\n99639278\n85128019\n1000065\n73130589\n82605496\n67458979\n85875525",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "17\n44342314\n18261783\n12008311\n73156031\n96865864\n48022001\n36271182\n4926003\n75257437\n29524662\n62251190\n4518389\n61216147\n69755166\n2843000\n58044386\n90911308",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "20\n1233929\n3753985\n98977904\n79214209\n70228670\n27156219\n76935116\n76810640\n33074806\n9741736\n79095709\n86147250\n93041721\n94605630\n75663083\n17775236\n94967968\n79892232\n76949525\n12921676",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "8\n74448132\n98197938\n93952065\n57530853\n61466215\n52976851\n29034142\n14529677",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "11\n10304058\n39800459\n52087391\n83807871\n51870432\n92557376\n1842674\n36436403\n59414587\n1766586\n14230688",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "85\n66388\n92693\n43578\n40461\n17472\n37195\n96464\n32192\n71248\n34748\n76995\n53984\n98601\n72735\n49967\n26613\n32608\n38662\n85230\n58670\n23764\n11776\n57912\n6151\n70351\n74112\n10618\n20347\n36174\n60258\n75827\n7441\n19031\n65617\n17839\n13212\n8291\n90888\n70833\n98026\n9564\n35116\n80665\n73720\n43534\n96693\n80184\n80504\n39663\n93166\n49555\n92712\n27615\n46830\n26177\n94999\n96318\n88048\n81233\n29546\n99079\n39572\n91973\n96159\n99954\n7714\n65933\n6596\n90168\n18125\n82831\n36421\n26639\n73531\n22873\n46633\n38301\n2221\n62404\n12094\n38299\n7659\n46100\n64389\n42490",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "28\n96601\n59924\n97235\n62499\n50467\n89232\n45418\n31980\n67247\n5029\n11525\n15563\n81549\n98374\n81306\n28682\n60186\n81020\n46914\n29045\n67682\n86089\n12773\n38213\n52876\n50624\n30288\n5029",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "67\n75448\n88832\n58062\n51575\n78523\n3703\n50707\n59024\n87904\n90187\n52354\n54742\n4372\n74596\n86832\n477\n7744\n36710\n3267\n417\n87959\n77841\n41843\n75734\n61915\n17280\n90675\n51728\n57307\n33390\n73348\n9990\n73118\n2961\n72685\n19721\n20269\n85841\n9678\n68197\n11866\n17256\n45706\n81669\n90091\n96564\n13657\n79636\n33700\n31107\n29715\n81858\n76677\n46940\n69946\n47604\n37774\n9585\n41315\n47770\n90130\n18808\n86419\n79067\n51195\n82011\n4345",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "70\n36520\n82515\n33064\n84538\n52730\n44225\n20362\n23310\n61517\n80159\n94317\n96817\n2343\n87155\n49657\n73237\n78566\n78588\n74272\n23678\n76967\n64497\n86713\n21352\n2037\n20575\n25030\n34244\n7332\n85018\n43379\n46864\n61334\n75290\n12777\n26947\n75162\n33746\n41236\n25541\n29231\n74588\n60384\n47324\n94483\n89378\n57929\n98449\n38268\n49020\n20089\n29240\n67361\n26703\n8160\n55991\n5355\n66144\n10662\n24592\n96786\n42926\n37965\n61659\n37233\n76823\n97622\n62552\n5772\n43869",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "57\n97166\n91902\n66704\n95332\n60733\n68008\n86074\n80967\n77030\n71894\n88184\n91022\n82326\n76340\n26241\n13615\n12567\n25463\n40468\n25687\n11683\n72805\n49563\n92347\n31358\n11267\n25968\n2428\n31553\n16274\n34391\n51197\n28714\n74918\n3288\n38202\n90933\n89800\n94285\n71934\n52895\n73813\n88497\n74646\n13001\n44138\n7831\n76391\n2337\n24282\n14951\n8373\n30827\n76639\n48739\n60455\n55571",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "41\n69293\n22550\n38161\n19431\n24069\n98883\n18747\n47041\n93014\n9753\n41095\n64960\n80956\n67514\n72967\n59712\n14135\n35336\n91314\n6634\n16640\n83196\n64267\n8181\n59458\n49095\n28599\n62707\n24174\n34757\n37967\n29512\n82684\n75700\n65489\n38489\n48633\n66380\n60613\n80462\n90418",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "40\n98873\n59884\n19133\n38456\n6560\n97649\n8014\n26210\n37505\n32142\n455\n18468\n28469\n60191\n85855\n63858\n94826\n69622\n35122\n46756\n65797\n59323\n50079\n27382\n22979\n64794\n59451\n58128\n85683\n33350\n73757\n30726\n61164\n56244\n27007\n88204\n76351\n93100\n9218\n15945",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "100\n61186140\n32946928\n5146677\n53308406\n549045\n28648220\n78389533\n7093984\n78938447\n88344776\n14977856\n14735822\n56872558\n55585116\n63412819\n81769369\n42026871\n21100102\n60316614\n63103986\n56336\n40704690\n37954981\n1248590\n12373991\n66319987\n85401001\n9953082\n70750586\n30053166\n38175818\n97727448\n40074604\n73512241\n10240428\n70245316\n70715828\n8277037\n50239555\n67581590\n69810719\n91124806\n17020759\n19482062\n55631107\n29508741\n72087410\n61602649\n25756441\n64595833\n70854028\n97819785\n64358576\n36498216\n10686099\n66738239\n5914419\n28170190\n46364533\n41140769\n38626022\n72537715\n24462128\n4248882\n75488932\n61488500\n79296161\n16572193\n2064415\n77164962\n81938118\n20860720\n6045333\n73764874\n39561227\n34814572\n8078784\n75951265\n89732428\n55177755\n39786552\n42149369\n32634449\n50611894\n47337066\n21592323\n65850314\n91945778\n32412057\n52743098\n9155627\n17487102\n21866903\n74873084\n62249846\n27523850\n97343385\n73814175\n64458318\n87849807",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "100\n57611611\n54749593\n62868446\n62611650\n34583944\n31962199\n79879915\n30312987\n47525276\n6492402\n41125723\n73216148\n14446135\n25333481\n13543027\n15172346\n35040978\n26287530\n14533268\n4406798\n75051504\n56445272\n11730289\n41124198\n27098478\n79820145\n61884032\n69701016\n28165187\n26624161\n15665821\n78723590\n8833169\n7677048\n21934447\n18832622\n92347231\n72167482\n24987525\n75135413\n89260548\n27535453\n66014448\n38952270\n84797358\n4595051\n82082427\n5429455\n24248172\n74157150\n46429895\n44515632\n31373731\n78809524\n15314907\n50544910\n9349509\n89473905\n29833803\n12146058\n31825000\n94649222\n35067254\n99693674\n84285354\n77796100\n86898652\n83521842\n33239425\n95565579\n36991005\n34880152\n70573851\n9511651\n27420611\n92690996\n79647117\n48481020\n71486360\n71134760\n10945847\n77342547\n18150789\n80415050\n89352100\n98418126\n95634305\n24134772\n9752464\n31656516\n17801625\n90332439\n81486607\n60128908\n84181353\n38203400\n74535677\n39996305\n74488249\n735840",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "1\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 1)"
    },
    {
      "input": "1\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 1)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:21",
  "total_test_cases": 20
}
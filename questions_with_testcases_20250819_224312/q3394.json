{
  "problem_code": "problems",
  "title": "Fold",
  "tags": [],
  "text": "Read the statement of problem E: Edge to understand how to fold a sheet of paper and how to interpret the input.\r\nWe define a \"stripe\" to be a maximally large part of the sheet that has no folding line going through.\r\nSince the turns occur at equidistant places, all stripes are congruent.In this problem you are given the description of the result of performing several folding steps as in problem E: Edge, i.e., in the unfolded state.\r\nAdditionally, you know that the length of the sheet in its folded state is exactly the length of 1 stripe (again, we ignore thickness).Find the minimum number of folding steps necessary to generate the described sheet from an initially flat sheet of paper.\r\nNote that performing a folding step may create more than one turn in the result because parts of the sheet already overlay due to previous folding steps.\r\nWhen a step is carried out, however, all overlaying parts of the sheet are affected, i.e., it is not allowed to fold, say, only the top three layers.Finally, note that every result can be obtained by iterating through the turns in a fixed direction and performing a folding step at each turn, thereby accumulating a 1 stripe long stack of all stripes.\r\nIfnis the number of turns in the input description, this procedure in fact requiresnfolding steps, which is not necessarily minimal as can be observed in the sample output.Input SpecificationThe input contains several test cases, each on a separate line.\r\nEach line contains a nonempty string of charactersAandVdescribing the longer edge of the sheet.\r\nYou may assume that the length of the string is less than 200.\r\nThe input file terminates immediately after the last test case.Output SpecificationFor each test case print on a line the minimum number of folding steps required to produce the described sheet of paper.Sample InputV\r\nAVV\r\nAAVAAVVVAAVSample Output1\r\n2\r\n4",
  "sample_input": "V\r\nAVV\r\nAAVAAVVVAAV",
  "sample_output": "1\r\n2\r\n4",
  "link": "https://www.spoj.com/problems/FOLD",
  "scraped_at": "2025-08-17 00:34:18",
  "test_cases": [
    {
      "input": "V\r\nAVV\r\nAAVAAVVVAAV",
      "expected_output": "1\r\n2\r\n4",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "p\nqeomo\nwnxqhc",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "ek\nak\nueciyl",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "y\ndxnvyw\nzlcznkhtjvhkwpicjq",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "un\ngaevo\ndezeiiug",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "dj\nzaq\ngmxkyyao",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "md\nn\nsbbtpddmpxyi",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "t\nnw\nmrwiuyordp",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "ec\nme\nfymgpplwpbzkdqsww",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "i\nzml\ntcqyx",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "a\nxjbyr\nffouminhfrijrjpjjgmf",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "z\nwxkx\nw",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "st\nyuog\njykxkbwroepy",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "hu\nxqxwgc\noz",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "lf\nuxci\nnd",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "z\nalx\nifo",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "mw\nabqfd\nbt",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "hs\nul\nhvetghppucdsz",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "gt\nx\nhjmwymg",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "cn\nbdecqr\nwbtqvwkjxqxyub",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:23",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Anils Proposal",
  "tags": [],
  "text": "Anil is the best coder in his class. He is in love with his classmate Gowthami. One day he proposes her. She wants him to prove that his love is actually true. So, she poses the following problem:There is an array of sizen. Initially all the elements are zero. Now there will be two types of operations:Update the array.Query the array.In case of update, you will be given a range [l,r]. To the kth element in this range (l and r inclusive), you need toadd kth Fibonacci number.In case of query, you will be given a range [l,r], for which you need to find the sum of all elements in the range (including l and r).Anil hopes you can help him in this regard.InputThe first line containsn (1 ≤ n ≤ 106)andq (1 ≤ q ≤ 5×104), the number of operations to be performed. The nextqlines contain 3 space separated integers. If the first integer is0, then it's an update operation. If it is1, then it's a query operation. The next two integers specifylandr.(1 ≤ l ≤ r ≤ n)OutputFor each query print one integer per line specifying the sum in the corresponding range. Since the sum can be very large, outputAnswer modulo 109+ 7.ExampleInput:5 6\r\n0 1 5\r\n0 2 4\r\n0 1 3\r\n1 2 4\r\n1 1 5\r\n1 4 5Output:13\r\n20\r\n10ExplanationAfter the first update the array looks as follows: 1 1 2 3 5After 2nd update: 1 2 3 5 5After 3rd update: 2 3 5 5 5Hence from the above array, we have the outputs for the queries.Note: Fibonacci Series starts as 1, 1, 2, 3, ...",
  "sample_input": "Input:5 6\r\n0 1 5\r\n0 2 4\r\n0 1 3\r\n1 2 4\r\n1 1 5\r\n1 4 5Output:13\r\n20\r\n10",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/ANIL_PRO",
  "scraped_at": "2025-08-17 00:33:42",
  "test_cases": [
    {
      "input": "5 6\r\n0 1 5\r\n0 2 4\r\n0 1 3\r\n1 2 4\r\n1 1 5\r\n1 4 5",
      "expected_output": "13\r\n20\r\n10",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2 2\n5 4 4\n7 10 1\n7 9 4\n8 2 5\n6 1 1\n7 3 4",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "2 8\n1 2 3\n7 1 4\n9 6 2\n1 2 3\n5 4 6\n9 6 8",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "10 9\n9 7 6\n5 5 2\n1 8 10\n3 3 2\n4 7 5\n2 7 7",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "80 9\n14 70 63\n65 39 84\n39 35 47\n32 93 68\n19 71 88\n75 57 45",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "3 63\n65 58 92\n57 20 10\n85 85 88\n56 94 58\n76 10 41\n67 15 30",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "64 41\n89 80 21\n3 90 56\n43 97 42\n60 59 74\n1 94 79\n43 36 6",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "98 99\n53 12 98\n22 16 97\n70 44 6\n8 30 30\n43 42 74\n40 94 88",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "72 20\n23 46 24\n21 95 76\n35 51 1\n35 39 63\n94 58 77\n45 75 20",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "25 52\n46 45 10\n34 39 6\n50 6 47\n20 14 26\n39 53 39\n25 26 8",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "52 42\n16 51 46\n47 37 37\n7 10 9\n36 43 6\n18 39 11\n25 28 39",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "17 33\n29 42 31\n36 23 13\n23 5 15\n52 8 24\n41 39 51\n33 47 12",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "22 40\n10 27 11\n49 27 47\n37 34 25\n30 9 22\n42 53 44\n6 39 16",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "28 41\n24 18 18\n37 31 31\n53 34 11\n23 34 22\n20 53 7\n32 23 49",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "50 9\n20 48 36\n25 6 40\n39 7 36\n39 24 20\n32 34 7\n43 53 40",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "41 41\n18 19 12\n12 38 38\n13 26 27\n9 22 31\n14 48 53\n50 53 29",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "106 106\n106 106 106\n106 106 106\n106 106 106\n106 106 106\n106 106 106\n106 106 106",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "106 106\n106 106 106\n106 106 106\n106 106 106\n106 106 106\n106 106 106\n106 106 106",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "105 105\n105 106 1\n105 1 2\n106 1 1\n106 1 2\n1 2 106\n2 106 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "105 2\n1 106 2\n1 2 2\n1 105 2\n2 106 1\n105 1 105\n106 2 105",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:16",
  "total_test_cases": 20
}
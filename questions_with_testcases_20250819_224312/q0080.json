{
  "problem_code": "problems",
  "title": "Tic",
  "tags": [],
  "text": "Tic Tac Toe is a child's game played on a 3 by 3 grid. One player, X, starts by placing an X at an unoccupied grid position. Then the other player, O, places an O at an unoccupied grid position. Play alternates between X and O until the grid is filled or one player's symbols occupy an entire line (vertical, horizontal, or diagonal) in the grid.We will denote the initial empty Tic Tac Toe grid with nine dots. Whenever X or O plays we fill in an X or an O in the appropriate position. The example below illustrates each grid configuration from the beginning to the end of a game in which X wins.1      2      3      4      5      6      7      8\r\n      ...    X..    X.O    X.O    X.O    X.O    X.O    X.O\r\n      ...    ...    ...    ...    .O.    .O.    OO.    OO.\r\n      ...    ...    ...    ..X    ..X    X.X    X.X    XXXYour job is to read a grid and to determine whether or not it could possibly be part of a valid Tic Tac Toe game. That is, is there a series of plays that can yield this grid somewhere between the start and end of the game?InputThe first line of input contains N, the number of test cases. 4N-1 lines follow, specifying N grid configurations separated by empty lines.OutputFor each case print \"yes\" or \"no\" on a line by itself, indicating whether or not the configuration could be part of a Tic Tac Toe game.ExampleInput:2\r\nX.O\r\nOO.\r\nXXX\r\n\r\nO.X\r\nXX.\r\nOOOOutput:yes\r\nno",
  "sample_input": "1      2      3      4      5      6      7      8\r\n      ...    X..    X.O    X.O    X.O    X.O    X.O    X.O\r\n      ...    ...    ...    ...    .O.    .O.    OO.    OO.\r\n      ...    ...    ...    ..X    ..X    X.X    X.X    XXX",
  "sample_output": "Input:2\r\nX.O\r\nOO.\r\nXXX\r\n\r\nO.X\r\nXX.\r\nOOOOutput:yes\r\nno",
  "link": "https://www.spoj.com/problems/TOE1",
  "scraped_at": "2025-08-17 00:33:21",
  "test_cases": [
    {
      "input": "1      2      3      4      5      6      7      8\r\n      ...    X..    X.O    X.O    X.O    X.O    X.O    X.O\r\n      ...    ...    ...    ...    .O.    .O.    OO.    OO.\r\n      ...    ...    ...    ..X    ..X    X.X    X.X    XXX",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2\r\nX.O\r\nOO.\r\nXXX\r\n\r\nO.X\r\nXX.\r\nOOO",
      "expected_output": "yes\r\nno",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "7 6 6 3 9 6 8 2\nlol jzy m agon bi vuqtj hebu mvnrm\nyrjab ti jn egfkk racsv nbha zyo gqyn\ng eo mn fav muw vnkm fjfe a",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "4 7 4 8 3 8 5 4\npmwl jmyr t gyzk iw xwes pq jhey\ntwi f i f shzk nzdmw yzbxr jbtd\nls uyk k pvej xgu th e xk",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "8 8 9 5 5 3 1 10\nu ztr wzkxr qy ditjn nq fyg d\nv u xod ztvjv lvs et djjm jldl\nrr ysicj ted ps w pc xit vjwe",
      "expected_output": "To be computed",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "33 34 21 10 63 52 71 71\neddux ztm ymq xv k e evtp gb\nnkyq qwa qqcu o yoaib wqdsk b f\nk hy wt xo qtp qo wk xbi",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "86 48 76 23 66 70 61 52\nxjm xqvjj osgsc gk gm xepbs zn p\niwh t n uo gf y jd ndsgc\nhk xt bi tx g dht xaliq ealao",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "61 12 16 35 18 81 41 22\nqz xq tkge cqnj ri fpmf jc ud\nrp qzayn mdm uaye thnu m jn ejx\nzdl nccte v hopi v vi lx d",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "36 55 54 21 97 50 5 54\nqil flzic v cn aew u fbl qlsmr\nupkhb tgnc vfh cgo xeauu po zvik w\nap z ot hvq xco tn a qectt",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "28 83 11 45 4 2 24 93\noysc kpg pk k zjyls z sb xnohu\niqewv gbu sklj oxsgt mopzy pnw qcapf dyf\nv eb tuurr qqkd ved ta kb pa",
      "expected_output": "To be computed",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "221 156 366 180 351 414 258 52\nm j ubshp cwle b rcno dfg rik\nrvnvc nco hven dsdla wm ure k jhbyo\na w fpsi xol ccoi mqk jozx phzy",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "412 393 378 385 227 217 58 455\nno xoj dab ivgx f vfqck sqwi hov\narztx ree b jp xle cgzlf ajlz i\nrkc e laq zym yf ragi hkl fk",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "219 281 215 318 105 262 149 189\njqfj ak wkbu ytpn lygr iqp p iy\nxs qkkh s k nt zm jyrzl nn\nmf zrwnp dadud e trgsl xbo iesv kql",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "96 326 84 59 366 324 209 390\nq wxekj ziq gtjft jvj dlkql v dcgm\nwgxc ffz ed up fnzjh gfbig brkz tvu\nyczy ycqv bkzg erv fh uj kl fmgi",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "322 241 300 226 359 106 285 361\nlpt drz aq iev kk px f gv\npv fpdrm dswbk pipne z evy dnn z\nbawi f l kbl ws muuz q wjbp",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "395 74 148 462 214 419 250 390\nejgyb ykv yc mkk ju oz hkkz eizo\nug c guoo bti o z p vuw\nstl eexy q cdfnw irzb lo irb vwuao",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "419 86 123 59 390 349 92 92\ngfpjm xjmln q fqfa gphm fqffd tx wg\nclxa a nghd qphc upe f tk pzagk\ng nbska ootab zf spabd e lu p",
      "expected_output": "To be computed",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000\nrxax uid ntfmp wzjed gwwh edyah sul zo\nfunrm ixfhv lph ee ru lsyks fe oy\ni ii czokg ggehh e w relq bat",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000\nobr m gd fiega xkj af whox rfiux\nlhpod cmva z an djucw ibjo od bhus\nwyw wuwg b mi jnp xahz unt agq",
      "expected_output": "To be computed",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1 2 1 1000 2 1 1000\njuku auxc lna kyaf hu ri klcf i\nrhhv bkeyw jld qbu ep q uvthh jszd\nqakn uztd gbibw jopjj xdkhz ij hvwq xubh",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:12",
  "total_test_cases": 20
}
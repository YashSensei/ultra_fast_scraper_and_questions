{
  "problem_code": "problems",
  "title": "Dinostratus Numbers",
  "tags": [],
  "text": "Recent archaeological discoveries of researchers from the University of Alberta in Canada showed that a strange sequence of numbers were found on the walls of the pyramids of Egypt, the ruins of Macchu Picchu and the stones of Stonehenge. Intrigued by the apparent coincidence researchers triggered the Department of Mathematics to decipher what were special about that sequence or numbers.The discovery was startling. All numbers were generated by matrices of Dinostratus. Dinostratus was a famous Greek mathematician who lived from 390 to 320 BC and worked in major geometry problems like squaring the circle. Dinostratus studied matrices M of size 3×3 formed by nine distinct integers with the property that for every position (i, j), i = 1...3, j = 1...3 of matrix, the element mi, jis a multiple of its neighbors mi-1, j, mi-1, j-1and mi, j-1(if they exist). In his honor, we say that n is aDinostratus numberif exist a matrix M with the property above such that m3, 3= n.See an example with n = 36.1  2  4\r\n3  6 12\r\n9 18 36The relationship between the Dinostratus numbers, the pyramids of Egypt, Stonehenge and the stones of the ruins of Machu Picchu still remains a great mystery. But researchers in Alberta are willing to study these magic numbers. Your task is to make a program that receives an integer n and checks whether this is a Dinostratus number.InputThe input consists of several instances. Each instance is given by a line containing an integer n (1 ≤ n ≤ 1048576). The input ends with end of file.OutputFor each instance, you must print an identifier Instance k, where k is the number of the current instance. On the next line printyesif n is a Dinostratus number otherwise printno.ExampleInput:36\r\n37\r\n38Output:Instance 1\r\nyes\r\nInstance 2\r\nno\r\nInstance 3\r\nno",
  "sample_input": "1  2  4\r\n3  6 12\r\n9 18 36",
  "sample_output": "Input:36\r\n37\r\n38Output:Instance 1\r\nyes\r\nInstance 2\r\nno\r\nInstance 3\r\nno",
  "link": "https://www.spoj.com/problems/DINONUM",
  "scraped_at": "2025-08-17 00:33:14",
  "test_cases": [
    {
      "input": "1  2  4\r\n3  6 12\r\n9 18 36",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "36\r\n37\r\n38",
      "expected_output": "Instance 1\r\nyes\r\nInstance 2\r\nno\r\nInstance 3\r\nno",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "3 1 3\n2 4 8\n4 8 9",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "10 6 1\n7 8 8\n7 9 10",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "8 8 4\n10 1 6\n1 10 5",
      "expected_output": "To be computed",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "26 33 56\n33 57 1\n69 40 85",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "90 27 92\n45 98 82\n66 72 19",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "37 19 90\n31 34 59\n51 19 51",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "83 81 39\n69 75 19\n100 58 1",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "98 1 71\n57 31 28\n8 14 86",
      "expected_output": "To be computed",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "300430 340322 78793\n148094 128590 167186\n408459 360873 208934",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "359320 308638 382533\n202979 319131 475303\n192732 186011 269591",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "166302 367044 443830\n479248 277642 352911\n487072 128903 367056",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "412108 383419 419054\n201170 97735 237493\n135385 391718 427079",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "428348 398900 294929\n482940 170950 451560\n51056 434528 313295",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "379648 139000 392629\n183413 204950 372254\n147476 402186 115780",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "131438 140713 99897\n405154 389026 72421\n151527 375497 319301",
      "expected_output": "To be computed",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "1000000 1000000 1000000\n1000000 1000000 1000000\n1000000 1000000 1000000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000000 1000000 1000000\n1000000 1000000 1000000\n1000000 1000000 1000000",
      "expected_output": "To be computed",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "1000000 1000000 2\n1000000 1000000 999999\n1 2 999999",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:15",
  "total_test_cases": 20
}
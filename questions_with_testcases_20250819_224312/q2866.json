{
  "problem_code": "problems",
  "title": "Correlations",
  "tags": [],
  "text": "Finishing your studies in a university is not only a matter of studying and learning. To obtain that prized degree, each student has to prove that he has learned, and in order to do that he needs to passNsubjects. However, it is often also necessary to abide by uncountable and deliberately complicated regulatory labyrinths.At theInstitute With Few Correlations(IWFC) there are antiquated norms which forbid students from passing some subjects without having first passed certain other subjects. The latter are called \"correlation\" subjects for the first ones. Each subject may have one or more correlation subjects, but there are no cyclic correlations, so that it is always possible to obtain the desired degree.Gabina is a student of Happiness Sciences, and fortunately her professors are very understanding people. They therefore allow her to pass her subjects without actually having passed their correlation subjects before. The problem with this is that IWFC's electronic system can only register a subject as being passed abiding by the correlation rules. Thus, a subject will be registered in the system if and only if it was passed and all its correlation subjects are also already registered.Seeing her progress keeps Gabina motivated, and helps her to push forward with her studies. For this reason, each time she passes a subject she checks the electronic system to see how many subjects have been registered in it. Sometimes she sees the number has not changed, which happens whenever the subject she just passed didn't have all its correlation subjects registered in the system. In other cases, she receives the delightful news that the number of registered subjects has increased. Moreover, it may happen that this increase was in more than one, which happens whenever the subject she just passed could be registered, and doing so unlocked the registration of a series of subjects passed beforehand.Gabina has already planned the order in which she will pass all the subjects for her degree. She would now like to know the number of subjects which will be registered in the electronic system after she passes each one of them. Your task is to write a program to help Gabina predict this, so that she can joyfully finish her Happiness Sciences studies.InputThere are multiple test cases in the input file. The first line contains two integer numbersNandM, representing the number of subjects in her degree and the number of correlation relations between pairs of subjects, respectively (1≤N,M ≤ 5 × 104). The subjects are numbered from1toN. Each of the followingMlines contains two integer numbersAandB, indicating that subjectAis a correlation subject for subjectB(1≤A, B≤NwithA ≠ B). This means that subjectAmust be registered in the electronic system before subjectBcan be registered. There are no repeated or cyclic correlation relations in the input. The last line containsNinteger numbersP1, P2, ..., PN, representing the subjects in the order Gabina will pass them (1≤Pi≤Nfori = 1, ..., N, withPi≠ Pjfori ≠ j).OutputFor each test case, printNlines, each with a single integer number. The number printed in thei-th line represents the number of subjects registered in the electronic system immediately after Gabina passes thei-th subject for her degree in the order giver in the input.ExampleInput:3 2\r\n1 2\r\n2 3\r\n1 2 3\r\n3 2\r\n1 2\r\n2 3\r\n3 2 1\r\n4 4\r\n1 2\r\n2 3\r\n4 3\r\n1 4\r\n2 3 1 4Output:1\r\n2\r\n3\r\n0\r\n0\r\n3\r\n0\r\n0\r\n2\r\n4",
  "sample_input": "Input:3 2\r\n1 2\r\n2 3\r\n1 2 3\r\n3 2\r\n1 2\r\n2 3\r\n3 2 1\r\n4 4\r\n1 2\r\n2 3\r\n4 3\r\n1 4\r\n2 3 1 4Output:1\r\n2\r\n3\r\n0\r\n0\r\n3\r\n0\r\n0\r\n2\r\n4",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/TAP2016C",
  "scraped_at": "2025-08-17 00:34:17",
  "test_cases": [
    {
      "input": "3 2\r\n1 2\r\n2 3\r\n1 2 3\r\n3 2\r\n1 2\r\n2 3\r\n3 2 1\r\n4 4\r\n1 2\r\n2 3\r\n4 3\r\n1 4\r\n2 3 1 4",
      "expected_output": "1\r\n2\r\n3\r\n0\r\n0\r\n3\r\n0\r\n0\r\n2\r\n4",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "7 1\n10 2\n2 1\n10 9 4\n8 10\n10 2\n5 9\n6 8 7\n10 5\n3 4\n8 8\n1 6\n2 7\n3 1 4 10",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "6 3\n6 3\n7 5\n9 6 5\n7 7\n5 10\n5 3\n9 3 8\n3 8\n1 2\n1 3\n10 10\n8 7\n6 4 8 1",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "7 4\n10 1\n4 7\n8 4 7\n1 8\n2 8\n8 10\n10 9 2\n6 1\n6 10\n3 10\n2 9\n9 8\n2 6 5 8",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "59 77\n92 54\n13 67\n64 70 6\n34 76\n99 91\n54 58\n1 6 99\n49 19\n83 85\n67 44\n57 68\n58 47\n58 13 67 51",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "77 90\n4 55\n33 3\n28 88 48\n40 28\n78 68\n79 42\n95 79 23\n89 75\n94 98\n93 14\n1 16\n47 86\n86 38 49 24",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "99 65\n25 62\n19 92\n22 32 77\n41 19\n47 56\n78 12\n92 47 1\n95 11\n54 1\n94 49\n82 96\n66 72\n24 17 41 7",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "5 69\n47 14\n15 77\n19 96 23\n58 39\n52 49\n64 28\n90 45 33\n92 53\n96 72\n23 46\n50 49\n7 10\n26 4 22 63",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "84 89\n15 55\n24 43\n91 69 84\n93 76\n97 82\n34 58\n59 4 80\n85 30\n88 15\n82 2\n58 3\n99 36\n88 97 9 36",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "439 397\n300 226\n255 206\n451 367 142\n399 413\n403 447\n58 404\n129 57 309\n186 342\n381 66\n80 171\n75 319\n131 118\n298 283 279 111",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "101 406\n355 90\n171 345\n251 176 338\n384 235\n491 91\n132 113\n222 57 345\n75 357\n450 328\n461 182\n89 71\n98 216\n168 392 169 267",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "358 333\n190 355\n446 152\n56 398 384\n279 171\n397 313\n398 446\n386 74 496\n62 353\n377 152\n483 417\n329 248\n237 197\n164 228 51 263",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "366 402\n118 86\n119 219\n427 378 74\n483 288\n194 426\n347 345\n323 349 263\n180 444\n105 399\n411 103\n64 234\n399 277\n186 188 183 269",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "303 173\n177 426\n149 90\n452 117 221\n78 368\n145 175\n297 153\n347 278 303\n260 478\n157 352\n166 480\n366 56\n96 300\n215 77 259 426",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "149 342\n336 390\n219 338\n113 388 262\n379 407\n129 388\n261 444\n396 356 197\n124 97\n241 255\n96 460\n356 436\n330 179\n421 469 450 302",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "315 406\n183 284\n260 488\n329 468 301\n429 122\n356 485\n384 326\n159 423 259\n180 381\n251 265\n219 77\n429 196\n397 479\n211 404 355 140",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000\n1000 1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000\n1000 1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 999\n999 1\n1000 2\n2 999 2\n2 1000\n1 1000\n1 1\n1000 999 1000\n999 1\n2 1000\n1 1000\n2 2\n1 1\n2 2 1 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1000 999\n999 1000\n1 1000\n1000 2 1000\n1000 1000\n2 1000\n999 2\n1 2 2\n2 2\n1000 1000\n999 2\n1 1\n1000 2\n999 999 2 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:21",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Catch Sheep",
  "tags": [],
  "text": "XiYangYang is a kind of lovely and rare sheep. They live in a peaceful land which can be described as a tree with N cities (nodes).Now you have K robots. They will start at a same point and travel each edge at least once so that all XiYangYang will be caught. All your robots can stop at any city in the land. Because of expensive oil, you want minimize the total distance that your robots walk.InputFirst line : N K (N ≤ 15000, K ≤ 30)Next N-1 lines: a b c (city a and city b are connected with a road whose length is c (1 ≤ a, b ≤ N, 0 ≤ c ≤ 100)OutputN lines: The total distance that your robots walk if they all start at city i.ExampleInput:5 3\r\n1 2 7\r\n2 3 5\r\n3 4 14\r\n3 5 8Output:42\r\n39\r\n34\r\n42\r\n42Hint: my solution can get AC in 0.75~1 second.",
  "sample_input": "Input:5 3\r\n1 2 7\r\n2 3 5\r\n3 4 14\r\n3 5 8Output:42\r\n39\r\n34\r\n42\r\n42",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/XYYHHTT",
  "scraped_at": "2025-08-17 00:33:30",
  "test_cases": [
    {
      "input": "5 3\r\n1 2 7\r\n2 3 5\r\n3 4 14\r\n3 5 8",
      "expected_output": "42\r\n39\r\n34\r\n42\r\n42",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "10 4\n4 6 1\n9 4 1\n3 7 9\n2 5 6",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "3 2\n3 6 2\n8 9 3\n9 5 7\n1 10 10",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "1 6\n9 5 9\n5 3 10\n10 4 8\n3 3 6",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "8 79\n24 5 63\n55 27 9\n10 12 6\n77 82 2",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "24 73\n93 81 29\n73 13 41\n99 26 85\n33 41 38",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "87 44\n30 87 34\n14 80 33\n51 20 88\n68 7 11",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "96 28\n59 76 33\n16 48 74\n93 22 57\n95 21 19",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "28 10\n15 55 72\n36 14 100\n55 50 100\n28 37 88",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "7253 6538\n6631 761 5637\n1496 4015 6383\n4867 5708 7180\n4759 7065 941",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "3213 4452\n4786 5425 6284\n1439 1467 4311\n6779 7314 2497\n1150 2468 4313",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "4972 3691\n755 3933 6682\n3317 6668 7142\n3396 5690 5772\n6973 3606 6138",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "3294 3224\n4478 2655 1529\n4089 4003 2587\n3927 6580 6464\n977 7241 5791",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "5084 6381\n5824 1209 6087\n2705 1207 4772\n7137 1384 6362\n6203 5375 5290",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "4440 3445\n7377 7096 2445\n5776 5033 3162\n1902 2895 4937\n4023 6739 1463",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "6334 6562\n3198 6275 5724\n4115 5743 4968\n2653 1931 3145\n1946 6124 3190",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "15000 15000\n15000 15000 15000\n15000 15000 15000\n15000 15000 15000\n15000 15000 15000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "15000 15000\n15000 15000 15000\n15000 15000 15000\n15000 15000 15000\n15000 15000 15000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "15000 2\n14999 15000 14999\n1 2 15000\n15000 15000 14999\n14999 15000 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "14999 2\n1 1 1\n1 14999 14999\n15000 15000 2\n14999 1 14999",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:15",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "How to Handle the Fans",
  "tags": [],
  "text": "Trey Parker and Matt Stone, the creators of “South Park” are having some problems handling their fans. The number of fans is so huge that can’t even count them properly. So they hired “N” employees for counting the fans. All the “N” employees had their own separate offices and they were located in a straight line with positions numbered as 1, 2, 3 … up to N. Fans can come to the office of any employee at any time and tell them how they feel about the show and if they are lucky enough, they may get to meet Trey Parker and Matt Stone.All the employees keep on updating Trey and Matt about the number of fans currently in their offices, so at each moment, they will have a list of “N” positions and the number of fans in each of these positions. Trey and Matt suddenly start taking a walk from office at position “A” to position “B” to meet their fans, but before they start walking they want to know the sum of all the fans in the offices from position “A” to “B”. But counting them one by one is taking a lot of time, so now they hired you, an awesome software engineer to do this task. Your task is to find the sum of all the fans present in the offices between positions “A” to “B” (\"A\" and \"B\" inclusive). Let’s see if you could do it fast enough.InputThe first line of Input contains two integers “N” and “Q”. “N” is the number of employees hired by Trey and Matt. “Q” is the number of queries to be followed.Each of the next “Q” lines contain a query. A query can be of two types:“add P F” – this means that “F” number of fans came to the office at Position “P”“find A B” – this means that Trey and Matt wants to know the sum of fans present at offices at positions “A” to “B”OutputFor each query of the type “find A B”, output the sum of fans present at offices at positions “A” to “B” in a different line.Constraints1 <= N <= 10^61 <= Q <= 10^51 <= A < B <= N1 <= P <=N1 <= F <= 10^4ExampleInput:10 10\r\nfind 1 5\r\nadd 5 8\r\nadd 6 2\r\nfind 4 5\r\nfind 4 6\r\nadd 2 4\r\nfind 2 6\r\nadd 6 7\r\nfind 1 6\r\nfind 7 10Output:0\r\n8\r\n10\r\n14\r\n21\r\n0",
  "sample_input": "Input:10 10\r\nfind 1 5\r\nadd 5 8\r\nadd 6 2\r\nfind 4 5\r\nfind 4 6\r\nadd 2 4\r\nfind 2 6\r\nadd 6 7\r\nfind 1 6\r\nfind 7 10Output:0\r\n8\r\n10\r\n14\r\n21\r\n0",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/AKVQLD03",
  "scraped_at": "2025-08-17 00:34:02",
  "test_cases": [
    {
      "input": "10 10\r\nfind 1 5\r\nadd 5 8\r\nadd 6 2\r\nfind 4 5\r\nfind 4 6\r\nadd 2 4\r\nfind 2 6\r\nadd 6 7\r\nfind 1 6\r\nfind 7 10",
      "expected_output": "0\r\n8\r\n10\r\n14\r\n21\r\n0",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "8 5\n5 8\nrd 2 1\n7 10\nylx 10 9\n2 1\nuibr 3 2\n1 7\nbny 2 2\n4 3\ni 4 5\n10 5\nojtzm 4 5\n2 9\nbwdrz 8 5\n3 3\nvibxx 3 8\n7 4\neqwi 4 7\n7 5\nb 5 7",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "4 9\n5 7\nnj 1 9\n9 4\nosed 4 10\n6 5\nupxcu 1 9\n7 2\nhi 3 1\n2 6\nmf 5 6\n10 3\npkr 5 1\n2 1\nm 5 4\n7 5\nsg 10 7\n3 2\ndid 5 2\n2 2\nx 9 1",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "4 7\n6 4\nj 7 6\n10 1\nw 4 6\n10 8\nh 3 3\n8 7\nenewo 4 6\n8 5\nuk 1 4\n7 3\nb 2 7\n10 10\nhloj 5 6\n1 10\nn 1 7\n6 1\nmoev 6 6\n4 2\ngsdap 1 7",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "53 74\n41 56\nhvdv 60 52\n98 77\nlvxd 59 9\n41 22\ndg 22 87\n43 29\nuko 18 38\n29 21\nfug 20 32\n94 80\npod 21 20\n33 36\nsub 55 74\n87 27\necel 20 15\n80 94\nll 9 36\n58 79\ntsnf 33 47",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "38 31\n24 32\nx 49 11\n22 30\nsdpd 88 59\n20 14\nhoq 88 70\n21 1\nnulj 58 64\n14 99\ng 73 55\n85 44\nxb 9 88\n80 8\nernow 87 59\n77 67\nqq 46 29\n40 16\nfxv 100 89\n84 72\na 81 7",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "39 31\n6 71\ni 33 43\n5 80\ngsddk 24 67\n1 48\ncla 70 18\n76 67\nido 79 11\n58 60\nz 51 93\n52 82\ngfkhi 24 27\n35 20\nxfqcs 43 45\n67 10\nhc 64 32\n69 70\nxubtt 2 82\n39 63\nhxyvm 13 30",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "58 93\n16 60\nwjt 36 45\n93 32\nt 43 50\n79 54\nq 68 68\n35 73\ni 72 11\n27 16\nx 38 82\n97 94\nq 24 33\n56 51\nzg 47 80\n99 11\nxyrsq 85 79\n40 76\nhax 49 72\n48 89\ncu 88 81",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "70 3\n70 89\nf 8 22\n77 42\nra 31 45\n97 92\nny 99 8\n99 26\ndyyhk 70 77\n92 49\npo 43 81\n53 69\nz 33 32\n22 87\nzz 85 65\n92 58\nsf 76 84\n94 74\nropjq 30 19\n56 85\nqbmmh 18 48",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "345 143\n347 265\nejqj 111 449\n221 313\nukort 279 205\n108 241\nwez 427 321\n206 257\nhai 481 377\n418 153\nvj 66 147\n498 181\nqbz 487 404\n190 78\nxy 354 379\n427 72\nrav 358 192\n306 283\nvopm 179 484\n74 194\nucnx 108 133",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "295 55\n462 481\njhuro 293 82\n340 298\nkuox 343 443\n300 74\nzvf 284 104\n142 101\nfl 282 395\n406 390\nxkjc 238 304\n367 59\ntt 404 56\n72 83\nimlb 342 270\n391 414\nxwkyd 350 237\n459 186\nb 262 490\n180 213\nz 192 332",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "447 431\n439 366\nt 415 481\n107 301\niss 73 441\n119 366\nuohss 228 123\n352 481\nc 170 92\n194 184\nr 176 499\n80 149\ngh 412 302\n57 383\nqff 123 362\n274 227\nsieav 151 491\n400 308\nqsap 73 310\n199 210\nafly 64 483",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "157 229\n215 451\nahvxv 308 359\n339 368\nzxft 328 252\n368 66\nmxpuc 290 146\n482 274\ni 442 340\n220 434\ny 100 129\n175 468\ntupv 135 77\n103 311\nab 125 417\n497 280\nkmxz 354 185\n429 469\nlb 169 426\n113 92\nj 278 326",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "103 463\n415 229\nyexm 76 78\n97 227\ngpvmj 389 197\n136 126\nwkq 128 269\n395 415\nfl 456 345\n158 389\ng 57 421\n473 172\npkhe 244 73\n130 385\nyyehv 337 73\n346 65\nsxkq 143 279\n60 296\nwe 190 420\n91 161\naevis 204 225",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "352 162\n98 497\nghjub 413 126\n232 434\nowunj 190 270\n127 417\ntcti 440 170\n215 472\nzjjhz 102 496\n419 284\naf 371 439\n57 319\nn 133 259\n177 495\ngwi 422 428\n455 269\nvatf 171 80\n399 85\nr 450 63\n395 487\ni 356 166",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "415 405\n197 211\nkgp 162 477\n415 416\ndxrwc 474 371\n497 492\nbqnp 285 430\n62 151\nvafb 264 417\n73 492\nou 230 299\n254 299\nr 89 350\n203 119\naqpdm 396 145\n93 456\nesjn 264 145\n269 243\noxz 283 103\n122 134\npo 283 368",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000\nvp 1000 1000\n1000 1000\npe 1000 1000\n1000 1000\nb 1000 1000\n1000 1000\nihe 1000 1000\n1000 1000\nedw 1000 1000\n1000 1000\nj 1000 1000\n1000 1000\ni 1000 1000\n1000 1000\ngkcq 1000 1000\n1000 1000\numl 1000 1000\n1000 1000\nqqhl 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000\nmar 1000 1000\n1000 1000\nxb 1000 1000\n1000 1000\nz 1000 1000\n1000 1000\ne 1000 1000\n1000 1000\nhqnt 1000 1000\n1000 1000\nkk 1000 1000\n1000 1000\nazy 1000 1000\n1000 1000\no 1000 1000\n1000 1000\njasaf 1000 1000\n1000 1000\nozj 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 2\n999 1000\nuappp 1000 1\n999 999\naokid 1 999\n1000 1\njyfk 1000 1000\n1000 1000\nkj 1 2\n1 1\njwrmc 999 999\n1 999\nvg 1 1000\n1 2\nqxnb 999 2\n999 2\ncze 1000 2\n999 1000\nzlhak 1 1000\n999 1\nemd 999 1000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "999 1000\n999 2\ntht 1 999\n2 2\nvb 1000 1000\n999 1000\ncfs 1 1\n2 1000\nkvpj 1000 1000\n1 1\nusp 1000 2\n999 999\nwj 1 1000\n2 1000\ndtc 1000 1000\n999 1000\nmlqdp 999 2\n2 1\nisow 1000 1000\n2 1000\nkwtoa 2 1000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:18",
  "total_test_cases": 20
}
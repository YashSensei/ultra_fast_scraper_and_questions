{
  "problem_code": "problems",
  "title": "Catapult that ball",
  "tags": [],
  "text": "Bob has unusual problem. In Byteland we can find a lot of hills and cities. King of Byteland ordered Bob to deliver magic balls from one city to another. Unfortunately, Bob has to deliver many magic balls, so walking with them would take too much time for him. Bob came up with great idea - catapulting them.Byteland is divided into intervals. Each interval contains city and hill.Bob can catapult magic ball accurately from city A to city B, if between them there isn't higher hill than A's hill.InputEvery test case contains N and M (N ≤ 50000, M ≤ 50000), number of intervals and number of balls.In next line there's N numbers H (H ≤ 109) separated by one space.In next M lines numbers A and B (1 ≤ A, B ≤ N), number of city from which we want to catapult the ball and number of city to which we want to catapult the ball.OutputWrite one number - number of magic balls that Bob can catapult successfully.ExampleInput:7 3\r\n2 3 5 4 2 1 6\r\n3 5\r\n2 5\r\n4 6Output:2ExplanationBob can catapult balls numbered 1 and 3.",
  "sample_input": "Input:7 3\r\n2 3 5 4 2 1 6\r\n3 5\r\n2 5\r\n4 6Output:2",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/THRBL",
  "scraped_at": "2025-08-17 00:33:57",
  "test_cases": [
    {
      "input": "7 3\r\n2 3 5 4 2 1 6\r\n3 5\r\n2 5\r\n4 6",
      "expected_output": "2",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "6 10\n8 5 1 9 3 7 1\n1 5\n1 6\n4 1",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "9 10\n8 9 3 6 8 5 8\n9 7\n5 1\n2 1",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "4 8\n6 2 2 2 8 3 6\n9 8\n2 1\n10 9",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "46 91\n44 63 96 62 31 54 23\n56 44\n39 95\n46 91",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "89 40\n97 53 54 96 46 52 84\n44 98\n3 33\n38 96",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "34 5\n29 18 64 33 80 81 16\n33 95\n9 81\n75 89",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "40 23\n80 53 23 15 63 89 8\n82 13\n42 74\n10 46",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "32 45\n83 25 99 94 61 97 90\n15 58\n87 12\n98 81",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "22574 3336\n12039 12378 24219 24389 22709 10909 13499\n17136 10740\n8752 17243\n4540 19288",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "21402 7446\n17079 4476 12718 10091 22757 23018 9761\n19586 19354\n11461 4591\n9227 11991",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "3049 7390\n7669 18984 14393 17659 12430 14052 10229\n21938 24463\n4701 24639\n8987 12088",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "19508 11905\n9015 12832 9742 14763 23786 14552 13360\n22702 9049\n10189 14416\n14868 21105",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "14827 14699\n2542 12023 16676 23538 12286 6216 15942\n23039 21517\n20190 13949\n14838 24672",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "13539 23791\n21088 23311 5397 22650 6340 10690 24880\n21496 18341\n6459 18377\n2969 12994",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "14684 18943\n14206 23738 21350 24902 9364 8288 4905\n7315 5564\n13830 18684\n6521 17992",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "50000 50000\n50000 50000 50000 50000 50000 50000 50000\n50000 50000\n50000 50000\n50000 50000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "50000 50000\n50000 50000 50000 50000 50000 50000 50000\n50000 50000\n50000 50000\n50000 50000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "50000 50000\n49999 50000 49999 49999 49999 50000 1\n50000 50000\n50000 50000\n50000 50000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "49999 49999\n49999 1 49999 49999 1 1 2\n1 49999\n49999 2\n1 50000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:20",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Life on Fornax",
  "tags": [],
  "text": "NASA's Ultrasonic Crawling Vessel, UCV for short, has arrived to galaxy UDFj - 39546284 in the Fornax constellation and has found a peculiar type of bacteria-like lifeform. As you may imagine a plan to collect samples a bring them back to earth has been set in motion. However, it would be rather unfortunate if they are all dead by the time the UCV gets back, the trip would take approximately 13.42 x 109years travelling at light speed. Therefore, its necessary to pick a number of bacterium so that there are at least some of them alive when the UCV arrives back.The UCV has studied the reproduction cycle of the bacterium inside a cryogenic pod and their behavior when released from the pod, but it lacks the algorithm to compute the final number for such a long period of time. Fortunately, it's been designed with a wormhole plugin installation mechanism that allows to upload algorithms in a matter of only a few years.Aging phase: Each bacteria becomes a year older.Reproduction phase: Each bacteria gives birth to a new bacteria, this is slightly different to earth bacteria in the sense that the new and old bacterium are no identical. The new bacteria is 0 years old while the old bacteria is at least 1 year old.Passing phase: Each bacteria that reaches maturity, exactly M years old, dies.Fox example, this one reproduction cycle given a 0 years old bacteria and a 1 years old bacteria if maturity is reached at 2 years old.As you can see, during cryogenic reproduction, there's no fear of bacterium extinction, the number of births is at least as much as the number of deaths. However, when the pod is opened the bacterium enter into a strange iterative reduction phase, in each step of the reduction the oldest R bacterium die immediately; this process ends when there are fewer than R bacterium left. Note that the biggest problem arises when at some iteration there are exactly R bacterium left because they all die at that moment.NASA ha asked you to write the algorithm that will be uploaded to the UCV to determine the number of bacterium that will exist after the pod is opened here on earth.InputThe input contains several test cases, each one corresponding to a single simulation. Each test case starts with a line with three integers, the maturity age (1 ≤ M ≤ 50), the number of years for the UCV to come back (0 ≤ Y ≤ 1012) and the reduction size (1 ≤ R ≤ 109); separated by a single space. The following line contains M integers, theyrepresent the number of 0, 1 ... M - 1 years old bacterium placed inside the cryogenic pod.The end of input is indicated by a test case with M = Y = R = 0.OutputFor each simulation output a single line containing a single integer, the number of bacterium that will be alive after the reduction process has finalized.ExampleInput:2 1 41 12 1 21 12 2 21 12 2 51 16 0 1000000 1 2 3 4 56 1000000000000 1000000 1 2 3 4 50 0 0Output:31101521809",
  "sample_input": "Input:2 1 41 12 1 21 12 2 21 12 2 51 16 0 1000000 1 2 3 4 56 1000000000000 1000000 1 2 3 4 50 0 0Output:31101521809",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/UCV2013F",
  "scraped_at": "2025-08-17 00:33:45",
  "test_cases": [
    {
      "input": "2 1 41 12 1 21 12 2 21 12 2 51 16 0 1000000 1 2 3 4 56 1000000000000 1000000 1 2 3 4 50 0 0",
      "expected_output": "31101521809",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "9 6 5 7 4 3 10 9 2 2 4 4 7 6 6 1 2 8 3 2 8 3 8 3 8 7 4 10 4",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "3 8 7 8 6 4 1 4 9 7 3 4 1 10 7 6 5 7 2 6 8 2 10 6 4 9 4 5 3",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "1 5 5 10 8 2 7 8 9 9 9 6 3 3 8 6 7 8 2 9 8 5 8 10 9 1 3 8 7",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "58 4 99 17 49 83 99 14 84 1 61 70 7 91 86 6 92 47 15 76 54 87 66 5 71 47 67 65 37",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "40 67 59 78 81 42 11 55 39 46 1 25 88 22 42 49 34 50 72 9 79 68 11 35 51 56 59 46 56",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "89 7 92 34 89 11 34 88 100 86 61 44 71 19 14 50 89 72 82 42 36 74 43 21 86 91 28 100 84",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "85 33 78 8 26 29 86 18 55 93 61 65 33 43 25 95 18 29 69 100 28 25 64 93 29 2 56 81 19",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "55 77 36 42 52 15 99 48 96 18 20 55 74 70 55 51 99 98 83 96 91 9 31 27 87 65 25 27 92",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "460 186 155 54 338 408 437 147 254 400 381 380 324 300 161 96 137 86 324 255 64 76 470 140 419 411 316 70 499",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "165 440 485 163 264 464 241 211 489 309 288 496 143 138 139 225 494 170 274 417 396 283 172 409 130 196 110 239 350",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "171 267 299 240 267 296 250 417 206 490 211 366 312 300 341 267 351 51 209 296 234 108 478 211 476 231 73 177 143",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "446 262 171 349 132 270 133 220 404 225 149 439 351 213 357 208 353 216 380 368 357 255 201 319 305 377 285 389 467",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "247 84 327 155 490 305 391 362 231 227 193 198 298 320 126 337 154 316 395 287 196 303 112 112 256 126 455 175 101",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "373 460 456 344 82 123 295 67 69 141 184 296 449 451 360 380 351 292 395 489 461 129 452 153 220 68 405 201 475",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "153 309 487 353 62 384 412 123 55 209 319 284 196 291 118 137 90 345 495 257 225 397 288 386 255 235 360 64 495",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 999 1 1 1 999 1 2 2 1000 2 2 2 2 1000 1000 2 999 999 2 1 2 1000 2 1000 2 1000 2 999",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 2 1 1 1000 1000 2 2 1 999 1 1 1 999 999 999 1000 1000 1000 2 2 2 1 1000 2 2 2 999 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:18",
  "total_test_cases": 20
}
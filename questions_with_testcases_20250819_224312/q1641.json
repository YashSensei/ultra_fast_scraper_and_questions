{
  "problem_code": "problems",
  "title": "Monotonous numbers",
  "tags": [],
  "text": "Some integers possess interesting quality: each of their digits is not greater than the digit to the right. Let us define such integers as increasing integers. And let's call integers for which each digit is not lesser than the digit to the right decreasing integers. For example 24558 is increasing, 888410 is decreasing and 5 - is both increasing and decreasing. Givenncalculate the ratio of the decreasingn-digit integers to the increasingn-digit integers. We consider only positive integers. Leading zeros are not allowed.InputThe first line of the input contains numbert– the number of tests. Thenttest descriptions follow. Each test consists of the single integern.Constraints1 ≤t≤ 100001 ≤n≤ 106OutputFor each test print the needed ratio with six digits in the fractional part.ExampleInput:2\r\n1\r\n2Output:1.000000\r\n1.200000",
  "sample_input": "Input:2\r\n1\r\n2Output:1.000000\r\n1.200000",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/MONONUM",
  "scraped_at": "2025-08-17 00:33:25",
  "test_cases": [
    {
      "input": "2\r\n1\r\n2",
      "expected_output": "1.000000\r\n1.200000",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2\n9\n7",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "2\n1\n10",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "2\n6\n1",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "17\n78477632\n37713622\n89501321\n22062644\n8787355\n6315918\n95471120\n14026142\n62729426\n10809402\n2369816\n18479080\n38552985\n7554906\n71640284\n73889776\n42761507",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "18\n71961923\n79650530\n17058164\n48155952\n59732605\n1624850\n30828535\n86201406\n40981124\n66921057\n20898791\n92646943\n59945083\n60854049\n17283114\n64776602\n8050887\n78623523",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "16\n34329433\n88217354\n53420689\n3123932\n49414013\n2987529\n23012213\n84413787\n73661390\n92233389\n56906883\n97309036\n17294923\n55044402\n78500031\n32520280",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "8\n74503127\n81107697\n28628341\n56555781\n25324210\n10739592\n6723454\n73590122",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "9\n7978659\n81045324\n21932411\n82445578\n78512677\n13147162\n57123553\n51372825\n95745893",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "71\n18511\n46688\n8433\n36061\n74140\n57838\n84006\n88852\n49148\n75325\n89618\n96750\n22200\n90317\n94171\n39224\n54288\n35076\n81696\n34227\n58110\n25569\n50553\n82930\n26314\n26848\n95579\n94657\n38898\n58512\n51795\n40321\n67627\n16396\n99988\n5516\n75357\n43368\n26126\n94848\n95979\n38107\n76200\n21209\n3214\n95898\n31762\n60431\n17625\n12299\n94290\n45142\n48986\n20724\n95986\n47078\n51884\n23791\n17357\n56064\n53979\n31933\n96\n23901\n99572\n22094\n65281\n76118\n58731\n42595\n19290",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "77\n12356\n90771\n9394\n67487\n15282\n45890\n72594\n98239\n57446\n76517\n80232\n77380\n81138\n93642\n93150\n90170\n88981\n76018\n97542\n30737\n673\n95330\n71860\n25280\n52653\n34836\n96043\n11393\n56964\n80615\n79562\n565\n21722\n72443\n73340\n29347\n91435\n35229\n41534\n79680\n34629\n15754\n17718\n39225\n7293\n51292\n48719\n93108\n31471\n14343\n35648\n6577\n21470\n45601\n38741\n25688\n29249\n66798\n21631\n35731\n6452\n62883\n74191\n9248\n28672\n789\n1604\n32638\n2294\n4006\n50684\n91656\n98471\n51078\n88017\n21689\n58591",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "103\n61865\n20627\n13836\n82604\n15860\n50094\n62385\n44795\n23332\n30811\n89256\n69117\n21681\n49770\n23538\n79109\n50242\n70651\n33858\n31666\n54127\n93998\n6945\n85624\n1118\n96688\n55111\n67524\n5084\n5208\n85931\n54056\n18204\n47059\n19741\n93564\n61686\n83870\n74604\n59332\n34183\n20152\n91411\n67535\n28079\n8057\n57296\n43298\n88002\n57676\n58957\n23533\n37367\n53019\n30902\n63322\n93056\n70407\n81800\n36473\n16015\n68689\n98599\n13403\n58645\n71332\n21701\n56548\n91722\n57391\n94771\n18628\n25578\n40616\n462\n35509\n11973\n36527\n44529\n83528\n30445\n20085\n27544\n42145\n57524\n45227\n29824\n83314\n42417\n52182\n55129\n27761\n22066\n73466\n35250\n60599\n82457\n48932\n47030\n72976\n91992\n2083\n81040",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "51\n28505\n87458\n21502\n97796\n81357\n29275\n18223\n96035\n68682\n46751\n39093\n68286\n60039\n77595\n34431\n45165\n80397\n97197\n70200\n73685\n68849\n69143\n66319\n46856\n93888\n4549\n95504\n91498\n14520\n42197\n87797\n66035\n83119\n78752\n89440\n68005\n80515\n69722\n6497\n6503\n10328\n6191\n19669\n310\n25747\n22049\n17709\n28363\n75722\n40900\n38930",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "70\n16598\n73904\n67330\n5184\n42001\n31987\n71042\n73882\n90231\n94042\n81642\n42380\n28385\n87784\n64113\n15823\n21817\n14656\n2332\n18357\n44886\n90488\n44771\n49186\n17314\n97265\n35464\n84641\n17516\n54756\n52294\n61600\n94318\n62853\n14072\n19281\n26240\n71755\n97189\n16745\n73259\n95552\n90575\n41398\n40838\n29341\n89639\n14885\n88640\n1422\n22912\n40120\n23404\n39107\n54952\n53401\n56386\n26366\n63385\n9277\n65486\n24528\n44715\n82443\n26287\n84340\n8336\n38687\n3058\n6744",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "59\n55055\n4350\n50564\n53145\n7187\n14487\n52767\n58005\n67396\n47939\n79509\n23209\n27050\n41094\n69019\n38852\n25396\n87516\n69502\n42957\n5525\n73467\n53943\n67841\n2622\n74494\n82269\n65229\n95690\n45585\n11372\n38193\n12778\n80815\n18334\n48960\n99036\n74190\n67945\n21676\n10625\n9603\n37830\n44832\n12217\n51002\n95340\n46595\n25411\n61904\n15496\n54321\n81232\n27433\n32988\n6661\n20398\n76652\n26653",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "54\n27631\n70650\n1801\n74288\n72905\n94248\n91038\n71205\n22629\n86108\n3095\n40049\n38197\n84089\n60896\n84194\n89592\n30642\n70113\n16743\n48336\n49734\n70559\n17977\n82250\n34966\n29273\n33383\n92580\n42936\n18940\n5620\n16151\n11892\n36426\n23379\n35752\n57256\n21278\n89366\n70211\n38812\n31210\n97948\n55693\n39025\n55401\n36492\n47417\n47015\n13972\n27787\n25130\n35355",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "106\n77668979\n3172760\n98011386\n38373392\n82810664\n63730601\n45867834\n79840907\n56941238\n74630277\n61500459\n89763152\n30965563\n1105336\n97183922\n15873993\n47793864\n43634209\n27965891\n58027771\n51276995\n20109218\n17944695\n24028566\n62249519\n85170934\n19621491\n36373004\n43687204\n4235378\n83024936\n87562754\n43181753\n59800098\n41214571\n67330406\n94037697\n83266740\n90181168\n41387646\n93272957\n31996728\n95629994\n83198201\n68633144\n69052940\n81160693\n15636474\n89281537\n84271812\n55651601\n76432804\n85164956\n58278789\n87903180\n90481965\n36096375\n88558155\n84905447\n1385265\n57301392\n33653365\n29765825\n35939202\n74121689\n80571780\n19096724\n68914882\n81455655\n5056848\n39409191\n14992735\n77215943\n78031531\n58724330\n3674736\n62177689\n2512190\n64035707\n70592907\n91963103\n64716478\n70037904\n83576107\n78982029\n13447316\n47234580\n37201025\n34552237\n90106923\n55504814\n27148722\n56371361\n48288272\n69051592\n16932361\n89099836\n922589\n49959733\n95998075\n9197418\n80563294\n3672881\n63752408\n90550533\n29735797",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 106)"
    },
    {
      "input": "106\n58215227\n654799\n64871797\n24055378\n45134877\n35850545\n72505261\n16773521\n94268733\n86099625\n28279862\n48064981\n60820878\n43070681\n5635506\n79999922\n22623843\n46323384\n3426793\n80881071\n20541886\n82947010\n10369122\n84908164\n48231328\n35801316\n17383369\n62053979\n61762212\n98943709\n10527676\n1014561\n67936493\n17970134\n33086426\n45865466\n84550294\n19529746\n69788859\n96594172\n8984254\n22801678\n33994042\n96780024\n33330263\n18447435\n90986662\n16284600\n85204568\n85005607\n21020743\n87249478\n42431665\n51108886\n51717952\n62177738\n76424014\n20250785\n21927691\n915552\n96083185\n65393949\n73259242\n21677666\n42978137\n95503852\n40625730\n53324015\n31964418\n59876005\n25415816\n40610507\n36990819\n32521580\n35150906\n23069961\n36865044\n51209719\n60664894\n57024479\n72048223\n40779370\n1967662\n9491999\n60779803\n5948516\n26469388\n52451936\n16325651\n57225706\n19621367\n94944823\n20442425\n50124400\n26338429\n19529661\n85921201\n28987524\n28108831\n70074557\n59762561\n91759541\n85080598\n90563643\n14795512\n96102117",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 106)"
    },
    {
      "input": "2\n29894309\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 2)"
    },
    {
      "input": "2\n100000000\n54740827",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 2)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:17",
  "total_test_cases": 20
}
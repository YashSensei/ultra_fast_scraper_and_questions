{
  "problem_code": "problems",
  "title": "Charlie and the Chocolate Factory",
  "tags": [],
  "text": "Charlie works in a magical chocolate factory. Packets of its marzipan are made on conveyor belts. To make marzipan perfect, M conveyor belts are used, and the process is as follows.Each of the M belts has N cells. Charlie first makes a few initial packets and puts them on the cells of the first belt (there may be zero or more packets in a particular cell).Then the first belt generates a second belt such that each cell of the second belt, at the same time, counts the packets in some five cells of the first belt and creates that number of packets in itself.Fox example, the first cell of the second belt sums the packets in the cells 1, 2, 3, 5, 9 of the first belt, the second cell of the second belt sums the packets in the cells 2, 3, 4, 5, 6 of the first belt and so on.Then, from the second belt, a third belt is generated in the same manner, then the fourth from the third and so on until the Mth. Since the number of packets on the belts usually increases, the number of packets in each cell is observed only modulo 10007.You, as the winner of the golden ticket to the factory, are able to see how the Mthbelt looks like - that is, how many packets of marzipan there is in each cell. Charlie has also explained to you the production process and now you are wondering how first belt looked like.InputThe first line of input contains positive integers N (N â‰¤ 100) and M (M < 231).The next N lines describe the process of generating each new belt. In the Athof these lines there are five distinct integers from the interval [1, N], denoting the cells of a previous belt from which the packets are added to the Athcell of a new belt.The next line contains N integers describing the state of the Mthbelt (modulo 10007).OutputPrint N integers describing the state of the first belt (modulo 10007). Auniquesolution will exist in all of the test data.ExampleInput:6 3\r\n1 2 3 4 5\r\n1 2 3 4 6\r\n1 2 3 5 6\r\n1 2 4 5 6\r\n1 3 4 5 6\r\n2 3 4 5 6\r\n13 12 12 12 14 12Output:1 0 0 0 2 0Explanation of the sample case:The process goes like this: (1 0 0 0 2 0) - (3 1 3 3 3 2) - (13 12 12 12 14 12)",
  "sample_input": "Input:6 3\r\n1 2 3 4 5\r\n1 2 3 4 6\r\n1 2 3 5 6\r\n1 2 4 5 6\r\n1 3 4 5 6\r\n2 3 4 5 6\r\n13 12 12 12 14 12Output:1 0 0 0 2 0",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/CHARLIE",
  "scraped_at": "2025-08-17 00:33:17",
  "test_cases": [
    {
      "input": "6 3\r\n1 2 3 4 5\r\n1 2 3 4 6\r\n1 2 3 5 6\r\n1 2 4 5 6\r\n1 3 4 5 6\r\n2 3 4 5 6\r\n13 12 12 12 14 12",
      "expected_output": "1 0 0 0 2 0",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5 10\n3 4 1 9 8\n10 8 6 9 3\n2 10 10 2 5\n2 3 2 8 8\n4 9 8 3 4\n8 4 3 5 5\n6 9 6 5 10 1",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "6 1\n10 7 7 8 6\n8 8 10 8 5\n8 5 2 1 2\n6 6 3 4 6\n3 6 6 5 6\n9 6 2 2 1\n9 4 7 10 1 2",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "1 8\n9 7 9 7 5\n2 6 2 9 5\n8 2 3 1 3\n5 1 2 3 8\n8 7 7 1 9\n8 1 8 5 4\n8 3 1 1 1 5",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "63 66\n40 13 67 76 24\n52 63 12 30 77\n85 55 59 11 1\n55 71 40 55 2\n4 95 45 9 17\n60 35 15 90 25\n16 81 49 87 4 91",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "97 50\n71 27 18 28 47\n79 25 96 86 44\n69 63 89 52 57\n65 87 98 69 64\n70 94 4 48 75\n21 80 31 3 51\n74 58 50 69 16 29",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "31 68\n74 85 74 22 83\n61 88 54 21 85\n56 92 28 55 3\n35 90 54 82 48\n44 72 77 96 57\n90 72 86 41 62\n8 9 57 30 76 58",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "94 79\n62 80 65 37 91\n30 22 3 76 66\n31 8 37 35 3\n23 54 22 75 77\n53 56 99 29 37\n46 85 13 76 73\n82 16 73 84 20 12",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "88 73\n82 61 74 23 37\n79 89 12 79 97\n19 16 81 79 75\n89 79 89 14 54\n91 97 53 28 77\n76 81 3 72 84\n6 64 10 96 7 89",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "30 18\n18 31 19 22 32\n14 25 7 30 32\n8 25 8 31 5\n9 23 48 13 11\n10 35 42 6 19\n13 23 34 7 28\n40 8 50 25 35 5",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "38 27\n26 33 11 20 34\n49 28 12 35 10\n36 14 16 47 22\n22 5 23 40 42\n29 8 41 32 37\n28 16 14 44 28\n33 38 25 18 38 32",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "7 21\n24 31 29 23 31\n18 13 48 33 23\n40 14 48 39 16\n46 35 15 41 7\n8 10 5 20 8\n39 50 36 13 18\n25 33 40 20 45 29",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "14 50\n20 5 21 38 46\n44 26 17 6 5\n30 28 21 11 25\n42 43 13 18 11\n42 33 7 19 47\n27 47 26 50 20\n45 47 5 24 8 11",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "22 34\n31 23 36 30 20\n24 18 22 39 46\n21 10 50 9 17\n11 16 38 15 21\n12 13 47 37 36\n5 9 17 6 48\n32 26 32 22 8 20",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "43 17\n15 36 32 15 19\n50 48 39 24 7\n29 42 8 10 11\n12 19 30 26 49\n20 42 23 30 17\n23 7 38 15 11\n26 25 8 22 21 47",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "22 44\n11 17 27 25 50\n36 17 47 8 15\n8 35 12 6 39\n37 30 45 22 26\n37 16 43 14 43\n47 38 15 9 5\n33 44 21 29 11 13",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "100 100\n100 100 100 100 100\n100 100 100 100 100\n100 100 100 100 100\n100 100 100 100 100\n100 100 100 100 100\n100 100 100 100 100\n100 100 100 100 100 100",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "100 100\n100 100 100 100 100\n100 100 100 100 100\n100 100 100 100 100\n100 100 100 100 100\n100 100 100 100 100\n100 100 100 100 100\n100 100 100 100 100 100",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "99 1\n1 2 1 100 99\n1 1 100 99 2\n2 100 100 1 2\n99 99 2 99 2\n100 99 2 100 2\n1 99 2 100 2\n100 2 99 2 99 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 100\n99 99 100 99 2\n100 100 99 100 99\n2 2 2 99 100\n100 100 2 1 1\n1 1 2 100 2\n100 1 1 99 99\n99 100 99 2 2 100",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:13",
  "total_test_cases": 20
}
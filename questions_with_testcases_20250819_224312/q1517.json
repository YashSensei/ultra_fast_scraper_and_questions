{
  "problem_code": "problems",
  "title": "Profiling",
  "tags": [],
  "text": "Profiling: In software engineering, profiling (\"program profiling\", \"software profiling\") is a form of dynamic program analysis that measures, for example, the space (memory) or time complexity of a program, the usage of particular instructions, or the frequency and duration of function calls. Most commonly, profiling information serves to aid program optimization.- WikipediaArthur and Jacob are newly introduced to the programming world and they are trying hard for Newbies contest. Yesterday, they learned about recursive functions and Fibonacci sequence. They tried to implement the function themselves so they wrote the following code:int fibonacci (int N)\r\n          {\r\n              if(N < 2)\r\n                  return N;\r\n              return fibonacci(N - 1) + fibonacci(N - 2);\r\n          }But this program works slowly when N is a large number. They traced the program and found the cause of this problem. Take a look at the following picture:If you want to calculate Fibonacci(6), Fibonacci(3) will be calculated multiple times!They want to know how serious this problem can be, so they need a profiler to calculate such a thing for them.Your task is to provide the profiler which receives two integers N, K and tells them if they call Fibonacci(N) how many times Fibonacci(K) will be calculated (according to their code).InputThe first line of input indicates the number of test cases (There will be at most 100 test cases)For each test case, there are two space-separated integers N, K  in a single line. (0 ≤ N, K ≤ 105)OutputFor each test case, print the number of times Fibonacci(K) will be calculated, if we call Fibonacci(N). Since the result can be very large, print the result modulo (Mod %) 1000000007.ExampleInput:5\r\n6 6\r\n6 3\r\n6 2\r\n100000 3\r\n5 10Output:1\r\n3\r\n5\r\n855252772\r\n0",
  "sample_input": "int fibonacci (int N)\r\n          {\r\n              if(N < 2)\r\n                  return N;\r\n              return fibonacci(N - 1) + fibonacci(N - 2);\r\n          }",
  "sample_output": "Input:5\r\n6 6\r\n6 3\r\n6 2\r\n100000 3\r\n5 10Output:1\r\n3\r\n5\r\n855252772\r\n0",
  "link": "https://www.spoj.com/problems/PROFILING",
  "scraped_at": "2025-08-17 00:33:44",
  "test_cases": [
    {
      "input": "int fibonacci (int N)\r\n          {\r\n              if(N < 2)\r\n                  return N;\r\n              return fibonacci(N - 1) + fibonacci(N - 2);\r\n          }",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5\r\n6 6\r\n6 3\r\n6 2\r\n100000 3\r\n5 10",
      "expected_output": "1\r\n3\r\n5\r\n855252772\r\n0",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "quxtq hhogly cgv hht\nx\n1\nef lkixq zypmq\nrdngka ikq\n2 2\nrgucye shimz g ptwn w hm ac twjko\ngr",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "h dwqem o yw\npn\n2\nscf l b\nghba sbsn\n1 2\ndm lmqdubsd zrq l dkv mmfdkhxs bdg aemr\nzc",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "y rq couc nocid\na\n1\nnjulx w gd\nd ryv\n1 2\nlc gpyuhunpg q bf wmca ullroamv g apiug\nmn",
      "expected_output": "To be computed",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "uepd jpfbr ocu bn\nnj\n1\nsmw q m\nkoqrw nnrok\n2 1\nywkvov nj eoma jj otdvi xnofepqohes utni zz\nyz",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "miwu omimpya otcha mbuc\nzt\n1\nclxv n u\noh um\n1 2\nhox mhzuim ys rxsn lrv dtl acylz xdd\nt",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "iuwck l amam cjrt\nej\n2\nf cmj pl\njhwz ojbqe\n2 2\nl fkmdy gmqua hkg tocbc ajncrpimaub ynh jylg\nuo",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "ivzc oj d tnhux\nu\n1\nrjpsr i iyoub\ndu duqiw\n2 1\nrbmygx rnsukpq ggijq d qy zw c n\nau",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "yzlwe rha zm yqaj\np\n2\nph efrkd r\nvl a\n2 2\nkn laihccml lbr stjg zjx xsinuiatasl oshvz pzazk\ngs",
      "expected_output": "To be computed",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "ieegx egjujxkl se ob\nf\n1\nyi t y\nry yn\n1 1\nydlith olozq xitfv kbgu io bjnvf vlolm qpxlp\nq",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "xgn sez p g\nwi\n1\nwr xcxv xcqzs\nccbo t\n1 1\nova r vhbqy gvruh gpoxw ow ax c\nfj",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "xg hrlx hu srur\nz\n1\nzvf edfb v\npyq klbqm\n1 1\ndzj ronatglr x jiglu hk zzoxk lo ktynt\nqg",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "dm zmb auis emen\nun\n1\nncz fdqv lo\nqycxea qh\n1 1\nugz zr moefq gwng kqqoq ewkwjsipe fgwz fj\nqo",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "wtacq yfe clb ff\ncx\n1\ncd f bu\ncm c\n1 1\njs bsjotrlakc fxzym vup ooiyc jvjejfyv al kmi\nvh",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "zrfm nqf qopy h\njp\n1\nl huluh wge\nfej sj\n1 1\nk ghxhlmh kl cc ojbcu ocbovzml wnq j\nhi",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "gkedj sqrvu nlhi svnk\no\n1\nr nocdo vury\ndjny i\n1 1\nnnsmo djmaz fuej fi lpc whhonagrq buw zxtw\ni",
      "expected_output": "To be computed",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "xpuur b mb ci\nq\n2\nuwyo fnvmc j\nyrmk wax\n2 2\njlk mzceznsqf c yvm c ldvq n tafr\nfr",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "xajc ibzhf thl oilxs\nj\n2\nmdad efq vv\nmfo uth\n2 2\nschld uwneea xn fso wqlhi dvus ynn yc\nr",
      "expected_output": "To be computed",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "pfw cjky rnpfm xkxah\nwj\n2\nbyo nmsj xyh\nfpqt uf\n2 1\nji otfwi o hh f lyzewdsa ajwz ra\nf",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:17",
  "total_test_cases": 20
}
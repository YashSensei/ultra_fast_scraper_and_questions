{
  "problem_code": "problems",
  "title": "Contaminated City",
  "tags": [],
  "text": "In a far away country there is a city facing a big problem. The city is plagued by a deadly gas. Many people have died, but there are groups of survivors at places around the city. Between these places there are roads connecting two distinct places that can still be traversed safely. These roads can be traversed in both directions. It's known the number of days necessary to traverse each road and the two places that it connects. It's also known the number of survivors at each location. Each survivor can get to other places following a sequence of roads.The mayor will send several helicopters to rescue these people, each having a capacity, a limit on the number of crew (people that it can rescue). Each helicopter will land on a certain day and place.You should answer an important question for the mayor. How many days are needed to rescue all survivors? If it's not possible to rescue all people you should answer how many of them can be rescued.InputThe first line of input file have the number of test cases T (T ≤ 40).The first line of each test case have N, M, and H, the number of places considered, the number of roads between the places and the number of helicopters that will be sent, respectively. Each place is uniquely identified by a number between 1 and N. The next N lines will have N integers, the i-th line have the number of survivors in place i, Xi. Each of next M lines will have three numbers Aj, Bj and Dj, meaning that there is a way between places Aj and Bj that last Dj days to traverse. The input can contain several roads between the same pair of places. Each of next H lines will have three integers Dh, Ph, and Ch (in this order), meaning that a helicopter with capacity Ch will arrive at place Ph at day Dh. The sum of survivors will not be more than 200. If a survivor can get a helicopter following a sequence of roads, the total time to get the helicopter will not be more than 1000.Constraints1 ≤ N, H ≤ 501 ≤ M ≤ 15001 ≤ Aj, Bj, Ph ≤ N1 ≤ Dj, Dh ≤ 10001 ≤ Ch ≤ 2000 ≤ Xi ≤ 200OutputFor each test case there is one line in output. If all people can be rescued \"All people can be rescued in D day(s) .\" should be printed, where D is the minimum number of days to rescue all people. If it is impossible to rescue all people \"X survivor(s) can be rescued.\" should be printed, where X is the maximum number of survivors that can be rescued.ExampleInput:24 4 434561 2 72 3 33 4 34 1 44 4 76 3 25 2 33 1 64 2 322311 4 32 3 32 4 23 2 43 3 2Output:All people can be rescued in 6 day(s).7 survivor(s) can be rescued.",
  "sample_input": "Input:24 4 434561 2 72 3 33 4 34 1 44 4 76 3 25 2 33 1 64 2 322311 4 32 3 32 4 23 2 43 3 2Output:All people can be rescued in 6 day(s).7 survivor(s) can be rescued.",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/CONTCITY",
  "scraped_at": "2025-08-17 00:33:22",
  "test_cases": [
    {
      "input": "24 4 434561 2 72 3 33 4 34 1 44 4 76 3 25 2 33 1 64 2 322311 4 32 3 32 4 23 2 43 3 2",
      "expected_output": "All people can be rescued in 6 day(s).7 survivor(s) can be rescued.",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "10 5 6 1 5 7 3 6 6 1 3 3 8 10 8 10 3 3 2 8 1 1 3 9 8 5 1 8 10 2 5",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "4 7 7 5 4 10 10 10 9 4 8 9 7 5 8 7 5 7 9 2 2 1 8 4 3 8 2 1 9 1 10",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "8 3 4 6 4 8 10 5 3 7 8 4 4 5 4 6 2 2 6 8 6 7 9 2 4 4 8 2 2 7 1",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "40 76 96 86 41 32 33 73 10 55 34 98 68 37 10 16 17 34 30 5 4 64 60 60 18 43 96 41 54 46 34",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "56 74 77 64 27 46 95 59 84 30 57 45 35 100 21 2 69 65 54 29 40 17 96 83 9 4 87 40 20 1 85",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "15 81 63 11 86 38 9 17 65 37 56 49 66 90 74 50 26 3 46 8 2 60 31 78 52 32 100 68 76 12 28",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "35 28 20 15 57 9 8 46 81 91 31 59 30 21 23 2 67 8 90 45 3 25 63 97 55 58 13 47 29 65 89",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "99 71 73 57 65 22 64 22 1 21 27 61 81 25 75 58 15 44 20 1 64 19 15 89 56 45 17 65 26 22 14",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "280 311 186 223 325 293 479 135 387 155 282 143 70 370 50 430 79 60 380 191 323 207 63 216 90 163 430 184 86 83 352",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "234 364 338 449 111 311 347 485 306 214 322 385 314 425 130 319 457 124 299 483 346 344 372 261 370 482 385 441 392 212 243",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "429 107 318 171 481 137 134 498 87 420 390 210 209 275 273 298 147 155 59 500 290 358 480 150 254 385 94 294 461 355 326",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "259 157 260 309 161 140 472 102 146 223 469 470 386 485 110 75 464 183 323 242 458 303 361 117 364 358 263 448 305 139 424",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "393 388 290 310 66 479 303 349 383 484 475 189 368 60 393 370 332 417 272 111 79 444 105 167 336 410 147 366 262 495 413",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "101 430 71 139 372 183 328 408 189 51 474 411 445 126 417 179 438 460 291 267 84 193 304 379 372 306 352 203 498 294 202",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "136 326 259 299 284 272 61 473 375 462 234 181 144 194 154 85 314 336 438 397 192 400 438 282 445 179 352 150 202 101 229",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1 999 1000 999 999 1000 1 999 999 999 2 1 1 1 1000 2 1 1 999 1000 999 1 999 1 1000 999 1 1000 999 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 2 999 1000 1 1000 1000 1 1 1 2 1000 1000 2 2 1 2 2 2 999 1000 999 999 999 999 2 1000 1000 999 1000 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:14",
  "total_test_cases": 20
}
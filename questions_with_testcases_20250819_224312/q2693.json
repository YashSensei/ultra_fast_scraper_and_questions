{
  "problem_code": "problems",
  "title": "Magical Matrices",
  "tags": [],
  "text": "A magical matrix Ixis obtained by right shifting an Identity matrix of size q exactly n times in a circular manner.q in the above example is 3.Bob is very fond of such matrices so he embeds them in his m x n matrix where each cell represents the value x of Ixthat he embeds. Now he is wondering if he can find a loop connecting 1's across this new matrix such that: Exactly 6 1s are connected and every time a 1 is selected it must be from the same column or row (in an alternate manner). Initially, we can choose any element having 1 and next can choose any element within same row or column. Next element must be from the same column if previously it was from the same row hence every successive selection must be in an alternate manner.Two such paths are shown in the above image (q is taken 3). A path is considered unique if it has at least one node different in it.InputThe first line of each input test case contains 3 integers m (1 < m ≤ 12), n (1 < n ≤ 6) and q (1 < q ≤ 100)Next lines contain the matrix having m rows and n columnsOutputPrint an integer which tells the number of such paths possibleExampleInput:3 3 3\r\n1 2 3\r\n4 5 6\r\n7 8 9Output:18",
  "sample_input": "Input:3 3 3\r\n1 2 3\r\n4 5 6\r\n7 8 9Output:18",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/MAGMAT",
  "scraped_at": "2025-08-17 00:33:58",
  "test_cases": [
    {
      "input": "3 3 3\r\n1 2 3\r\n4 5 6\r\n7 8 9",
      "expected_output": "18",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3 5 4\n6 1 3\n5 5 3\n5 5 1",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "4 2 1\n1 3 3\n6 6 3\n6 6 2",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "3 2 2\n6 2 1\n4 2 2\n2 5 4",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "2 1 1\n3 4 5\n1 3 3\n4 4 6",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "4 4 3\n2 4 1\n1 6 2\n3 1 6",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "2 1 5\n6 2 2\n2 4 3\n1 3 5",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "3 3 3\n5 2 3\n4 6 6\n2 2 6",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "4 2 2\n2 2 5\n5 5 4\n2 1 4",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "2 2 1\n3 2 1\n2 3 3\n3 1 2",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "2 2 1\n1 3 3\n3 1 2\n2 3 2",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "3 2 3\n2 2 2\n2 2 1\n1 2 1",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "2 3 3\n2 1 3\n3 1 3\n2 2 2",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "3 3 3\n2 1 1\n3 3 2\n3 1 2",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "3 3 3\n1 3 3\n2 3 1\n1 1 3",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "2 3 2\n2 1 3\n3 2 3\n2 3 3",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "6 6 6\n6 6 6\n6 6 6\n6 6 6",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "6 6 6\n6 6 6\n6 6 6\n6 6 6",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 5 6\n2 1 5\n6 2 5\n2 5 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "6 2 5\n2 5 1\n2 6 2\n1 5 6",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:21",
  "total_test_cases": 20
}
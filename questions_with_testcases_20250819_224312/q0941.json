{
  "problem_code": "problems",
  "title": "Heptadecimal Numbers",
  "tags": [],
  "text": "The Factory of Computer Enhaced Numbers (FCEN) has asked its Development Comitee (DC) to come up with a way to handle numbers written in base 17 As everybody knows, base 17 is very important for many scientific applications, as well as for engineering and other practical uses. Numbers in base 17 can be tough, but are kind and soft if treated appropiately.Numbers in base 17 are written by using a set of 17 characters: digits 0 to 9 with their usual values, and uppercase letters A to G that have values from 10 to 16, respectively. Base 17, probably because its basement on a prime number, does not require numbers to start with a non-zero digit, so each number has many representations. For instance, the decimal number 117 can be written as 6F, but also as 06F or even 00000006F. Because of this leading-zeroes thing, heptadecimal numbers are hard to compare.As a member of the FCEN-DC, you were asked to write a program that helps in this difficult and challenging task.InputThe input contains several test cases. Each test case is described in a single line that contains two non-empty strings of at most 105heptadecimal digits, separated by a single space. The last line of the input contains two asterisks separated by a single space and should not be processed as a test case.OutputFor each test case output a single line with the sign “<” if the first heptadecimal number is smaller than the second one, the sign “>” if the first heptadecimal number is greater than the second one, or the sign “=” if both heptadecimal numbers are equal.ExampleInput:006F B3B\r\n0000 0\r\n* *Output:<\r\n=",
  "sample_input": "Input:006F B3B\r\n0000 0\r\n* *Output:<\r\n=",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/HEPNUM",
  "scraped_at": "2025-08-17 00:33:04",
  "test_cases": [
    {
      "input": "006F B3B\r\n0000 0\r\n* *",
      "expected_output": "<\r\n=",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "8 6\nn feuur\n8 3\npl jrq",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "5 7\nfbh uqigt\n3 4\nr fkkn",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "2 4\nul bdrnn\n3 8\nyrji vhdjs",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "97 86\nq ag\n79 35\nrfet flq",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "11 76\np xtyb\n22 18\nh jnha",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "47 83\neyf e\n6 12\nit zlw",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "46 91\nhv e\n2 88\nmphb iwf",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "94 71\ndlcn patd\n25 63\nbkfb fbece",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "436 209\nufbu hk\n433 89\nlqmg g",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "408 191\nigiq w\n52 314\ndwako mj",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "287 194\nmd p\n143 103\ngk a",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "436 422\npn ytotm\n456 299\nvo uo",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "351 119\nkfaxh h\n355 484\nh eqb",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "83 60\nwrzzu xnux\n362 254\nqjqwy tfiu",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "133 166\nlkrxi sfi\n380 372\nauqrw u",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\nhm tmmk\n1000 1000\ntvh irzx",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\nraxl ltm\n1000 1000\nlgf kfyo",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 999\nxcco wiij\n1 1000\nccyf f",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1000 1\nwq gyif\n1000 2\nm lhk",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:15",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Snooker",
  "tags": [],
  "text": "Consider a rectangular snooker table with pockets only at the 4 corners of the rectangle as shown in the image below. Consider all integer points on the boundary of the table. At each point, except the four corners (four pockets), you are allowed to hit the ball at an angle of45degrees from the side of the table from which you are hitting the ball.From any point on the boundary you can hit the ball in two directions and they are considered to be two different ways. For instance in the image shown below, from the point S the ball can be hit in two ways as shown.Given the dimensions of the board your task is to find the number of ways in which the ball can be hit so that iteventuallyreaches one of the four holes.Consider the ball to be of negligible size, like a point. Also assume that the ball does not lose energy due to collisions or friction - it keeps moving until it drops into a hole.InputThe input has multiple test cases. Each test case consists of two space separated integersMandN, 2 ≤ M, N ≤ 105, representing the dimensions of the table. M = N = 0 indicates the end of tests. There are at most 300 testcases.OutputFor each test case output the number of ways as described, in a separate line.ExampleInput:2 2\r\n2 4\r\n3 5\r\n0 0Output:0\r\n4\r\n24",
  "sample_input": "Input:2 2\r\n2 4\r\n3 5\r\n0 0Output:0\r\n4\r\n24",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/SNOOKER",
  "scraped_at": "2025-08-17 00:33:19",
  "test_cases": [
    {
      "input": "2 2\r\n2 4\r\n3 5\r\n0 0",
      "expected_output": "0\r\n4\r\n24",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1 9\n3 4\n3 1\n1 9",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "10 6\n6 8\n8 5\n9 9",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "2 8\n1 4\n2 4\n3 9",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "67 100\n5 36\n12 83\n93 69",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "79 17\n41 82\n67 25\n61 79",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "29 37\n80 55\n4 11\n44 57",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "89 67\n83 77\n62 35\n17 4",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "62 20\n6 99\n77 51\n73 18",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "51 11\n35 16\n7 35\n40 11",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "27 32\n11 41\n8 25\n18 10",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "37 32\n35 20\n45 21\n15 48",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "25 29\n52 15\n26 20\n35 11",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "45 30\n22 42\n49 43\n33 25",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "38 47\n28 47\n49 30\n10 51",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "30 13\n52 17\n41 32\n41 39",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "105 105\n105 105\n105 105\n105 105",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "105 105\n105 105\n105 105\n105 105",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 2\n1 2\n1 1\n2 105",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "105 104\n104 104\n104 105\n2 105",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:14",
  "total_test_cases": 20
}
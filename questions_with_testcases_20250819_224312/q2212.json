{
  "problem_code": "problems",
  "title": "Special Graph",
  "tags": [],
  "text": "You are given a directed graph with N vertices. The special thing about the graph is that each vertex has at most one outgoing edge. Your task is to answer the following two types of queries:1 adelete the only edge outgoing from vertex a. It is guaranteed that the edge exists. 1 ≤ a ≤ N.2 a boutput the length of the shortest path from vertex a to vertex b, if the path exists. Otherwise output \"-1\" without quotes. 1 ≤ a, b ≤ N.InputFirst line of input contains a natural number N ≤ 105the number of vertices in the graph.The following line contains N integer numbers, i-th number is next[i] (0 ≤ next[i] ≤ N), meaning that there is an edge from vertex i to vertex next[i]. If next[i] = 0, assume that there is no outgoing edge from vertex i.Third line contains a natural number M ≤ 105the number of queries.The following M lines contain a query each. Queries are given in the manner described above.OutputOn the i-th line output the answer for the i-th query of type 2 a b.ExampleInput:6\r\n3 3 4 5 6 4\r\n6\r\n2 1 6\r\n2 1 4\r\n2 1 2\r\n1 3\r\n2 1 6\r\n2 1 4Output:4\r\n2\r\n-1\r\n-1\r\n-1",
  "sample_input": "Input:6\r\n3 3 4 5 6 4\r\n6\r\n2 1 6\r\n2 1 4\r\n2 1 2\r\n1 3\r\n2 1 6\r\n2 1 4Output:4\r\n2\r\n-1\r\n-1\r\n-1",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/SPECIALG",
  "scraped_at": "2025-08-17 00:33:48",
  "test_cases": [
    {
      "input": "6\r\n3 3 4 5 6 4\r\n6\r\n2 1 6\r\n2 1 4\r\n2 1 2\r\n1 3\r\n2 1 6\r\n2 1 4",
      "expected_output": "4\r\n2\r\n-1\r\n-1\r\n-1",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5\n3\n7\n2\n1\n8",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "3\n4\n8\n5",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n5\n6\n9\n8\n3",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "18\n98491933\n66864536\n97965250\n44560051\n78935582\n60097933\n41920870\n46139120\n47901033\n58915241\n27162694\n62012745\n36024800\n94517609\n4579026\n16582808\n3720179\n26826782",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "13\n54827051\n30609841\n28195081\n36648339\n9454374\n28798581\n65492771\n50512821\n91305299\n34020856\n25569859\n43048490\n11321136",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "17\n77537509\n64074345\n79381389\n22690171\n2168199\n68722385\n13103897\n26642731\n22754515\n55799718\n43739862\n82092907\n96023252\n49583466\n79128003\n72493708\n76337797",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "12\n79103633\n58040362\n75408502\n78554396\n97279715\n24123341\n59311897\n3763336\n89843713\n90051878\n3226472\n76166538",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "6\n32239689\n98594006\n37202778\n48104192\n96848656\n49143343",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "101\n11370\n20938\n75972\n40095\n68770\n51992\n35993\n50470\n38705\n86727\n96623\n54867\n43441\n45088\n37069\n83007\n71546\n31285\n89540\n72264\n8883\n31768\n35929\n48505\n49835\n35010\n73601\n79847\n35510\n51145\n37805\n35946\n12945\n65572\n79279\n83396\n10469\n30068\n20485\n85696\n86955\n7416\n7107\n95455\n47253\n2477\n56723\n94742\n11454\n4433\n17466\n14315\n16492\n65924\n93211\n50133\n77030\n67673\n19925\n59520\n44252\n54737\n38089\n35050\n82220\n94466\n4878\n5296\n61723\n45803\n89115\n6374\n40293\n62782\n77555\n76792\n22598\n76434\n89214\n62996\n56890\n82281\n72938\n24245\n35068\n28641\n11302\n82141\n88092\n32251\n47598\n65440\n40015\n23809\n33348\n90135\n59314\n46991\n43047\n38555\n2259",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "23\n98111\n34556\n41891\n98796\n11600\n5871\n72143\n39989\n60547\n91103\n32106\n24611\n88780\n91675\n44787\n74362\n24440\n39090\n21151\n63493\n20620\n43044\n12714",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "39\n77500\n49112\n15850\n78794\n89266\n315\n45834\n9221\n52990\n57083\n66528\n72658\n52057\n46530\n4041\n89947\n60172\n72561\n99200\n352\n96360\n68116\n47025\n41348\n39794\n13470\n49941\n47604\n5773\n6930\n19029\n85603\n14955\n11555\n31377\n43654\n41049\n86994\n73",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "75\n1857\n25904\n57309\n25346\n77871\n48656\n55492\n26111\n21908\n4841\n56673\n55666\n11344\n84830\n54390\n41163\n92240\n99248\n1247\n12457\n36010\n42987\n25582\n32680\n10146\n95280\n80474\n18966\n63252\n21653\n29390\n9395\n61230\n16637\n80973\n8635\n56958\n40986\n3519\n18243\n48166\n62026\n85205\n98927\n14174\n9973\n46599\n59510\n27271\n90983\n44966\n32545\n49646\n162\n91155\n23767\n73080\n47171\n61053\n83703\n25050\n36788\n83699\n82327\n87856\n22484\n77446\n26109\n79281\n4306\n20199\n25297\n89177\n87062\n90363",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "75\n29463\n13823\n28791\n49381\n24518\n14402\n29874\n64749\n16053\n94479\n85708\n39278\n63300\n81740\n40308\n91991\n49456\n77756\n25721\n60995\n71428\n80558\n77884\n37133\n12405\n11450\n19230\n3393\n62749\n15210\n58091\n74896\n18938\n43248\n83878\n45776\n79904\n738\n19376\n90779\n63807\n38592\n2892\n33481\n55551\n75998\n54856\n33026\n49424\n65097\n14697\n36537\n48332\n98966\n66142\n78521\n9303\n98284\n96316\n2674\n67826\n60526\n84153\n80455\n29072\n93408\n26590\n70234\n33406\n37472\n1868\n86064\n759\n39929\n4133",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "42\n17929\n91740\n36970\n13373\n78240\n34657\n53724\n81353\n3934\n3096\n67778\n12165\n84127\n38154\n39628\n427\n26219\n97187\n14914\n52489\n64987\n8914\n71821\n67452\n25971\n14971\n95551\n52980\n40455\n51998\n3102\n18928\n54300\n52384\n2894\n23218\n19275\n70623\n87586\n43259\n15074\n46007",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "40\n9807\n35735\n40231\n83368\n7642\n34502\n15805\n17063\n38603\n8592\n6655\n14282\n28697\n84480\n79481\n7029\n58255\n98368\n44105\n98958\n35480\n20213\n76820\n38736\n53023\n80523\n94214\n48968\n56868\n17644\n52970\n94620\n96030\n92159\n9393\n99947\n70357\n31125\n88829\n71828",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "105\n25800817\n23348041\n95476334\n31693482\n70158800\n72771813\n83864688\n37702617\n74369488\n50118102\n51456407\n1750131\n98005287\n32501799\n18520038\n9173368\n47208408\n40973011\n65113935\n9857772\n1606060\n39295466\n73610662\n46598244\n16732066\n85687332\n56933294\n26178761\n3559753\n91754162\n20612494\n27238867\n80725338\n54535014\n95975424\n32203710\n74965020\n80179024\n40546962\n90247028\n49384842\n72958820\n23156991\n69272178\n18597256\n7544066\n73834408\n85179447\n5934066\n77697986\n40628904\n95575320\n8610502\n26118951\n37125088\n6478763\n83118806\n83237910\n54259325\n69854109\n3583112\n90223036\n65175361\n28817958\n90410291\n52472714\n94656264\n95128638\n543914\n73974953\n56225803\n12375324\n47052637\n50565793\n99158529\n13865279\n69969666\n3579772\n65582693\n3523959\n69184599\n8926863\n46748622\n73202813\n94976406\n7650504\n46115238\n69027996\n37014595\n66668886\n69505902\n67027847\n98090795\n21679460\n5927551\n95493688\n29778532\n38508192\n24170700\n83346971\n6460341\n68915831\n16148170\n68787812\n35479716",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "105\n15824270\n27087559\n90153506\n16596481\n74659701\n23299349\n77511291\n47333644\n60408164\n54319590\n63496540\n47267930\n85341460\n21433862\n3563109\n62704238\n51417259\n22614145\n42551075\n64418375\n57689388\n35212811\n27103824\n31901062\n22404107\n59006425\n21421203\n47500857\n40338197\n98996343\n64972837\n91375847\n20174420\n80050816\n51423412\n18990895\n17755241\n35321510\n4977203\n60912903\n36392919\n27525282\n20905425\n82396137\n29927894\n44741296\n51487110\n39241509\n4215030\n37724481\n33244319\n63305864\n94991678\n16350209\n71790366\n41234742\n87978960\n56182852\n70034886\n17384949\n22511929\n90475235\n53329155\n26087944\n61339877\n62197516\n93008622\n23479190\n38972275\n51870237\n1008678\n28611767\n38793089\n33594805\n63492798\n53276479\n11565874\n67137336\n19205017\n26676977\n35416964\n17651374\n67450481\n200982\n34158417\n61827537\n56339267\n43112335\n48947598\n61186914\n53066744\n44944920\n93878317\n26400933\n25707312\n84246630\n18143125\n44475162\n24595492\n77724435\n66719330\n14860230\n41820880\n92493751\n47398613",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "105\n1\n100000000\n42287298\n96964624\n1\n100000000\n97992131\n1\n100000000\n1\n100000000\n100000000\n1\n100000000\n1\n1\n1\n100000000\n18319207\n81415891\n100000000\n1\n1\n1\n42626590\n86935953\n1\n73503953\n84014124\n100000000\n10807544\n100000000\n46530919\n1\n100000000\n100000000\n90817426\n1\n1\n8765914\n1\n100000000\n100000000\n59996852\n100000000\n1\n54640864\n1\n100000000\n100000000\n1\n58726989\n100000000\n1\n57226109\n29535212\n100000000\n100000000\n76649878\n100000000\n14093984\n4978264\n1\n86850680\n100000000\n75964347\n1\n15050824\n30369589\n47772575\n100000000\n100000000\n1\n50950505\n40256021\n1\n100000000\n100000000\n1\n100000000\n1\n1\n94687167\n69204196\n70875380\n20384592\n1\n100000000\n1\n100000000\n10020014\n47875943\n1\n1\n49046710\n100000000\n1\n1\n100000000\n1\n1\n36126175\n1\n100000000\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 105)"
    },
    {
      "input": "105\n77952567\n1\n30791846\n100000000\n1\n100000000\n1\n100000000\n48722801\n1\n29628608\n20231756\n1\n100000000\n100000000\n11014691\n44305894\n64022191\n96414208\n100000000\n100000000\n75394362\n100000000\n96650085\n100000000\n1\n3620688\n1\n14564403\n1\n1\n100000000\n100000000\n1\n100000000\n45999996\n12725342\n1\n100000000\n1\n100000000\n48188091\n23963159\n99260033\n100000000\n1\n44055278\n61635783\n100000000\n1\n1\n100000000\n5609344\n100000000\n1\n100000000\n1\n100000000\n90416881\n58195458\n1\n100000000\n85503263\n65748316\n1\n87599833\n1\n100000000\n1\n37433817\n100000000\n42406431\n20727622\n1\n23273956\n82347947\n19728768\n100000000\n100000000\n43866220\n1\n96201865\n55864410\n1\n98971598\n100000000\n100000000\n100000000\n1\n1\n100000000\n100000000\n1\n32577603\n43633763\n100000000\n32544616\n100000000\n429473\n47953114\n100000000\n97696039\n88070808\n1\n87077107",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 105)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:19",
  "total_test_cases": 20
}
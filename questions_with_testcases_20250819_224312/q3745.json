{
  "problem_code": "problems",
  "title": "Matrix inverse",
  "tags": [],
  "text": "Let p a prime number. A set Fp={0, 1 ... p-1} equipped with the mod p addition and multiplication is a finite field. In this problem you have to compute the multiplicative inverse of some Fpvalued (quadratic) matrices.The input consists of blocks. The structure of a block is:n pA1, 1... A1, n...An, 1... An, nwhere p is a prime number, 1ij are in Fp. The last block followed by 0 0.The output for each block is either the multiplicative inverse of a given matrix if it exists or the word \"singular\"ExampleInput:4 21 1 1 11 1 0 10 0 0 10 1 0 13 73 5 00 5 16 6 62 21 11 03 54 0 02 4 10 2 33 70 1 46 1 22 1 10 0Output:0 1 0 10 0 1 11 1 0 00 0 1 06 3 35 1 13 3 20 11 1singularsingular",
  "sample_input": "Input:4 21 1 1 11 1 0 10 0 0 10 1 0 13 73 5 00 5 16 6 62 21 11 03 54 0 02 4 10 2 33 70 1 46 1 22 1 10 0Output:0 1 0 10 0 1 11 1 0 00 0 1 06 3 35 1 13 3 20 11 1singularsingular",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/MIFF",
  "scraped_at": "2025-08-17 00:34:31",
  "test_cases": [
    {
      "input": "4 21 1 1 11 1 0 10 0 0 10 1 0 13 73 5 00 5 16 6 62 21 11 03 54 0 02 4 10 2 33 70 1 46 1 22 1 10 0",
      "expected_output": "0 1 0 10 0 1 11 1 0 00 0 1 06 3 35 1 13 3 20 11 1singularsingular",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "8 6 5 2 10 4 7 4 9 7 6 1 9 9 7 6 7 2 5 4 5 8 1 2 7 4 8 9 3 9 10 10 8 7 1 7 9 5 1",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "5 9 4 10 4 5 9 2 4 6 7 10 5 8 1 6 2 5 5 8 9 8 10 3 6 4 3 3 4 9 10 5 8 10 6 10 5 5 9",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "3 5 10 2 5 7 1 4 6 8 4 1 2 4 8 7 6 8 2 2 10 1 6 5 8 6 2 2 5 7 10 2 7 10 3 6 2 5 2",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "39 88 81 89 12 67 99 8 26 57 61 49 76 48 5 78 45 23 95 21 96 46 100 85 87 93 55 15 33 54 16 20 89 36 22 14 55 22 53",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "17 48 17 97 82 8 59 100 4 70 96 25 49 84 22 58 24 99 93 92 3 72 89 46 8 43 18 99 98 90 35 83 58 79 68 31 48 80 73",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "15 88 48 3 51 84 5 28 36 71 96 88 9 60 33 12 71 68 55 2 46 2 30 39 32 86 5 7 97 71 39 36 81 40 24 7 43 62 65",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "8 88 1 14 30 14 73 37 5 17 96 76 91 41 71 82 83 84 15 62 5 1 55 53 77 69 9 48 67 51 26 39 17 86 21 11 67 21 42",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "1 28 21 33 75 27 77 66 59 10 85 40 89 47 1 78 86 12 12 35 37 83 42 56 61 4 64 41 18 10 81 89 63 34 67 65 88 60 99",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "225 450 480 416 114 299 260 367 157 212 349 189 243 430 366 70 142 374 231 428 371 308 236 75 274 369 194 380 313 300 112 68 349 66 197 130 468 209 345",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "211 151 132 75 204 435 397 353 118 104 357 431 218 459 390 182 261 224 220 96 170 128 72 121 473 182 197 395 143 80 287 168 80 347 313 87 66 96 433",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "268 471 297 338 107 334 353 307 265 194 259 334 111 319 452 460 152 142 65 139 443 247 185 256 235 444 444 137 477 360 171 72 291 249 490 397 384 113 430",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "197 373 468 319 499 68 437 430 306 201 176 271 481 139 234 80 226 191 327 341 464 303 421 439 475 190 231 450 63 362 143 498 289 157 183 145 294 238 125",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "121 418 199 383 281 155 345 285 215 474 58 149 87 214 258 419 56 318 278 164 248 456 343 258 295 299 67 329 239 234 422 271 73 298 159 243 188 254 346",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "83 133 457 51 63 190 148 215 412 137 108 313 133 473 467 464 450 109 313 100 171 351 418 87 379 173 155 341 280 147 137 301 241 218 260 434 294 279 325",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "96 217 383 352 396 126 187 421 315 335 493 87 230 459 424 378 230 456 465 146 433 172 274 65 356 273 463 465 90 153 265 242 55 220 280 478 280 266 495",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "999 2 999 2 999 2 999 1 1000 999 1 1000 2 1 2 1000 2 1000 1000 999 1 2 1 1000 1000 999 2 2 999 2 999 2 1000 1000 1 1 2 1000 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "999 999 1 2 2 1000 1000 1000 2 2 1000 1 999 999 2 1000 1000 1000 1 1000 1 999 1 999 999 999 2 2 1000 1 1000 1 999 1000 1 1000 999 1000 1000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:24",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Find Lexicographically Smallest Permutation",
  "tags": [],
  "text": "You are given n numbers a1, a2, ... an. You have to permute the numbers in such a way that resulting permutation should be lexicographically smallest . But there is a problem, you can not swap every pair of numbers. You can only swap the position i and j if they are good position. You will be given m pairs of i and j's which will denote good positions.So complying to restrictions posed here, find the lexicographically smallest permutation of a1, a2 ... an.Definition:Â  (a1, a2 ... an) is lexicographically smaller than (b1, b2 ... bn) if first index i where ai and bi differs, ai < bi satisfies.eg. (1, 2, 3, 4) is smaller than (2, 1, 3, 4)InputT : number of test cases (T <= 10)Next Line will contain n and m. (1 <= n <= 10^3 and 0 <= m <= min (n * (n - 1) / 2, 10^5).Next Line will contains a1, a2, ... an. (a[i] >= 1 && a[i] <=10^6)For next m lines, each line will contain i, j separated by space which will denote that you can swap ai and aj.OutputFor each test case, output n numbers representing the permutation of a1, a2 ... an according to problem statement.ExampleInput:23 13 2 12 34 22 4 3 11 33 4Output:3 1 21 4 2 3",
  "sample_input": "Input:23 13 2 12 34 22 4 3 11 33 4Output:3 1 21 4 2 3",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/IITKWPCI",
  "scraped_at": "2025-08-17 00:33:49",
  "test_cases": [
    {
      "input": "23 13 2 12 34 22 4 3 11 33 4",
      "expected_output": "3 1 21 4 2 3",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2 2 6 5 5 6 3 5 7 3 7",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "1 5 7 1 9 2 2 5 4 8 6",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "3 3 1 7 3 8 3 10 4 7 6",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "16 81 73 43 55 71 55 24 81 99 73",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "13 95 29 40 99 42 40 54 39 95 29",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "8 42 79 18 56 83 96 78 31 9 8",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "46 38 46 59 20 89 91 64 33 58 86",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "87 12 4 23 45 81 24 74 15 76 7",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "261 184 257 484 207 294 221 181 486 123 425",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "139 74 337 411 370 198 360 203 348 432 490",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "358 336 399 223 401 73 470 259 241 120 257",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "377 134 420 122 483 488 356 492 190 475 401",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "401 214 363 96 143 412 398 368 287 424 346",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "485 249 102 474 418 334 473 379 477 440 261",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "113 478 142 92 63 212 387 203 95 146 192",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 1000 999 1000 1000 1 1 1 1 999 1000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 1 1000 1000 1 2 1000 1 999 1 999",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:18",
  "total_test_cases": 20
}
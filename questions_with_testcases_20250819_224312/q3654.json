{
  "problem_code": "problems",
  "title": "Arrangement Validity",
  "tags": [],
  "text": "n persons are standing in a line. Height of each person is between 1 and n and height of each person is distinct.You a given array A where A[i] denotes how many persons are before i'th person having heights greater than H[i]. eg. For person 2, person 1 is considered before him. If A is given to be [0, 1] then one valid arrangements of height could be [2, 1] as number of persons having height greater than 1 before 2 are 1 because H[1] > H[2].You have to find out whether this array can be valid for some arrangement of persons. If you can uniquely do so, then find out the array H. Otherwise output -1.InputFirst line contains T : number of test cases. (1 ≤ T ≤ 20).For each test First line contains an integer n. (1 ≤ n ≤ 105)Next line contains n space separated integers denoting A[i]. (0 ≤ A[i] ≤ n)OutputFor each test case output single lineIf there is a unique way of H. Then print n space separated integers in the line.Otherwise output -1.In starting of each test case also put \"Test : testNumber\" (without quotes). Note that there is one space before the colon and one space after the colon.ExampleInput:230 1 130 1 0Output:Test : 13 1 2Test : 22 1 3",
  "sample_input": "Input:230 1 130 1 0Output:Test : 13 1 2Test : 22 1 3",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/IITWPC4D",
  "scraped_at": "2025-08-17 00:34:22",
  "test_cases": [
    {
      "input": "230 1 130 1 0",
      "expected_output": "Test : 13 1 2Test : 22 1 3",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "9 1 1 9 5",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "1 4 8 10 10",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "6 5 7 1 1",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "99 93 97 82 96",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "65 37 59 64 49",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "70 37 44 12 29",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "3 85 81 69 24",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "10 11 90 18 31",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "22 9 32 30 12",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "25 5 29 17 46",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "5 43 11 50 9",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "32 44 20 38 42",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "48 12 20 28 19",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "24 30 40 43 45",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "45 24 10 31 17",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "105 105 105 105 105",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "105 105 105 105 105",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "105 1 2 2 105",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "104 105 1 1 104",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:24",
  "total_test_cases": 20
}
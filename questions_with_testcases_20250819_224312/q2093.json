{
  "problem_code": "problems",
  "title": "Lights",
  "tags": [],
  "text": "John hasnlight bulbs and a switchboard withnswitches; each bulb can be either on or off, and pressing thei−th switch changes the state of bulbifrom on to off, and viceversa. He is using them to play a game he has made up. In each move, John selects a (possibly empty) set of switches and presses them, thus inverting the states of the corresponding bulbs. Initially all lights are off, and after exactlymmoves John would like to have the firstvbulbs on and the rest off; otherwise he loses the game. There is only one restriction: he is not allowed to press the samesetof switches in two different moves.This is quite an easy game, as there are lots of ways of winning. This has encouraged him to keep playing different winning games, and now he is intent on trying them all. Help him count how many ways of winning there are. Two games are considered the same if, after a reordering of the moves in one of them, at every step the same set of switches is pressed in both of them.For example, ifn= 4,m= 3, andv= 2, one possible winning game is obtained by pressing switches 1, 2 and 4 in the first move, 1 and 3 in the second one, and 1, 3 and 4 in the last one. This is considered equivalent to, say, first pressing 1 and 3; then 1, 2, 4; and then 1, 3, 4.InputThe input has at most 500 lines, one for each test case. Each line contains three integersn(1 ≤n≤ 1 000),m(1 ≤m≤ 1 000), andv(0 ≤v≤n). The last line of input will hold the values0 0 0and must not be processed.OutputPrint one line for each test case containing the number of ways John can play the game, modulo the prime 10 567 201.ExampleInput:3 3 1\r\n6 4 0\r\n6 4 3\r\n0 0 0Output:7\r\n10416\r\n9920Problem setter: David García Soriano",
  "sample_input": "Input:3 3 1\r\n6 4 0\r\n6 4 3\r\n0 0 0Output:7\r\n10416\r\n9920",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/LIGHTS2",
  "scraped_at": "2025-08-17 00:33:52",
  "test_cases": [
    {
      "input": "3 3 1\r\n6 4 0\r\n6 4 3\r\n0 0 0",
      "expected_output": "7\r\n10416\r\n9920",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "8 5 5\n8 4 6\n5 2 4\n8 1 10",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "4 3 7\n8 8 10\n4 2 8\n5 3 7",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "9 1 5\n6 1 7\n9 10 2\n1 1 4",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "82 78 41\n92 6 56\n46 85 36\n86 8 41",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "14 7 5\n28 89 13\n20 26 14\n51 64 32",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "50 24 49\n89 16 51\n25 22 4\n14 69 32",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "6 16 98\n70 85 21\n33 60 18\n68 68 26",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "73 31 9\n10 50 41\n5 33 89\n55 55 85",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "257 175 153\n115 371 462\n147 382 183\n98 376 170",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "293 290 378\n482 423 118\n220 167 175\n117 97 160",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "303 86 164\n181 472 421\n473 469 358\n180 174 249",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "245 159 304\n273 80 158\n420 77 315\n237 81 297",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "50 384 330\n481 67 393\n113 265 378\n100 420 144",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "252 189 454\n175 418 117\n261 74 239\n244 260 91",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "437 56 380\n357 55 251\n150 420 340\n378 482 492",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 1 2\n1 999 1\n999 1 2\n1 999 1000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "999 1000 999\n1 2 1000\n999 2 2\n999 1000 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:19",
  "total_test_cases": 20
}
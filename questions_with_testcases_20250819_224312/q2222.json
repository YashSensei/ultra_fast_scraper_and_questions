{
  "problem_code": "problems",
  "title": "BATMAN2",
  "tags": [],
  "text": "Alfred: \"I'll get this to Mr. Fox, but no more. I've sewn you up, I've set your bones, but I won't bury you. I've buried enough members of the Wayne family.\"After being promised the software to erase her criminal record, Catwoman agrees to take Batman to Bane. They manage to defeat all of Bane's men but ended up heading into a MAZE trap. Bane would call this maze as the LIS MAZE. He would hide himself in one of the rooms. Each of these rooms have a number (tag) associated with it. The speciality of the maze is that once you enter any room it will only lead you to rooms with a higher tag in the direction you move. Batman and Catwoman decide to move in opposite directions trying their luck to maximize the number of rooms they search. (They can start with any room, need not be the same)Catwoman: \"Never steal from someone you can't outrun, kid.\"Inputt, number of test cases.n, number of rooms.n integers giving the tag associated with the rooms.OutputThe maximum number of rooms searched.Constraints1 ≤ n ≤ 100ExampleInput:1\r\n6\r\n5 3 4 6 1 2Output:5",
  "sample_input": "Input:1\r\n6\r\n5 3 4 6 1 2Output:5",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/BAT2",
  "scraped_at": "2025-08-17 00:33:48",
  "test_cases": [
    {
      "input": "1\r\n6\r\n5 3 4 6 1 2",
      "expected_output": "5",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5\n10\n9\n2\n4\n8",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "4\n1\n7\n8\n9",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n2",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "19\n96951046\n23221329\n45843784\n96055472\n88505715\n97049138\n57660456\n93004235\n64162636\n66886299\n71169559\n47350675\n77220808\n40965812\n60259805\n37447943\n31925136\n46326104\n19698656",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "10\n62190843\n74003258\n83303560\n21334721\n45290550\n99857901\n51420764\n18951546\n34651976\n51531790",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "10\n73575998\n52500351\n55869257\n73685504\n52292896\n86192919\n29699043\n43626656\n37596237\n41584131",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "20\n4651027\n1416353\n86582896\n42049012\n81063519\n3713315\n71234422\n8735746\n733502\n5110541\n8499151\n45332243\n39847782\n29508041\n38411314\n18460354\n79023046\n39522751\n53907613\n61464773",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "16\n98100166\n70143557\n54173347\n49177328\n76840542\n18236059\n83186947\n7286920\n1428927\n85067393\n3119067\n76485556\n84329057\n50285011\n77944278\n58821009",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "90\n54642\n87141\n49550\n57711\n65251\n35722\n25863\n92229\n71387\n24492\n48119\n79282\n18504\n24722\n73885\n92646\n10539\n89321\n66774\n31517\n10476\n79091\n23846\n82794\n36142\n5356\n71615\n55696\n36001\n38582\n38055\n25377\n15054\n43792\n39567\n89358\n48090\n38173\n77068\n72745\n24865\n29482\n58397\n2960\n98051\n40828\n73713\n88076\n38512\n52079\n38620\n26744\n1039\n76840\n69965\n12609\n8898\n67396\n75504\n24731\n13709\n90613\n53019\n31330\n95238\n13676\n7825\n88461\n41984\n18856\n17047\n21293\n50900\n74346\n45067\n30950\n71016\n20120\n86200\n62257\n28139\n6759\n19055\n36065\n85175\n31981\n95963\n63756\n256\n94443",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "49\n11447\n21846\n46137\n93622\n21874\n4256\n60470\n32291\n13647\n73018\n32583\n86069\n74319\n48789\n34167\n9404\n59913\n49612\n83707\n91312\n50783\n87304\n70888\n84176\n99680\n64983\n5946\n62274\n41106\n30142\n18332\n62043\n22934\n94121\n13239\n83653\n90963\n7776\n69654\n83168\n53971\n31405\n98494\n81009\n46645\n75015\n33011\n43029\n6804",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "76\n15414\n85269\n32956\n49467\n37566\n14753\n53292\n88055\n97034\n18849\n84246\n32078\n32681\n76081\n39905\n27671\n57494\n44598\n85504\n79440\n36328\n82910\n48814\n34180\n20916\n33455\n77063\n36646\n9177\n21876\n46492\n3219\n43769\n88722\n4955\n88398\n24136\n34188\n71354\n685\n57521\n82886\n3666\n81408\n40480\n57441\n76073\n71085\n44555\n42581\n5543\n6102\n93038\n64805\n91529\n79126\n80210\n92681\n8453\n89571\n1533\n36600\n60303\n56532\n94395\n15653\n50302\n30357\n25899\n79445\n71095\n38922\n19967\n15942\n31568\n76815",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "58\n10124\n14526\n41177\n64925\n18171\n90879\n51505\n18170\n97303\n42488\n19859\n87216\n17342\n82145\n90344\n54382\n30083\n88728\n37430\n1087\n68404\n38577\n3595\n8160\n26088\n35617\n92597\n50201\n58726\n35740\n9895\n25875\n64444\n18397\n78418\n69129\n33694\n7316\n66761\n34108\n38625\n67846\n22838\n53287\n46485\n78838\n3217\n9522\n75144\n21545\n32212\n89342\n87289\n70660\n64655\n14768\n38975\n52919",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "84\n62368\n25618\n24443\n7732\n72184\n14739\n65072\n93127\n84886\n71852\n94998\n43467\n23023\n28493\n18876\n53697\n34909\n70812\n50442\n11281\n38289\n12137\n95001\n20728\n63879\n75197\n51232\n97005\n33604\n14214\n82556\n91769\n85184\n81830\n47661\n31122\n98108\n46252\n35029\n69248\n69474\n43266\n33887\n65768\n68876\n19901\n92944\n33869\n94130\n84788\n10862\n37619\n70641\n30704\n5811\n64313\n34798\n12926\n67712\n34311\n50485\n11761\n87718\n70037\n37322\n24304\n26934\n84397\n73831\n91533\n67463\n143\n70096\n41086\n2239\n69595\n69183\n11215\n40125\n91664\n49590\n13984\n70941\n958",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "74\n50492\n7620\n13862\n40558\n9715\n18737\n19070\n43400\n11106\n39918\n47610\n84963\n27346\n5611\n56594\n35948\n67744\n49772\n64404\n78706\n89266\n88955\n99897\n85581\n46842\n65509\n14206\n65192\n79860\n67276\n23658\n41830\n91746\n87376\n28653\n48770\n88201\n1518\n11999\n63804\n56776\n77773\n27565\n85801\n15875\n41451\n95109\n87843\n64627\n12270\n81534\n84857\n95740\n87893\n6408\n71340\n2616\n64188\n69911\n94359\n60962\n98493\n50923\n62762\n32704\n56451\n17366\n90428\n1288\n31136\n71681\n38284\n24455\n52198",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "66\n96287\n44691\n49721\n34276\n17561\n69401\n17743\n80602\n98822\n96049\n92151\n84653\n73495\n14701\n67744\n91024\n39344\n14992\n47184\n86522\n12159\n45766\n68707\n87897\n82986\n82321\n77661\n10258\n63400\n41874\n64151\n79213\n18594\n604\n58001\n34541\n13367\n66428\n42931\n31887\n6871\n12472\n58968\n90177\n61973\n55469\n2841\n32535\n87527\n78371\n21383\n88105\n25940\n42075\n66876\n33228\n78273\n52698\n69107\n11082\n96906\n9899\n7262\n74482\n81487\n39546",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "100\n73297610\n85250500\n50568758\n27894064\n69678945\n86178729\n54635961\n51369043\n6288204\n87822147\n88077956\n40050155\n57731666\n41344425\n87317321\n51856954\n57078939\n88142194\n21337940\n74730776\n43818435\n88563982\n4562967\n49454123\n23351026\n88011751\n80927056\n56217393\n98168287\n66460089\n72582776\n90590877\n50752635\n21339357\n6760769\n97178055\n25581003\n2229070\n37548018\n9689761\n36742901\n32670160\n84137867\n51526278\n35212197\n86050007\n98392039\n76418937\n33699646\n56395387\n36868843\n41308049\n16610348\n75417147\n50198746\n4964558\n74065468\n55763963\n60187493\n29147906\n2587556\n98112732\n27608383\n43902909\n10701706\n5728045\n91923045\n59557240\n49595493\n5101395\n76520143\n63228296\n4630353\n48507481\n32420882\n11039058\n73730669\n89442791\n43637334\n37217047\n87888810\n99784990\n66786779\n84316781\n11415852\n8080308\n7720043\n68149871\n64109753\n57668991\n8999421\n81976179\n24372680\n56323619\n63118451\n43255278\n68563033\n82968833\n13659695\n70956647",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "100\n89074347\n76531308\n80641387\n78524685\n23022769\n59008357\n37692173\n74801031\n96122411\n15097356\n17375456\n2193592\n63031573\n27274163\n21810675\n75327667\n62797004\n98234372\n36312921\n2382378\n12859172\n93392918\n47839724\n1770085\n24909944\n4795810\n99180384\n61050677\n16367691\n47382803\n97263669\n1004779\n38974190\n69788669\n94398973\n42062282\n69276768\n50975388\n41259554\n52813844\n75302555\n48083762\n61964662\n31421771\n13552598\n44777117\n3691425\n14646676\n97511593\n11795698\n74867497\n69095504\n99797171\n219759\n54044611\n5859499\n42119094\n67779127\n32359756\n66573422\n67883881\n76520528\n46647709\n83876235\n20728711\n55070575\n26792555\n34343054\n67085621\n6666351\n13921837\n25866109\n78727772\n49766089\n35870542\n97764649\n94854375\n56745078\n47355354\n44684952\n62254628\n89269754\n25543471\n97167616\n82279536\n41781541\n31155608\n33153669\n39040747\n23363237\n48347015\n46480543\n23968012\n16951420\n3709755\n24457563\n34590607\n96114973\n45869024\n78295267",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "1\n70167332",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 1)"
    },
    {
      "input": "1\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 1)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:19",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Counting in a DAG",
  "tags": [],
  "text": "You are given a weightedDAG. For each vertex, calculate the sum of the weights of the vertices within its reach (including itself).InputThe first line contains an integer T, denoting the number of test cases.For each test case, the first line contains two positive integers n and m, denoting the number of vertices and the number of edges in the DAG.The second line contains n positive integers w1..wn, denoting the weights of vertices.The next m lines contain two positive integers u,v, denoting an edge from u to v.OutputFor each test case, print a line consisting of n numbers, denoting the sum for each vertex.ExampleInput:24 3510 713 383 9904 14 22 14 4450 379 230 5203 42 42 32 4Output:510 1223 383 2213450 1129 750 520ConstraintsInput Set 1: numberOfTestCases <= 40, n <= 100, m <= 10000Input Set 2: numberOfTestCases <= 2, n <= 1000, m <= 500000Input Set 3: numberOfTestCases <= 2, n <= 20000, m <= 500000The weights are no more than 1000",
  "sample_input": "Input:24 3510 713 383 9904 14 22 14 4450 379 230 5203 42 42 32 4Output:510 1223 383 2213450 1129 750 520",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/DAGCNT2",
  "scraped_at": "2025-08-17 00:33:27",
  "test_cases": [
    {
      "input": "24 3510 713 383 9904 14 22 14 4450 379 230 5203 42 42 32 4",
      "expected_output": "510 1223 383 2213450 1129 750 520",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2 9 1 1 9 10 9 2 1 1 10 3 5 1 2 7",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "9 5 2 10 3 9 8 5 2 3 1 10 8 3 5 3",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "8 5 7 9 2 2 3 4 6 8 8 6 8 1 8 1",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "66 14 43 50 72 51 59 25 49 41 2 81 39 24 4 75",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "37 39 10 42 23 30 100 64 84 96 83 24 80 66 73 45",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "42 87 83 73 77 5 66 99 31 56 51 77 2 37 69 88",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "93 54 14 34 48 18 9 31 49 89 30 93 19 35 1 14",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "89 31 29 42 56 57 26 51 90 49 75 2 33 56 73 21",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "85 152 260 348 258 169 414 247 464 373 370 385 83 374 116 186",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "108 111 65 77 325 235 194 65 297 425 323 170 222 332 352 170",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "497 104 281 139 91 200 184 179 447 313 334 441 314 124 51 225",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "143 382 357 170 224 106 457 258 347 242 251 364 453 266 75 158",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "463 66 396 232 324 399 471 206 145 230 106 484 365 126 454 433",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "355 162 107 149 374 107 366 186 228 310 169 414 164 294 369 433",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "194 331 303 353 109 255 180 353 194 208 156 156 85 310 483 363",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 1 999 1000 2 2 1 1000 2 1000 1 999 1 1000 1 1000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "999 2 1 999 1000 999 1 2 1 1 999 1 999 1 1 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:17",
  "total_test_cases": 20
}
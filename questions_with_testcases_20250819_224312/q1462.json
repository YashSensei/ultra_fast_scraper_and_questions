{
  "problem_code": "problems",
  "title": "Domino",
  "tags": [],
  "text": "You have ann×mrectangle, some cells have some obstacles in. A domino piece is a 1 × 2 or 2 × 1 rectangle. You're going to place some domino pieces in this rectangle so that there's no empty cell is covered more than once and no cell with obstacles is covered. For some unknown reason, you have to ensure there's at least one piece covering some cell in row i and some cell in row i+1 at the same time for all i in 1 ...n-1. Similarly there's at least one piece covering some cell in column i and column i+1 for all i in 1 ...m-1. Your task is to count the number of different valid domino covering.InputThe first line of the input contains two integer numbersn,m(1 ≤n,m≤ 15).The followingnlines describe the rectangle. Each line containsmcharacters. The j-th character of line i+1 may be either a 'x' (ASCII code 120), representing obstacles in cell (i, j), or a '.' (ASCII code 46), representing an empty cell.OutputOne number, representing the number of different valid domino placing.Since the number could be quite large, output the answer modulo 19901013.ExampleInput:3 3\r\n...\r\n...\r\n...Output:2NoteThe 2 different placings are112     411\r\n   4.2     4.2\r\n   433     332",
  "sample_input": "Input:3 3\r\n...\r\n...\r\n...Output:2",
  "sample_output": "112     411\r\n   4.2     4.2\r\n   433     332",
  "link": "https://www.spoj.com/problems/DOMINO2",
  "scraped_at": "2025-08-17 00:33:27",
  "test_cases": [
    {
      "input": "3 3\r\n...\r\n...\r\n...",
      "expected_output": "2",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "6 5\nvo\nwn\nvmdjfb",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "4 7\ngrzm\njtadjb\ndmvhpy",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "9 9\nxraom\nzhckxr\nomafb",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "63 33\nyfv\ntmq\nnandy",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "33 88\nr\nmuhun\ncjyu",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "76 99\npf\nvsw\nydrght",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "28 24\nwtzd\nh\nmmzdyz",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "85 90\np\nc\nm",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "302 313\nzwseo\nx\nboac",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "55 130\nxykb\ng\no",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "332 60\nidfug\nkcv\ntjlqpq",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "426 146\njz\nlfibhu\nmydyp",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "268 64\nji\nezimi\nnssj",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "272 229\nj\nebeu\nlido",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "275 334\nqnbyai\njhyff\nhy",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\nlv\nvg\ngioolr",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\nyvpd\nqlpjo\nh",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "999 999\nkefpl\nf\nb",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1000 999\nw\nmnc\nugbqep",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:17",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Team Slide Treasure Hunt Race",
  "tags": [],
  "text": "Alice and Bob are participating in an exciting new Olympic event, the Team Slide Treasure Hunt Race! This event takes place on a slide with various treasures on it, which is up to 10m wide and 10km long. Yes, that's kilometers.The slide can be represented as a grid of cells, with $N$ ($2 \\leq N \\leq 10^4$) rows and $M$ ($2 \\leq M \\leq 10$) columns. The rows are numbered $1, 2 \\ldots N$ from top to bottom, and the columns are numbered $1, 2 \\ldots M$ from left to right. The cell in row $i$ and column $j$ is referred to as cell ($i$, $j$), and contains a treasure with value $G_{i,j}$ ($1 \\le G_{i,j} \\le 10^5$).The two friends will each get to travel once down the slide, one after another. First, Alice will slide from the top-left corner of the slide (cell ($1$, $1$)) down to the bottom-left corner (cell ($N$, $1$)). Then, Bob will slide from the top-right corner (cell ($1$, $M$)) down to the bottom-right corner (cell ($N$, $M$)). Whenever a person moves in the slide, they move from their current row to the next row down, and they can also guide themselves left or right by one column if desired. This means that they can go from cell ($i$, $j$) to either cell ($i+1$, $j-1$), ($i+1$, $j$), or ($i+1$, $j+1$), as long as they don't exit the slide. Throughout the race, both Alice and Bob collect the treasure in each cell they slide through - this includes their respective starting and ending cells. However, if Bob goes through any cell that Alice has already visited, he can't collect the treasure in it again.Alice and Bob would like to determine a sliding plan to allow them to collect as much treasure as possible, and win the gold medal! They've asked you to determine the maximum total value of treasure that they can collect, out of all valid strategies.InputThe first line of the input will contain two integers $N$ and $M$, separated by a space. Each of the next $N$ lines, for $i$ from $1$ to $N$, will contain the $M$ space-separated integers $G_{i,1} \\,\\,\\, G_{i,2} \\,\\,\\, \\dots \\,\\,\\, G_{i, M}$.OutputOutput one number on a line by itself: the maximum combined treasure value that Alice and Bob can collect.ExampleInput:5 43 6 8 25 2 4 31 1 20 101 1 20 101 1 20 10Output:73Explanation of SampleThe single optimal sliding plan involves Alice sliding down-right, down-right, down-left, and down-left, followed by Bob sliding down-left, down-right, down-left, and down-right. The treasures collected are shown in bold on the following grid:Alice collects a total treasure value of $3+2+20+1+1=27$, while Bob collects $2+4+10+20+10=46$. Their total is then $27+46=73$.",
  "sample_input": "Input:5 43 6 8 25 2 4 31 1 20 101 1 20 101 1 20 10Output:73",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/SLIDE",
  "scraped_at": "2025-08-17 00:33:54",
  "test_cases": [
    {
      "input": "5 43 6 8 25 2 4 31 1 20 101 1 20 101 1 20 10",
      "expected_output": "73",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3 2 8 1 1 8 6 3 3 9 9 7 10 10 7 3 7",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "7 4 10 2 4 8 9 10 10 1 3 3 5 4 6 2 9",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "10 9 10 5 7 10 7 10 1 1 1 7 5 8 8 8 9",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "27 47 27 92 78 98 57 86 68 29 1 20 54 15 38 96 17",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "46 61 24 26 24 91 30 9 21 36 56 31 81 44 15 51 6",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "58 9 92 23 65 42 92 14 31 80 72 26 77 56 7 96 64",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "94 64 53 57 89 63 44 77 41 3 27 96 87 76 40 68 82",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "22 84 25 24 81 84 96 36 45 45 7 11 22 40 74 44 63",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "156 345 407 485 120 124 482 416 174 167 442 317 240 364 107 475 172",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "329 247 245 407 370 55 172 382 465 343 51 408 387 455 322 384 166",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "82 367 263 312 457 269 349 469 136 474 447 192 405 441 165 195 206",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "83 271 466 380 305 277 436 275 125 151 94 148 156 388 332 128 120",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "355 308 296 438 180 286 206 106 443 256 292 388 127 210 306 337 336",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "304 117 64 123 160 362 201 301 50 405 385 462 406 323 297 104 103",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "359 482 185 215 101 433 242 473 478 271 208 152 473 254 493 392 354",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 2 2 1 999 999 1 1000 1 1 1 2 2 1000 1 1 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 999 2 999 2 2 1000 2 1000 1000 1 1 1 1000 1 1000 999",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:19",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Alturas de NoMeAcuerdo",
  "tags": [],
  "text": "In NoMeAcuerdo city a population census has been conducted last week. As a result, two lists (temporary data for a certain process) were generated: one list with the heights in cm. for the women of the city, and another list with heights in cm. for the men. The data in each list are not necessarily sorted, and contain a height for each woman or man.InputLists should be read from the input in the order indicated above (first the women heights, then the  men heights). Each list ends with a 0 indicating end of  the list. It is known that each list will have no more than 500  elements.OutputYour program should output four lines. The first line should be a list containing the two original  lists merged and sorted, with only one occurrence of each value. The next 3 lines will show: number of women, number of men and number of different heights.ExampleInput:155 180 165 165 172 166 170 172 180 0173 150 180 199 168 168 170 165 167 155 0Output:150 155 165 166 167 168 170 172 173 180 19991011",
  "sample_input": "Input:155 180 165 165 172 166 170 172 180 0173 150 180 199 168 168 170 165 167 155 0Output:150 155 165 166 167 168 170 172 173 180 19991011",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/ALTURAS",
  "scraped_at": "2025-08-17 00:34:27",
  "test_cases": [
    {
      "input": "155 180 165 165 172 166 170 172 180 0173 150 180 199 168 168 170 165 167 155 0",
      "expected_output": "150 155 165 166 167 168 170 172 173 180 19991011",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1 9 10 3 6 3 4 3 10 7 8 9 2 2 9 2 2 2 4 2",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "4 4 8 10 10 9 6 3 10 10 10 8 6 6 9 3 9 5 7 3",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "6 5 9 10 9 8 7 8 10 9 5 2 2 4 8 8 10 8 1 5",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "90 32 78 52 34 71 3 2 94 97 39 4 29 20 78 89 43 16 8 5",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "72 80 80 88 67 3 25 70 23 86 65 66 90 55 94 81 90 65 22 71",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "68 90 75 60 16 58 5 72 69 82 82 50 71 97 56 59 60 2 71 46",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "69 80 79 59 8 15 82 69 52 53 23 60 69 84 51 47 99 7 92 92",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "44 9 20 91 8 73 34 86 54 10 34 47 38 55 43 83 38 32 60 97",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "429 356 350 467 81 165 294 204 309 291 386 164 426 168 469 424 303 100 222 494",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "287 100 395 142 243 140 296 463 267 356 425 471 73 439 295 172 485 149 413 470",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "170 472 204 259 100 267 435 161 324 152 396 312 264 405 349 332 210 473 381 486",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "381 241 477 174 386 189 300 314 312 144 204 285 230 61 67 72 68 372 59 313",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "409 360 150 497 304 466 233 415 318 197 304 79 463 487 228 371 84 473 431 173",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "347 433 304 440 168 215 386 492 116 323 277 302 164 334 438 188 248 186 392 297",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "436 475 166 217 132 108 61 267 351 177 59 178 265 250 471 420 443 171 485 130",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 2 1 999 1 2 1000 2 2 1 1000 1 1 1000 999 1000 1 2 2 999",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 1000 1000 1000 2 1000 999 999 1 1000 1000 2 1000 1 999 999 1 1 1 999",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:24",
  "total_test_cases": 20
}
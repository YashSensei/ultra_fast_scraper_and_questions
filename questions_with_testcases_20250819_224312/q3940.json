{
  "problem_code": "problems",
  "title": "Tinku got a job",
  "tags": [],
  "text": "Tinku has a new job at BIT. The job pays well, and provides Tinku  with a house to live within BIT. His only job is to deliver goods to  Main Building. The goods are to be collected from a pickup point.  Therefore, a typical day of work for Tinku begin with him leaving his  home, collecting the goods from the pickup point, and ends with him  delivering the goods to the Main Building. Pickup points are arbitrary  locations in the BIT campus.The whole BIT campus can be represented as a 2-D plane. Tinku's House, Main Building and pickup points can only be present atinteger coordinates. You are given the coordinates of Tinku's house and the Main Building (See the input format carefully). The distance considered is the Euclidean distance, i.e., distance from point (a, b) to (c, d) will be sqrt((a-c)2+ (b-d)2). A main building can also be a pickup point.The job contract ensures that Tinku worksat most for H hours. Tinku is new at this job, and is very nervous. ACM people being  friendly as always, decide to ease him up by finding the number of  possible pickup points such that Tinku is able to finish his work.InputFirst line denotes number of test cases T. T test cases follow.Each test case is consists of integers A, B, C, H, V. Tinku's house is at coordinate (A, C), and Main Building is at (B, C). Tinku works at most for H hours and has walks with a speed of V units/hour.T = 1000-100 ≤ A, B, C ≤ 1000 < V ≤ 400 < H ≤ 40OutputA single line with the number of possible pickup points.ExampleInput:21 -1 0 1 3-5 5 10 2 2Output:50",
  "sample_input": "Input:21 -1 0 1 3-5 5 10 2 2Output:50",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/TINKUJOB",
  "scraped_at": "2025-08-17 00:34:38",
  "test_cases": [
    {
      "input": "21 -1 0 1 3-5 5 10 2 2",
      "expected_output": "50",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1 1 8 8 5 8 8 1 5 6",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "9 8 3 1 6 4 9 4 6 3",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "8 2 7 1 6 4 5 3 3 9",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "89 6 33 24 17 24 92 99 43 61",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "52 72 2 100 9 45 27 75 26 94",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "76 10 38 13 10 80 80 69 67 29",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "73 58 43 15 95 49 90 1 37 24",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "82 72 77 69 26 82 17 79 1 17",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "180 144 470 477 132 263 249 310 429 100",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "238 381 456 380 52 457 258 323 244 416",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "91 207 394 271 207 378 366 338 55 428",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "303 480 426 390 143 457 62 325 305 294",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "378 351 410 132 405 64 423 474 176 464",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "195 324 276 466 393 181 119 426 425 308",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "121 327 217 417 157 482 81 72 396 492",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1 999 1 1000 1000 2 999 1000 999",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "999 2 1000 2 2 1000 999 1000 2 999",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:25",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "SLIS",
  "tags": [],
  "text": "Rachit, Sandeep, Yogesh, Vikram and Shubham are very good friends. They participated in a contest MNNIT INSOMNIA as a team but there was a problem which was not solved by any of the teams. So they were desperate to solve that problem. After the contest they asked you for your help to solve the problem. Help them to solve the problem. The problem is as follows:There is an array of length n consisting of only 0 and 1 as elements. You have to answer q queries. There are two type of queries:Type 0: There is l and r. You have to change each 0 to 1 and each 1 to 0 from l to r (both inclusive).Type 1: print the length of longest non decreasing subsequence of the array.Note: Indexing is 1 based.A subsequence is a sequence that can be derived from another sequence by deleting some elements without changing the order of the remaining elements.InputFirst line consists of two integers n and q where n is length of array and q is number of queries.Second line consists of array of length n without spaces.After that there are q lines containing type of query. And for type 0 query it has two integers l and r.1<=n,q<=10^5, 1<=l<=r<=nOutputPrint a single line for each query of type 1 containg length of longest non decreasing subsequence.ExampleInput:5 5\r\n10111\r\n1\r\n0 3 5\r\n1\r\n0 2 3\r\n1Output:4\r\n4\r\n3",
  "sample_input": "Input:5 5\r\n10111\r\n1\r\n0 3 5\r\n1\r\n0 2 3\r\n1Output:4\r\n4\r\n3",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/QUERYIT",
  "scraped_at": "2025-08-17 00:34:18",
  "test_cases": [
    {
      "input": "5 5\r\n10111\r\n1\r\n0 3 5\r\n1\r\n0 2 3\r\n1",
      "expected_output": "4\r\n4\r\n3",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5 4\n4\n4\n2 9 5\n6\n4 6 6\n7",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "1 7\n9\n5\n8 1 3\n6\n1 10 7\n9",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "5 7\n7\n6\n6 7 3\n3\n1 5 8\n3",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "86 37\n59\n18\n85 23 41\n50\n95 58 34\n21",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "78 45\n6\n11\n13 23 10\n86\n60 33 26\n84",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "6 67\n1\n45\n11 76 49\n25\n53 44 42\n44",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "70 31\n83\n38\n74 22 57\n18\n87 14 33\n64",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "75 65\n70\n32\n45 58 92\n24\n91 3 11\n99",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "238 86\n54\n248\n500 466 276\n359\n287 491 488\n215",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "322 319\n237\n288\n424 325 112\n334\n197 62 460\n99",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "125 237\n92\n288\n381 96 364\n75\n88 195 291\n235",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "235 464\n88\n237\n53 341 421\n490\n317 76 157\n237",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "102 77\n106\n329\n497 360 324\n252\n299 64 428\n440",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "305 352\n439\n306\n70 396 424\n323\n288 267 268\n109",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "460 131\n118\n455\n346 390 181\n88\n351 207 268\n333",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000\n1000\n1000 1000 1000\n1000\n1000 1000 1000\n1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000\n1000\n1000 1000 1000\n1000\n1000 1000 1000\n1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 1000\n1000\n2\n2 1 2\n999\n2 1 1000\n1000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 2\n1\n1\n1000 2 1000\n1\n1000 1 1000\n2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:22",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "New Horizons",
  "tags": [],
  "text": "I’m king of a house! And, what’s more, beyond that,I’m king of a blueberry bush and a cat!I’m Yertle the Turtle! Oh, marvellous me!For I am the ruler of all that I see!\"Yertle has determined that the number of objects he can see, and hence rule, depends on the height of his throne. Your task, as Minister of Computing and Vertigo (a new combined Super Ministry), is to determine which objects Yertle would see should he build his throne to a particular height.Input:Standard input consists of:A floating point number on a line by itself, specifying the diameter of Yertle’s planet in \"flipper lengths\".A line containing three floating point numbers: the height of Yertle’s throne (in flipper lengths), the latitude of Yertle’s throne (between -90 and +90 degrees), the longitude of Yertle’s throne (between 0 and 360 degrees).Several lines, each containing three floating point numbers and a string of alphabetic and space characters. Each line indicates the height, latitude, longitude and name of an object on the surface of Yertle’s planet. The last line is indicated by the end of standard input.All distances are in flipper lengths, and all latitudes and longitudes are in degrees. Floating point values are formatted as a string of decimal digits with an optional decimal point and sign. The fields in the input are separated by exactly one space character. You may assume that no object hides another; only the horizon limits Yertle’s view.Output:Standard output consists of the list of objects whose tops are visible to Yertle, in alphabetical order.Example Input:20000.0100.0 45.0 100.02.0 46.0 99.0 Cat20.0 -45.0 260.0 House5.0 45.1 100.2 Blueberry BushExample Output:Blueberry BushCat",
  "sample_input": "Not found",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/NEWH",
  "scraped_at": "2025-08-17 00:34:06",
  "test_cases": [
    {
      "input": "4",
      "expected_output": "To be computed",
      "type": "small_case_1",
      "description": "Small value (≤ 5)"
    },
    {
      "input": "3",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small value (≤ 5)"
    },
    {
      "input": "5",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small value (≤ 5)"
    },
    {
      "input": "49",
      "expected_output": "To be computed",
      "type": "medium_case_4",
      "description": "Medium value (5-50)"
    },
    {
      "input": "12",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium value (5-50)"
    },
    {
      "input": "12",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium value (5-50)"
    },
    {
      "input": "39",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium value (5-50)"
    },
    {
      "input": "50",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium value (5-50)"
    },
    {
      "input": "331",
      "expected_output": "To be computed",
      "type": "large_case_9",
      "description": "Large value (50-1000)"
    },
    {
      "input": "227",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large value (50-1000)"
    },
    {
      "input": "426",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large value (50-1000)"
    },
    {
      "input": "257",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large value (50-1000)"
    },
    {
      "input": "287",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large value (50-1000)"
    },
    {
      "input": "724",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large value (50-1000)"
    },
    {
      "input": "822",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large value (50-1000)"
    },
    {
      "input": "2289",
      "expected_output": "To be computed",
      "type": "max_case_16",
      "description": "Maximum value (≥ 1000)"
    },
    {
      "input": "9132",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum value (≥ 1000)"
    },
    {
      "input": "95",
      "expected_output": "To be computed",
      "type": "edge_case_18",
      "description": "Random value"
    },
    {
      "input": "3",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Random value"
    },
    {
      "input": "29",
      "expected_output": "To be computed",
      "type": "random_case_20",
      "description": "Random value"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:20",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Customs",
  "tags": [],
  "text": "Matheus, Bruno and Ricardo are the boasting for the research department at Indústria de Obras Intermináveis (IOI) and they constantly travel together to other countries to research different methods, equipment and raw materials for amazing works. Furthermore, they operate in the informal import market, bringing equipment and electronics for their friends and coworkers.Before leaving they make a list of N products that they have to buy, each one of them with a price Pi DE$ (Dinheiro Estrangeiro). They have to pay some customs duty if any one of them exceeds the maximum amount of Q that each one can bring.As them always travel together, they note that it’s cheaper for them, if the products are organized in a way that’s can be possible to reduce the amount of duty they have to pay. Given the prices of N products, Q and the tax A, you have to say the minimum price of duty that they have to pay.InputThe input is only a test case. The first line include an integer N (1 ≤ N ≤ 100), that represents the number of products bought.The second line include two integers, Q and A (1 ≤ Q ≤ 500, 1 ≤ A ≤ 200), that represents the maximum amount of import, and the tax of importation in percent.The next N lines includes each one, an integer Pi (1 ≤ Pi ≤ Q), that represents the price of the i-th product.OutputYou have to write in your output a single line contains the minimum possible value of duty that Matheus, Bruno and Ricardo have to pay.ExampleInput:4\r\n10 1\r\n10\r\n9\r\n8\r\n7Output:0.05Input:6\r\n9 20\r\n9\r\n6\r\n3\r\n3\r\n3\r\n3Output:0.00",
  "sample_input": "Input:4\r\n10 1\r\n10\r\n9\r\n8\r\n7Output:0.05",
  "sample_output": "Input:6\r\n9 20\r\n9\r\n6\r\n3\r\n3\r\n3\r\n3Output:0.00",
  "link": "https://www.spoj.com/problems/CUSTOMSL",
  "scraped_at": "2025-08-17 00:33:55",
  "test_cases": [
    {
      "input": "4\r\n10 1\r\n10\r\n9\r\n8\r\n7",
      "expected_output": "0.05",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "6\r\n9 20\r\n9\r\n6\r\n3\r\n3\r\n3\r\n3",
      "expected_output": "0.00",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "4\n1\n8\n8\n1",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "2\n6\n2",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n2\n4\n1\n5\n7",
      "expected_output": "To be computed",
      "type": "small_case_5",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "18\n28249754\n8145600\n5711528\n53925203\n88109194\n82001894\n51995404\n6567844\n70721312\n77555415\n2028128\n55113998\n8581288\n73250369\n27407825\n16416822\n74126329\n3235554",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "11\n70439538\n28007679\n73999310\n28445885\n88089290\n82175835\n69056918\n44032242\n14290940\n34337454\n44190889",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "12\n53449892\n28036362\n81485565\n52306845\n54022882\n55511742\n59172631\n73783206\n65776761\n97088746\n31203837\n7448454",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "20\n50553915\n5720564\n56166069\n13990763\n50441714\n57035449\n51514510\n73738680\n39637322\n68752513\n14880176\n54494577\n24606722\n92495360\n75019243\n62274059\n1257201\n32569351\n66473208\n29185741",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "10\n3055184\n64080372\n82015465\n2394367\n3471701\n10881418\n1522370\n54153603\n40951273\n30010893",
      "expected_output": "To be computed",
      "type": "medium_case_10",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "82\n60733\n94256\n72899\n10089\n50987\n60300\n20384\n32712\n60823\n6148\n68152\n75248\n99615\n37906\n2606\n88851\n60738\n40317\n92557\n45673\n49522\n39317\n12586\n24573\n66476\n60604\n27025\n34335\n15935\n84105\n99151\n50322\n52298\n25887\n46131\n9177\n23502\n66061\n31173\n52051\n97842\n14661\n13449\n6612\n57736\n10237\n67444\n3466\n43883\n75739\n94904\n30491\n10273\n11071\n73830\n54715\n46269\n61029\n39509\n35005\n2910\n90515\n83056\n73585\n21379\n32468\n8970\n19355\n74810\n48427\n49149\n60044\n3565\n81884\n89850\n45743\n73119\n9216\n29490\n45309\n18849\n68576",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "83\n18553\n96982\n43895\n60053\n25151\n98137\n9968\n15086\n58719\n90443\n16058\n8285\n32056\n28066\n66933\n95972\n47930\n93787\n25518\n15322\n4960\n77520\n14682\n79698\n3120\n2020\n78141\n52224\n81222\n48122\n11243\n22541\n74210\n59742\n38738\n74791\n35445\n55838\n57946\n30073\n80419\n90217\n10639\n43105\n51973\n52648\n1492\n93357\n65967\n87217\n4366\n15647\n11983\n29409\n75147\n95257\n31692\n15235\n16169\n58893\n81458\n46563\n34072\n79873\n13352\n42037\n72188\n33153\n98766\n48502\n64343\n19821\n91629\n81682\n34513\n54835\n84535\n95581\n77045\n358\n53364\n5297\n43237",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "54\n72149\n74356\n29057\n52899\n94947\n18568\n29960\n38423\n41820\n41305\n8930\n76548\n54044\n59485\n709\n37381\n84950\n70857\n99991\n194\n4125\n35350\n24977\n58025\n20281\n9210\n50794\n34262\n75374\n94278\n33558\n11189\n84615\n54305\n38080\n39215\n39916\n61168\n66213\n98425\n83628\n57775\n9842\n81299\n48732\n62343\n77508\n58224\n5849\n3167\n1687\n12496\n90106\n72608",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "65\n45106\n27530\n71220\n68045\n53672\n19503\n78634\n62979\n79613\n73507\n38769\n61793\n77930\n33542\n17691\n23237\n17880\n20651\n81292\n64562\n80521\n96998\n57106\n56638\n82833\n60564\n70421\n38889\n32729\n86074\n91331\n22421\n15031\n48814\n24799\n42353\n16323\n58717\n78321\n97223\n50609\n51652\n43666\n3018\n44445\n36534\n47787\n69102\n82693\n63618\n14639\n37060\n4002\n64087\n31116\n77581\n58272\n98113\n26267\n92088\n55237\n73297\n44737\n73790\n16706",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "76\n30741\n33369\n96165\n51415\n41520\n45980\n60643\n34115\n46153\n94588\n67142\n27443\n44733\n50105\n20498\n27837\n57193\n44506\n35193\n78010\n37249\n98079\n91734\n63485\n27735\n55981\n17985\n17634\n74060\n1551\n99646\n75636\n88560\n69976\n13273\n25250\n23260\n72343\n87471\n63482\n94251\n9895\n95059\n69464\n58505\n13572\n23682\n5186\n2276\n27366\n43708\n86077\n72514\n82854\n59115\n19305\n87928\n96789\n42926\n75533\n62223\n47689\n17207\n74255\n88951\n14422\n38392\n77643\n41168\n21483\n97713\n82120\n67923\n6461\n51819\n86555",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "90\n96848\n16151\n25348\n90822\n22536\n21208\n77567\n14294\n98852\n25334\n3907\n7733\n22326\n7463\n68430\n34761\n12310\n46771\n97791\n80463\n9563\n88642\n4838\n53082\n85654\n81688\n65905\n12611\n36350\n37398\n97758\n72009\n88865\n39266\n5797\n26026\n16052\n72668\n4428\n83218\n13475\n97574\n22944\n71829\n77275\n32902\n65891\n54031\n22258\n29101\n39830\n53228\n62267\n11582\n78203\n74582\n94496\n66830\n46956\n53683\n81676\n6241\n24172\n63382\n52229\n29721\n70056\n20186\n26056\n84314\n77164\n51460\n72039\n61112\n73160\n3145\n66762\n84193\n99206\n23387\n64997\n96755\n67949\n66427\n4961\n59577\n71443\n61503\n80581\n65391",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "85\n33153\n28035\n96730\n45813\n94348\n37384\n51310\n33355\n18584\n66351\n39409\n44627\n61581\n39300\n11413\n88989\n91538\n11573\n75580\n75559\n24332\n22336\n55848\n56649\n70453\n49105\n50212\n78950\n23722\n52749\n71516\n38051\n97650\n78270\n65969\n68851\n82471\n96093\n23192\n21179\n37095\n31039\n50443\n75298\n82103\n82794\n89475\n48291\n31767\n87459\n26218\n94006\n74069\n9777\n62668\n10909\n17263\n976\n46114\n81744\n9587\n76391\n94890\n78803\n62352\n37536\n35023\n76245\n16951\n61261\n50876\n6215\n75353\n79023\n28727\n69728\n93956\n49277\n32478\n87077\n34076\n80406\n93135\n43529\n60951",
      "expected_output": "To be computed",
      "type": "large_case_17",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "100\n88673956\n67612657\n176078\n2174891\n90477537\n55562354\n27851091\n73881598\n89228427\n4245684\n87767\n88048285\n44337277\n87866367\n99492362\n20896094\n33931351\n4822206\n41227418\n97028170\n13487941\n10991457\n35176061\n31793069\n96953803\n97263475\n68385642\n51209742\n32623529\n83425013\n2408765\n22076476\n17902673\n45962302\n7948092\n58244232\n43431984\n55003266\n75996518\n41932803\n8835936\n92895929\n5931056\n27834397\n44846176\n1377206\n3306236\n78778251\n71138944\n60127442\n48659857\n75604085\n55222547\n52678669\n3092439\n10299006\n20501450\n3479219\n42321276\n84785758\n87006426\n8596503\n79634655\n7440671\n91202473\n85264679\n77221413\n2107887\n54242517\n84024778\n47886227\n81354837\n39526360\n89315231\n86923177\n2031558\n40118385\n86201773\n58745884\n24402776\n25448184\n74464781\n78008047\n63467317\n89479162\n33351120\n42283354\n41027705\n22130515\n40121725\n60354195\n18897935\n80802611\n15720051\n44615145\n91650784\n66080518\n62199700\n47505409\n22874590",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "100\n30894923\n22433348\n95283723\n37390920\n63845444\n94621460\n53548649\n7617747\n40810935\n75645713\n4502803\n89986277\n51368394\n60589905\n33511959\n63289355\n10794021\n75629827\n98216313\n54738264\n96042193\n3335969\n41651120\n17545726\n31377136\n6843563\n94079872\n79667394\n12283838\n81741748\n74831369\n30874490\n95330613\n58676912\n49345098\n88409993\n53900976\n69510968\n19280210\n98983365\n32717576\n68040027\n58696663\n11895919\n19322873\n7607177\n33239772\n30191016\n95637292\n15377554\n78222560\n40186630\n56978336\n49293979\n99633557\n23319957\n74494771\n16793461\n9662811\n15109040\n82493907\n42969354\n94643177\n35312262\n11858976\n30423467\n28701641\n32533446\n88385454\n88184983\n82800325\n10837329\n8171798\n71624745\n29242862\n47729400\n20021337\n97821852\n34738166\n50408471\n89800029\n23345159\n11390317\n96289468\n86558776\n48735170\n34790822\n24845466\n84344644\n84018245\n96457022\n40721261\n8020627\n55519286\n14345137\n49743430\n33695684\n91518615\n46242056\n18282728",
      "expected_output": "To be computed",
      "type": "max_case_19",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "1\n21494005",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 1)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:20",
  "total_test_cases": 20
}
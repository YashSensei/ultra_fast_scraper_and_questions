{
  "problem_code": "problems",
  "title": "Assignments",
  "tags": [],
  "text": "ProblemYour task will be to calculate number of different assignments of n different topics to n students such that everybody gets exactly one topic he likes.InputFirst line of input contains number of test cases c (1 ≤ c ≤ 80). Each test case begins with number of students n (1 ≤ n ≤ 20). Each of the next n lines contains n integers describing preferences of one student. 1 at the ith position means that this student likes ith topic, 0 means that he definitely doesn't want to take it.OutputFor each test case output number of different assignments (it will fit in a signed 64-bit integer).ExampleInput:\r\n3\r\n3\r\n1 1 1\r\n1 1 1\r\n1 1 1\r\n11\r\n1 0 0 1 0 0 0 0 0 1 1 \r\n1 1 1 1 1 0 1 0 1 0 0 \r\n1 0 0 1 0 0 1 1 0 1 0 \r\n1 0 1 1 1 0 1 1 0 1 1 \r\n0 1 1 1 0 1 0 0 1 1 1 \r\n1 1 1 0 0 1 0 0 0 0 0 \r\n0 0 0 0 1 0 1 0 0 0 1 \r\n1 0 1 1 0 0 0 0 0 0 1 \r\n0 0 1 0 1 1 0 0 0 1 1 \r\n1 1 1 0 0 0 1 0 1 0 1 \r\n1 0 0 0 1 1 1 1 0 0 0 \r\n11\r\n0 1 1 1 0 1 0 0 0 1 0 \r\n0 0 1 1 1 1 1 1 1 1 1 \r\n1 1 0 1 0 0 0 0 0 1 0 \r\n0 1 0 1 0 1 0 1 0 1 1 \r\n1 0 0 1 0 0 0 0 1 0 1 \r\n0 0 1 0 1 1 0 0 0 0 1 \r\n1 0 1 0 1 1 1 0 1 1 0 \r\n1 0 1 1 0 1 1 0 0 1 0 \r\n0 0 1 1 0 1 1 1 1 1 1 \r\n0 1 0 0 0 0 0 0 0 1 1 \r\n0 1 1 0 0 0 0 0 1 0 1 \r\n\r\nOutput:\r\n6\r\n7588\r\n7426",
  "sample_input": "Input:\r\n3\r\n3\r\n1 1 1\r\n1 1 1\r\n1 1 1\r\n11\r\n1 0 0 1 0 0 0 0 0 1 1 \r\n1 1 1 1 1 0 1 0 1 0 0 \r\n1 0 0 1 0 0 1 1 0 1 0 \r\n1 0 1 1 1 0 1 1 0 1 1 \r\n0 1 1 1 0 1 0 0 1 1 1 \r\n1 1 1 0 0 1 0 0 0 0 0 \r\n0 0 0 0 1 0 1 0 0 0 1 \r\n1 0 1 1 0 0 0 0 0 0 1 \r\n0 0 1 0 1 1 0 0 0 1 1 \r\n1 1 1 0 0 0 1 0 1 0 1 \r\n1 0 0 0 1 1 1 1 0 0 0 \r\n11\r\n0 1 1 1 0 1 0 0 0 1 0 \r\n0 0 1 1 1 1 1 1 1 1 1 \r\n1 1 0 1 0 0 0 0 0 1 0 \r\n0 1 0 1 0 1 0 1 0 1 1 \r\n1 0 0 1 0 0 0 0 1 0 1 \r\n0 0 1 0 1 1 0 0 0 0 1 \r\n1 0 1 0 1 1 1 0 1 1 0 \r\n1 0 1 1 0 1 1 0 0 1 0 \r\n0 0 1 1 0 1 1 1 1 1 1 \r\n0 1 0 0 0 0 0 0 0 1 1 \r\n0 1 1 0 0 0 0 0 1 0 1 \r\n\r\nOutput:\r\n6\r\n7588\r\n7426",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/ASSIGN",
  "scraped_at": "2025-08-17 00:34:12",
  "test_cases": [
    {
      "input": "3\r\n3\r\n1 1 1\r\n1 1 1\r\n1 1 1\r\n11\r\n1 0 0 1 0 0 0 0 0 1 1 \r\n1 1 1 1 1 0 1 0 1 0 0 \r\n1 0 0 1 0 0 1 1 0 1 0 \r\n1 0 1 1 1 0 1 1 0 1 1 \r\n0 1 1 1 0 1 0 0 1 1 1 \r\n1 1 1 0 0 1 0 0 0 0 0 \r\n0 0 0 0 1 0 1 0 0 0 1 \r\n1 0 1 1 0 0 0 0 0 0 1 \r\n0 0 1 0 1 1 0 0 0 1 1 \r\n1 1 1 0 0 0 1 0 1 0 1 \r\n1 0 0 0 1 1 1 1 0 0 0 \r\n11\r\n0 1 1 1 0 1 0 0 0 1 0 \r\n0 0 1 1 1 1 1 1 1 1 1 \r\n1 1 0 1 0 0 0 0 0 1 0 \r\n0 1 0 1 0 1 0 1 0 1 1 \r\n1 0 0 1 0 0 0 0 1 0 1 \r\n0 0 1 0 1 1 0 0 0 0 1 \r\n1 0 1 0 1 1 1 0 1 1 0 \r\n1 0 1 1 0 1 1 0 0 1 0 \r\n0 0 1 1 0 1 1 1 1 1 1 \r\n0 1 0 0 0 0 0 0 0 1 1 \r\n0 1 1 0 0 0 0 0 1 0 1",
      "expected_output": "6\r\n7588\r\n7426",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1\n5",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "2\n1\n1",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "4\n6\n1\n3\n7",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n89195339\n94699107\n86666196\n38821617\n26796381",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "19\n81960694\n71850918\n2743368\n7594841\n77285034\n1425547\n90942408\n68515213\n84729535\n47572260\n68950256\n29185379\n37314320\n51466388\n34395328\n76113418\n31426600\n92144176\n21443401",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "6\n19931341\n12068253\n60344601\n59038614\n44722255\n41864178",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "8\n21204303\n69026167\n65330019\n79087095\n13605033\n30304789\n36543440\n25944506",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "8\n14950246\n78075017\n84057757\n74687015\n26493908\n66070903\n86478388\n81344439",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "20\n70678\n90437\n55816\n27445\n3261\n33971\n49996\n74967\n53892\n52358\n88013\n70032\n71074\n69127\n7557\n15917\n21838\n47479\n38943\n93045",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "20\n28279\n35606\n40260\n97702\n62003\n14948\n44285\n46731\n3425\n49442\n68499\n45504\n81762\n68154\n99556\n62719\n97934\n24536\n42314\n883",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "20\n540\n92088\n8483\n2828\n72626\n9780\n70285\n23705\n95720\n49372\n89429\n50627\n4090\n37663\n84492\n67667\n1326\n12190\n8207\n47645",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "20\n6740\n7749\n83160\n96449\n83123\n34915\n40229\n34739\n10404\n64756\n76953\n57474\n31665\n33309\n76197\n45950\n30370\n92700\n39263\n36454",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "20\n77161\n53572\n9880\n16255\n93132\n88464\n56585\n24082\n75475\n69947\n27878\n54481\n37283\n33224\n20624\n2940\n18709\n1616\n48459\n99779",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "20\n67630\n2385\n86246\n53951\n30527\n79819\n54738\n45307\n8421\n88757\n55210\n12885\n85437\n13215\n58773\n84820\n94939\n72812\n49012\n11124",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "20\n90093\n19455\n23484\n4841\n75324\n58614\n15610\n3528\n22021\n85208\n5837\n33889\n19632\n18755\n21228\n82309\n25902\n15718\n16628\n74997",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "20\n74011618\n49419383\n74959584\n63055594\n9307346\n51729040\n62973445\n70007416\n66514667\n7074147\n9940911\n81671851\n65302695\n71227084\n85522656\n97930769\n2989063\n63268360\n78726622\n62292638",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 20)"
    },
    {
      "input": "20\n91267811\n27573525\n7061356\n31154412\n45079034\n7839890\n2072455\n38222159\n31186282\n62455380\n23591006\n58309002\n57392554\n39898211\n99826361\n99860603\n74518913\n31619880\n12038096\n26730979",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 20)"
    },
    {
      "input": "2\n100000000\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 2)"
    },
    {
      "input": "2\n100000000\n1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 2)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:22",
  "total_test_cases": 20
}
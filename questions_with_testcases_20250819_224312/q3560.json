{
  "problem_code": "problems",
  "title": "Smallest Inverse Euler Totient Function",
  "tags": [],
  "text": "This task is the inverse ofETFproblem, given an integernfind smallest integerisuch that φ(i)=n, where φ denotesEuler's totient function.InputThe first line is an integerT(1 ≤T≤ 100,000), denoting the number of test cases. Then, T test cases follow.For each test case, there is an integern(1 ≤n≤ 100,000,000) written in one line. (one integer per line)OutputFor each test case, output Smallest Inverse Euler's Totient Function ofn. ifndoesn't have inverse, output -1.ExampleInput:5\r\n10\r\n20\r\n30\r\n40\r\n50Output:11\r\n25\r\n31\r\n41\r\n-1Time Limit ≈ 3*(My Program Top Speed)See also:Another problem added by Tjandra Satria Gunawan",
  "sample_input": "Input:5\r\n10\r\n20\r\n30\r\n40\r\n50Output:11\r\n25\r\n31\r\n41\r\n-1",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/INVPHI",
  "scraped_at": "2025-08-17 00:34:32",
  "test_cases": [
    {
      "input": "5\r\n10\r\n20\r\n30\r\n40\r\n50",
      "expected_output": "11\r\n25\r\n31\r\n41\r\n-1",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5\n9\n6\n9\n10\n10",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "4\n5\n2\n10\n6",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n7",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "13\n16042962\n86824983\n75555635\n38553256\n14877680\n12738015\n99483813\n53728\n17684825\n1860199\n39940257\n71817096\n30156789",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "12\n12086208\n84143844\n83371839\n81416239\n62647444\n62576418\n47774380\n77959546\n93118087\n63551278\n79828059\n50513571",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "14\n14612175\n95028003\n54246248\n13541112\n74163966\n34128363\n1829210\n94889911\n44038631\n45601568\n62701573\n68061741\n28643752\n38851918",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "7\n79170184\n64955285\n21941367\n11236161\n92703874\n60818474\n65387167",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "11\n21889707\n33078881\n94683564\n83771481\n62052889\n93196205\n6528816\n89920993\n56645465\n89111011\n41288138",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "79\n14405\n213\n688\n30195\n91991\n18736\n32271\n40107\n57863\n73748\n49054\n32305\n71359\n91126\n19203\n5208\n51116\n16005\n55696\n24844\n45759\n24712\n49927\n71085\n40077\n34377\n14301\n50517\n12078\n25870\n89261\n41707\n2763\n34697\n47961\n556\n18045\n68019\n73410\n5677\n52060\n91448\n20793\n42458\n20337\n81818\n12422\n45762\n73421\n2539\n60689\n99798\n3931\n29055\n38498\n77945\n57469\n16040\n98603\n19556\n51654\n68120\n6179\n12234\n70\n20750\n71582\n83135\n29438\n14795\n85272\n51502\n65065\n48199\n38465\n99617\n84014\n23743\n19849",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "31\n74547\n61655\n66845\n77660\n35519\n15635\n6020\n29715\n21965\n8864\n82826\n97525\n10125\n90415\n50338\n21414\n54925\n76203\n97483\n49403\n28858\n20781\n15270\n46107\n77023\n8122\n44673\n48629\n96731\n88439\n3063",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "38\n61824\n34582\n50381\n34485\n52340\n67336\n89886\n38272\n38618\n23751\n75813\n29290\n97537\n70910\n83993\n96832\n68819\n25010\n66865\n44257\n74408\n27891\n37895\n49807\n28711\n96084\n51062\n35573\n78162\n65201\n66438\n63046\n60019\n61555\n20528\n23290\n68734\n39924",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "38\n46110\n19942\n11140\n82528\n25403\n99930\n93769\n51477\n39654\n33778\n11210\n33503\n34336\n29682\n13330\n50489\n8068\n36798\n92602\n36817\n95193\n25407\n57577\n70880\n49619\n88601\n41083\n78005\n25457\n43892\n29176\n66525\n19041\n94906\n56921\n38856\n28275\n18655",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "55\n27312\n13109\n69486\n61544\n33880\n49857\n28514\n67125\n39811\n17167\n47751\n80714\n8816\n48924\n92839\n33633\n27437\n40444\n33611\n74662\n74106\n39564\n63504\n1559\n40230\n45139\n4892\n65051\n21731\n27264\n63297\n20103\n1206\n7493\n37832\n58420\n76464\n78417\n57515\n15272\n66593\n46168\n62212\n88467\n16074\n69584\n95146\n4696\n32245\n55630\n65275\n23150\n63427\n89063\n69686",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "56\n19547\n35251\n36715\n38525\n27686\n91315\n87431\n53998\n76581\n12330\n3666\n36063\n28481\n92442\n74485\n91209\n63223\n19280\n72281\n19210\n76059\n21366\n28755\n35139\n17197\n22196\n35831\n81690\n13419\n18468\n36149\n41983\n17574\n33673\n76670\n4340\n64329\n32569\n96953\n98022\n81350\n24367\n43322\n76989\n34429\n50531\n14432\n94648\n12328\n66512\n47874\n22572\n82535\n54296\n92520\n49641",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "100\n43087\n38975\n54192\n72213\n23648\n51933\n21339\n13353\n899\n92814\n13214\n99867\n58138\n75098\n4557\n3418\n29256\n74362\n21339\n40687\n19822\n30566\n68896\n8468\n59280\n32542\n27790\n94698\n75464\n39503\n91689\n51431\n61753\n5480\n21018\n76312\n75718\n54552\n59687\n64504\n61630\n62953\n49171\n74010\n36008\n54688\n91361\n80721\n75984\n51796\n85939\n32925\n77107\n50546\n1183\n94659\n33515\n62788\n61131\n6910\n3811\n275\n23549\n58733\n75107\n65282\n61225\n75229\n2411\n91890\n11502\n55269\n35896\n32781\n67996\n74595\n10327\n36092\n49353\n61357\n7001\n38696\n20877\n4993\n89889\n45052\n41831\n57934\n54796\n15102\n29782\n39957\n16933\n94439\n41579\n50319\n83315\n88142\n41518\n97568",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "100\n53976155\n14554468\n99882603\n60883206\n49423582\n99794257\n12790411\n18097881\n52126977\n94940716\n20299977\n33235925\n81363502\n49328635\n76196970\n19273945\n5596710\n47207033\n54118554\n26980858\n34651836\n1419930\n48701402\n17943749\n54000053\n60868355\n16807416\n60231592\n4001938\n20374155\n74444812\n10662631\n61232506\n7891843\n34409204\n5162883\n42906096\n65744861\n55157858\n47670568\n81933580\n55892582\n55562514\n98743026\n3151730\n31087139\n7483467\n92292603\n92395857\n28062314\n2460628\n36305250\n94175898\n55336087\n49765391\n48818451\n35002501\n47611751\n9815847\n7764809\n94099215\n66134\n81297146\n17720511\n43409560\n77908503\n78411960\n66443504\n81715396\n927051\n118157\n18532531\n7675998\n50930742\n83610168\n17855703\n42137044\n81641990\n26077688\n64240104\n36656562\n21585760\n49760609\n57088521\n60885370\n60739255\n17612978\n67074328\n71273953\n70523410\n8772629\n14587520\n58802653\n99616285\n39218556\n84091880\n7234714\n57618313\n89073447\n38752661",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "100\n75241343\n91330529\n22624687\n14391313\n883043\n21641469\n51739581\n71826109\n6677635\n28655465\n19362077\n52375284\n363510\n56019641\n43073586\n55111233\n51649105\n863772\n77111263\n32922990\n1997547\n50158607\n38099783\n46149905\n68896891\n73411908\n22055939\n35950041\n15366145\n49031784\n71464771\n33486242\n8611779\n35942363\n53070495\n26406147\n65668658\n5238813\n52567641\n64764723\n69278678\n34831925\n80434349\n18907782\n67070679\n9714746\n84814145\n56461462\n46607374\n9337274\n52084716\n11016462\n76198693\n95907260\n14685370\n36691283\n70400881\n7066630\n23180439\n90564375\n4619838\n57552695\n67280097\n61497356\n39237383\n33406856\n66914303\n19560268\n90598714\n54516792\n73256136\n47809988\n23949626\n27455630\n9731232\n64243181\n87051142\n69898210\n58225169\n35860932\n37585142\n18426285\n12036070\n72179859\n70099723\n90577430\n65397252\n72060504\n85491040\n81976166\n94341535\n17374495\n1003256\n68750096\n62248275\n92639726\n69440857\n40150377\n98532749\n67988001",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "2\n69802975\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 2)"
    },
    {
      "input": "100\n1\n98679595\n77531498\n24137630\n1\n1\n1\n100000000\n100000000\n1\n100000000\n1\n100000000\n1\n1\n30848902\n34478513\n1\n11047300\n29669206\n12846044\n12684812\n99366430\n100000000\n1\n100000000\n100000000\n100000000\n100000000\n24869555\n100000000\n1\n22521760\n100000000\n1\n100000000\n100000000\n1\n100000000\n37949402\n100000000\n100000000\n100000000\n100000000\n1\n91484621\n100000000\n1\n85336615\n6272589\n100000000\n1\n1\n63458327\n1\n100000000\n7207306\n100000000\n100000000\n100000000\n100000000\n1\n1\n1\n86495270\n1\n91267817\n1\n37141799\n46392148\n16684766\n20766480\n100000000\n97492712\n24038918\n100000000\n100000000\n80214520\n1\n58519278\n1\n100000000\n38968465\n1\n1\n63509515\n1\n100000000\n1\n100000000\n100000000\n100000000\n41394688\n2200154\n42114509\n100000000\n1\n35448317\n1\n32782296",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 100)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:24",
  "total_test_cases": 20
}
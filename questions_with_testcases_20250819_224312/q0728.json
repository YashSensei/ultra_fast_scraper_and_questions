{
  "problem_code": "problems",
  "title": "Portal",
  "tags": [],
  "text": "You, as the newly recruited mad scientist at Aperture Laboratories, has been challenged by GLaDOS to a game that will test a new type of Portal! The invention is a series of portals, to each of which is assigned a priority.One can only move from a portal with higher priority to another with lower priority. The game consists of moving the test subjects through the rooms of Aperture Science Enrichment Center. You and GLaDOS alternate turns: at each turn a player must move one of the subjects to a new room using the new portal prototype. Since her disastrous experiment with Chell, GLaDOS has decided not to hand over handheld portal devices to guinea pigs, so the portals have already been placed in the rooms, and their priority is the same priority associated to their room. This way, one can only move from a room to another if there are portals connecting them and the priority of the destination room is lower than the current room's. The loser will be the player who has no valid move and thus, is doomed to receive no cake and possibly die in a fire.InputThe input consists of several test cases.The first line of each test case will begin with two integers N, M denoting the number of rooms and the number of portal connections, 0 < N ≤ 1000 and 0 ≤ M ≤ N (N − 1)/2. Rooms are numbered from 0 to N − 1, and their priority is the same as their number.Then follows M lines describing the connections between two rooms. Each line contains two integers corresponding to rooms connected by portals.The next line contains an integer K , 1 ≤ K < N , denoting the number of test subjects. Two or more subjects may occupy the same room.Next K lines contain the room numbers where the subjects have been allocated.OutputFor each test case, assuming both you and GLaDOS play perfectly and you are the first player to make a move, print \"I win\" if you are victorious and \"I lose\" otherwise.ExampleInput:9 140 10 20 31 22 31 42 55 34 54 35 66 77 88 63358Output:I lose",
  "sample_input": "Input:9 140 10 20 31 22 31 42 55 34 54 35 66 77 88 63358Output:I lose",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/PORTALUN",
  "scraped_at": "2025-08-17 00:33:22",
  "test_cases": [
    {
      "input": "9 140 10 20 31 22 31 42 55 34 54 35 66 77 88 63358",
      "expected_output": "I lose",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "10 5 4 6 10 10 8 7 4 4 6 2 9 10 6 8",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "10 4 1 7 4 8 2 1 4 6 10 8 9 4 10 6",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "5 2 2 7 8 1 9 2 3 6 3 1 10 8 7 9",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "53 21 84 91 50 44 53 100 3 99 64 48 94 7 50 63",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "33 14 17 28 39 62 34 38 25 39 37 64 99 22 26 67",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "61 40 4 60 48 99 86 31 57 26 95 96 46 91 28 73",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "16 98 5 39 64 71 3 88 53 99 84 80 5 25 33 62",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "45 59 67 54 11 87 46 99 38 67 77 5 82 37 44 40",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "122 487 101 228 383 281 490 187 291 271 360 213 355 182 436 295",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "196 134 307 227 99 186 243 209 310 314 250 149 413 72 481 411",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "420 435 358 461 79 374 169 257 219 288 496 276 69 465 390 240",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "439 406 329 486 315 102 226 157 225 303 379 216 379 325 161 299",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "338 371 294 210 467 54 345 246 462 283 469 292 359 231 314 447",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "463 462 189 493 384 282 483 289 389 50 283 186 79 409 143 166",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "84 425 120 352 188 372 370 335 54 59 100 281 238 451 373 438",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 999 2 1000 2 2 1000 1 2 2 1 1 999 999 1 1000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 1000 999 999 1000 2 1000 1 1 1000 1000 999 999 1000 1000 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:15",
  "total_test_cases": 20
}
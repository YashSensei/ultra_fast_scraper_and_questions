{
  "problem_code": "problems",
  "title": "Frequent values",
  "tags": [],
  "text": "You are given a sequence ofnintegersa1, a2... anin non-decreasing order. In addition to that, you are given several\r\nqueries\r\nconsisting of indicesiandj(1\r\n≤ i ≤ j ≤ n). For each query, determine the\r\nmost\r\nfrequent value among the integersai... aj.Input SpecificationThe input consists of several test cases.\r\nEach test case starts with a line containing two integersnandq(1 ≤ n, q ≤ 100000).\r\nThe next line containsnintegersa1... an(-100000 ≤ ai≤ 100000, for eachi ∈ {1 ... n})\r\nseparated by spaces.\r\nYou can assume that for eachi ∈ {1 ... n-1}: ai≤ ai+1.\r\nThe followingqlines contain one query each,\r\nconsisting of two integersiandj(1 ≤ i ≤ j ≤ n), which indicate the boundary indices for the\r\nquery.The last test case is followed by a line containing a single0.Output SpecificationFor each query, print one line with one integer:\r\nThe number of occurrences of the most frequent value within\r\nthe given range.Sample Input10 3\r\n-1 -1 1 1 1 1 3 10 10 10\r\n2 3\r\n1 10\r\n5 10\r\n0Sample Output1\r\n4\r\n3A naive algorithm may not run in time!",
  "sample_input": "10 3\r\n-1 -1 1 1 1 1 3 10 10 10\r\n2 3\r\n1 10\r\n5 10\r\n0",
  "sample_output": "1\r\n4\r\n3",
  "link": "https://www.spoj.com/problems/FREQUENT",
  "scraped_at": "2025-08-17 00:33:35",
  "test_cases": [
    {
      "input": "10 3\r\n-1 -1 1 1 1 1 3 10 10 10\r\n2 3\r\n1 10\r\n5 10\r\n0",
      "expected_output": "1\r\n4\r\n3",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3 9\n9 7 7 7 7 8 7 2 4 1\n7 6\n9 7\n3 5\n8",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "10 2\n7 8 8 2 9 3 9 7 10 8\n1 5\n10 10\n2 9\n6",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "2 10\n4 10 1 4 2 2 2 9 7 2\n7 1\n1 8\n3 7\n1",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "95 35\n100 94 18 85 64 96 34 96 11 84\n68 41\n88 7\n75 99\n8",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "71 92\n81 54 94 8 52 7 75 86 69 94\n23 18\n19 3\n72 42\n54",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "56 12\n10 81 39 98 92 45 26 69 23 9\n32 78\n31 50\n28 85\n53",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "90 66\n1 48 72 75 26 87 98 29 38 49\n52 93\n44 71\n71 46\n23",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "55 69\n50 12 66 90 32 37 55 63 56 62\n97 43\n40 82\n15 2\n72",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "276 485\n388 156 170 239 93 226 290 198 303 451\n493 215\n297 198\n496 165\n158",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "292 416\n103 172 230 203 105 457 205 312 322 356\n266 76\n269 93\n439 483\n271",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "83 395\n299 428 374 120 340 110 300 180 368 289\n313 170\n270 407\n275 232\n152",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "112 156\n184 284 87 360 156 259 399 430 150 388\n423 146\n369 466\n444 153\n107",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "241 411\n483 443 50 304 384 452 347 422 102 421\n273 75\n364 210\n448 96\n138",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "300 257\n213 270 332 446 473 296 369 256 272 124\n240 169\n437 496\n261 275\n301",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "306 250\n451 90 195 90 462 360 296 181 476 61\n259 326\n283 468\n215 115\n397",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 1000\n1000 2 999 999 2 1 2 1 999 999\n999 2\n1 2\n1 1\n2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 1000\n999 2 1000 1000 1000 1000 1 999 1 1000\n2 1000\n2 2\n1000 1000\n1000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:16",
  "total_test_cases": 20
}
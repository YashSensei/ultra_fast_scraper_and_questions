{
  "problem_code": "problems",
  "title": "Indicator of progression",
  "tags": [],
  "text": "When dealing with a long task, computers often provide a progress indicator to help users estimate how much longer they will have to wait. This is especially useful when copying a large number of data files from one drive to another.In the Institute of Computer Power Control (ICPC) are very concerned about their brand new file copier, which they think will change forever the way people copy files. While this is a great accomplishment for the engineers in ICPC, the lack of a progress indicator is threatening the future of the project and the well being of most computer users around the world!The Supremum Principal Director Manager of ICPC has called you personally to ensure you are up for the task. The interface provided by the developing team of the file copier only gives two integers M and N. M is the number of files that have already been copied, and N is the total number of files to be copied. Using this information, you must write a module that displays the progress indicator.The indicator must be drawn as a string of exactly 20 characters. The first K of them must be asterisks (“*”) and the rest must be hyphens (“-”). The number K must be chosen in such a way that K/20 correctly approximates M/N ; this means that the distance between the two mentioned fractions is minimum. If there is more than one possible value for K, the greatest one must be chosen. Also, for more precision, a number P without leading zeroes and followed by a percentage sign (“%”) must be written on top of the described indicator. Since the goal is to represent the finished percentage, the number P must be such that P/100 correctly approximates M/N, with the same policy as before. The finished percentage must be centered on top of the display. This means that if possible, the same number of display characters (“*” or “-”) must be seen to the left and to the right of the percentage; if this is not possible, exactly one extra character must be seen to the left.InputThe input contains several test cases. Each test case is described in a single line that contains two integers M and N as explained above (0 ≤ M ≤ N ≤ 109and N ≠ 0). These values are separated by a single space. The last line of the input contains the number −1 twice separated by a single space and should not be processed as a test case.OutputFor each test case output a single line with exactly 20 characters representing the mentioned display.ExampleInput:2 5\r\n2 6\r\n0 10\r\n-1 -1Output:********-40%--------\r\n*******--33%--------\r\n---------0%---------",
  "sample_input": "Input:2 5\r\n2 6\r\n0 10\r\n-1 -1Output:********-40%--------\r\n*******--33%--------\r\n---------0%---------",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/INDIPROG",
  "scraped_at": "2025-08-17 00:33:05",
  "test_cases": [
    {
      "input": "2 5\r\n2 6\r\n0 10\r\n-1 -1",
      "expected_output": "********-40%--------\r\n*******--33%--------\r\n---------0%---------",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "6 7\n4 6\n9 1\n7 10",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "1 5\n1 8\n3 6\n5 10",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "8 7\n5 2\n1 2\n10 7",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "91 24\n83 13\n43 52\n51 90",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "81 83\n59 20\n2 29\n78 78",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "91 45\n42 92\n16 92\n71 19",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "20 54\n12 46\n63 51\n12 15",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "35 25\n89 76\n18 69\n18 36",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "50 17\n24 19\n17 33\n20 48",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "38 11\n19 28\n5 9\n37 5",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "29 21\n53 7\n11 43\n14 8",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "20 45\n28 23\n27 33\n20 41",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "39 52\n6 50\n34 19\n15 10",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "25 16\n24 15\n44 37\n28 10",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "26 7\n25 19\n28 36\n26 48",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "109 109\n109 109\n109 109\n109 109",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "109 109\n109 109\n109 109\n109 109",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 2\n109 1\n1 109\n1 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 2\n109 108\n1 2\n109 109",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:15",
  "total_test_cases": 20
}
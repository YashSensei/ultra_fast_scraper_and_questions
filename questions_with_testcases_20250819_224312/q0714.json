{
  "problem_code": "problems",
  "title": "Graph Cut",
  "tags": [],
  "text": "Given a graph G, and a subset of its vertices X. The associated cut of X is the set of edges associated to X is the subset of all edges in G such that exactly one of the two vertices it joins belongs to X. In thinks, you will be given a graph and a subset of its edges, and you will have to determine whether there exists a subset of the vertices of the graph for which the given subset of the edges is its associated cut.InputThe first line contains an integer T, the number of test cases (1 ≤ T ≤ 40). Each test case, consists of a line which contains three integers N (2 ≤ N ≤ 500), E (1 ≤ E ≤ 104), K (1 ≤ K ≤ E), the number of vertices in the graph, and the number of edges in the subset for which we want to know whether it is an associated cut or not. Then, E lines follow, each of them contains two integers u, v (1 ≤ u, v ≤ N) which are the vertices joined by the edge, the first K of these E lines represent the asked subset.OutputOutput T lines, one for each test case. If the asked subset is an associated cut, then print “YES”, otherwise print “NO”.ExampleInput:23 3 11 22 31 312 17 63 45 610 111 56 104 81 22 36 77 89 1011 125 92 63 77 118 12Output:NOYES",
  "sample_input": "Input:23 3 11 22 31 312 17 63 45 610 111 56 104 81 22 36 77 89 1011 125 92 63 77 118 12Output:NOYES",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/GRAPHCUT",
  "scraped_at": "2025-08-17 00:33:08",
  "test_cases": [
    {
      "input": "23 3 11 22 31 312 17 63 45 610 111 56 104 81 22 36 77 89 1011 125 92 63 77 118 12",
      "expected_output": "NOYES",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "7 1 1 5 4 5 9 1 2 8 7 1 8 1 4 5 10 10 4 2 6 3 6 7 8",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "3 9 10 6 7 2 2 7 8 5 3 3 6 7 9 2 5 7 1 5 1 3 1 1 10",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "2 9 2 1 1 2 3 2 2 9 2 7 6 8 7 7 3 4 6 10 2 6 8 1 7",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "70 2 82 15 31 75 77 39 85 70 31 58 14 4 8 44 66 35 16 87 18 24 42 27 90",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "56 13 65 36 94 59 30 17 1 63 61 22 25 55 54 41 69 56 60 39 56 64 14 43 96",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "34 76 70 79 80 7 5 74 60 35 42 2 61 2 21 91 31 64 30 98 49 55 43 90 39",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "62 25 74 86 52 85 2 94 33 9 92 91 53 24 5 39 11 72 42 68 18 33 29 43 5",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "31 93 59 63 19 45 69 67 40 34 79 69 96 57 9 70 17 4 86 74 71 68 30 62 98",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "150 47 82 93 212 203 131 166 118 109 136 75 227 59 210 29 148 57 65 226 210 149 33 73 171",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "56 145 50 86 29 249 185 69 228 68 117 211 53 170 45 77 95 242 204 121 240 212 120 129 227",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "188 156 169 49 189 93 81 145 245 196 233 49 209 221 127 50 178 69 151 222 155 136 167 147 38",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "242 165 227 133 25 63 103 86 174 233 37 209 79 165 26 148 122 146 141 174 182 70 232 90 250",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "52 249 132 29 231 170 62 89 40 184 101 154 146 157 190 78 232 82 25 156 87 121 196 38 58",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "85 84 97 215 243 163 157 165 187 104 164 32 124 204 224 34 219 213 51 119 135 109 195 225 218",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "101 32 235 202 204 179 152 148 220 233 202 65 157 119 249 249 202 146 99 229 247 230 104 132 204",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 2 2 499 1 1 499 499 499 500 500 1 2 500 500 1 499 499 1 500 1 499 500 500 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 500 1 499 1 2 1 2 2 499 2 1 499 2 1 500 500 2 499 2 500 500 499 1 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:14",
  "total_test_cases": 20
}
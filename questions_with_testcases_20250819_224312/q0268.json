{
  "problem_code": "problems",
  "title": "Decoding",
  "tags": [],
  "text": "Chip and Dale have devised an encryption method to hide their (written) text messages. They first\r\nagree secretly on two numbers that will be used as the number of rows (R) and columns (C) in a\r\nmatrix. The sender encodes an intermediate format using the following rules:The text is formed with uppercase letters [A-Z] and.Each text character will be represented by decimal values as follows:= 0, A = 1, B = 2, C = 3 ... Y = 25, Z = 26The sender enters the 5 digit binary representation of the characters’ values in a spiral pattern along\r\nthe matrix as shown below. The matrix is padded out with zeroes (0) to fill the matrix completely. For\r\nexample, if the text to encode is: \"ACM\" and R=4 and C=4, the matrix would be filled in as follows:A = 00001, C = 00011, M = 01101\r\n         (one extra 0)The bits in the matrix are then concatenated together in row major order and sent to the receiver.\r\nThe example above would be encoded as: 0000110100101100InputThe first line of input contains a single integer N, (1 ≤ N ≤ 1000) which is the number of datasets that\r\nfollow.Each dataset consists of a single line of input containing R (1 ≤ R ≤ 20), a space, C (1 ≤ C ≤ 20),\r\na space, and a string of binary digits that represents the contents of the matrix (R × C binary digits).\r\nThe binary digits are in row major order.OutputFor each dataset, you should generate one line of output with the following values: The dataset\r\nnumber as a decimal integer (start counting at one), a space, and the decoded text message. You\r\nshould throw away any trailing spaces and/or partial characters found while decoding.ExampleInput:4\r\n4 4 0000110100101100\r\n5 2 0110000010\r\n2 6 010000001001\r\n5 5 0100001000011010110000010Output:1 ACM\r\n2 HI\r\n3 HI\r\n4 HI HO",
  "sample_input": "A = 00001, C = 00011, M = 01101\r\n         (one extra 0)",
  "sample_output": "Input:4\r\n4 4 0000110100101100\r\n5 2 0110000010\r\n2 6 010000001001\r\n5 5 0100001000011010110000010Output:1 ACM\r\n2 HI\r\n3 HI\r\n4 HI HO",
  "link": "https://www.spoj.com/problems/GNY07D",
  "scraped_at": "2025-08-17 00:33:15",
  "test_cases": [
    {
      "input": "A = 00001, C = 00011, M = 01101\r\n         (one extra 0)",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4\r\n4 4 0000110100101100\r\n5 2 0110000010\r\n2 6 010000001001\r\n5 5 0100001000011010110000010",
      "expected_output": "1 ACM\r\n2 HI\r\n3 HI\r\n4 HI HO",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "2 9 7\nygyzl dycyq ol gook egr b yfv gh 7\n1\nqwokp k ig",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "7 4 2\nh hej j vipnp h cuz jcdi deeu 4\n6\njjiyu agcgh wmp",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "4 5 10\ndwm ik x uyibj umswe wvlx bi wsm 5\n2\nqwhio ctwf xbden",
      "expected_output": "To be computed",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "96 51 63\nga lbh sbp pv jc wpftg ujavx her 67\n37\nchx sudy ugd",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "60 73 17\nlltfc ukval ozuprw pairp quxw szddk iaf hwvs 70\n79\ngmldv jhtlj pzz",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "71 57 68\nadhhz mr kcil qlmw xwwn m qoxe lvkwb 83\n1\nqzm d hak",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "98 28 93\nzss gvc avujo w gbsp ttgmm kbgav v 63\n95\nkav n budn",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "83 22 24\nnumk tsmvd pw oa py lejgry day awqx 52\n96\no ejm jydfl",
      "expected_output": "To be computed",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "184 250 128\ntzh xzj oogr np n qdkk jjew faof 73\n75\npwgk m dtfjp",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "189 114 441\nu tq omvft uw q s yk ett 151\n318\nuysgj y kma",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "489 103 317\nqkub cftgn oexsc z x rgdmwq chew ykr 225\n104\ncpmck nkcy aa",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "458 234 180\nbokxq ijrbg zxs xvfl yeg cx hwj jadd 367\n97\na ielqc dtd",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "300 374 441\nlsi ckn rf zsox j plxw lvcpq mjh 450\n300\nby vk w",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "405 121 404\nowex ka xvgwk xsoo ue cmy g ax 275\n185\nlcqy n rau",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "335 58 321\nzdjbp g tuus jzdog xwii ywu vlrn vhpm 238\n111\nrxza s i",
      "expected_output": "To be computed",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000\nhzx isenn zjueco czadp odfq qkncbl udw l 1000\n1000\nk gznqm n",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000\nb k rwpiu cf rtf cg kwui qn 1000\n1000\nrepg vyjpb ybytt",
      "expected_output": "To be computed",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "2 1000 1\nwcxpu rwjs grdpy khrbe mgk k h jj 1\n1\nigi yjxe a",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:13",
  "total_test_cases": 20
}
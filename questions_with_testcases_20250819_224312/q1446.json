{
  "problem_code": "problems",
  "title": "Polygon",
  "tags": [],
  "text": "There are N points in a plane whose coordinates are natural numbers.\r\nA convex polygon with maximal number of vertices is a convex polygon\r\nwhose vertices are some of given points and the origin having maximal\r\npossible number of vertices. Origin, i.e. point with coordinates\r\n(0, 0), must be one of vertices of a convex polygon with maximal number\r\nof vertices.Write a program that will determine number of vertices in such polygon.A polygon is convex if every line segment whose endpoints are inside\r\nthat polygon is also completely inside it.\r\nConsecutive edges of a polygon must not be parallel.InputThe first line of input file contains a natural number N, 2 ≤ N ≤ 100,\r\na number of given points.Each of the following N lines contains two natural numbers X and Y,\r\n1 ≤ X ≤ 100, 1 ≤ Y ≤ 100, separated by a space character, coordinates of\r\none point.All points will be different.OutputThe first and only line of output file should contain number of vertices\r\nof convex polygon with maximal number of vertices.\r\nNote: the result will always be at least 3.SampleInput5\r\n4 2\r\n2 2\r\n2 3\r\n3 2\r\n3 1Output4Input8\r\n10 8\r\n3 9\r\n2 8\r\n2 3\r\n9 2\r\n9 10\r\n10 3\r\n8 10Output8Input10\r\n9 6\r\n1 7\r\n2 2\r\n3 9\r\n8 7\r\n3 2\r\n9 4\r\n3 1\r\n9 7\r\n6 9Output7Explanation for test data #2: coordinates of polygon are (2, 8), (3, 9), (8, 10), (9, 10), (10, 8), (10, 3), (9, 2), (0, 0)",
  "sample_input": "Input5\r\n4 2\r\n2 2\r\n2 3\r\n3 2\r\n3 1Output4",
  "sample_output": "Input8\r\n10 8\r\n3 9\r\n2 8\r\n2 3\r\n9 2\r\n9 10\r\n10 3\r\n8 10Output8",
  "link": "https://www.spoj.com/problems/MPOLY",
  "scraped_at": "2025-08-17 00:33:52",
  "test_cases": [
    {
      "input": "Input5\r\n4 2\r\n2 2\r\n2 3\r\n3 2\r\n3 1Output4",
      "expected_output": "Input8\r\n10 8\r\n3 9\r\n2 8\r\n2 3\r\n9 2\r\n9 10\r\n10 3\r\n8 10Output8",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2\n1\n3",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "4\n3\n9\n1\n8",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "2\n2\n10",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "6\n76307877\n9997374\n97065602\n33274537\n61711492\n75312311",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "13\n16856521\n61294593\n29949359\n93396206\n60309111\n930794\n63674808\n61262710\n34923477\n7047691\n63451622\n35602551\n19290653",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "7\n85050812\n38277724\n78628073\n61044368\n53450039\n72713692\n4037752",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "7\n51030162\n77620489\n68402015\n48218588\n9433431\n23539966\n78530748",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "13\n51568237\n55228100\n54092139\n40612561\n4426585\n88385048\n6500694\n64616453\n4088259\n21294168\n85620881\n45387867\n7680433",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "27\n38724\n80241\n36560\n26197\n3643\n69128\n70818\n50976\n77358\n41495\n13212\n5663\n43577\n95907\n85352\n24710\n53333\n72199\n53113\n93071\n81899\n82897\n63622\n38736\n44022\n17330\n69648",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "82\n79935\n9077\n92300\n64276\n76235\n31485\n34166\n97930\n18744\n6930\n4221\n63278\n89797\n73141\n65548\n95678\n30075\n46493\n797\n25799\n6385\n1584\n70208\n62281\n54058\n82553\n62854\n1318\n91958\n97625\n77759\n23913\n49568\n39433\n84038\n77042\n62143\n43054\n9629\n61475\n22940\n28635\n13991\n36781\n65043\n5627\n76238\n48547\n69344\n97338\n45293\n79702\n17161\n6483\n3921\n36562\n71972\n49585\n16936\n86341\n85126\n6831\n66696\n90941\n39084\n15710\n40793\n75432\n6560\n60365\n49503\n89183\n42359\n7850\n95919\n45945\n14894\n86212\n60465\n61892\n73392\n93883",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "62\n68854\n52526\n65662\n97549\n11298\n35623\n57084\n7372\n21851\n13830\n48605\n6476\n52460\n61704\n83037\n3388\n63497\n80411\n61191\n66783\n61739\n62721\n98806\n43195\n99700\n60519\n70143\n59004\n57299\n6669\n81466\n94392\n21471\n7143\n80829\n62661\n16458\n49772\n18691\n12079\n9853\n60583\n56972\n34114\n45030\n92637\n21733\n45498\n68438\n21663\n29443\n11663\n94729\n1210\n97951\n70579\n89785\n12740\n70697\n18182\n40152\n30328",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "95\n40104\n69482\n10860\n27365\n45420\n58490\n30936\n58665\n4945\n93281\n90521\n11240\n91059\n59934\n821\n92217\n52682\n18867\n56277\n68406\n86651\n23099\n9586\n60641\n89943\n94258\n45359\n61825\n49431\n52827\n33843\n53261\n15668\n94158\n54543\n49612\n53611\n25678\n31782\n59584\n96294\n27009\n22446\n33697\n40581\n6974\n90099\n30135\n17159\n37882\n74445\n27873\n82197\n9134\n7610\n78173\n91332\n60241\n76357\n6771\n45043\n38207\n20053\n18976\n94065\n29341\n20205\n99910\n14249\n61895\n3713\n35824\n59047\n95332\n32729\n51088\n67080\n63593\n29607\n94573\n96629\n92014\n50365\n13285\n85134\n27954\n87191\n47324\n44303\n37044\n2407\n91894\n23193\n3234\n61035",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "23\n55051\n94571\n87955\n39934\n57382\n81105\n19268\n38382\n30593\n54610\n57939\n49958\n76134\n50146\n56481\n72365\n67106\n26966\n74539\n52573\n12104\n91185\n53520",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "30\n48356\n12021\n49350\n57839\n49113\n12069\n27747\n30966\n24581\n5223\n64781\n47739\n14609\n81757\n95955\n79258\n58851\n26396\n79105\n21163\n25126\n60643\n71935\n26964\n21628\n25754\n56041\n57213\n656\n71061",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "22\n90152\n51480\n77699\n64008\n59196\n42720\n11710\n94964\n84642\n46431\n13381\n73527\n8817\n83273\n77742\n71461\n11958\n96101\n93678\n91476\n41982\n10271",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "100\n61117027\n98698106\n47823443\n21747273\n13376959\n40462088\n9292382\n19202867\n14402074\n70862563\n76779460\n45406139\n75330105\n45439113\n57775576\n42701986\n55883633\n74481592\n82942412\n24897279\n29302909\n41274145\n14769184\n25435887\n57762293\n65468143\n91776986\n49395562\n96869599\n78442851\n14223272\n51205240\n87848687\n72402189\n53926285\n91890004\n76333173\n43448899\n2714221\n19673325\n4002794\n11925603\n3485572\n93631439\n63802554\n94983943\n51392406\n2204263\n93179982\n16469962\n82630879\n99334626\n44870978\n82189564\n46422662\n61822433\n27895475\n87415514\n79699542\n59699175\n89736037\n72969396\n17990060\n54696230\n45986022\n2331707\n46100734\n17239894\n191472\n61009527\n20037510\n88713526\n18047803\n90106311\n87827000\n99640115\n63410504\n61465928\n1913395\n82512027\n60094923\n43515750\n6669767\n83739382\n73204454\n83630151\n26720904\n13801838\n5024969\n51500100\n12974395\n21124770\n15297452\n18074729\n37913669\n57176962\n42261295\n36828694\n60909710\n57435942",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "100\n54733725\n85113079\n82049049\n83986038\n83726837\n12710347\n86365053\n44430276\n73516354\n14375070\n50050768\n88065385\n92334867\n90419791\n82930662\n71196132\n91818751\n40127061\n67963436\n66624517\n35800158\n50331618\n29143029\n30760627\n57323800\n30834654\n77249001\n19432619\n94543618\n15047247\n39967672\n90882202\n37397323\n81132258\n61272554\n90906131\n40162963\n22497820\n21211412\n25603220\n70644998\n5776947\n92177991\n18800215\n60603528\n10320957\n67956104\n99076287\n73379815\n94521043\n32319730\n42201670\n71217476\n27877927\n25333001\n12409939\n69673039\n65950599\n20887557\n89584768\n9033673\n8119045\n2065749\n81651084\n95328677\n24956199\n42159676\n69540324\n48981359\n46769545\n57650107\n192957\n35703893\n2954069\n90098662\n85859799\n47133448\n43241767\n97686245\n53586554\n1873884\n86865084\n44994730\n84395386\n50361597\n62761665\n62447883\n56369288\n18650126\n4311383\n21403834\n89136181\n85188035\n86774087\n93722526\n32890633\n32675062\n50878718\n59831420\n33314148",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "100\n45252750\n1\n100000000\n18388562\n1\n1\n57375398\n95026330\n65715909\n13186636\n58246122\n1\n100000000\n44630337\n1\n100000000\n17419164\n75134179\n3407615\n16648930\n1\n1\n1\n12775328\n100000000\n1\n35729014\n100000000\n88415333\n48498234\n1\n11902008\n100000000\n1\n1\n100000000\n100000000\n100000000\n44539740\n11140735\n100000000\n100000000\n72993650\n100000000\n26742364\n1\n100000000\n100000000\n1\n100000000\n50926580\n10150635\n100000000\n100000000\n100000000\n70514913\n75824126\n100000000\n1\n57378080\n100000000\n1\n1\n1\n100000000\n74670180\n1\n18047115\n1\n27847998\n48002160\n65168081\n100000000\n100000000\n100000000\n100000000\n100000000\n100000000\n1\n100000000\n5010134\n100000000\n36899911\n6506157\n100000000\n1\n100000000\n5566535\n47819573\n1\n66023310\n57632034\n1\n100000000\n1\n1\n100000000\n93625126\n15616262\n41431085",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 100)"
    },
    {
      "input": "100\n96296064\n100000000\n99221943\n1\n1\n100000000\n71712774\n1\n32955148\n1\n1\n69235986\n1\n28012334\n100000000\n1\n100000000\n100000000\n22484893\n100000000\n100000000\n1\n74467071\n100000000\n43269945\n1\n1\n99917195\n89010049\n7125873\n100000000\n1\n100000000\n1\n100000000\n100000000\n1\n52237709\n1\n100000000\n100000000\n100000000\n67623337\n75896168\n10887954\n99207431\n1\n100000000\n94327985\n1\n100000000\n1\n80842353\n100000000\n59341454\n63165937\n1\n100000000\n100000000\n51661681\n100000000\n20976163\n84784890\n100000000\n100000000\n1\n1\n50918328\n1\n1\n92450913\n38700784\n100000000\n1\n1\n100000000\n57725230\n100000000\n1\n100000000\n100000000\n1\n100000000\n100000000\n94554416\n100000000\n52492035\n1\n16072400\n18422248\n1\n13892193\n1\n1\n1\n20076434\n1\n1\n1\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 100)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:17",
  "total_test_cases": 20
}
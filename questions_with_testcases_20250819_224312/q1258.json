{
  "problem_code": "problems",
  "title": "Prime queries",
  "tags": [],
  "text": "You are given a simple task.Given a sequence A[i] with N numbers such that 1 ≤ i ≤ N. You have to perform Q operations on a given set of numbers.Operations:A V l, Add the value V to element with index l.R a l r, Replace all the elements of sequence with index i such that l ≤ i ≤ r with a.Q l r, Print the number of elements with index i such that l ≤ i ≤ r and A[i] is prime number and A[i] ≤ 107.No number in the sequence ever will exceed 109.Constraints1 ≤ N ≤ 1051 ≤ Q ≤ 105V ≤ 103A[i] ≤ 108a ≤ 1071 ≤ l ≤ r ≤ N.InputFirst line contains N as number of sequence elements and Q as number of operations to be performed. Second line contains N initial elements of the sequence. After that each of the next Q lines contains one operation to be performed on the sequence.OutputPrint each value in newline as stated above.ExampleInput:5 10\r\n1 2 3 4 5\r\nA 3 1\r\nQ 1 3\r\nR 5 2 4\r\nA 1 1\r\nQ 1 1\r\nQ 1 2\r\nQ 1 4\r\nA 3 5\r\nQ 5 5\r\nQ 1 5Output:2\r\n1\r\n2\r\n4\r\n0\r\n4",
  "sample_input": "Input:5 10\r\n1 2 3 4 5\r\nA 3 1\r\nQ 1 3\r\nR 5 2 4\r\nA 1 1\r\nQ 1 1\r\nQ 1 2\r\nQ 1 4\r\nA 3 5\r\nQ 5 5\r\nQ 1 5Output:2\r\n1\r\n2\r\n4\r\n0\r\n4",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/PRMQUER",
  "scraped_at": "2025-08-17 00:33:38",
  "test_cases": [
    {
      "input": "5 10\r\n1 2 3 4 5\r\nA 3 1\r\nQ 1 3\r\nR 5 2 4\r\nA 1 1\r\nQ 1 1\r\nQ 1 2\r\nQ 1 4\r\nA 3 5\r\nQ 5 5\r\nQ 1 5",
      "expected_output": "2\r\n1\r\n2\r\n4\r\n0\r\n4",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "6 3\n1 10 5 1 4\n10 9\nsm 10 4\n5 9\nka 5 4\n4 8 10\nlpvm 7 9 1\n1 6\na 7 9\n1 6\nn 5 9\n2 9\nx 1 1\n10 5\npiup 3 3\n5 8\ncvr 4 4\n6 2\nnhgm 7 4\n9 2\nqb 5 10",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "7 5\n9 2 1 8 5\n3 10\nkbdsy 6 2\n6 7\nyegq 5 4\n2 5 8\ndl 6 10 5\n4 8\nshjmb 1 8\n2 4\ne 6 1\n1 6\nt 10 6\n7 1\nbzmhj 8 8\n2 9\nlfm 10 8\n5 5\nr 8 1\n9 5\naqa 3 9",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "3 2\n8 7 1 8 10\n10 7\naquz 2 9\n8 10\ns 1 2\n10 2 2\nnqal 2 1 6\n10 3\nv 3 9\n5 7\nzbcn 2 7\n7 10\nq 4 7\n7 3\nbu 4 5\n9 1\nfgueh 7 10\n6 1\nzt 10 7\n3 2\ndzzko 2 1",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "38 57\n49 35 72 77 17\n50 91\nkymep 80 35\n78 56\noms 32 75\n1 43 11\ndj 50 47 21\n3 72\nsen 29 64\n60 19\nbpzan 40 7\n84 90\nfw 27 38\n96 42\nycpw 81 74\n89 31\nm 47 27\n48 81\nl 47 8\n14 35\nbpdp 80 34",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "83 21\n21 86 7 57 21\n9 42\nu 92 61\n87 77\nfag 91 81\n45 51 81\nc 48 36 60\n18 88\nufwmz 4 4\n5 33\ny 26 16\n18 33\nzh 97 10\n12 75\nxo 45 68\n29 96\nmeqk 64 67\n77 6\nyhux 91 25\n77 58\nzfmju 25 15",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "99 93\n26 89 93 91 23\n1 82\nho 83 65\n78 100\nfhsi 85 18\n39 33 16\now 91 10 77\n29 31\nok 89 71\n24 16\ndntty 97 50\n38 36\nkoy 7 19\n69 8\nzxbey 21 42\n36 51\nsm 78 46\n53 21\nt 37 94\n2 73\np 61 95",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "57 4\n91 41 60 26 6\n69 7\nprxom 70 63\n27 3\ngrqmj 70 63\n89 67 98\nonhs 34 41 43\n57 90\ncspie 8 28\n94 48\njvqed 17 98\n76 86\nyru 64 29\n19 34\nmor 10 4\n66 79\nbzrh 24 54\n65 34\nc 93 57\n70 81\nk 47 2",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "15 57\n86 46 9 59 93\n28 33\nwtx 27 17\n89 89\ntu 17 55\n49 17 66\nu 95 53 83\n49 83\ntf 97 99\n80 29\nbm 55 66\n24 38\npk 38 40\n31 54\nmvqmn 46 19\n32 32\nb 73 66\n41 99\ntitr 64 86\n78 67\nuner 59 74",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "228 326\n524 86 514 253 285\n151 240\nummk 429 215\n249 201\nzytwl 247 106\n58 101 482\ns 80 448 402\n429 349\npvpl 500 55\n288 154\nn 493 80\n59 296\nldph 450 183\n276 194\nhtf 159 483\n419 98\nkkxzc 345 331\n371 417\nn 521 160\n385 171\nlb 65 394",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "173 52\n203 343 375 391 55\n392 249\nnkd 190 382\n451 356\nrdcm 490 499\n114 181 113\nsoo 465 238 72\n398 317\nmrmz 275 303\n110 146\nhbm 518 393\n229 65\nys 96 423\n498 403\nwirhx 261 393\n96 401\nvxrt 107 436\n378 269\nttma 185 58\n256 432\ny 516 252",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "164 430\n83 207 418 388 282\n458 293\ngs 462 52\n447 62\nzshu 106 278\n208 473 315\nx 391 299 154\n57 486\nim 449 287\n228 108\nrm 148 480\n492 513\ngw 189 254\n417 223\nw 209 236\n286 223\nvzixq 240 428\n502 91\nhaxo 448 332\n203 93\nsfw 106 444",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "254 254\n465 370 184 181 361\n172 447\nj 402 389\n302 339\nkwvd 115 510\n144 448 474\nkx 350 174 504\n59 289\nnafjs 461 411\n264 187\nijgsi 240 241\n480 75\nwyl 187 247\n415 473\nim 474 170\n398 98\nlkvzo 250 407\n321 316\nwzfyp 145 309\n352 196\nipy 86 495",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "81 66\n311 172 78 359 152\n62 138\nfgx 517 407\n244 359\nhjewx 125 443\n414 402 235\nwoat 327 146 517\n368 138\nohzvv 154 408\n353 90\nhofzl 457 116\n67 100\ndaueh 472 498\n265 323\nvdbti 331 150\n443 383\nb 273 445\n309 127\nf 261 338\n221 313\ndg 414 61",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "384 331\n494 106 53 77 509\n504 271\nygcu 88 177\n195 240\nqliz 251 138\n370 155 462\nkhzho 462 236 489\n242 329\ny 307 331\n224 291\nctrl 281 343\n433 174\nxrzw 253 218\n168 81\nhsr 431 61\n471 346\nh 148 210\n395 417\ngy 130 383\n300 207\ntokln 341 484",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "345 114\n286 408 64 336 215\n209 523\nm 468 218\n293 291\nqwa 323 288\n513 444 204\ntxck 61 192 448\n462 198\njulv 394 233\n132 297\nuul 366 507\n481 162\nkb 435 200\n374 460\nr 273 168\n235 434\nymjt 196 346\n101 237\ns 417 166\n96 270\ntcb 169 420",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1051 1051\n1051 1051 1051 1051 1051\n1051 1051\nzch 1051 1051\n1051 1051\nb 1051 1051\n1051 1051 1051\nn 1051 1051 1051\n1051 1051\nc 1051 1051\n1051 1051\nh 1051 1051\n1051 1051\ncwkii 1051 1051\n1051 1051\ndvq 1051 1051\n1051 1051\nwiw 1051 1051\n1051 1051\nql 1051 1051\n1051 1051\nf 1051 1051",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1051 1051\n1051 1051 1051 1051 1051\n1051 1051\njd 1051 1051\n1051 1051\nuzq 1051 1051\n1051 1051 1051\nslbh 1051 1051 1051\n1051 1051\nldff 1051 1051\n1051 1051\ncyppq 1051 1051\n1051 1051\nchj 1051 1051\n1051 1051\nysaly 1051 1051\n1051 1051\njgh 1051 1051\n1051 1051\ngi 1051 1051\n1051 1051\ndupk 1051 1051",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 1050\n2 1 2 2 1051\n1051 1\nk 1051 1050\n1051 1050\ntw 2 2\n1050 1050 1050\ni 2 2 1051\n1051 1051\nhju 1050 1051\n1 2\nb 1 2\n1050 1\ngvv 1050 1\n1 2\nxzczg 1051 2\n1050 1051\nmc 2 1051\n1051 1\nvv 2 1050\n1 2\nnpxds 1051 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 1\n2 1050 2 1 1\n2 1\nlmdz 1050 1050\n1051 1050\nr 1051 1050\n1051 1 1051\nrfd 1051 1 2\n2 2\ntseea 1051 2\n1 2\nq 2 1\n1051 2\nf 2 1051\n1051 1051\nmwqnw 1051 1051\n1050 1051\nhdzu 1 1\n1050 1051\niyo 1050 1050\n1050 1051\nvdhf 1050 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:16",
  "total_test_cases": 20
}
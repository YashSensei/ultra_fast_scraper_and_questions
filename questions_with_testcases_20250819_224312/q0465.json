{
  "problem_code": "problems",
  "title": "Bracket Check",
  "tags": [],
  "text": "Given a string s containing just the characters '(', ')', '{', '}', '[', ']', '<', and '>', determine if the input string is valid.An input string is valid if:Open brackets must be closed by the same type of brackets.Open brackets must be closed in the correct order.Every close bracket has a corresponding open bracket of the same type.InputA single line of string s (1 ≤ |s| ≤ 100.000).OutputOutput \"Yes\" if the string s is a valid parentheses, otherwise output \"No\".Example 1Input:([]{})Output:YesExample 2Input:([<]{>})Output:No",
  "sample_input": "Input:([]{})Output:Yes",
  "sample_output": "Input:([<]{>})Output:No",
  "link": "https://www.spoj.com/problems/BRCKTCHK",
  "scraped_at": "2025-08-17 00:33:11",
  "test_cases": [
    {
      "input": "([]{})",
      "expected_output": "Yes",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "([<]{>})",
      "expected_output": "No",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "lobufdwauzyp",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "ls",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "n",
      "expected_output": "To be computed",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "rhhxbc",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "wccsd",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "o",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "ickgvdit",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "s",
      "expected_output": "To be computed",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "ddlzp",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "iuhiw",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "cjekxqs",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "vv",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "jcnf",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "uxctkhxs",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "y",
      "expected_output": "To be computed",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "e",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "bjmb",
      "expected_output": "To be computed",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "h",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:14",
  "total_test_cases": 20
}
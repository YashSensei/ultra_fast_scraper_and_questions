{
  "problem_code": "problems",
  "title": "Morenas Candy Shop ( Easy )",
  "tags": [],
  "text": "HARDER VERSION:HILOBrunette's is a big candy shop from Little Campina in Paraibas, Brazil. This company is known for making the best candies in the world. Matheus Pheverso is the president of this company and he has a sister called Morena who loves and helps him in running the company. She uses to go the supermarket every day and buy a lot of stuffs to make all the candies. But she's insane and likes to take an alternate path to go to the supermarket.Given the streets heights, a path is alternate only if the differences between successive numbers strictly alternate between positive and negative.Example:- Street Heights: {1, 3, 4, 5, 2, 9, 8, 10}- Alternate Paths: {1, 3, 2, 9, 8}, {1, 4, 2, 8}, {1, 5, 2, 9, 8}Matheus Pheverso is a friendly brother and he would like to know the longest alternate path between the first supermarket and the last supermarket, this means that his sister always starts at the supermarket number 1, and always ends at the last supermarket.Given the number of supermarkets, and their heights, your task is to print the longest alternate path between the first and the last city.InputThere is a single positive integer N on the first line of input (1 ≤ N ≤ 106) representing the number of supermarkets. In the second line there're N integers Ai representing the heights of each supermarket (-1018≤ Ai ≤ 1018).OutputYou have to print the longest alternate path between the first and the last supermarket. The supermarket number 1 is always the first, and the supermarket number N is always the last one.ExampleInput:5\r\n1 2 3 4 5Output2Input:8\r\n1 4 2 10 1 9 7 8Output8",
  "sample_input": "Input:5\r\n1 2 3 4 5Output2",
  "sample_output": "Input:8\r\n1 4 2 10 1 9 7 8Output8",
  "link": "https://www.spoj.com/problems/MORENA",
  "scraped_at": "2025-08-17 00:34:24",
  "test_cases": [
    {
      "input": "5\r\n1 2 3 4 5Output2",
      "expected_output": "Input:8\r\n1 4 2 10 1 9 7 8Output8",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1\n2",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "2\n5\n2",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "4\n1\n6\n10\n9",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "10\n71105532\n56265789\n23667272\n6757522\n17230837\n31369876\n12658342\n66983448\n82791490\n83682442",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "6\n54656237\n79716976\n56445419\n52129364\n53154786\n90054141",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "6\n57917842\n27119816\n74650236\n18651089\n88542394\n73817435",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "9\n49239930\n95598305\n78934423\n41324680\n29059649\n58098688\n71352205\n95092112\n58978325",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "11\n79220732\n4115154\n5071861\n12560300\n48209485\n3756572\n52606335\n6855522\n59253519\n46718892\n96060523",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "73\n71153\n84448\n4462\n8520\n56635\n40035\n22834\n80720\n44643\n20860\n25893\n71464\n99708\n80848\n55872\n98355\n93074\n26406\n49803\n93408\n89105\n37632\n15187\n6641\n94168\n91640\n67649\n29278\n47559\n45427\n61619\n6098\n81862\n58961\n33385\n26598\n18417\n64143\n32978\n26677\n93262\n78544\n93714\n93614\n73002\n98267\n38829\n33066\n92416\n28895\n35410\n41680\n44276\n34488\n56520\n65397\n55132\n16133\n90010\n37923\n16822\n5683\n26973\n57402\n52070\n63528\n74220\n58311\n72213\n27144\n93557\n2544\n47254",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "99\n89630\n43478\n84635\n90765\n54979\n21804\n88018\n768\n89097\n43681\n41012\n84958\n91713\n51158\n43786\n87303\n19516\n93544\n39580\n88021\n47328\n3921\n57069\n23145\n86462\n33358\n56025\n46639\n5672\n89734\n45225\n65968\n3584\n98636\n59410\n51092\n29311\n34785\n24069\n56007\n14505\n1077\n83439\n64647\n54977\n52954\n22966\n50321\n10992\n45251\n33398\n3345\n16931\n51313\n47028\n38615\n83326\n42013\n60391\n19327\n11604\n32321\n91967\n3583\n17112\n64844\n49822\n50995\n52695\n78622\n54644\n1524\n42924\n21538\n93020\n35711\n86015\n96545\n94673\n80046\n17111\n69665\n14684\n83183\n92809\n68006\n17307\n13258\n70681\n96287\n92140\n75240\n7354\n92067\n61607\n98299\n55550\n45122\n89695",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "53\n19934\n41907\n69053\n55544\n96488\n34287\n66869\n47749\n36560\n3194\n60833\n54730\n68472\n68209\n92398\n79908\n25052\n478\n67207\n15285\n20463\n41881\n96635\n58222\n73927\n64521\n86756\n26659\n61781\n83503\n68638\n95555\n96403\n25322\n56253\n22690\n73732\n67379\n97457\n55357\n42754\n46531\n13119\n4993\n39079\n35164\n8922\n92427\n64726\n76013\n36876\n62535\n75707",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "38\n55231\n11424\n66012\n46620\n59522\n95310\n33506\n44255\n33958\n87851\n6684\n63249\n86172\n47922\n12913\n61532\n58832\n42444\n9069\n81135\n35392\n66238\n91247\n53059\n8154\n36284\n77663\n2205\n44119\n86503\n9476\n42158\n943\n52155\n95551\n48993\n9868\n96304",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "99\n73116\n42887\n4806\n8327\n67604\n2866\n14751\n63444\n90177\n63411\n12865\n14033\n83977\n33976\n82196\n28258\n361\n33912\n81457\n97207\n55293\n84378\n30786\n34043\n99699\n65289\n92619\n29710\n16858\n68528\n23484\n13507\n48096\n54804\n97066\n80202\n84009\n68166\n8899\n66429\n58048\n52515\n5850\n52547\n7428\n31282\n32704\n19764\n407\n62530\n60368\n17356\n10814\n13749\n87219\n55260\n11605\n27288\n13210\n45860\n68910\n50028\n97724\n68285\n71494\n8478\n72364\n61627\n36761\n84171\n38373\n98195\n58546\n12761\n90134\n60868\n28184\n38201\n81919\n95084\n44794\n12501\n1892\n54779\n53689\n65104\n91103\n26131\n85237\n54430\n86252\n35318\n47506\n60982\n17568\n9316\n87012\n71251\n96765",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "26\n73970\n25364\n14198\n89261\n96892\n74867\n15059\n33884\n19374\n77013\n19259\n76523\n93732\n42030\n39371\n57551\n3802\n84099\n10514\n72896\n84827\n83013\n50340\n37637\n46877\n24629",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "105\n38441\n29933\n93243\n59880\n10837\n3397\n15831\n22656\n42025\n34075\n83203\n43368\n56385\n39504\n25138\n8048\n60597\n84713\n39900\n36463\n37847\n40793\n60604\n48159\n93\n20913\n59191\n67072\n65527\n83401\n92843\n16169\n91697\n90057\n13923\n6296\n76244\n49745\n60645\n63184\n21210\n97155\n19773\n34702\n61709\n66891\n3472\n17855\n47600\n82597\n33461\n89808\n42476\n12169\n50288\n96769\n45989\n58530\n35561\n34712\n49081\n43063\n11036\n55060\n34019\n65572\n46107\n97843\n79572\n54156\n84922\n3002\n63209\n19245\n20017\n64454\n52738\n80665\n90523\n38348\n99261\n17392\n31909\n15280\n82283\n60610\n8174\n44684\n95527\n46992\n28331\n63732\n65071\n59932\n12735\n54441\n47227\n8187\n54689\n51869\n49110\n24133\n8057\n16853\n20761",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "106\n76037820\n66880318\n44246972\n20962094\n12831893\n62086883\n25297066\n49869086\n2782703\n50133673\n34560356\n40231661\n97065686\n4322551\n42578128\n13999091\n27342304\n92896570\n64061009\n92225609\n55257978\n45573563\n79628745\n24913463\n80573969\n16320202\n72645401\n96855176\n15343869\n3455162\n57489694\n36657614\n65029119\n68680668\n82948817\n60071283\n86337684\n7587852\n74009024\n20080585\n32653402\n75133386\n67121726\n44190899\n96622185\n78824094\n80058835\n63600505\n8141556\n33601985\n83755783\n42036378\n29742305\n50301612\n62041711\n13023347\n86386339\n32349815\n62488\n44477971\n94145709\n10189241\n14966575\n15814624\n76665894\n15161645\n16369595\n47637946\n56763071\n16349508\n3115234\n97361864\n33457283\n49471\n56962298\n11591041\n98004211\n2238342\n26947011\n99598772\n66874165\n97632817\n24076554\n7520143\n48565419\n60525206\n24317460\n61320513\n47929739\n10905462\n4307179\n82380484\n15596623\n13246584\n34284952\n58693531\n57354\n44675013\n87170199\n87289901\n24500320\n48140433\n77546896\n54938782\n20731762\n9277392",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 106)"
    },
    {
      "input": "106\n2359829\n27657103\n16148149\n72483550\n44789576\n12053731\n76028676\n93381447\n96152164\n56335055\n47013002\n94551377\n53929857\n70510255\n83203919\n86579924\n88661117\n49629989\n85915754\n75454992\n10234377\n96126628\n27862870\n85507722\n56032623\n63180088\n59763282\n55256143\n93479558\n82360961\n10297969\n74980945\n84604155\n61745123\n53495013\n98003041\n66459299\n81522575\n54589571\n66513401\n3754823\n68957628\n45713169\n75187174\n56335342\n15946737\n47912778\n72122106\n54696385\n4131155\n36839804\n51542867\n83484504\n69408086\n33385660\n77288124\n56813520\n39928724\n12714472\n64440425\n62717608\n42003518\n71131613\n39130130\n14499559\n56133513\n41128052\n72988131\n70101164\n96854948\n23490995\n52133075\n39324889\n72712235\n19040499\n56856149\n86532945\n8219452\n20678936\n80769505\n89118100\n19431081\n74972857\n54574071\n33999452\n84625531\n46005673\n82950718\n46804912\n59471368\n77487319\n24398564\n24026003\n70776771\n39741128\n62527550\n58633494\n29237174\n30847648\n56518288\n50261372\n65703739\n95633244\n86993290\n56859306\n27683259",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 106)"
    },
    {
      "input": "2\n100000000\n1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 2)"
    },
    {
      "input": "2\n1\n62744796",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 2)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:24",
  "total_test_cases": 20
}
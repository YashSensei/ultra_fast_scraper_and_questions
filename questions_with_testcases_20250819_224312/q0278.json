{
  "problem_code": "problems",
  "title": "Weird sorting",
  "tags": [],
  "text": "You are givenNinteger numbers a1, a2, ..., aN. All you need to do is to sort them in non-decreasing order.The bad thing is you are only allowed to perform one action. You can pick any number in the sequence and then reverse all elements to the left and to the right of it.For example, suppose you were given the sequence (7, 1, 3, 9, 8) then, depending on the picked number you'll get the following results:Picked numberResulting sequence7(7, 8, 9, 3, 1)1(7, 1, 8, 9, 3)3(1, 7, 3, 8, 9)9(3, 1, 7, 9, 8)8(9, 3, 1, 7, 8)In this problem you are to figure out whether the given sequence can be sorted or not, applying allowed action zero or more times.InputInput will contain multiple test cases (not more than 100). Each case will start with the number of elements in the sequence N (1 ≤ N ≤ 100), followed by the N integers not exceeding 1000 by the absolute value. Input ends with the value N = 0.OutputFor each test case write \"1\" if corresponding sequence can be sorted and \"0\" otherwise. Output must not contain spaces or line breaks.ExampleInput:5\r\n7 1 3 9 8\r\n2\r\n2 1\r\n0Output:10",
  "sample_input": "Input:5\r\n7 1 3 9 8\r\n2\r\n2 1\r\n0Output:10",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/KPSORT",
  "scraped_at": "2025-08-17 00:33:17",
  "test_cases": [
    {
      "input": "5\r\n7 1 3 9 8\r\n2\r\n2 1\r\n0",
      "expected_output": "10",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4\n10\n4\n3\n7",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "3\n6\n7\n3",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n8\n2\n2\n10\n8",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "7\n43321513\n79532939\n53385974\n94135370\n57389749\n75397871\n21578603",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "18\n97761905\n82256379\n12125763\n33767830\n76917208\n89505651\n62363691\n91589729\n56218515\n91525963\n21604769\n43970235\n51604833\n82221185\n58654885\n31887846\n73777361\n14502305",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "13\n94945830\n16083417\n42206688\n33678999\n47043184\n71618966\n78232212\n92616366\n61705647\n70036352\n16596544\n63015869\n35796282",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "5\n21620874\n75758595\n84580928\n1058301\n67237164",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "9\n15914112\n77448188\n48764102\n89114681\n60942113\n79799787\n20775995\n67676248\n21544434",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "73\n18138\n10878\n2210\n61285\n76342\n25099\n27789\n2265\n62681\n54770\n41996\n84620\n49162\n76039\n67274\n40883\n63289\n32544\n49837\n80623\n56565\n1388\n3196\n37518\n28873\n76196\n5888\n5467\n83827\n56196\n27113\n61537\n49985\n75906\n19516\n31045\n25261\n84491\n8387\n9553\n24541\n84348\n63901\n38262\n62611\n28365\n8249\n9662\n78180\n2430\n79141\n31728\n18841\n29681\n15125\n99916\n15000\n63835\n58324\n77896\n80653\n27783\n73899\n35975\n63730\n40660\n58947\n18017\n97108\n8481\n42217\n92019\n73605",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "94\n49030\n64611\n67791\n85685\n39391\n10314\n37395\n60813\n59412\n39319\n24868\n96207\n99167\n67092\n6050\n98236\n31127\n76451\n51399\n7003\n82600\n19018\n97639\n5236\n91082\n41004\n93325\n20304\n72398\n3040\n91600\n90953\n25013\n59038\n80450\n94371\n10753\n57571\n57598\n66074\n80299\n80411\n44102\n50936\n49296\n10084\n56580\n65706\n83143\n79571\n33370\n48870\n35884\n89438\n68592\n18460\n16322\n53992\n16700\n99172\n46866\n70619\n86442\n57358\n25190\n91036\n92637\n61166\n34500\n46943\n49072\n73342\n42787\n5205\n80225\n65628\n68345\n25175\n66217\n4928\n84990\n59099\n30904\n27901\n24035\n4963\n88827\n85474\n35807\n27401\n54356\n8968\n37243\n63220",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "98\n18324\n11458\n92682\n22293\n54894\n28476\n64408\n52429\n82651\n41421\n59155\n24332\n70005\n42795\n57051\n60812\n15332\n36169\n20562\n10321\n34764\n33544\n54145\n25156\n38784\n88159\n43195\n25238\n54602\n43873\n72163\n96358\n99514\n12845\n53052\n60632\n1477\n95309\n73282\n43309\n78490\n1873\n47566\n24215\n38284\n83987\n74221\n2856\n52079\n42511\n30907\n58594\n78934\n12306\n26527\n47610\n82624\n27942\n86775\n76059\n14154\n1231\n78973\n56782\n36930\n72967\n6673\n29951\n51996\n96234\n53848\n75494\n13910\n24591\n11628\n15412\n85873\n4757\n58166\n95164\n40018\n3943\n18806\n93185\n53742\n55425\n33816\n95840\n57501\n95912\n3781\n29620\n36043\n89682\n60628\n34806\n36797\n90941",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "90\n67202\n31210\n31021\n31285\n92772\n51001\n74536\n85743\n45327\n90045\n2648\n28613\n84079\n19077\n58952\n15358\n36132\n95420\n62042\n76595\n13821\n78402\n78782\n80174\n85365\n89395\n50782\n22011\n54845\n86180\n66411\n48170\n25578\n56279\n48222\n16470\n61361\n57834\n19268\n44537\n69399\n6682\n77090\n90259\n23687\n32980\n17447\n10511\n70914\n12813\n17071\n27470\n97235\n96759\n90646\n17462\n69251\n75800\n17188\n96310\n27227\n41743\n25886\n20638\n66246\n26004\n39911\n99898\n89383\n95463\n71745\n53871\n42183\n66759\n72533\n6126\n46105\n91349\n79029\n80525\n49180\n73555\n40916\n61570\n74761\n38354\n2815\n21141\n76327\n78841",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "50\n36350\n40028\n93904\n2788\n85154\n90035\n20104\n15080\n25124\n55963\n72127\n19937\n27594\n64607\n80891\n54552\n29549\n63022\n68257\n86890\n41501\n20760\n84851\n12882\n4002\n33330\n11890\n82251\n17882\n41482\n22634\n13747\n11684\n69564\n94877\n73175\n18119\n30347\n75100\n82858\n78051\n43625\n94197\n95391\n16771\n43704\n93709\n79317\n3081\n57221",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "76\n83599\n57204\n80244\n30743\n15447\n81681\n92459\n74414\n59400\n65755\n60004\n46848\n30298\n5508\n21129\n59483\n84806\n2253\n24384\n91690\n80020\n86762\n98295\n81814\n64283\n8201\n78206\n60724\n10486\n77218\n26951\n76172\n544\n18252\n22664\n28353\n71583\n78080\n48299\n96910\n93273\n59649\n75725\n64289\n92911\n50384\n77111\n74675\n11630\n4273\n84521\n84690\n31840\n96296\n87167\n19726\n70445\n38733\n79010\n40035\n44867\n7055\n8763\n69325\n69989\n11487\n82757\n8079\n85547\n51621\n57207\n52282\n28956\n80401\n13386\n16841",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "82\n11969\n97722\n62220\n60424\n66487\n6249\n52941\n46737\n20990\n96005\n76018\n16784\n50129\n39677\n23404\n95198\n20045\n4204\n77208\n79126\n93157\n54987\n13729\n36896\n47742\n81522\n34451\n36890\n36358\n36898\n6887\n21457\n80592\n12521\n66190\n2701\n77560\n42886\n77744\n64725\n21200\n41345\n75007\n3894\n9028\n67046\n63752\n81020\n99747\n14334\n22310\n81198\n81271\n69410\n12283\n51766\n55754\n9950\n13280\n75195\n93883\n58688\n827\n56673\n86106\n21977\n66792\n27415\n56577\n31821\n22201\n2253\n2864\n64758\n16523\n13326\n94110\n10467\n78124\n80358\n19781\n79425",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "100\n85696644\n29706419\n86853832\n5773006\n58285510\n15985529\n88908234\n66795524\n62500407\n84380993\n26234957\n26724002\n18771067\n64007038\n91366286\n99688312\n87989541\n9214173\n61622638\n42526228\n53193120\n34473234\n41813292\n64698931\n5875673\n11609863\n20985888\n99770063\n93488644\n28827914\n52466887\n61198399\n8399835\n26251823\n59219242\n22245869\n19600509\n34252811\n11493541\n15677081\n62900590\n92061673\n8559593\n72290010\n54471322\n45148835\n72469846\n72679339\n70866640\n25771087\n90686951\n91961814\n50828091\n23330416\n38094002\n14371024\n89860652\n60043709\n49379301\n9207149\n61856218\n8654803\n80158467\n87849334\n68468972\n41019312\n26327911\n62065285\n66610399\n74888240\n23227738\n64924439\n64360978\n40204470\n60582738\n14065987\n26452498\n19889951\n91008498\n39461232\n95763572\n61152808\n46051698\n4399547\n14556518\n76304319\n18536772\n98063634\n72852330\n45613175\n90676942\n26658274\n18023619\n73472983\n72117973\n67114317\n57987397\n20906270\n11263052\n31290237",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "100\n31619582\n66818250\n47042556\n41248970\n94652986\n12009803\n83424087\n40086373\n32560814\n80964324\n41210627\n16692514\n35485140\n99925607\n97882679\n59014841\n88275338\n41107053\n42709655\n62785534\n94364235\n84659590\n47134591\n33369372\n78763093\n76108138\n90058017\n41734824\n57196137\n4426820\n24721272\n13220578\n16977049\n62469554\n54932810\n25104297\n21416146\n56998379\n56040061\n93914480\n38470685\n14081689\n9799790\n78814978\n34292447\n93961804\n95845716\n74636739\n55954859\n94575342\n81936125\n96867837\n72263276\n53155110\n92828983\n72075595\n62247577\n71919764\n93513540\n30373010\n12168815\n46715158\n71840736\n39216366\n87171343\n40692050\n60387299\n64309838\n63918771\n29586853\n38081398\n19110153\n68028688\n66011990\n14920117\n66967061\n94181791\n61982911\n60273877\n97400626\n80860943\n43500209\n50587404\n20916088\n62048896\n12591821\n59411945\n72674062\n279346\n71930481\n12024007\n40659339\n77658086\n27918922\n97459585\n16076380\n53806455\n36818454\n4119872\n66205016",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "2\n1\n1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 2)"
    },
    {
      "input": "100\n100000000\n29212540\n1\n45998625\n61915234\n1\n27356129\n92369998\n47325192\n100000000\n88654868\n1\n100000000\n100000000\n100000000\n1\n1\n100000000\n100000000\n91178578\n1\n47716684\n1\n1\n1\n1\n1\n100000000\n98274085\n87460503\n100000000\n1\n1\n1\n100000000\n100000000\n36215925\n36951165\n100000000\n43443308\n92101718\n9999171\n1\n1\n100000000\n1\n1\n1\n82262054\n100000000\n1\n35165043\n1\n100000000\n100000000\n1\n83850771\n41454417\n57098152\n58943860\n1\n1\n1\n90839234\n100000000\n1\n1\n1\n100000000\n1\n88210105\n47015663\n100000000\n1\n100000000\n100000000\n34445050\n1\n1\n100000000\n100000000\n1\n100000000\n1\n24267534\n100000000\n1\n41089088\n1\n59763948\n100000000\n100000000\n16514209\n1\n13258962\n1\n1\n100000000\n33525013\n1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 100)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:13",
  "total_test_cases": 20
}
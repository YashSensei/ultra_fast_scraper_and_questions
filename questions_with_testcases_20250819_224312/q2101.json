{
  "problem_code": "problems",
  "title": "Lawn Mower",
  "tags": [],
  "text": "The International Collegiate Soccer Competition (ICSC) is famous for its well-kept rectangular stadiums. The grass playing fields in ICSC stadiums are always 100 meters long, and 75 meters wide. The grass is mowed every week with special lawn mowers, always using the same strategy: first, they make a series of passes along the length of the field, and then they do the same along the width of the field. All passes are straight lines, parallel to the sides of the field.The ICSC has hired a new lawn-mower, Guido. Guido is very chaotic, and instead of covering the field incrementally, he likes to choose random starting positions for each of his passes. But he is afraid of not doing a good job and being fired by the ICSC, so he has asked you to help him. Write a program to make sure that the grass in the field is perfectly cut: all parts of the field have to be mowed at least once when the mower goes from end to end, and again when the mower goes from side to side.InputEach test case contains 3 lines. The first line contains two integers,nx(0 <nx< 1 000) andny(0 <nx< 1 000), and a real numberw(0 <w≤ 50), which represents the width of the cut of that particular lawn mower. The next line describes the end-to-end passes (along the length of the field), and containsnxreal numbersxi(0 ≤xi≤ 75) describing the starting positions of the mower’s center in Guido’s end-to-end passes. The last line describes the side-to-side passes, withnyreal numbersyi(0 ≤yi≤ 100).The end of the test cases is signalled with a line that contains the numbers0 0 0.0. You should generate no output for this line, as it is not a test case.Real numbers forw,xiandyican have up to 7 digits after the decimal point, and any cut will also include its boundaries. For example, if a 2.0-meter wide cut is performed along the 10.0-meter mark, then a strip of grass from 9.0 to 11.0 (including both) will be considered “cut”.OutputPrintYESif Guido has done a good job, orNOif some part of the field has not been mowed at least once when the mower was travelling along the length of the field, and again when it was travelling along the width.ExampleInput:8 11 10.0\r\n0.0 10.0 20.0 30.0 40.0 50.0 60.0 70.0\r\n0.0 10.0 20.0 30.0 40.0 50.0 60.0 70.0 80.0 90.0 100.0\r\n8 10 10.0\r\n0.0 10.0 20.0 30.0 40.0 50.0 60.0 70.0\r\n0.0 10.0 30.0 40.0 50.0 60.0 70.0 80.0 90.0 100.0\r\n4 5 20.0\r\n70.0 10.0 30.0 50.0\r\n30.0 10.0 90.0 50.0 70.0\r\n4 5 20.0\r\n60.0 10.0 30.0 50.0\r\n30.0 10.0 90.0 50.0 70.0\r\n0 0 0.0Output:YES\r\nNO\r\nYES\r\nNOThe ICSC is sponsored by the Association for Sports Machinery (ASM), which started out in the US, so they prefer to use the term ‘soccer’ instead of ‘football’.Problem setter: Manuel Freire",
  "sample_input": "Input:8 11 10.0\r\n0.0 10.0 20.0 30.0 40.0 50.0 60.0 70.0\r\n0.0 10.0 20.0 30.0 40.0 50.0 60.0 70.0 80.0 90.0 100.0\r\n8 10 10.0\r\n0.0 10.0 20.0 30.0 40.0 50.0 60.0 70.0\r\n0.0 10.0 30.0 40.0 50.0 60.0 70.0 80.0 90.0 100.0\r\n4 5 20.0\r\n70.0 10.0 30.0 50.0\r\n30.0 10.0 90.0 50.0 70.0\r\n4 5 20.0\r\n60.0 10.0 30.0 50.0\r\n30.0 10.0 90.0 50.0 70.0\r\n0 0 0.0Output:YES\r\nNO\r\nYES\r\nNO",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/LAWNMWR",
  "scraped_at": "2025-08-17 00:33:43",
  "test_cases": [
    {
      "input": "8 11 10.0\r\n0.0 10.0 20.0 30.0 40.0 50.0 60.0 70.0\r\n0.0 10.0 20.0 30.0 40.0 50.0 60.0 70.0 80.0 90.0 100.0\r\n8 10 10.0\r\n0.0 10.0 20.0 30.0 40.0 50.0 60.0 70.0\r\n0.0 10.0 30.0 40.0 50.0 60.0 70.0 80.0 90.0 100.0\r\n4 5 20.0\r\n70.0 10.0 30.0 50.0\r\n30.0 10.0 90.0 50.0 70.0\r\n4 5 20.0\r\n60.0 10.0 30.0 50.0\r\n30.0 10.0 90.0 50.0 70.0\r\n0 0 0.0",
      "expected_output": "YES\r\nNO\r\nYES\r\nNO",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "8 3 1\n1 7 2 4 10 9 4 3\n9 5 5 2 7 1 7 2 5 3 4\n10 2 3\n9 6 3 5 6 10 3 10\n2 4 2 3 8 2 4 2 10 5\n10 9 10\n2 4 3 10\n1 8 6 9 4\n4 1 1\n3 8 1 7\n4 10 10 9 9\n9 3 8",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "6 1 6\n10 10 3 2 7 8 7 10\n1 9 1 1 8 5 4 5 3 2 7\n10 2 1\n6 1 1 5 5 3 10 3\n2 4 6 9 2 10 9 3 10 6\n10 8 3\n2 6 6 1\n2 9 5 2 4\n7 8 6\n2 5 4 8\n7 4 3 8 6\n3 3 2",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "10 4 4\n4 4 7 6 3 10 3 1\n2 5 3 1 8 3 4 8 2 8 3\n8 1 9\n6 8 7 3 10 6 9 7\n9 10 7 4 10 5 5 8 2 2\n9 1 3\n10 6 1 3\n9 4 5 5 9\n6 3 1\n1 7 3 8\n2 1 9 1 7\n6 7 5",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "16 14 39\n54 99 7 44 50 69 64 71\n19 67 69 87 46 41 32 63 18 48 36\n8 95 88\n29 99 44 65 18 61 5 54\n78 16 69 41 90 68 32 99 21 82\n83 58 72\n6 65 20 56\n95 95 86 64 19\n70 43 18\n32 29 15 56\n21 47 21 7 48\n25 48 7",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "55 86 56\n34 9 26 46 72 51 25 79\n9 68 99 6 92 41 79 88 28 94 89\n88 9 25\n45 2 35 2 97 43 86 80\n67 15 73 21 80 26 17 51 26 7\n4 59 67\n89 51 57 23\n86 14 4 69 53\n85 88 96\n19 65 51 14\n8 62 87 79 77\n42 71 21",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "19 14 44\n15 51 93 21 16 56 65 98\n69 33 25 59 91 43 51 21 65 39 5\n17 65 88\n26 53 42 45 78 16 93 78\n32 40 26 57 59 43 55 82 72 32\n6 53 5\n74 98 12 48\n92 85 84 14 6\n30 92 46\n23 61 28 29\n38 1 3 50 36\n9 30 26",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "54 46 19\n86 61 57 39 77 52 81 51\n58 21 71 33 22 16 12 53 92 7 50\n73 65 94\n11 94 29 67 94 25 22 23\n62 92 80 32 83 34 15 70 95 100\n7 66 4\n43 30 96 52\n65 2 8 33 47\n19 46 76\n28 94 21 41\n16 48 46 81 45\n80 37 38",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "14 81 32\n67 89 75 76 25 16 95 26\n96 82 61 53 46 96 19 12 70 50 93\n100 34 13\n53 76 84 87 53 51 38 70\n27 38 22 63 85 51 36 70 82 100\n23 27 8\n9 6 75 2\n61 86 23 73 83\n52 62 6\n77 28 54 64\n100 40 49 53 86\n63 72 48",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "448 444 474\n362 415 57 264 319 151 415 325\n404 283 336 119 307 57 109 284 248 359 232\n458 158 171\n390 443 301 100 269 100 130 196\n499 93 311 489 303 201 247 114 189 258\n278 200 59\n290 492 131 428\n216 404 336 364 296\n493 494 206\n292 320 259 269\n201 298 227 118 465\n293 257 493",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "124 172 66\n139 316 361 274 139 463 96 92\n248 121 117 139 116 53 73 177 228 146 415\n401 383 324\n159 211 293 94 427 147 324 408\n265 457 360 185 259 103 433 128 235 266\n130 472 283\n394 294 346 238\n291 425 408 344 147\n270 348 338\n316 340 199 363\n459 363 334 355 456\n196 247 370",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "384 500 61\n351 76 336 327 413 446 215 233\n318 182 187 160 477 68 401 203 186 251 474\n201 395 475\n156 311 499 98 174 363 270 355\n486 281 316 486 468 187 460 237 224 306\n325 388 302\n256 211 165 388\n437 183 194 202 324\n312 160 84\n326 317 59 499\n413 394 267 245 448\n197 284 381",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "464 338 114\n53 148 65 273 370 383 423 234\n100 115 188 238 181 254 81 384 320 62 405\n138 113 210\n303 124 385 123 230 375 417 394\n132 274 216 342 168 170 95 327 98 407\n78 272 208\n431 229 123 276\n327 75 367 81 457\n224 111 217\n431 495 200 121\n367 194 304 254 250\n316 318 447",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "145 432 250\n339 54 59 393 72 300 63 242\n417 125 484 206 352 417 394 144 396 255 313\n282 346 346\n311 235 184 492 326 65 359 371\n329 482 224 251 350 228 342 185 123 386\n246 183 296\n124 108 54 440\n275 231 460 147 99\n336 188 292\n64 329 136 160\n66 180 193 267 363\n222 173 146",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "469 67 427\n152 188 428 479 434 341 477 405\n360 384 464 344 233 492 212 64 476 302 147\n132 130 237\n478 259 349 354 148 66 103 195\n391 72 399 252 449 112 306 358 431 72\n337 257 377\n374 96 133 391\n123 195 78 254 201\n162 245 317\n240 179 156 90\n459 331 449 486 272\n287 140 142",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "292 235 434\n383 453 229 409 62 60 330 62\n145 127 198 365 388 409 70 283 489 384 431\n134 195 167\n156 137 494 135 119 84 301 85\n166 366 118 445 123 293 214 208 448 391\n85 435 370\n143 97 471 276\n493 304 316 439 235\n405 309 290\n349 156 130 101\n441 319 481 376 306\n310 358 480",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000 1000\n1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000 1000\n1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000 1000\n1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000 1000\n1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "999 1000 2\n999 1000 1 1 2 1000 1 1\n1 1 2 1 1000 1 2 2 1000 1000 999\n2 1 2\n1000 999 2 1 999 1000 1000 2\n2 1 1 2 1000 1000 1000 1 2 999\n1 2 999\n1000 1 999 1\n1000 2 1000 1 2\n999 1000 1000\n1000 1000 1 1\n1 1000 2 1000 1\n1000 1000 1000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1000 1 1\n2 1 1000 2 1000 1 999 1000\n2 2 2 1000 2 1000 1000 2 1000 999 999\n1000 2 1000\n1000 2 1000 999 1000 1 1000 1\n1 1 1000 999 2 1 1000 1000 999 1\n1000 2 2\n1 1 1000 999\n2 999 999 2 2\n1000 1000 1000\n1 2 1000 999\n999 999 2 999 999\n999 1 999",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:19",
  "total_test_cases": 20
}
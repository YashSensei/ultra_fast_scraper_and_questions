{
  "problem_code": "problems",
  "title": "Lights (Extreme)",
  "tags": [],
  "text": "Note:it is advisable to solve LIGHTS2 before attempting this problem.John hasnlight bulbs and a switchboard withnswitches; each bulb can be either on or off, and pressing thei−th switch changes the state of bulbifrom on to off, and viceversa. He is using them to play a game he has made up. In each move, John selects a (possibly empty) set of switches and presses them, thus inverting the states of the corresponding bulbs. Initially all lights are off, and after exactlymmoves John would like to have the firstvbulbs on and the rest off; otherwise he loses the game. There is only one restriction: he is not allowed to press the samesetof switches in two different moves.This is quite an easy game, as there are lots of ways of winning. This has encouraged him to keep playing different winning games, and now he is intent on trying them all. Help him count how many ways of winning there are. Two games are considered the same if, after a reordering of the moves in one of them, at every step the same set of switches is pressed in both of them.For example, ifn= 4,m= 3, andv= 2, one possible winning game is obtained by pressing switches 1, 2 and 4 in the first move, 1 and 3 in the second one, and 1, 3 and 4 in the last one. This is considered equivalent to, say, first pressing 1 and 3; then 1, 2, 4; and then 1, 3, 4.InputThe input has at most 1500 lines, one for each test case. Each line contains three integersn(1 ≤n≤ 10 000 000),m(1 ≤m≤ 10 000 000), andv(0 ≤v≤n). The last line of input will hold the values0 0 0and must not be processed.OutputPrint one line for each test case containing the number of ways John can play the game, modulo the prime 10 567 201.Sample Input3 3 1\r\n6 4 0\r\n6 4 3\r\n0 0 0Sample Output7\r\n10416\r\n9920Problemsetter: David García Soriano",
  "sample_input": "3 3 1\r\n6 4 0\r\n6 4 3\r\n0 0 0",
  "sample_output": "7\r\n10416\r\n9920",
  "link": "https://www.spoj.com/problems/LIGHTS3",
  "scraped_at": "2025-08-17 00:33:47",
  "test_cases": [
    {
      "input": "3 3 1\r\n6 4 0\r\n6 4 3\r\n0 0 0",
      "expected_output": "7\r\n10416\r\n9920",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "10 3 3\n7 8 6\n1 9 4\n5 8 5",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "2 1 8\n2 1 1\n7 5 5\n6 1 5",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "4 8 1\n7 8 6\n8 9 9\n5 7 1",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "17 91 69\n88 90 24\n9 51 20\n77 16 10",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "55 64 17\n36 71 12\n35 81 26\n70 34 2",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "6 41 39\n52 61 65\n42 8 32\n88 60 26",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "76 71 89\n59 26 72\n29 8 99\n57 58 21",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "46 88 59\n33 88 84\n77 100 38\n95 62 14",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "366073 460623 367351\n403119 329586 397417\n268475 112566 208205\n367443 492948 103596",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "180908 457768 146313\n109781 440280 131234\n71570 317793 207345\n92646 349692 135564",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "66750 323144 57226\n220702 172732 115020\n308585 62152 92744\n253307 265961 344648",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "385754 183660 322646\n187090 278027 146999\n177372 405261 232883\n331567 336168 302835",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "241883 156121 497438\n286730 323108 459312\n147067 193548 234863\n208493 244041 494381",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "414259 164680 371123\n95717 109702 258235\n335024 430362 122186\n154350 259594 488523",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "254985 97948 157473\n52604 479309 277089\n386382 454790 439111\n291414 403681 486057",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000000 1000000 1000000\n1000000 1000000 1000000\n1000000 1000000 1000000\n1000000 1000000 1000000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000000 1000000 1000000\n1000000 1000000 1000000\n1000000 1000000 1000000\n1000000 1000000 1000000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "999999 999999 999999\n999999 999999 1000000\n2 999999 2\n1 2 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1000000 1 2\n2 2 1000000\n1000000 2 999999\n999999 2 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:19",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Maggu and Magguness Level",
  "tags": [],
  "text": "Until now you would have known that Maggu is a big geek. His class has n students. All the students are geeks like him. You are given m information of form a, b which denotes that a'th guy is less geeky than b'th guy (geekiness(a) < geekiness (b)). Note that geekiness of each person is unique and can be from 1 to n. Now Maggu wonders what are the possible values of his geekiness. If such a distribution of geekiness value is not possible, then output -1.InputFirst line contains T: number of test cases (1 ≤ T ≤ 100).For each test case, first line contains n, m, idx where n is number of boys in the class, m is number of information, idx is the index corresponding to Maggu. 1 ≤ n ≤ 106, 1 ≤ m ≤ min (105, n × (n - 1) / 2), 1 ≤ idx ≤ n.Then next m line contains two space separated integers representing a, b. (1 ≤ a, b ≤ n).No pair of information is repeated twice in the input.OutputFor each test case, You have to output one or two lines depending on the situation. In the former case, If the distribution of geekiness can not exist, output -1.In the second case (i.e. two lines), In the first line, output a single integer number of possible geekiness values of Maggu. Then in the next line output in the increasing order all the possible geekiness values of Maggu in ascending order. All the values should be space separated.ExampleInput:23 2 11 22 34 2 11 23 4Output:113\r\n1 2 3",
  "sample_input": "Input:23 2 11 22 34 2 11 23 4Output:113\r\n1 2 3",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/IITWPC4K",
  "scraped_at": "2025-08-17 00:34:20",
  "test_cases": [
    {
      "input": "23 2 11 22 34 2 11 23 4",
      "expected_output": "113\r\n1 2 3",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2 10 7 7 10 9 7 10 9",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "4 1 1 4 7 4 9 8 8",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "6 5 4 7 4 9 4 4 2",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "46 48 93 24 80 87 75 47 47",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "15 88 51 99 80 50 94 2 11",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "21 42 91 53 59 47 41 80 18",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "2 18 86 38 31 10 15 69 79",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "73 31 31 56 94 49 25 100 37",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "34 37 30 9 32 52 19 51 12",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "48 13 32 10 14 50 29 40 45",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "20 5 10 22 29 52 6 26 15",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "34 45 29 35 7 11 26 42 12",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "45 20 10 24 9 46 31 13 25",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "41 19 27 40 35 38 51 41 19",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "50 5 24 21 28 45 7 36 30",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "106 106 106 106 106 106 106 106 106",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "106 106 106 106 106 106 106 106 106",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "105 106 2 2 2 105 105 105 106",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "105 105 106 1 2 105 106 2 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:24",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "DOJO Corridor I",
  "tags": [],
  "text": "There's a long rectangular corridor in the hall's dojo, one place is already taken by a magic hanjō (1×1 square). You have to put tatamis (1×2 rectangle) in order to cover exactly the rest of the corridor. Sometimes it's possible, sometimes not!InputThe input begins with the number T of test cases in a single line. In each of the next T lines there are two integers : N, M the size of the corridor, I, J coordinates of the magic hanjō, and K the modulo for the output.OutputFor each test case, print the number of possibility to do the job, modulo K.ExampleInput:3\r\n1 3 1 3 100\r\n2 3 2 2 100\r\n3 7 1 3 100Output:1\r\n0\r\n56Constraints1 ≤ T ≤ 300001 ≤ N ≤ 41 ≤ M ≤ 1091 ≤ I ≤ N1 ≤ J ≤ M1 ≤ K ≤ 109Uniform, independent, random input in the range.Time limit is set to allow one half kB of python3 code to get AC.Edit(19/1/2015, after cluster switch) : now my old code ends in 0.16s using PY3.4.Edit(11/2/2017, after compiler update) : new TL. My old code ends in 0.09s using PY3.5.",
  "sample_input": "Input:3\r\n1 3 1 3 100\r\n2 3 2 2 100\r\n3 7 1 3 100Output:1\r\n0\r\n56",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/DOJ1",
  "scraped_at": "2025-08-17 00:34:24",
  "test_cases": [
    {
      "input": "3\r\n1 3 1 3 100\r\n2 3 2 2 100\r\n3 7 1 3 100",
      "expected_output": "1\r\n0\r\n56",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4\n7\n7\n3\n10",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n1\n5\n3\n10\n3",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n2",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "19\n64639444\n69669276\n24919383\n14962062\n41539723\n69849008\n1464828\n77601036\n84333811\n52702245\n68533273\n37394712\n76424878\n91170737\n95637984\n62638228\n6067288\n9202019\n67337659",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "15\n80216118\n52716833\n45194332\n42395385\n8980845\n174983\n80131361\n33028579\n69456766\n66808623\n20519737\n7729786\n7650610\n7365568\n47734212",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "11\n74605498\n6898895\n4092222\n3235228\n21974013\n49919998\n15365180\n10678679\n58864741\n77272667\n68267117",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "15\n87468092\n15645345\n49972266\n76707731\n93855112\n18106212\n30448669\n36160421\n60887685\n82356472\n88450718\n18382664\n72832217\n15093460\n59843670",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "5\n48485927\n3774620\n49625631\n37011412\n43453063",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "36\n57036\n77462\n19993\n18170\n24070\n49322\n8729\n33962\n26973\n3741\n36195\n74623\n29049\n98949\n41710\n80943\n35140\n82081\n79343\n45929\n69856\n42523\n14845\n68030\n38369\n86476\n17434\n67017\n62240\n25669\n82564\n57743\n3478\n75217\n11810\n42813",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "23\n92145\n966\n91999\n89079\n53421\n72039\n45846\n98184\n59140\n95565\n53945\n90642\n87107\n33014\n23792\n2348\n91922\n78725\n35818\n82841\n63508\n26111\n4725",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "32\n10545\n38088\n53384\n97659\n44699\n81469\n12000\n60169\n13149\n75167\n40553\n46591\n12684\n83374\n46279\n41607\n52949\n39839\n50227\n16265\n14334\n96424\n74737\n97085\n42112\n34894\n25594\n92826\n51533\n75956\n5529\n46031",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "20\n45008\n33783\n81647\n88558\n10301\n31452\n59501\n14977\n26464\n35006\n16715\n70562\n11691\n95957\n75542\n90388\n12471\n42385\n12878\n41549",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "37\n58271\n18920\n47118\n35712\n23191\n61936\n77626\n76174\n63407\n67216\n88811\n53174\n65751\n23764\n11580\n56808\n53895\n78055\n64759\n7505\n54418\n57035\n73170\n185\n72077\n2043\n33287\n91040\n35703\n61447\n19639\n19023\n31842\n79122\n28218\n78623\n52863",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "36\n78233\n46053\n27638\n19034\n3958\n14678\n5404\n84158\n45702\n48797\n40377\n61293\n50683\n31918\n5382\n66527\n87563\n90913\n47936\n43641\n39585\n92320\n52108\n14918\n41001\n34891\n75582\n36733\n43617\n99666\n67619\n23839\n51023\n89459\n54076\n90012",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "20\n70186\n30713\n12957\n10388\n36050\n83115\n840\n5427\n37556\n81652\n41004\n10627\n30773\n14809\n5355\n73621\n91785\n97088\n96234\n58384",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "41\n21302505\n50113122\n57888458\n57066057\n96292413\n85912430\n76609923\n80789926\n67486823\n69651306\n45385758\n43354838\n29859744\n7945200\n95527984\n21920552\n96299170\n47299209\n44236648\n66301052\n80935990\n64397461\n55671542\n86477067\n1645088\n15807219\n14300303\n22225663\n76983189\n36049082\n65201681\n17906574\n55767298\n49537364\n36146173\n20190973\n24418752\n46455216\n52949651\n98864044\n7123773",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 41)"
    },
    {
      "input": "41\n47128089\n87231160\n23208900\n59659324\n60903155\n89628102\n5309843\n89812792\n43897095\n25722815\n28020268\n51628608\n84282115\n47050915\n41693731\n43615802\n32383373\n36173721\n84365221\n93409612\n3152531\n977696\n44876086\n48721028\n70254246\n59827561\n18052233\n89292748\n86235950\n98177355\n4721630\n59875696\n31561900\n13363730\n12098110\n58241663\n73240130\n80625118\n31601250\n95691153\n40550393",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 41)"
    },
    {
      "input": "41\n1\n100000000\n70171309\n1\n35932281\n1\n1\n1\n100000000\n1\n31660233\n100000000\n30640885\n100000000\n100000000\n100000000\n61431588\n68894846\n1\n76125669\n100000000\n29383682\n100000000\n1\n37932555\n1\n1\n100000000\n10312416\n1\n1\n100000000\n1\n63141000\n59842218\n1\n1859578\n100000000\n32355801\n1\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 41)"
    },
    {
      "input": "1\n78330216",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 1)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:24",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Enemies",
  "tags": [],
  "text": "Gangs are a big problem for every metropolis. Individuals that are member of some gang usually make enemies. When enemies meet each other they always want to fight, which makes the city a dangerous place to live. These gang members are also known as fighters. The local Police Department received anonymous information about a huge meeting between fighters at the central park, but the police chief, as always, wants to know if it is worth to send some of his men there. He knows that a fighter will fight one of his enemies only if all of them are in front of him. If one of the fighters doesn’t want to fight, then the meeting will be canceled. Moreover, each fighter can fight just one enemy at a time, and during this fight his other enemies wait, because they all want to beat him alone. He also knows that one police officer is enough in order to prevent two fighters from start a fight. Given these conditions and the enemy’s relationships of the fighters that will be at the central park, your job is to tell the chief if the meeting will happen or will be canceled. If it is going to happen, then the chief wants to know the minimum number of policemen he needs to send in order to prevent the fights at any moment of the meeting.InputEach test case is described using several lines. The first line contains two integers F (1 ≤ F ≤ 60) and R (1 ≤ R ≤ 1770) representing the number of fighters at the meeting and the number of enemy relationships, respectively. The fighters are identified by different integers from 0 to F - 1. Each of the next R lines contains two integers A and B representing an enemy relationship between the fighters A and B. You can consider that each enemy relationship will appear once in each test case and that if a fighter A is enemy of a fighter B then B is also enemy of A. The last test case is followed by a line containing F = 0 and R = 0.OutputFor each test, output in a line the minimum number of policemen necessary in order to prevent the fights or output ‘The meeting will be canceled’ if the meeting is going to be canceled.ExampleInput:4 4\r\n0 2\r\n0 3\r\n1 2\r\n1 3\r\n6 7\r\n0 2\r\n0 3\r\n0 4\r\n0 5\r\n1 2\r\n1 3\r\n1 4\r\n3 3\r\n0 1\r\n1 2\r\n2 0\r\n0 0Output:2\r\n2\r\nThe meeting will be canceled",
  "sample_input": "Input:4 4\r\n0 2\r\n0 3\r\n1 2\r\n1 3\r\n6 7\r\n0 2\r\n0 3\r\n0 4\r\n0 5\r\n1 2\r\n1 3\r\n1 4\r\n3 3\r\n0 1\r\n1 2\r\n2 0\r\n0 0Output:2\r\n2\r\nThe meeting will be canceled",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/ENEM",
  "scraped_at": "2025-08-17 00:33:19",
  "test_cases": [
    {
      "input": "4 4\r\n0 2\r\n0 3\r\n1 2\r\n1 3\r\n6 7\r\n0 2\r\n0 3\r\n0 4\r\n0 5\r\n1 2\r\n1 3\r\n1 4\r\n3 3\r\n0 1\r\n1 2\r\n2 0\r\n0 0",
      "expected_output": "2\r\n2\r\nThe meeting will be canceled",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "9 2\n7 3\n7 7\n3 6\n2 3\n3 6\n3 2\n1 4\n4 7\n10 4\n5 4\n4 9\n5 4\n5 5\n5 4\n5 2\n1 3\n1 9",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "10 3\n3 4\n7 8\n8 2\n9 1\n4 5\n2 10\n5 3\n3 5\n10 4\n7 6\n8 7\n9 2\n9 4\n7 8\n3 9\n6 3\n7 4",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "6 6\n1 7\n10 6\n6 10\n8 4\n8 7\n7 4\n7 10\n7 9\n3 2\n5 7\n5 1\n9 5\n1 3\n4 10\n4 4\n7 9\n8 6",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "62 44\n79 78\n8 69\n2 25\n63 24\n53 90\n86 6\n92 26\n80 80\n17 46\n27 84\n7 12\n22 57\n85 30\n36 49\n22 17\n88 1\n55 63",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "81 54\n55 73\n93 97\n96 99\n90 54\n35 54\n61 33\n16 44\n74 9\n33 47\n71 18\n22 93\n12 21\n34 30\n25 40\n67 49\n6 43\n82 97",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "6 7\n77 19\n10 7\n84 94\n52 61\n83 67\n20 27\n6 57\n90 24\n65 62\n87 14\n2 60\n3 90\n50 64\n7 3\n77 5\n20 6\n76 14",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "25 75\n69 96\n33 5\n18 82\n59 85\n85 67\n76 3\n88 29\n45 22\n25 25\n62 47\n47 75\n9 18\n97 80\n34 6\n39 51\n47 35\n22 19",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "48 32\n27 36\n56 35\n27 97\n4 54\n77 20\n70 35\n57 61\n85 17\n48 31\n71 85\n100 55\n87 9\n22 69\n25 62\n60 95\n90 65\n55 4",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "113 370\n485 60\n254 58\n99 266\n109 149\n234 76\n311 369\n312 427\n387 463\n360 75\n447 104\n61 333\n388 79\n454 415\n491 69\n266 417\n239 415\n306 117",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "312 83\n317 218\n339 424\n134 107\n129 285\n251 105\n50 258\n479 441\n361 484\n236 366\n297 88\n183 396\n192 213\n341 170\n475 190\n474 216\n185 218\n424 488",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "255 199\n159 188\n283 441\n187 474\n418 391\n244 224\n149 269\n166 325\n115 64\n288 389\n238 90\n304 432\n182 236\n475 185\n275 88\n414 238\n69 92\n280 337",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "300 371\n234 323\n374 352\n243 217\n164 103\n316 273\n494 492\n393 221\n419 316\n57 317\n78 161\n112 268\n187 399\n117 478\n410 100\n394 97\n237 495\n419 285",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "294 184\n486 169\n152 214\n55 495\n438 182\n460 205\n487 426\n119 87\n248 94\n374 259\n244 238\n161 242\n226 359\n315 325\n176 298\n407 93\n180 246\n245 460",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "459 242\n404 124\n490 247\n403 248\n450 132\n492 453\n353 497\n170 320\n276 408\n431 67\n215 443\n401 140\n62 385\n162 117\n474 289\n85 257\n431 252\n182 300",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "259 485\n308 256\n378 234\n211 313\n219 461\n397 50\n357 254\n373 431\n438 242\n338 300\n343 280\n383 448\n322 51\n321 151\n257 245\n122 430\n422 338\n234 473",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 2\n999 1\n2 1000\n2 999\n1 2\n2 1000\n2 1000\n2 2\n999 1000\n1000 1000\n999 1000\n1000 2\n999 999\n999 2\n1 1\n1 1\n2 1\n1000 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "999 1000\n999 2\n1 1\n2 1\n999 1000\n2 1000\n2 2\n2 999\n2 1\n1000 1000\n2 2\n999 2\n999 2\n2 999\n2 2\n999 999\n2 2\n1 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:15",
  "total_test_cases": 20
}
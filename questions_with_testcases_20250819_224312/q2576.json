{
  "problem_code": "problems",
  "title": "LL and ErBao",
  "tags": [],
  "text": "When LL and ErBao were young, they liked jumping rubber-rope (Tiao Pi Jin) very much. They jumped every day happily. But one day HH came and brought away the peaceful days. HH sometimes threw stones to them, and sometimes pushed them down suddenly. Seeing ErBao crying sadly, LL got angry finally, and decided to give HH some color see see.There were n trees on the ground (regarded as points), and LL planed to use his rubber-rope to wrap all the trees and form a big circle, then fooled HH into it and threw stones to him. Before finding out how to fool HH into the circle, LL wants to know how big the rubber-rope circle would be, say, the perimeter.But LL found it difficult than expected, because their playing territory and the trees were in a bigger fence (a simple polygon with m vertices). So, the rubber-rope mustn’t be out of the fence either. It’s your turn to help LL find the perimeter of the circle.Sample 1Sample 2InputThe input contains multiple cases terminated with EOF.For each case, first line contains two integers: m, n. (3 ≤ m ≤ 500, 0 ≤ n ≤ 500)Next m lines each contain two integers: Xfi, Yfi – coordinate of the fence’s ith vertex, in Counterclockwise order.Next n lines each contain two integers: Xti, Yti – coordinate of the ith tree.It is guaranteed that all trees were strictly in the fence, and the fence doesn’t intersect or touch itself. The absolute value of the coordinates doesn’t exceed 10000.OutputFor each case output the perimeter of the rubber-band with three digits after the dot.ExampleInput:8 20 030 030 2020 2020 1010 1010 200 205 1525 1512 55 55 20-5 20-5 5-20 5-20 -5-5 -5-5 -205 -205 -520 -520 50 00 170 -1717 0-17 0Output:Case #1: 48.284Case #2: 104.000",
  "sample_input": "Input:8 20 030 030 2020 2020 1010 1010 200 205 1525 1512 55 55 20-5 20-5 5-20 5-20 -5-5 -5-5 -205 -205 -520 -520 50 00 170 -1717 0-17 0Output:Case #1: 48.284Case #2: 104.000",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/ISUN1",
  "scraped_at": "2025-08-17 00:34:02",
  "test_cases": [
    {
      "input": "8 20 030 030 2020 2020 1010 1010 200 205 1525 1512 55 55 20-5 20-5 5-20 5-20 -5-5 -5-5 -205 -205 -520 -520 50 00 170 -1717 0-17 0",
      "expected_output": "Case #1: 48.284Case #2: 104.000",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "6 9 7 7 10 10 8 1 10 3 7 8 7 10 8 2 9 10 5 8 5 3 10 3 5 5 9 6 10 4 8 4 8 2 3 6 9",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "3 6 7 9 9 5 3 9 8 9 5 9 5 2 2 10 8 7 1 9 5 10 8 3 8 7 1 1 5 2 5 3 2 4 10 7 6",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "3 10 5 4 2 7 1 1 8 2 5 1 9 3 3 10 10 3 6 2 7 5 7 3 3 10 6 10 4 1 2 7 1 6 8 6 10",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "42 81 83 85 6 59 7 55 95 69 56 98 98 30 98 45 55 6 37 84 77 83 33 3 37 22 67 99 37 20 7 52 91 52 54 6 83",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "64 32 28 60 84 79 94 13 28 85 27 34 15 7 63 99 98 73 9 63 58 91 29 20 68 19 64 62 81 49 41 5 20 25 22 34 99",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "61 71 79 47 70 63 90 65 16 13 27 76 99 23 4 17 87 79 28 13 74 55 3 35 87 38 49 39 9 37 68 43 16 65 89 94 12",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "9 93 20 65 27 24 34 94 1 68 58 43 6 65 99 75 98 78 16 59 47 93 27 93 69 32 20 14 75 29 22 82 62 90 61 29 90",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "36 69 4 28 73 28 99 6 68 39 33 13 100 46 33 83 35 89 54 48 45 81 62 51 23 97 59 59 7 97 53 50 79 39 15 52 16",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "176 48 152 40 89 181 77 55 240 154 182 121 54 40 68 57 76 121 108 182 112 143 180 149 137 210 162 185 42 81 143 58 141 187 40 211 162",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "119 90 115 54 81 91 88 42 216 82 41 53 239 139 86 43 203 238 148 188 105 199 119 242 200 248 30 109 106 62 219 110 52 239 55 29 152",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "136 100 137 246 213 120 42 78 168 128 166 189 147 241 152 204 244 40 215 26 46 67 176 205 29 225 29 151 71 208 134 219 178 83 120 50 42",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "87 142 165 43 238 121 144 39 235 40 65 70 79 155 93 97 183 74 190 70 98 198 38 133 36 188 67 212 137 168 68 139 236 115 226 168 178",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "211 228 149 28 134 188 202 26 47 61 105 44 185 81 226 114 148 147 230 107 87 188 198 225 85 227 223 198 56 89 219 177 146 29 60 143 232",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "216 43 71 242 111 139 25 169 119 216 145 63 67 185 218 195 90 236 176 61 208 128 62 219 173 113 88 84 62 61 219 146 237 77 143 106 62",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "159 234 211 83 138 98 117 197 164 202 167 91 35 250 136 132 232 46 156 45 133 156 26 232 228 234 27 53 38 133 63 115 213 205 25 234 163",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 2 500 500 2 500 1 500 1 2 1 1 499 499 1 499 500 499 499 500 1 2 1 500 499 499 1 500 500 499 1 499 500 1 1 499 499",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "500 499 1 2 1 1 2 2 1 499 499 2 1 1 499 2 500 2 499 2 500 500 1 1 2 1 1 1 500 2 2 1 499 2 2 499 499",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:21",
  "total_test_cases": 20
}
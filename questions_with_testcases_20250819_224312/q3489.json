{
  "problem_code": "problems",
  "title": "Negative Score",
  "tags": [],
  "text": "Orianna is a great swimmer and she's going to a swimming competition this month and needs your help as she is highly paranoic about the results of the competition.The competition consists in some sort of evaluations, every judge makes a score and, based on that score and the score of other contestants she will get a score belonging to her results, those scores are final, meaning that will not change in the competition.Orianna requires this solution with urgency, she is getting evaluated on a lot of ways and she is very worried about her results, so she wants to know what is the worst score from an evaluation A to other evaluation B inclusive.InputThe first line of the test data will start with an integer T representing the T test cases, then, T cases will follow, each of the cases starts with two integers N and Q, denoting the number of evaluations Orianna had, then, N integers will follow denoting the score on each evaluation, after that, Q queries will begin, each query consist on two integers A and B.OutputYou must output the string “Scenario #i:“, a blank line and then the result of each query, remember, Orianna is interested on the worst score from evaluation A to evaluation B inclusive.ExampleInput:2\r\n5 3\r\n1 2 3 4 5\r\n1 5\r\n1 3\r\n2 4\r\n5 3\r\n1 -2 -4 3 -5\r\n1 5\r\n1 3\r\n2 4Output:Scenario #1:\r\n1\r\n1\r\n2\r\nScenario #2:\r\n-5\r\n-4\r\n-4Constraints1 ≤ T ≤ 100Small input (30%):1 ≤ N ≤ 1,0001 ≤ Q ≤ 1,000-109≤ Ni ≤ 1091 ≤ A ≤ B ≤ NLarge input (70%):1 ≤ N ≤ 100,0001 ≤ Q ≤ 100,000-109≤ Ni ≤ 1091 ≤ A ≤ B ≤ N",
  "sample_input": "Input:2\r\n5 3\r\n1 2 3 4 5\r\n1 5\r\n1 3\r\n2 4\r\n5 3\r\n1 -2 -4 3 -5\r\n1 5\r\n1 3\r\n2 4Output:Scenario #1:\r\n1\r\n1\r\n2\r\nScenario #2:\r\n-5\r\n-4\r\n-4",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/RPLN",
  "scraped_at": "2025-08-17 00:34:30",
  "test_cases": [
    {
      "input": "2\r\n5 3\r\n1 2 3 4 5\r\n1 5\r\n1 3\r\n2 4\r\n5 3\r\n1 -2 -4 3 -5\r\n1 5\r\n1 3\r\n2 4",
      "expected_output": "Scenario #1:\r\n1\r\n1\r\n2\r\nScenario #2:\r\n-5\r\n-4\r\n-4",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4\n3\n3\n3\n8",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "2\n6\n10",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n3\n5\n10\n3\n8",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "6\n55000384\n31729124\n60022246\n78047299\n41591561\n17941607",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "14\n71660600\n24906393\n69924661\n18587318\n59188605\n38773328\n69656796\n42089907\n16061072\n90634820\n20297348\n58931915\n91727574\n97348145",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "16\n56880852\n60984137\n44844776\n19557106\n63511798\n18991365\n11333054\n90476939\n93831016\n17529377\n85419863\n16293198\n81144329\n33481664\n38263891\n48429884",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "5\n13190058\n67137335\n76602988\n75274119\n27212963",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "6\n87577707\n61847679\n65305235\n65623579\n16793662\n77436912",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "70\n44488\n34051\n36700\n77048\n49605\n61390\n25229\n29451\n18723\n95520\n42510\n15733\n15494\n98106\n11312\n46837\n95929\n81357\n52217\n73160\n99903\n36063\n95822\n99180\n90400\n60974\n35904\n85982\n49508\n23818\n79639\n9311\n80600\n31680\n84632\n53605\n59183\n47498\n92241\n56878\n42387\n62726\n38312\n51650\n12253\n7227\n23554\n86975\n59164\n27093\n79213\n90632\n99465\n37122\n27553\n18312\n40423\n12391\n12996\n83285\n8502\n97384\n29891\n82280\n84303\n13985\n63742\n6698\n13525\n91345",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "70\n21651\n4016\n9856\n76586\n44745\n14988\n73999\n3185\n40683\n90902\n79190\n45061\n17920\n15893\n78217\n769\n77363\n5817\n11327\n17203\n13523\n65865\n14013\n59304\n92948\n43151\n66863\n46448\n91332\n72709\n40374\n18912\n5217\n10827\n73083\n38\n24863\n86346\n18773\n27238\n83559\n68407\n95859\n64968\n98117\n79346\n25067\n11726\n8620\n21376\n5891\n55667\n71980\n20795\n5406\n97913\n92484\n16939\n72838\n85543\n26756\n90049\n65839\n55649\n30217\n13755\n34372\n56811\n38117\n17099",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "39\n49233\n5908\n340\n45177\n79838\n12088\n29057\n70735\n88858\n40655\n52712\n85235\n86102\n54004\n32492\n33350\n10486\n39608\n55975\n77116\n44787\n40122\n72933\n33610\n86743\n42640\n94740\n24651\n50525\n17275\n39321\n36991\n21482\n32662\n81778\n78769\n16793\n44053\n20109",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "66\n34958\n48853\n89242\n75958\n39244\n43571\n14360\n96764\n2228\n73562\n246\n98459\n76733\n32204\n70355\n98191\n58061\n67898\n83599\n89000\n48949\n99617\n60162\n91259\n91832\n96070\n90838\n16863\n65232\n8140\n1859\n10739\n43714\n86107\n53315\n97247\n10860\n93121\n50171\n9399\n51757\n82512\n14114\n65678\n3359\n60548\n67498\n50115\n50905\n19563\n30004\n61314\n56126\n5625\n79955\n37053\n50744\n81010\n60023\n20892\n4129\n70580\n32266\n95585\n95360\n83757",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "94\n40412\n86104\n21695\n3838\n99400\n3197\n611\n78365\n42173\n69288\n87509\n57178\n25432\n39481\n54296\n35606\n46089\n2392\n34804\n21186\n29097\n75082\n26654\n70212\n48924\n53523\n77135\n52074\n11588\n23591\n84595\n14579\n32332\n59583\n74520\n49179\n65289\n11111\n86730\n65675\n17839\n32995\n74133\n59425\n49324\n68262\n66971\n55500\n59141\n37078\n85738\n39681\n3614\n25454\n15328\n83440\n90856\n61628\n96214\n96468\n43608\n88620\n82872\n14205\n45243\n38669\n30500\n22377\n86069\n40651\n7611\n67382\n67631\n37555\n4675\n85941\n59824\n37542\n61899\n99777\n25451\n24326\n30422\n18016\n87170\n96540\n59790\n58650\n59597\n59703\n78799\n30592\n59652\n38849",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "39\n56131\n24561\n89835\n72743\n8888\n54115\n61044\n68109\n39937\n62264\n87440\n1672\n62876\n84294\n92582\n61278\n53490\n11596\n43884\n29457\n70840\n99704\n55763\n65554\n4206\n59442\n72426\n50261\n40634\n10153\n91579\n21563\n60528\n85746\n79692\n48840\n7582\n9099\n7791",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "86\n74423\n53116\n8530\n90384\n82753\n65821\n94694\n88022\n13361\n39261\n71702\n18617\n91812\n29998\n21208\n49069\n68642\n50481\n53913\n73990\n8568\n67217\n90929\n36743\n27210\n7011\n90301\n18388\n60678\n18729\n90032\n50063\n15340\n57300\n85038\n51467\n36669\n16089\n12632\n16781\n80223\n18702\n71040\n8678\n71246\n47176\n11819\n28323\n90638\n22092\n3671\n35998\n42764\n52033\n26343\n49163\n36436\n80843\n55880\n16664\n67481\n93105\n31042\n90028\n65615\n14919\n55903\n69292\n68635\n2665\n68784\n68870\n17318\n18238\n31118\n24645\n67921\n70674\n82799\n41569\n96210\n54814\n14660\n60022\n54556\n23908",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "100\n19332115\n50779634\n51270732\n181151\n98779472\n82237041\n584203\n74158959\n88372965\n86676484\n77028511\n96094057\n8103908\n37140352\n42245582\n99704072\n124634\n72543897\n98561713\n70102626\n55178784\n51150247\n88622369\n7627705\n45040611\n83033888\n71524005\n53106593\n93502052\n17633356\n72214203\n47202126\n71791142\n96317520\n5196439\n32154000\n98498335\n31740266\n71205946\n48390169\n40052\n72594191\n37190000\n90641397\n39527162\n21580627\n49637904\n21315842\n16130758\n52804527\n39646004\n37355276\n49902482\n34643690\n51587972\n69702326\n31442693\n57883556\n98927942\n68343733\n34061607\n12916982\n50236325\n37458259\n71470895\n56339871\n50469380\n75436167\n61220888\n87814255\n55288729\n71184916\n87660967\n53828613\n45543958\n76979853\n60368669\n19421707\n36290099\n18178683\n65811769\n54799195\n70810606\n98214980\n59004227\n91765687\n77224906\n85866336\n46910251\n58202391\n26207529\n71972393\n87183652\n91823515\n7005567\n42127537\n5503623\n37755751\n22817203\n36879312",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "100\n43366558\n35085459\n72483449\n6614987\n97378926\n57632468\n52155120\n17750883\n74330940\n77314201\n76312252\n18063883\n95910541\n23215956\n6205942\n4649320\n95525342\n96507268\n66476436\n48371601\n20137137\n16610115\n2669040\n11348617\n51692438\n18980704\n92838404\n87098361\n67976933\n24894826\n78066492\n49712950\n51571644\n62788296\n91453793\n73143694\n58345865\n75310309\n31314492\n3510948\n43868973\n70405443\n58817264\n68255343\n63635638\n75673882\n19033128\n30888282\n98595580\n56199895\n92802823\n54155986\n1444375\n4605732\n75390177\n23065366\n88389016\n62411206\n93287325\n75716492\n26367735\n25223905\n68383427\n72200969\n72900447\n90690955\n59395153\n20754692\n49520427\n11987536\n52996058\n74135031\n84129589\n42481178\n63039419\n65212266\n65042119\n11982264\n97405213\n52457521\n4430602\n27663096\n76259646\n89359077\n63860475\n51770317\n26652078\n58421789\n29604542\n40794343\n82676248\n69007845\n60215241\n24811236\n84768062\n83016938\n15981275\n70925253\n29917321\n38121950",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "2\n1\n14603729",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 2)"
    },
    {
      "input": "100\n100000000\n1151652\n1\n1\n100000000\n1\n1\n100000000\n39084029\n100000000\n15600914\n40871001\n100000000\n1\n100000000\n100000000\n1\n1\n100000000\n5197741\n100000000\n1\n1\n1\n100000000\n1027913\n6030009\n100000000\n100000000\n13338690\n100000000\n1\n1\n100000000\n100000000\n100000000\n14566528\n100000000\n1\n100000000\n100000000\n1\n31550142\n1\n1\n18158221\n70245687\n98297968\n100000000\n100000000\n31369012\n100000000\n1\n1\n100000000\n100000000\n100000000\n86179817\n1\n5406585\n81654692\n1\n100000000\n67977998\n42227593\n1\n1\n1\n1\n69317426\n79186288\n1\n100000000\n1\n68434724\n1\n100000000\n1\n100000000\n57362232\n53378685\n79624600\n1\n1\n9563828\n1\n1\n100000000\n100000000\n1\n100000000\n100000000\n1\n1\n1\n100000000\n1\n100000000\n1\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 100)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:24",
  "total_test_cases": 20
}
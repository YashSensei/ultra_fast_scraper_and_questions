{
  "problem_code": "problems",
  "title": "Emma s Domino",
  "tags": [],
  "text": "Thedomino effectis a phenomenon that occurs when in a line of domino pieces, each standing on its smallest face, the first piece from one of the line's ends falls in the direction of the next piece. In turn, this second piece falls over the third one in the line, and so on until the other end of the line is reached, at which point every piece has fallen. Note that in order to produce this effect, the distance between consecutive pieces in the line must be lower or equal to their height.Emma has very recently found out about the domino effect, and she was immediately amazed by it. She spent all morning forming a line with theNdomino pieces that her brother Ezequiel gave her, but just before she was going to make the first piece fall, her grandma came to her home and took her to play in the park. Ezequiel knows Emma has not taken into account the distance between consecutive pieces when she formed her domino line, and doesn't want to see her frustrated if all the pieces do not fall after she pushes the first one. Thus, Ezequiel wants to move some pieces from inside the line so that the distance between consecutive pieces is always lower or equal to their heightH. Because he doesn't want Emma to find out that he has moved some of the pieces, he will leave the first and last pieces where they are, and he would also like to move as few pieces as possible from inside the line. What is the minimum number of pieces he must move?InputEach test case is described using two lines. The first line contains two integer numbersNandH, indicating respectively the number of pieces in the line (3 ≤ N≤1000) and their height (1≤H≤50). The second line containsN-1integersDi, representing the distances between pairs of consecutive domino pieces, in the order given by the line (1≤Di≤100fori = 1, 2 ... N-1). The end of the input is signalled by a line containing two times the number-1.OutputFor each test case, you should print a line containing a single integer number, representing the minimum number of pieces that must be moved in order to have the distance between consecutive pieces always lower or equal toH. Note that the first and last pieces cannot be moved, and that the relative order between the the pieces cannot be changed. If it is impossible to achieve the desired result, print the number-1.ExampleInput:8 3\r\n2 4 4 1 4 3 2\r\n10 2\r\n1 2 2 2 2 2 2 2 3\r\n5 2\r\n2 2 2 2\r\n5 3\r\n1 6 2 4\r\n-1 -1Output:3\r\n8\r\n0\r\n-1",
  "sample_input": "Input:8 3\r\n2 4 4 1 4 3 2\r\n10 2\r\n1 2 2 2 2 2 2 2 3\r\n5 2\r\n2 2 2 2\r\n5 3\r\n1 6 2 4\r\n-1 -1Output:3\r\n8\r\n0\r\n-1",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/TAP2012E",
  "scraped_at": "2025-08-17 00:34:17",
  "test_cases": [
    {
      "input": "8 3\r\n2 4 4 1 4 3 2\r\n10 2\r\n1 2 2 2 2 2 2 2 3\r\n5 2\r\n2 2 2 2\r\n5 3\r\n1 6 2 4\r\n-1 -1",
      "expected_output": "3\r\n8\r\n0\r\n-1",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3 3\n5 6 7 10 6 4 2\n10 1\n5 2 5 5 3 5 7 5 5\n8 6\n10 8 10 6\n8 5\n10 5 1 10\n2 9",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "1 6\n5 7 8 10 9 2 1\n1 7\n8 3 8 2 7 2 7 8 7\n1 3\n4 1 5 5\n9 10\n7 6 9 2\n3 9",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "4 3\n5 6 1 7 4 2 3\n4 9\n8 8 9 5 4 7 1 3 3\n2 9\n9 2 4 3\n8 10\n1 4 7 3\n2 2",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "81 63\n65 43 86 59 97 80 31\n36 53\n95 14 6 19 69 92 100 20 17\n9 50\n39 9 82 64\n85 1\n64 17 22 82\n16 63",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "88 94\n47 5 21 34 55 81 20\n57 10\n72 8 58 59 10 89 11 50 61\n90 60\n75 88 92 94\n89 1\n90 89 62 53\n5 61",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "31 95\n17 40 14 12 29 74 81\n9 21\n55 53 9 7 43 71 63 50 12\n58 46\n15 63 66 50\n30 21\n56 89 87 72\n99 44",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "72 20\n31 71 69 31 30 31 15\n59 9\n100 54 62 41 48 69 50 4 12\n93 80\n51 2 48 56\n1 45\n19 88 50 100\n57 39",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "46 88\n55 72 58 99 68 88 13\n10 4\n89 9 62 97 33 83 75 31 55\n74 81\n6 94 100 49\n3 53\n35 31 63 44\n49 22",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "388 165\n463 297 340 400 441 135 288\n95 350\n494 228 458 350 248 397 467 316 270\n256 304\n157 285 301 374\n454 85\n306 357 347 385\n294 402",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "203 267\n256 233 405 454 294 74 219\n317 329\n328 195 410 337 423 211 225 367 55\n182 172\n362 71 440 477\n304 85\n64 133 330 321\n317 287",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "184 392\n98 128 492 253 266 152 189\n299 406\n247 377 300 184 74 491 62 131 311\n124 432\n55 497 145 73\n314 481\n307 79 317 387\n159 263",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "404 370\n67 61 481 295 196 470 252\n167 472\n120 485 428 361 384 479 414 113 391\n476 129\n143 453 493 357\n182 217\n204 198 147 429\n388 499",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "397 103\n426 311 308 225 125 183 367\n362 475\n306 422 161 459 215 232 85 478 454\n120 79\n429 494 152 431\n425 72\n358 425 81 139\n162 343",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "130 135\n141 446 324 374 239 241 148\n486 263\n271 55 395 452 301 171 254 267 189\n440 105\n417 87 137 137\n407 319\n476 311 305 51\n368 416",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "474 129\n274 402 157 290 211 224 413\n474 308\n444 138 398 207 466 277 249 288 282\n388 286\n339 288 121 348\n321 211\n319 344 68 72\n271 267",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000 1000 1000 1000 1000\n1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000\n1000 1000 1000 1000\n1000 1000\n1000 1000 1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000 1000 1000 1000 1000\n1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000\n1000 1000 1000 1000\n1000 1000\n1000 1000 1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "999 999\n999 2 1000 1 1 1 2\n999 999\n2 999 1 1000 1 1 1 999 999\n1 1\n1 2 999 2\n1 2\n999 2 2 1000\n2 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1000 2\n1 1 1000 1 1000 1 999\n2 1000\n1 1 1000 2 1 999 999 1000 999\n2 2\n1 2 2 1\n2 1\n1 2 1 999\n1 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:22",
  "total_test_cases": 20
}
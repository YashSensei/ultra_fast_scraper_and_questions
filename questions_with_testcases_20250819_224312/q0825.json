{
  "problem_code": "problems",
  "title": "Ada and Manure",
  "tags": [],
  "text": "As you might know Ada the Ladybug is farmer. Last year, she sowedNdistinct types of grain toNdistinct places. This year she wants to seed the same types of grain again, yet there is a little problem: each type of grain needs special kind of manure, yet fertilizing soil with same kind of manure in consecutive years might destroy it.Now she is asking you to count the number of ways, to seedNtypes of grain toNplaces in such way that no type of grain will be in its original place. Since this number might be pretty big, print it modulo109+7.InputThe first line contains1 ≤ T ≤ 105, number of test-cases.Each of followingTlines contains1 ≤ N ≤     107, number of types/places.OutputFor each test case, print the number of possibilities for given number of types/places modulo 1000000007.Example Input5\r\n2\r\n3\r\n10\r\n100\r\n666Example Output1\r\n2\r\n1334961\r\n944828409\r\n769756093",
  "sample_input": "5\r\n2\r\n3\r\n10\r\n100\r\n666",
  "sample_output": "1\r\n2\r\n1334961\r\n944828409\r\n769756093",
  "link": "https://www.spoj.com/problems/ADADUNG",
  "scraped_at": "2025-08-17 00:33:11",
  "test_cases": [
    {
      "input": "5\r\n2\r\n3\r\n10\r\n100\r\n666",
      "expected_output": "1\r\n2\r\n1334961\r\n944828409\r\n769756093",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2\n5\n3",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n9\n8\n8\n1\n1",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "3\n5\n6\n1",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "13\n18511800\n55795616\n14156120\n95707061\n4219345\n48534407\n18845575\n52813026\n45184976\n23935365\n55571472\n52828959\n72391704",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "14\n32168522\n35994682\n48465805\n89535434\n70712333\n14372022\n23245320\n15048072\n40435579\n45841736\n67556041\n75188375\n67252113\n46375828",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "6\n35951715\n6158560\n15287952\n27359868\n73846210\n81643310",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "20\n30296699\n19412441\n81931229\n58220706\n70651718\n31445765\n98421579\n25256442\n55632138\n4545041\n23934433\n8403055\n32134598\n53818815\n48260658\n4637889\n95464663\n45547015\n83776036\n31359274",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "11\n46528302\n37140322\n80808081\n11862001\n13909533\n27728136\n71885931\n49815269\n76179664\n48364365\n28557538",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "60\n91596\n1861\n89841\n20706\n36564\n56930\n58225\n72566\n3529\n9077\n19\n48755\n83047\n94364\n81133\n63621\n68582\n48727\n25693\n60303\n2023\n25668\n76805\n96817\n67330\n32339\n17215\n84633\n22621\n78369\n83524\n89243\n15836\n43860\n3249\n30549\n87931\n10931\n13647\n69361\n95234\n59810\n25326\n10574\n88098\n42166\n32816\n87962\n74295\n13807\n76094\n98308\n37039\n449\n15950\n10194\n5572\n53595\n23656\n96519",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "45\n59424\n19721\n26255\n24739\n19496\n17668\n10119\n86565\n82453\n21596\n55350\n25148\n17693\n14853\n71578\n13377\n87633\n17778\n22268\n71935\n31394\n32901\n52896\n92013\n95578\n29206\n69675\n5081\n82828\n6375\n1891\n41712\n67830\n12199\n76790\n96793\n27836\n68540\n71751\n84090\n96969\n93039\n51672\n80208\n38488",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "62\n9297\n45660\n42374\n62773\n7383\n85019\n838\n86573\n94021\n63223\n2108\n61200\n34681\n60270\n70533\n62023\n59697\n36688\n44072\n78610\n44085\n44330\n60157\n98253\n52341\n17540\n38456\n79610\n59054\n71190\n15803\n65251\n98665\n61414\n47642\n69577\n98923\n15220\n79212\n71580\n38541\n85878\n92032\n97167\n67876\n11976\n84425\n49650\n86232\n91372\n72555\n85906\n33037\n95710\n9628\n31085\n1157\n78375\n1872\n74909\n74586\n73954",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "36\n82463\n88736\n89959\n82223\n61335\n36519\n47612\n53082\n99448\n67303\n63065\n66459\n17936\n15287\n32980\n70441\n36757\n44325\n31178\n2182\n93261\n75162\n97944\n91777\n15871\n60551\n54865\n29609\n56896\n22181\n21341\n58096\n88971\n52806\n35005\n34941",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "89\n4780\n76450\n49182\n70814\n65170\n72158\n30987\n65793\n74866\n13752\n29118\n86014\n94135\n30885\n74406\n90819\n78002\n97702\n30864\n27401\n47326\n27584\n27219\n12740\n42659\n11902\n32622\n45140\n23539\n98105\n39438\n22089\n73360\n60755\n95751\n41082\n25980\n80379\n64335\n75588\n60993\n18726\n25846\n35009\n17293\n85108\n362\n21788\n58881\n25915\n60943\n82866\n15747\n35363\n63705\n99010\n25098\n58865\n63612\n17727\n27272\n57204\n32029\n25528\n3786\n12910\n39757\n53041\n47832\n98452\n15077\n26810\n71495\n73906\n3039\n24170\n32199\n6306\n80908\n17649\n45336\n82725\n98613\n22927\n20033\n65907\n63791\n37850\n3913",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "93\n37419\n62611\n23076\n57642\n65005\n34101\n11234\n61531\n30667\n49469\n23477\n81247\n75212\n77501\n12988\n35115\n3873\n33248\n59368\n54658\n51190\n65674\n15180\n92190\n46424\n99189\n24592\n93366\n20197\n92336\n52168\n9810\n21055\n79311\n26416\n2296\n88118\n10920\n77110\n51622\n20989\n16052\n31425\n80880\n72883\n71088\n46143\n2234\n85689\n89774\n62342\n70726\n21750\n13179\n36602\n91144\n29051\n47627\n96986\n39426\n85740\n68131\n55209\n65619\n25098\n6184\n49618\n90970\n21219\n51161\n2764\n89988\n88644\n8277\n66654\n18328\n20865\n16856\n535\n71054\n57302\n29059\n83678\n97604\n26462\n14289\n5810\n18751\n38068\n43709\n70756\n38123\n41683",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "84\n31506\n85774\n55641\n79858\n65097\n30903\n16111\n49343\n83951\n85633\n10441\n7939\n95980\n39801\n94793\n85110\n46994\n37753\n32631\n46518\n68618\n16518\n85501\n51574\n29775\n96897\n66524\n72465\n44910\n68916\n80475\n99365\n40185\n90720\n77912\n42235\n27461\n60961\n63089\n1427\n22715\n44633\n34687\n74613\n35688\n16716\n3260\n39340\n61037\n43729\n91537\n27391\n63842\n50251\n95698\n90072\n64633\n11606\n87428\n87563\n57851\n36554\n76796\n76053\n39313\n57445\n85369\n41095\n88072\n22499\n4864\n82970\n43987\n29264\n41574\n59113\n53564\n20056\n11023\n69980\n95680\n63164\n31967\n97442",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "107\n72274734\n82957856\n90164537\n19207944\n79803420\n97610840\n48867452\n99640424\n50029791\n42777019\n18624040\n36268033\n33565406\n31565237\n70614040\n33097501\n47477250\n99648921\n27147566\n67379265\n64885443\n76069046\n53072764\n65993259\n52283411\n40039181\n39247182\n85422260\n83393151\n5682528\n14167622\n67773539\n61174993\n42191286\n63036771\n47266064\n64949415\n71038932\n91065636\n41137322\n13480452\n41923439\n89766108\n40133616\n32426572\n52707766\n59991105\n73786078\n52197942\n78255544\n44840755\n77667878\n27835278\n85809267\n84186195\n90200325\n64187897\n76346839\n70837757\n99587385\n62276480\n58922877\n30928019\n48690262\n70612810\n70381387\n41891873\n56032118\n55518512\n66355503\n41812206\n89737986\n7675055\n23615549\n17421139\n83583166\n92660142\n28956806\n91973669\n12974981\n65485866\n7080558\n4737716\n54380730\n76938640\n785990\n78867974\n12250549\n24287088\n82800191\n92018907\n63871293\n68687694\n96473744\n70315102\n2295754\n74749294\n96634075\n9417921\n22902543\n29015598\n84262196\n77919593\n13844862\n68939575\n13658473\n74047895",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 107)"
    },
    {
      "input": "107\n47169893\n21437966\n81265538\n52778232\n30862599\n69688793\n57416833\n28565540\n91903836\n92919739\n41774287\n83683647\n73716878\n67384419\n74233424\n43153901\n26401650\n55985276\n46979903\n13990362\n18223708\n9577407\n74274147\n92116965\n93790683\n88101995\n69440528\n36356845\n63774200\n5589952\n27349631\n59724543\n21572297\n43765498\n21575056\n16238976\n55029239\n78381083\n67329208\n7251853\n39926998\n90107233\n76537289\n82155528\n36480232\n82356065\n36357157\n11673335\n37375067\n64765918\n59550007\n45996629\n35565761\n32395615\n40959476\n11522179\n82334765\n87761820\n9666907\n86381025\n1899682\n81206856\n56139032\n12469750\n52041251\n57499165\n86817164\n63626248\n67220256\n68573665\n16446385\n37128208\n17950470\n20455138\n84023810\n89559680\n52966444\n96477945\n85006625\n73091155\n7295143\n57807650\n4791975\n96154514\n24881860\n63352704\n58718149\n22149598\n59947682\n42914170\n10378393\n58841763\n65938139\n25273253\n68682973\n5535229\n98004945\n75087279\n33795874\n63265982\n51688616\n78338407\n2268616\n5350478\n59829717\n13705543\n53084187",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 107)"
    },
    {
      "input": "107\n100000000\n1\n100000000\n1\n100000000\n100000000\n100000000\n100000000\n1\n1\n100000000\n1\n1\n100000000\n48946303\n100000000\n1\n100000000\n1\n1\n1\n1\n1\n82487031\n100000000\n44758713\n95331091\n54759681\n100000000\n100000000\n1\n100000000\n71029998\n100000000\n1\n1\n100000000\n32115522\n35297186\n88657299\n1\n23087951\n1\n100000000\n1\n1\n1\n100000000\n100000000\n1\n59280199\n100000000\n100000000\n100000000\n1\n47124290\n98119996\n100000000\n1\n1\n100000000\n93205846\n100000000\n92409602\n1\n100000000\n100000000\n100000000\n100000000\n1\n1\n100000000\n1\n63138633\n1\n1\n100000000\n100000000\n1\n1\n1\n100000000\n58279944\n68432044\n1\n100000000\n1\n100000000\n100000000\n93714714\n100000000\n100000000\n100000000\n95484633\n30832335\n100000000\n1\n100000000\n100000000\n53161365\n1\n1\n1\n100000000\n10956615\n50611969\n81257048",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 107)"
    },
    {
      "input": "2\n1\n73034130",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 2)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:15",
  "total_test_cases": 20
}
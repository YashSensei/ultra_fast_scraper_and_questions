{
  "problem_code": "problems",
  "title": "Publication",
  "tags": [],
  "text": "The Orizondo number is a way of describing the \"collaborative distance\" between a scientist and Rodrigo Orizondo by authorship of scientific publications.Rodrigo Orizondo is the only person who has an Orizondo number equal to zero. To be assigned a finite Orizondo number, a scientist must publish a paper in co-authorship with a scientist with a finite Orizondo number. The Orizondo number of a scientist is the lowest Orizondo number of his coauthors + 1. The order of publications and numbers assignment doesn't matter, i.e., after each publication the list of assigned numbers is updated accordingly.You will be given thepublications, each element of which describes the list of authors of a single publication and is formatted as \"AUTHOR_1 AUTHOR_2 ... AUTHOR_N\" (quotes for clarity only). Rodrigo Orizondo will be given as \"ORIZONDO\".Print out the list of Orizondo numbers which will be assigned to the authors of the listed publications. Each element of the printout should be formatted as \"AUTHOR NUMBER\" if AUTHOR can be assigned a finite Orizondo number, and just \"AUTHOR\" otherwise. The authors in the printout list must be ordered lexicographically.InputThe first line of the input gives the number of test casesC(0 < C â‰¤ 10,000).Each test case starts with an integer N, the number of publications, then N publications follow. Each publication consists in a space separated list of authors.(each publication in a single line).NotesAll authors mentioned in the list must be present in output.Assume that all publications of mentioned authors are given inpublications.String S is lexicographically before string T if S is a proper prefix of T, or if S has an earlier character at the first position where the strings differ.Constraintspublicationswill contain between 1 and 50 elements, inclusive.Each element ofpublicationswill contain between 1 and 50 characters, inclusive.An author is a string of between 1 and 50 uppercase letters ('A'-'Z'), inclusive.Each element ofpublicationswill be a list of authors, separated by single spaces.Each element ofpublicationswill not have any trailing spaces.The authors in each element ofpublicationwill be distinct.There will be at most 100 distinct authors in all publications.Rodrigo Orizondo will be given as \"ORIZONDO\", and at least one publication will list him as one of the authors.OutputFor each test case, output one line containing each author with his Orizondo Number, all space separated.ExampleInput:31ORIZONDO2KLEITMAN LANDERORIZONDO KLEITMAN4ORIZONDO BA B CB A ED FOutput:ORIZONDO 0KLEITMAN 1 LANDER 2 ORIZONDO 0A 2 B 1 C 2 D E 2 F ORIZONDO 0",
  "sample_input": "Input:31ORIZONDO2KLEITMAN LANDERORIZONDO KLEITMAN4ORIZONDO BA B CB A ED FOutput:ORIZONDO 0KLEITMAN 1 LANDER 2 ORIZONDO 0A 2 B 1 C 2 D E 2 F ORIZONDO 0",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/PUBLICAT",
  "scraped_at": "2025-08-17 00:34:01",
  "test_cases": [
    {
      "input": "31ORIZONDO2KLEITMAN LANDERORIZONDO KLEITMAN4ORIZONDO BA B CB A ED F",
      "expected_output": "ORIZONDO 0KLEITMAN 1 LANDER 2 ORIZONDO 0A 2 B 1 C 2 D E 2 F ORIZONDO 0",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1 9 9\nmmhzwrembizlkj ke oauqhvxtksvmk rlrv yyhb ag tcsi s r",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "3 5 2\ntnlvuzmpqodfhvitre ehxpyboddnsy n o vuxmt gysp ciqdq swpnw ti",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "9 7 2\ndgrftwvdaict oyfytcrmhowa z se mlbem b ms mib zb",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "93 66 52\njjz uegc jvxwwhhywhhbmp qp ownc asopz gi mtjd rmqkc",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "23 71 93\nsxkrygemtdxczk fngunkldmgq oyaxfx kua n qnz ltx wci wjzfj",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "60 19 98\nvgyhkrmnsadvfpxc r aixdsk ud kvy hr adh aqo bds",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "18 52 81\ne ozyfbvdqjziyey kn z sfv qpb ngw cb xt",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "34 51 7\nb f tnaw iimd gwb ugye lsri ui hu",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "379 159 212\nvismafhxw uuybwt hyuljdpsiom qsy jyb nz mjw p qviae",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "362 255 343\noizidsuos ornoue oi mo lmq mteeh e pd ffegq",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "71 192 321\nexnyhtdtycaafyf xhskzu ikt ijcq qpm wpv ekmt utdl nwgbh",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "221 459 465\nxmixuxyqpupc wo nmeu qpx o bui oagsu v vbz",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "410 340 236\nxaexhqvayhkth fvdf vxgebng ihziu u ed kc zqhks kd",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "241 335 372\nvoqbndeqjnympmdygr el ptfjn yydo l l fcu nwl vk",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "86 413 482\nniwomhhdtkbybqeev kql nkjhytr vus btijk y ezycy tdhwu c",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000\nbxojqbklghnqs x zcrrzrz gsec g vgt cpjo eddxe bfhwn",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000\nm f jcmqlxgv ox ku t ia kaoiu ym",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1 1000\ncutl qgfiahlv xknmoisihykjl lwoa hn snpe bbxap nutj a",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 2 999\nvokwchctkq ynvi aztad fvw kx myu twi ec dz",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:20",
  "total_test_cases": 20
}
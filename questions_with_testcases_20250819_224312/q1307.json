{
  "problem_code": "problems",
  "title": "Multiplicative Palindrome",
  "tags": [],
  "text": "Given a sequence of N integers. Find two disjoint contiguous palindromic subsequences. Lets call them X and Y. Your task is to find X and Y such that product of their lengths is maximal possible.InputFirst line will contain one integer N (1 ≤ N ≤ 106).Second line will contain N integers representing a sequence from the text of the task (0 ≤ Ai≤ 2×109).OutputFirst and only line of output should contain only one integer, the maximum possible product from the text of problem.ExampleInput:2\r\n1 1Output:1Input:4\r\n1 1 2 2Output:4Input:6\r\n10 11 12 12 11 10Output:4Input:6\r\n0 1 0 1 0 1Output:9",
  "sample_input": "Input:2\r\n1 1Output:1",
  "sample_output": "Input:4\r\n1 1 2 2Output:4",
  "link": "https://www.spoj.com/problems/MULPAL",
  "scraped_at": "2025-08-17 00:33:34",
  "test_cases": [
    {
      "input": "2\r\n1 1",
      "expected_output": "1",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4\r\n1 1 2 2",
      "expected_output": "4",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "3\n8\n3\n1",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "2\n8\n1",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n4",
      "expected_output": "To be computed",
      "type": "small_case_5",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "18\n34734558\n35968714\n58419700\n27059898\n9415986\n18339883\n90107424\n20335634\n95939213\n1752310\n14171956\n89602856\n40101526\n95212666\n44439950\n98008879\n80566600\n9252664",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "8\n72814126\n88159912\n64492547\n84963250\n10153619\n9476978\n79834581\n48551189",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "20\n86396926\n1881448\n25589321\n21111649\n12528211\n74571736\n86706160\n2018913\n22504197\n58886653\n35634226\n53853601\n25116194\n59857640\n29626144\n89716031\n68403881\n5233293\n71851017\n93967803",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "15\n34968543\n72232270\n70597105\n62067159\n86867482\n31592063\n13183541\n2087258\n48955617\n44909177\n34942563\n46952599\n96278489\n21747921\n65405306",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "13\n65443485\n95364057\n63625952\n35759952\n90059422\n55451901\n23987311\n12701627\n81181349\n77977291\n44081557\n99970621\n58919512",
      "expected_output": "To be computed",
      "type": "medium_case_10",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "80\n44974\n78278\n69210\n18050\n6488\n40384\n59873\n71110\n67246\n54843\n74548\n1569\n48487\n74841\n18579\n85948\n16169\n27920\n11610\n61865\n83125\n37607\n14688\n14408\n34677\n82462\n65885\n65547\n82640\n38954\n86834\n8431\n24447\n66891\n85299\n60844\n84815\n88389\n62330\n62700\n88533\n82346\n88351\n9840\n55479\n16431\n48639\n40050\n52061\n39609\n57909\n56251\n19071\n64111\n19108\n93661\n84038\n68604\n32233\n36978\n14125\n36131\n21404\n97098\n72550\n59586\n48670\n90089\n22586\n91298\n57017\n98177\n45115\n50610\n27549\n9677\n92228\n80550\n96708\n30824",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "24\n27694\n11862\n72874\n58440\n17364\n72434\n26721\n96698\n55752\n19962\n25482\n39086\n52037\n52543\n50721\n71355\n78368\n95698\n26846\n83690\n67750\n66579\n7186\n66439",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "93\n48156\n17135\n95277\n66344\n13616\n51629\n42594\n34333\n13057\n60657\n66512\n86788\n20517\n75143\n24627\n75502\n58897\n21865\n97973\n85675\n90361\n2157\n32821\n44665\n18537\n60279\n14979\n40402\n76910\n71285\n40589\n10699\n79722\n57723\n53641\n5292\n5055\n83443\n11797\n76565\n52732\n98771\n13023\n20184\n3707\n57732\n5182\n31611\n26834\n87825\n79181\n20126\n86968\n75315\n6768\n77269\n24959\n39406\n57078\n52239\n12850\n21000\n69473\n90326\n36602\n82109\n54538\n70826\n22752\n88523\n76303\n71021\n91528\n61555\n11730\n45369\n54702\n89455\n24122\n18686\n40590\n38267\n29097\n89704\n20097\n47322\n27562\n70524\n15942\n64647\n34218\n78021\n46412",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "32\n5574\n15230\n97315\n5738\n87850\n96944\n71135\n58405\n79965\n90878\n81274\n97203\n45999\n57271\n38244\n29083\n74956\n98552\n46103\n35758\n3153\n7848\n36870\n74863\n34813\n17523\n29736\n37226\n51361\n52172\n17467\n62599",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "22\n97480\n3327\n7187\n22766\n12692\n67605\n751\n90372\n21102\n53239\n83770\n58815\n89394\n73878\n61374\n16360\n8929\n37115\n55745\n68826\n22843\n92172",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "27\n78318\n28880\n61745\n59595\n66598\n68500\n31453\n12397\n58117\n88864\n13589\n70122\n23361\n40128\n9199\n42640\n70881\n35943\n59943\n74389\n92148\n52163\n27764\n61205\n25194\n90938\n97313",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "85\n47203\n16198\n30860\n84628\n57877\n3360\n59291\n68083\n49275\n63719\n63862\n8587\n22506\n24687\n42894\n56785\n23166\n90876\n66765\n73372\n56350\n90004\n30419\n84453\n94099\n10925\n12482\n89721\n45741\n49458\n63175\n17073\n64088\n8607\n77781\n43572\n74708\n62328\n77717\n33512\n34228\n77122\n93392\n72838\n22601\n86954\n46255\n68310\n74920\n33916\n23065\n22017\n77895\n66379\n74380\n80728\n38338\n84962\n26067\n29316\n25326\n17394\n37624\n36023\n90551\n3219\n48299\n66382\n33611\n46166\n45235\n22920\n79323\n92587\n9938\n12599\n69251\n58538\n73705\n32787\n25777\n35178\n45004\n38886\n92201",
      "expected_output": "To be computed",
      "type": "large_case_17",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "106\n5402234\n71350972\n14090924\n83188144\n2779599\n88095783\n71264925\n45888647\n41107177\n62516039\n85786672\n9109413\n86409021\n24064585\n60164928\n7598440\n55336425\n8509751\n94466939\n51474525\n23393538\n54154236\n69228963\n77661281\n4375927\n97937486\n12185677\n1843731\n66413402\n91621708\n82056574\n52878331\n98182188\n38974722\n37746258\n34379833\n36110222\n86640204\n22322930\n9898883\n6927763\n72192699\n65812263\n16941262\n5715537\n51323501\n81803615\n60262474\n57581139\n68918189\n28912868\n47264236\n96633475\n92759922\n4314085\n11469405\n55009886\n88967147\n98193723\n50638147\n85060503\n559417\n93568207\n23119583\n7404366\n11853518\n91479568\n97155378\n44658271\n18270732\n41955727\n89221245\n44567771\n10550833\n4683299\n70980942\n70891732\n56625653\n20359085\n45092730\n702163\n63741312\n95595844\n24750071\n38916760\n16826891\n54115409\n87796018\n37087697\n74753022\n32509346\n88515877\n9582543\n33939368\n7618443\n83320256\n41496602\n8972004\n9039502\n31764261\n23097082\n74016004\n11247124\n57277282\n61665346\n93815485",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 106)"
    },
    {
      "input": "106\n89840013\n16646422\n126149\n18837468\n93793030\n76692485\n88133364\n89198730\n52638384\n76950864\n32774161\n27463652\n92787055\n66236302\n66293505\n45548001\n35430174\n81410974\n82356819\n86471427\n38778198\n28789035\n53903582\n50155871\n36708986\n97691120\n1515202\n80557922\n59857444\n4738252\n33319899\n37699421\n86264938\n32632374\n6982216\n94259152\n6248335\n98811393\n57199007\n72929884\n19662409\n59429948\n36929760\n89839425\n33647511\n81764315\n29644293\n33482066\n97050341\n11856611\n39188477\n76666587\n26506558\n93187335\n15424590\n25397619\n42226606\n79250002\n75019018\n136807\n70451617\n80599163\n1513762\n26483200\n23425958\n24743182\n42415427\n53231062\n31187612\n90927805\n78656089\n14091428\n22640053\n15915121\n21218304\n94303126\n79004395\n88254420\n34128086\n13302807\n35218604\n42085620\n8008446\n79722478\n71937584\n6400424\n54115187\n10865279\n54871799\n72525731\n71453600\n73768521\n29518974\n21153802\n35323188\n13617921\n20544948\n8043822\n35474455\n86436147\n42897108\n92815524\n95126545\n38760484\n29035513\n62003156",
      "expected_output": "To be computed",
      "type": "max_case_19",
      "description": "Maximum size array (N = 106)"
    },
    {
      "input": "1\n1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 1)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:16",
  "total_test_cases": 20
}
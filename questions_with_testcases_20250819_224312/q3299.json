{
  "problem_code": "problems",
  "title": "Transportation",
  "tags": [],
  "text": "Blue Mary, the queen of Protoss, is planning a war against Zerg. Before the war she plans to make her base as safe as possible. Now there areN(1<=N<= 60) nexuses available in the region controlled by Protoss, numbered 1, 2 ...N. (Those who don't know what nexus is, please visitBlizzard Entertainment.) All the mineral and vespene gas stored in nexusican be transported directly to nexusSi.(iandSiwon't be the same.) Blue Mary's base is nexus 1, So all the mineral and vespene gas can be transported to base 1 directly or indirectly.Blue Mary defines the safety of nexusi,R(i), as the following:Ciandkare numeral constants which will be given in the input file.Suppose for a fixedi, set T={P1, P2, P3... Pw}, thenxis a member of T if and only if Sxisi. Any two Pjs must be different.Now Blue Mary wants to modify at mostM(0<=M<=N)Sis, so that the safety of her baseR(1)is maximized. To be a terran captive, also a great programmer, you must help her to solve this problem. Price is your life. Be careful! Blue Mary tells you thatS1can't be modified. Don't ask your queen about the reason please.InputTen test cases(given one after another, you have to process all!). For each test case:The first line containsN,Mand a real numberk(0.3<=k<1). The second line containsNspace separated integersSi. The third line containsNpositive real numbersCi.There is a single blank line between consecutive test cases.OutputFor each test case:A single line - the maximized safety of nexus 1, rounded to two decimal places.ExampleInput:4 1 0.5\r\n2 3 1 3\r\n10.0 10.0 10.0 10.0\r\n[and 9 test cases more]Output:30.00\r\n[and 9 test cases more]HintBefore modifying, the safety of the 4 bases are 22.8571, 21.4286,25.7143,10, respectively.After modifyingS2to 1, the safety of the 4 bases are 30, 25, 15, 10, respectively.",
  "sample_input": "Input:4 1 0.5\r\n2 3 1 3\r\n10.0 10.0 10.0 10.0\r\n[and 9 test cases more]Output:30.00\r\n[and 9 test cases more]",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/TRANSP1",
  "scraped_at": "2025-08-17 00:34:24",
  "test_cases": [
    {
      "input": "4 1 0.5\r\n2 3 1 3\r\n10.0 10.0 10.0 10.0\r\n[and 9 test cases more]",
      "expected_output": "30.00\r\n[and 9 test cases more]",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "9 3 10\n3 8 2 4\n10 1 10 2\n5\nzmzfo 9 cgck mck qbgy",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "5 7 8\n4 4 1 10\n4 7 2 1\n4\nuxv 8 sx l ipgc",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "4 6 9\n6 5 6 1\n6 5 6 8\n9\ny 9 wgl hgy ntgf",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "55 85 54\n44 8 5 69\n11 48 15 90\n24\nveh 70 gpvqc qjgd eca",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "33 31 26\n7 55 84 2\n14 83 34 73\n30\nfxc 16 m etq uov",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "81 82 100\n61 67 24 66\n13 61 84 17\n6\nfw 54 lsm ahnc oq",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "28 78 3\n95 87 54 97\n11 31 63 23\n66\nyqhx 93 fq fof d",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "20 39 90\n76 72 78 4\n94 38 38 60\n65\nay 83 wlff s wwg",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "52 155 211\n91 480 77 248\n270 167 142 51\n416\nmg 87 okpoe hcvh fm",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "163 63 406\n243 387 61 140\n447 190 192 312\n355\ncdjq 189 rttz gmjb jwfz",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "356 189 313\n240 378 417 376\n80 255 356 196\n242\nadel 275 kmj vbihx u",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "415 289 236\n418 182 113 263\n481 196 211 500\n60\nsehc 89 g jrzr dgcn",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "499 435 473\n74 78 318 97\n145 464 231 365\n363\nouanj 289 cx hallw tm",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "325 463 58\n487 500 115 359\n499 182 213 243\n367\nvgiv 370 grx y vkdoh",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "319 303 133\n80 330 84 156\n326 345 443 325\n356\nimx 467 ge ce ec",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000\nhx 1000 sfgs iylg tlxhd",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000\nzm 1000 qu hlbb u",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 1000 1000\n1 999 1000 1000\n1000 2 1000 2\n1000\nobd 1 oahx u m",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 1000 1\n1 2 2 999\n1000 2 2 1000\n1\nonkmt 1000 qxda odb mgzr",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:23",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Peer Review",
  "tags": [],
  "text": "For scientific conferences, scientists submit papers presenting their ideas, and  then review each other’s papers to make sure only good papers are presented at the conference.  Each paper must be reviewed by at least one scientist, and scientists must not review papers written by people they collaborate with (including themselves), or review  the same paper more than once.You have been asked to write a program to check if your favorite conference is doing things right. Whether a paper is being reviewed too much, too little, or by the wrong people - the organizers must know before it is too late!InputThe first line in each test case has two integers,K(1 ≤K≤ 5) andN(1 ≤N≤ 1000).Kis the number of reviews that  each paper will receive, whileNis the number of papers to be reviewed. The conference only accepts papers with a single author, and authors can only  present a single paper at the conference.Each of the nextNlines describes an author and includes the name of the institution to which  the author belongs, followed by the list of theKpapers he or she has been requested to review.  It is assumed that researchers from the same institution collaborate with each other,  whereas researchers from different institutions don’t. All institution names are shorter than 10 characters, and contain only upper  or lowercase letters and no whitespace. Since we have as many papers as authors, papers are identified by their author’s index; paper 1 was written by the first author in the list, and paperNwas written by the last author.The end of the test cases is marked with a line containingK=0 andN=0. You  should generate no output for this line.OutputFor each test case, your program should outputNO PROBLEMS FOUND(if all rules are being followed) orPPROBLEMS FOUND, wherePis  the number of rule violations found (counting at most 1 violation per paper).  If there is exactly one rule violation overall, your program should output1 PROBLEM FOUND.Sample Input2 3\r\nUCM 2 3\r\nUAM 1 3\r\nUPM 1 2\r\n2 3\r\nUCM 2 3\r\nUAM 1 2\r\nUPM 2 2\r\n0 0Sample OutputNO PROBLEMS FOUND\r\n3 PROBLEMS FOUNDProblemsetter: Manuel Freire",
  "sample_input": "2 3\r\nUCM 2 3\r\nUAM 1 3\r\nUPM 1 2\r\n2 3\r\nUCM 2 3\r\nUAM 1 2\r\nUPM 2 2\r\n0 0",
  "sample_output": "NO PROBLEMS FOUND\r\n3 PROBLEMS FOUND",
  "link": "https://www.spoj.com/problems/REVIEW",
  "scraped_at": "2025-08-17 00:33:44",
  "test_cases": [
    {
      "input": "2 3\r\nUCM 2 3\r\nUAM 1 3\r\nUPM 1 2\r\n2 3\r\nUCM 2 3\r\nUAM 1 2\r\nUPM 2 2\r\n0 0",
      "expected_output": "NO PROBLEMS FOUND\r\n3 PROBLEMS FOUND",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "7 2\n10 5\nj 10 5\n3 5\nzsbke 5 4\n6 9\nkz 9 1\n3 4\n1 10\npwsy 3 9\n1 8\nuyo 9 1\n7 2\nsk 10 7\n5 5",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "5 8\n2 6\nrxr 4 1\n9 1\nuf 4 10\n5 6\nzxgr 8 4\n3 7\n3 4\ndw 1 10\n4 9\nx 9 3\n5 2\naghc 2 7\n10 9",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "1 8\n2 2\nk 7 8\n7 4\navkuy 9 4\n2 4\nc 10 3\n3 8\n4 10\njis 4 4\n7 8\njqytt 4 6\n3 6\nntwca 2 2\n2 7",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "97 15\n7 59\nisx 85 90\n47 54\ndksnj 35 46\n97 26\nq 73 56\n86 94\n92 55\nfl 33 76\n48 84\nkioe 78 32\n4 55\na 38 53\n32 58",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "10 46\n41 15\ndkot 50 7\n44 21\nzo 64 17\n54 74\nklwdw 59 55\n31 62\n55 99\nlftl 35 23\n16 93\nast 52 51\n6 82\nzulrv 61 36\n70 55",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "41 53\n73 2\nj 90 7\n95 92\nrkvtx 47 74\n95 19\npwroa 16 99\n12 67\n3 19\np 89 75\n1 13\np 90 85\n42 34\ngcpk 48 40\n74 59",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "6 46\n96 6\no 12 9\n22 45\nz 35 9\n93 9\ntdth 47 59\n48 8\n98 13\nw 16 15\n78 26\nb 90 69\n42 6\nfc 20 81\n74 23",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "18 96\n57 14\nwfap 78 8\n26 86\nkugu 22 81\n67 35\ndbo 70 5\n32 69\n22 31\nfntj 27 42\n91 21\nlmcda 58 87\n17 94\nqttk 10 99\n58 66",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "356 69\n375 275\nhxzw 289 67\n286 312\nxdthw 82 207\n65 363\nv 96 115\n265 71\n303 104\na 266 422\n96 450\ngytx 328 211\n418 171\nlfsbj 418 104\n216 159",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "139 397\n163 234\ntmis 169 70\n168 358\ngnftl 272 91\n381 371\nlizw 367 182\n496 234\n106 349\nzg 431 115\n420 236\ngyubu 284 161\n55 258\nxxhp 233 234\n327 108",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "416 364\n393 348\nbwy 386 136\n151 183\ncb 176 427\n76 168\nltczf 319 60\n254 122\n306 388\nre 226 351\n356 298\nulezf 107 235\n251 494\nmrf 350 76\n441 229",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "153 126\n340 296\ncx 150 221\n345 300\nxzm 119 478\n499 456\npj 306 289\n417 381\n162 295\nhwq 166 381\n464 340\nq 381 439\n376 133\nqsfvs 412 186\n157 422",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "457 437\n264 163\ns 78 208\n293 461\nxb 348 369\n289 370\njhhzu 296 120\n449 426\n233 209\nrx 99 475\n171 396\nd 119 206\n159 190\nos 111 368\n281 191",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "120 151\n122 273\nev 242 390\n413 398\nrqyio 338 290\n161 461\npf 204 258\n128 433\n250 107\nazzd 82 290\n286 267\ne 431 247\n190 96\nuzpx 104 351\n298 63",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "381 481\n351 99\ne 439 210\n169 182\ng 172 396\n223 272\nbwv 218 247\n280 68\n461 453\njssjc 238 497\n479 467\ncmb 122 283\n279 197\nzwa 198 161\n226 154",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000\nkp 1000 1000\n1000 1000\nulxu 1000 1000\n1000 1000\nnmuj 1000 1000\n1000 1000\n1000 1000\njhks 1000 1000\n1000 1000\ngzns 1000 1000\n1000 1000\nalc 1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000\nixn 1000 1000\n1000 1000\nuqbls 1000 1000\n1000 1000\nkie 1000 1000\n1000 1000\n1000 1000\nuhr 1000 1000\n1000 1000\ncvyv 1000 1000\n1000 1000\nzbm 1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1\n2 999\nzxwh 1 1\n1 999\ngssl 2 1\n2 1000\nuql 1 2\n999 2\n1 1\nim 1 1\n999 2\nqtxr 1 2\n999 1000\ncj 1000 2\n999 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 2\n1 1000\nbikl 2 999\n999 2\nblea 1 1000\n1 1000\nhu 1000 999\n1 999\n999 999\nf 1000 1\n1 999\nyg 1000 1\n1 1\nfgf 1000 1\n2 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:19",
  "total_test_cases": 20
}
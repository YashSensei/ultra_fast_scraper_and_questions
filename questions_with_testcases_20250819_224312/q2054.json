{
  "problem_code": "problems",
  "title": "Foxling Feeding Frenzy",
  "tags": [],
  "text": "You've come across $N$ ($1 \\leq N \\leq 200$) adorable little Foxlings, and they're hungry! Luckily, you happen to have $M$ ($1 \\leq M \\leq 200$) crackers on hand, and everyone knows that Foxen love crackers! You'd like to distribute all of your crackers, without splitting any of them, among the Foxlings - but you have to be careful. Foxling $i$ must be fed at least $A_i$ crackers, or it will remain hungry, but no more than $B_i$ of them, or it will become hyper ($1 \\leq A_i \\leq B_i \\leq 200$). You certainly don't want any hungry or hyper Foxlings on your hands, and you're curious as to how many ways this can be accomplished.There are $T$ ($1 \\leq T \\leq 100$) scenarios as described above. For each one, you'd like to determine the number of different distributions of your crackers that would satisfy all of the Foxlings, modulo $10^9+7$ (as this value can be quite large).InputFirst line: 1 integer, $T$For each scenario:First line: 2 integers, $N$ and $M$Next $N$ lines: 2 integers, $A_i$ and $B_i$, for $i = 1..N$OutputFor each scenario:Line 1: 1 integer, the number of valid cracker distributions modulo $10^9+7$ExampleInput:22 51 42 63 52 22 92 3Output:30Explanation of SampleIn the first scenario, you can give either 1, 2, or 3 crackers to the first Foxling, and the remaining 4, 3, or 2 (respectively) to the second.In the second scenario, each Foxling must receive at least 2 crackers, while you only have 5 to give out, so you have no valid options.",
  "sample_input": "Input:22 51 42 63 52 22 92 3Output:30",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/UOFTAE",
  "scraped_at": "2025-08-17 00:33:49",
  "test_cases": [
    {
      "input": "22 51 42 63 52 22 92 3",
      "expected_output": "30",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "8 7 2 8 9 4 6 7",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "8 9 1 5 8 5 1 2",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "5 3 3 8 2 8 6 9",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "20 97 67 52 93 39 45 55",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "43 5 62 32 82 44 12 83",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "25 72 80 32 30 70 81 100",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "21 75 80 30 67 21 61 22",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "18 94 92 20 20 70 8 43",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "80 420 401 193 274 202 324 120",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "462 200 279 331 86 375 398 166",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "83 147 105 370 193 431 462 142",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "340 76 103 74 277 151 126 229",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "257 492 494 381 85 463 457 231",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "131 482 119 480 312 151 444 260",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "392 247 424 385 451 445 479 479",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "999 2 999 999 999 999 1 999",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1000 999 999 999 1 1 2 1000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:19",
  "total_test_cases": 20
}
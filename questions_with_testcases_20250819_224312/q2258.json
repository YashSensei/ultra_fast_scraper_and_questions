{
  "problem_code": "problems",
  "title": "Real Mangoes for Ranjith",
  "tags": [],
  "text": "Ranjith is very fond of mangoes. One fine sunny day, he goes to market to get some mangoes. In the market place, he findsNboxes (indexed from 1 toN), filled with mangoes kept in front of him. Each box indexediis denoted bybiand contains exactlyimangoes. The number of mangoes inbiis denoted bymiandm_i=i. Lettidenotes the type of mangoes in boxbi(tiis either \"real\" or \"fake\"). He can choose any boxbi(i≤N-2), but he doesn't know if the box contains \"real\" mangoes or \"fake\" mangoes i.e. type of boxbi.The type of mangoes inbidepends on the number of mangoes in boxesbi,bi+1,bi+2i.e. {mi,mi+1,mi+2}. Mangoes in boxbiare \"real\" if for each pair of numbers taken from set {mi,mi+1,mi+2}, Greatest common divisor(GCD) equals 1. Otherwise, \"fake\". Note thattiis not defined fori=N-1andi=Nand assumed to be \"fake\".GivenN, Ranjith wants to know the total number of \"real\" mangoes he will get from all boxes. As Ranjith cannot count beyondN, output the result moduloN.InputTest File starts with number of test cases -T;Tlines follows, each containingN, number of boxes.OutputOutputTlines Number of \"real\" mangoes Ranjith gets (moduloN) in each one of theTcases.Constraints2 <N≤ 108T≤ 10000ExampleInput:2\r\n9\r\n5Output:7\r\n4",
  "sample_input": "Input:2\r\n9\r\n5Output:7\r\n4",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/MANGOES",
  "scraped_at": "2025-08-17 00:34:27",
  "test_cases": [
    {
      "input": "2\r\n9\r\n5",
      "expected_output": "7\r\n4",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1\n8",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "3\n6\n4\n8",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n1",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "12\n84149339\n3114338\n21652931\n63971985\n77276535\n72072418\n43644201\n60197690\n8293635\n62297580\n18866327\n54948232",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "17\n36542445\n73291142\n73026813\n50384822\n17591850\n74634716\n86220766\n84887614\n54286116\n83387470\n55664484\n31432566\n7775050\n65758102\n73867016\n43840210\n9348115",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "19\n72235672\n92610445\n73567691\n51495763\n13284\n64857892\n60937901\n68431414\n92271369\n4538571\n37772504\n79866032\n48050086\n56501263\n12970126\n73806494\n9836516\n68667520\n39042956",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "17\n80836898\n25548713\n25258528\n74014661\n19310747\n17627083\n12349858\n74169960\n25354339\n96865436\n29801013\n87107611\n76557140\n24532276\n34288541\n29955119\n56783613",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "14\n62910038\n72662143\n88274299\n69731086\n98635811\n44274900\n38320810\n46735875\n49219804\n5459472\n29829847\n9325763\n48632259\n91358527",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "28\n15613\n67697\n44038\n73301\n16954\n53664\n40832\n82334\n13395\n21108\n25852\n75420\n68982\n56271\n31051\n18849\n14491\n58330\n51231\n18924\n75773\n27327\n8727\n51342\n56643\n51299\n31257\n96417",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "55\n51660\n20745\n22435\n58376\n13662\n39758\n83875\n8924\n9889\n30564\n66192\n11340\n54023\n14065\n14130\n20844\n20507\n61863\n87749\n81457\n24322\n76816\n71766\n91159\n57326\n84733\n86525\n15746\n67098\n68721\n95222\n62996\n91104\n93133\n51194\n48592\n24160\n95298\n81781\n41627\n25190\n17903\n4779\n56609\n61758\n42421\n10437\n73998\n67592\n49472\n76021\n78803\n17870\n81657\n87175",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "35\n28174\n47127\n59757\n1381\n37220\n73215\n29009\n4483\n58934\n88875\n68084\n87345\n8836\n22644\n40444\n87499\n57305\n37312\n17412\n80313\n36900\n29927\n9994\n25661\n73879\n7903\n72703\n70724\n47662\n1834\n6770\n41047\n66069\n94310\n25639",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "86\n88944\n245\n61083\n11365\n15372\n2536\n33227\n25750\n75542\n15566\n70432\n45719\n62441\n35128\n85138\n64439\n39369\n69923\n80435\n74517\n27326\n19913\n37812\n40416\n86254\n29613\n32198\n83437\n48678\n79898\n3629\n56277\n63234\n10871\n33696\n27270\n14187\n35815\n81088\n23727\n89426\n49150\n51683\n35389\n27842\n76558\n74771\n9070\n1634\n46824\n52796\n1564\n75650\n49918\n5902\n40222\n32785\n32275\n90615\n77552\n92209\n38750\n70655\n27677\n50447\n3259\n56879\n71317\n31190\n8546\n14722\n56624\n26308\n68119\n28089\n44524\n24943\n36755\n95343\n83571\n63735\n72986\n68089\n27761\n79300\n26695",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "101\n71436\n35557\n41711\n40456\n86265\n15650\n60883\n34324\n43749\n12439\n59233\n90559\n41719\n92666\n20136\n70318\n72966\n62577\n85162\n31939\n83658\n63913\n57139\n68623\n44273\n87236\n19349\n54475\n93041\n49347\n53960\n14535\n56130\n4338\n75495\n86201\n93821\n28855\n16390\n67925\n38828\n70844\n42629\n3928\n79700\n73249\n60903\n91579\n23571\n70199\n19266\n1674\n90949\n24859\n36256\n39365\n80178\n48154\n95339\n1874\n27819\n30510\n42328\n87768\n57890\n51046\n26095\n39834\n20638\n48585\n88188\n19377\n78109\n83797\n94981\n84392\n66156\n21040\n85841\n84047\n38193\n45065\n69705\n33544\n37242\n99330\n32988\n1913\n68642\n23462\n45626\n60286\n54915\n65478\n93824\n89798\n30104\n29586\n52480\n90673\n38292",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "85\n10375\n74646\n19634\n9742\n67820\n45689\n61835\n94832\n13030\n49832\n89967\n29006\n73853\n4639\n13321\n54372\n54110\n15238\n47179\n57991\n88663\n87740\n54273\n15113\n93494\n47207\n32008\n2302\n49812\n10334\n97416\n502\n28894\n68553\n60576\n83015\n16986\n5866\n35886\n12826\n68951\n50958\n42124\n85585\n48463\n17110\n39520\n18599\n83371\n96485\n67718\n88899\n86143\n60912\n75441\n82597\n72987\n14561\n54501\n41964\n68431\n261\n58939\n41810\n68143\n69904\n6509\n3697\n34015\n57188\n82725\n11996\n10074\n49593\n52792\n42240\n37490\n65573\n57755\n68071\n79968\n36299\n14056\n22492\n80106",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "98\n74497\n3345\n29459\n72247\n82758\n5417\n7804\n39299\n41822\n24853\n20810\n24517\n61004\n99641\n92267\n64867\n83779\n79796\n27014\n17040\n50905\n62144\n60177\n99079\n16839\n45123\n17121\n26645\n66620\n58077\n53101\n73406\n85282\n85109\n56627\n50447\n51437\n9328\n45489\n28561\n36010\n95937\n19305\n75604\n70809\n85631\n16919\n15675\n49372\n50107\n36416\n60447\n31587\n68659\n38979\n76462\n48997\n84069\n17528\n90695\n60448\n97232\n12410\n33167\n74410\n2450\n44057\n37117\n56394\n31800\n65821\n85308\n98515\n31264\n48135\n75121\n94162\n49687\n72056\n41072\n58159\n61362\n81459\n11109\n78078\n59815\n44262\n66714\n98278\n52757\n33950\n5468\n39901\n29319\n1657\n36810\n58047\n76021",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "108\n50150653\n56819815\n12835507\n81492799\n29980427\n61222348\n52603441\n12602852\n67051991\n13992094\n97497046\n39628134\n5025264\n51788376\n40764728\n5419009\n62906536\n54288415\n13107558\n5948312\n83370886\n63135716\n32040576\n19773049\n78666734\n84777321\n48144274\n46932863\n76529139\n26868170\n30288047\n59000724\n24529783\n48949793\n56118302\n39397724\n47597424\n6356653\n57180775\n3250798\n83905228\n28822708\n11996782\n64550371\n97923417\n18881188\n266243\n94519379\n5028802\n85856068\n42456743\n37303\n31705368\n66742148\n70199826\n34843697\n8933187\n66113708\n50080372\n45791551\n62241747\n21131246\n81669550\n28990159\n57421339\n31523474\n20087614\n32026434\n95199515\n91726678\n24778033\n49225373\n31551360\n95594873\n83276628\n55942463\n9340714\n64780032\n37880829\n78378808\n73026819\n19150776\n41977298\n62047265\n5229425\n88709542\n62379258\n66101824\n78768702\n7342328\n88671238\n85409245\n52386773\n7142341\n32853466\n54302456\n83493924\n28644249\n77798842\n49493051\n71892809\n63153508\n57271018\n24671887\n7307874\n84812981\n6524800\n14534420",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 108)"
    },
    {
      "input": "108\n72803432\n63664455\n99578320\n27936241\n86652556\n14920474\n60801867\n72466273\n21814937\n32172238\n60031350\n22934558\n76954725\n22572883\n78018235\n68664273\n29847721\n31455566\n96370439\n32070166\n9952303\n88101742\n84313899\n91762205\n19747136\n27424482\n1868790\n54023205\n19961420\n97565428\n13055656\n95653328\n11634973\n14777980\n69887393\n39507274\n35215915\n13787739\n64828670\n58638166\n52158547\n44195214\n88260321\n62294513\n87702574\n18130195\n37007684\n28090050\n15966619\n67555385\n77145718\n22637199\n82665360\n81586443\n55078259\n77740853\n48994905\n63640885\n1650034\n82030320\n3027251\n93690431\n3300227\n27517908\n76872095\n31020061\n9222934\n80205503\n87077329\n96627927\n36902096\n79432029\n70436416\n43420929\n70564230\n96522703\n27627488\n11733067\n68482402\n73592281\n63152513\n70346986\n35258832\n9722283\n14205736\n13342502\n28430495\n31538101\n8560098\n50655802\n56435541\n89472789\n41873109\n86939667\n264486\n58243224\n8138621\n59175480\n33409039\n13569951\n92795419\n56941746\n48834297\n54921508\n14266829\n15073613\n58060295\n84526150",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 108)"
    },
    {
      "input": "2\n1\n64710742",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 2)"
    },
    {
      "input": "2\n100000000\n78204209",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 2)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:20",
  "total_test_cases": 20
}
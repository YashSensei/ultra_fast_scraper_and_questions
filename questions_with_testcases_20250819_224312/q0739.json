{
  "problem_code": "problems",
  "title": "MONO",
  "tags": [],
  "text": "Mirko soon realised that number sequences are not the best career choice, and went right back to letter table business.Mirko’s table has R rows and C columns and consists of lowercase letters. Each cell of the table is a square of equal size. We assign coordinates to vertices of those squares, so that upper-left corner of the table has coordinates (0, 0), upper-right (C, 0), lower-left (0, R), and lower-right (C, R).We say that polygon within the table is monoliteral if the following holds:its vertices are from the described set of cell-square vertices,its edges are parallel to coordinate axes,all letters inside the polygon are equal.A simple polygon for which first two conditions are true (third one may or may not be true) is given.Mirko would like to know the number of monoliteral polygons that can be obtained by moving the given one up, down, left, or right or any combination thereof, but not rotating.InputThe first line of input contains two space separated integers R and C (1 ≤ R, C ≤ 500).Each of the next R lines contains exactly C lowercase letters, this is Mirko’s table.The following line contains integer V (4 ≤ V ≤ 500), number of vertices of given polygon.Each of the next V lines contains two integers X, Y (0 ≤ X ≤ C, 0 ≤ Y ≤ R). These are the coordinatesof the vertices of the given polygon. Vertices are given in clockwise order.The given polygon will satisfy conditions 1 and 2 from above.OutputIn the first and only line of output, print expected number of polygons.ExamplesInput:3 3\r\naaa\r\naaa\r\naaa\r\n4\r\n2 0\r\n2 2\r\n0 2\r\n0 0Output:4Input:3 3\r\naaa\r\naba\r\naaa\r\n4\r\n2 0\r\n2 2\r\n0 2\r\n0 0Output:0Input:5 4\r\nxyyx\r\nxyyy\r\nxxyy\r\nxxxx\r\nxxxx\r\n8\r\n1 3\r\n1 2\r\n0 2\r\n0 0\r\n2 0\r\n2 1\r\n3 1\r\n3 3Output:2",
  "sample_input": "Input:3 3\r\naaa\r\naaa\r\naaa\r\n4\r\n2 0\r\n2 2\r\n0 2\r\n0 0Output:4",
  "sample_output": "Input:3 3\r\naaa\r\naba\r\naaa\r\n4\r\n2 0\r\n2 2\r\n0 2\r\n0 0Output:0",
  "link": "https://www.spoj.com/problems/MONO",
  "scraped_at": "2025-08-17 00:33:20",
  "test_cases": [
    {
      "input": "3 3\r\naaa\r\naaa\r\naaa\r\n4\r\n2 0\r\n2 2\r\n0 2\r\n0 0",
      "expected_output": "4",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3 3\r\naaa\r\naba\r\naaa\r\n4\r\n2 0\r\n2 2\r\n0 2\r\n0 0",
      "expected_output": "0",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "3 10\nrqhcwz\nnbmc\ntcvahk\n2\n8 4\n8 1\n10 6\n10 1",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "2 3\nnmu\nwcc\npzt\n8\n9 9\n3 2\n9 8\n4 10",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "2 2\ng\nr\nfcfyzv\n6\n7 7\n4 2\n7 8\n9 4",
      "expected_output": "To be computed",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "93 26\nn\nmckhnl\nsiv\n78\n97 100\n94 75\n81 98\n90 65",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "54 14\nidgcn\nxuicvl\nt\n37\n14 59\n21 83\n39 16\n1 35",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "7 49\nyy\nohvkk\ny\n77\n60 10\n47 27\n83 41\n69 45",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "29 79\nusajt\nn\nilv\n93\n32 7\n64 66\n65 13\n88 37",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "24 47\njsptdn\naazqw\nu\n2\n5 46\n64 30\n79 15\n8 5",
      "expected_output": "To be computed",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "220 325\nvefb\nm\nxtx\n158\n146 209\n58 438\n454 210\n485 62",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "447 406\nas\nqyrq\nu\n231\n149 388\n151 252\n457 226\n390 177",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "229 193\nd\nhxu\na\n125\n295 191\n275 444\n128 308\n306 227",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "126 69\nvg\nqbkz\ntzve\n371\n323 261\n92 292\n251 146\n239 369",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "374 339\nwombn\nazhico\njxj\n405\n321 190\n293 411\n284 166\n370 495",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "196 304\nmhg\naadqpi\notbtk\n165\n347 295\n447 389\n310 211\n404 70",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "112 294\ndwbplf\ndzj\nrmmz\n233\n79 496\n455 334\n498 192\n210 286",
      "expected_output": "To be computed",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\nc\nhedae\nc\n1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\nulfrov\nfszz\nu\n1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1\nxqnanh\niszwx\nk\n1000\n1000 1\n1 999\n999 999\n2 1000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:15",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Ada and Scarecrow",
  "tags": [],
  "text": "As you might already know, Ada the Ladybug is a farmer. She has multiple farmhouses and some fields which always connect two adjacent farmhouses. She plans to buy some scarecrows to scare crows!A scarecrow placed on a farmhouse scares all crows from all adjacent fields. A crow on a field can be disastrous, so Ada has to arrange the scarecrows in such way that they cover all the fields. As scarecrows are pretty expensive she wants to minimize the number of them. Can you count it for her?Note:Even thought it might look like that from description, the formed \"graph\" doesn't have to be planar! Also multi-fields and self-field are not allowed.InputThe first line contains an integer1 ≤ T ≤ 100Each of the nextTtest-cases begins with two integers0 ≤ M ≤ 150, 1 ≤ N ≤ 150, the number of farmhouses and the number of fields.Each of nextMlines contains two numbers0≤     Ai,Aj< N, the farmhouses, which are connected by a field.OutputFor each test-case output the minimal number of scarecrows Ada has to buy, to cover all fields.Example Input6\r\n3 3\r\n1 2\r\n1 0\r\n2 0\r\n4 3\r\n1 2\r\n1 3\r\n1 0\r\n5 6\r\n0 2\r\n0 3\r\n1 3\r\n1 2\r\n1 4\r\n2 4\r\n5 8\r\n0 1\r\n0 3\r\n0 4\r\n1 2\r\n1 4\r\n3 4\r\n3 2\r\n2 4\r\n4 2\r\n0 1\r\n2 3\r\n6 9\r\n0 4\r\n4 3\r\n1 2\r\n2 0\r\n2 3\r\n5 3\r\n4 1\r\n4 2\r\n5 0Example Output2\r\n1\r\n3\r\n3\r\n2\r\n3Example Input 22\r\n17 7\r\n12 9\r\n11 8\r\n9 16\r\n11 2\r\n5 14\r\n7 6\r\n8 14\r\n16 23\r\n10 13\r\n11 3\r\n7 14\r\n14 3\r\n9 11\r\n7 8\r\n0 9\r\n8 14\r\n10 8\r\n0 4\r\n6 15\r\n6 12\r\n2 5\r\n10 2\r\n7 11\r\n13 12\r\n15 13\r\n5 3\r\n15 0\r\n6 2\r\n12 9\r\n5 1\r\n1 4Example Output 24\r\n9",
  "sample_input": "6\r\n3 3\r\n1 2\r\n1 0\r\n2 0\r\n4 3\r\n1 2\r\n1 3\r\n1 0\r\n5 6\r\n0 2\r\n0 3\r\n1 3\r\n1 2\r\n1 4\r\n2 4\r\n5 8\r\n0 1\r\n0 3\r\n0 4\r\n1 2\r\n1 4\r\n3 4\r\n3 2\r\n2 4\r\n4 2\r\n0 1\r\n2 3\r\n6 9\r\n0 4\r\n4 3\r\n1 2\r\n2 0\r\n2 3\r\n5 3\r\n4 1\r\n4 2\r\n5 0",
  "sample_output": "2\r\n1\r\n3\r\n3\r\n2\r\n3",
  "link": "https://www.spoj.com/problems/ADACROW",
  "scraped_at": "2025-08-17 00:34:09",
  "test_cases": [
    {
      "input": "6\r\n3 3\r\n1 2\r\n1 0\r\n2 0\r\n4 3\r\n1 2\r\n1 3\r\n1 0\r\n5 6\r\n0 2\r\n0 3\r\n1 3\r\n1 2\r\n1 4\r\n2 4\r\n5 8\r\n0 1\r\n0 3\r\n0 4\r\n1 2\r\n1 4\r\n3 4\r\n3 2\r\n2 4\r\n4 2\r\n0 1\r\n2 3\r\n6 9\r\n0 4\r\n4 3\r\n1 2\r\n2 0\r\n2 3\r\n5 3\r\n4 1\r\n4 2\r\n5 0",
      "expected_output": "2\r\n1\r\n3\r\n3\r\n2\r\n3",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3\n6\n1\n4",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "4\n4\n2\n6\n1",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "4\n10\n2\n5\n2",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "6\n10193175\n10368007\n39326538\n85091635\n2002088\n54736236",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "16\n26092111\n51398216\n32495270\n97754469\n46212013\n33954998\n96551672\n19778312\n94730897\n33921094\n96722757\n44777087\n56129636\n97485640\n19681760\n79435717",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "9\n72224748\n9572526\n53230268\n41907955\n12987362\n70357075\n73659656\n81083716\n64075692",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "20\n38442003\n57741570\n6995613\n60530491\n39729559\n1928319\n76308018\n44224185\n25137311\n26598846\n89493073\n29829918\n51622541\n1464423\n10049538\n89834454\n58218454\n25615680\n91148865\n4161440",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "14\n66876957\n80593105\n74272800\n83497064\n87854158\n12807358\n22362660\n30115910\n54626973\n27561286\n73073863\n64820079\n728803\n13417643",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "48\n48441\n48657\n49458\n9225\n56763\n76193\n14453\n81419\n44315\n66875\n64465\n2802\n29204\n31721\n52622\n95891\n80790\n98747\n97950\n58822\n36155\n12840\n74179\n82364\n69434\n71591\n132\n43764\n27677\n24879\n39541\n575\n43802\n57594\n89402\n81293\n74600\n38053\n77548\n83487\n79491\n47849\n29124\n44245\n85387\n69240\n67750\n46235",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "24\n96164\n87302\n46653\n83770\n74389\n30082\n90376\n8344\n191\n74545\n43047\n73797\n57553\n5295\n74587\n64491\n51977\n56450\n4328\n23831\n94391\n26204\n91176\n90387",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "60\n26245\n62059\n65620\n92544\n64009\n16513\n42759\n83838\n87042\n83997\n50153\n27157\n13935\n88619\n97071\n6273\n78727\n91962\n29218\n22301\n73304\n31925\n11256\n86084\n44499\n36448\n74516\n57371\n18168\n61918\n90422\n2620\n69125\n37095\n66703\n93757\n55999\n25321\n60373\n56955\n28044\n41669\n7529\n30092\n14574\n18707\n21639\n71843\n68266\n48307\n51444\n67074\n47048\n7319\n19726\n11286\n24724\n99937\n89968\n21760",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "119\n2576\n74886\n99413\n35173\n1946\n31225\n25260\n13275\n39113\n97706\n57559\n23154\n75793\n5488\n58750\n60703\n73400\n55724\n5275\n14766\n54107\n38011\n41169\n87047\n73281\n57362\n64943\n43931\n35762\n39431\n61880\n47035\n29528\n20444\n70141\n9351\n23698\n82585\n35515\n52895\n87671\n33447\n74670\n98233\n99590\n72425\n73992\n63832\n50647\n51454\n8491\n48090\n96694\n44583\n97078\n85403\n12579\n40126\n65868\n21862\n52294\n26462\n47439\n93728\n99481\n38774\n71218\n31855\n28623\n54058\n85762\n27020\n10534\n54152\n88244\n47679\n10582\n19020\n36270\n74532\n42300\n62829\n34444\n56464\n96060\n57657\n59180\n28789\n5507\n34\n14526\n57235\n71723\n71219\n64901\n76821\n2148\n57258\n14545\n8441\n95020\n76354\n7209\n64812\n98398\n38540\n59437\n3803\n34316\n52793\n73632\n4088\n34490\n31441\n13592\n80063\n46140\n28407\n17880",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "23\n20359\n40737\n74232\n37893\n32495\n40027\n20305\n32025\n94237\n2814\n76298\n6909\n18596\n81374\n70388\n57327\n59479\n12967\n5870\n25186\n51576\n73149\n35870",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "43\n58130\n67340\n88110\n11108\n61535\n54257\n78290\n33268\n80168\n22922\n42427\n25351\n26286\n12790\n45943\n85345\n59567\n76107\n99500\n86827\n15297\n69389\n18859\n4461\n41967\n62643\n1052\n51089\n51690\n73349\n4274\n22420\n73380\n76495\n89479\n58757\n28852\n79239\n4598\n25456\n59944\n24000\n24181",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "42\n3074\n83154\n53696\n69944\n54674\n50231\n7596\n88762\n91816\n67565\n58490\n45126\n69713\n26511\n80696\n42726\n23517\n51455\n85570\n63583\n33458\n2568\n38986\n85519\n1781\n42548\n67152\n26961\n78252\n97467\n19962\n37041\n14592\n66197\n32053\n33021\n20086\n38706\n32852\n39623\n57101\n99045",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "150\n21757337\n87644979\n42757194\n61470472\n48189622\n35464992\n22454088\n33151447\n82315992\n58507975\n27634946\n13553274\n79945144\n16165562\n35881398\n50188246\n16771992\n59235888\n38634245\n57153696\n57479495\n21478503\n84931492\n88527754\n41239756\n50346754\n85121708\n54809841\n91524811\n41762163\n39100604\n57278458\n91198593\n68849110\n49115701\n64588548\n14981501\n65381211\n97237400\n19348095\n12396027\n99074066\n24916823\n16929547\n60861924\n55744887\n48015933\n43191199\n43855531\n70262350\n18308248\n94638726\n6513479\n19166501\n71325186\n68099101\n66496540\n7642442\n72731163\n20171485\n28962102\n94577687\n61188093\n87381315\n30505741\n81790004\n67310327\n33443417\n83563294\n79957123\n30795633\n24016004\n72999719\n52483252\n45195725\n43343525\n67230316\n64499906\n35926474\n19085469\n4712765\n79204976\n37832229\n16032892\n99905647\n94114715\n66121050\n92796530\n93980043\n31469930\n3973389\n47644334\n16802056\n93371028\n41393154\n11756296\n2057442\n6224490\n25309247\n49822704\n32561264\n3430565\n30076081\n8556320\n3021931\n90712736\n25257069\n97447046\n1247002\n32971152\n50352492\n77005782\n86294166\n56015948\n78879459\n91018841\n64414184\n77218035\n53424667\n82198281\n76387395\n46866990\n54271139\n58799255\n25847005\n40041079\n59673166\n83585496\n754206\n17169001\n24480576\n26420072\n18602547\n57658401\n79451516\n44848396\n91613532\n18056764\n62048072\n98219248\n44542658\n98326346\n25416479\n92253618\n66207594\n39351869\n36435679\n64427268\n98420623\n86886056",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 150)"
    },
    {
      "input": "150\n50301255\n78749806\n24547991\n85771734\n90770397\n92202705\n46931500\n56023521\n835471\n68941391\n90465396\n59586497\n44913499\n95151000\n17601688\n88723132\n78046017\n36986363\n35754183\n51532090\n19709944\n95042329\n27911281\n50319922\n46061566\n78680344\n12656067\n36424443\n97631483\n20208751\n71430987\n37982439\n50287163\n50116734\n32853428\n32338270\n71111145\n73968750\n48624423\n89312801\n63565525\n95279225\n56163907\n6111954\n58572021\n72662338\n58571373\n98706268\n64286085\n4869494\n28368124\n69526329\n3145507\n79514110\n11754165\n96061598\n63865243\n82134759\n12125363\n54445757\n24636521\n72712326\n54091982\n97349621\n9302548\n45512775\n38186889\n44222441\n8041366\n86488742\n57186809\n29702732\n664247\n52957928\n7930868\n62794218\n83212623\n18644790\n10113072\n2981308\n37802014\n81154549\n56925877\n45007041\n1599776\n20550353\n61195888\n59888524\n80696887\n60135478\n19916963\n16359025\n93709110\n98018910\n92386900\n38919560\n60870568\n1118290\n72952836\n56291257\n37859932\n30184246\n56808330\n8762366\n56003386\n17475529\n53685070\n73049370\n80644828\n78732712\n83469864\n92451568\n26988909\n55830381\n31889686\n10535298\n51119449\n41856026\n24682572\n51963221\n82116883\n71343137\n45144023\n34237239\n42364281\n26566675\n31385534\n62641184\n7327071\n77210560\n43399004\n65001858\n19507085\n97108758\n952585\n13859722\n90848215\n6991826\n83689757\n90237405\n77745974\n18335627\n13713669\n12216346\n20385913\n99339680\n78384109\n36934870\n54991211\n1795104",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 150)"
    },
    {
      "input": "2\n100000000\n1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 2)"
    },
    {
      "input": "2\n100000000\n1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 2)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:22",
  "total_test_cases": 20
}
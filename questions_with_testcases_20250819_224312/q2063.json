{
  "problem_code": "problems",
  "title": "Elegant Diamond",
  "tags": [],
  "text": "ProblemThe king has hired you to make him an elegant diamond. An elegant diamond is a two-dimensional object made out of digits that's symmetric about a horizontal and a vertical axis. For example, the following four shapes are elegant diamonds:2       8      3     7\r\n  3 3     8 8    2 2\r\n 4 1 4     8      3\r\n  3 3\r\n   2These three shapes are diamonds, but are not elegant:2       1        3\r\n 1 1     1 2      1 1\r\n  1     1 1 1    3 1 3\r\n         2 1      1 1\r\n          1        2These three shapes are not diamonds:1     2     8   8\r\n 1 1   222      0\r\n        2     00000The king will start by giving you a diamond, which may not be elegant. Your job is to make it elegant byenhancingit, adding digits on to make a bigger diamond. Because you don't want to spend too much money, you want to do it with as littlecostas possible.DefinitionsAdiamond of sizekis 2k-1 lines of digits, 0-9, separated by single spaces, organized in the following way:Line i (1 ≤ i ≤ k) contains k-i spaces, then i digits separated by single spaces.Line i (k < i < 2k) contains i-k spaces, then 2k-i digits separated by single spaces.Anelegant diamond of sizekis a diamond of size k with the following two symmetry properties:Horizontal symmetry: Let cibe the number of digits on line i. The jthdigit on line i (where j=1 for the first digit) must be the same as the ci+1-jthdigit.Vertical symmetry: The jthdigit on line i (where i=1 for the first line) must be the same as the jthdigit on line 2k-i.A diamond of size k can beenhancedby adding digits to it. The result of enhancing a diamond of size k has the following properties:The result is a diamond of size ≥ k.The original diamond is part of the result. In other words, there exist some X and some Y such that, for all values of i and j such that the jthcharacter of the ithline of the original is a digit (as opposed to a space), the j+Xthcharacter on the i+Ythline of the result is also a digit and it's the same as the jthcharacter on the ithline of the original.Thecostof enhancing a diamond is equal to the number of digits in the result of the enhancement, minus the number of digits in the original diamond.InputThe first line of the input gives the number of test cases,T.Ttest cases follow. Each test case consists of a single integerkin a line on its own, followed by a diamond of sizek.OutputFor each test case, output one line containing \"Case #x: y\", where x is the case number (starting from 1) and y is the minimum cost required to enhance the given diamond into an elegant diamond. If the diamond is already elegant, y=0.Limits1 ≤T≤ 100.1 ≤k≤ 51.SampleInput4\r\n1\r\n0\r\n2\r\n 1\r\n2 2\r\n 1\r\n2\r\n 1\r\n1 2\r\n 1\r\n3\r\n  1\r\n 6 3\r\n9 5 5\r\n 6 3\r\n  1OutputCase #1: 0\r\nCase #2: 0\r\nCase #3: 5\r\nCase #4: 7ExplanationThere are four cases. The first two cases start as elegant diamonds of size 1 and 2, respectively, and don't need to be enhanced; so the cost is 0. The third case can be enhanced to look like:3\r\n 1 1\r\n1 2 1\r\n 1 1\r\n  3There are several possible enhancements, but this is one with the lowest possible cost, which is 5.  n the fourth case we can enhance the diamond into the following elegant diamond for a cost of 7:9\r\n  1 1\r\n 6 3 6\r\n9 5 5 9\r\n 6 3 6\r\n  1 1\r\n   9",
  "sample_input": "2       8      3     7\r\n  3 3     8 8    2 2\r\n 4 1 4     8      3\r\n  3 3\r\n   2",
  "sample_output": "2       1        3\r\n 1 1     1 2      1 1\r\n  1     1 1 1    3 1 3\r\n         2 1      1 1\r\n          1        2",
  "link": "https://www.spoj.com/problems/GCJ102A",
  "scraped_at": "2025-08-17 00:33:47",
  "test_cases": [
    {
      "input": "2       8      3     7\r\n  3 3     8 8    2 2\r\n 4 1 4     8      3\r\n  3 3\r\n   2",
      "expected_output": "2       1        3\r\n 1 1     1 2      1 1\r\n  1     1 1 1    3 1 3\r\n         2 1      1 1\r\n          1        2",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3 5 6 6\n5 6 9 10 2 8\n7 10 2 6 6\n3 9\n3",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "1 2 2 6\n3 1 3 8 1 2\n4 3 10 9 4\n8 1\n4",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "6 4 3 7\n1 1 7 10 1 8\n7 9 5 5 9\n10 8\n7",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "48 36 31 65\n52 14 16 39 25 37\n91 13 14 79 81\n20 90\n19",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "98 22 77 10\n43 27 78 54 58 20\n84 2 6 88 73\n38 93\n5",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "2 43 51 1\n72 15 17 61 27 27\n20 64 19 79 96\n6 92\n62",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "48 67 79 25\n92 64 31 18 86 20\n58 32 79 20 96\n63 26\n85",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "66 40 29 24\n63 16 96 30 19 75\n77 18 29 19 9\n2 13\n68",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "347 53 157 67\n438 319 366 109 345 79\n495 222 222 175 57\n187 301\n262",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "272 436 283 350\n202 489 224 82 125 278\n235 320 232 289 268\n432 373\n175",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "495 175 282 419\n303 207 488 491 211 486\n116 285 270 478 178\n374 272\n472",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "71 355 80 316\n205 151 313 233 378 411\n441 277 447 120 312\n87 341\n316",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "411 484 335 387\n147 208 396 456 144 332\n141 190 230 94 180\n109 339\n471",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "463 63 402 186\n116 258 61 480 386 453\n220 160 397 470 400\n351 67\n119",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "374 234 89 360\n120 101 59 454 108 119\n95 155 211 259 380\n458 81\n363",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000\n1000 1000\n1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000\n1000 1000\n1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 2 1 2\n1000 999 999 1000 999 999\n2 1 1 1 1000\n1000 1\n2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 2 1000 999\n1 1 1 2 1 2\n1000 1000 2 1 1\n1 1\n2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:19",
  "total_test_cases": 20
}
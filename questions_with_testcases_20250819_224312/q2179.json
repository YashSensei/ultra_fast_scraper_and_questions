{
  "problem_code": "problems",
  "title": "The Rook and The Rookette",
  "tags": [],
  "text": "Once upon a time, there was a noble rook called Danny who lived in a normal 8x8 chessboard. All squares lived in peace and Danny was a joyful rook, moving either vertically or horizontally across the board, never going off limits. Oh boy did he enjoy moving! He spent all days visiting the 64 squares and bringing flowers and other gifts to them. All squares loved Danny very much, even though they felt sorry for him because there was no Rookette for him to date.The King took notice of the squares’ gossiping and he did something very remarkable. He arranged Danny a date with María, a Rookette from another chessboard. So, María stepped in one of the squares and Danny went immediately after her. However, the King made sure it wasn’t easy for Danny. He told him:“Danny, I love you very much. We all do. What I am doing right now is because I love you.”Danny was perplexed, without a clue. “What do you mean, Oh righteous King?”Suddenly, the King arranged M bombs in M squares. “In life, you must work hard to achieve your dreams. I cannot just hand María over to you. You need to earn your right to date her.”“Oookkkk…” said Danny, in a doubtful tone.“I may also step in one of the squares. Go after her!”And off went Danny. Assume Danny is very desperate to meet her, so he will try to get to her in the shortest possible way. The King  wants to prolong Danny’s path (maybe to have him think thoroughly about becoming a man). The King needs to decide where he will step in, he has N empty squares to choose from.Write a program that outputs the length of the path should both Danny and the King act optimally. There will always be a path.InputThere is a single test case per input file. The first 8 lines contain 8 characters each, and they represent the initial state of the chessboard. The lines are enumerated from 0 to 7 and so are the 8 characters of each line. The character at position (i, j)  can be one of the following:‘.’ : an empty square.‘#’ : a bomb.‘?’ : the princess.'$' : Danny.The following line contains N (0 <= N <= 10), representing the number of empty squares the King has to choose from. Then follow N lines. Each of these lines contain two integers Xi, Yi (0 <= Xi, Yi <= 7), the position of an empty square.OutputWrite a single line containing the length of the path Danny takes to reach María, if both Danny and the King act optimally.SampleInput$......?\r\n########\r\n########\r\n########\r\n########\r\n########\r\n########\r\n#######.\r\n1\r\n7 7Output7",
  "sample_input": "Input$......?\r\n########\r\n########\r\n########\r\n########\r\n########\r\n########\r\n#######.\r\n1\r\n7 7Output7",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/PUCMM335",
  "scraped_at": "2025-08-17 00:34:02",
  "test_cases": [
    {
      "input": "Input$......?\r\n########\r\n########\r\n########\r\n########\r\n########\r\n########\r\n#######.\r\n1\r\n7 7Output7",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "mqv\numpzhopftjdvshz\nyusipdvhto\nxtgrofnseszqikx\nyhwrdh\newhbps\ng\nfiwcpi\n1\n4 3 2\n1 chctlp",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "tjvx\nnjlgnjm\nmvxreycm\nioqvkrconrpy\nqehxpw\nbs\ncobba\npvsjysqquyzhbz\n6\n5 2 4\n7 bteyw",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "mnc\npfugooczpx\na\nxt\njgbls\njjqfcvmvmgdfvdix\nvziyrucvydzbwfq\nuqakbynvzjxfkcnm\n10\n8 5 7\n7 rr",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "ehsjekejpcvxbbej\nle\ni\nu\nhdfuurqlv\nmprpihehq\nweqiiwzscppgdseg\nwkvnihuhby\n76\n82 2 38\n76 pbhm",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "eqp\nrkpxfgurpwb\nknd\nnrjp\nwek\ngukzseio\nxecfuxykobd\neivlgei\n15\n11 83 65\n19 cg",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "w\nqzmrlbyd\nqpiz\nvdx\ncrla\nyleditaeby\nonbhcqs\nbwbdwqzofinvw\n17\n88 69 83\n83 as",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "nqzzwmn\nsy\njykh\nnwqyifckd\nvljnkwrmpimbellp\nfqbjncxgrl\nthvubbbnyoz\ntewymdlqhe\n72\n58 17 91\n24 jfvv",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "xwegbkfbvgkbdg\nicqjlfsiyvxwak\ndtkgx\ncnikm\nxzccoq\njyxnsshyxmpxsbd\nczusocpe\nyhtnavbjticnpxx\n30\n21 26 100\n9 mdml",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "rb\nmkpwqivthkwcij\nifrfmrlpqjtkc\nxeumnntggykapo\nqzu\nfmpqf\no\nbkb\n352\n79 268 297\n62 c",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "phxwh\nfatqvqlryd\nqhztp\nlaytvkld\nrwso\nwximbc\nrwjsy\nbrpcm\n417\n300 141 473\n484 sp",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "ofwlufvmonzhxvgxf\ntxbr\nzklxsizbykv\nxvpzfonnowppv\nopbwlunqaguugoh\nkjgghuhzvxw\nul\nxfqblvlrz\n299\n334 325 200\n255 llkipzi",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "mzmulzjmapr\nslzemorfllbrk\nyjjmimgejggrdgx\ny\nrxmtrqdrxmfp\nayhqyuaizopaeai\nufnleetqshugnl\njmbharl\n115\n220 381 453\n367 nspcfjg",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "fqdwrgqkqbvu\nahnczwyysv\njdwwchzkbbypecyo\nhrjwrivcpnok\nwc\nmongzgig\nsqbmaygeeokh\npjivnsbueqivvfx\n101\n195 474 310\n197 phneuqtd",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "uhbxpsfgosvxonb\njfjs\nmkchqdtolnjtnaxe\nc\ndgzidp\nhrjkceuvhi\ndyke\nzh\n367\n497 183 58\n324 dssbsax",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "whdzyqpd\nnjlsvqpkrlvixda\nbkm\nhoejdldfl\nusslkzumsubjks\npovmcyg\notnvj\nueibcdamyj\n179\n208 191 100\n300 g",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "oaqdoalrtvbowy\nhpwdxyjq\nfisyjvhvt\nihsn\nmrgabmaca\npfajfy\nrmeqmxeq\nmemwoodcbzkpkv\n1000\n1000 1000 1000\n1000 wjxqnbr",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "jdyoti\nesfbcidcg\nxnjstwqjcyoj\nzqn\nchwpzqj\nnfdjrblkbsndi\na\nhdsykmuvmfw\n1000\n1000 1000 1000\n1000 betns",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "cjuyvv\nxucjcp\nnfuu\nvapxpcms\nunpgjmlnwbuknr\nsbfdodgvajxdy\nkrzafwpdumxhsd\nwqjcfbgpy\n1000\n1000 1000 1\n1000 bsqnlp",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "tnenrwb\niq\nqxknwwklldzmdywe\nxwweijo\nieuhzsgf\npjofxre\nhasnyqs\nt\n999\n1 1000 1\n999 em",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:19",
  "total_test_cases": 20
}
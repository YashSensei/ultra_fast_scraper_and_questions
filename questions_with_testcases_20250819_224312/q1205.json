{
  "problem_code": "problems",
  "title": "True Friends",
  "tags": [],
  "text": "You are given a string array representing Known people. Known[i][j] = 'Y' if i knows j.Friends:A is a friend of B if B knows A or B has a friend who knows A.True friends:A and B are true friends if A is a friend of B and B is a friend of A.Group:Everyone in a Group must be true friends to each other.Your task is to find the number of Groups from the given list of Known people. It can be proved that there is exactly only one possible way for forming the groups.InputThe first line consists of an integer t, the number of test cases. For each test case, you are given an array of strings representing Known people. Known is of size N×N where N is the total number of people.OutputFor each test case, print the number of groups.Constraints1 ≤ t ≤ 10001 ≤ N ≤ 100Known[i][j] is either 'Y' or 'N'Known[i][i] = 'N' (Nobody knows themselves)ExampleInput:3\r\n3\r\nNYN\r\nNNY\r\nYNN\r\n7\r\nNNYNNNN\r\nNNNYYYN\r\nNNNNNNN\r\nYNNNNNN\r\nNNNYNNN\r\nNNNNNNN\r\nNNNNNYN\r\n7\r\nNNNNYYN\r\nNNNNNNN\r\nNNNNNYN\r\nNYNNNYY\r\nNNNYNNN\r\nNNYNNNY\r\nNNNNYNNOutput:1\r\n7\r\n3ExplanationCase 1:All the friends are true friends to each other.Case 2:No two true friends exist.Case 3:There are 3 groups of true friends. {0}, {1}, {2, 3, 4, 5, 6}",
  "sample_input": "Input:3\r\n3\r\nNYN\r\nNNY\r\nYNN\r\n7\r\nNNYNNNN\r\nNNNYYYN\r\nNNNNNNN\r\nYNNNNNN\r\nNNNYNNN\r\nNNNNNNN\r\nNNNNNYN\r\n7\r\nNNNNYYN\r\nNNNNNNN\r\nNNNNNYN\r\nNYNNNYY\r\nNNNYNNN\r\nNNYNNNY\r\nNNNNYNNOutput:1\r\n7\r\n3",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/TFRIENDS",
  "scraped_at": "2025-08-17 00:33:32",
  "test_cases": [
    {
      "input": "3\r\n3\r\nNYN\r\nNNY\r\nYNN\r\n7\r\nNNYNNNN\r\nNNNYYYN\r\nNNNNNNN\r\nYNNNNNN\r\nNNNYNNN\r\nNNNNNNN\r\nNNNNNYN\r\n7\r\nNNNNYYN\r\nNNNNNNN\r\nNNNNNYN\r\nNYNNNYY\r\nNNNYNNN\r\nNNYNNNY\r\nNNNNYNN",
      "expected_output": "1\r\n7\r\n3",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3\n4\n9\n2",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n6",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "4\n8\n5\n8\n6",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "17\n7005927\n80905176\n12979958\n45318190\n90408012\n2099695\n44994861\n80084750\n25760182\n90104023\n79470042\n84828439\n15421333\n8300960\n87992432\n56017599\n26674639",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "18\n8209789\n12151100\n49008125\n71696999\n52959192\n99595887\n96585950\n58091573\n95109615\n90762691\n63514539\n89257677\n79764566\n61876554\n78513723\n67463157\n63283140\n64508647",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "7\n60998759\n58600298\n53189510\n68333357\n11373690\n23115882\n49804899",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "5\n47032936\n65990563\n9074932\n98507143\n28662999",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "12\n24999734\n39098974\n58335537\n12348290\n54361618\n97425334\n21564338\n72231858\n917057\n22669475\n72950739\n33770247",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "46\n80308\n6650\n30680\n70794\n41726\n86145\n98538\n63826\n80886\n39021\n45270\n30369\n70293\n30648\n37088\n47934\n68720\n94052\n28569\n38448\n89062\n70109\n38900\n32131\n96299\n35838\n39848\n56779\n91915\n14066\n73931\n76962\n73315\n80992\n67817\n54782\n81755\n55509\n40316\n89820\n18679\n68670\n47135\n17961\n88126\n76203",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "83\n99383\n8636\n61254\n4435\n45578\n16238\n25209\n61424\n63883\n91532\n31291\n74068\n35829\n48996\n81065\n18954\n37982\n53299\n32308\n66867\n11205\n57162\n46558\n36397\n17590\n61749\n53722\n10323\n43846\n93611\n64450\n46104\n87202\n50473\n3725\n58854\n29980\n31930\n62226\n6065\n80752\n55718\n56669\n2667\n28369\n62706\n32792\n20933\n8586\n3578\n43398\n77420\n72717\n48609\n56051\n99740\n53074\n46131\n89640\n74209\n36400\n25354\n72793\n6975\n71191\n7530\n21048\n9849\n14497\n76201\n49992\n89559\n15310\n72919\n93738\n96771\n16093\n49678\n69422\n14914\n7013\n52448\n31264",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "76\n76420\n15972\n9801\n1705\n42957\n25826\n27830\n78417\n29482\n96528\n64992\n27262\n99034\n60636\n17641\n50144\n69805\n90502\n43672\n93658\n6055\n30991\n58087\n22778\n49419\n78454\n23510\n71809\n95134\n24134\n29272\n53543\n8004\n3818\n5001\n58382\n75395\n6827\n78122\n12656\n11830\n28255\n83810\n9917\n43931\n76479\n68212\n2057\n96442\n74068\n57210\n94216\n64149\n7752\n31296\n76294\n43952\n73451\n88605\n4746\n28249\n8636\n44819\n69551\n31324\n66260\n53760\n45958\n3707\n96728\n51168\n42574\n23514\n20170\n94041\n6622",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "33\n12861\n42532\n44332\n69738\n31822\n98420\n40893\n21334\n47831\n97087\n56494\n31582\n35453\n69315\n82119\n80394\n28478\n68063\n14611\n62721\n57008\n96620\n66972\n54906\n5886\n40808\n99949\n97225\n76402\n82894\n41318\n74501\n11095",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "66\n23604\n35960\n29636\n11754\n92164\n94541\n73929\n61740\n12441\n41368\n52121\n98520\n87078\n99133\n18812\n63828\n37827\n61886\n80198\n72406\n85612\n88131\n48155\n77035\n60281\n62698\n59096\n57008\n17564\n55586\n58279\n6624\n95346\n55055\n81678\n51687\n86233\n31068\n64094\n4799\n23290\n43522\n66737\n58969\n82602\n81638\n14185\n51838\n18488\n42695\n700\n2692\n53286\n27484\n7036\n83472\n21471\n12367\n69567\n23296\n43337\n67591\n3522\n38254\n39758\n68762",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "82\n55891\n63229\n53081\n72358\n52118\n20576\n94122\n5158\n85874\n42137\n5907\n32188\n18354\n23973\n90557\n69750\n19286\n81534\n22432\n35511\n66753\n74653\n9374\n23825\n90639\n19514\n78915\n53186\n20642\n41609\n64117\n37905\n58649\n84124\n60203\n37479\n40883\n38247\n74266\n34549\n56761\n21584\n37825\n5455\n59596\n40522\n88250\n36651\n49477\n47470\n39630\n78064\n7965\n50463\n35770\n4107\n88764\n51063\n21237\n20647\n28180\n47810\n42457\n98286\n65992\n98\n96264\n34862\n18198\n39055\n83018\n98144\n56142\n84198\n72610\n48806\n72964\n77554\n64445\n80474\n57396\n51224",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "54\n42363\n94942\n38440\n22184\n53756\n35471\n66797\n25715\n62546\n40942\n41777\n95408\n57000\n39609\n58859\n40850\n52765\n38187\n38928\n39392\n86246\n4961\n86406\n91598\n49253\n10776\n76027\n40266\n57462\n81773\n45111\n19132\n5403\n84224\n62530\n69889\n80160\n73132\n21098\n94364\n25942\n86759\n38832\n16174\n12135\n54211\n14818\n48778\n69311\n81438\n6137\n18168\n40533\n20387",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "100\n49593021\n66861568\n33122451\n34307351\n5449610\n15207899\n65050400\n32319679\n88407940\n22058793\n28505049\n62357276\n89608904\n18823957\n97044361\n45225662\n45885775\n58316216\n90355837\n48031106\n71935421\n99151993\n86695441\n26471386\n61700775\n66192588\n28240012\n16961422\n93516468\n81438656\n46189004\n55508564\n39089724\n7116719\n26284370\n7870422\n30655375\n3956244\n44188177\n15691491\n92631704\n82113422\n1458967\n52115601\n93537856\n92646504\n11001683\n79896389\n72462145\n67803594\n93059420\n45813781\n73778854\n91482892\n65016476\n65566245\n67273741\n82102605\n95387820\n30293783\n81152959\n89270046\n41652754\n38107736\n63917738\n22135411\n28694812\n95490836\n13097639\n51956162\n24780370\n25471797\n33798330\n66907600\n15845548\n88713367\n14158788\n24712145\n52636573\n60836671\n4825072\n65226901\n10489128\n83023245\n12632620\n61309743\n96317277\n93926562\n4418129\n46332467\n76565767\n5673981\n87890235\n26737352\n40439645\n70476964\n73839911\n30151338\n94706440\n11583584",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "100\n35550872\n4282958\n80632877\n55000008\n32813301\n21530615\n72340407\n95088588\n58958022\n68888790\n18921052\n23284335\n80201762\n63489979\n89780654\n63026788\n51739717\n98809188\n54696688\n20443466\n64422275\n91726901\n37091277\n15921799\n17484622\n84164632\n29856512\n67235362\n89264488\n4365032\n27917447\n92595666\n91690575\n13167213\n96880920\n93936400\n65106697\n35409686\n24605261\n63186862\n892955\n98572149\n2797157\n83673247\n84767447\n18739056\n40299114\n34252748\n88746001\n56465807\n63747934\n12484239\n80720658\n2361190\n73467778\n9479588\n95085808\n7838512\n44540424\n36722780\n80124429\n60093173\n91442056\n81137647\n97125376\n94719887\n99305791\n54537118\n26813868\n825061\n49081735\n90765183\n34874936\n7548242\n84519620\n61273338\n9208812\n22856870\n22537861\n25493909\n28728124\n3156920\n77757188\n37221791\n89006222\n14995109\n78590716\n36146386\n61073785\n86943922\n73159574\n40474596\n27381449\n67597017\n92979593\n66612420\n72615240\n13542947\n47800725\n66092576",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "100\n14231200\n31560508\n1\n1\n80329784\n100000000\n95124879\n1\n100000000\n100000000\n58789370\n100000000\n100000000\n1\n100000000\n1\n99588215\n1\n1\n100000000\n37128186\n1\n1\n1\n100000000\n100000000\n72925633\n88779664\n1\n100000000\n1\n89605400\n91629208\n41612714\n100000000\n1\n88529914\n100000000\n100000000\n100000000\n100000000\n69785332\n1\n76544088\n100000000\n100000000\n100000000\n47643141\n1\n100000000\n100000000\n44261036\n100000000\n100000000\n46608847\n1\n1\n100000000\n100000000\n1\n100000000\n100000000\n1\n100000000\n88542279\n100000000\n100000000\n1\n1\n12441687\n1\n100000000\n1\n4084229\n100000000\n100000000\n1\n1\n1\n40223985\n100000000\n100000000\n100000000\n1\n100000000\n100000000\n100000000\n100000000\n100000000\n95650792\n99683891\n100000000\n80325848\n1\n71721185\n100000000\n100000000\n100000000\n1\n93687941",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 100)"
    },
    {
      "input": "100\n90722750\n100000000\n1\n96632704\n6375410\n1\n1\n100000000\n100000000\n100000000\n1\n1\n1\n1\n1\n83590023\n100000000\n73888677\n100000000\n100000000\n100000000\n1\n1\n87822932\n100000000\n62282322\n1\n100000000\n1\n1\n82209658\n1\n100000000\n11283440\n65918542\n43370472\n14567195\n25327179\n1\n1\n100000000\n72850385\n52009418\n100000000\n70986555\n1\n1\n100000000\n57503176\n100000000\n100000000\n26485231\n1\n67954432\n12407288\n1\n35129182\n38834597\n1\n100000000\n1\n18107148\n1\n91255837\n64092164\n100000000\n64425081\n59361530\n100000000\n1\n100000000\n42340401\n14079967\n100000000\n1\n37550951\n1\n100000000\n1\n100000000\n1\n100000000\n100000000\n100000000\n1\n1\n1\n48794982\n56917428\n100000000\n100000000\n52855028\n100000000\n100000000\n1\n1\n1\n1\n1\n12965508",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 100)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:16",
  "total_test_cases": 20
}
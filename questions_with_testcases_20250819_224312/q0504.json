{
  "problem_code": "problems",
  "title": "Disputes",
  "tags": [],
  "text": "Disputes between two warring parties over possession of properties are often settled amicably with the intervention of a third party. You are required to write a program on behalf of a consultancy firm that settles disputes amicably over possession of properties between two warring parties.The dispute between two warring parties A and B, is over a set of n profit making industrial units (PMIU) that currently make profits P1, P2 ... Pn . Assume that n is an even number less than 20. Each profit is a distinct integer representing rounded profit in crores of rupees. A profit identifies a PMIU and determines its valuation. For a subset of PMIU, the product of all profits from PMIU in the subset determines the total valuation of the subset. The two warring parties have agreed to accept a solution that divides the set of n PMIU into two disjoint subsets satisfying the following conditions:The total number of PMIU in each subset is n/2 .The total valuation of each subset is the same.The subset with higher total sum of profits is allocated to A.Write a program that determines the subset of PMIU to be allocated to A, assuming that there exists a unique solution to the problem.As a simple example consider 6 PMIU with profits 2, 4, 5, 12, 15 and 18. The subset of PMIU allocated to A is {2, 12, 15}.InputThe input may contain multiple test cases.For each test case there is a single input line. The line gives a set of distinct integers representing profits of PMIU.The input terminates with a line containing 0 as input.OutputFor each test case there is only one output line. The line prints the subset of PMIU allocated to A in ascending order of profits.ExampleSample Input8 12 10 15\r\n2 4 5 12 15 18\r\n0Sample Output8 15\r\n2 12 15",
  "sample_input": "Sample Input8 12 10 15\r\n2 4 5 12 15 18\r\n0Sample Output8 15\r\n2 12 15",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/DISPUTES",
  "scraped_at": "2025-08-17 00:33:08",
  "test_cases": [
    {
      "input": "Sample Input8 12 10 15\r\n2 4 5 12 15 18\r\n0Sample Output8 15\r\n2 12 15",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2 3 2 5\nabighc fa 2 6 3\n8 9 4 6 10 5\n9 6 2\nn lavero 6\n1 1 1",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "2 1 3 3\nomo yc 5 7 1\n5 10 3 4 2 6\n1 3 6\nxk ihjy 4\n3 1 4",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "4 3 3 2\npacuh jb 3 9 10\n5 8 3 10 4 2\n6 3 4\ne pp 5\n10 7 1",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "80 2 23 82\nnkwd s 60 17 44\n9 3 77 23 58 47\n75 32 80\noykh uv 10\n18 57 32",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "49 52 30 52\nnjz yp 31 4 18\n51 95 47 22 47 75\n48 88 17\njd dbjs 99\n57 88 91",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "98 25 76 45\nfrvx lb 61 81 94\n69 1 69 35 24 40\n61 1 87\non zitc 82\n22 87 30",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "6 59 85 33\ni wzjl 98 62 62\n37 39 29 73 35 98\n58 4 78\nopwklrp ca 35\n87 87 40",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "62 10 60 15\nvtp nhjn 80 72 64\n14 51 93 68 20 24\n24 38 41\ndormoh u 98\n53 99 75",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "316 350 109 107\nrgbjob f 470 442 219\n297 429 341 228 178 365\n136 214 499\nqoz y 406\n407 264 424",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "275 484 457 178\nrry hm 335 221 260\n169 421 393 232 354 161\n303 211 341\nzlxd nwnbmvm 147\n443 419 417",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "185 237 251 323\nt wyrge 243 420 294\n493 303 179 200 258 430\n496 456 500\ntcbhi uia 106\n312 389 123",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "369 104 485 106\neyesg rbvvyx 484 181 416\n475 396 294 216 376 74\n476 180 194\nqtscn dzbny 64\n469 59 356",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "210 148 243 420\nfhqskv b 124 397 394\n345 344 71 336 412 484\n327 223 477\najjydy s 244\n96 206 218",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "270 483 218 291\nlvoud u 438 398 288\n416 484 439 166 281 66\n419 64 170\netfli gij 161\n298 456 446",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "337 260 122 159\no wofw 87 56 419\n65 294 248 227 302 75\n288 269 52\nljgr oxt 431\n126 50 383",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000\ntklii hz 1000 1000 1000\n1000 1000 1000 1000 1000 1000\n1000 1000 1000\nod vjjuum 1000\n1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000\nmbmv l 1000 1000 1000\n1000 1000 1000 1000 1000 1000\n1000 1000 1000\nomqiuas tw 1000\n1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 999 2 999\ni vagzz 999 999 999\n999 2 2 2 1 1\n2 1000 2\npsh fdb 1000\n999 2 999",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 999 1 999\nxmj qfuneo 1000 2 1000\n1 2 1 999 2 2\n999 1000 1000\nzf r 1000\n999 2 1000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:14",
  "total_test_cases": 20
}
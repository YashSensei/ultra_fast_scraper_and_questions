{
  "problem_code": "problems",
  "title": "Indomie",
  "tags": [],
  "text": "During recession, Amjad needs to queue for SembakoPlus. Sembako, as we all know, stands for “Sembilan Bahan Pokok” which consists of 9 kinds of item: Rice, Sugar, Cooking-oil, Meat, Egg, Milk, Corn, Kerosene and Iodized Salt. SembakoPlus consists of Sembako and one more item: Indomie! Amjad’s favorite of all time!! (therefore, no wonder why he could stand for this long queue).Each person in the queue is allowed to pick only one item. No need to ask, Amjad wants only Indomie. Unfortunately, they are running out of SembakoPlus stock and currently there are three kinds of item left: Rice, Sugar and Indomie. As he could see from afar, he is quite sure that Rice and Sugar will be enough for everybody.Given the number of remaining Indomie and the number of people queuing in front of Amjad, your task is to count the probability that he will get his Indomie. Amjad can’t do programming right now as he is very nervous so he can’t think logically. He needs your help!InputThere will be multiple test cases for this problem. Each test case contains two integers N (1 ≤ N ≤ 50) and S (0 ≤ S ≤ 50), where N is the number of people queuing in front of Amjad and S is the remaining number of Indomie.OutputFor each case, print in a single line the probability in percentage that he will get his Indomie with 5 digits precision (he’s being paranoid)ExampleInput:2 1\r\n3 2\r\n4 0\r\n4 1\r\n10 10\r\n14 9\r\n30 14Output:50.00000\r\n76.92308\r\n0.00000\r\n33.33333\r\n99.99831\r\n98.65515\r\n95.16071Explanation for 1st sample test case:There are two peoples queuing in front of Amjad, so those two peoples could pick of thefollowing combination {1st people, 2nd people}:1. Rice, Rice2. Rice, Sugar3. Rice, Indomie4. Sugar, Rice5. Sugar, Sugar6. Sugar, Indomie7. Indomie, Rice8. Indomie, SugarSince there is only one Indomie left, there are only 4 out of 8 combinations that ensure Amjad to get his Indomie (1, 2, 4 and 5), hence the probability is 4/8 = 50%.",
  "sample_input": "Input:2 1\r\n3 2\r\n4 0\r\n4 1\r\n10 10\r\n14 9\r\n30 14Output:50.00000\r\n76.92308\r\n0.00000\r\n33.33333\r\n99.99831\r\n98.65515\r\n95.16071",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/SCPC11G",
  "scraped_at": "2025-08-17 00:34:36",
  "test_cases": [
    {
      "input": "2 1\r\n3 2\r\n4 0\r\n4 1\r\n10 10\r\n14 9\r\n30 14",
      "expected_output": "50.00000\r\n76.92308\r\n0.00000\r\n33.33333\r\n99.99831\r\n98.65515\r\n95.16071",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4 9\n3 8\n6 3\n7 1\n9 5\n4 10\n8 10",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "10 1\n4 1\n9 6\n2 9\n3 1\n10 9\n7 6",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "4 2\n10 9\n3 9\n10 9\n10 4\n10 9\n3 7",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "38 27\n33 8\n18 27\n41 31\n50 1\n19 35\n25 5",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "46 3\n45 14\n1 22\n8 2\n23 22\n32 21\n15 32",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "4 42\n48 6\n16 22\n19 16\n32 1\n4 23\n32 32",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "33 34\n26 49\n33 17\n36 50\n20 45\n30 37\n49 49",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "2 39\n50 26\n24 44\n26 48\n9 48\n37 20\n3 18",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "15 8\n18 20\n4 18\n7 5\n17 20\n23 10\n2 24",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "16 17\n16 23\n11 7\n20 11\n20 7\n21 20\n25 23",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "18 18\n12 20\n15 8\n2 21\n17 19\n25 8\n9 5",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "23 14\n5 25\n2 15\n8 10\n18 23\n13 22\n22 16",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "4 6\n25 2\n20 7\n6 7\n18 25\n21 20\n5 15",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "15 15\n10 9\n11 4\n24 18\n8 2\n18 8\n13 17",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "7 2\n5 8\n15 9\n16 18\n13 23\n17 15\n17 22",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 49\n1 2\n49 50\n1 50\n49 49\n1 2\n50 49",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "49 1\n1 2\n50 1\n2 1\n2 49\n2 1\n50 50",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:24",
  "total_test_cases": 20
}
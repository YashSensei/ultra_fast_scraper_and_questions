{
  "problem_code": "problems",
  "title": "Ada and Game",
  "tags": [],
  "text": "Ada the Ladybug is playingGame of Digitsagainst her friend Velvet Mite Vinit. The game is played in following manner: At first, there is a four-digit number and a number of moves. Both Ada and Vinit take turns alternately (beginning with Ada). Both of them must increase ANY digit of the number, but if the digit was 9 it will become 0.For example number 3590 can be expanded to: 4590, 3690, 3500 or 3591. If after all turns the number is greater than the original number, Ada wins - otherwise Vinit is the winner. Both of them play optimally - can you decide who is the winner?PS: It is possible, that Ada will have one more turn (if number of turns is odd)InputFirst line of input will consistT ≤ 200number of test-cases.  Each testcase will consist of four digit number0 ≤ N < 104[the original number] and0 ≤ M ≤ 100[the number of turns].OutputFor each test-case, print the name of winner (\"Ada\" or \"Vinit\").Example Input5\r\n0000 0\r\n5566 3\r\n3333 10\r\n9999 9\r\n1234 30Example OutputVinit\r\nAda\r\nAda\r\nVinit\r\nAda",
  "sample_input": "5\r\n0000 0\r\n5566 3\r\n3333 10\r\n9999 9\r\n1234 30",
  "sample_output": "Vinit\r\nAda\r\nAda\r\nVinit\r\nAda",
  "link": "https://www.spoj.com/problems/ADAGAME",
  "scraped_at": "2025-08-17 00:34:10",
  "test_cases": [
    {
      "input": "5\r\n0000 0\r\n5566 3\r\n3333 10\r\n9999 9\r\n1234 30",
      "expected_output": "Vinit\r\nAda\r\nAda\r\nVinit\r\nAda",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3\n3\n10\n2",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n8",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "3\n7\n8\n3",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "15\n57610613\n25351083\n46663387\n13334347\n19739133\n89789742\n12251010\n37500592\n27707397\n55904366\n50710814\n9965296\n18971032\n45483548\n9161060",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "9\n83204103\n90859502\n62757746\n29574322\n63447891\n32276412\n16655381\n3837148\n90537673",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "17\n54994288\n97304044\n60311798\n85594280\n17776899\n87658144\n30204663\n78091120\n66538987\n22212260\n75144092\n50444910\n14859250\n22850130\n89115595\n24393474\n374732",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "14\n10656685\n25927406\n94738389\n5583389\n42171588\n31239415\n79521855\n2239840\n61397253\n38875078\n62757827\n46383554\n22442689\n98001509",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "11\n79186380\n44571163\n65097289\n43155030\n22824170\n76986130\n37510815\n90361597\n97000055\n86752808\n86813729",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "96\n31773\n42718\n85558\n15556\n83607\n93206\n89771\n88568\n3474\n81002\n28836\n16781\n65699\n82528\n45240\n5892\n54474\n66979\n29355\n67153\n81424\n97438\n86948\n84716\n54527\n90534\n82881\n65605\n86030\n42114\n45355\n71739\n87528\n42454\n77205\n60759\n67035\n52873\n76325\n99285\n43573\n4015\n3244\n48267\n98796\n46233\n95442\n54272\n97323\n92233\n89919\n98032\n72897\n18942\n21897\n48392\n92887\n89614\n91921\n63931\n78832\n69689\n2771\n4778\n79729\n60860\n90847\n28219\n11147\n5036\n42582\n37690\n94006\n61321\n42754\n2290\n19440\n57780\n13081\n3448\n60203\n34304\n2685\n79435\n76506\n46980\n79809\n93813\n99696\n39939\n72838\n52254\n19270\n17035\n27506\n82986",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "102\n46576\n81356\n58985\n83418\n93082\n82011\n80567\n57072\n14798\n39134\n93017\n25716\n38780\n12623\n9333\n72884\n52393\n77132\n69250\n50943\n89093\n12545\n58083\n66332\n29069\n96586\n95553\n69260\n84745\n97792\n87722\n77463\n55187\n70806\n98994\n22696\n12238\n93272\n90130\n36999\n68069\n47088\n24999\n83541\n71906\n75436\n36581\n16703\n98719\n68477\n55897\n40792\n63106\n36206\n10322\n94747\n85600\n24158\n90671\n54846\n1578\n98828\n83047\n7448\n79223\n9401\n80134\n95077\n44115\n63512\n47382\n86970\n60573\n30559\n21901\n63711\n73640\n88957\n71587\n94632\n14028\n35766\n53023\n49057\n6175\n10422\n989\n53176\n97913\n84964\n81532\n69648\n99393\n30247\n2721\n38102\n67823\n3763\n45095\n93806\n59745\n80745",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "81\n46156\n90912\n68565\n74703\n78085\n42248\n33461\n62859\n57080\n90288\n8519\n22846\n98063\n4247\n27993\n45110\n36332\n8000\n94424\n71668\n42190\n40040\n84475\n33539\n36836\n84517\n76384\n32981\n41312\n25324\n8718\n2785\n34367\n57890\n40801\n86615\n61046\n44114\n71168\n5520\n3900\n40091\n61330\n80684\n87060\n66596\n52765\n84278\n75997\n18648\n73928\n50649\n77514\n35487\n59912\n56567\n1377\n61546\n35201\n41857\n1514\n14214\n27656\n78592\n85680\n12334\n56465\n89733\n88976\n40206\n18088\n39265\n16637\n36253\n65549\n80030\n5351\n84733\n68736\n33344\n7332",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "50\n3938\n51777\n85731\n88696\n29440\n67907\n67087\n96923\n84928\n7067\n34156\n46464\n50288\n12357\n26226\n47282\n45785\n3783\n64710\n41684\n70117\n7713\n70444\n90932\n53924\n24117\n91877\n41855\n18137\n29281\n15228\n47791\n72852\n33764\n80563\n70004\n59725\n55784\n21496\n11637\n65706\n51832\n73732\n71795\n64781\n3032\n21437\n12790\n84094\n5793",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "70\n4076\n32037\n16641\n81626\n39093\n29467\n37164\n62623\n1568\n9125\n69147\n52202\n4384\n1584\n56120\n20879\n61033\n41928\n94126\n30153\n18387\n90289\n5616\n14540\n22900\n82078\n42155\n49509\n67794\n10533\n98244\n64587\n82635\n7343\n69153\n45159\n10388\n31796\n920\n28774\n95521\n65682\n56095\n90130\n37670\n61272\n71961\n14371\n43307\n92750\n16309\n93381\n25051\n41219\n34664\n69334\n42431\n22022\n47535\n52577\n4794\n36003\n9224\n71836\n11258\n8802\n2201\n37809\n29474\n20456",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "93\n96652\n25473\n33488\n35142\n41096\n77269\n48878\n20946\n4608\n19790\n3608\n38976\n25261\n86168\n5358\n13416\n97100\n69054\n36134\n33900\n55274\n89537\n77210\n54123\n72294\n72189\n53169\n91948\n1389\n98358\n13547\n90601\n33091\n43999\n58429\n49064\n20506\n32132\n23871\n29754\n34458\n89078\n73553\n137\n81234\n92363\n85410\n59385\n17042\n53983\n5786\n61764\n28165\n8676\n16798\n76737\n30670\n52170\n76118\n60032\n68277\n36936\n37057\n92133\n58790\n3445\n94835\n97487\n2830\n69813\n61271\n99145\n65082\n4630\n58124\n37629\n27257\n83138\n55917\n26433\n9444\n91715\n66432\n23428\n47181\n7696\n89855\n66583\n53616\n81721\n49047\n7770\n97240",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "22\n91058\n13110\n52072\n72419\n36500\n41018\n12148\n81583\n60380\n45914\n43425\n87933\n51105\n66131\n25549\n9563\n88942\n9246\n6524\n33598\n33952\n31839",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "104\n93889550\n11705664\n38228420\n64879114\n34948022\n48448365\n19097603\n96891662\n80317457\n46037746\n80741181\n88233855\n31023403\n74653708\n44361089\n93485131\n16028699\n60516997\n17493577\n99579152\n76833173\n54113397\n71279295\n89821276\n4234873\n69234339\n56466585\n83956368\n87355534\n70061321\n67423665\n38342566\n1075597\n87805249\n40007916\n22155854\n73066111\n1650666\n30845303\n2171392\n88996421\n18677696\n81647506\n79061236\n73329397\n9877057\n51946501\n43977829\n21206204\n6505553\n48881893\n24180538\n11716270\n40962857\n28781674\n96212410\n3928243\n80809262\n64408397\n57166519\n52550978\n98897577\n96082873\n28924464\n94732141\n80045753\n2861874\n23487590\n18706282\n43985400\n22372428\n70824355\n67132878\n29095295\n83540301\n45753887\n13881134\n96457097\n9791837\n5123581\n11992404\n27602967\n46699244\n78307380\n12602247\n67325707\n44684207\n94547598\n73358342\n71736064\n82538155\n19402472\n65019153\n44727345\n48915800\n22313550\n41416105\n37947667\n50039784\n75376380\n98008300\n9694901\n73569008\n88876861",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 104)"
    },
    {
      "input": "104\n27204321\n66483142\n96934073\n65276974\n41098519\n12673573\n56360869\n39697679\n38739373\n91379186\n98308169\n96236329\n9914944\n47079515\n24465262\n24617499\n95309584\n34661915\n6839778\n62947252\n37995185\n93534547\n43901608\n77966424\n59843769\n29235913\n93038935\n60391091\n12917894\n20509366\n15710611\n71285543\n1782783\n85683909\n9591691\n33571808\n43592087\n97427265\n54324502\n86751320\n31898807\n48034497\n40230310\n85339263\n49889093\n68075559\n94339015\n27029449\n96776521\n34699856\n89488167\n12847636\n18147158\n92326978\n51733514\n88858699\n73407521\n65350230\n7289521\n55644971\n90868905\n51007345\n25534606\n51559\n17315170\n50601475\n40418599\n4964231\n62068470\n22304725\n96306337\n34882456\n14231751\n27838424\n92687168\n61542885\n32345133\n96189188\n56224032\n50447832\n36539888\n37442597\n22681575\n10471839\n55733563\n524908\n65225290\n43577283\n34007733\n55344816\n30244410\n8277317\n92684858\n34413855\n71760777\n41096136\n44898531\n8608299\n10080674\n89228787\n43108152\n54291323\n26060429\n84760031",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 104)"
    },
    {
      "input": "104\n1\n100000000\n23823835\n90923046\n1\n100000000\n48082495\n1\n1\n100000000\n100000000\n1\n100000000\n100000000\n100000000\n26554440\n1\n82509251\n100000000\n1\n100000000\n100000000\n89005362\n100000000\n80646192\n63572780\n100000000\n1\n1\n73691871\n100000000\n15958496\n17178869\n1\n100000000\n95459571\n100000000\n100000000\n1\n100000000\n100000000\n1\n89438520\n1\n100000000\n100000000\n1\n83070414\n1\n1\n1\n1\n68751963\n1\n100000000\n1\n1\n96838969\n77344147\n100000000\n100000000\n100000000\n100000000\n25224843\n23782315\n1\n100000000\n1\n1\n1\n63466864\n1\n1\n23528387\n100000000\n100000000\n1\n100000000\n1\n90237691\n1\n61293843\n1\n42383299\n1\n1\n65138168\n100000000\n2046390\n38554120\n1\n1\n34950721\n1\n100000000\n100000000\n1\n100000000\n45968898\n45228236\n1\n100000000\n100000000\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 104)"
    },
    {
      "input": "104\n1\n100000000\n100000000\n70506176\n3215229\n100000000\n100000000\n1\n23545148\n1\n1\n100000000\n40867475\n69104792\n44425738\n1\n1\n79096277\n1\n100000000\n98528132\n100000000\n73678077\n1\n20421576\n1\n59679180\n1\n35367832\n45765115\n100000000\n100000000\n65907086\n100000000\n90749043\n100000000\n1\n1\n100000000\n1\n74691993\n100000000\n100000000\n1\n1\n100000000\n2092200\n100000000\n43726801\n85995861\n76376407\n1\n41146058\n100000000\n100000000\n78369368\n100000000\n1\n1\n1\n31899925\n43494222\n25961746\n100000000\n100000000\n6973732\n1\n100000000\n95352793\n63896748\n81838594\n100000000\n100000000\n64089173\n34853824\n51412994\n100000000\n670747\n1\n100000000\n90346857\n100000000\n1\n68678718\n1\n1\n1\n100000000\n100000000\n70161083\n100000000\n100000000\n39820330\n100000000\n53420573\n17713926\n1\n1\n24938781\n100000000\n43521100\n1\n100000000\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 104)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:21",
  "total_test_cases": 20
}
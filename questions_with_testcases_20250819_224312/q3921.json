{
  "problem_code": "problems",
  "title": "Polynomial Table",
  "tags": [],
  "text": "Given a polynomial, your task is to print a table of some of its calculated values.InputInput starts with a positive integer t<1000, the number of testcases, then t testcases follow. Every testcase contains the representation of a polynomial of at most fourth degree in \"pretty printing\" notation. Coefficients  are either given as integers or fractions. The absolute values of all numbers including numerator and denominator are not larger than 100.If all coefficients are integers and degree is not larger than 1, a polynomial (which means a testcase) is given in a single line (thebase line).If all coefficients are integers, but degree is larger than 1, a polynomial is given in two lines. The first of these contains only the exponents, the second  line is thebase line.If at least one coefficient is given as a fraction, a polynomial is given in three lines. The first line contains the exponents (if there are any) and the numerators, the last line the denominators.Polynomials are given incanonical form, which means:⇢ powers of x are given in decreasing order and do not appear more than once⇢ there is always exactly one operator (either + or -) between consecutive summands⇢ coefficients with an absolute value of 1 are left out⇢ summands with coefficients with a value of 0 are left out except for the null polynomial⇢ there are no whitespaces in the base line except those below exponentsThe fraction bar is formed by as many dashes as there are digits in numerator respectively denominator. If the number of digits in numerator and denominator is different, the fraction bar is as long as the larger value; the smaller one is aligned to the right.3 4  2                3  10        2\r\nValid polynomials are:   --x +x     -x+2      5x +---       x -5\r\n                          5                       100-3 4  2        2           1                    3\r\nInvalid polynomials are:  -x +x        x+3x      x---      4x -13      2x +-5\r\n                          5                         7The base line of the polynomial is followed by a single space, then the information about the range of calculation is given.  It is denoted as \"[a;b;m]\", where a,b and m are integer values with -10 ≤ a < b ≤ 10 and 1 ≤ m ≤ 50.  You have to divide [a;b] into m equal width sections of width d and calculate the polynomial's values for x=a, x=a+d, x=a+2d, …, x=b.Note: There are no trailing whitespaces and every testcase is followed by a blank line.OutputFor every testcase print a table with the polynomial's values as shown in the example below. The output for every testcase consists of nine lines. The first and the last line  are an identical sequence of dashes. All other lines start and end with \"|\", columns are also separated by \"|\" resp. \"+\" in the fifth line that separates the rows.   The leftmost column contains x in the top row and the polynomial (exactly as given in the input) in the bottom row.  The other columns are filled with the x-values in the top row in increasing order and the corresponding y-values in the bottom row. The width of a column depends on the maximum width of the values inside (may be  in the top or bottom row) plus an additional space to the left and to the right.  If the corresponding value in the other row needs less space, it is aligned to the right.Regardless of the type of value – integer or fraction – the rows are always three lines in height. Integer values, fraction bars and signs are always printed in the middle line, numerator and denominator one line above resp. below. Fractions must be printed in lowest terms. If the value of a fraction is an integer value, it has to be printed as integer.  No (intermediate) value will have an absolute value larger than 10¹⁸, if calculations are done carefully. The width of the fraction bar and alignment of numerator resp. denominator follow the same rules as explained in the input section.Print a blank line after every testcase except the last one.Note: The \"exact judge\" is used here, so the output format must be precisely observed.ExampleInput:2\r\n 3   2\r\nx -4x  [-2;3;5]\r\n\r\n 3 2   3\r\n--x +x+- [-1;4;10]\r\n 8     8Output:----------------------------------------\r\n|        |     |    |   |    |    |    |\r\n|      x |  -2 | -1 | 0 |  1 |  2 |  3 |\r\n|        |     |    |   |    |    |    |\r\n|--------+-----+----+---+----+----+----|\r\n|  3   2 |     |    |   |    |    |    |\r\n| x -4x  | -24 | -5 | 0 | -3 | -8 | -9 |\r\n|        |     |    |   |    |    |    |\r\n----------------------------------------\r\n\r\n------------------------------------------------------------------\r\n|          |    |   1 |   |  1 |   |  3 |   |  5 |   |   7 |     |\r\n|        x | -1 |  -- | 0 |  - | 1 |  - | 2 |  - | 3 |   - |   4 |\r\n|          |    |   2 |   |  2 |   |  2 |   |  2 |   |   2 |     |\r\n|----------+----+-----+---+----+---+----+---+----+---+-----+-----|\r\n|  3 2   3 |    |   7 | 3 | 25 |   | 33 | 7 | 17 |   |  23 |  13 |\r\n| --x +x+- | -1 | --- | - | -- | 1 | -- | - | -- | 0 | --- | --- |\r\n|  8     8 |    |  32 | 8 | 32 |   | 32 | 8 | 32 |   |  32 |   8 |\r\n------------------------------------------------------------------",
  "sample_input": "3 4  2                3  10        2\r\nValid polynomials are:   --x +x     -x+2      5x +---       x -5\r\n                          5                       100",
  "sample_output": "-3 4  2        2           1                    3\r\nInvalid polynomials are:  -x +x        x+3x      x---      4x -13      2x +-5\r\n                          5                         7",
  "link": "https://www.spoj.com/problems/POLYTABL",
  "scraped_at": "2025-08-17 00:34:25",
  "test_cases": [
    {
      "input": "3 4  2                3  10        2\r\nValid polynomials are:   --x +x     -x+2      5x +---       x -5\r\n                          5                       100",
      "expected_output": "-3 4  2        2           1                    3\r\nInvalid polynomials are:  -x +x        x+3x      x---      4x -13      2x +-5\r\n                          5                         7",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1 3 9 8 10 7\n1 8 10\ng fcjnwzcfq ewh y vr gvzsl lnhyy ikcu tp lf\n1 10",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "8 8 10 10 2 5\n1 8 7\npx xshcmgzc ln sco indi nma ri xjnc uirjc rrj\n9 10",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "9 1 5 10 5 7\n4 9 8\nkzcro pihcfueuzpf df qyamo yhvkv c hx mezxg gm tdacz\n8 1",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "47 1 44 38 27 63\n22 63 15\nsg oijamigrc xa tkd ukt bdt z vpuay tnoqs qjh\n14 94",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "97 63 5 81 55 59\n14 85 38\nrjo zfg rky ifiu rwpqi baoqc py i leha q\n11 13",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "18 68 23 2 99 39\n84 26 49\nxku kvdpgigo xc vc agi ukamt zy ra jff mtww\n92 37",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "52 48 68 39 45 55\n60 98 45\ngybvv pa mz it ho hq zhc cy at zzzuk\n75 33",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "73 9 29 42 70 85\n88 13 60\nz ifhfydn he z g jjjv yc bwhy uvs mz\n55 18",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "493 91 119 463 236 409\n494 222 306\nrzpsk wqvvggyeiq nr ib m tdvn olvi px v plgz\n231 226",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "406 148 228 489 252 469\n324 440 235\nhlvl sjfg ootnp bfcc xxo hh pz vdnon ypo jrnns\n367 250",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "57 373 373 400 469 311\n275 163 346\no moflmlu gu ot phb ebcq e vulq ace yz\n241 476",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "196 108 417 93 207 352\n473 164 204\naeg qdrxis nym gooj x fkd pb s zhg lpxzt\n236 437",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "431 413 436 146 352 447\n465 477 86\nq ogz yri ucoqi q zenhm l vbjyo lpe pezr\n426 489",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "351 336 387 287 279 485\n452 373 433\nqcaef mekvlfv iiytk hlqn wesud t fqgml uhe qaj vtz\n411 244",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "191 476 63 298 57 441\n128 392 402\nhlihu slax l j he yvei k mcp zgea qn\n92 226",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000\n1000 1000 1000\nucvj bklmm dh je l v v j esud fgp\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000\n1000 1000 1000\nazohs oafcf f e bntg m xyyx oqczl tncu xd\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1 1000 999 1000 999\n1000 999 999\nufv w qvdlv ioj zv emlcy hpijo h vv zcsb\n1 999",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 1 1 1 2 999\n1000 2 2\nszdv ibqctgs zmvsr edvaw d wqrpb anfj bima agwtk ldqb\n1 1000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:25",
  "total_test_cases": 20
}
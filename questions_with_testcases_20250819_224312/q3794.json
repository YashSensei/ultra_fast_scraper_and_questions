{
  "problem_code": "problems",
  "title": "Zero Query",
  "tags": [],
  "text": "EnglishVietnameseGiven an array havingNelements, each element is either-1or1.You haveMqueries, each query has two numbersLandR, you have to answer the length of the longest subarray in rangeLtoR(inclusive) whose sum is equal to0.InputThe first line contains two numbersNandM(1≤N,M≤50000) - the number of elements and the number of queries.The second line containsNnumbers - the elements of the array, each element is either-1or1.In the nextMlines, each line contains two numbersLandR(1≤L≤R≤N).OutputFor each query, print the length of the longest subarray that satisfies the query in one line. If there isn't any such subarray, print0.NoteSubarray in an array is like substring in a string, i.e. subarray should contain contiguous elements.ExampleInput:6 4\r\n1 1 1 -1 -1 -1\r\n1 3\r\n1 4\r\n1 5\r\n1 6Output:0\r\n2\r\n4\r\n6",
  "sample_input": "Input:6 4\r\n1 1 1 -1 -1 -1\r\n1 3\r\n1 4\r\n1 5\r\n1 6Output:0\r\n2\r\n4\r\n6",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/ZQUERY",
  "scraped_at": "2025-08-17 00:34:27",
  "test_cases": [
    {
      "input": "6 4\r\n1 1 1 -1 -1 -1\r\n1 3\r\n1 4\r\n1 5\r\n1 6",
      "expected_output": "0\r\n2\r\n4\r\n6",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3 10\n8 1 10 2 9 8\n2 2\n9 9\n6 3\n2 1",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "8 8\n9 4 6 10 5 8\n9 10\n3 3\n4 3\n5 3",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "7 3\n10 1 4 7 5 9\n2 10\n5 1\n5 5\n7 6",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "48 100\n33 26 18 89 3 29\n21 24\n20 9\n74 75\n85 43",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "64 11\n52 85 95 29 94 70\n7 51\n26 1\n21 51\n94 71",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "16 64\n23 6 72 20 12 77\n58 1\n85 36\n16 76\n76 55",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "82 58\n3 47 33 26 42 79\n80 13\n35 1\n25 73\n79 1",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "19 98\n71 8 17 14 53 65\n78 69\n60 51\n37 41\n41 94",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "380 210\n204 139 359 312 329 492\n410 55\n412 291\n148 339\n97 173",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "286 455\n157 251 231 319 414 479\n355 357\n50 249\n466 392\n497 302",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "89 396\n211 77 497 158 192 86\n205 142\n322 442\n493 152\n383 131",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "357 244\n338 268 442 410 184 165\n231 291\n468 317\n269 57\n251 491",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "471 284\n476 406 340 371 146 292\n232 393\n450 168\n442 252\n171 478",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "458 273\n283 468 187 213 359 226\n428 318\n90 381\n293 115\n410 247",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "316 394\n227 175 336 295 147 102\n85 250\n451 374\n364 374\n296 482",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000 1000 1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000 1000 1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 1\n2 1000 999 1000 999 2\n1000 1\n999 2\n1 999\n1000 999",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 1\n999 2 1 2 1000 1\n1000 1000\n1000 1000\n1000 2\n2 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:25",
  "total_test_cases": 20
}
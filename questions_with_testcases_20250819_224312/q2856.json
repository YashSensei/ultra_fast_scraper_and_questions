{
  "problem_code": "problems",
  "title": "Ada and Spring Cleaning",
  "tags": [],
  "text": "Ada the Ladybug has decided to do some \"Spring Cleaning\". As you might know, she keeps a TODO list. She is very sparing so she keeps all her activities as one string. You might get very confused while reading the string but she has a system - every activity has length exactlyKcharacters. Sadly, as new activities were added to the list many duplicities appeared. Now it is time to find out how manyuniqueactivities are in her TODO list.InputFirst line containsT, number of test-cases.Each test-case begins withN, K,1 ≤ K ≤ N ≤     105, length of string and length of activities respectively.Next line consists of string of lengthN, consisting of lowercase letters.The sum of lengths of strings among all test-cases won't exceed3*105OutputFor each test-case, print the number of unique substrings of lengthKExample Input5\r\n3 2\r\naaa\r\n5 1\r\nabcba\r\n4 2\r\nabac\r\n10 2\r\nabbaaaabba\r\n7 3\r\ndogodogExample Output1\r\n3\r\n3\r\n4\r\n4",
  "sample_input": "5\r\n3 2\r\naaa\r\n5 1\r\nabcba\r\n4 2\r\nabac\r\n10 2\r\nabbaaaabba\r\n7 3\r\ndogodog",
  "sample_output": "1\r\n3\r\n3\r\n4\r\n4",
  "link": "https://www.spoj.com/problems/ADACLEAN",
  "scraped_at": "2025-08-17 00:34:12",
  "test_cases": [
    {
      "input": "5\r\n3 2\r\naaa\r\n5 1\r\nabcba\r\n4 2\r\nabac\r\n10 2\r\nabbaaaabba\r\n7 3\r\ndogodog",
      "expected_output": "1\r\n3\r\n3\r\n4\r\n4",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3\n1\n6\n7",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "4\n3\n10\n7\n4",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "3\n4\n8\n2",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "11\n76139446\n65662396\n3840030\n20079835\n91028620\n88542507\n82007182\n6187130\n91514197\n22425501\n73360990",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "8\n46814103\n60666206\n88536349\n23686051\n92943738\n39577808\n55742204\n52581261",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "12\n58909447\n86105255\n7028514\n37094109\n21580796\n17292090\n75326380\n6841158\n65121896\n31708315\n15208593\n6734384",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "5\n65224258\n38269957\n65562071\n83392297\n45475180",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "15\n92240184\n14570724\n4528472\n70648167\n22366174\n75747764\n45563335\n91695955\n72775815\n98903920\n52523404\n63033035\n60592531\n82331534\n90053343",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "50\n8218\n37044\n89057\n37288\n7718\n81950\n58346\n93145\n67690\n79194\n59310\n1934\n55538\n46365\n45827\n99844\n35335\n2412\n88954\n15205\n7766\n28377\n14598\n41060\n15009\n86494\n56416\n40505\n24070\n55905\n57248\n93572\n90318\n9480\n3984\n46317\n64797\n13534\n77218\n19518\n26019\n10473\n50466\n62746\n6796\n92383\n79234\n93647\n60330\n79665",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "82\n92335\n43570\n88428\n95523\n26227\n59971\n22007\n11818\n88270\n94113\n59828\n74674\n12512\n14801\n85724\n87394\n36593\n82617\n99725\n45459\n20713\n74763\n23867\n57218\n72839\n47953\n53266\n83270\n54354\n53232\n24025\n98739\n31541\n85582\n52143\n66152\n52686\n73454\n2027\n77078\n82314\n37896\n62751\n45654\n76724\n94065\n98532\n56353\n2056\n47816\n41728\n79235\n70021\n56138\n94582\n55639\n27854\n11128\n35043\n69085\n26964\n24236\n57820\n41904\n76787\n91937\n34135\n52451\n43350\n76137\n43274\n62288\n74488\n97233\n33477\n65021\n55386\n6844\n36831\n15230\n44801\n49283",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "75\n77533\n8746\n86852\n29723\n52734\n23958\n43883\n67671\n71170\n51669\n79428\n69894\n84761\n36108\n40432\n8058\n87221\n1564\n76151\n80379\n59049\n50844\n42976\n73218\n63573\n7604\n63700\n58923\n56442\n13344\n24791\n58804\n49960\n73273\n44374\n20663\n93366\n57687\n50875\n12040\n36263\n7286\n98684\n69015\n67047\n85010\n34085\n71489\n81802\n38897\n34312\n54803\n18366\n82197\n51809\n54128\n98991\n27961\n78462\n56864\n1120\n11078\n40650\n38103\n8063\n74763\n20240\n47620\n74356\n73942\n23255\n30117\n38417\n68941\n36590",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "87\n27395\n80488\n51903\n80485\n45649\n34787\n96397\n1852\n24304\n50915\n34638\n75935\n1395\n33016\n97507\n17247\n86376\n1542\n45090\n98956\n46361\n78059\n96228\n51134\n54239\n7300\n59530\n90438\n45266\n42422\n59642\n37432\n72348\n22161\n93040\n75132\n94045\n36230\n13916\n83211\n12633\n83406\n41963\n1364\n16888\n13681\n45795\n53592\n59976\n68037\n84647\n5829\n90962\n41354\n55552\n51110\n56739\n61101\n20467\n32006\n41904\n6722\n50076\n42723\n740\n739\n77677\n96058\n12000\n78707\n28371\n21590\n98092\n4838\n75157\n14417\n28842\n59589\n73141\n38493\n45109\n62899\n48294\n99437\n13752\n65358\n8822",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "88\n97396\n52868\n16273\n96477\n12949\n82175\n72795\n56029\n29467\n55387\n6370\n25219\n49116\n81851\n48332\n23390\n42867\n85510\n88554\n2493\n47306\n89834\n76686\n72738\n41202\n70032\n78155\n66900\n68858\n69475\n47004\n64443\n21027\n54460\n67963\n79309\n91138\n31602\n1209\n31553\n24556\n32119\n92921\n67187\n28041\n27309\n20681\n81040\n33588\n40223\n65597\n77726\n79720\n13179\n62735\n34660\n58106\n47857\n45933\n35053\n66062\n14955\n79777\n97466\n40493\n49579\n10321\n81683\n99617\n7027\n36754\n62538\n87629\n67900\n40672\n79429\n94225\n95461\n73871\n3052\n9215\n91664\n64922\n92734\n47893\n1022\n24319\n19692",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "20\n35663\n4971\n19195\n6980\n92977\n87727\n25973\n15757\n23080\n16629\n13439\n25202\n35841\n43763\n45604\n96986\n25525\n86153\n26932\n3200",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "62\n71884\n29664\n62772\n33902\n88624\n48571\n99944\n37291\n40798\n55200\n12205\n32871\n1109\n43160\n32124\n95778\n63295\n34997\n89297\n86055\n29702\n54072\n47400\n49857\n88298\n57359\n17882\n98955\n52795\n85857\n75258\n39209\n26866\n5473\n99601\n49715\n83641\n66105\n5947\n61591\n39734\n2981\n97379\n19759\n44093\n66979\n76615\n41809\n78095\n71912\n67564\n26426\n30319\n69340\n93931\n23922\n90968\n42102\n83706\n52583\n39985\n85352",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "105\n57566052\n32151294\n27138174\n89002198\n22590706\n62395109\n89797677\n92612288\n68882315\n890643\n25745917\n62962535\n63925329\n23593781\n87609020\n21599526\n89723024\n52953327\n64020365\n29287768\n74987980\n42636588\n90924595\n89793667\n58849835\n42819508\n35771730\n92767642\n19987941\n47705857\n55854612\n58742160\n97243595\n13791298\n84846995\n1427332\n63051017\n40236671\n4519798\n82165621\n76484761\n77227145\n38387673\n59207598\n6298549\n41384131\n19316108\n73699928\n80891593\n51294929\n11821982\n86072289\n71023291\n35082112\n34806497\n3776437\n56100431\n93420214\n90723796\n55333854\n10149478\n20078868\n54663103\n78559882\n91449722\n7026237\n58170635\n65360634\n66113492\n87607688\n28577215\n28716886\n41216708\n96007475\n50885233\n61198587\n85398328\n998610\n30296770\n37008555\n36968777\n39084007\n43915315\n15368207\n50643137\n97820131\n87768590\n10926211\n57433858\n47138457\n72686534\n37989264\n2001652\n13076382\n94704580\n76285643\n75560894\n11713666\n55273487\n14794128\n2308874\n15314248\n76711514\n92428314\n72597196",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "105\n36596714\n96439703\n20886130\n50124674\n51438393\n4802489\n86003218\n84706639\n36889551\n47054665\n83385838\n94284961\n82687603\n62210606\n18505833\n20297662\n672317\n81537433\n61459547\n61594039\n3304649\n46115856\n9129511\n4242524\n12092358\n50548406\n99144917\n4595551\n75532114\n96722029\n24550645\n26195626\n99602048\n75489614\n41250591\n67364257\n34071215\n58355779\n77143937\n37814747\n77060229\n91052487\n89568035\n14005721\n12330060\n83423029\n82667772\n9449214\n48478228\n51734826\n84430307\n79705816\n91630837\n66068238\n28344210\n30323518\n92671076\n55531334\n31353121\n96005358\n7804710\n22741326\n12905767\n83799622\n85343782\n63170768\n98746889\n91293299\n25096912\n17373463\n99481642\n16970226\n64860817\n80776963\n47078799\n92039967\n35575260\n19593960\n43624379\n89528512\n67830188\n5153329\n62723870\n79331268\n32369662\n5580678\n25210191\n3710084\n25895665\n96883615\n42232723\n65546806\n437689\n66640124\n93519644\n47033935\n2068771\n75249300\n16681529\n35702323\n83422068\n73289762\n13028337\n12156068\n70080685",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "1\n22704782",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 1)"
    },
    {
      "input": "105\n1\n1\n100000000\n4724197\n1\n30641329\n1\n157407\n30836424\n1\n100000000\n38713048\n100000000\n1\n1\n1\n56193150\n1\n11012502\n83711053\n54442341\n100000000\n1\n100000000\n1\n44873519\n54420437\n61145948\n1\n25739905\n100000000\n100000000\n81762867\n1\n100000000\n100000000\n1\n85145299\n100000000\n100000000\n54668282\n1\n37865234\n1\n37558170\n100000000\n100000000\n58934929\n100000000\n1\n1\n85645334\n100000000\n1\n1\n44946216\n61769832\n1\n100000000\n66041336\n100000000\n25550226\n100000000\n1\n1\n100000000\n1\n100000000\n100000000\n98467963\n1\n1\n1\n68414491\n100000000\n100000000\n100000000\n100000000\n9484315\n1\n91852680\n1\n81387159\n1\n100000000\n58990886\n1\n100000000\n33381580\n100000000\n84548420\n19774809\n1\n68608456\n73637960\n100000000\n100000000\n1\n1\n100000000\n81410736\n100000000\n1\n1\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 105)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:21",
  "total_test_cases": 20
}
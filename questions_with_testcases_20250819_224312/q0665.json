{
  "problem_code": "problems",
  "title": "Bingo!",
  "tags": [],
  "text": "Albert, Charles and Mary invented a new version of the classical game Bingo. In traditional Bingo the game is presided over by a non-player known as the caller. At the beginning of the game each player is given a card containing a unique combination of numbers from 0 to N arranged in columns and rows. The caller has a bag containing N + 1 balls, numbered from 0 to N. On each turn, the caller randomly selects a ball from the bag, announces the number of the drawn ball to the players, and sets the ball aside so that it cannot be selected again. Each player searches his card for the called number and marks it if he ﬁnds it. The ﬁrst player who marks a complete pre-announced pattern on the card (for example, a full horizontal line) wins a prize.In the Albert-Charles-Mary version, on each turn, the caller draws a ﬁrst ball, returns it to the bag, draws a second ball, returns it to the bag, and then calls out the absolute diﬀerence between the two ball numbers. To generate even more excitement, before the game started a possibly empty subset of balls is removed from the bag, in such a way that at least two balls remain there. They would like to know if every number from 0 to N may still be called out with the new drawing method considering the balls that were left in the bag.InputEach test case is given using exactly two lines. The ﬁrst line contains two integers N and B. The meaning of N was described above (1 ≤ N ≤ 90), while B represents the number of balls which remained in the bag (2 ≤ B ≤ N + 1). The second line contains B distinct integers bi, indicating the balls which remained in the bag (0 ≤ bi ≤ N). The last test case is followed by a line containing two zeros.OutputFor each test case output a single line containing a single uppercase 'Y' if is possible to call out every number from 0 to N, inclusive, or a single uppercase 'N' otherwise.SampleInput6 7\r\n2 1 3 4 0 6 5\r\n5 4\r\n5 3 0 1\r\n5 3\r\n1 5 0\r\n0 0OutputY\r\nY\r\nN",
  "sample_input": "Input6 7\r\n2 1 3 4 0 6 5\r\n5 4\r\n5 3 0 1\r\n5 3\r\n1 5 0\r\n0 0OutputY\r\nY\r\nN",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/MBINGO",
  "scraped_at": "2025-08-17 00:33:15",
  "test_cases": [
    {
      "input": "Input6 7\r\n2 1 3 4 0 6 5\r\n5 4\r\n5 3 0 1\r\n5 3\r\n1 5 0\r\n0 0OutputY\r\nY\r\nN",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "8 4\nq 8\n5 8 8 4 2 7 7\n10 8\n7 4 4 7\n2 3\n5 5 5\n7 7\n3 rdlybosr\np\now",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "8 7\nxymou 6\n8 4 1 1 10 7 4\n5 7\n5 1 2 10\n2 10\n8 4 4\n6 9\n7 fhezrs\nuf\nn",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "6 9\njl 5\n4 2 5 3 9 9 3\n4 9\n4 2 5 8\n2 2\n5 5 7\n1 3\n7 sv\nf\nkc",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "49 21\nkvzvja 38\n34 72 26 43 90 69 43\n14 39\n40 79 72 44\n56 67\n56 72 29\n17 10\n19 keb\na\nrr",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "37 28\naqugdo 26\n78 12 30 18 53 66 45\n32 33\n13 33 67 61\n12 24\n26 21 76\n27 77\n62 ygobz\np\nqb",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "58 46\nggysjq 87\n75 50 41 72 35 73 43\n35 28\n70 69 90 67\n67 66\n83 48 3\n3 56\n14 ebm\nws\nnk",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "63 61\nay 13\n53 59 2 18 30 35 4\n16 18\n23 9 25 76\n82 53\n87 66 81\n86 70\n40 krnqcpgd\na\nl",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "43 16\ny 34\n72 90 12 36 80 2 44\n54 78\n60 33 16 82\n47 47\n35 1 85\n21 13\n12 kwiawcc\nc\ny",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "36 4\nrq 30\n12 34 12 14 13 25 7\n16 5\n13 25 22 41\n30 12\n9 18 28\n21 34\n8 cpvhhprp\nml\nh",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "15 10\ngulv 32\n18 27 14 32 18 9 12\n33 27\n28 34 36 32\n7 29\n20 9 29\n19 40\n13 aqgzy\np\ns",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "24 35\nba 31\n4 25 26 32 11 31 23\n36 19\n44 32 4 12\n45 11\n40 8 25\n39 44\n28 mcibkilo\neg\ndb",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "20 10\nvxjeoe 21\n36 7 36 21 6 5 45\n11 31\n30 35 21 18\n7 15\n20 28 9\n33 43\n45 nofgc\nn\ni",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "6 42\nu 39\n4 16 17 38 4 38 39\n34 14\n32 28 36 11\n6 35\n9 9 37\n29 12\n23 cdffysul\na\ng",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "28 31\njhbuhv 21\n24 44 10 13 34 27 8\n44 25\n32 4 37 43\n5 6\n43 45 8\n20 34\n36 ippdju\nfm\nh",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "14 31\now 18\n21 29 16 34 37 7 33\n12 25\n43 6 18 22\n18 30\n33 30 7\n16 9\n14 tvjcemgv\nl\nr",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "90 90\nbxheh 90\n90 90 90 90 90 90 90\n90 90\n90 90 90 90\n90 90\n90 90 90\n90 90\n90 jasfeays\npq\ni",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "90 90\nmbs 90\n90 90 90 90 90 90 90\n90 90\n90 90 90 90\n90 90\n90 90 90\n90 90\n90 mivqhh\no\nw",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 90\nnu 90\n90 1 89 89 1 89 1\n89 1\n90 89 89 89\n1 89\n2 1 90\n2 89\n1 l\np\nw",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 1\nqr 90\n89 2 2 90 89 90 2\n2 1\n89 89 1 89\n90 90\n89 1 90\n89 90\n1 lrckxms\nb\nw",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:14",
  "total_test_cases": 20
}
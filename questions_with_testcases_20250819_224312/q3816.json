{
  "problem_code": "problems",
  "title": "Chicken Joggers",
  "tags": [],
  "text": "In the woods of Lill-Jansskogen, there is a network of trails that are often used by joggers. The trails have been much appreciated, and have been specially selected by the professors of the Royal Institute of Technology, enabling university students to take a short break from their studies and refresh their smart minds. Strangely enough, the network of trails actually form a tree. When the trails were selected, the professors of the university took the set of trails that they found in Lill-Jansskogen and created a minimum spanning tree, in order to encourage and inspire computer science students to participate in physical activities by applying graph theory in the beautiful surroundings of the Royal Institute of Technology.Unfortunately, the computer science students are not that brave. Winter is approaching, and it is getting darker and darker in the city of Stockholm. Recently, a bunch of programmers from CSC (Community of Scared Cowards) have been complaining that it is too dark in parts of the trail network at night. Some of the trails are lit up by lamps, but sometimes that is not enough for the CSC. They would like to see that all the trails that they might use are lit up properly!You have been tasked with satisfying thre cowards by placing lamps at intersections. For economic reasons, it might not be possible to place lights at all intersections, so it will suffice to make sure that there is a lamp in at least one of the two intersections adjacent to a trail that could possibly be used by the joggers. Some intersections already have lamps, and of course, you can keep using those lamps.You don't know exactly what trails the joggers are using, but you do know that the joggers will always start and finish at the university campus. You also know that joggers are training for an upcoming marathon, so they always run exactly a certain number of meters S in total. A jogger might turn around at any point in time, even in the middle of a trail, in order to fulfill the requirement of running exactly S meters.You will be given a map of the woods and the jogging trails included in the minimum spanning tree created by the professors. It is guaranteed that there is exactly one route between each pair of intersections, where a route is a set of adjacent trails. Your task is to find the minimum number of additional lamps you needed in order to satisfy the frightened runners, no matter which trails they use (subject to the restrictions above)InputInput starts with two integers N (2 ≤ N ≤ 50 000), and S (1 ≤ S ≤ 104), the number of intersections and the total distance in meters that a jogger wants to run, respectively. Then follow N − 1 lines with three integers a (1 ≤ a ≤ N), b (1 ≤ b ≤ N), d (1 ≤ d ≤ 100), meaning that there is a bidirectional trail between intersection a and b with length d meters. Then follows a line with a single integer L (0 ≤ L ≤ N), the number of lamps that have already been placed. Then follow L distinct integers l1, ..., lLon one line, meaning there is already a lamp placed at intersections l1, ..., lL. The university campus is at intersection number 1.OutputOutput contains a single integer, the minimum number of additional lamps you need to place in order to satisfy the joggers requirements.ExampleInput:5 6\r\n1 2 1\r\n1 3 1\r\n4 3 3\r\n3 5 2\r\n1\r\n1Output:1Input:5 6\r\n1 2 1\r\n1 3 1\r\n4 3 3\r\n3 5 2\r\n1\r\n3Output:1Input:5 6\r\n1 3 3\r\n1 4 2\r\n1 5 3\r\n1 2 2\r\n2\r\n4 3Output:1",
  "sample_input": "Input:5 6\r\n1 2 1\r\n1 3 1\r\n4 3 3\r\n3 5 2\r\n1\r\n1Output:1",
  "sample_output": "Input:5 6\r\n1 2 1\r\n1 3 1\r\n4 3 3\r\n3 5 2\r\n1\r\n3Output:1",
  "link": "https://www.spoj.com/problems/UCBINTD",
  "scraped_at": "2025-08-17 00:34:33",
  "test_cases": [
    {
      "input": "5 6\r\n1 2 1\r\n1 3 1\r\n4 3 3\r\n3 5 2\r\n1\r\n1",
      "expected_output": "1",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5 6\r\n1 2 1\r\n1 3 1\r\n4 3 3\r\n3 5 2\r\n1\r\n3",
      "expected_output": "1",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "10 2\n6 8 5\n3 2 2\n4 7 3\n4 2 5\n3\n5",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "6 5\n5 1 7\n4 6 10\n7 4 9\n5 5 2\n7\n3",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "8 4\n2 3 3\n1 2 10\n4 9 1\n6 1 9\n5\n10",
      "expected_output": "To be computed",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "88 60\n68 3 52\n51 48 26\n74 22 63\n13 51 41\n82\n91",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "59 1\n16 71 9\n33 10 21\n92 92 8\n22 5 95\n84\n3",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "19 2\n8 53 5\n1 57 10\n16 69 27\n27 20 65\n44\n20",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "42 17\n85 100 50\n5 28 82\n85 44 91\n47 82 76\n28\n10",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "89 38\n42 94 17\n58 28 30\n66 6 74\n12 34 93\n23\n38",
      "expected_output": "To be computed",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "17136 11156\n3489 23719 15764\n16499 16176 14259\n16935 21786 10833\n23881 19274 10905\n14843\n13136",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "20492 6288\n4025 15153 20806\n24612 17719 4708\n2966 13034 19640\n20026 16908 7694\n4071\n3101",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "12748 7770\n8982 9253 14963\n20904 9286 10206\n21499 12941 13954\n7096 11740 10830\n16021\n5363",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "22439 5732\n20651 18424 7657\n18904 17116 24593\n10768 22734 15289\n8250 14445 7570\n10282\n6892",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "4936 24643\n19290 11111 19434\n7767 5768 18853\n24992 18712 24456\n17987 11325 4281\n11756\n5999",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "17778 13076\n17162 10257 14355\n23023 5223 12767\n12414 13400 7884\n22212 18219 6880\n6846\n16464",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "12529 10570\n20655 3936 2573\n18255 15594 10156\n4527 5680 19616\n20811 24319 7613\n18643\n18984",
      "expected_output": "To be computed",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "50000 50000\n50000 50000 50000\n50000 50000 50000\n50000 50000 50000\n50000 50000 50000\n50000\n50000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "50000 50000\n50000 50000 50000\n50000 50000 50000\n50000 50000 50000\n50000 50000 50000\n50000\n50000",
      "expected_output": "To be computed",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "1 1\n1 49999 50000\n1 50000 50000\n50000 49999 2\n50000 49999 50000\n1\n2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:25",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "The Cow Gathering",
  "tags": [],
  "text": "Cows have assembled from around the world for a massive gathering. There areNcows, andN−1pairs of cows who are friends with each other. Every cow knows every other cow through some chain of friendships.They had great fun, but the time has come for them to leave, one by one. They want to leave in some order such that as long as there are still at least two cows left, every remaining cow has a remaining friend. Furthermore, due to issues with luggage storage, there areMpairs of cows(ai,bi)such that cowaimust leave before cowbi. Note that the cowsaiandbimay or may not be friends.Help the cows figure out, for each cow, whether she could be the last cow to leave. It may be that there is no way for the cows to leave satisfying the above constraints.InputLine1contains two space-separated integersNandM.Lines2 ≤ i ≤ Neach contain two integersxiandyiwith1 ≤ xi, yi≤ Nandxi≠ yiindicating that cowsxiandyiare friends.LinesN+1 ≤ i ≤ N+Meach contain two integersaiandbiwith1 ≤ ai, bi≤ Nandai≠ biindicating that cowaimust leave the gathering before cowbi.It is guaranteed that1 ≤ N, M ≤ 105.OutputThe output should consist ofNlines, with one integerdion each line such thatdi= 1if cow i could be the last to leave, anddi= 0otherwise.ExampleInput:5 1\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n2 4Output:0\r\n0\r\n1\r\n1\r\n1",
  "sample_input": "Input:5 1\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n2 4Output:0\r\n0\r\n1\r\n1\r\n1",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/COWGATH",
  "scraped_at": "2025-08-17 00:34:09",
  "test_cases": [
    {
      "input": "5 1\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n2 4",
      "expected_output": "0\r\n0\r\n1\r\n1\r\n1",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "10 1\n6 6\n2 1\n7 3\n5 7\n5 5",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "3 5\n3 4\n10 4\n9 3\n2 1\n10 10",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "2 9\n7 3\n10 8\n5 5\n7 5\n5 8",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "78 46\n9 44\n23 65\n19 53\n18 98\n31 10",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "8 69\n11 72\n81 100\n37 73\n69 42\n48 96",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "3 87\n36 69\n75 3\n66 90\n21 42\n53 64",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "37 62\n51 99\n36 3\n63 44\n69 18\n77 13",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "69 50\n9 78\n19 98\n75 83\n24 58\n97 74",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "205 349\n199 262\n486 184\n193 429\n386 423\n253 111",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "493 181\n473 144\n123 107\n287 440\n398 425\n300 463",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "232 279\n413 62\n484 314\n73 425\n466 462\n206 123",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "271 491\n215 303\n83 124\n104 322\n473 204\n490 112",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "124 346\n316 222\n366 146\n478 88\n128 464\n257 163",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "417 485\n397 340\n322 173\n225 321\n95 395\n140 428",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "190 330\n172 439\n394 267\n284 131\n181 486\n432 50",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "999 1000\n999 1\n2 1000\n1 1\n2 1000\n2 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "999 2\n2 999\n2 1000\n1 2\n999 1000\n1000 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:21",
  "total_test_cases": 20
}
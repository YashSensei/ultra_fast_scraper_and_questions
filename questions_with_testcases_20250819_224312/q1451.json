{
  "problem_code": "problems",
  "title": "BLAST",
  "tags": [],
  "text": "EnglishVietnameseThere are given two strings, A and B.  An expansion of some string X is a string created by adding or inserting any number (zero, one or more) of blanks anywhere in the string, or in the begining or the end of the string. Eg., if the string X is ‘abcbcd’, then the strings 'abcb-cd', '-a-bcbcd-' and 'abcb-cd-' are expansions of the string X (blanks are denoted by the character ‘-‘).If A1 is an expansion of the string A, and B1 is and expansion of the string B, and if A1 and B1 are of the same length, then we define the distance of the strings A1 and B1 as the sum of the distances of the characters on the same positions in these strings. We define the distance of two characters as the absolute difference of their ASCII codes, except the distance of the blank and another character, which is given (and equal for all characters).You are to write a program which finds the expansions A1 and B1 of strings A and B, that have the smallest difference.InputThe first line of the input file consists of the string A, and the second line of string B. They are consisted only of lower case characters of the english alphabet (a-z), and the number of characters in \nany of the strings is less than or equal to 2000.The third line consists of an integer K, 1 ≤ K ≤ 100, the distance of the blank and the other characters.OutputThe first only line of the input file should consist of the smallest distance as defined in the text of the task.SampleInput:cmc\nsnmn\n2output:10Input:koiv\nua\n1output:5input:mj\njao\n4output:12",
  "sample_input": "Input:cmc\nsnmn\n2output:10",
  "sample_output": "Input:koiv\nua\n1output:5",
  "link": "https://www.spoj.com/problems/MBLAST",
  "scraped_at": "2025-08-17 00:33:26",
  "test_cases": [
    {
      "input": "cmc\nsnmn\n2output:10",
      "expected_output": "Input:koiv\nua\n1output:5",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "shicym\nduq\n10 4\nmxnub",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "fqhk\na\n7 1\nqgacswk",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "voy\nzwr\n8 4\nkdwtaivfahehjhs",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "iy\nih\n44 100\nejjxmmyichl",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "wvke\nfykmsl\n16 29\nvclfziqkmu",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "e\nfuyibcm\n12 73\nbjkulxjvnhvxrzmnaff",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "mnov\nelbavhrq\n97 35\nhseremrkbgkowugo",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "qclma\nwuqeeb\n53 51\nrqowxryqfqmujhlcpzam",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "qvun\nsmmzrf\n56 432\njtabfrgmgxsesqwktlly",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "ounxe\nkcsjxr\n426 347\nvsxdneihmvroj",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "plrfo\nslsy\n175 270\nkbxgbcawesbfeldc",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "wjltx\nsmipd\n105 282\nvv",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "rwlaf\nbn\n316 441\nadgbh",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "al\ncksmqu\n484 213\nxnigmzkvxk",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "upoclg\nvpvpwc\n367 296\nloapllkm",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "y\ngaxoqme\n1000 1000\nbkhyuniultimqudss",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "vwanc\ncsqjicvh\n1000 1000\nsgieeyiepzqcyans",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "tpiier\nydhiktek\n2 1\nt",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "jpk\nn\n1 2\nqpdju",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:17",
  "total_test_cases": 20
}
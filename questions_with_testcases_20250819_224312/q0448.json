{
  "problem_code": "problems",
  "title": "Internet Spamming",
  "tags": [],
  "text": "Two Years from now,Spam will be solved.Bill Gates (2004)Let’s imagine...The World has evolved so much. Nowadays, the anger of rivalries is being extinguished by the help of internet. You’re the Mr. Despicable of the underworld and you have invented a new cyber virus, which acts like a SPAM.As people are getting more and more virtual, the count of Social sites are being raised on the peak rate. You want to deal damage to some Social Sites. Remember, “Suffering is more painful than Death”. So, your goal is todeal damage to as many sites as possible, rather than totally destroying a site.Each of the viruses will send some spam mails. If a user receives a Spam, the account of the user will be removed forever from the site that the user is using and the site will lose one of its users.Now, being a Programmer, you know a virus is nothing but a set of instructions. You have coded everything a virus has to follow except one thing, “On which site a certain virus should attack?” Now, you have to write a program that will tell each virus on which site it should attack. There is also a bug on your viruses.A virus cannot attack a site, unless the count of users on that site is more than or equal to the count of spams the virus can produce. Moreover, the viruses will start attacking maintaining the order in which they are given in the input. The first virus will start sending Spams first, then the second one, and so on...Now, write a program that will tell a virus, on which site it should attack.InputLine 1: N (≤ 2e5), M (≤ 2e5) [Number of Sites and Number of Viruses]Line 2: U1, U2, U3... Un(Ui≤ 1e9) [Number of Users on the ithsite]Line 3: P1, P2, P3... Pm(Pi≤ 1e9) [Number of spam mails the ithvirus can produce]OutputLine 1: I1, I2, I3... Im(1 ≤ Ii≤ N) [Index of the Site the ithvirus should attack on]Note:If there are no sites, the ithvirus can attack, print 0 on the ithindex.SampleInput:10 10\r\n7 2 9 5 1 2 1 1 2 5\r\n7 5 6 4 8 3 9 10 1 6Output:1 3 0 3 0 4 0 0 2 0Explanation1stvirus attacked the 1stsite, after that the users of the 1stsite decreased to 0. Now, no virus can attack the 1stsite.2ndvirus attacked the 3rdsite, and then the users of the 3rdsite decreased to 4 and later on, it was attacked again by the 4thsite and got users count decreased to 0.Now, there remains no sites, which has users more than or equal to the spam mails of the 3rdvirus. That’s why, it can attack no site.",
  "sample_input": "Input:10 10\r\n7 2 9 5 1 2 1 1 2 5\r\n7 5 6 4 8 3 9 10 1 6Output:1 3 0 3 0 4 0 0 2 0",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/SPAM_ATX",
  "scraped_at": "2025-08-17 00:33:18",
  "test_cases": [
    {
      "input": "10 10\r\n7 2 9 5 1 2 1 1 2 5\r\n7 5 6 4 8 3 9 10 1 6",
      "expected_output": "1 3 0 3 0 4 0 0 2 0",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "6 4\n8 6 8 8 3 5 5 1 8 5\n8 3 3 10 5 8 2 7 7 6",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "6 10\n5 9 3 1 1 7 6 9 4 4\n7 7 9 1 5 2 2 9 8 6",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "1 7\n1 6 1 3 6 7 4 4 8 3\n1 2 4 5 4 10 7 6 4 8",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "77 78\n22 72 71 46 80 94 56 3 33 95\n34 28 60 60 36 32 27 97 35 10",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "51 1\n41 42 33 84 85 1 9 9 82 28\n33 28 25 77 61 81 18 44 29 57",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "23 68\n24 66 49 95 14 55 50 96 69 40\n6 21 46 75 77 9 55 57 39 95",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "67 41\n23 9 84 16 70 9 9 84 92 13\n67 40 26 19 39 65 64 79 11 45",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "20 66\n87 79 26 85 76 77 8 73 59 24\n5 90 89 22 73 13 41 80 52 69",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "138 254\n250 71 322 390 442 267 329 435 321 78\n104 180 310 443 354 466 97 392 81 447",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "467 303\n379 236 312 222 477 72 105 355 274 149\n246 126 500 499 191 250 105 335 372 373",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "53 356\n376 189 346 386 416 172 93 82 353 243\n170 398 142 303 108 300 268 110 246 261",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "82 339\n304 105 234 75 457 279 173 243 324 126\n225 310 242 240 437 88 94 258 167 323",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "253 78\n241 76 83 366 58 221 176 51 194 361\n185 256 320 63 64 189 98 146 240 116",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "364 150\n133 196 189 241 374 229 202 463 207 68\n106 455 166 117 84 373 186 328 310 118",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "417 209\n365 340 491 203 466 51 224 142 157 419\n119 95 331 239 257 497 114 324 285 113",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 1\n2 1 1 1000 2 1000 1000 999 1000 999\n1 999 999 1 2 999 999 1 1 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1000 1000\n1000 2 1000 1000 2 2 1 1 1 1000\n1000 1000 2 999 2 1 999 2 1 999",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:14",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Sphere in a tetrahedron",
  "tags": [],
  "text": "Of course a Sphere Online Judge System is bound to have some tasks about spheres.\r\nSo here is one. Given the lengths of the edges of a tetrahedron\r\ncalculate the radius of a sphere inscribed in that tetrahedron\r\n(i.e. a sphere tangent to all the faces).InputNumber N of test cases in a single line. (N ≤ 30)\r\nEach of the next N lines\r\nconsists of 6 integer numbers -- the lengths of the edges of a tetrahedron\r\nseparated by single spaces. The edges are not longer than 1000 and\r\nfor the tetrahedron WXYZ, the order of the edges is: WX, WY, WZ, XY, XZ, YZ.OutputN lines, each consisting of a real number given with four digits decimal precision\r\nequal to the radius of a sphere inscribed in the given tetrahedron.ExampleInput:\r\n2\r\n1 1 1 1 1 1\r\n1000 999 998 5 5 6\r\n\r\nOutput:\r\n0.2041\r\n1.4189",
  "sample_input": "Input:\r\n2\r\n1 1 1 1 1 1\r\n1000 999 998 5 5 6\r\n\r\nOutput:\r\n0.2041\r\n1.4189",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/TETRA",
  "scraped_at": "2025-08-17 00:33:45",
  "test_cases": [
    {
      "input": "2\r\n1 1 1 1 1 1\r\n1000 999 998 5 5 6",
      "expected_output": "0.2041\r\n1.4189",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4\n6\n10\n1\n10",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n1\n1\n6\n6\n7",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n10",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "20\n5033095\n29322242\n98446273\n65017009\n11471758\n75728235\n74285629\n96766606\n59222954\n19862144\n46608730\n73866903\n22657323\n33747897\n41260768\n50238596\n45653765\n57536020\n19611892\n68920772",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "5\n36154562\n46259009\n79197266\n91385512\n57593694",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "9\n83840628\n52163057\n73160885\n34051973\n16869283\n38385359\n77087091\n42023022\n96937316",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "20\n52187763\n46321435\n75810171\n93419944\n65943366\n63283316\n79678814\n86247119\n39337060\n29506882\n57378313\n62153610\n63099575\n18499502\n32199278\n2512300\n6812012\n92529855\n58503760\n20037287",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "7\n61847553\n8286144\n66197287\n17538147\n28635589\n65260696\n4873152",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "25\n58275\n85959\n87715\n99276\n48666\n14918\n91686\n84239\n43659\n76177\n74466\n31689\n75069\n92414\n55488\n41604\n40687\n17430\n32923\n48838\n54400\n38169\n13105\n73321\n36624",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "24\n3053\n64990\n75142\n58802\n79829\n12867\n82637\n63464\n30689\n62848\n54208\n87455\n50374\n75009\n51129\n82582\n35068\n6866\n28123\n62914\n29968\n23811\n78533\n13333",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "24\n79727\n93076\n85689\n95148\n6770\n55098\n38331\n83977\n4171\n63460\n59888\n44926\n61348\n38196\n52460\n40310\n59239\n67914\n22287\n58010\n99447\n42216\n47922\n4478",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "25\n72772\n43067\n88571\n23402\n99601\n28689\n56718\n94333\n16038\n38614\n82938\n16603\n71750\n87395\n83568\n22513\n89328\n3021\n49580\n44030\n8440\n77772\n46453\n55991\n15417",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "29\n93482\n51016\n16996\n24729\n54645\n20073\n90488\n27846\n42735\n23954\n97290\n25839\n76282\n11916\n99845\n46092\n74794\n54082\n83872\n62041\n62879\n88307\n27262\n4436\n78021\n69477\n17801\n45091\n86355",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "29\n27287\n57503\n51577\n21648\n39794\n46309\n90668\n23052\n72471\n23650\n95556\n98154\n18707\n83653\n2420\n86885\n6431\n19617\n25293\n77344\n71586\n2346\n95241\n78039\n52177\n51011\n40825\n64029\n19598",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "24\n90226\n11699\n44719\n360\n32001\n16776\n55822\n26621\n53581\n49189\n7508\n96217\n45829\n5077\n38563\n81648\n80913\n16720\n60650\n43780\n87638\n22872\n74612\n5938",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "30\n26445143\n24732833\n73529100\n56416373\n27512464\n13981102\n61739686\n5948426\n91618259\n33826501\n78910873\n83456672\n67703463\n95815734\n61933812\n95545125\n93880589\n65182234\n33960534\n85459115\n56005821\n75529778\n52821794\n8835604\n2705637\n65431500\n16775175\n83243144\n65310856\n12294177",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 30)"
    },
    {
      "input": "30\n45573509\n8115455\n28169691\n98473275\n94528420\n11134830\n54904039\n34118808\n28349539\n63879018\n51445252\n62598463\n2675994\n25739012\n98272627\n50507875\n21400061\n84332864\n58189127\n86036013\n84455566\n82460843\n46300373\n94963473\n61793421\n64954781\n91510904\n74707366\n9592340\n84702906",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 30)"
    },
    {
      "input": "30\n1\n100000000\n100000000\n1\n100000000\n90812140\n1\n100000000\n100000000\n1\n100000000\n100000000\n1\n100000000\n1\n1\n91808017\n1\n45657358\n48165650\n100000000\n66317156\n100000000\n1\n1\n1\n49891493\n1\n100000000\n53790247",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 30)"
    },
    {
      "input": "1\n67287187",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 1)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:18",
  "total_test_cases": 20
}
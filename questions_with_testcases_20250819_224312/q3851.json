{
  "problem_code": "problems",
  "title": "Avantgarde and Doughnut",
  "tags": [],
  "text": "Recently Mr. Avantgarde has been assigned the task of delivering doughnuts. He borrowed an electric car for this task. There are N houses and each house has a charging station. There is at least one path of roads connecting each pair of houses. A trip from one house to any other must be completed using at most C rechargings. Car should always be recharged at the beginning of each trip (this counts as one of the C rechargings). As you know that Mr. Avantgarde is a lazy guy, Given the road network and C, compute the minimum range required of the electric car.Note: With one recharging, the car can travel a distance equal to its range.InputInput begins with one integer T (0 < T < 6) denoting the number of test cases. Each test case begins with a line containing three integers N, C, and M (1 < N < 101, 0 < C < 101), where N and C are number of houses and number of rechargings. Next follow M lines each with three integers u, v and d (0 ≤ u, v < N, u ≠ v, 1 ≤ d ≤ 109) indicating that house u and v (0-indexed) are connected bidirectionally with distance d.OutputFor each test case, output minimum range required in each line.SampleInput:2\r\n4 2 4\r\n0 1 100\r\n1 2 200\r\n2 3 300\r\n3 0 400\r\n10 2 15\r\n0 1 113\r\n1 2 314\r\n2 3 271\r\n3 4 141\r\n4 0 173\r\n5 7 235\r\n7 9 979\r\n9 6 402\r\n6 8 431\r\n8 5 462\r\n0 5 411\r\n1 6 855\r\n2 7 921\r\n3 8 355\r\n4 9 113Output:300\r\n688",
  "sample_input": "Input:2\r\n4 2 4\r\n0 1 100\r\n1 2 200\r\n2 3 300\r\n3 0 400\r\n10 2 15\r\n0 1 113\r\n1 2 314\r\n2 3 271\r\n3 4 141\r\n4 0 173\r\n5 7 235\r\n7 9 979\r\n9 6 402\r\n6 8 431\r\n8 5 462\r\n0 5 411\r\n1 6 855\r\n2 7 921\r\n3 8 355\r\n4 9 113Output:300\r\n688",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/CLZDOUGH",
  "scraped_at": "2025-08-17 00:34:24",
  "test_cases": [
    {
      "input": "2\r\n4 2 4\r\n0 1 100\r\n1 2 200\r\n2 3 300\r\n3 0 400\r\n10 2 15\r\n0 1 113\r\n1 2 314\r\n2 3 271\r\n3 4 141\r\n4 0 173\r\n5 7 235\r\n7 9 979\r\n9 6 402\r\n6 8 431\r\n8 5 462\r\n0 5 411\r\n1 6 855\r\n2 7 921\r\n3 8 355\r\n4 9 113",
      "expected_output": "300\r\n688",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2\n8\n2",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n1\n3\n1\n8\n3",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "4\n9\n8\n5\n5",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "20\n57687171\n2969967\n97686557\n68832764\n34269399\n85005267\n79560244\n34426545\n84246074\n45526482\n46416784\n27544074\n77454498\n55586316\n82753984\n87346989\n94468987\n19216187\n96642372\n21367107",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "13\n90114815\n12330820\n47778362\n90703765\n5229595\n65332695\n68408333\n22074671\n36874585\n1377477\n69183038\n57928086\n79096134",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "17\n9379806\n69230277\n10701401\n36780632\n76189330\n80744725\n44928350\n19890813\n12642432\n86783693\n64933559\n63899905\n13441297\n75749605\n11261579\n24338099\n30002294",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "15\n51447875\n28603395\n22349971\n27225978\n26549135\n83057938\n5330061\n96940977\n94628677\n71560039\n7619908\n85581031\n52441816\n30418073\n64457279",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "12\n64772936\n67714846\n2104400\n30059143\n21954762\n94063900\n9005546\n9064959\n24206548\n52380911\n65479446\n84792324",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "54\n3929\n67530\n11547\n10699\n98760\n29019\n23987\n67099\n33204\n42990\n61277\n75753\n579\n86402\n25327\n87851\n97336\n88991\n88010\n36483\n92200\n78288\n16187\n20142\n13836\n84140\n84189\n98470\n79130\n22877\n81632\n69584\n39212\n26128\n29700\n41730\n43267\n87048\n26560\n75848\n63991\n53355\n19234\n91335\n62688\n62446\n9850\n51842\n71797\n10651\n20346\n55\n20950\n27320",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "77\n34749\n68420\n30137\n31401\n77047\n31215\n34950\n53441\n75281\n89416\n38201\n74179\n37559\n31056\n32507\n30630\n46379\n53415\n47454\n10457\n23074\n70581\n32040\n94134\n29837\n64575\n71831\n10423\n95639\n95303\n27020\n90108\n7897\n82985\n50677\n95010\n12079\n30632\n43468\n52516\n76800\n48626\n84455\n86129\n62131\n98028\n60984\n27357\n99613\n77716\n50044\n89319\n31316\n51754\n17663\n16518\n93885\n98392\n8970\n84201\n85925\n39073\n82941\n74081\n51425\n62389\n3350\n60768\n26436\n463\n75733\n45383\n34600\n48077\n57660\n37180\n78755",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "30\n32203\n93645\n16615\n13030\n42855\n9233\n8933\n4728\n96663\n89602\n8072\n4666\n93532\n42672\n76156\n65505\n85411\n58188\n81901\n58860\n24284\n17106\n77710\n85982\n58304\n26829\n96331\n55423\n87916\n66259",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "55\n75853\n94481\n65215\n86593\n10425\n52167\n42453\n14646\n63685\n63485\n96903\n98475\n16169\n25088\n87177\n37539\n93752\n98966\n92564\n35559\n62851\n16900\n71559\n5405\n35235\n88023\n84981\n40523\n90393\n75640\n40057\n19244\n83932\n65185\n34716\n34843\n94482\n81087\n4808\n92956\n82619\n37732\n66614\n39120\n13104\n32179\n90604\n58439\n20993\n37166\n40644\n4871\n37797\n88021\n98831",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "88\n83832\n71893\n69434\n95709\n67238\n9019\n51541\n25775\n60567\n39488\n53630\n81123\n12097\n99340\n42585\n59793\n85625\n17162\n85792\n91802\n42338\n23417\n33068\n83794\n31259\n9783\n67226\n29067\n69491\n6787\n40471\n78178\n65427\n67555\n72733\n60390\n11137\n77013\n72264\n17609\n9449\n94331\n60975\n86516\n27222\n47736\n35051\n75022\n35947\n94984\n16977\n41582\n8409\n98016\n89863\n36757\n5760\n63069\n5594\n67092\n67891\n67367\n67378\n55360\n92587\n15983\n84565\n39554\n27305\n40659\n56242\n40939\n86930\n50320\n86266\n65919\n59231\n5871\n26439\n81364\n7707\n29713\n76741\n95561\n92024\n41486\n91170\n37662",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "58\n28016\n74487\n6882\n1447\n15154\n94355\n37268\n73576\n60399\n79266\n88230\n1334\n7168\n32829\n16969\n65941\n28120\n96938\n89250\n72567\n38826\n47374\n21440\n64691\n54343\n78401\n50234\n90389\n16532\n49680\n81775\n76962\n51549\n5310\n28425\n45651\n55153\n84657\n75956\n55899\n83684\n50425\n42464\n27867\n11829\n38743\n46491\n63037\n14060\n6228\n23762\n62216\n51438\n73094\n24534\n31902\n28193\n58668",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "84\n76025\n52185\n67169\n60185\n12488\n33402\n41457\n73564\n71070\n68225\n45293\n74345\n96385\n765\n88674\n67011\n10529\n22007\n59590\n32730\n37094\n51578\n83862\n90305\n15195\n35185\n194\n7431\n65009\n43242\n64392\n50448\n73644\n70965\n36612\n27713\n37607\n41803\n69758\n75976\n11150\n9451\n22081\n72038\n83543\n82931\n82139\n37219\n2674\n10134\n54413\n88361\n42114\n6369\n10421\n36255\n15086\n25023\n20005\n56727\n16699\n25235\n86107\n35536\n8329\n42651\n63559\n670\n31817\n31990\n46024\n48410\n89679\n6018\n68117\n2020\n79297\n72283\n18667\n68024\n62306\n1528\n92729\n87440",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "101\n77646518\n71304091\n95968617\n8513726\n14375590\n13900858\n32578210\n24014173\n51814591\n67889459\n41043730\n83134155\n6103545\n48506002\n20976531\n92382583\n60860589\n57181228\n70808060\n52324522\n78199741\n53718327\n7757805\n93902418\n6066311\n49320563\n79550914\n71184417\n50776752\n21534820\n96065843\n20842013\n9302297\n64120520\n95125804\n60759883\n65976991\n77516483\n24303874\n90831246\n47077801\n50336037\n91160493\n86509650\n57902085\n46929596\n62793113\n15885196\n11808582\n71367211\n68064684\n21377249\n65071231\n2773606\n55042907\n69483794\n31860249\n49621604\n39958991\n16620195\n18243949\n88055241\n6853339\n72365246\n41098497\n9776003\n94073940\n27586134\n50268653\n11650653\n73667242\n61749799\n21160307\n72112564\n7593388\n96863315\n93774764\n92226112\n94155212\n51015730\n4471752\n26592988\n53645134\n41227505\n94705571\n54424274\n88062118\n71687031\n13637157\n87327637\n1080115\n949765\n59627920\n21434641\n70141913\n57309382\n60658208\n37921439\n31535084\n28851624\n75490971",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 101)"
    },
    {
      "input": "101\n75804875\n83642927\n56627012\n87716383\n26416252\n4449700\n13824949\n22340311\n12253138\n62914789\n59846417\n38980894\n52627780\n35894707\n71052250\n81674346\n83971554\n76847282\n29346207\n54192126\n58803392\n59489757\n77529061\n35068007\n49945935\n78435002\n36630467\n19741073\n96125176\n91397763\n5994031\n92606645\n4049088\n4943040\n21979019\n18022816\n14928158\n14728675\n36096784\n80914697\n98631940\n46967559\n96210657\n57598680\n86982640\n56343843\n55416397\n14239986\n33683415\n69976229\n7099744\n23502727\n15809421\n91297332\n14680256\n90787409\n64282075\n38819182\n87926990\n70964859\n24933210\n47525849\n44012123\n94850844\n1227142\n52001424\n90034256\n33405419\n348870\n9431623\n2050403\n90536569\n93135092\n54383294\n26829013\n98014500\n92630686\n82073597\n93779200\n13204420\n31264438\n58029778\n74301439\n77925171\n20387805\n20962542\n4141651\n4757526\n76801789\n99568185\n14295571\n23313537\n60360508\n24123425\n59413973\n1629125\n52081725\n23299274\n9424031\n3070508\n65813611",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 101)"
    },
    {
      "input": "2\n100000000\n50732212",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 2)"
    },
    {
      "input": "2\n85033189\n38415565",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 2)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:25",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Line up",
  "tags": [],
  "text": "N people are lined up in a straight line to enter a concert. Each person in this line knows how many people in front have shorter or same heights. Let's call the sequence representing these numbers S. So in other words, S[i] means that there are S[i] people in front of the ith person who have shorter or same heights than that of person i.Given the heights of N people and a sequence S, determine the correct order of people lined up. (left is front)InputThe first line of the input is an integer N. (1 ≤ N ≤ 100,000)The next N lines each consists of one integer H. (1 ≤ H ≤ 2×109) These N integers are the heights of people lined up.Then, sequence S is given in a single line, separated by a space.OutputDetermine the correct ordering of people lined up. Total of N lines should be output. The integer on the ith line represents the height of the ith person in the line.ExampleInput:121201671631721451341821551671201191560 1 0 0 3 2 6 7 4 6 9 4Output:134167120119156120167182155163172145",
  "sample_input": "Input:121201671631721451341821551671201191560 1 0 0 3 2 6 7 4 6 9 4Output:134167120119156120167182155163172145",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/KOILINE",
  "scraped_at": "2025-08-17 00:34:19",
  "test_cases": [
    {
      "input": "121201671631721451341821551671201191560 1 0 0 3 2 6 7 4 6 9 4",
      "expected_output": "134167120119156120167182155163172145",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1 3 5 10 6 8 10 10 5 1 10 10",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "10 9 1 10 5 2 10 8 4 3 2 10",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "1 10 2 9 4 5 5 2 7 5 10 10",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "79 75 44 48 6 88 30 12 3 38 72 38",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "5 8 90 69 29 29 62 86 45 2 85 87",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "12 93 55 87 81 87 83 3 7 21 43 10",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "92 56 47 30 23 39 88 33 21 87 5 16",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "82 21 40 8 24 47 85 72 48 97 43 37",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "43 30 21 35 14 48 49 24 48 38 43 12",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "28 41 22 23 26 12 16 46 24 22 20 7",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "32 21 35 41 31 29 24 36 14 23 50 40",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "6 35 10 24 31 45 16 9 44 16 8 41",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "5 29 29 11 49 50 44 48 21 44 40 10",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "29 36 39 32 17 33 26 25 33 50 10 16",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "13 50 11 40 49 15 19 39 15 30 19 50",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "100 100 100 100 100 100 100 100 100 100 100 100",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "100 100 100 100 100 100 100 100 100 100 100 100",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "99 2 1 1 2 2 2 100 99 1 2 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "100 99 2 1 1 100 1 100 100 99 2 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:20",
  "total_test_cases": 20
}
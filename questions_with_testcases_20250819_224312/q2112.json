{
  "problem_code": "problems",
  "title": "Caper Pizza",
  "tags": [],
  "text": "Brunno Doiuna is very fond of caper pizzas, which he always likes to share with his girlfriend. As she also loves capers, it is of the utmost importance, in order to avoid unnecessary quarrels, to split the pizza into two equally-sized slices in such a way that each half contains exactly the same number of capers. However, most caper pizzas also contain a number of peppercorns, and neither Brunno nor his girlfriend likes them. Therefore, it is also crucial that each of the two halves contain the same number of peppercorns. As you can easily observe, depending on the position of capers and peppercorns on the pizza, it is not always possible to make a straight-line cut into the pizza in such a way that the two slices have the same area and the same number of capers and peppercorns lie in each resulting piece. Your task is to design a program to decide if it is possible to make such a cut or not, knowing the positions of capers and peppercorns.InputWe will assume that the pizza is circular and is centered at the origin, and is big enough to contain all capers and peppercorns. We also assume that there is an even number of capers and an even number of  peppercorns, and that no cut goes through any of the capers or pepper balls. Additionally, no pair of peppercorns, capers, or a peppercorn and a caper are aligned with the origin, or form an angle of less than 10−6degrees with the origin.There can be multiple test cases, one after the other. The first line of a test case contains two even integersc≥ 0 andp≥ 0 (where 2 ≤c+p≤ 30000) separated by a space, the number of capers and peppercorns, respectively. Each of the followingclines describes the position of a caper using two floating point numbers, separated by a space, representing itsxandycoordinates. Each of the nextplines holds two floating point numbers, thexandycoordinates of a peppercorn. A blank line follows each test case.The last line of input will contain −1 −1. This marks the end of input – do not write any output for this special last line.OutputYESfor a positive answer,NOotherwise.Sample Input2 2\r\n1 1\r\n1 0\r\n0 1\r\n-1 1\r\n\r\n2 2\r\n1 1\r\n-1 1\r\n0 1\r\n0.1 -1\r\n\r\n-1 -1Sample OutputNO\r\nYESProblemsetter: Manuel Abellanas",
  "sample_input": "2 2\r\n1 1\r\n1 0\r\n0 1\r\n-1 1\r\n\r\n2 2\r\n1 1\r\n-1 1\r\n0 1\r\n0.1 -1\r\n\r\n-1 -1",
  "sample_output": "NO\r\nYES",
  "link": "https://www.spoj.com/problems/CAPPIZZA",
  "scraped_at": "2025-08-17 00:33:45",
  "test_cases": [
    {
      "input": "2 2\r\n1 1\r\n1 0\r\n0 1\r\n-1 1\r\n\r\n2 2\r\n1 1\r\n-1 1\r\n0 1\r\n0.1 -1\r\n\r\n-1 -1",
      "expected_output": "NO\r\nYES",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1 10\n10 9\n4 1\n10 3\n7 6\n7 10\n4 2\n5 3\n8 9\n6 4\n7 5",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "7 2\n6 6\n5 1\n9 5\n8 8\n4 9\n8 6\n7 2\n2 10\n1 3\n2 10",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "9 3\n4 9\n7 10\n1 5\n10 1\n2 5\n5 4\n2 8\n9 4\n10 8\n3 2",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "84 53\n97 52\n14 38\n1 69\n59 27\n98 9\n69 36\n26 31\n28 69\n76 88\n69 78",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "57 37\n53 92\n27 42\n38 25\n83 79\n31 95\n77 39\n50 23\n86 62\n20 65\n44 44",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "72 58\n39 60\n30 79\n35 2\n96 69\n17 5\n46 57\n43 48\n41 18\n86 48\n31 50",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "82 4\n65 67\n48 76\n59 26\n40 45\n35 43\n24 96\n52 55\n21 36\n24 92\n46 56",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "50 68\n21 68\n53 4\n62 41\n33 16\n35 71\n76 20\n24 14\n21 89\n54 63\n20 43",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "401 265\n332 423\n71 260\n264 257\n253 158\n426 303\n267 438\n398 202\n56 75\n290 227\n473 234",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "142 65\n167 304\n428 443\n447 431\n127 115\n424 153\n423 306\n499 490\n313 416\n343 230\n240 195",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "447 184\n232 140\n484 209\n382 293\n441 248\n314 279\n249 389\n291 111\n62 467\n208 61\n122 77",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "215 434\n78 369\n466 465\n264 458\n175 149\n146 132\n321 205\n270 317\n279 223\n480 285\n439 289",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "428 117\n68 156\n329 202\n92 298\n392 472\n127 180\n216 427\n500 180\n289 233\n337 99\n226 183",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "326 124\n346 235\n497 357\n362 472\n106 366\n339 258\n494 162\n313 74\n197 140\n374 309\n338 101",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "269 411\n250 154\n70 263\n159 162\n348 68\n116 484\n491 293\n96 429\n309 421\n94 422\n421 277",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1 2\n1000 1\n2 2\n1 1000\n999 1\n1000 2\n999 1000\n1 2\n1 999\n1000 1000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "999 1000\n999 999\n1 2\n1000 2\n1 2\n2 999\n999 2\n1000 1\n1000 1\n1 1\n2 1000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:19",
  "total_test_cases": 20
}
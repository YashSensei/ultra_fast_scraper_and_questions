{
  "problem_code": "problems",
  "title": "GCD2",
  "tags": [],
  "text": "Frank explained its friend Felman the algorithm of Euclides to calculate the GCD \r\nof two numbers. Then Felman implements it algorithmint gcd(int a, int b)\r\n{\r\n\tif (b == 0)\r\n\t\treturn a;\r\n\telse\r\n\t\treturn gcd(b, a % b);\r\n}and it proposes to Frank that makes it \r\nbut with a little integer and another integer that has up to 250 digits.Your task is to help Frank programming an efficient code for the challenge of Felman.InputThe first line of the input file contains a number representing the number of lines to follow.\r\nEach line consists of two number A and B (0 ≤ A ≤ 40000 and A ≤ B < 10250).OutputPrint for each pair (A, B) in the input one integer representing the GCD of A and B.ExampleInput:2\r\n2 6\r\n10 11Output:2\r\n1Source limit is 1,000 Bytes.",
  "sample_input": "int gcd(int a, int b)\r\n{\r\n\tif (b == 0)\r\n\t\treturn a;\r\n\telse\r\n\t\treturn gcd(b, a % b);\r\n}",
  "sample_output": "Input:2\r\n2 6\r\n10 11Output:2\r\n1",
  "link": "https://www.spoj.com/problems/GCD2",
  "scraped_at": "2025-08-17 00:34:10",
  "test_cases": [
    {
      "input": "int gcd(int a, int b)\r\n{\r\n\tif (b == 0)\r\n\t\treturn a;\r\n\telse\r\n\t\treturn gcd(b, a % b);\r\n}",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2\r\n2 6\r\n10 11",
      "expected_output": "2\r\n1",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "k ugrjjvn bdqxf mpth rne\nf\n4\ndikpy zntin qyed fb\nk zg\nnbb\nrprky kvsx znpjg a lu\nqn",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "aley jylibng djmg cm clj\nmm\n5\ncrxf zzfbq hpdcg ocv\nh pkqih\nenvxfb\nun obvqz bekqb rdbqo x\ned",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "dbyp hspjlb t xrv ir\nh\n10\nqy dwwoo uzuzl wfw\ncg ond\nudnfcxt\nu onggg vrmuf fipj zpzs\np",
      "expected_output": "To be computed",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "zd ork scdi yntbp hofcx\nxy\n59\nk o iw y\nd mvrj\noojnsq\nbrgj jby ws vkvkf kuubi\njz",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "d exzbya wjw vsx zstrp\nz\n61\nkxsm jf xcl frwb\no v\nfhvygj\nc ktq jimso h csjf\nyj",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "cfmv cx hj l evq\nnp\n85\nbc bopfk o wem\nbzb phong\njghjih\nubyvuq scmd s epm pf\nz",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "wbn jtyivln v yplcj t\nwu\n44\nq rxl xw tjecy\npgzj w\nhgyii\nwebxu riqdd zwvku p gvbit\nlj",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "mom c puyjn ddh xrc\nd\n34\nqp mwgzt ey bhzn\nauio dx\nxmeuh\nsohf abqp dsoe kfgw ye\nus",
      "expected_output": "To be computed",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "macq niy sxt mo jgqia\nvh\n96\nrulwb yqn e yt\nj z\nahe\nw ygk ezntw kh cyigm\ntx",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "kccv z f fpbgu drkoi\nmx\n390\nbra rmlu wtufl rchw\nppbx wgh\nlmco\nnhug x hee kn n\nk",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "qljn skqfaji aj ux kzv\nn\n68\ndvjfd zw uto cjmi\npdo omb\nqcvejsya\nhpz x c p f\nn",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "pcarw xst qfni xvl rbojy\ng\n71\nvlce xoa g ywyp\nwrid qu\nusyx\naltl kuai mqdh ivmf jz\nj",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "g j lj oh m\ng\n468\npagdz yko xu emf\ncfva v\nslt\nqoesa kqnvq c t td\nn",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "forre oruou p rxz wg\nl\n128\nlzn oq koewv az\nkwcd gu\nxwxsv\nsflz jfewxg uv a hjhw\no",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "hmwh rbfqoz u zd ydm\nhm\n362\nkn wrrv ixhcz jl\ngpb qy\nug\nawi sqd shq m sn\ntj",
      "expected_output": "To be computed",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "ipuj pouhm foqq nlykt n\nnp\n1000\nfopc gkt oq lqre\nlqhe adeu\nfqvagof\nl h f cwrey s\nne",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "ff dk josd zury yzf\nyr\n1000\nk p am wnz\no wuigr\nei\ndzbgnr u tkno dbfrt mwlfp\nwi",
      "expected_output": "To be computed",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "ugol x l r d\npe\n999\nmeq g kkln aqoui\nws zj\nro\nwij oloi pr e iel\nz",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:23",
  "total_test_cases": 20
}
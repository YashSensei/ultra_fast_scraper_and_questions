{
  "problem_code": "problems",
  "title": "Ada and Cherry",
  "tags": [],
  "text": "As you might already know, Ada the Ladybug is a farmer. She grows cherry and now she wants to collect them. She is wondering about the number of cherries she will collect. But before you could help here, you shall know some biological facts:Firstly, almost everyone think that cherry-tree is a tree. But it might not be true - in fact, it is a graph.Secondly, you have to know, how a cherry looks like. It is not hard to recognize a cherry - it is a node, which is connected to another two nodes, which are NOT connected.NOTE: Even though the cherry-tree structure might be weird, note that there won't be any multi-branches nor self-branches. Anyway do not assume it is not a cherry-forest.This is a cherry:This is NOT a cherry:InputThe first line contains two integers1 ≤ N, M ≤ 105, the number of nodes of cherry-tree and the number of branches (edges) connecting them.The nextMlines contains two integers0 ≤ a, b < N, the branch connecting two nodes.OutputPrint a single line - the number of cherries on the cherry-tree.Example Input4 2\r\n1 2\r\n3 2Example Output1Example Input 25 4\r\n1 2\r\n1 3\r\n1 4\r\n1 0Example Output 26Example Input 36 6\r\n0 1\r\n0 2\r\n2 1\r\n0 3\r\n1 4\r\n5 3Example Output 35",
  "sample_input": "4 2\r\n1 2\r\n3 2",
  "sample_output": "1",
  "link": "https://www.spoj.com/problems/ADACHERY",
  "scraped_at": "2025-08-17 00:34:22",
  "test_cases": [
    {
      "input": "4 2\r\n1 2\r\n3 2",
      "expected_output": "1",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5 1\n2 6\n8 6",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "2 8\n2 8\n1 3",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "2 4\n7 9\n9 2",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "56 56\n89 28\n62 55",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "71 28\n74 95\n78 98",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "66 25\n77 27\n39 96",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "47 76\n62 35\n50 65",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "36 43\n88 2\n65 32",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "147 115\n447 446\n231 423",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "333 370\n178 245\n422 126",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "448 337\n393 309\n197 428",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "176 245\n482 288\n357 362",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "315 293\n482 141\n130 225",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "421 185\n367 172\n340 354",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "326 51\n131 80\n258 295",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 2\n999 2\n999 1000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1000 2\n999 2\n2 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:22",
  "total_test_cases": 20
}
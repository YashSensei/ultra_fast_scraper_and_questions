{
  "problem_code": "problems",
  "title": "Alphabetic Rope2",
  "tags": [],
  "text": "The Alphabetic Rope is now available in the market. The Alphabetic Rope consists of alphabetic characters in each stripe which looks like string. You are given an Alphabetic Rope consisting of lowercase alphabetic characters only. You have to perform some operations on the rope and answers some queries on it and Time is increases by 1. Initial time is 0 and queries are of 4 types:1 X Y: Cut the rope segment from X to Y and join at the front of rope.2 X Y: Cut the rope segment from X to Y and join at the back of rope.3 Y: Print on a new line the character at the Yth position of current rope.4 X Y: Print on a new line the character on Yth position of rope configuration at Xth time.InputThere is only one input. Input begins with single line giving Alphabetic Rope as a string S. Next line contains Q, following Q lines giving queries as mentioned above. (Index used are 0-based)OutputFor each query of type 3 and type 4, print a single character in a new line.Constraints1 ≤ |S| ≤ 10000. (Length of string)1 ≤ Q ≤ 10000. (Number of Queries)ExampleInput:gautambishal\r\n5\r\n3 0\r\n2 0 5\r\n3 1\r\n4 0 0\r\n4 3 0Output:g\r\ni\r\ng\r\nb",
  "sample_input": "Input:gautambishal\r\n5\r\n3 0\r\n2 0 5\r\n3 1\r\n4 0 0\r\n4 3 0Output:g\r\ni\r\ng\r\nb",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/AROPE2",
  "scraped_at": "2025-08-17 00:33:06",
  "test_cases": [
    {
      "input": "gautambishal\r\n5\r\n3 0\r\n2 0 5\r\n3 1\r\n4 0 0\r\n4 3 0",
      "expected_output": "g\r\ni\r\ng\r\nb",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "yem\n6\n10 6\n10 2 10\n9 9\n6 9 4\n4 3 9",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "isutqgpqzu\n9\n5 6\n3 9 2\n2 3\n10 6 1\n3 7 1",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "auznaicvdbk\n4\n8 2\n1 8 7\n6 9\n8 9 7\n10 3 2",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "xchhiw\n56\n51 49\n98 52 73\n1 55\n95 11 90\n89 71 61",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "mymznr\n66\n47 35\n95 83 72\n33 90\n83 73 8\n71 21 69",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "ujcyxbfiabpzeeado\n48\n83 55\n70 86 25\n16 14\n92 33 93\n21 95 97",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "unhecriqschl\n52\n6 58\n97 32 36\n97 33\n15 89 57\n5 5 94",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "s\n57\n19 51\n15 12 86\n4 19\n45 71 66\n13 87 61",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "ndlfjzechqjpsn\n70\n397 58\n497 120 474\n222 145\n201 232 107\n156 310 200",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "adrzkv\n375\n312 360\n390 338 111\n385 393\n278 357 205\n480 273 209",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "bybhuiddh\n352\n423 213\n317 341 205\n193 188\n348 60 186\n206 270 294",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "kglui\n177\n434 134\n413 190 280\n417 425\n130 135 445\n438 255 233",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "rqjxvtwpeda\n310\n325 69\n215 142 56\n444 316\n469 179 412\n454 181 349",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "knngloiqaflpmm\n477\n234 102\n346 282 332\n303 329\n304 328 176\n264 261 217",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "ro\n78\n69 173\n252 331 500\n295 170\n131 171 253\n122 83 235",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "efaudcudgfvhfphdogc\n1000\n1000 1000\n1000 1000 1000\n1000 1000\n1000 1000 1000\n1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "vgmwptlpegnivgyri\n1000\n1000 1000\n1000 1000 1000\n1000 1000\n1000 1000 1000\n1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "isdpn\n1000\n1 999\n2 999 999\n2 1\n999 999 999\n999 1000 1000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "sthcxnjyuobmsyuhiq\n2\n1000 999\n999 2 2\n2 999\n1 1000 2\n999 1 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:15",
  "total_test_cases": 20
}
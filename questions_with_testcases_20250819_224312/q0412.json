{
  "problem_code": "problems",
  "title": "Acronym II",
  "tags": [],
  "text": "An acronym is made of up the initial letter(s) of the words in a phrase, such as EU (European Union) and BREXIT (BRitish EXIT). In this problem, we can also either ignore or consider the conjunction \"and\", and the following adpositions \"in\", \"on\", \"at\", \"to\", \"of\", \"from\", \"for\" and \"with\" when making the acronym, such as BENELUX (BElgium, NEtherlands and LUXembourg) and RADAR (RAdio Detection And Ranging).Given an acronymA, and a list ofNstringsW1,W2...WN, you would like to find out the number of possible combinations of making the given acronym by using all the N strings following their order. That is, the acronym must be made up of at least one initial letter of each word, except the above-mentioned conjunction and adpositions (either skip or use it). BothAand theNstrings only consist of lowercase latin letters. Since the answer can be large, output the answer modulo1000000007.Note: This is a harder version of the problemACRYM, with larger constraints. Please read the input section carefully.InputThe first line is the number of test casesT. (1 ≤ T ≤ 20)For each test case, it starts with one integerN. (1 ≤ N ≤ 200)Next line is a stringA. (1 ≤ |A| ≤ 50000)Following N lines, each consisting of one stringWi. (1 ≤ |Wi| ≤ 250)It is guaranteed that W1is neither conjunction nor adposition.OutputOutput one integer indicating the number of possible combinations.ExampleInput:3\r\n3\r\nduckhim\r\nduck\r\nhello\r\nmoto\r\n7\r\nnatiofforessaa\r\nnational\r\noffice\r\nfor\r\nforest\r\nsafety\r\nin\r\naachen\r\n4\r\nwhiskey\r\nwhat\r\nis\r\nsecret\r\nkeyOutput:0\r\n4\r\n1ExplanationIn case 1, no combination is possible.In case 2, there are four possible combinations:NATIonalOFfice forFOREStSAfety inAachenNATIonalOFfice forFOREStSafety inAAchenNATIonalOfficeForFOREStSAfety inAachenNATIonalOfficeForFOREStSafety inAAchenIn case 3, only one possible combination exists:WHatIsSecretKEY",
  "sample_input": "Input:3\r\n3\r\nduckhim\r\nduck\r\nhello\r\nmoto\r\n7\r\nnatiofforessaa\r\nnational\r\noffice\r\nfor\r\nforest\r\nsafety\r\nin\r\naachen\r\n4\r\nwhiskey\r\nwhat\r\nis\r\nsecret\r\nkeyOutput:0\r\n4\r\n1",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/ACRYM2",
  "scraped_at": "2025-08-17 00:33:08",
  "test_cases": [
    {
      "input": "3\r\n3\r\nduckhim\r\nduck\r\nhello\r\nmoto\r\n7\r\nnatiofforessaa\r\nnational\r\noffice\r\nfor\r\nforest\r\nsafety\r\nin\r\naachen\r\n4\r\nwhiskey\r\nwhat\r\nis\r\nsecret\r\nkey",
      "expected_output": "0\r\n4\r\n1",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1\n1",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "3\n1\n8\n4",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "3\n1\n8\n10",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "6\n67406144\n42101916\n63125773\n7123440\n24931028\n8187424",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "7\n60302333\n93457522\n98889720\n95788979\n647619\n80162987\n98121460",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "19\n87191929\n78031026\n30957508\n37699384\n68903867\n95370675\n61074724\n28984590\n90821043\n78155947\n41113811\n98119219\n38794586\n19466360\n51745320\n94423526\n73029918\n3675333\n66827780",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "17\n66872456\n62964253\n4961930\n40468919\n46699886\n49291796\n93750998\n12529528\n2361070\n25812161\n86347743\n75238189\n10002968\n84586527\n88307712\n8226318\n86402211",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "8\n6725048\n95407292\n54841508\n32654193\n14826881\n27190383\n91372415\n40807221",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "26\n5516\n13146\n50847\n60165\n84213\n16127\n6634\n68188\n75398\n56537\n47566\n99448\n12967\n92880\n16519\n62973\n11144\n38121\n88278\n24308\n62111\n84157\n98016\n59410\n18460\n81444",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "154\n56875\n34937\n35768\n67843\n85246\n74807\n68272\n54561\n90493\n68627\n46259\n73916\n47973\n18392\n39797\n67220\n63646\n31966\n79848\n55204\n88151\n91822\n50314\n80521\n59002\n24929\n40441\n45412\n43865\n14674\n29023\n7134\n95872\n99090\n15261\n59464\n84180\n22639\n97771\n91078\n29321\n40223\n82888\n38321\n1158\n74807\n2785\n56073\n35621\n52683\n67017\n39400\n1436\n24909\n20123\n3132\n91838\n6420\n55266\n44744\n41916\n81487\n30730\n9586\n30717\n37776\n63535\n5598\n91046\n15192\n80534\n88106\n65353\n13024\n10342\n34013\n94068\n23253\n34913\n39153\n8369\n20278\n38898\n7566\n85850\n37197\n28325\n76872\n3931\n71804\n3690\n52455\n32437\n15947\n99126\n48790\n46423\n88214\n14031\n40919\n36496\n59645\n51135\n65261\n34115\n4214\n94489\n72341\n53637\n70498\n15706\n33884\n29730\n81960\n59818\n85622\n24494\n72555\n35415\n67275\n15950\n59395\n11024\n7834\n67674\n70777\n38659\n31847\n50235\n24066\n69597\n3514\n78230\n55054\n47178\n92594\n4084\n78277\n22998\n55717\n11163\n88948\n32703\n13884\n29375\n90983\n69855\n39690\n30485\n6321\n27398\n64017\n4241\n93827",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "168\n37752\n8769\n45853\n88760\n86130\n77542\n21040\n3554\n97650\n17495\n4579\n68962\n86916\n85040\n45559\n4904\n56941\n2272\n61804\n84730\n803\n13700\n12515\n67331\n14375\n178\n16793\n15502\n28245\n71657\n67884\n89933\n24005\n77062\n36238\n69431\n45742\n24101\n23286\n62626\n11460\n34191\n39435\n15273\n6281\n90614\n39657\n96181\n24274\n75791\n360\n24152\n7022\n29075\n70374\n59700\n41493\n85793\n10467\n48295\n81249\n8170\n67871\n92138\n12158\n97014\n75491\n68974\n21365\n84486\n98938\n60109\n52952\n86857\n66861\n42667\n24052\n23800\n2539\n53288\n68704\n9552\n88774\n17184\n45360\n77089\n23706\n88999\n39618\n72444\n43259\n62626\n68115\n93060\n20596\n83689\n22079\n9214\n76816\n53860\n31849\n7667\n53027\n79165\n54426\n66638\n17938\n92824\n83186\n26824\n18542\n28336\n87370\n82869\n8139\n92271\n57977\n6612\n4361\n90086\n85742\n90687\n24306\n79345\n54246\n18264\n95446\n34436\n29709\n44847\n6764\n97075\n74318\n20444\n56999\n77896\n69511\n83050\n90821\n57406\n96125\n98822\n78838\n63285\n61531\n42047\n19592\n39082\n12116\n31455\n61387\n29539\n54776\n962\n46567\n79565\n47742\n32318\n52235\n74256\n37231\n16580\n8018\n35381\n17537\n40561\n37294\n1311",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "168\n66643\n71890\n33974\n699\n89004\n11970\n19112\n42531\n14805\n85845\n49057\n35747\n47755\n64932\n60562\n45301\n24441\n794\n25002\n23702\n41823\n43003\n30951\n46606\n68013\n75856\n27107\n19591\n67832\n91498\n72967\n67705\n13890\n58071\n30019\n37977\n43429\n77161\n66354\n86870\n32953\n33211\n71814\n37449\n25371\n83433\n40673\n64497\n27193\n14926\n51219\n5373\n96233\n95723\n58812\n82360\n98713\n8092\n87174\n44180\n11864\n44380\n14997\n2784\n10092\n44109\n65756\n84379\n47601\n86263\n29335\n98025\n67473\n60240\n13828\n10742\n38953\n83034\n54502\n78736\n39994\n62558\n47675\n71106\n46617\n68381\n52224\n5718\n75077\n69914\n88248\n53329\n45819\n96864\n3720\n26257\n36500\n31983\n74289\n19263\n85049\n78603\n73296\n26492\n93903\n57799\n49291\n94937\n46020\n72782\n66705\n87196\n82986\n53107\n54262\n82279\n11663\n22183\n24479\n53725\n8139\n36122\n68515\n71931\n67676\n91584\n8330\n75342\n70839\n71937\n19269\n53480\n55560\n79493\n11084\n2765\n37189\n22201\n70101\n18939\n14660\n52451\n44344\n68758\n40805\n21890\n33776\n47029\n48341\n60031\n38035\n25200\n90876\n33225\n40526\n23915\n26061\n85901\n22860\n75457\n45242\n28725\n46944\n38218\n46966\n20790\n39413\n81621",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "140\n864\n47193\n61645\n11355\n45392\n70106\n24595\n70269\n91145\n2675\n2682\n74180\n28283\n71410\n34179\n27300\n81343\n4585\n22439\n41312\n90467\n94218\n70990\n69101\n35959\n67165\n34028\n17736\n87987\n87021\n73128\n98730\n31388\n96086\n42492\n15868\n64907\n68958\n97970\n23427\n9625\n87237\n15577\n79905\n70747\n29313\n81408\n74746\n21893\n92886\n63235\n62548\n41222\n2080\n25316\n67052\n55905\n78671\n98588\n16961\n85277\n87103\n76574\n98282\n32536\n39881\n2909\n76701\n442\n5099\n37813\n7080\n33564\n78261\n70518\n25940\n78163\n13737\n94470\n12135\n34401\n61816\n36937\n24708\n41140\n27282\n64279\n83930\n17928\n62824\n58582\n35728\n57375\n28946\n84181\n99677\n38884\n2985\n89159\n59788\n52663\n47500\n89279\n94193\n11769\n21011\n13498\n82270\n5422\n26415\n20869\n40346\n60910\n64749\n71769\n18544\n87249\n99240\n36726\n84415\n29822\n50083\n9927\n67096\n29006\n52766\n28943\n87223\n64523\n7515\n57912\n49278\n11646\n98463\n89205\n12761\n33348\n1563\n52094\n52176",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "162\n14008\n68991\n42736\n45066\n11987\n10366\n28547\n67266\n51827\n15496\n2296\n86657\n89248\n47615\n88859\n92778\n36166\n68430\n21253\n12120\n58952\n66871\n34689\n37419\n78399\n44638\n27405\n61591\n36280\n95712\n9964\n64812\n25561\n47099\n5027\n79596\n4490\n22531\n48686\n92542\n9615\n29355\n60461\n1836\n69052\n1491\n50821\n60488\n17632\n23309\n59984\n49825\n38435\n84668\n52052\n78330\n83834\n56992\n14463\n2397\n68577\n51909\n81006\n39515\n17067\n16117\n7922\n29136\n79924\n42048\n52744\n69994\n66624\n3464\n40648\n60774\n66171\n29130\n11839\n31517\n16125\n66685\n10023\n30044\n21798\n7204\n48515\n32123\n82588\n23744\n4786\n99611\n13009\n72693\n48783\n10216\n78034\n92984\n62812\n29292\n99329\n17061\n4923\n265\n3446\n1592\n78301\n19160\n6479\n61775\n96658\n9243\n14212\n32106\n53545\n69359\n27418\n96427\n98228\n38881\n24509\n11193\n40880\n9298\n82643\n62721\n28963\n70869\n29138\n55515\n20280\n58594\n74053\n14920\n38525\n76308\n49335\n80899\n681\n69001\n72902\n55237\n63646\n19658\n19108\n83548\n17807\n46350\n44547\n2112\n76116\n96596\n70387\n14937\n91672\n92094\n23352\n63336\n99754\n76345\n80006\n71054",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "41\n62685\n41015\n11888\n7228\n9357\n91059\n18252\n44648\n87410\n58573\n57852\n20228\n65891\n77537\n43549\n92843\n58569\n91864\n54327\n63758\n28315\n82058\n67147\n60343\n101\n19813\n23182\n36112\n31825\n43552\n97319\n43106\n22932\n6664\n86250\n25621\n17968\n19603\n66922\n72299\n56630",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "200\n91544441\n51304597\n21700293\n52120316\n71708693\n39866869\n73219169\n66266397\n67927156\n99371442\n88228495\n44984511\n57376431\n29687808\n30698113\n5546486\n95089476\n50764665\n69772182\n20503130\n47680056\n56762822\n88711264\n24448265\n60797241\n92234039\n4457191\n96661479\n51336157\n67614943\n86196067\n3349131\n42943837\n40781614\n23192511\n86762141\n42682203\n47354861\n60335119\n13934491\n52722293\n51259019\n52325872\n67323015\n88527363\n7698476\n27682466\n96603004\n71749436\n82461094\n69359650\n94154294\n59518087\n20556529\n52529991\n2307100\n25412741\n38105557\n80412702\n29337407\n62832352\n92852200\n21384399\n92520711\n32763948\n24574561\n29575417\n14676676\n62411771\n40073638\n58133910\n12214622\n43852430\n95547492\n88820629\n92500778\n40020252\n57465079\n11226383\n34455937\n52400369\n52272602\n65905938\n37308343\n18513165\n81694385\n8448407\n19967050\n34001666\n14948231\n26534760\n40652431\n55908205\n98958885\n38678954\n56035532\n10295957\n98552917\n67762863\n6116133\n44084970\n81550011\n7401835\n89772600\n4118452\n33437939\n40060369\n81169897\n21298257\n1081799\n94397432\n8370073\n22941460\n20552462\n66458375\n83383890\n92970266\n42046952\n87812883\n92390171\n30897991\n87156747\n17168760\n81651284\n93730342\n36345067\n59880718\n13278671\n93111457\n1093576\n15781178\n17311558\n37165749\n67865108\n20222634\n78256928\n14152351\n15182683\n44852283\n63816956\n90772871\n80791686\n43724901\n26201278\n32602887\n61671121\n28381562\n1681663\n31997183\n1245339\n73491538\n97927268\n2030211\n98319767\n73051411\n66431732\n37640399\n35214380\n82045553\n60260610\n90505649\n78540002\n53895429\n19985977\n77516705\n1939192\n24541128\n39978475\n18106827\n61224291\n27472762\n48374664\n98840976\n30229112\n9710336\n80487664\n82087085\n29485081\n95588632\n41387647\n12306127\n92379398\n73074169\n11137412\n89640864\n45320636\n94238936\n25789648\n75188901\n7872460\n18065819\n1306386\n29978355\n61775113\n85911428\n87565166\n19113974\n28070168\n35581496\n78172907",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 200)"
    },
    {
      "input": "200\n49660688\n36639454\n98482203\n27648027\n31397788\n96224656\n6242553\n76884436\n51678627\n91564134\n42625019\n19382858\n78690771\n93065200\n19298162\n65630236\n47789937\n34547306\n4712369\n3800929\n8947911\n61629777\n85089884\n44381554\n87974706\n38532652\n18363734\n47181693\n41899511\n61036963\n35014712\n88946592\n38168961\n20848735\n28526859\n48352958\n75258839\n74118474\n13829342\n19070257\n69606655\n41923750\n65825363\n35294754\n24854734\n19957119\n47961848\n85210414\n48094660\n15178992\n59651425\n68450135\n56521087\n61803973\n59759648\n13800643\n46824583\n61065618\n97703191\n84469878\n96771239\n38755694\n41895759\n8809833\n86517248\n48327177\n64838128\n9404303\n87447402\n72801758\n36578009\n50052778\n67720566\n57982254\n88767367\n34541464\n2095729\n57855897\n65832473\n29547523\n4923734\n93137063\n81130990\n84032623\n69049540\n36199344\n32649674\n43132656\n74415100\n62371954\n6493290\n45282908\n97117268\n64327643\n1682964\n20018864\n56377214\n48800797\n85546976\n66746584\n24083415\n91836371\n39637632\n55674653\n35381672\n72534171\n62613322\n25437116\n34682507\n22866850\n2322240\n31712598\n56013908\n51240648\n15609111\n50473206\n34904142\n99200125\n82150499\n10123152\n66236626\n14535207\n97073461\n2379755\n23800493\n96727520\n10594237\n85769690\n57034586\n53794800\n92016750\n69359083\n90675932\n82083375\n61954752\n94710688\n15979352\n54747065\n13643230\n87723060\n57519115\n28123395\n1155870\n1778208\n93788442\n20006299\n71542987\n72537791\n3054017\n15084077\n16171741\n17460861\n20570443\n62735339\n50237510\n75624070\n69441914\n14274316\n80449322\n27573027\n51460159\n28040234\n97057971\n43049899\n54975364\n94360395\n44633792\n1804193\n862897\n83101665\n61207102\n45871354\n27182134\n95105278\n65128274\n45437026\n55834769\n58272732\n92358549\n59373905\n58124108\n36116255\n83185744\n27241630\n89855817\n38723098\n28881962\n11564044\n46188493\n34029523\n84793999\n20180642\n42200523\n3818845\n12180355\n39787380\n54729991\n72036963\n63802870\n18990692",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 200)"
    },
    {
      "input": "200\n1\n23756831\n45282673\n1\n1\n81482172\n100000000\n60525377\n64893955\n100000000\n38282637\n100000000\n100000000\n1\n21034062\n46877017\n1\n1\n1\n100000000\n100000000\n1\n38984058\n1\n100000000\n1\n1\n50591567\n96090080\n1\n1\n100000000\n10327826\n100000000\n74331771\n100000000\n100000000\n100000000\n100000000\n1\n100000000\n99460408\n1\n1\n1\n43426348\n100000000\n1\n100000000\n1\n1\n24994341\n100000000\n1\n1\n1\n100000000\n81366441\n52474870\n100000000\n1\n1\n100000000\n1\n62651066\n57105339\n100000000\n1\n100000000\n100000000\n100000000\n100000000\n100000000\n21688724\n100000000\n1\n77178087\n1\n100000000\n43967831\n1\n50695993\n1\n39602730\n1\n100000000\n37454119\n58596297\n100000000\n1\n73647303\n35437564\n99336578\n22914007\n100000000\n98984203\n1\n1\n100000000\n11085286\n1\n1\n100000000\n100000000\n1\n100000000\n100000000\n1\n100000000\n2773550\n100000000\n1\n1\n100000000\n100000000\n100000000\n1\n100000000\n100000000\n100000000\n7146972\n83739392\n100000000\n100000000\n1\n1\n1\n100000000\n1\n1\n56041144\n1\n1\n24431693\n69354932\n20709310\n1\n1\n1\n27302158\n32670417\n100000000\n1\n1\n56462310\n12544173\n9682374\n1\n1\n93406582\n49293319\n1\n86868289\n100000000\n17759992\n1\n1\n1\n1\n100000000\n1\n100000000\n100000000\n84717145\n71797830\n21471442\n100000000\n1\n1\n100000000\n1\n100000000\n100000000\n1\n45499472\n100000000\n1\n1\n36211759\n14582922\n1\n7150867\n2722197\n1\n1\n1\n68987427\n23053010\n1\n64871861\n100000000\n1\n1\n100000000\n1\n1\n100000000\n100000000\n41598403\n14274434",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 200)"
    },
    {
      "input": "200\n88024120\n64037561\n1\n100000000\n1\n33839822\n1\n100000000\n86463932\n62626313\n823154\n100000000\n1\n1\n60268268\n1\n1\n1\n100000000\n1\n100000000\n64640876\n1\n1\n100000000\n19098160\n100000000\n1\n1\n100000000\n100000000\n456328\n1\n100000000\n100000000\n100000000\n1\n100000000\n80192143\n35176835\n100000000\n1\n1\n1\n32008016\n1\n100000000\n100000000\n100000000\n1\n100000000\n89603132\n100000000\n1\n1\n1\n1\n1\n1\n1\n92081056\n19687425\n1\n1\n41320350\n1\n100000000\n1\n1\n1\n41021691\n28932792\n100000000\n61701585\n1\n100000000\n12049814\n100000000\n100000000\n100000000\n100000000\n3619168\n100000000\n72576488\n1\n33819570\n17231075\n1\n39429879\n1\n1\n1\n46647870\n1\n55452106\n91234298\n62286532\n63757710\n81817298\n100000000\n100000000\n100000000\n1\n100000000\n44680228\n56948303\n100000000\n94510290\n1\n1\n100000000\n1\n1\n45318418\n58848218\n60509528\n1\n20344682\n1\n82275056\n1\n15529245\n1\n100000000\n1\n98655719\n8532687\n5602675\n1\n1\n75233835\n1\n79747918\n1\n1\n100000000\n1\n100000000\n1\n77020280\n1\n49709040\n1\n6884706\n100000000\n83442235\n100000000\n20378423\n94498075\n2846594\n45150553\n100000000\n27917495\n15647523\n95645470\n95120877\n72321594\n1\n100000000\n54594614\n1\n1\n1\n84274644\n100000000\n39588684\n77255084\n1\n76911384\n63007844\n100000000\n1\n56227852\n91059431\n92348559\n1\n72523622\n1\n1\n100000000\n100000000\n54708599\n100000000\n1\n100000000\n100000000\n100000000\n100000000\n35530693\n100000000\n52468467\n100000000\n100000000\n10091323\n1\n8846395\n1\n1\n17223730\n1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 200)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:14",
  "total_test_cases": 20
}
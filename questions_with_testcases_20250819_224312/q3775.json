{
  "problem_code": "problems",
  "title": "In case of failure",
  "tags": [],
  "text": "To help their clients deal with faulty Cash Machines, the board of The Planar Bank has decided to stick a label expressing sincere regret and sorrow of the bank about the failure on every ATM. The very same label would gently ask the customer to calmly head to the nearest Machine (that should hopefully work fine).In order to do so, a list of two-dimensional locations of all n ATMs has been prepared, and your task is to find for each of them the one closest with respect to the Euclidean distance.InputThe input contains several test cases. The very first line contains the number of cases t (t ≤ 15) that follow. Each test cases begin with the number of Cash Machines n (2 ≤ n ≤ 105). Each of the next n lines contain the coordinates of one Cash Machine x, y (0 ≤ x, y ≤ 109) separated by a space. No two points in one test case will coincide.OutputFor each test case output n lines. i-th of them should contain the squared distance between the i-th ATM from the input and its nearest neighbour.ExampleInput:2\r\n10\r\n17 41\r\n0 34\r\n24 19\r\n8 28\r\n14 12\r\n45 5\r\n27 31\r\n41 11\r\n42 45\r\n36 27\r\n15\r\n0 0\r\n1 2\r\n2 3\r\n3 2\r\n4 0\r\n8 4\r\n7 4\r\n6 3\r\n6 1\r\n8 0\r\n11 0\r\n12 2\r\n13 1\r\n14 2\r\n15 0Output:200\r\n100\r\n149\r\n100\r\n149\r\n52\r\n97\r\n52\r\n360\r\n97\r\n5\r\n2\r\n2\r\n2\r\n5\r\n1\r\n1\r\n2\r\n4\r\n5\r\n5\r\n2\r\n2\r\n2\r\n5",
  "sample_input": "Input:2\r\n10\r\n17 41\r\n0 34\r\n24 19\r\n8 28\r\n14 12\r\n45 5\r\n27 31\r\n41 11\r\n42 45\r\n36 27\r\n15\r\n0 0\r\n1 2\r\n2 3\r\n3 2\r\n4 0\r\n8 4\r\n7 4\r\n6 3\r\n6 1\r\n8 0\r\n11 0\r\n12 2\r\n13 1\r\n14 2\r\n15 0Output:200\r\n100\r\n149\r\n100\r\n149\r\n52\r\n97\r\n52\r\n360\r\n97\r\n5\r\n2\r\n2\r\n2\r\n5\r\n1\r\n1\r\n2\r\n4\r\n5\r\n5\r\n2\r\n2\r\n2\r\n5",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/FAILURE",
  "scraped_at": "2025-08-17 00:34:28",
  "test_cases": [
    {
      "input": "2\r\n10\r\n17 41\r\n0 34\r\n24 19\r\n8 28\r\n14 12\r\n45 5\r\n27 31\r\n41 11\r\n42 45\r\n36 27\r\n15\r\n0 0\r\n1 2\r\n2 3\r\n3 2\r\n4 0\r\n8 4\r\n7 4\r\n6 3\r\n6 1\r\n8 0\r\n11 0\r\n12 2\r\n13 1\r\n14 2\r\n15 0",
      "expected_output": "200\r\n100\r\n149\r\n100\r\n149\r\n52\r\n97\r\n52\r\n360\r\n97\r\n5\r\n2\r\n2\r\n2\r\n5\r\n1\r\n1\r\n2\r\n4\r\n5\r\n5\r\n2\r\n2\r\n2\r\n5",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3\n6\n5\n8",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "4\n6\n9\n2\n4",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "2\n10\n4",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "6\n84266592\n94858179\n67061112\n93336287\n93349853\n68447660",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "6\n89651095\n60093902\n67738982\n22146006\n38474168\n37216705",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "5\n26861945\n23684192\n39360173\n88960281\n9710536",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "6\n72632291\n29436088\n88848701\n46140986\n44850808\n70936597",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "6\n74712737\n6024290\n14772092\n37763801\n69827227\n99354358",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "47\n44122\n71252\n35921\n12016\n49949\n24387\n56977\n2011\n11257\n55653\n46968\n24265\n29160\n46053\n3287\n92504\n80414\n41936\n84492\n56166\n70874\n60049\n21450\n53089\n265\n67247\n67777\n55737\n86562\n46161\n13205\n3603\n55013\n67766\n83140\n6079\n44429\n95061\n93217\n46463\n38382\n15506\n85561\n14543\n59533\n73706\n19926",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "79\n592\n94002\n49949\n56136\n76216\n98418\n38976\n37570\n26169\n9527\n66058\n55064\n19047\n16104\n89601\n7901\n87801\n73427\n29303\n94567\n78709\n331\n8042\n67408\n24054\n99941\n80156\n91934\n16658\n42179\n54595\n5793\n88505\n23553\n28138\n70064\n31418\n52907\n46329\n41185\n21762\n76104\n13328\n9765\n51166\n10655\n79067\n7011\n56850\n98372\n51257\n733\n28433\n54141\n7116\n74300\n84368\n3811\n16882\n12077\n5757\n71638\n10948\n75874\n17767\n83683\n79056\n8255\n29508\n89235\n44541\n98008\n51954\n15638\n33964\n5062\n21462\n48287\n66833",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "89\n60732\n67104\n64469\n56703\n2605\n20353\n17802\n78473\n24117\n30906\n20408\n6357\n53824\n28685\n1966\n88512\n35462\n2175\n41885\n25949\n7172\n33272\n3823\n84337\n68843\n44111\n23666\n79571\n91597\n89955\n66324\n70943\n89675\n17965\n46460\n55171\n11979\n57541\n38133\n2027\n60727\n19378\n97621\n21814\n88319\n28410\n91240\n95100\n83895\n69026\n61559\n44697\n72805\n67259\n35882\n25071\n68551\n57385\n95823\n33278\n77874\n22271\n55424\n79836\n41997\n98687\n6179\n11249\n78230\n9205\n60611\n70598\n99959\n28911\n7408\n11022\n16596\n93347\n63814\n90007\n39219\n10642\n21285\n61744\n10548\n45119\n32853\n50775\n99010",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "95\n43123\n44026\n44272\n26486\n91629\n70534\n19937\n58176\n27444\n44017\n29156\n4017\n62427\n56349\n12874\n67102\n23106\n70973\n23917\n142\n94\n36361\n55805\n57741\n25469\n19850\n48912\n20288\n32742\n37974\n42486\n21783\n35417\n82238\n90788\n91144\n64327\n97240\n5747\n39121\n27052\n93781\n75416\n94573\n66164\n27520\n43408\n53569\n64526\n37283\n84997\n27423\n8776\n25845\n33808\n3476\n53379\n91284\n51344\n83460\n45420\n85365\n94234\n57481\n75155\n57607\n55125\n22249\n4628\n16917\n54934\n9973\n58868\n52170\n4731\n79815\n54688\n74321\n8097\n43708\n14788\n57568\n68814\n91279\n74095\n12408\n75607\n65690\n48733\n17857\n39781\n21650\n58773\n81973\n7656",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "69\n29184\n36338\n31126\n86433\n65868\n48929\n79277\n44150\n66041\n39429\n43186\n32678\n1572\n13971\n13329\n20030\n67246\n63757\n85994\n39427\n10697\n99787\n50045\n99624\n22930\n84286\n61058\n42983\n36156\n73071\n96914\n91570\n58050\n45742\n52368\n85444\n45998\n10871\n72489\n3264\n74942\n9084\n98320\n12332\n76329\n70159\n78973\n13654\n12384\n58529\n90034\n8878\n34674\n85645\n24770\n94109\n52810\n21470\n83493\n58286\n28632\n55455\n75874\n31603\n25894\n41987\n85608\n44899\n57506",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "31\n1233\n92551\n44664\n51632\n86713\n64402\n23769\n8202\n83495\n28381\n89044\n98581\n999\n47877\n49186\n23669\n48120\n159\n4099\n892\n90518\n21497\n20168\n50457\n40264\n73531\n86395\n41987\n1789\n21907\n83636",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "100\n93822\n89505\n12284\n6013\n66250\n8682\n22246\n83881\n47795\n4150\n63981\n90874\n11095\n10526\n40168\n59230\n74852\n44083\n85513\n97321\n77437\n22078\n10253\n18550\n38499\n59198\n55113\n71420\n72440\n15362\n79094\n36556\n43412\n87571\n20685\n70787\n54210\n75768\n19974\n83881\n39930\n18813\n64432\n32773\n87482\n88499\n71905\n30919\n76224\n70312\n97425\n11003\n5818\n47954\n43400\n70483\n48337\n53168\n39584\n25905\n74198\n82889\n81547\n69062\n1686\n37019\n58855\n90137\n87457\n34309\n17790\n39924\n81101\n63041\n78964\n14792\n51368\n50261\n86095\n54068\n79344\n8042\n74906\n19093\n24124\n10829\n30941\n21332\n32503\n14635\n43530\n46793\n92107\n99784\n99619\n4911\n87282\n61464\n19961\n75366",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "105\n28702403\n20597121\n19832901\n71133434\n90155672\n55706527\n19007811\n48240795\n5269973\n74577583\n37039749\n99701406\n75856088\n34926148\n77018625\n94811313\n84784477\n43493624\n37456966\n16975423\n87528443\n69030748\n57841111\n42926928\n22796353\n14747666\n50102311\n17874895\n38287712\n36245623\n86894775\n84088154\n92822820\n31116475\n53799127\n79289132\n99540838\n7595092\n51616951\n6527245\n53418425\n80586617\n16140562\n63678023\n58345388\n3750762\n45931760\n61999100\n17083623\n2165144\n32539630\n89976720\n66891840\n91465344\n50311440\n99695482\n78369929\n95635134\n77270720\n64767399\n4258606\n57081335\n58277424\n31884462\n64505391\n75752274\n96248132\n78884281\n62239167\n43982673\n32420889\n84002663\n55686860\n48913403\n94505730\n8799002\n31564437\n60008849\n65008072\n27867355\n9291466\n50557119\n30251880\n59248101\n35096537\n69681476\n88832503\n18519273\n78370986\n30485193\n71220103\n49829699\n68105754\n93650035\n89662506\n28557296\n64297904\n899861\n35695714\n58080247\n93280311\n90919067\n9885179\n30234132\n50548116",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "105\n2884598\n12894535\n46482574\n68001697\n94664481\n25934457\n82104508\n87784654\n49620484\n22740698\n19135608\n48473756\n40380724\n82987335\n65432236\n59858253\n83513589\n16406840\n15297425\n41657135\n331342\n44706995\n72290064\n67154700\n19840903\n67597186\n80408945\n46599237\n68304148\n85544166\n78150800\n8897658\n74494785\n81614383\n18769382\n86006041\n55460215\n79539252\n54133118\n61389326\n38823712\n61778481\n79605702\n34888854\n5712474\n29273707\n83076624\n24003247\n33301378\n28444105\n45084103\n99381308\n57900145\n50764064\n21733259\n98313476\n95121579\n17405115\n13214563\n11548634\n74173740\n77930984\n43954109\n23204105\n28786916\n30699463\n52166084\n82909765\n5989489\n36705230\n85216738\n54773014\n88308116\n46588349\n41769913\n42983197\n63196991\n32728835\n46925788\n89618169\n96672225\n49311898\n65865989\n86299208\n80803209\n45392984\n88455314\n83400893\n67351536\n98713555\n3029581\n14031406\n8356476\n6792108\n16632881\n89938457\n77405395\n39526661\n83272746\n21810186\n32513143\n48890756\n53810432\n17294729\n32455994",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "1\n1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 1)"
    },
    {
      "input": "2\n100000000\n60196655",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 2)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:24",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Coding Test",
  "tags": [],
  "text": "Great programmer “Tourist” is attending a coding test. In this test he is asked to solve an easy problem. The problem description is:There is an arrayaconsists ofnintegers and another nonnegative integerx. He need to find the number of pair (i, j) wherei ≠ jandai– aj= x.As it is very easy for him, he gave you this problem and start trying another hard problem. Can you solve this for him?InputInput starts with an integert (1 ≤ t ≤ 10),number of test case.Each case contains two integern (1 ≤ n ≤ 105),andx (0 ≤ x ≤ 109).Next line contains n separated integersai(1 ≤ ai≤ 109).OutputFor each case, print the case number and the number of pairs which meet the above condition.ExampleInput:2\r\n5 3\r\n5 1 4 2 3\r\n10 2\r\n12 17 19 13 17 11 17 12 15 14Output:Case 1: 2\r\nCase 2: 10",
  "sample_input": "Input:2\r\n5 3\r\n5 1 4 2 3\r\n10 2\r\n12 17 19 13 17 11 17 12 15 14Output:Case 1: 2\r\nCase 2: 10",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/REAYZCODETST",
  "scraped_at": "2025-08-17 00:33:26",
  "test_cases": [
    {
      "input": "2\r\n5 3\r\n5 1 4 2 3\r\n10 2\r\n12 17 19 13 17 11 17 12 15 14",
      "expected_output": "Case 1: 2\r\nCase 2: 10",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3\n6\n2\n1",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n1",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "3\n3\n9\n6",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "14\n84286350\n85033196\n88776236\n21239144\n76504324\n6690212\n13765927\n90760090\n87423086\n75044848\n27474065\n33514793\n49836507\n56049893",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "18\n60225876\n79851713\n82970190\n39599321\n24837888\n43352539\n67567155\n47417453\n55042682\n39240965\n10166778\n14339103\n7528142\n85774152\n89397107\n40504416\n97593860\n37903413",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "19\n56649148\n58498724\n61727501\n59560023\n75820121\n67033612\n10125046\n22170278\n60265674\n76209136\n24185201\n73316485\n68198772\n20595528\n1825172\n61741108\n65152287\n36811215\n10808509",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "19\n37180890\n85968842\n23346045\n93290236\n30971145\n57840569\n159241\n92694522\n39321969\n59111356\n45344007\n92981232\n56683150\n24331938\n89069797\n69823489\n7054460\n56986152\n89352267",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "10\n38769217\n2158362\n15778420\n45192516\n51475177\n87070400\n50699292\n69411725\n61263283\n20817908",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "71\n68277\n35972\n70137\n13361\n58863\n85100\n77798\n25329\n19301\n58835\n82848\n53436\n60219\n75374\n21756\n47213\n96394\n7520\n14649\n60992\n625\n82306\n30679\n67934\n54617\n46989\n99012\n56827\n15096\n95931\n60093\n79438\n71554\n23482\n77184\n21745\n61780\n78253\n39253\n37916\n3570\n5201\n88495\n16297\n40057\n71283\n68923\n15603\n58196\n94993\n35479\n59363\n86252\n40564\n34511\n4541\n42553\n1620\n19985\n13042\n45194\n23729\n10989\n26294\n64966\n83834\n30306\n19095\n63805\n68880\n48432",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "72\n19508\n94761\n93146\n83856\n60751\n51243\n64067\n41467\n48204\n74102\n33136\n63081\n73122\n11225\n73509\n96269\n68974\n80010\n70668\n57439\n37664\n7008\n87750\n44548\n30416\n78153\n41049\n33238\n39204\n47543\n62039\n53197\n60362\n19714\n1215\n87824\n90195\n67300\n13928\n69256\n58145\n47209\n5280\n20134\n76707\n32966\n91936\n30419\n28836\n29132\n63641\n42246\n39392\n56822\n96732\n47791\n80721\n71368\n60821\n19959\n4799\n69396\n7186\n50311\n28718\n87192\n48074\n42678\n98629\n39743\n41630\n51420",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "66\n40124\n84965\n58448\n39025\n17088\n28743\n43970\n54545\n76582\n80981\n64917\n44940\n53350\n47593\n98242\n68072\n72341\n23853\n70844\n76025\n74412\n71576\n78967\n35744\n95665\n29279\n26689\n59546\n71071\n68102\n60895\n77076\n82168\n91504\n63881\n59033\n84394\n80632\n87927\n55790\n76913\n51963\n80903\n57979\n78354\n77248\n8783\n2864\n75708\n4877\n97\n37147\n10549\n26211\n49094\n41473\n15254\n26376\n41526\n35965\n93683\n64619\n11199\n54272\n87143\n90359",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "59\n28736\n9855\n73165\n22738\n66563\n91131\n83103\n53767\n33009\n35603\n48501\n84284\n8130\n89565\n48423\n25497\n67203\n18970\n45859\n35515\n64608\n97844\n89614\n76346\n59275\n71882\n30995\n98023\n64169\n23443\n28665\n86335\n90337\n91962\n35458\n71980\n14490\n18933\n72307\n59437\n75613\n31143\n97822\n63738\n49239\n5082\n88686\n93612\n98341\n90321\n49036\n77620\n26652\n55324\n84340\n28894\n9943\n99189\n78648",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "81\n99647\n50120\n76818\n93802\n65849\n60406\n21376\n78997\n80965\n18876\n18937\n87917\n35295\n74856\n66439\n62250\n69863\n86405\n51738\n11342\n13074\n42043\n78071\n91830\n58929\n91821\n96695\n84198\n5634\n27723\n19442\n26059\n91806\n68417\n3105\n57643\n43612\n19002\n620\n43943\n58386\n25516\n32070\n65779\n45316\n3385\n85857\n66098\n3101\n33374\n96779\n39194\n3766\n62159\n10103\n93281\n57793\n92470\n4988\n13091\n55303\n39388\n49214\n22251\n75582\n77124\n86389\n67182\n73761\n11504\n30848\n62567\n67130\n36712\n41754\n87141\n80447\n22919\n68453\n6917\n49384",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "80\n43691\n42987\n93422\n73939\n31168\n22237\n91547\n86074\n66360\n41106\n86503\n48170\n98142\n95098\n19609\n92186\n68724\n4071\n57782\n87994\n77671\n61290\n48116\n97359\n80869\n1045\n79858\n62432\n60412\n82270\n30792\n64410\n36876\n6188\n37469\n45816\n98136\n75537\n46081\n11202\n32103\n10399\n24319\n39343\n38837\n25842\n72591\n20371\n86140\n85973\n97912\n69563\n40822\n79560\n91660\n49334\n64223\n16722\n26080\n72005\n65709\n74075\n95937\n35540\n15096\n14747\n74010\n68868\n91228\n79562\n87502\n76916\n14762\n2708\n63448\n99947\n11793\n90013\n51572\n62399",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "50\n23770\n46316\n74277\n22353\n15602\n27386\n7239\n68653\n29928\n10782\n37086\n81603\n89673\n76360\n19808\n18960\n73673\n35707\n45891\n91923\n8973\n30031\n57449\n37693\n40873\n49955\n96872\n64863\n1098\n31605\n23970\n30005\n43060\n49363\n81437\n64202\n62492\n89237\n35196\n59251\n95064\n41162\n26360\n68127\n74933\n93643\n64644\n99818\n38458\n5373",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "105\n32976947\n17977260\n73097311\n16627664\n15513606\n98164076\n55219553\n54151974\n57684673\n11891434\n56359759\n12095940\n73464348\n97548880\n86649356\n30152058\n29553731\n30653206\n53329601\n76903438\n22436652\n73272359\n22294827\n41920582\n78487382\n39852289\n57510589\n18964494\n82857608\n5606603\n24599749\n76259161\n9780000\n1155570\n91551147\n6503535\n98920085\n55908731\n92773610\n99224522\n45568283\n31862008\n31030623\n91573505\n49487738\n42052024\n66460790\n7859646\n30525041\n48052676\n53704016\n61825176\n43366205\n83333646\n86698317\n34981950\n69557361\n2128473\n19665951\n67686815\n49693282\n67147421\n79525719\n54605940\n37599254\n98504735\n41998288\n55115084\n97131355\n18093947\n85828915\n92796928\n68743479\n79535015\n19041045\n76856353\n59905193\n48756311\n32217871\n35408880\n8335662\n73292792\n58995331\n8681436\n69139019\n58661743\n54953624\n49935156\n72015487\n99578260\n13571849\n80242938\n73989536\n81828226\n14802575\n13802006\n99324573\n65018270\n38213637\n72970402\n42452534\n56379602\n58206808\n16385988\n54079294",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "105\n81267279\n8983637\n69114222\n31650644\n53567936\n30752230\n76643485\n7114263\n27951150\n7144863\n4619493\n72346828\n65337027\n1608316\n66931205\n15200111\n76758408\n551733\n19800372\n22885975\n9436717\n58572848\n31035965\n49156156\n81307060\n75797232\n44028430\n88548214\n65098728\n68067399\n28226246\n53076188\n27593567\n25728758\n31992241\n90071849\n98635479\n34145841\n94217021\n80741012\n28128716\n92532682\n5282369\n22727294\n35307233\n47132691\n76319956\n81730626\n29048223\n907571\n33626602\n88097476\n20274146\n10561952\n77818094\n4464225\n29412796\n34890887\n34689447\n88103037\n71548125\n74111119\n58318991\n45473298\n9776545\n74897433\n73969953\n35390418\n16947015\n16924044\n71337160\n81420821\n30558089\n18895857\n15895510\n68657423\n98466456\n5737668\n25989212\n50154294\n54170114\n20752664\n16195795\n4126885\n59135442\n53874887\n72342084\n98630171\n79143795\n12362902\n98763483\n62702224\n5181768\n24580149\n47489819\n68129367\n43132990\n64329428\n66886160\n18715880\n92328140\n52214714\n29676378\n92089225\n45092671",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "2\n79735487\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 2)"
    },
    {
      "input": "2\n100000000\n1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 2)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:17",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Count on a tree",
  "tags": [],
  "text": "You are given a tree withNnodes. The tree nodes are numbered from1toN. Each node has an integer weight.We will ask you to perform the following operation:u v k: ask for the kth minimum weight on the path from nodeuto nodevInputIn the first line there are two integersNandM. (N, Mâ‰¤ 100000)In the second line there areNintegers. The ith integer denotes the weight of the ith node.In the nextN-1lines, each line contains two integersuv, which describes an edge (u,v).In the nextMlines, each line contains three integersuvk, which means an operation asking for the kth minimum weight on the path from nodeuto nodev.OutputFor each operation, print its result.ExampleInput:8 5\r\n105 2 9 3 8 5 7 7\r\n1 2\r\n1 3\r\n1 4\r\n3 5\r\n3 6\r\n3 7\r\n4 82 5 12 5 22 5 32 5 47 8 2Output:2891057",
  "sample_input": "Input:8 5\r\n105 2 9 3 8 5 7 7\r\n1 2\r\n1 3\r\n1 4\r\n3 5\r\n3 6\r\n3 7\r\n4 82 5 12 5 22 5 32 5 47 8 2Output:2891057",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/COT",
  "scraped_at": "2025-08-17 00:33:07",
  "test_cases": [
    {
      "input": "8 5\r\n105 2 9 3 8 5 7 7\r\n1 2\r\n1 3\r\n1 4\r\n3 5\r\n3 6\r\n3 7\r\n4 82 5 12 5 22 5 32 5 47 8 2",
      "expected_output": "2891057",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5 7\n3 2 5 3 2 9 10 10\n3 1\n4 6\n5 7\n5 4\n7 2\n6 5\n1 4 4 2 9 3 9 8 6 4 7 5",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "1 5\n1 7 4 7 8 1 2 1\n10 2\n10 7\n6 2\n8 7\n1 8\n8 7\n10 8 2 9 10 10 2 2 4 3 7 3",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "5 2\n1 10 9 5 2 3 2 10\n9 4\n6 6\n4 10\n7 5\n3 8\n5 4\n4 4 6 4 9 5 6 6 9 7 6 4",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "95 100\n96 85 11 7 48 94 33 36\n82 62\n70 13\n47 100\n89 49\n82 8\n18 85\n49 50 3 17 50 42 34 51 42 25 91 8",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "5 87\n91 1 69 36 66 3 89 41\n7 26\n90 1\n14 100\n21 28\n56 82\n81 53\n62 27 63 76 30 35 98 42 62 21 39 17",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "11 87\n77 9 44 78 98 27 76 79\n98 73\n94 100\n23 89\n26 86\n48 62\n96 83\n17 53 61 92 55 100 97 64 24 66 60 91",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "35 44\n88 94 81 88 14 71 7 16\n25 6\n41 100\n93 30\n40 83\n34 90\n95 28\n75 53 58 27 78 68 2 7 20 46 67 56",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "31 46\n60 47 58 75 98 87 16 51\n80 33\n70 26\n44 62\n72 97\n11 11\n94 19\n99 97 76 42 52 59 43 3 82 12 69 90",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "127 103\n215 350 469 249 201 447 359 415\n106 278\n370 252\n447 247\n463 463\n137 279\n456 99\n241 223 68 374 363 59 348 181 87 388 380 228",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "406 166\n100 91 163 471 255 76 373 209\n132 370\n444 205\n489 181\n193 203\n216 394\n126 117\n451 284 315 390 397 171 82 362 441 56 256 184",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "57 75\n285 91 361 205 75 340 106 100\n121 468\n224 404\n63 128\n490 187\n329 244\n297 269\n489 254 386 111 302 196 185 307 223 261 187 179",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "180 324\n333 207 441 173 320 466 496 426\n357 108\n399 361\n382 461\n61 118\n277 117\n78 305\n101 121 113 251 499 307 236 103 218 436 398 397",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "153 289\n165 200 80 367 437 87 355 209\n264 315\n203 384\n344 453\n79 59\n465 291\n456 479\n325 442 217 155 286 490 493 326 232 393 438 67",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "445 72\n393 333 239 56 227 164 412 163\n241 294\n286 411\n268 353\n483 102\n149 98\n449 485\n448 401 287 333 251 141 266 366 415 341 155 399",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "404 487\n467 427 375 59 216 213 437 366\n138 135\n438 353\n379 247\n240 102\n198 499\n318 447\n88 470 444 125 333 251 252 247 325 312 281 278",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 1000\n1000 999 1000 1000 2 1 999 1000\n1000 1000\n1000 1\n1000 2\n999 999\n1 1000\n999 2\n1000 1000 1 999 999 999 2 1 1000 2 999 1000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 2\n2 1000 1 2 999 2 999 2\n999 1\n999 1000\n999 2\n2 999\n999 1000\n1000 999\n1000 2 1 1 1 2 1 1000 1000 1000 999 999",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:15",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Cipher",
  "tags": [],
  "text": "Bob and Alice started to use a brand-new encoding scheme. Surprisingly it is not a Public Key Cryptosystem, but their encoding and decoding is based on secret keys. They chose the secret key at their last meeting in Philadelphia on February 16th, 1996. They chose as a secret key a sequence ofndistinct integers, A1...An, greater than zero and less or equal ton. The encoding is based on the following principle. The message is written down below the key, so that characters in the message and numbers in the key are correspondingly aligned. Character in the message at the positioniis written in the encoded message at the positionai, whereaiis the corresponding number in the key. And then the encoded message is encoded in the same way. This process is repeatedktimes. Afterkth encoding they exchange their message.The length of the message is always less or equal thann. If the message is shorter thann, then spaces are added to the end of the message to get the message with the lengthn.Help Alice and Bob and write program which reads the key and then a sequence of pairs consisting ofkand message to be encodedktimes and produces a list of encoded messages.InputThe input file consists of several blocks. Each block has a number 0 < n ≤ 200 in the first line. The next line contains a sequence ofnnumbers pairwise distinct and each greater than zero and less or equal thann. Next lines contain integer numberkand one message of ascii characters separated by one space. The lines are ended with eol, this eol does not belong to the message. The block ends with the separate line with the number 0. After the last block there is in separate line the number 0.OutputOutput is divided into blocks corresponding to the input blocks. Each block contains the encoded input messages in the same order as in input file. Each encoded message in the output file has the lengthn. After each block there is one empty line.Sample Input10\r\n4 5 3 7 2 8 1 6 10 9\r\n1 Hello Bob\r\n1995 CERC\r\n0\r\n0Sample OutputBolHeol  b\r\nC RCE",
  "sample_input": "10\r\n4 5 3 7 2 8 1 6 10 9\r\n1 Hello Bob\r\n1995 CERC\r\n0\r\n0",
  "sample_output": "BolHeol  b\r\nC RCE",
  "link": "https://www.spoj.com/problems/CIPHERJ",
  "scraped_at": "2025-08-17 00:34:32",
  "test_cases": [
    {
      "input": "10\r\n4 5 3 7 2 8 1 6 10 9\r\n1 Hello Bob\r\n1995 CERC\r\n0\r\n0",
      "expected_output": "BolHeol  b\r\nC RCE",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5\n3\n8\n8\n4\n8",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n4\n7\n10\n9\n7",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "3\n4\n4\n6",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "18\n24269877\n3250439\n17434191\n66931301\n78222423\n68541321\n83268729\n32334557\n713045\n32239709\n81071561\n65840572\n55429721\n96254488\n83101899\n62681714\n49478720\n67033241",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "18\n65508252\n5219129\n42620415\n52264858\n12535699\n28340017\n30578659\n33492436\n87521328\n9417399\n26523655\n69292927\n49531971\n64471879\n42318385\n73070619\n98818111\n84853569",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "20\n19288115\n50778961\n12590907\n92353091\n39632456\n36267502\n35710038\n62863069\n25259025\n30827534\n85722886\n13843449\n64341260\n97738940\n38732690\n52579304\n803537\n71488175\n53531487\n70150705",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "18\n37919670\n15083773\n68561613\n98742761\n65716871\n26993502\n95247353\n45926301\n35240101\n33197795\n21692438\n82551719\n55555130\n87259535\n67988240\n64837878\n50977302\n33546149",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "13\n9791691\n11446084\n37773730\n77658569\n50442983\n55211405\n24042380\n1655217\n34953426\n51828349\n42821745\n93576897\n56364898",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "65\n34211\n26745\n91699\n62192\n60028\n14392\n58257\n14674\n51074\n93153\n38785\n43864\n80780\n5214\n31036\n39303\n14048\n35575\n80864\n81015\n1562\n55455\n17630\n33877\n54521\n48961\n42631\n36659\n25760\n96048\n49852\n42520\n5432\n69622\n69949\n81653\n5644\n8624\n96525\n72113\n34006\n38073\n29340\n91851\n67155\n142\n54482\n34291\n64978\n21077\n21566\n6491\n98228\n64364\n97302\n26640\n8390\n29592\n51508\n7783\n4199\n91237\n74531\n92501\n13088",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "41\n97759\n82220\n2342\n10468\n81303\n36072\n21849\n6571\n93030\n12641\n88065\n88021\n44495\n85845\n58535\n28381\n61203\n69878\n15391\n46497\n22467\n29217\n4485\n1850\n46411\n27442\n9934\n23437\n97640\n65148\n21162\n34703\n10870\n56354\n9432\n533\n6203\n45929\n47374\n85316\n63173",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "107\n81207\n9455\n95681\n9262\n58760\n60704\n6549\n40748\n75571\n14187\n73296\n92913\n71567\n90717\n16847\n20547\n61591\n13484\n55440\n21075\n38687\n89809\n46234\n76416\n53225\n83047\n76140\n57213\n1789\n65153\n55894\n73017\n14639\n20776\n59339\n44695\n43278\n27991\n98812\n50243\n39136\n34307\n4619\n13199\n44457\n25131\n68427\n64249\n24553\n21865\n98957\n84720\n3734\n40393\n54332\n46048\n21766\n48785\n77254\n12861\n18308\n92628\n52617\n86062\n18879\n8787\n70589\n839\n1514\n49355\n22932\n61468\n70738\n46954\n73831\n22222\n81267\n59100\n51657\n97163\n89990\n73729\n54621\n3457\n87769\n24999\n17021\n71074\n48995\n50448\n56283\n70476\n85507\n26359\n79235\n44557\n40401\n2411\n67488\n20067\n22304\n89339\n24392\n41000\n60551\n51846\n51362",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "115\n69473\n77344\n30294\n92394\n38920\n25852\n90235\n96202\n31251\n35284\n66950\n15099\n39096\n19461\n87507\n27273\n35990\n97416\n58402\n82126\n82472\n36234\n91848\n19857\n97623\n32366\n74306\n24268\n26254\n91600\n24848\n8552\n86438\n54508\n50011\n28468\n671\n33626\n8565\n52999\n61979\n82650\n75904\n6899\n98929\n96392\n74690\n71622\n38326\n22309\n71117\n16052\n23306\n72934\n51005\n76649\n25919\n98043\n28589\n70135\n33641\n90940\n66132\n84388\n62240\n84297\n53329\n94047\n44271\n53084\n87364\n83911\n95349\n85506\n27745\n19175\n74322\n34085\n97599\n31717\n93303\n61698\n76525\n3892\n34950\n52864\n24338\n84600\n9047\n52287\n14883\n37199\n70245\n49851\n8211\n78283\n78676\n58911\n67801\n48558\n24184\n90320\n29015\n60120\n18211\n79031\n13706\n1970\n59953\n14259\n72363\n46218\n32846\n33190\n10418",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "83\n94839\n10987\n36306\n79769\n74864\n40561\n77947\n76784\n64178\n14454\n72206\n63597\n59954\n70958\n93911\n48455\n1426\n13502\n5615\n57977\n86266\n62297\n16496\n76363\n89882\n76585\n91849\n62031\n85691\n29190\n86217\n44904\n34117\n26449\n80900\n6563\n48013\n10710\n86799\n39106\n24188\n45360\n99349\n10341\n93229\n20053\n28797\n38020\n86789\n13677\n83856\n59002\n722\n14096\n92774\n34535\n89054\n5932\n54631\n73508\n95587\n81250\n75771\n38375\n34166\n84767\n92942\n60783\n93933\n33262\n20860\n599\n88786\n80062\n41312\n67468\n25634\n78969\n45028\n3\n19287\n40676\n54094",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "49\n42478\n54799\n59986\n51198\n41778\n79911\n72724\n41387\n19522\n37580\n79778\n31738\n50189\n10241\n37823\n3947\n85791\n57756\n88596\n8373\n73038\n79381\n96395\n80637\n40511\n4281\n33550\n44513\n54911\n18705\n23774\n65562\n23558\n81355\n59433\n53776\n32125\n73570\n68660\n27685\n5221\n2805\n66414\n79804\n82260\n50299\n43506\n41854\n33662",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "113\n2624\n40342\n42093\n13196\n16808\n26304\n88591\n95909\n29465\n14179\n74846\n18506\n25293\n36959\n78889\n67782\n52742\n12768\n64523\n7210\n44096\n41728\n88463\n93129\n51936\n34192\n29417\n30824\n53615\n10052\n19753\n27127\n68798\n82984\n19113\n21484\n26345\n37466\n54282\n45377\n82924\n72203\n88645\n29253\n38537\n33195\n11866\n58525\n95486\n38737\n63334\n97450\n31517\n65587\n60420\n62680\n78171\n74694\n74630\n44110\n66032\n1666\n6187\n48995\n3987\n96768\n57851\n30285\n94371\n84408\n48049\n47647\n26828\n540\n29731\n92422\n71183\n47598\n58008\n70286\n22294\n31062\n6475\n57173\n62641\n4933\n40524\n88424\n12285\n10793\n69183\n12760\n879\n46101\n91992\n12739\n47737\n38719\n23384\n16254\n3937\n80838\n15271\n99855\n33571\n77532\n41327\n94800\n83086\n51909\n2262\n75446\n30553",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "200\n1344333\n3772200\n6121340\n56525007\n85475650\n15669082\n83130269\n95114268\n49128663\n26528021\n27382909\n10093238\n11689673\n43560218\n44593593\n41091546\n23047870\n28224665\n49730235\n1829601\n37014548\n17767163\n6887647\n63830601\n58699116\n33342075\n92443375\n15912056\n1945350\n47264337\n96166856\n8197920\n24210455\n56267534\n91651018\n63923471\n56074368\n9703398\n71836143\n23551129\n3962929\n72167797\n12707750\n45921891\n79608470\n53456411\n2142649\n5049783\n71157841\n78581186\n84624960\n22530991\n90051426\n75682367\n80809990\n36737227\n36700839\n78788656\n92288690\n4654808\n786376\n52900517\n4994344\n73021803\n73584089\n6382889\n12209411\n51129921\n38707137\n98706349\n81671955\n11917549\n82018252\n83820524\n40480371\n47384075\n39913992\n62356340\n58996417\n46105142\n24973112\n27946656\n16433957\n2563041\n84843198\n50470527\n80649104\n88898327\n43174049\n10703470\n74838000\n11553070\n6933137\n47786706\n69187843\n59653649\n66159215\n24470500\n88919950\n62786650\n58976488\n71684005\n54212560\n22231822\n30123614\n23027602\n73389188\n85602937\n29382106\n58227050\n85477274\n80342236\n1545707\n87419839\n6172081\n12413093\n25582414\n82910486\n22882632\n81850002\n89280525\n94506412\n6832782\n81239689\n39426729\n91506044\n40227565\n53951031\n81869439\n32810609\n32373867\n26640737\n61653366\n83871627\n28244481\n82410090\n82716856\n42141164\n28321435\n96144071\n21875438\n8350986\n90407641\n52754790\n96233607\n37493767\n72337463\n21559821\n55736220\n59219461\n56270050\n11959906\n38419269\n96352003\n98082262\n30890308\n80118043\n23731853\n37754430\n64511969\n53189711\n90581676\n58814805\n67052019\n409298\n61905854\n38351158\n87650444\n72455706\n19828187\n74280756\n60096731\n23937214\n32776580\n15379878\n53683328\n54179365\n57114281\n91154701\n40822597\n55470501\n59670369\n74634653\n61595596\n77912353\n13940986\n3428628\n27445508\n69590422\n72762114\n39718932\n48011934\n36225515\n59088878\n3403733\n85429408\n39490219\n81774396\n40887317\n1428410",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 200)"
    },
    {
      "input": "200\n47926155\n66032989\n52126303\n61063420\n52310707\n16713468\n143294\n88802020\n82445802\n86670963\n32439797\n63281357\n43078453\n20510541\n28679792\n47038960\n37449744\n93646561\n47652226\n36846652\n62865513\n15600551\n1187204\n40425630\n13376777\n19334751\n87487382\n64413620\n88631657\n173788\n79455338\n29183550\n11984004\n86345611\n59082008\n19343866\n66218811\n85490791\n75090895\n14188367\n35716883\n67078194\n60981564\n91730215\n16576698\n10529233\n63196712\n42280073\n91447746\n38479026\n27237159\n64072121\n75137537\n51647054\n70723846\n75076709\n98646747\n89262714\n1990845\n4337462\n8465132\n27270078\n19102222\n52909508\n81377311\n81635346\n60051770\n66934075\n54966544\n85418454\n35916872\n19064055\n4753632\n80685691\n44359450\n87608349\n19204233\n38636469\n15469\n33039819\n57085429\n75954883\n23281443\n28014115\n19650887\n36009920\n25924942\n46506204\n24324210\n28687781\n80236128\n18458447\n26225501\n20499132\n37317750\n43527779\n13695880\n61529872\n46482818\n17852527\n69284385\n84479185\n13614968\n73034095\n35188887\n9546359\n76079745\n84322306\n19259358\n51295077\n50567459\n71086468\n12246053\n29297316\n15851588\n1387107\n44217922\n37425907\n2027696\n3403689\n99270590\n61417454\n99822666\n31824816\n96874873\n98667195\n51016479\n72742827\n34231020\n6284970\n29893666\n48692553\n90711505\n67065170\n41897662\n26767409\n38453614\n29495144\n1239098\n26140397\n75489195\n36132862\n51727899\n25602288\n49626321\n73787212\n87303862\n94495244\n57617087\n12853774\n32199822\n97725716\n94143138\n75267862\n70355748\n3946551\n77180579\n78287845\n76361280\n58294968\n93695754\n75412011\n2076315\n11409640\n77902373\n64636772\n31368985\n51489107\n40941121\n23681497\n689647\n67380537\n46994180\n40264656\n35921260\n25651586\n9108583\n11505920\n15751107\n8407484\n43008691\n36336668\n28978552\n18220672\n12609351\n20839512\n22973011\n42338096\n5509240\n38094323\n29116866\n49096551\n71999358\n20472978\n35307739\n87916924\n34429768\n16758129\n36239819\n45203315",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 200)"
    },
    {
      "input": "1\n1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 1)"
    },
    {
      "input": "1\n66259632",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 1)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:24",
  "total_test_cases": 20
}
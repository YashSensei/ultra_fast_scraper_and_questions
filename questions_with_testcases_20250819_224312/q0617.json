{
  "problem_code": "problems",
  "title": "Wonderful Randomized Sum",
  "tags": [],
  "text": "Learn, learn and learn again — Valera has to do this every day. He is studying at mathematical school, where math is the main discipline. The mathematics teacher loves her discipline very much and tries to cultivate this love in children. That's why she always gives her students large and difficult homework. Despite that Valera is one of the best students, he failed to manage with the new homework. That's why he asks for your help. He has the following task. A sequence of n numbers is given. A prefix of a sequence is the part of the sequence (possibly empty), taken from the start of the sequence. A suffix of a sequence is the part of the sequence (possibly empty), taken from the end of the sequence. It is allowed to sequentially make two operations with the sequence. The first operation is to take some prefix of the sequence and multiply all numbers in this prefix by  - 1. The second operation is to take some suffix and multiply all numbers in it by  - 1. The chosen prefix and suffix may intersect. What is the maximum total sum of the sequence that can be obtained by applying the described operations?InputThe first line of the input gives the number of test cases, T. T test cases follow, each with two lines. The first line contains integer n (1 ≤ n ≤ 105) — amount of elements in the sequence. The second line contains n integers ai ( - 104≤ ai ≤ 104) — the sequence itself.OutputFor each test case, output one line containing the answer to the problem.ExampleInput:3\r\n3\r\n-1 -2 -3\r\n5\r\n-4 2 0 5 0\r\n5\r\n-1 10 -5 10 -2Output:6\r\n11\r\n18",
  "sample_input": "Input:3\r\n3\r\n-1 -2 -3\r\n5\r\n-4 2 0 5 0\r\n5\r\n-1 10 -5 10 -2Output:6\r\n11\r\n18",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/CF33C",
  "scraped_at": "2025-08-17 00:33:15",
  "test_cases": [
    {
      "input": "3\r\n3\r\n-1 -2 -3\r\n5\r\n-4 2 0 5 0\r\n5\r\n-1 10 -5 10 -2",
      "expected_output": "6\r\n11\r\n18",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2\n2\n10",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "3\n6\n5\n9",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "2\n7\n9",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "10\n97145385\n44412800\n39091652\n57790732\n68230462\n59643887\n29449100\n82671637\n34609841\n52712866",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "6\n41850239\n22927012\n15877777\n54333111\n60364818\n33750487",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "9\n93245334\n47348073\n99628046\n28011377\n8965635\n24992484\n86414926\n61882674\n51329774",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "16\n86736007\n11062020\n62199116\n24152133\n17138469\n31711126\n18344189\n19086291\n35975795\n29808871\n30478061\n93749477\n19041085\n62096658\n36629274\n90269905",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "5\n9868899\n16568389\n36120235\n21937956\n29139661",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "54\n93318\n40398\n4043\n15390\n94155\n37431\n98301\n99663\n84271\n56149\n48085\n20740\n14084\n62325\n29868\n79979\n33054\n36533\n27522\n95590\n69174\n20331\n35311\n68265\n76802\n11480\n37626\n20008\n5563\n6967\n98061\n76652\n41004\n13927\n51932\n78588\n15912\n59476\n61037\n74914\n33120\n80040\n53410\n64338\n72145\n72766\n50393\n47197\n87306\n86728\n39492\n10295\n49567\n91646",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "46\n26609\n47919\n75569\n24882\n81550\n58189\n86776\n936\n66022\n88691\n2171\n59171\n3434\n12649\n91726\n98495\n92857\n73061\n50524\n58088\n40526\n25026\n38767\n53071\n4731\n4619\n32193\n65508\n62514\n58383\n99595\n22325\n75093\n65556\n25509\n71177\n93469\n65465\n67406\n48058\n21796\n8069\n18461\n48676\n20013\n51078",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "45\n5013\n21581\n65991\n69386\n44746\n77309\n73187\n21041\n67483\n97319\n28410\n6737\n63222\n14248\n61278\n73604\n58543\n70595\n36232\n61940\n57354\n66530\n74898\n60289\n57767\n8866\n74943\n5465\n58495\n40308\n51366\n39504\n83826\n72361\n44845\n44821\n98\n62259\n97857\n63705\n18417\n68229\n82629\n52276\n21377",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "60\n12482\n55962\n35421\n56073\n58555\n58115\n34101\n31938\n45046\n86794\n31911\n75790\n81521\n25973\n74093\n94594\n1651\n21388\n24682\n46146\n15597\n60089\n56313\n53462\n63976\n6302\n56092\n56015\n37297\n85427\n2663\n5668\n58144\n11327\n87361\n36544\n20236\n7448\n18526\n40201\n38750\n64375\n15818\n13132\n51188\n18031\n26026\n43430\n44588\n9921\n3580\n9889\n84223\n76535\n34713\n15385\n91482\n52756\n8984\n25557",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "68\n31794\n96424\n47612\n52897\n28009\n62400\n34242\n83097\n63370\n91580\n16612\n11109\n83913\n20257\n76691\n39844\n2936\n88232\n78522\n54750\n46372\n30471\n65008\n73520\n39705\n71524\n93619\n96653\n26715\n69700\n26615\n50171\n18004\n81636\n17889\n80530\n24802\n44556\n14502\n65203\n3552\n83250\n39088\n53839\n3564\n69167\n97054\n57493\n30601\n2045\n28829\n82988\n70537\n76072\n28276\n57853\n26665\n76950\n10744\n57566\n16326\n45740\n2849\n72244\n77526\n16258\n67424\n71262",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "98\n87012\n63787\n59172\n36648\n49622\n19132\n14537\n57305\n20424\n62095\n60255\n97572\n69479\n36853\n28739\n98134\n40923\n64953\n96300\n59520\n97575\n34129\n36209\n5707\n64763\n57840\n22245\n91587\n95356\n93074\n3029\n16360\n84632\n3994\n48159\n95701\n51300\n86110\n61002\n78415\n49367\n60320\n44934\n21804\n38534\n44896\n32393\n87244\n90050\n21062\n87902\n76607\n95127\n63796\n71555\n87782\n23420\n91025\n67010\n48964\n52473\n75553\n17147\n42298\n42666\n70344\n40312\n69322\n56621\n84026\n77516\n28934\n46883\n57726\n46064\n35084\n78049\n80870\n23452\n93210\n68231\n46875\n11621\n16714\n33481\n72865\n33994\n66419\n28273\n23361\n95722\n74145\n17220\n62368\n4981\n43603\n39606\n16667",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "49\n472\n96867\n38052\n34325\n77440\n15791\n82777\n1123\n10979\n20541\n51379\n81989\n85625\n39441\n54004\n94361\n87400\n85412\n9595\n1838\n36506\n13595\n11949\n59565\n82781\n35790\n14929\n85442\n41306\n30142\n67023\n64548\n97499\n1179\n1004\n38889\n69790\n54416\n80811\n12183\n73370\n45221\n70808\n75294\n25919\n65123\n38611\n25304\n89461",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "105\n27408557\n55128778\n95549861\n25828434\n82822061\n37136428\n58194793\n99601262\n44876033\n78630522\n74974713\n41423499\n31929060\n9278642\n65322475\n99917890\n46246187\n1095174\n20938793\n36265280\n54747708\n73639053\n99708713\n88991860\n75683163\n30255472\n2733336\n47021879\n10648787\n58413989\n4442295\n79731263\n88751608\n71776910\n60591127\n83445484\n63503463\n27986695\n42617165\n15457388\n66874064\n22119888\n57083978\n13377587\n43799493\n80574886\n46015029\n68478656\n21774688\n55400619\n66537446\n25038129\n7058599\n35122395\n17403131\n25667178\n13875268\n84318115\n15437225\n15379537\n61059145\n75249028\n52387483\n35512100\n28139305\n52549804\n93544832\n55617434\n41172297\n94344304\n42526677\n6645069\n60960751\n4035928\n91227877\n63204958\n35231623\n17079844\n35065250\n90345544\n42440939\n39588856\n11233521\n95801030\n30853426\n55604426\n52386376\n82729287\n46645582\n30864306\n89302864\n82245399\n22204342\n27153343\n62355749\n19418185\n28223988\n32004907\n64959069\n10036944\n62118328\n24901692\n34160847\n96762188\n53174166",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "105\n81551197\n29800312\n23516944\n89059829\n58089246\n41226905\n52927646\n86000086\n71967931\n48636085\n18094657\n50081287\n18577707\n99464238\n57152649\n38281370\n40119646\n57266341\n52317138\n15683749\n87331164\n54472869\n40227070\n40315136\n66049639\n95856649\n94375887\n63173186\n19723017\n46641790\n57188046\n8872016\n62647946\n8105632\n86446468\n85252659\n33885592\n70905280\n49163055\n29211144\n47103071\n12520639\n4394164\n51266268\n56688538\n17489681\n58079186\n5308264\n794680\n90303491\n41160434\n5680472\n94922672\n51012616\n93810218\n86092676\n73107116\n70056404\n40493505\n95191957\n85298272\n19822977\n19756585\n32640687\n91116818\n8018015\n95871679\n83065446\n86209616\n21085055\n59046455\n18154441\n52032487\n76982411\n27953894\n24255495\n17964890\n83509406\n16467488\n41819393\n82256553\n32429507\n1605832\n60370406\n69019852\n34762614\n74311327\n94685369\n33329491\n69828980\n95641644\n40471083\n45390041\n6372163\n51956230\n44976693\n88222345\n81179484\n73563060\n22357895\n59608128\n69151966\n20669924\n63039649\n82711760",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "105\n1\n47705802\n100000000\n80140308\n100000000\n1\n100000000\n100000000\n18367910\n1\n100000000\n42739603\n1\n1\n4537102\n1\n1\n1\n1\n1\n83875422\n73919105\n20171718\n16393111\n45041528\n1\n78571138\n100000000\n100000000\n100000000\n68059908\n100000000\n1\n1\n18992968\n1\n72244748\n40325077\n64683492\n1\n88543723\n49598961\n45308648\n23895386\n72340163\n100000000\n100000000\n100000000\n20248009\n17024670\n17244660\n100000000\n1\n100000000\n26597417\n20518934\n100000000\n1\n100000000\n1\n100000000\n100000000\n1\n1\n66288753\n8553619\n1\n7800545\n100000000\n29471397\n1\n100000000\n100000000\n1\n71130416\n27104071\n100000000\n14290458\n1\n100000000\n48400605\n1\n100000000\n100000000\n100000000\n100000000\n100000000\n100000000\n1\n100000000\n1\n100000000\n38949445\n27946307\n1\n10615325\n34198378\n100000000\n1\n100000000\n100000000\n79636634\n29504274\n100000000\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 105)"
    },
    {
      "input": "1\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 1)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:14",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Let us count 1 2 3",
  "tags": [],
  "text": "Given two integern,p. 4 kinds of query is needed to solve:Counting the number of labeled unrooted trees withnnodes.Counting the number of labeled rooted trees withnnodes.Counting the number of unlabeled rooted trees withnnodes.Counting the number of unlabeled unrooted trees withnnodes.Calculate the answer modulop.InputEach line contains three integersk,n,p.kdenotes which kind of query this\r\ncase is.For Kind 1 or Kind 2 query, 1 ≤n≤ 109.For Kind 3 or Kind 4 query, 1 ≤n≤ 103andn≤p.For all queries, 2 ≤p≤ 104andpis a prime.OutputFor each query, output a line which contains only one integer.ExampleInput:1 2 2\r\n2 2 3\r\n3 2 5\r\n4 2 3Output:1\r\n2\r\n1\r\n1",
  "sample_input": "Input:1 2 2\r\n2 2 3\r\n3 2 5\r\n4 2 3Output:1\r\n2\r\n1\r\n1",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/PT07D",
  "scraped_at": "2025-08-17 00:33:23",
  "test_cases": [
    {
      "input": "1 2 2\r\n2 2 3\r\n3 2 5\r\n4 2 3",
      "expected_output": "1\r\n2\r\n1\r\n1",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "7 8 5\n4 10 7\n10 5 8\n7 5 9",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "2 10 8\n4 3 8\n2 3 9\n9 1 8",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "5 8 9\n8 9 6\n3 4 8\n6 6 8",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "50 3 96\n69 33 55\n31 63 30\n94 41 3",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "77 29 57\n51 26 8\n37 91 1\n90 81 66",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "14 38 32\n21 23 83\n19 88 11\n89 27 1",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "37 8 42\n48 22 55\n55 21 68\n29 59 33",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "3 6 89\n19 61 21\n6 59 9\n96 75 91",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "17 47 14\n11 7 46\n5 16 33\n26 50 51",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "31 38 43\n25 18 5\n11 13 5\n49 37 31",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "39 6 8\n24 51 12\n28 31 44\n22 15 28",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "7 35 38\n45 29 46\n14 17 5\n12 43 39",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "12 31 14\n19 46 44\n39 34 43\n51 15 7",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "44 13 40\n22 5 47\n9 32 28\n31 37 5",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "24 5 43\n8 15 12\n13 34 19\n5 39 48",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "103 103 103\n103 103 103\n103 103 103\n103 103 103",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "103 103 103\n103 103 103\n103 103 103\n103 103 103",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "102 1 2\n102 1 1\n1 102 102\n103 1 102",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "102 2 102\n102 1 1\n102 102 103\n2 1 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:16",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Annual Day",
  "tags": [],
  "text": "The kids at DACT elementary school are very excited since they have their annual day coming up. On this occasion, the students get a chance to display all their projects and art work, as well as perform on stage for all the parents and other guests who will be coming. Since organizing an event so big requires a lot of effort, the poor teachers alone cannot handle it all. So, they decide to ask some of the students to volunteer to lend a hand.You are the class teacher of one such kindergarten class with N students, and you need to select exactly k of your students for the volunteer group. Luckily for you, all the kids are very enthusiastic and excited and everyone wants to help out! But you also know that many of these students are very naughty and may start playing with each other halfway through instead of doing work. So you want to select this group of students in a smart manner to avoid such a scenario.Since you have been their class teacher for nearly a year, you know beforehand how naughty each kid is, and have assigned \"goodness\" scores to each of the students accordingly. The higher the score for a student, the less naughty he/she is. You can also use this individual goodness score to calculate the score for a group of students as follows :Goodness(a1, a2... an) = (|a1|+|a2| ... |an|) * (-1)rWhere a1, a2... an are the goodness scores of the n students in that group, and r is the number of naughty students in that group. (Note: A naughty student is one with a negative goodness score)Also |x| refers to the absolute value of x. (|x|=x if x>0. Else |x|=-x).Given the goodness scores of all the students in your class, it is up to you to select exactly k students such that their group goodness score is maximum.InputThe first line contains 2 space separated integers N and k. (1 <= k <= N <= 105). Here N is the total number of students in your class, and k is the number of students to be selected.This is followed by N space separated integers a1, a2... aN, where aiis the goodness score of the ithstudent. (|ai| <= 109)OutputOn a single line output the maximum possible goodness value of any group of exactly k students that you may select.ExampleInput #1:10 1\r\n1 2 3 4 5 6 7 8 -9 9Output #1:9Input #2:10 3\r\n1 2 3 4 5 6 7 -8 -9 9Output #2:26Input #3:3 3\r\n12 78 2Output #3:92ExplanationInput #1: Since you need to select exactly one student, you will select the one with the maximum individual goodness score, so the answer is 9.Input #2: Here, the maximum score is obtained by selecting the students with scores of { -8, -9, 9 }, so the corresponding final value is: (|-8|+|-9|+|9|)*(-1)2= 26*1 = 26Input #3: Here you have no choice but to select all the students. So the answer is 92.",
  "sample_input": "Input #1:10 1\r\n1 2 3 4 5 6 7 8 -9 9Output #1:9",
  "sample_output": "Input #2:10 3\r\n1 2 3 4 5 6 7 -8 -9 9Output #2:26",
  "link": "https://www.spoj.com/problems/VOLNTEER",
  "scraped_at": "2025-08-17 00:33:55",
  "test_cases": [
    {
      "input": "Input #1:10 1\r\n1 2 3 4 5 6 7 8 -9 9Output #1:9",
      "expected_output": "Input #2:10 3\r\n1 2 3 4 5 6 7 -8 -9 9Output #2:26",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2 7 8\ngce n 10\n3 1 2 5 4 1 2 2 7 7 7 7\n7 5 10 9 4 2 3 2 b m l",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "8 1 7\nfwn c 10\n2 1 7 9 3 7 9 8 5 9 8 6\n5 2 2 2 4 8 6 5 m jh ftx",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "9 1 2\ny aj 6\n5 2 1 2 4 7 5 6 7 10 4 5\n6 5 3 5 9 6 6 4 q liptjou fzra",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "100 69 70\noek v 86\n28 26 46 34 56 17 57 95 15 58 91 34\n35 11 16 93 88 43 70 96 ttufs jvihl a",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "66 61 82\ncgjw zqwcm 91\n7 21 13 18 29 85 50 14 46 88 76 100\n57 36 6 61 4 25 58 88 unnq bdieakc b",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "52 86 43\nlbhcc whm 50\n76 86 75 69 44 46 70 72 37 21 76 10\n62 70 51 41 40 12 27 73 b orcd ajqe",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "59 87 38\nqr sglnq 29\n6 84 77 65 22 35 76 71 65 53 47 99\n73 83 60 92 77 11 71 25 eygve cqjiktd x",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "56 11 66\ngrj d 52\n9 45 31 83 92 59 20 79 18 69 81 47\n36 85 45 81 88 47 10 67 oxq qzibrmf iv",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "198 83 140\nsiql pi 432\n128 382 236 266 213 149 404 337 379 162 128 88\n355 323 102 96 323 338 469 196 widiz etm oe",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "449 341 162\nrm ob 346\n157 144 436 265 420 283 446 86 472 492 230 402\n119 373 126 167 59 370 299 341 ymn abwcmmy rbh",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "196 447 150\nndwot wvdmp 191\n302 416 442 103 111 468 398 250 252 171 204 190\n360 336 328 454 235 143 382 168 yl o aso",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "334 282 440\nd r 444\n117 370 427 109 160 313 435 127 413 308 346 433\n394 490 288 173 202 155 452 133 cz b x",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "61 210 435\nhrpdv gs 222\n270 362 79 327 393 142 371 157 105 489 175 74\n480 379 470 462 209 458 496 487 xob fpb k",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "497 191 433\ngtjro mlk 60\n379 305 459 85 102 170 205 168 325 200 173 175\n66 391 416 215 498 137 445 267 uukdh ynptzx af",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "485 464 434\nis tdkis 288\n487 126 217 177 435 321 229 329 400 207 321 320\n291 299 171 230 458 499 473 373 mgs pakwzy ptqss",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000\ner afop 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 pk mouml izw",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000\na du 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 akwo cldrhk ksfil",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 999 2\nh mr 1000\n1000 2 1 1 2 999 1000 1 999 999 2 999\n2 1000 2 1 999 999 1 1 efohx vuy r",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 999 1\ndsaj k 999\n1 1 2 1 999 1000 1 2 2 2 2 999\n2 1 2 2 2 1000 1000 1000 gx xan wnnt",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:19",
  "total_test_cases": 20
}
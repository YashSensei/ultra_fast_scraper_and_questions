{
  "problem_code": "problems",
  "title": "Wise And Miser",
  "tags": [],
  "text": "Jack is a wise and miser man. Always tries to save his money.One day, he wants to go from city A to city B. Between A and B, there are N number of cities (including B and excluding A) and in each city there are M buses numbered from 1 to M. And the fare of each bus is different. Means for all N×M buses, fare (K) may be different or same. Now Jack has to go from city A to city B following these conditions:At every city, he has to change the bus.And he can switch to only those buses which have number either equal or 1 less or 1 greater to the previous.You are to help Jack to go from A to B by spending the minimum amount of money.N, M, K ≤ 100.InputLine 1: N MLine 2: N×M GridEach row lists the fares the M busses to go form the current city to the next city.OutputSingle Line containing the minimum amount of fare that Jack has to give.ExampleInput:5 5\r\n1 3 1 2 6\r\n10 2 5 4 15\r\n10 9 6 7 1\r\n2 7 1 5 3\r\n8 2 6 1 9Output:10Explanation1 → 4 → 1 → 3 → 1: 10",
  "sample_input": "Input:5 5\r\n1 3 1 2 6\r\n10 2 5 4 15\r\n10 9 6 7 1\r\n2 7 1 5 3\r\n8 2 6 1 9Output:10",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/MISERMAN",
  "scraped_at": "2025-08-17 00:33:04",
  "test_cases": [
    {
      "input": "5 5\r\n1 3 1 2 6\r\n10 2 5 4 15\r\n10 9 6 7 1\r\n2 7 1 5 3\r\n8 2 6 1 9",
      "expected_output": "10",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4 8\n10 5 1 8 10\n3 5 1 9 5\n2 6 4 4 8\n10 1 8 2 6\n7 2 1 4 3",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "4 9\n10 1 8 1 1\n4 10 7 6 6\n6 10 7 6 2\n3 10 7 10 9\n10 1 10 10 9",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "7 7\n4 5 7 6 8\n1 6 4 10 5\n6 6 8 10 5\n9 2 2 6 2\n7 9 1 7 6",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "3 70\n36 100 25 87 49\n64 54 63 83 25\n97 65 76 64 73\n30 56 56 24 52\n61 89 82 69 55",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "73 80\n80 58 97 60 70\n29 96 8 66 75\n23 9 5 75 92\n69 49 64 58 38\n21 26 93 74 23",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "14 48\n44 11 55 63 49\n64 24 48 32 56\n55 63 5 77 20\n71 40 25 38 94\n83 56 34 67 27",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "75 94\n71 20 100 52 80\n49 87 83 13 99\n80 29 77 3 14\n46 5 94 84 50\n26 11 73 47 75",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "81 68\n44 46 57 42 32\n81 24 69 12 53\n10 68 27 4 62\n100 6 73 73 16\n24 35 67 92 68",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "358 87\n477 421 274 119 286\n86 427 50 54 361\n68 70 188 399 199\n495 482 221 241 469\n51 372 435 173 481",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "455 343\n50 78 64 403 232\n260 451 319 119 186\n395 351 361 264 199\n242 387 391 309 154\n221 475 237 183 200",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "225 293\n390 57 145 298 50\n275 91 297 436 170\n54 429 469 78 167\n250 301 158 98 341\n332 84 111 54 370",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "322 134\n212 318 308 354 456\n231 73 275 54 77\n150 362 453 83 108\n201 414 384 445 343\n273 432 97 402 213",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "478 434\n492 386 212 225 234\n402 473 251 209 494\n370 132 173 259 151\n419 216 383 395 410\n398 80 272 67 235",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "363 288\n90 131 440 287 86\n403 201 401 262 307\n345 360 104 344 468\n217 280 410 115 447\n231 239 411 418 451",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "188 104\n486 267 330 257 482\n113 482 466 84 53\n258 439 230 420 215\n76 74 478 279 138\n167 220 426 215 301",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 2\n1 1 1000 2 1000\n999 1 1000 1000 1000\n999 1 999 1 2\n2 1 1000 1000 999\n1 999 1 999 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 999\n1 1000 2 1 2\n1000 2 1 1000 999\n2 999 999 2 1\n999 1 1 2 1\n2 2 2 2 999",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:14",
  "total_test_cases": 20
}
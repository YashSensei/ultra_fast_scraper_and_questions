{
  "problem_code": "problems",
  "title": "Point Connection Game in a Circle",
  "tags": [],
  "text": "EnglishVietnameseThis is a small but ancient game. You are supposed to write down the \nnumbers 1, 2, 3, . . . , 2n − 1, 2n consecutively in clockwise order\non the ground to form a circle, and then, to draw some straight line\nsegments to connect them into number pairs. Every number must be connected\nto exactly one another.\nAnd, no two segments are allowed to intersect. It’s still a simple game, isn’t it? \nBut after you’ve written down the 2n numbers, can you tell me in how\nmany diﬀerent ways can you connect the numbers into pairs? Life is harder, right!InputEach line of the input ﬁle will be a single positive number n, except \nthe last line, which is a number −1.\nYou may assume that 1 ≤ n ≤ 150.OutputFor each n, print in a single line the number of ways to connect the 2n\nnumbers into pairs.SampleInput2\n-1Output2Note : Big num!",
  "sample_input": "Input2\n-1Output2",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/MCIRGAME",
  "scraped_at": "2025-08-17 00:33:42",
  "test_cases": [
    {
      "input": "Input2\n-1Output2",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3\n2\n10\n3",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "4\n8\n10\n3\n4",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n5",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "13\n95438853\n36810089\n27767445\n5270780\n29957116\n48526068\n15477870\n55957400\n60772128\n33829779\n19538413\n99357437\n94978669",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "18\n61963853\n22009800\n69394061\n55395626\n38181921\n55062707\n82765164\n458834\n72186186\n9609312\n72648022\n16742875\n96838987\n52741635\n43343131\n81233648\n27208464\n26992349",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "8\n74161637\n95059965\n91940453\n9791079\n73857482\n94716374\n76673207\n36191695",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "13\n25328533\n56788484\n93741910\n11041052\n49006716\n84691958\n14558402\n53104451\n16903733\n71772532\n25776766\n68943891\n28170529",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "10\n37010932\n97441293\n19349478\n14311056\n85292826\n83455020\n32894748\n1149761\n42096836\n84704587",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "149\n61416\n77676\n77812\n55018\n54677\n4897\n13642\n59345\n97234\n11939\n80740\n25920\n57309\n99673\n32812\n38140\n25161\n17993\n86229\n90724\n29223\n29832\n36056\n79617\n66503\n92503\n48000\n72810\n98530\n71911\n19538\n13216\n13339\n7628\n23125\n37797\n6833\n33897\n64778\n82718\n1865\n97296\n83861\n65004\n84928\n42467\n68888\n93602\n10931\n69770\n36866\n53186\n11535\n75945\n61353\n14795\n38440\n44993\n11566\n85527\n43085\n47041\n64243\n58559\n4568\n83720\n36848\n49096\n72653\n33059\n59287\n57915\n93087\n62989\n32517\n1973\n36437\n32024\n94936\n25769\n9467\n24433\n82392\n10441\n26992\n64977\n2488\n94385\n64790\n99661\n81972\n22936\n81967\n56410\n96976\n64826\n39713\n33972\n11448\n21588\n21003\n38326\n94345\n52211\n90712\n91337\n44665\n39109\n87438\n79768\n73474\n56534\n84203\n61562\n2427\n52551\n43917\n12908\n97319\n25779\n61305\n51684\n65700\n99401\n42456\n8300\n11083\n63914\n56516\n14957\n3072\n43317\n35565\n73797\n87295\n51125\n64695\n72108\n17467\n88174\n96222\n68675\n29530\n71502\n10520\n82226\n80749\n31757\n1171",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "32\n74842\n94520\n33249\n15791\n95206\n93284\n46075\n39467\n97049\n38783\n69216\n78536\n92819\n87285\n50808\n11880\n48750\n97285\n20738\n98567\n61153\n11914\n25733\n53582\n62304\n63731\n37599\n17899\n32672\n89938\n3577\n18485",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "138\n43875\n884\n52783\n71676\n36032\n18157\n92358\n76272\n85020\n70216\n82180\n38585\n26541\n14858\n5334\n24035\n97247\n58550\n54005\n15186\n33369\n56931\n46504\n72552\n98680\n79787\n46787\n22364\n62916\n71534\n67986\n98655\n8311\n54439\n32871\n50297\n93122\n41505\n1484\n64631\n56771\n97908\n68374\n32346\n97415\n58397\n11658\n42628\n16649\n46717\n77915\n97781\n55672\n63893\n4810\n14632\n93777\n74572\n20159\n58326\n48443\n78307\n3437\n8965\n73678\n83678\n52540\n8554\n80743\n42983\n27974\n8882\n50355\n46324\n66249\n87914\n55780\n95250\n88055\n99751\n49970\n74862\n24107\n88162\n72445\n10113\n91671\n22886\n8756\n93368\n96773\n16838\n97794\n40304\n53092\n26593\n58588\n38456\n60867\n85486\n78834\n94468\n69448\n74726\n14791\n61923\n18479\n25060\n85552\n28743\n14682\n45257\n60182\n83349\n45576\n75771\n7186\n69756\n6042\n40292\n13288\n54559\n52884\n18717\n63912\n20586\n76213\n31443\n41756\n19365\n23069\n13097\n97377\n83075\n59247\n31755\n40629\n47620",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "52\n86215\n12379\n12290\n24054\n52718\n36694\n51914\n70083\n67567\n19586\n92732\n44652\n83143\n27926\n80698\n61822\n15821\n10682\n77047\n1702\n35971\n80528\n3539\n27577\n45981\n21312\n67332\n48512\n50689\n33482\n4211\n10136\n70445\n84933\n64338\n64952\n47589\n98425\n49627\n19210\n62189\n3566\n63207\n39938\n7788\n1063\n58066\n80575\n97205\n60835\n46311\n40193",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "37\n34140\n45443\n74156\n95021\n78089\n29089\n52972\n12795\n73305\n24397\n65080\n91632\n75471\n25688\n52306\n8634\n64434\n74002\n90133\n97203\n10403\n37154\n83153\n14482\n17529\n89409\n95889\n23238\n68089\n6557\n16258\n52132\n45496\n77811\n51106\n22127\n31735",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "110\n20334\n95147\n56676\n74919\n38085\n97072\n73242\n17512\n62263\n50456\n72223\n54879\n23188\n70880\n95750\n98915\n42089\n53467\n12177\n99563\n71316\n72151\n93234\n35614\n19196\n87406\n34836\n42908\n92141\n59204\n85393\n10112\n37629\n34873\n21437\n6718\n23608\n88697\n11828\n41720\n10627\n86875\n70562\n72605\n3335\n58437\n43403\n27286\n7547\n23767\n54255\n14688\n891\n24668\n26841\n35784\n10201\n68381\n60858\n76304\n24841\n51119\n66420\n23350\n72129\n91882\n59719\n87980\n49292\n37364\n68851\n31712\n92438\n35108\n74961\n91776\n96583\n30654\n15183\n58088\n73219\n6368\n89177\n60870\n99521\n634\n98828\n76244\n95668\n65066\n65564\n18789\n81581\n84824\n97837\n91763\n74180\n3476\n8871\n30582\n18675\n24720\n61006\n13629\n45566\n91194\n39697\n90513\n25517\n65808",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "129\n15445\n26276\n5706\n83679\n89607\n88018\n66598\n61438\n62789\n47995\n64248\n29176\n51215\n10526\n33299\n78941\n69329\n61351\n52713\n88452\n73265\n63063\n90862\n98056\n79250\n93254\n60091\n52383\n22607\n14065\n34659\n8708\n6017\n64763\n81231\n18975\n70983\n37799\n80545\n85495\n77168\n33753\n56236\n40232\n89397\n86884\n11686\n5610\n71300\n56774\n41807\n39607\n47831\n24373\n96553\n48753\n46689\n11776\n91062\n955\n74157\n76567\n30961\n18673\n95925\n14791\n36728\n8267\n46659\n94552\n2633\n52727\n26128\n72095\n88287\n62586\n46371\n83544\n51415\n13004\n50181\n89826\n62016\n51128\n2128\n38481\n43959\n4606\n26229\n11922\n5231\n36090\n18586\n85540\n13282\n2252\n9540\n92632\n7290\n60485\n77905\n97468\n39129\n33652\n53091\n53039\n83612\n96346\n49193\n69122\n19107\n75576\n16015\n91205\n79913\n80534\n2772\n62874\n99081\n82416\n65337\n32582\n20396\n8915\n68812\n32816\n30896\n6035\n42881",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "150\n32982501\n89671161\n68831761\n54095739\n20197803\n12955739\n12921408\n49461691\n55281114\n3530742\n24438444\n83907013\n86476555\n42499059\n34042650\n75696535\n26715733\n64543784\n67797004\n80322656\n35555134\n49535952\n48918229\n61722160\n90498068\n23337440\n8869551\n62290586\n78444842\n42149241\n73298296\n65880597\n19299107\n99532444\n9875755\n71312921\n95546090\n14899613\n31719146\n17598724\n6613013\n25439630\n46846548\n92252676\n51906185\n26736652\n43901214\n54468049\n99368142\n92926216\n78247626\n668006\n33208327\n53099422\n34934720\n46283224\n38892293\n15062945\n7575723\n95277032\n75215996\n14864763\n88616145\n43847129\n71552889\n77720324\n10095341\n962674\n6811748\n53172293\n16823146\n13853018\n64469775\n64425243\n89860999\n28994489\n63946753\n69837527\n60015669\n68793928\n4081036\n6974334\n49949708\n13008396\n40547051\n13735094\n25630636\n96550583\n34600988\n64357563\n58496825\n26965537\n77754526\n52256821\n67803755\n70890894\n26367104\n40874013\n73265108\n63612049\n17127994\n38837249\n40350499\n35199762\n7578677\n45712155\n7918608\n35810515\n21826052\n19478029\n25483713\n36299455\n85678099\n3806790\n31216525\n59637186\n26391488\n41632538\n36454217\n97658310\n28453629\n50136870\n60397451\n13229269\n45191471\n51126632\n70672096\n65932822\n54617363\n17597664\n97461901\n27512407\n60969033\n21794978\n71579121\n88860226\n93147664\n27736774\n4967985\n98871700\n78283176\n45878935\n87110077\n81929173\n21436572\n74682741\n41244923\n93001281\n34944935\n8286443",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 150)"
    },
    {
      "input": "150\n42006331\n23729772\n14912815\n75733831\n95066258\n58278521\n84981825\n50559166\n8731767\n77530888\n68139472\n14208259\n17087786\n14857095\n88463101\n73420421\n31924244\n336698\n41567030\n77107304\n50813430\n21519121\n56201688\n47806391\n13252026\n15338067\n70482192\n36922820\n8480470\n10059533\n94118636\n31417625\n2520939\n39181072\n1621043\n32964931\n61972958\n28367818\n37966772\n97339072\n15647071\n41464918\n59422666\n95955713\n93203927\n91614581\n73291997\n5051550\n44192332\n96254360\n10019976\n14400283\n57168428\n19297001\n21727095\n34194418\n7832944\n22837051\n43081870\n77767736\n65832771\n67725124\n77806453\n39681390\n5748306\n28488817\n15539919\n66009033\n65600278\n82292840\n55798685\n79713725\n11473213\n17212892\n45741053\n95913762\n46527642\n85965104\n83825721\n2886696\n65772876\n53109426\n58658851\n67803952\n3374578\n16693016\n11178333\n76406436\n73260075\n86422209\n27220003\n89322944\n14582869\n58271579\n98791343\n12879360\n82732523\n26809817\n95628265\n73360753\n3642347\n67595843\n13992114\n74294227\n9253330\n72385194\n61601408\n5923912\n37190055\n41312007\n87329014\n40472680\n91667158\n68284274\n19453415\n18675059\n6858078\n38269938\n53088972\n66546010\n47319341\n39393159\n77954262\n77454963\n24117462\n61457265\n47375606\n32837303\n85122679\n12605570\n91046768\n53707880\n5895679\n13449226\n29944182\n3169064\n72360465\n28691685\n19490400\n52076311\n80421887\n65811974\n16145072\n39038371\n32327568\n53471203\n36457252\n60363722\n15934382\n8768797",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 150)"
    },
    {
      "input": "1\n66414805",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 1)"
    },
    {
      "input": "1\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 1)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:17",
  "total_test_cases": 20
}
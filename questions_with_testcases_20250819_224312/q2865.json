{
  "problem_code": "problems",
  "title": "Finding the way",
  "tags": [],
  "text": "The baking festival has arrived in town. This is a great opportunity for small businesses in the baking industry to collect some money and promote themselves. Each small business wanting to take part in the festival can do so by setting up a small stand in the hall where it takes place. For security reasons, each stand should be placed against one of the hall's walls. In its stall, each business can show its products and make the necessary arrangements to sell them to the public attending the festival. One important characteristic of the stands is that they offer a free sample of some products to whomever may want one. The goal is to show the great quality of the recipes and thus tempt passersby to buy at that stand.The free samples bring a lot of people to the festival, wanting to eat the delicious desserts for no cost at all as they move around the hall. Most attendees buy some of the products to help the business who really deserve recognition. One of the festival's most famous visitors is Mr. Belly, who always goes by every single stand checking out the free samples, even going as far as giving a prize to the best of them all.Mr. Belly doesn't want to waste too much time at the festival, so he would like to taste the free samples in all of the stands walking the least possible distance. In order to do this, he has the map printed on the festival's brochure, which was published in advance by the organizers. The map has a drawing of the shape of the hall, which in this case is a convex polygon. It also has markings forNimportant sites, two of which correspond to the entrance and exit of the hall, the otherN-2being the festival's stands. Each important site is represented by a point on the boundary of the polygon representing the hall's walls.Mr. Belly is now asking for you to help him complete his mission. He will provide you with the coordinates in the Cartesian(X, Y)plane of theNimportant sites in the hall, in counter-clockwise order (i.e.in the order in which he would visit them if he were to go through the hall keeping his right hand on its interior wall). He would like to know what's the minimum distance he must travel in order to visit all the stands, if he is to start at the entrance of the hall, finish at its exit and choose optimally the order in which he visits the stands.InputThere are multiple test cases in the input file. For each test case, the first line contains three integer numbersN,EandS. The integerNrepresents the number of important sites marked on the map, which are numbered from1toN(2 ≤ N≤4000). The integersEandSrepresent the numbers of the sites corresponding to the hall's entrance and its exit, respectively (1≤E, S≤NwithE ≠ S). Each of the followingNlines contains two integersXandY, representing the numbers on thei-th line the coordinates(X, Y)of thei-th important site (-104≤X, Y≤104). All the important sites are located in different points, and there always exists a convex polygon containing all of them in its boundary.OutputFor each test case, print one line containing one rational number, representing the minimum distance Mr. Belly needs to walk in order to visit all of the festival's stands, starting at the entrance of the hall and finishing at its exit. Print the result with exactly6digits after the decimal marker, rounding if necessary.ExampleInput:6 1 6\r\n1 0\r\n2 0\r\n3 1\r\n2 2\r\n1 2\r\n0 1\r\n6 1 4\r\n0 0\r\n10 0\r\n20 0\r\n20 1\r\n10 1\r\n0 1Output:6.242641\r\n23.000000",
  "sample_input": "Input:6 1 6\r\n1 0\r\n2 0\r\n3 1\r\n2 2\r\n1 2\r\n0 1\r\n6 1 4\r\n0 0\r\n10 0\r\n20 0\r\n20 1\r\n10 1\r\n0 1Output:6.242641\r\n23.000000",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/TAP2016B",
  "scraped_at": "2025-08-17 00:34:15",
  "test_cases": [
    {
      "input": "6 1 6\r\n1 0\r\n2 0\r\n3 1\r\n2 2\r\n1 2\r\n0 1\r\n6 1 4\r\n0 0\r\n10 0\r\n20 0\r\n20 1\r\n10 1\r\n0 1",
      "expected_output": "6.242641\r\n23.000000",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4 7 5\n9 3\n2 6\n5 1\n3 10\n7 6\n1 8\n6 8 4\n6 1\n5 10\n8 8\n3 7\n9 1\n10 3",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "9 5 2\n3 8\n10 7\n1 3\n8 10\n7 2\n5 10\n6 2 5\n6 2\n5 1\n1 5\n8 7\n5 5\n1 5",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "8 6 10\n10 9\n8 3\n8 5\n10 9\n4 4\n9 1\n5 4 1\n3 2\n6 9\n10 10\n6 2\n8 2\n9 5",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "2 44 38\n10 88\n49 83\n39 91\n79 27\n14 69\n45 73\n41 6 12\n53 78\n23 1\n36 67\n21 17\n18 22\n45 60",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "84 16 40\n40 77\n24 34\n18 3\n65 64\n2 38\n49 19\n56 99 51\n20 53\n39 46\n89 63\n1 36\n66 83\n45 44",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "13 83 71\n78 74\n71 25\n47 82\n63 18\n75 31\n95 75\n53 49 99\n4 66\n60 19\n22 76\n1 99\n97 10\n9 19",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "97 32 78\n93 16\n36 29\n42 58\n61 36\n23 38\n52 44\n79 72 58\n74 69\n79 64\n82 52\n97 9\n90 73\n74 14",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "85 8 44\n97 4\n70 16\n23 22\n20 24\n11 23\n41 98\n59 37 29\n29 63\n81 18\n2 87\n90 53\n13 95\n12 92",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "1233 539 1554\n783 1764\n444 472\n299 1064\n835 507\n1068 592\n1559 1689\n582 877 225\n1024 1511\n1908 323\n1216 1875\n917 828\n1043 275\n1175 788",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "298 729 724\n556 1725\n1339 825\n774 1331\n532 424\n651 499\n1528 463\n329 532 670\n1579 1806\n1938 300\n395 448\n845 1683\n1838 381\n207 1727",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "1835 1603 782\n955 810\n1680 1762\n1129 1239\n1733 1568\n1101 843\n1524 1495\n1360 607 1217\n528 1907\n1109 1313\n504 271\n1055 1595\n1068 1057\n1391 1243",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "1868 1853 270\n363 908\n1164 230\n964 1271\n1293 1107\n1617 774\n695 1708\n1773 899 1779\n1127 733\n513 1756\n1055 1870\n1201 433\n1205 325\n614 1951",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "1224 1030 642\n416 1285\n1841 1033\n1825 702\n1599 319\n1578 1908\n1405 1956\n1238 700 1387\n1968 1407\n1364 1317\n332 1104\n1622 1267\n1746 594\n1415 1233",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "822 1404 1987\n1643 412\n466 1717\n734 758\n1307 1790\n1964 1607\n1864 1340\n270 1333 1259\n697 1143\n774 535\n1051 1200\n1193 1563\n559 1531\n1945 263",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "1405 289 1256\n1339 861\n1195 799\n1497 379\n1639 830\n639 1726\n259 1880\n1302 439 508\n1652 1470\n1511 1665\n289 228\n924 1926\n1147 1097\n916 1928",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "4000 4000 4000\n4000 4000\n4000 4000\n4000 4000\n4000 4000\n4000 4000\n4000 4000\n4000 4000 4000\n4000 4000\n4000 4000\n4000 4000\n4000 4000\n4000 4000\n4000 4000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "4000 4000 4000\n4000 4000\n4000 4000\n4000 4000\n4000 4000\n4000 4000\n4000 4000\n4000 4000 4000\n4000 4000\n4000 4000\n4000 4000\n4000 4000\n4000 4000\n4000 4000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "4000 3999 1\n3999 2\n1 4000\n4000 1\n2 2\n4000 1\n3999 2\n3999 3999 1\n1 2\n1 3999\n3999 1\n2 4000\n3999 2\n3999 4000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "4000 4000 1\n2 4000\n4000 4000\n4000 2\n1 2\n2 4000\n3999 2\n4000 3999 1\n3999 1\n4000 2\n4000 4000\n4000 4000\n2 2\n4000 3999",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:21",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "He is Lazy",
  "tags": [],
  "text": "As we all know, Humberto is really lazy. He is so lazy that he sticks his nose out of the window so that the wind will blow it for him. Obviously, he hasn't worked at all in his whole life. However, he got lucky and won a lot of money in the lottery. With some of that money he bought an empty field, and made build several houses inside of it, where he moved with his family and friends. Thus, Humberto can go in a straight line from any point in his field to any other, without having to make detours because of urban design (for the sake of simplicity, we consider the objects in Humberto's field as dots, so they don't interfere in Humberto's way).Sadly, that was not enough for Humberto, so in order to walk even less he decided to have installed some catapults in strategic points of his field. Each catapult can send him from the point where it is installed, to any point at a certain fixed distance (that depends on the range of the catapult).But, in spite of simplifying his life, the catapults made the task of choosing a way in the field a real headache, because Humberto wants to walk as less as possible. As tired as he is of all his problems, he decided to use the rest of his money to hire you to tell him the minimum distance he has to walk to move from a given point in the field to another.InputThe input contains several test cases. Each test case is described in several lines. The first line contains five integersN,PX,PY,LXandLY.Nrepresents the number of catapults in the field (1 ≤N≤ 100). The pair (PX,PY) indicates the coordinates in the XY plane ot the starting point for Humberto, while the pair (LX,LY) indicates analogously the destination point (1 ≤PX,PY,LX,LY≤ 109). Each of the nextNlines describes a different catapult, using three integersCX,CYandF, that indicate the point (CX,CY) where the catapult of strengthFis installed. This means that Humberto may move, without walking, from the point (CX,CY) to any point in the plane that is at a distance ofexactlyFfrom (CX,CY). Assume that in each test case all the points given in the plane are different. The end of the input is indicated by a single line containing the number -1 five times, and it should not be processed as a test case.OutputFor each test case, output a single line containing a rational number that represents the minimum distance Humberto has to walk in order to get from the starting point to the destination point, using some or none of the catapults. Round the answer to the nearest rational with two decimal digits. In case of a tie, round up. Print exactly two digits after the decimal point, even if that means ending the number with 0's.ExampleInput:1 10 10 20 10\r\n11 10 9\r\n1 20 10 10 10\r\n11 10 9\r\n2 1 1 12 1\r\n3 1 6\r\n8 1 5\r\n1 12 12 1 1\r\n6 6 9\r\n5 10 10 1 1\r\n3 3 7\r\n8 3 7\r\n8 8 7\r\n3 8 7\r\n5 5 5\r\n-1 -1 -1 -1 -1Output:1.00\r\n10.00\r\n4.00\r\n10.41\r\n5.11",
  "sample_input": "Input:1 10 10 20 10\r\n11 10 9\r\n1 20 10 10 10\r\n11 10 9\r\n2 1 1 12 1\r\n3 1 6\r\n8 1 5\r\n1 12 12 1 1\r\n6 6 9\r\n5 10 10 1 1\r\n3 3 7\r\n8 3 7\r\n8 8 7\r\n3 8 7\r\n5 5 5\r\n-1 -1 -1 -1 -1Output:1.00\r\n10.00\r\n4.00\r\n10.41\r\n5.11",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/HEISLAZY",
  "scraped_at": "2025-08-17 00:34:37",
  "test_cases": [
    {
      "input": "1 10 10 20 10\r\n11 10 9\r\n1 20 10 10 10\r\n11 10 9\r\n2 1 1 12 1\r\n3 1 6\r\n8 1 5\r\n1 12 12 1 1\r\n6 6 9\r\n5 10 10 1 1\r\n3 3 7\r\n8 3 7\r\n8 8 7\r\n3 8 7\r\n5 5 5\r\n-1 -1 -1 -1 -1",
      "expected_output": "1.00\r\n10.00\r\n4.00\r\n10.41\r\n5.11",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "6 8 3 1 3\n7 5 2\n4 1 8 6 3\n10 4 4\n5 6 2 1 7\n3 10 8\n7 4 2\n5 10 4 6 1\n10 2 9\n7 1 8 3 1\n4 2 6\n8 8 8\n1 1 9\n9 6 2\n7 9 6\n5 5 5 1 2",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "7 2 10 3 7\n4 7 6\n1 6 10 4 6\n7 7 5\n7 1 2 7 5\n9 10 7\n2 10 9\n3 10 6 10 4\n3 2 7\n3 10 4 10 1\n10 7 3\n3 9 4\n8 4 9\n6 8 1\n8 9 4\n10 1 6 7 3",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "5 9 6 6 8\n5 10 6\n1 2 5 4 2\n5 6 8\n5 5 10 6 10\n9 2 5\n2 8 5\n10 4 4 6 6\n9 4 7\n4 6 6 2 8\n7 1 2\n1 2 3\n5 4 2\n8 1 1\n9 6 9\n2 2 2 2 8",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "69 61 30 47 80\n45 86 32\n46 78 82 4 31\n57 60 79\n67 89 88 74 69\n5 42 51\n62 100 33\n93 9 32 27 26\n58 29 93\n6 42 71 82 85\n88 27 73\n56 78 75\n7 65 88\n28 99 11\n3 16 26\n85 72 32 40 57",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "58 29 49 46 75\n62 21 27\n96 30 13 7 1\n37 37 22\n93 4 38 38 87\n47 32 86\n50 8 45\n69 24 40 37 84\n15 57 57\n93 40 29 57 55\n34 30 76\n64 56 42\n89 65 16\n47 95 30\n11 72 20\n29 2 57 84 24",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "39 46 22 91 16\n36 41 38\n31 84 17 42 36\n16 89 36\n95 73 65 91 62\n55 42 7\n54 60 58\n41 75 74 9 68\n70 30 99\n28 20 56 15 35\n42 40 98\n56 24 79\n61 96 90\n57 7 77\n21 26 26\n1 11 1 90 71",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "33 72 96 44 93\n47 82 61\n74 19 17 70 65\n14 56 93\n31 28 72 48 98\n93 3 35\n27 65 80\n31 76 9 58 75\n83 100 14\n84 56 20 56 32\n84 47 22\n79 86 78\n69 64 78\n7 36 60\n58 64 18\n30 16 33 86 96",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "77 57 78 27 53\n5 85 70\n73 68 62 7 70\n22 4 4\n78 8 78 32 24\n79 73 89\n3 96 42\n1 9 19 68 11\n2 74 52\n29 5 84 48 30\n73 17 96\n62 53 67\n92 31 45\n98 96 38\n53 43 31\n36 3 97 17 88",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "26 11 17 10 49\n47 41 46\n26 25 11 14 20\n9 40 46\n39 30 49 39 14\n10 48 12\n44 15 33\n8 12 47 27 40\n41 22 10\n44 29 38 6 43\n37 14 33\n41 49 27\n46 29 26\n47 34 27\n9 8 45\n34 31 30 37 23",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "40 32 41 15 42\n7 39 38\n14 45 43 13 37\n31 33 15\n45 13 14 45 15\n22 6 27\n18 42 45\n16 19 23 8 22\n34 40 19\n19 35 36 22 43\n15 22 50\n45 27 29\n44 48 28\n19 21 9\n5 44 42\n23 7 31 31 31",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "12 29 50 34 28\n10 49 50\n31 10 22 29 41\n11 21 49\n23 10 8 44 38\n45 47 32\n17 7 31\n48 36 28 46 25\n20 35 13\n10 44 28 46 12\n8 7 38\n36 48 41\n40 13 16\n30 13 40\n26 45 35\n17 18 10 16 6",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "38 15 33 7 47\n45 28 26\n31 29 45 17 44\n22 17 22\n22 10 38 24 6\n17 26 31\n18 11 25\n43 31 41 28 37\n21 40 15\n43 46 48 50 26\n25 10 49\n35 38 23\n50 24 39\n43 39 13\n19 49 35\n8 42 6 29 48",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "24 11 15 40 42\n24 37 38\n45 21 14 33 21\n40 9 35\n25 7 29 12 7\n25 31 45\n32 32 30\n22 23 38 28 24\n45 44 44\n35 23 24 29 14\n6 13 31\n9 35 50\n17 11 30\n46 40 16\n27 12 38\n49 19 18 34 26",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "8 16 14 13 7\n25 34 14\n44 5 37 41 45\n47 45 37\n32 27 31 24 49\n9 42 23\n20 16 16\n47 27 12 44 49\n16 15 5\n30 9 26 26 47\n23 38 21\n11 26 6\n32 15 23\n5 25 13\n8 21 7\n45 28 7 14 29",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "40 17 14 5 22\n23 17 46\n8 40 17 48 11\n11 28 11\n47 26 25 41 20\n44 10 7\n17 25 36\n43 15 50 7 12\n25 16 34\n37 29 32 32 23\n16 13 42\n15 46 38\n46 9 29\n25 18 18\n20 11 16\n49 36 31 28 46",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "100 100 100 100 100\n100 100 100\n100 100 100 100 100\n100 100 100\n100 100 100 100 100\n100 100 100\n100 100 100\n100 100 100 100 100\n100 100 100\n100 100 100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100 100 100",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "100 100 100 100 100\n100 100 100\n100 100 100 100 100\n100 100 100\n100 100 100 100 100\n100 100 100\n100 100 100\n100 100 100 100 100\n100 100 100\n100 100 100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100 100 100",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "100 99 1 100 1\n1 2 2\n100 2 100 1 99\n1 100 2\n99 100 100 99 100\n100 1 2\n2 100 1\n99 1 100 2 1\n1 2 99\n2 1 99 100 1\n100 100 100\n99 1 2\n2 100 100\n1 2 2\n100 100 100\n99 99 99 1 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "99 1 1 99 100\n99 100 99\n1 1 1 99 1\n99 1 100\n99 1 1 100 1\n1 100 99\n100 2 99\n99 100 99 2 1\n2 1 100\n2 2 100 2 2\n2 2 99\n2 1 1\n100 100 2\n99 1 1\n2 2 1\n100 99 1 100 100",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:24",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "M&M Game",
  "tags": [],
  "text": "EnglishVietnameseLittle John is playing very funny game with his younger brother. There  is\r\none big box filled with M&Ms of different colors. At first John has\r\nto eat several M&Ms of the same color. Then his opponent has to make a turn.\r\nAnd so on. Please note that each player has to eat at least one M&M\r\nduring his turn. If John (or his brother) will eat the last M&M from the\r\nbox he will be considered as a loser and he will have to buy a new candy box.Both of players are using optimal game strategy. John starts first always.\r\nYou will be given information about M&Ms and your task is to determine a\r\nwinner of such a beautiful game.InputThe first line of input will contain a single integer T – the number of\r\ntest cases. Next T pairs of lines will describe tests in a following format.\r\nThe first line of each test will contain an integer N –\r\nthe number of different M&M colors in a box. Next line will contain N integers Ai,\r\nseparated by spaces – number of M&Ms of i-th color.Constraints1 ≤ T ≤ 474,1 ≤ N ≤ 47,1 ≤ Ai ≤ 4747OutputOutput T lines each of them containing information about game winner.\r\nPrint “John” if John will win the game or “Brother” in other case.SampleInput:2\r\n3\r\n3 5 1\r\n1\r\n1Output:John\r\nBrother",
  "sample_input": "Input:2\r\n3\r\n3 5 1\r\n1\r\n1Output:John\r\nBrother",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/MMMGAME",
  "scraped_at": "2025-08-17 00:33:37",
  "test_cases": [
    {
      "input": "2\r\n3\r\n3 5 1\r\n1\r\n1",
      "expected_output": "John\r\nBrother",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3\n1\n5\n4",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n9\n4\n6\n6\n8",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n9",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "15\n9056782\n96630423\n686184\n40933666\n75440675\n16161119\n4454087\n43468297\n43939863\n10146817\n37431605\n58746318\n64873644\n9793708\n73098496",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "8\n38137387\n24747932\n34167656\n84111830\n45540164\n24700768\n39185242\n95322695",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "15\n90614829\n9057024\n94070819\n7821131\n68641517\n79679288\n85462016\n61442647\n63092765\n7603518\n40975127\n57711752\n64551811\n15984102\n33494635",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "5\n14945351\n74235267\n62430265\n32046715\n49356182",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "18\n31255610\n42407071\n40401065\n56982883\n35272188\n81917668\n50279588\n80977470\n22506509\n17377415\n64306744\n93882535\n47987636\n1990632\n9914925\n85994197\n8062074\n70151024",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "46\n13888\n2945\n62789\n38762\n85736\n82211\n88801\n65007\n52102\n209\n3\n32497\n74404\n61502\n17857\n19812\n95711\n11889\n48197\n50984\n79468\n54399\n81497\n56782\n45969\n90909\n14955\n15864\n78998\n62534\n82298\n20088\n5495\n20461\n66267\n61610\n63662\n20877\n40524\n19608\n54047\n20710\n46356\n93492\n76898\n32393",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "33\n73901\n79363\n38883\n50488\n95157\n21296\n73640\n33452\n58539\n72111\n91250\n34401\n81215\n18578\n82449\n64109\n60442\n99996\n34025\n85187\n17537\n36841\n19428\n98657\n41133\n26097\n6038\n50564\n70838\n33251\n60481\n88553\n13275",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "29\n88575\n25981\n84401\n13091\n1099\n95556\n69254\n15351\n30936\n45379\n21657\n92618\n95669\n37819\n29554\n24044\n7925\n86676\n77352\n85942\n95517\n98342\n72305\n87972\n9783\n91905\n49290\n92629\n46459",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "41\n91098\n21997\n33327\n81863\n44986\n34413\n6362\n31482\n42660\n15008\n56625\n62715\n69725\n4066\n20199\n90545\n40204\n13860\n42462\n36907\n94628\n71819\n67425\n80606\n85144\n34063\n91353\n76780\n3224\n49110\n36167\n15176\n57672\n63635\n17561\n16983\n22638\n3587\n9326\n33892\n76415",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "23\n85342\n24701\n45661\n31253\n83658\n56506\n19294\n55245\n98606\n37523\n83253\n34944\n91030\n54760\n91446\n67581\n48292\n15237\n88986\n75149\n77509\n73460\n97853",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "21\n85177\n87456\n97756\n87626\n83124\n13548\n55675\n72262\n28047\n90202\n87111\n56787\n48490\n89389\n14439\n62168\n33075\n10305\n35910\n15632\n3307",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "29\n11562\n40976\n73293\n80837\n83210\n16504\n89815\n87950\n2013\n87512\n39251\n78147\n8595\n12917\n58039\n65563\n38605\n79816\n57383\n12293\n72218\n6846\n9743\n32078\n7117\n59161\n27435\n3682\n99141",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "47\n78095076\n85077758\n79212033\n84938190\n72500184\n18774794\n56739654\n78667006\n85232614\n75166013\n28782785\n85238176\n54652557\n29113527\n9790665\n35539009\n34419949\n28232019\n15519473\n19086018\n36527574\n65761366\n46353791\n83584410\n31952766\n21364540\n7789789\n38130795\n50664332\n70609281\n76219494\n74468417\n35671478\n69262149\n62347951\n60580188\n51849105\n37745162\n14205426\n29081514\n82188036\n88903446\n23537873\n48905573\n48721313\n24396304\n30055185",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 47)"
    },
    {
      "input": "47\n73609960\n90020336\n79581579\n58514728\n62515595\n84820920\n95606348\n58818144\n68636901\n47168467\n90588569\n3406647\n1746586\n31125409\n78906613\n82571819\n52807857\n66306820\n72591380\n87288291\n68809017\n25156284\n27594502\n61157911\n42379262\n10510916\n62462960\n4858396\n49515508\n69389023\n85720542\n97970033\n82282609\n79412055\n17921649\n66391922\n80235501\n22122496\n98951422\n50398550\n37266853\n55293664\n42526322\n35700923\n56732581\n82456492\n65016018",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 47)"
    },
    {
      "input": "1\n1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 1)"
    },
    {
      "input": "47\n100000000\n47364982\n100000000\n12385320\n1\n81647389\n1\n81862985\n1\n1\n100000000\n84290194\n75111437\n100000000\n100000000\n1\n17308039\n1\n1\n100000000\n1\n1\n1\n1\n100000000\n100000000\n14334544\n100000000\n1\n100000000\n1\n86078898\n100000000\n1\n34055689\n1\n100000000\n1\n32147187\n82436319\n1\n100000000\n97636481\n100000000\n100000000\n100000000\n1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 47)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:17",
  "total_test_cases": 20
}
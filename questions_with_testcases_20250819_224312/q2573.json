{
  "problem_code": "problems",
  "title": "Counting pairs",
  "tags": [],
  "text": "You're given a sequence A of N non-negative integers. Answer Q queries, where each query consists of three integers: v, a, b. The answer is number of pairs of integers i and j that satisfy these conditions:1 ≤ i ≤ j ≤ Na ≤ j-i+1 ≤ bA[k] ≥ v for every integer k between i and j, inclusiveConstraints1 ≤ N ≤ 100 0001 ≤ Q ≤ 100 0000 ≤ A[k] ≤ 1000, for every integer k between 1 and N, inclusive0 ≤ v ≤ 10001 ≤ a ≤ 100 0001 ≤ b ≤ 100 000InputThe first line of input contains two integers, N and Q. The second line contains the sequence A, consisting of N integers. Each of the next Q lines contains three numbers, v, a and b, defining a query.OutputIn the i-th line output only one integer denoting the answer to the i-th query.ExampleInput:5 3\r\n5 3 2 7 4\r\n3 2 3\r\n2 2 5\r\n4 1 1Output:2\r\n10\r\n3",
  "sample_input": "Input:5 3\r\n5 3 2 7 4\r\n3 2 3\r\n2 2 5\r\n4 1 1Output:2\r\n10\r\n3",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/CPAIR",
  "scraped_at": "2025-08-17 00:33:56",
  "test_cases": [
    {
      "input": "5 3\r\n5 3 2 7 4\r\n3 2 3\r\n2 2 5\r\n4 1 1",
      "expected_output": "2\r\n10\r\n3",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "10 9\n2 5 6 1 7\n3 1 8\n8 3 9\n9 8 8",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "2 6\n2 10 7 2 8\n6 4 2\n10 10 3\n2 4 6",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "4 6\n7 8 5 2 1\n7 2 8\n2 6 9\n2 1 10",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "65 4\n40 73 11 16 8\n16 51 47\n95 11 34\n58 59 83",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "37 70\n89 72 25 71 15\n29 33 29\n67 73 45\n56 22 33",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "28 49\n93 67 10 95 19\n21 7 32\n6 67 40\n79 23 37",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "10 99\n28 47 37 76 21\n28 67 33\n30 50 44\n2 17 23",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "80 52\n53 28 97 95 43\n7 86 61\n19 50 79\n55 14 41",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "96995 276897\n423175 346778 276640 133894 344010\n457847 73120 243972\n197630 239100 77462\n473564 358329 363625",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "233494 414739\n407871 219546 482258 152589 420279\n456175 118282 111026\n190785 101152 467321\n383833 91377 124807",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "205826 222793\n295369 421059 177469 275217 286197\n112777 281195 227118\n266030 379747 489857\n109665 448940 444643",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "108132 247029\n311810 58038 292019 337456 300659\n313206 360983 486684\n308154 252109 343939\n250476 304170 85419",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "453260 239630\n109178 238046 239521 85036 219185\n352506 362054 455890\n310334 237542 173130\n175291 315054 211873",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "456139 66039\n284568 157920 357476 303849 457356\n67556 256796 129931\n284397 427353 310663\n433907 416068 193045",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "172686 235299\n290607 194926 79874 197057 301187\n382274 344892 484827\n357207 229531 342635\n442336 449414 409832",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000000 1000000\n1000000 1000000 1000000 1000000 1000000\n1000000 1000000 1000000\n1000000 1000000 1000000\n1000000 1000000 1000000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000000 1000000\n1000000 1000000 1000000 1000000 1000000\n1000000 1000000 1000000\n1000000 1000000 1000000\n1000000 1000000 1000000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000000 999999\n1000000 1000000 2 1 1\n2 999999 1\n999999 999999 1000000\n2 999999 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 2\n2 2 1 999999 1\n1 2 1000000\n2 1000000 1\n999999 999999 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:21",
  "total_test_cases": 20
}
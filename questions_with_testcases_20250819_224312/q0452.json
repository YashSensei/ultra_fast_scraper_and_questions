{
  "problem_code": "problems",
  "title": "Bankomat",
  "tags": [],
  "text": "As a world-renowned computer scientist, you have received an offer from a start-up Swiss bank to write some software for ATMs. Your program has to check if it is able to withdraw the amount requested by the customer with the available banknotes.InputThe first line contains the number D, indicating the number of data sets. Each data set fits on one line and consists of six numbers: a1, a2, a3, a4, a5, k (ai ≤ 1000, k ≤ 10000). Numbers a1 - a5 denote the number of 10, 20, 50, 100, 200 Swiss franc banknotes available in the ATM. The number k indicates the desired amount to be withdrawn.OutputFor each data set, one line should appear in the result containing the single word TAK (yes) or NIE (no) indicating whether the ATM can currently supply the requested amount.ExampleInput:30 2 10 10 1000 1101 2 10 10 1000 110199 100 40 20 10 10000Output:NIETAKNIE",
  "sample_input": "Input:30 2 10 10 1000 1101 2 10 10 1000 110199 100 40 20 10 10000Output:NIETAKNIE",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/SP2004X",
  "scraped_at": "2025-08-17 00:33:06",
  "test_cases": [
    {
      "input": "30 2 10 10 1000 1101 2 10 10 1000 110199 100 40 20 10 10000",
      "expected_output": "NIETAKNIE",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "8 4 9 10 2 10 3 3 6 10 10 5 10 5 1 5",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "10 3 9 6 5 9 8 9 5 4 9 9 7 3 7 4",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "10 3 1 7 5 9 5 4 5 6 6 8 8 3 10 2",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "90 46 100 15 33 47 71 13 17 81 36 3 65 20 74 22",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "79 100 57 74 42 82 96 19 27 9 68 28 38 94 63 37",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "31 28 63 43 85 82 13 97 44 63 17 94 41 72 22 3",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "53 29 13 86 15 82 83 95 32 32 94 9 22 5 97 69",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "80 6 98 79 2 54 13 80 6 6 74 80 75 61 76 76",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "463 301 369 367 369 355 464 129 392 369 268 167 418 63 375 174",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "410 73 287 268 175 241 325 172 97 234 231 198 206 71 86 175",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "407 324 442 299 270 172 158 92 332 74 125 162 299 154 202 429",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "90 250 217 201 476 131 55 311 220 117 332 229 292 476 473 356",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "417 124 398 175 150 290 136 320 105 204 299 301 214 429 492 216",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "457 137 384 402 434 85 223 134 372 411 467 198 179 250 159 425",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "132 251 480 444 266 424 350 246 270 56 227 280 267 429 342 402",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 1 2 999 1000 999 1000 2 2 1000 1 1 1 2 999 999",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1000 2 999 1000 2 999 1 2 999 999 999 999 1 1000 2 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:14",
  "total_test_cases": 20
}
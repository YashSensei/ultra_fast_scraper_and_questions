{
  "problem_code": "problems",
  "title": "Solution to all the problems",
  "tags": [],
  "text": "People have been coming to the wise man, complaining about the same problems every time.One day he told them a joke and everyone roared in laughter.After a couple of minutes, he told them the same joke and only a few of them smiled.When he told the same joke for the third time no one laughed.The wise man smiled and said:\"You can't laugh at the same joke over and over. So why are you always crying about the same problem?\"He has also created a very simple game to cheer the people up. The game is as follows:You are given a sequence A of N integers.The task is to answer Q queries on the given sequence. For each query, you will be given four space-separated integers L, R, P, K.Print the index of Kthoccurrence of P in L to R(inclusive). If no such index exists, print -1.InputThe first line contains two space-separated integers N and Q.The second line contains N space-separated integers. (1-based indexing)Following Q lines contain,Four integers L, R, P, K.OutputFor each query, print a single line containing one integer between 1 to N i.e. index of the Kthoccurrence of P in L to R.Print -1 if no such index exists.Constraints2 ≤ N, Q ≤ 1051 ≤ Ai≤ 1061 ≤ L < R ≤ N1 ≤ P ≤ 1061 ≤ K ≤ NExampleInput:10 3\r\n1 1 2 1 2 3 1 2 3 4\r\n1 10 2 3\r\n1 5 2 3\r\n5 9 3 2Output:8\r\n-1\r\n9",
  "sample_input": "Input:10 3\r\n1 1 2 1 2 3 1 2 3 4\r\n1 10 2 3\r\n1 5 2 3\r\n5 9 3 2Output:8\r\n-1\r\n9",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/KTH_INDEX",
  "scraped_at": "2025-08-17 00:34:07",
  "test_cases": [
    {
      "input": "10 3\r\n1 1 2 1 2 3 1 2 3 4\r\n1 10 2 3\r\n1 5 2 3\r\n5 9 3 2",
      "expected_output": "8\r\n-1\r\n9",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5 5\n3 3 2 5 4 3 2 6 7 6\n5 2 4 6\n9 2 1 10\n10 1 8 10",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "1 8\n1 7 6 6 10 8 10 9 4 9\n1 7 9 6\n8 8 5 7\n3 10 3 1",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "4 4\n1 3 9 1 6 10 1 10 2 6\n2 7 5 5\n2 10 2 1\n4 4 9 10",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "42 70\n86 10 47 37 46 7 4 21 9 68\n16 18 58 18\n52 43 33 64\n57 44 95 16",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "46 38\n43 25 4 32 73 6 44 72 2 14\n48 93 99 23\n31 19 55 61\n51 13 24 14",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "75 38\n15 47 49 3 13 98 99 33 53 12\n80 15 42 49\n79 16 65 79\n32 7 14 38",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "6 1\n47 22 32 20 50 3 82 54 89 54\n86 74 17 65\n46 90 10 39\n19 29 35 6",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "77 10\n37 75 34 100 94 46 71 66 89 82\n27 37 64 1\n44 27 40 12\n48 95 2 29",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "147 324\n59 407 386 458 271 444 240 309 203 387\n356 384 90 237\n218 379 484 399\n53 385 124 150",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "67 229\n181 468 222 176 456 346 209 120 359 292\n368 398 277 224\n409 455 59 260\n461 121 318 187",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "230 110\n181 324 157 84 83 392 494 183 96 345\n223 154 307 125\n56 181 99 203\n118 306 253 145",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "412 220\n220 136 197 478 194 411 451 390 69 474\n245 438 448 51\n475 251 82 378\n114 272 308 241",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "464 223\n361 287 259 187 99 117 472 197 418 370\n363 120 405 166\n361 392 139 452\n318 212 373 251",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "78 111\n196 413 71 306 151 122 378 101 154 163\n85 206 218 379\n345 327 217 194\n455 111 91 100",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "181 348\n209 407 152 223 230 163 464 155 340 496\n139 106 377 147\n317 221 120 175\n122 302 167 386",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 2\n999 2 2 1 2 999 2 2 1 1000\n999 999 999 999\n999 1 1000 1000\n1 999 2 999",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "999 999\n2 2 1000 2 1000 2 999 999 1000 1000\n1000 999 2 2\n2 1 1 999\n1 999 1 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:21",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Two \"Ways\"",
  "tags": [],
  "text": "There are N places and M bidirectional ways. No two places have more than one direct way. Ana wants to walk from S to T and return to S by an itinerary that satisfies:No way can be used twice.Length of itinerary is the minimum.InputLine 1: 4 integers: N, M, S, T (N ≤ 104; M ≤ 105)Next M line: Line i include 3 integers ui, vi, ci: distance of two places uiand viis ci. (ci≤ 2000000000).OutputLength of the itinerary if it exists. Else print -1.ExampleInput:5 7 1 51 2 31 4 82 3 52 4 43 5 54 3 84 5 3Output:24",
  "sample_input": "Input:5 7 1 51 2 31 4 82 3 52 4 43 5 54 3 84 5 3Output:24",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/SPHIWAY",
  "scraped_at": "2025-08-17 00:33:32",
  "test_cases": [
    {
      "input": "5 7 1 51 2 31 4 82 3 52 4 43 5 54 3 84 5 3",
      "expected_output": "24",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1 6 6 5 8 5 3 8 6 4 4 9 7 1 1 7 10 1",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "5 3 5 2 5 3 6 1 2 7 5 5 9 3 6 8 6 5",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "2 9 4 4 7 9 4 3 9 7 9 3 10 2 5 4 5 9",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "100 6 2 32 68 65 95 64 18 93 66 41 38 66 3 65 18 34",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "3 68 96 41 13 7 19 36 29 7 7 47 43 65 14 91 53 4",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "5 31 30 28 67 28 68 10 73 9 8 70 62 54 5 30 85 71",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "13 78 52 30 80 61 95 48 44 16 35 44 75 51 24 73 83 94",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "84 67 100 52 26 51 50 74 60 78 31 74 48 73 88 89 94 2",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "37 24 12 10 21 14 31 33 42 47 23 26 18 50 14 5 51 18",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "6 33 50 7 19 52 25 19 27 20 33 31 9 32 42 6 22 47",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "48 23 10 45 29 14 27 26 34 36 36 22 12 38 51 40 11 8",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "36 50 28 29 45 50 16 33 20 48 17 7 31 48 51 25 42 21",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "32 16 12 13 24 35 47 14 14 8 36 51 30 48 51 23 8 23",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "45 34 16 19 26 23 35 13 25 17 20 16 37 21 22 21 28 7",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "35 38 21 40 15 20 25 48 41 21 38 37 5 45 12 9 25 9",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "104 104 104 104 104 104 104 104 104 104 104 104 104 104 104 104 104 104",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "104 104 104 104 104 104 104 104 104 104 104 104 104 104 104 104 104 104",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 2 2 104 103 1 1 103 1 1 104 103 104 103 1 103 104 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 103 104 1 1 103 1 1 104 104 103 1 2 103 103 103 2 103",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:17",
  "total_test_cases": 20
}
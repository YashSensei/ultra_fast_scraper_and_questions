{
  "problem_code": "problems",
  "title": "Ada and List",
  "tags": [],
  "text": "Ada the Ladybug has a TODO-list (containing only numbers - for simplicity). She is still doing something, so she sometimes eraseskthnumber, sometimes she inserts something onkthposition and sometime she asks forkthnumber.Sadly, she is now searching for a work at positionkso she doesn't have time to do this herself. Can you help her?InputThe first line will contain0 < N ≤ 105,0 < Q <             5*105, the number of elements in TODO-list and         number of queries.Then a line withNnumbers follows. Each number0 ≤ Ak≤ 109meanskthnumber in her TODO-list.Afterward,Qlines follow, each beginning with number1 ≤ a     ≤ 31k xmeans that you will add numberxto positionk2kmeans that you will erase number from positionk3kmeans that you will print number from positionkFor all queries, it is true that1 ≤ k ≤ #SizeOfList,0     ≤ x ≤ 109(for query1, it can be also put to position#SizeOfList + 1)You will never get query of type2or3if the list is emptyOutputFor each query of type3, printkthnumbersExample Input6 10\r\n1 2 4 8 16 32\r\n3 4\r\n1 1 7\r\n3 2\r\n2 2\r\n2 2\r\n3 2\r\n1 6 666\r\n3 6\r\n2 1\r\n3 1Example Output8\r\n1\r\n4\r\n666\r\n4Queries explanations1 2 4816 32\r\n7 1 2 4 8 16 32\r\n712 4 8 16 32\r\n7 2 4 8 16 32\r\n7 4 8 16 32\r\n748 16 32\r\n7 4 8 16 32 666\r\n7 4 8 16 326664 8 16 32 66648 16 32 666",
  "sample_input": "6 10\r\n1 2 4 8 16 32\r\n3 4\r\n1 1 7\r\n3 2\r\n2 2\r\n2 2\r\n3 2\r\n1 6 666\r\n3 6\r\n2 1\r\n3 1",
  "sample_output": "8\r\n1\r\n4\r\n666\r\n4",
  "link": "https://www.spoj.com/problems/ADALIST",
  "scraped_at": "2025-08-17 00:34:10",
  "test_cases": [
    {
      "input": "6 10\r\n1 2 4 8 16 32\r\n3 4\r\n1 1 7\r\n3 2\r\n2 2\r\n2 2\r\n3 2\r\n1 6 666\r\n3 6\r\n2 1\r\n3 1",
      "expected_output": "8\r\n1\r\n4\r\n666\r\n4",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "6 1\n1 4 3 10 6 2\n5 1\n1 6 3\n4 8\n8 8\n5 2\n6 6\n9 7 2\n2 7\n3 1\n6 3",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "4 9\n5 2 4 1 6 1\n9 5\n9 7 1\n7 2\n2 10\n2 2\n5 5\n2 7 6\n10 2\n9 4\n8 5",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "5 6\n8 10 7 8 3 4\n3 4\n5 1 4\n3 9\n6 3\n2 1\n1 6\n8 2 4\n2 1\n2 9\n7 3",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "35 2\n97 44 34 40 73 2\n91 40\n24 74 33\n18 24\n47 13\n75 87\n31 86\n62 27 65\n4 3\n4 11\n38 34",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "89 9\n26 65 13 30 88 4\n52 25\n100 97 24\n29 45\n68 89\n91 11\n37 45\n77 51 61\n87 38\n60 10\n15 49",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "24 23\n87 83 95 55 88 68\n84 15\n54 52 85\n92 59\n70 65\n10 63\n78 97\n51 41 84\n65 84\n77 86\n70 30",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "37 73\n79 12 97 46 71 52\n36 85\n32 10 55\n48 29\n35 80\n25 45\n71 52\n98 33 70\n73 41\n34 72\n75 92",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "29 3\n43 21 98 99 3 97\n88 14\n81 9 13\n34 6\n80 20\n5 43\n32 96\n98 77 13\n83 81\n15 19\n87 20",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "36 52\n30 7 19 33 7 17\n45 9\n49 7 51\n8 14\n41 21\n37 15\n49 9\n37 42 8\n36 22\n14 7\n23 45",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "20 46\n9 45 38 21 5 19\n16 17\n14 20 30\n14 31\n14 17\n25 23\n29 10\n23 40 50\n30 25\n51 26\n12 14",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "17 50\n43 6 36 11 40 13\n27 10\n34 16 21\n5 13\n42 33\n44 7\n44 43\n38 14 40\n50 42\n46 52\n34 27",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "23 39\n5 46 23 39 39 18\n27 22\n14 41 31\n15 33\n45 20\n41 21\n20 11\n9 24 35\n37 52\n46 13\n38 17",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "32 43\n20 50 48 6 43 5\n47 28\n50 24 33\n19 42\n13 17\n31 50\n18 38\n40 44 13\n9 9\n27 26\n12 5",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "22 39\n29 38 14 49 24 24\n20 23\n10 22 21\n23 29\n41 7\n26 22\n12 15\n27 48 34\n20 25\n34 12\n52 24",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "52 28\n28 15 42 8 6 12\n22 36\n10 12 35\n31 14\n9 10\n40 15\n17 10\n47 22 43\n7 27\n31 52\n47 17",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "105 105\n105 105 105 105 105 105\n105 105\n105 105 105\n105 105\n105 105\n105 105\n105 105\n105 105 105\n105 105\n105 105\n105 105",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "105 105\n105 105 105 105 105 105\n105 105\n105 105 105\n105 105\n105 105\n105 105\n105 105\n105 105 105\n105 105\n105 105\n105 105",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 105\n2 1 105 104 2 1\n105 105\n104 2 2\n105 105\n104 105\n105 2\n104 1\n1 1 105\n2 105\n105 105\n104 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 2\n1 1 1 1 1 104\n105 1\n105 104 105\n2 2\n104 2\n1 1\n105 2\n1 104 105\n105 1\n104 105\n1 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:21",
  "total_test_cases": 20
}
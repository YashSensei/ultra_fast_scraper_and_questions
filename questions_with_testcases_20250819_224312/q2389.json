{
  "problem_code": "problems",
  "title": "Fast Maximum Matching",
  "tags": [],
  "text": "FJ has N (1 ≤ N ≤ 50,000) cows and M (1 ≤ M ≤ 50,000) bulls. Given a list of P (1 ≤ P ≤ 150,000) potential matches between a cow and a bull, compute the greatest number of pairs that can be matched. Of course, a cow can be matched to at most one bull, and vice versa.InputThe first line contains three integers, N, M, and P. Each of the next P lines contains two integers A (1 ≤ A ≤ N) and B (1 ≤ B ≤ M), denoting that cow A can be matched with bull B.OutputPrint a single integer that is the maximum number of pairs that can be obtained.ExampleInput:5 4 6\r\n5 2\r\n1 2\r\n4 3\r\n3 1\r\n2 2\r\n4 4Output:3Cow 1 can be matched to bull 2, cow 3 to bull 1, and cow 4 to bull 3.Note: see alsohttp://www.spoj.com/problems/FASTFLOW/.",
  "sample_input": "Input:5 4 6\r\n5 2\r\n1 2\r\n4 3\r\n3 1\r\n2 2\r\n4 4Output:3",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/MATCHING",
  "scraped_at": "2025-08-17 00:34:06",
  "test_cases": [
    {
      "input": "5 4 6\r\n5 2\r\n1 2\r\n4 3\r\n3 1\r\n2 2\r\n4 4",
      "expected_output": "3",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "9 6 5\n4 5\n4 9\n1 1\n10 1\n10 4\n5 9",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "3 7 1\n2 2\n6 5\n4 2\n1 8\n9 3\n9 5",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "3 7 10\n6 1\n6 3\n10 8\n1 5\n4 4\n6 2",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "44 31 27\n39 22\n32 47\n14 9\n30 40\n15 24\n11 25",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "29 27 26\n29 20\n12 21\n19 24\n22 48\n41 13\n26 10",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "33 32 22\n24 40\n12 39\n14 49\n49 31\n12 9\n1 36",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "4 20 23\n40 45\n45 38\n17 17\n3 31\n28 33\n46 4",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "31 30 17\n33 6\n19 12\n35 38\n9 36\n17 11\n15 10",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "19 12 12\n5 8\n6 14\n24 9\n21 16\n21 18\n17 25",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "23 22 4\n6 6\n19 24\n15 13\n24 2\n2 12\n23 17",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "18 7 12\n6 20\n6 19\n4 12\n3 12\n9 13\n11 6",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "11 14 6\n6 4\n9 11\n13 15\n5 7\n23 11\n10 22",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "4 23 20\n8 12\n21 2\n7 22\n5 13\n19 12\n12 25",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "11 8 14\n3 11\n17 16\n23 18\n17 4\n12 11\n20 18",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "3 18 22\n6 18\n3 11\n24 3\n11 14\n7 13\n22 17",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "50 50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "50 50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 49 2\n49 2\n49 50\n1 49\n1 2\n1 2\n50 50",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 49 49\n50 50\n2 50\n50 2\n49 1\n50 49\n1 50",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:20",
  "total_test_cases": 20
}
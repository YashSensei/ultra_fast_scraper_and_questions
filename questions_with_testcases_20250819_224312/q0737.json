{
  "problem_code": "problems",
  "title": "Funny Areas",
  "tags": [],
  "text": "There is an M × N matrix of integer numbers.  Both the rows and columns of the matrix are numbered starting at 0 and ending at M-1 and N-1 respectively.A funny area is defined by three integers i, j, and r, and it is composed for those cells [x, y] such that |i-x| + |j-y| ≤ r. As you might have probably guessed[i, j]is the center andris the radius of the funny area.In this problem we are interested in finding the sum of every cell inside some given funny areas.InputThe first line contains two integers 1 ≤ M, N ≤ 1000 representing the rows and columns of the matrix.Each of the following M lines contains N integers separated by single spaces. These numbers are non-negative and not greater than 1,000,000,000The next line contains a number F (1 ≤ F ≤ 100,000) which is the number of funny areas.Each of the following F lines contains three integersi,j, andrrepresenting the center and the radius of a funny area.OutputF lines: for each funny area print a single number -- the sum of all the cells inside of it.ExampleInput5 5\r\n1 2 3 4 5\r\n5 4 3 2 1\r\n1 1 1 1 1\r\n2 3 4 3 0\r\n7 8 9 6 5\r\n3\r\n1 0 0\r\n2 2 2\r\n3 1 1Output5\r\n36\r\n18",
  "sample_input": "Input5 5\r\n1 2 3 4 5\r\n5 4 3 2 1\r\n1 1 1 1 1\r\n2 3 4 3 0\r\n7 8 9 6 5\r\n3\r\n1 0 0\r\n2 2 2\r\n3 1 1Output5\r\n36\r\n18",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/FUNAREA",
  "scraped_at": "2025-08-17 00:33:17",
  "test_cases": [
    {
      "input": "Input5 5\r\n1 2 3 4 5\r\n5 4 3 2 1\r\n1 1 1 1 1\r\n2 3 4 3 0\r\n7 8 9 6 5\r\n3\r\n1 0 0\r\n2 2 2\r\n3 1 1Output5\r\n36\r\n18",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3 6\npif 4\n3 3 5 3 6\n1 8 9 9 9\n3 5 7 10 8\n9 2 8 9 8\n10 10 9 9 5\n9\n2 7 4\n8 3 7\n10 3 6 8\n9 2 fcxymfev\n10\n3",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "5 3\nptpui 10\n5 6 3 8 1\n2 1 5 8 3\n4 1 7 5 6\n3 6 2 10 1\n3 3 2 2 10\n2\n6 9 10\n4 10 9\n9 10 6 1\n2 1 txfnnzfu\n8\n9",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "6 8\ngyhn 3\n7 3 1 6 7\n5 7 4 7 10\n7 4 1 3 5\n2 5 9 4 2\n3 4 3 10 2\n6\n3 6 5\n10 1 3\n10 2 5 5\n10 7 mjv\n1\n1",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "28 37\nhcvr 79\n67 63 6 57 99\n26 47 74 1 60\n53 5 32 56 93\n55 98 68 68 4\n12 61 17 83 78\n99\n45 38 80\n85 33 51\n97 33 75 35\n25 92 if\n80\n69",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "64 91\nh 23\n17 98 68 93 35\n65 87 49 50 91\n90 49 26 23 41\n96 36 20 9 56\n14 2 53 97 54\n54\n22 25 67\n64 93 61\n83 9 54 44\n83 19 vv\n82\n76",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "87 84\ngywv 87\n2 7 98 18 72\n22 32 30 72 19\n25 1 35 9 1\n33 65 21 47 97\n60 53 61 59 55\n100\n35 62 53\n95 59 86\n3 9 71 38\n75 98 qyupkp\n47\n92",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "40 58\ndzuqs 79\n23 95 80 58 47\n66 53 13 51 25\n15 35 27 48 36\n13 28 89 41 6\n61 50 54 46 21\n98\n87 60 43\n8 97 10\n55 69 10 43\n16 61 md\n37\n45",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "99 100\nh 71\n85 49 95 88 34\n68 70 47 6 65\n5 2 9 7 46\n5 27 67 12 41\n8 49 16 27 86\n77\n35 57 100\n9 69 1\n32 62 22 62\n34 64 xyckdsvw\n21\n79",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "449 431\nnmex 151\n132 132 56 66 480\n480 227 133 153 447\n112 305 323 107 329\n195 353 73 199 289\n50 360 398 481 470\n192\n483 86 376\n172 139 152\n55 115 107 414\n95 275 fwdsulp\n261\n445",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "470 153\nimcrhk 131\n223 246 381 267 240\n382 155 191 376 390\n193 294 56 67 278\n229 108 459 110 291\n493 460 80 403 147\n300\n389 67 290\n129 468 405\n210 368 82 388\n402 356 cftrc\n308\n289",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "426 362\nsw 346\n452 148 134 137 413\n219 139 446 119 213\n479 366 414 241 411\n123 438 196 470 128\n318 251 386 128 424\n492\n445 253 296\n77 274 97\n349 206 408 266\n369 337 xymqf\n441\n379",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "100 299\nkwfb 421\n77 387 214 64 187\n197 234 263 498 494\n178 99 475 319 242\n254 145 263 348 83\n495 75 78 89 487\n342\n335 323 325\n287 293 140\n310 228 236 304\n128 359 o\n347\n412",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "181 311\ndcvd 55\n350 276 172 183 185\n349 71 462 86 142\n223 55 430 378 444\n344 91 443 146 471\n346 416 361 186 166\n203\n90 79 127\n360 259 465\n264 66 237 435\n292 227 eynjfa\n170\n131",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "313 91\nfotj 188\n287 383 154 230 124\n441 331 475 450 112\n100 196 176 233 158\n181 127 407 272 55\n55 153 401 440 448\n133\n178 330 229\n335 307 63\n444 96 107 56\n55 428 lofejhb\n229\n345",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "250 102\nwhhzw 445\n70 283 461 379 315\n335 214 439 379 106\n153 119 381 231 64\n174 475 93 271 316\n452 425 285 409 371\n442\n500 253 181\n417 417 239\n413 128 432 484\n212 428 fpkzoeej\n150\n89",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\nkzivfo 1000\n1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000\n1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000 1000\n1000 1000 t\n1000\n1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\nbygif 1000\n1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000\n1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000 1000\n1000 1000 aki\n1000\n1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 1000\nb 999\n1000 1000 1 2 2\n2 2 999 2 1\n999 2 1000 999 2\n1 1 1 999 2\n2 2 2 1 1\n1000\n999 1 1000\n999 1000 2\n2 999 1 1000\n999 2 qqld\n1000\n1000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "999 1000\nslsc 999\n999 2 999 2 999\n999 1000 2 1000 2\n1 1 999 999 1\n1000 2 1000 1000 2\n1000 1000 1 1 2\n999\n1 2 1\n2 1000 1\n999 999 1 1000\n2 999 hsc\n1\n1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:15",
  "total_test_cases": 20
}
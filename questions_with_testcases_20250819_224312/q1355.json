{
  "problem_code": "problems",
  "title": "Distance",
  "tags": [],
  "text": "You are given the coordinates of N cities (xi, yi). Each city also has a popularity value, pi. You have to place a new city (x, y) such that the sum of distances of this new point from all the other given points is minimized.Distance of the new point from a given city i is given by:d = |xi- x|pi+ | yi- y |piInputThe first line contains the number of test cases.Each test case starts with the number N, the number of points. This is followed by the descriptions of each in the formatxiyipi. The input consists of only integers.OutputFor each test case, output the minimum distance obtained, with exactly 3 digits after the decimal point.ExampleInput:1\r\n3\r\n1 2 0\r\n4 5 1\r\n2 4 2Output:4.500ConstraintsNumber of test cases ≤ 10N ≤ 105|xi, yi| ≤ 10000 ≤ pi≤ 3",
  "sample_input": "Input:1\r\n3\r\n1 2 0\r\n4 5 1\r\n2 4 2Output:4.500",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/DIST",
  "scraped_at": "2025-08-17 00:33:31",
  "test_cases": [
    {
      "input": "1\r\n3\r\n1 2 0\r\n4 5 1\r\n2 4 2",
      "expected_output": "4.500",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4\n7\n1\n1\n9",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n2",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n7\n7\n6\n2\n1",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "11\n97374623\n16650706\n67152415\n2074375\n72424085\n67649639\n22133413\n51373526\n90454855\n13635979\n90376842",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "19\n14233572\n91500902\n16025415\n82274176\n28503167\n64104557\n32506012\n96925943\n19263708\n62742654\n35540107\n32231791\n82211430\n77285173\n53525071\n39328890\n24043873\n7141669\n6863499",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "16\n51529518\n1301024\n24331234\n23535516\n4713693\n50278909\n34759034\n28332302\n5225374\n15671241\n50521565\n94004352\n7205515\n62298439\n56754261\n67148791",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "9\n44624491\n47429278\n50671500\n40232928\n58651004\n15578879\n68290842\n35920373\n80442799",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "20\n43504360\n54393564\n88381152\n64206517\n12909073\n42116715\n25646506\n70456483\n7038128\n52549898\n55786914\n54800142\n16921875\n47176669\n74970943\n30653615\n33306427\n1461761\n65223860\n38970085",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "50\n70792\n42929\n97904\n93094\n91680\n72802\n50104\n11808\n97388\n90949\n54682\n60339\n64393\n90296\n81131\n982\n28606\n92313\n19110\n28149\n1429\n49309\n32516\n38117\n75496\n11178\n7732\n16261\n83642\n65849\n95133\n74869\n31204\n99137\n35043\n86826\n7146\n83007\n52632\n51311\n67168\n79597\n18540\n5913\n57481\n35129\n74704\n8668\n36895\n29764",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "24\n64571\n77547\n14922\n23580\n37162\n73257\n74734\n23556\n22605\n5571\n4430\n73737\n97225\n31967\n65435\n98747\n17053\n30087\n86981\n27004\n79319\n66907\n6852\n59091",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "29\n58255\n98945\n26185\n15215\n43237\n70314\n85486\n4837\n35081\n49025\n8817\n52947\n78807\n60763\n36393\n23724\n85047\n25996\n23217\n98669\n74071\n85908\n75376\n73531\n61170\n80883\n17968\n17062\n94303",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "33\n59995\n43787\n93416\n67199\n21141\n43734\n49681\n17868\n62914\n97502\n31833\n70596\n71467\n12894\n13442\n56874\n59556\n157\n33317\n9147\n95432\n95342\n53508\n47397\n78839\n97008\n58450\n44173\n24207\n59256\n53939\n47366\n40092",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "72\n37076\n74192\n99187\n39139\n91426\n42811\n97062\n37923\n88624\n18191\n76424\n70116\n82332\n32066\n23850\n36209\n23541\n31167\n62199\n95173\n79828\n33087\n53\n51712\n38282\n24979\n92371\n60352\n4802\n23949\n77459\n78098\n15085\n85236\n77198\n35746\n69575\n83574\n97977\n24161\n52078\n10908\n77538\n91904\n2538\n90943\n13726\n65249\n61332\n46240\n51223\n36040\n401\n59612\n59606\n56560\n29602\n8818\n35703\n86996\n91966\n93223\n99002\n73945\n85537\n85159\n10673\n75101\n9671\n3488\n54868\n4452",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "47\n56842\n66202\n84548\n38753\n67086\n50612\n66122\n43068\n84971\n44583\n1655\n59657\n60178\n70738\n5219\n62930\n39642\n66144\n38032\n17961\n17939\n21928\n2520\n84510\n52877\n84871\n6687\n79677\n60448\n75794\n44149\n74864\n76172\n81812\n27729\n19927\n64064\n50373\n28482\n56881\n85091\n33311\n95760\n746\n30532\n30122\n33478",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "31\n58743\n30832\n77561\n98429\n81315\n42101\n96743\n29091\n62617\n43686\n91229\n94317\n52747\n75636\n21797\n22218\n95916\n125\n68242\n51624\n79241\n20241\n46325\n85659\n72269\n5768\n24989\n64906\n78302\n17079\n82360",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "105\n75231173\n22378331\n75342153\n84808089\n6301101\n21238167\n99009008\n59051750\n94508703\n82064169\n7411626\n65921696\n28706973\n21817015\n37950398\n39279071\n22171268\n27448890\n68573661\n64994007\n56609895\n52137134\n98095698\n85426812\n37308260\n35108384\n78261294\n72433707\n16717190\n91846389\n8739084\n22486303\n33516449\n35748230\n51389489\n38861221\n96173425\n79702865\n84043448\n99851750\n46269095\n37637189\n9258857\n71614325\n4148540\n49240716\n96800362\n21672103\n93707140\n28004216\n69490204\n84039519\n78246794\n16374265\n17575489\n88150468\n74418000\n77113091\n92067137\n79981886\n73279638\n44544874\n80008215\n28670029\n87266660\n81812043\n41256126\n3455069\n6635576\n12434117\n48401201\n37405577\n80937583\n13513339\n33822515\n6484572\n6943976\n40974881\n84777769\n53327870\n66072504\n52626327\n86812573\n70961100\n53609811\n53358573\n16845010\n87655487\n7466606\n8365720\n61602128\n92902833\n2375625\n14431842\n47122031\n34152441\n70826196\n22545570\n8752774\n58226044\n84500023\n33241488\n97006077\n92863914\n57598692",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "105\n2674044\n36428404\n6084079\n87957056\n96879610\n31881809\n36571149\n76160900\n55697819\n16242396\n96652646\n78422168\n89993842\n83401907\n20400544\n56233977\n31719414\n70729899\n60056045\n29199671\n85767798\n84549981\n1477257\n27704422\n80841992\n11201450\n78814374\n9388159\n90569480\n79653370\n63864982\n95424058\n43978979\n21326933\n80028195\n96320290\n52919494\n22469469\n38916341\n68304862\n2500035\n11994109\n45286342\n66383278\n72353751\n33292289\n22262471\n59215938\n46108108\n99275124\n52161953\n92440873\n65237771\n4764358\n42182606\n58064942\n71422799\n77432638\n76233734\n19708250\n54957450\n6968318\n66670464\n75061855\n11339843\n72973442\n12057764\n25701015\n20063156\n24841899\n20027512\n99510487\n79440844\n4680666\n71980669\n48953365\n37444192\n7934858\n53935750\n11555768\n2050012\n742518\n92462077\n43734025\n98134385\n14452100\n4256548\n2311837\n64473938\n41979012\n64424495\n30451139\n39189108\n93157970\n63171501\n92289766\n70871443\n14626878\n90898552\n58124235\n16190886\n89472804\n68440403\n24715745\n1274352",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "1\n85230224",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 1)"
    },
    {
      "input": "2\n1\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 2)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:17",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Ball of Reconciliation",
  "tags": [],
  "text": "Every year the kingdoms of Cubiconia, Quadradonia and Nlogonia organize a ball to commemorate the end of the war that ravaged the region for many years. A certain number of noblemen of each kingdom is invited to participate in this event, and it is expected that every pair of guests coming from different kingdoms will dance together exactly once. That is, each of the guests from Cubiconia shall dance once with every guest from Quadradonia and Nlogonia; in turn, each of the guests from Quadradonia shall also dance once with every guest from Nlogonia. However, guests coming from the same kingdom are not allowed to dance with one another.To help organize the ball, the total number of dances that will take place is determined beforehand, so that care must be taken when choosing the number of noblemen that shall be invited from each kingdom. For example, if it is decided that the ball must haveN = 20dances, one possibility is to invite6noblemen from Cubiconia,2from Quadradonia and1from Nlogonia, which can be represented by the expression(6, 2, 1). This is a valid option because the total number of dances would then be6*2 + 6*1 + 2*1 = 20.Traditions whose origins nobody can now remember indicate that the number of invited noblemen from Cubiconia must be greater or equal to the number of those coming from Quadradonia, and at the same time the number of invited noblemen from Quadradonia must be greater or equal to those coming from Nlogonia. Thus, forN = 20dances there are exactly5possible ways to choose the number of guests from each kingdom, namely(5, 4, 0),(4, 2, 2),(10, 2, 0)and(20, 1, 0)as well as the aforementioned(6, 2, 1).With so many restrictions, the organizing committee has problems finding the ideal way to choose the number of guests from each kingdom. Your task is to help this committee by counting the different ways in which the number of guests can be chosen for a ball withNdances. Two of these ways are considered different if they differ in the number of invited noblemen from at least on of the three kingdoms.InputEach test case is described using a single line, containing an integerNrepresenting the total number of dances that the ball must have (1 ≤ N ≤ 104). The end of the input is signalled by a line containing the number-1.OutputFor each test case, print a single line containing the number of different ways in which the number of guests from each kingdom can be chosen in order to have a ball where there are exactlyNdances, with all the restrictions mentioned in the problem statement.ExampleInput:20\r\n1\r\n9747\r\n-1Output:5\r\n1\r\n57",
  "sample_input": "Input:20\r\n1\r\n9747\r\n-1Output:5\r\n1\r\n57",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/TAP2012B",
  "scraped_at": "2025-08-17 00:34:11",
  "test_cases": [
    {
      "input": "20\r\n1\r\n9747\r\n-1",
      "expected_output": "5\r\n1\r\n57",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5\n3\n2\n4\n10\n6",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n2",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "4\n1\n7\n10\n4",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "16\n22474810\n97768666\n22774541\n13428577\n56571546\n95709739\n9430841\n57173093\n36270323\n68804311\n54326097\n6736525\n11712204\n94892012\n58132219\n55302042",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "13\n78748553\n59178689\n68509834\n63884105\n27616164\n68768256\n8972762\n38189667\n38673611\n42848558\n41860\n11372054\n53179768",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "14\n90116266\n44650798\n77415113\n16347718\n1319214\n93129759\n29651290\n80464781\n63081927\n31338277\n89773370\n21918045\n65476881\n59756754",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "20\n31374110\n14108734\n818503\n60659710\n3242329\n20727522\n20319191\n97405868\n17990241\n36942310\n62963996\n14504768\n32870475\n84726510\n46403114\n62167688\n53687577\n90609142\n81456816\n24746612",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "20\n49615975\n94028065\n16666542\n78549800\n70655806\n22702646\n31367417\n74954460\n72010327\n5624417\n68434582\n60080750\n26924325\n25990849\n49204931\n86388719\n28938753\n60389417\n94592822\n47927310",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "54\n40375\n94198\n18412\n78019\n87401\n52032\n96486\n39608\n23743\n86139\n55759\n38921\n41887\n26805\n86407\n40881\n57844\n86745\n92086\n14300\n93956\n27197\n79944\n99149\n14696\n13209\n26937\n80858\n75164\n85402\n7348\n37833\n16383\n57759\n6623\n27283\n79202\n50764\n33530\n82944\n12937\n65469\n73204\n65094\n45394\n85867\n88779\n30713\n73688\n54236\n62028\n25210\n98801\n76039",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "84\n34105\n1033\n46437\n90377\n45544\n16541\n8077\n3143\n35059\n4998\n80087\n45426\n91419\n23068\n58446\n31136\n25877\n16230\n90454\n66078\n32995\n12782\n91651\n79076\n22988\n51499\n43365\n4041\n38070\n50542\n71324\n80932\n49175\n67742\n30504\n64956\n66083\n39893\n77749\n86794\n15392\n93867\n85898\n20300\n59087\n78008\n58488\n33829\n46020\n61138\n42693\n87786\n41517\n15053\n6298\n26935\n46293\n32804\n98280\n87823\n17039\n98405\n94629\n17402\n70753\n37029\n53162\n83683\n44652\n30177\n57927\n96578\n62922\n15826\n57888\n74345\n22486\n11974\n77711\n69619\n62160\n89477\n65824\n48919",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "56\n35499\n80934\n7938\n10624\n38280\n81787\n58351\n4647\n27559\n63617\n48115\n78561\n57193\n56111\n54898\n52911\n30569\n32201\n71896\n18531\n87464\n85400\n61039\n72632\n11751\n1812\n3577\n76763\n47229\n8168\n27058\n98679\n21946\n24393\n76227\n57563\n11187\n68394\n96759\n77522\n12476\n56230\n7811\n22953\n5942\n88417\n83099\n13418\n71553\n74690\n21283\n29123\n19176\n38362\n28415\n75873",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "100\n58382\n96711\n26085\n73707\n27677\n1850\n9800\n7234\n99665\n35230\n32525\n94489\n74425\n15349\n64114\n32982\n23147\n50346\n41881\n19152\n81462\n24272\n91729\n15022\n22102\n96034\n69712\n72489\n92159\n91070\n97377\n84337\n4075\n49985\n52992\n60022\n78585\n65626\n28532\n2106\n16414\n35374\n14156\n33223\n60677\n97200\n98597\n78370\n54133\n37463\n66081\n94326\n53578\n62661\n67124\n60874\n27476\n32321\n41765\n54095\n98133\n10060\n73090\n77895\n95205\n66967\n53566\n22069\n55255\n38838\n40708\n73740\n49797\n15299\n63170\n55284\n98393\n30458\n47598\n8730\n83031\n80893\n9682\n97955\n88685\n48234\n94421\n69340\n25186\n26816\n38342\n86376\n59319\n99808\n71854\n83571\n25020\n85434\n32555\n55890",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "50\n37866\n62605\n58441\n84563\n75342\n29673\n25252\n2021\n5574\n74324\n73983\n98668\n2623\n49854\n85886\n51905\n79268\n80587\n67459\n13008\n16019\n52697\n34936\n85113\n70141\n58131\n84307\n92459\n87137\n80501\n85150\n81793\n14918\n95649\n81025\n44704\n6346\n63483\n35577\n38383\n52726\n47205\n63928\n36153\n2303\n75199\n44498\n88388\n75034\n98456",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "69\n93799\n63478\n72176\n14020\n82380\n21676\n65909\n6889\n688\n79039\n14750\n14467\n701\n18815\n83572\n29624\n16192\n18559\n67818\n58479\n62156\n51360\n3197\n54161\n38940\n51828\n76251\n99749\n74628\n74843\n56190\n45348\n15004\n31295\n53748\n28371\n25053\n38022\n54037\n32101\n10358\n76101\n26920\n21204\n70028\n16052\n79816\n89223\n32491\n34070\n35439\n98798\n64727\n93760\n76949\n53860\n43352\n26302\n78751\n30576\n53276\n9551\n82688\n79\n54798\n62118\n94507\n77591\n57532",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "92\n57116\n68291\n85772\n48217\n65711\n58675\n78667\n71250\n882\n53062\n85455\n80880\n27001\n31987\n86275\n70025\n78859\n42301\n21864\n52185\n87667\n78942\n7230\n15007\n7431\n95097\n31684\n1285\n46852\n82537\n8427\n23912\n74092\n52914\n5417\n3113\n23682\n94969\n26625\n45032\n71712\n25520\n17210\n21600\n47588\n38383\n64478\n73645\n79907\n86915\n55537\n40698\n97346\n54604\n84108\n40336\n38848\n47281\n5788\n43616\n42425\n59871\n2435\n74055\n33298\n76566\n99182\n17941\n11918\n97086\n64725\n55982\n34696\n87903\n70166\n46118\n48588\n5969\n61352\n22956\n20662\n18468\n36586\n86644\n16780\n8659\n21450\n6276\n63851\n25296\n64185\n20328",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "104\n47754531\n2158301\n59549479\n81773756\n10966445\n28405223\n63033054\n47084935\n59760466\n48182069\n13444675\n53184200\n97151387\n31466914\n49862920\n63152215\n88435906\n77507780\n64853014\n7947822\n31574282\n56944935\n47546462\n45894220\n92551081\n50897111\n95607278\n8638362\n76377121\n8869448\n56316255\n23132659\n11692911\n72797909\n58046275\n39295783\n39884852\n70959786\n95943404\n20119358\n34455644\n21945891\n58931610\n81086925\n23095480\n91379986\n98835644\n62145282\n37016959\n80047243\n29541930\n69953652\n81760798\n58765356\n54871514\n56329264\n27920134\n6096583\n69531184\n765609\n87984127\n83567147\n63212229\n36844065\n42057796\n70208446\n69953718\n845496\n92505865\n75374095\n44308180\n51018994\n58434234\n65756739\n44022949\n94306256\n40537813\n6455591\n66981892\n31377051\n63936967\n22588144\n8093385\n6677227\n14927246\n55956258\n2493003\n67133297\n20207235\n47268479\n30717842\n81810601\n23452013\n14479966\n22786615\n43905486\n22266373\n63682812\n55962759\n96109335\n70033987\n29874224\n68582250\n48402961",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 104)"
    },
    {
      "input": "104\n53783238\n40527337\n35782289\n63319128\n5221974\n48007042\n20277687\n32170075\n72276094\n69841157\n52714964\n53957662\n78217858\n28321657\n85201441\n7706180\n29688594\n77326703\n19359510\n83068430\n96277605\n56189567\n91705214\n21794219\n45461952\n12207681\n10940265\n99425847\n49344604\n26130456\n75824409\n42532658\n38626156\n2547748\n47428210\n96937137\n84711305\n4898389\n69135412\n4771867\n30853730\n24466024\n42041347\n98808971\n99549597\n99853838\n79036284\n28899860\n45319744\n50704936\n86580274\n22550992\n30512115\n16053968\n49143782\n74070854\n93646197\n69296344\n40811201\n58729349\n56393284\n58230318\n94812345\n3104061\n47702743\n9392308\n6869403\n69653554\n93703299\n76157766\n87910292\n58458421\n88002668\n68241716\n64582722\n59340634\n81757464\n85504980\n95538267\n9310439\n94222449\n67006282\n42887433\n4176603\n27641638\n80102400\n12545053\n76050142\n93665638\n200774\n46190517\n11110295\n96337008\n2170446\n29678784\n779656\n28238865\n61663106\n33088422\n79823652\n46158871\n48156634\n36904490\n76454450",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 104)"
    },
    {
      "input": "2\n100000000\n1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 2)"
    },
    {
      "input": "1\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 1)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:22",
  "total_test_cases": 20
}
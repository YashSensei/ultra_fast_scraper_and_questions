{
  "problem_code": "problems",
  "title": "Grid Arithmetic",
  "tags": [],
  "text": "Your task is to take anN-by-Nmatrix and pick numbers that can be added or subtracted from one another to most closely approximate 0. The catch is that you must only use exactly one number in each row and columnâ€”no more, no less.ExampleConsider the following matrix whereN= 3.1   75   10 \r\n   22  500    3\r\n    9  125   5075 - 22 - 50 = 3 is the correct answer. 10 - 1 - 9 = 0, but 1 and 9 are from the same column. 3 - 1 = 2, but does not use enough numbers.InputThe first line contains a single positive integerT, representing the number of test cases.Ttest cases follow. Each test case begins with a line containing a single integerN, representing the size of the matrix. The nextNlines each containNspace-separated integers, representing the matrix.OutputFor each test case, output a single line containing the absolute value of the total found that is closest to 0.SampleInput2\r\n2\r\n1 5\r\n4 3\r\n3\r\n1 75 10\r\n22 500 3\r\n9 125 50Output1\r\n3",
  "sample_input": "1   75   10 \r\n   22  500    3\r\n    9  125   50",
  "sample_output": "Input2\r\n2\r\n1 5\r\n4 3\r\n3\r\n1 75 10\r\n22 500 3\r\n9 125 50Output1\r\n3",
  "link": "https://www.spoj.com/problems/BYU15W_2",
  "scraped_at": "2025-08-17 00:34:36",
  "test_cases": [
    {
      "input": "1   75   10 \r\n   22  500    3\r\n    9  125   50",
      "expected_output": "Input2\r\n2\r\n1 5\r\n4 3\r\n3\r\n1 75 10\r\n22 500 3\r\n9 125 50Output1\r\n3",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3 2 3\n5 5 7\n7 2 8",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "1 9 9\n9 6 9\n5 8 2",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "7 10 2\n7 9 2\n7 3 8",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "99 13 63\n19 45 43\n22 97 87",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "53 53 11\n8 74 81\n1 30 21",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "90 13 80\n51 39 36\n53 40 33",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "19 11 17\n58 66 85\n23 68 21",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "15 92 33\n28 74 36\n100 90 50",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "414 107 231\n245 371 415\n280 332 152",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "388 268 345\n256 269 446\n211 364 231",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "378 396 210\n72 353 446\n317 450 99",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "245 187 429\n332 333 116\n153 420 278",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "121 356 290\n234 447 68\n60 287 124",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "233 389 384\n426 398 91\n50 226 87",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "422 452 103\n443 357 368\n276 66 95",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000\n1000 1000 1000\n1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000\n1000 1000 1000\n1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 1 2\n1 2 999\n999 1 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 1 1\n999 2 1\n2 1000 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:25",
  "total_test_cases": 20
}
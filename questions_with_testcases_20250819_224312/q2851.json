{
  "problem_code": "problems",
  "title": "Ada and Plants",
  "tags": [],
  "text": "Ada the Ladybug has grown many plants. She was trying to grow all plants\r\nwith equal size. Now she is wondering about the biggest difference between\r\nheights of two plants which are near each other. Plants are near each other, if there are at mostKplants between them.InputThe first line containsT, the number of test-cases.\r\n\r\nThe first line of each test-case will containN, K,1 < N ≤\r\n    105,0 ≤ K ≤\r\n    105whereNindicates number of plants.Next line will containNintegers0 ≤ hi≤\r\n    109indicating height\r\nof i-th plant.Sum of allNamong all test-cases won't exceed3*106OutputFor each test-case, print exactly one number - the biggest difference of plants\r\nnear each other (biggesthi-hjsuch that|i-j|-1 ≤ K).Example Input3\r\n5 0\r\n1 2 3 5 6\r\n4 6\r\n1 10 2 9\r\n10 1\r\n1 7 8 9 19 11 21 8 11 0Example Output2\r\n9\r\n13",
  "sample_input": "3\r\n5 0\r\n1 2 3 5 6\r\n4 6\r\n1 10 2 9\r\n10 1\r\n1 7 8 9 19 11 21 8 11 0",
  "sample_output": "2\r\n9\r\n13",
  "link": "https://www.spoj.com/problems/ADAPLANT",
  "scraped_at": "2025-08-17 00:34:02",
  "test_cases": [
    {
      "input": "3\r\n5 0\r\n1 2 3 5 6\r\n4 6\r\n1 10 2 9\r\n10 1\r\n1 7 8 9 19 11 21 8 11 0",
      "expected_output": "2\r\n9\r\n13",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2\n9\n3",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "2\n8\n1",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n1\n6\n2\n10\n1",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "16\n57055375\n74086772\n18059954\n78131296\n38550014\n79049306\n9616400\n29268909\n12251441\n61531638\n47975148\n85469932\n67969585\n36584143\n52634421\n14601293",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "18\n13415584\n81554414\n94788900\n69559589\n30429402\n20460428\n33577477\n37110058\n41674431\n52600178\n83988001\n50454314\n40476424\n89487454\n60906295\n42189533\n64118737\n56899059",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "12\n53898202\n72179022\n39743728\n8517112\n55183830\n15924051\n20774168\n36022131\n20103850\n2679113\n56268955\n51215337",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "15\n64622429\n56163097\n76809138\n33816058\n27215814\n52319316\n95674993\n38047898\n94072108\n44393607\n95654384\n54070425\n33288462\n8613452\n11878281",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "16\n72714233\n95668666\n4625427\n67422891\n84000028\n79472037\n66491275\n26074162\n59899157\n56617201\n3998161\n51052689\n68078906\n34576073\n15283612\n72630942",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "61\n17376\n24900\n77896\n60198\n89335\n81177\n48638\n52447\n69372\n48888\n51426\n10134\n39303\n11223\n22088\n1678\n59315\n2051\n53779\n27367\n22998\n60852\n57713\n44393\n86603\n27763\n9509\n28180\n69996\n47938\n59734\n83753\n10228\n49786\n22890\n64765\n44776\n29129\n61926\n92831\n35136\n81368\n2053\n39477\n97866\n24658\n67754\n51560\n50710\n20990\n33759\n58192\n67143\n76713\n85146\n25572\n49466\n32026\n77878\n37461\n43467",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "49\n77372\n23903\n76084\n81092\n7489\n17913\n35238\n47754\n23335\n78533\n52086\n97946\n81344\n47084\n67715\n33417\n25852\n10584\n62132\n90324\n45874\n62456\n98791\n87990\n40193\n64338\n80489\n33029\n82989\n70575\n5601\n82194\n18608\n85573\n64739\n54258\n22184\n42248\n22595\n78685\n37604\n2854\n56773\n49381\n31966\n12478\n95343\n15528\n90494",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "50\n64814\n39619\n72472\n48405\n15599\n7931\n27180\n59786\n88564\n88721\n92270\n55701\n33517\n9817\n21630\n28655\n86563\n96058\n97934\n78460\n16283\n44565\n47076\n61056\n73845\n49293\n98590\n23633\n66978\n82368\n2513\n51642\n78046\n92765\n62994\n21264\n64681\n65512\n23653\n19692\n80698\n80540\n13221\n91170\n95765\n89237\n31706\n59914\n61962\n98177",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "81\n40244\n79020\n90189\n89311\n78696\n87948\n59338\n25025\n30172\n38252\n63681\n84211\n95945\n50309\n33993\n78420\n36734\n51629\n77948\n15880\n53016\n97870\n64194\n85634\n27874\n48238\n25059\n8790\n46608\n99502\n37918\n60723\n73377\n90918\n48367\n50668\n15462\n71872\n35077\n85761\n9949\n6408\n90307\n96109\n68631\n67797\n88510\n79891\n56853\n27742\n37851\n50416\n10474\n26220\n96287\n20837\n78292\n21714\n60370\n81306\n85003\n78715\n9881\n57564\n70963\n77220\n45377\n95765\n99291\n31887\n18029\n89590\n21129\n18745\n22188\n57154\n74327\n56982\n32979\n4348\n10192",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "78\n7615\n12365\n7467\n36630\n2722\n73415\n39008\n27556\n45951\n86125\n29\n40390\n47099\n15993\n22833\n52869\n54894\n87644\n90150\n94527\n49863\n83594\n61159\n96109\n78825\n22986\n93019\n49043\n35994\n50742\n49067\n60643\n2679\n35622\n64976\n14485\n81241\n27819\n65195\n39163\n35638\n90777\n65621\n77014\n69468\n25171\n93546\n97967\n96231\n20308\n94508\n68189\n80109\n11226\n37463\n16582\n84608\n24246\n37315\n91067\n80107\n18391\n64341\n49956\n20139\n4217\n20469\n78403\n2314\n94052\n35666\n70237\n13827\n15484\n52934\n36939\n15942\n35192",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "52\n92221\n6175\n33513\n92641\n1261\n4436\n10043\n55605\n91526\n92110\n31197\n7664\n67905\n38723\n36996\n88907\n69581\n40007\n7406\n10327\n86848\n87825\n71520\n68007\n78147\n22417\n68401\n12628\n51468\n93187\n21802\n15651\n48096\n20826\n30535\n79166\n63589\n48955\n42253\n3876\n99885\n15033\n5879\n24189\n86555\n67280\n28286\n74414\n72050\n56023\n69456\n50410",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "28\n24984\n71338\n54673\n50979\n9604\n58134\n41202\n10634\n31108\n37777\n33730\n33137\n57353\n97862\n31137\n8518\n74687\n15661\n85560\n64552\n87644\n21711\n54719\n76491\n79752\n12700\n55640\n35008",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "105\n25482775\n74968321\n73157041\n41180662\n65259590\n49667170\n18057224\n70885954\n8131985\n66762950\n95167156\n19833159\n39938038\n61177931\n49055369\n29731105\n44379351\n71381146\n13997201\n58398098\n42186333\n6961412\n74236382\n75709354\n42748870\n35331931\n69735107\n56714280\n43094185\n58912269\n62440021\n19500212\n50739349\n82462923\n46294698\n21079282\n38281062\n89533374\n51273589\n72655820\n61065851\n88967225\n31737839\n15698406\n16218441\n75169583\n57009158\n92867577\n34707070\n85544305\n50213108\n46023289\n70987920\n77922572\n51262538\n70050882\n60624618\n55851620\n16924435\n15178323\n79742368\n71870499\n33454145\n41066982\n32298227\n55536427\n48199268\n73658299\n76647743\n17080026\n42781539\n7517430\n31106422\n99708193\n6270628\n17738601\n49759680\n77021650\n3575804\n37974241\n8332597\n31198175\n76294068\n51839507\n54303590\n63931423\n48332350\n66947332\n5809089\n84562272\n25433834\n99554484\n5300077\n48782584\n51170093\n42493617\n67412549\n77564718\n53198212\n66792056\n9851706\n39099331\n68455240\n33425429\n43898568",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "105\n86356157\n66214090\n33621136\n83804702\n7430137\n98746108\n96383368\n41448937\n39476205\n25627919\n66578849\n94966110\n45215545\n85727955\n41059949\n15067259\n78455678\n57929758\n35540403\n57770737\n9312920\n13581383\n89221824\n63257753\n64856659\n79030083\n30837256\n41365683\n29995446\n62480481\n72479205\n25367575\n38330932\n16873088\n92850873\n60750092\n88848504\n64883836\n37730515\n49903291\n78283579\n98745716\n91304528\n17374591\n79894649\n9445165\n91573251\n52692350\n23438610\n20094549\n84472155\n31734649\n14714637\n21422002\n21914138\n68070621\n86001024\n88635180\n62540234\n34125805\n15248189\n75185994\n24673844\n73975942\n79503271\n60622828\n76832744\n62531992\n84433033\n78016110\n52268777\n87114713\n10714423\n16355931\n46843671\n77448431\n62390857\n64500088\n19880644\n67959082\n17760779\n3811501\n20647983\n3205391\n44152584\n6029601\n19257348\n10802584\n98969959\n22033308\n61903514\n10211207\n16299929\n53020665\n7384060\n34742113\n75878970\n15433814\n19684344\n5141748\n48022525\n4784648\n32139681\n53014105\n94628636",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "1\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 1)"
    },
    {
      "input": "105\n100000000\n100000000\n1\n100000000\n100000000\n76943047\n79413116\n34697354\n43275136\n100000000\n100000000\n37356979\n72834807\n1\n38562851\n100000000\n42693527\n100000000\n16634961\n1\n100000000\n1\n100000000\n1\n2487313\n79542914\n43572452\n100000000\n1\n100000000\n1\n100000000\n100000000\n100000000\n100000000\n1\n1\n86203417\n1\n52896426\n1\n100000000\n1\n1\n100000000\n1\n1\n100000000\n100000000\n1\n100000000\n61812848\n1\n100000000\n1\n100000000\n100000000\n1\n98543235\n1\n1\n100000000\n33118264\n58699639\n100000000\n1\n1\n1\n100000000\n1\n71729651\n82643123\n1\n1\n71260949\n31673884\n1\n1\n97777470\n100000000\n3359338\n100000000\n68759944\n100000000\n1\n100000000\n83054770\n38188582\n1\n72281209\n39034094\n47994809\n100000000\n64494793\n13317890\n1\n36912197\n1\n1\n100000000\n23908186\n1\n63279388\n1\n94720805",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 105)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:21",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Sir and the Guitar",
  "tags": [],
  "text": "After teaching guitar to Jimmy Page (Led Zeppelin Band Guitarist), Sir Jadeja has decided to do something new. Sir Jadeja took out his guitar and started playing a melody he composed when he was 2 months old.The guitar as usual has 6 strings denoted by numbers through 1 to 6. Each string is divided into P frets denoted by numbers 1 to P. A melody is a sequence of tones, where each tone is produced by picking a string pressed on a specific fret (for example: 4th string pressed on 8th fret). If a string is pressed on several frets, the produced tone will be the one corresponding to the highest of those frets. For instance, if the 3rd string is already pressed on the 5th fret, and the tone which corresponds to the 7th fret is to be produced, the string can be pressed on the 7th fret and picked without releasing the 5th fret. If a tone that corresponds to the 2nd fret on the same string is to be produced next, it is necessary to release both 5th and 7th frets and only then press 2nd.Sir Jadeja feeling tired wants to play the melody with minimum number of finger movements. Note that press or release a single fret counts as one finger move. String picking is not a finger move, but rather a guitar pick move and should not be counted. Remember that picking a string with not affect frets being pressed on other string. You can assume that Sir Jadeja has enough fingers to press all the frets on all string at the same time (yes, that many).Input:First line contains two integers: N (N <= 500000) and P (2 <= P <= 300000). N denotes number of tones in the melody and P denotes number of frets. The next N lines describe the fields for the corresponding tones: the number of the string and the number of the fret, respectively. Tones must be played in the order they are described.Output:Print a single integer: minimum number of finger movements that need to be made.ExamplesInput 1:5 15 \r\n2 8 \r\n2 10 \r\n2 12 \r\n2 10 \r\n2 5Output 1:7Input 2:8 15 \r\n2 8 \r\n2 10 \r\n2 12\r\n3 7 \r\n2 10\r\n3 5 \r\n2 5\r\n3 3Output 2:12Explanation:For set 1: All the tones played are produced by picking the 2nd string . First the frets 8, 10, 12 are pressed in order(three movements). Then the 12th fret is released to produce the second tone again (fourth movement). Finally the fifth fret is pressed followed by the release of frets 10 and 12( 5th, 6th and 7th ).",
  "sample_input": "Input 1:5 15 \r\n2 8 \r\n2 10 \r\n2 12 \r\n2 10 \r\n2 5Output 1:7",
  "sample_output": "Input 2:8 15 \r\n2 8 \r\n2 10 \r\n2 12\r\n3 7 \r\n2 10\r\n3 5 \r\n2 5\r\n3 3Output 2:12",
  "link": "https://www.spoj.com/problems/CSHOWB",
  "scraped_at": "2025-08-17 00:33:48",
  "test_cases": [
    {
      "input": "Input 1:5 15 \r\n2 8 \r\n2 10 \r\n2 12 \r\n2 10 \r\n2 5Output 1:7",
      "expected_output": "Input 2:8 15 \r\n2 8 \r\n2 10 \r\n2 12\r\n3 7 \r\n2 10\r\n3 5 \r\n2 5\r\n3 3Output 2:12",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1 6 8\nys f 4\n4 3\n7 5\n2 5\n6 7\n10 6 9 4\n3 cx giff",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "5 6 2\ny ydgk 8\n3 8\n2 3\n5 7\n7 7\n1 10 6 10\n3 xnll z",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "5 6 5\nhrzzp kq 5\n3 8\n8 8\n7 5\n8 9\n3 7 4 7\n8 sxo yswt",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "85 89 4\nyq q 22\n46 52\n51 94\n58 27\n68 62\n85 72 16 34\n1 siuf zfypu",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "32 19 82\nz yhfru 34\n25 3\n39 64\n31 53\n29 68\n10 72 95 55\n3 ld ovsti",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "9 29 42\neylg v 9\n27 85\n21 43\n91 13\n38 73\n58 40 80 19\n12 ybwdwi s",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "28 68 7\nrwsr hms 22\n9 68\n37 32\n54 14\n5 41\n36 50 74 25\n76 gkphgnk rfxus",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "2 39 68\nckigf pfshy 32\n26 35\n7 15\n5 38\n53 80\n71 91 75 71\n68 efx qogk",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "325 284 334\nh qvgmq 421\n185 70\n297 393\n393 51\n119 421\n261 455 185 273\n91 ztxgva sek",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "480 59 475\nu g 443\n70 62\n383 238\n201 77\n168 448\n454 361 375 435\n150 swqy pt",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "54 301 267\naegp gryo 336\n364 283\n62 122\n421 198\n209 239\n292 404 150 185\n146 j vbmu",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "368 316 270\nczbb lhaty 395\n408 86\n50 344\n384 445\n393 456\n294 102 116 323\n369 kbrch gu",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "407 147 96\nvsaxm k 381\n467 174\n317 194\n59 365\n236 158\n61 329 376 226\n351 kr g",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "52 303 152\ntn evuha 302\n436 423\n368 100\n216 164\n329 62\n231 130 147 419\n271 pzbonao y",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "268 417 267\nfyv dwzuu 400\n238 306\n53 200\n389 459\n348 121\n126 173 116 142\n83 qs zq",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000\nymj k 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000 1000 1000\n1000 oluk iqgis",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000\niuec zuj 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000 1000 1000\n1000 sgkz f",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 2 2\na mfwn 999\n1000 1000\n1000 2\n999 1000\n1 1\n2 2 1 1\n2 cxgz k",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 2 2\ntbhs nmnw 2\n999 2\n1 999\n1000 1\n2 1\n1000 999 1000 2\n2 vbbd zzcb",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:18",
  "total_test_cases": 20
}
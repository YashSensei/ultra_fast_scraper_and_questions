{
  "problem_code": "problems",
  "title": "Art Plagiarism",
  "tags": [],
  "text": "You have pictures of two sculptures. The sculptures consist of several solid metal spheres, and some rubber pipes connecting pairs of spheres. The pipes in each sculpture are connected in such a way that for any pair of spheres, there is exactly one path following a series of pipes (without repeating any) between those two spheres. All the spheres have the same radius, and all the pipes have the same length.You suspect that the smaller of the two sculptures was actually created by simply removing some spheres and pipes from the larger one. You want to write a program to test if this is possible.The input will contain several test cases. One sculpture is described by numbering the spheres consecutively from 1, and listing the pairs of spheres which are connected by pipes. The numbering is chosen independently for each sculpture.InputOne line containing an integer C, the number of test cases in the input file.For each test case, there will be:One line containing the integer N, the number of spheres in the large sculpture.N − 1 lines, each containing a pair of space-separated integers, indicating that the two spheres with those numbers in the large sculpture are connected by a pipe.One line containing the integer M, the number of spheres in the small sculpture.M − 1 lines, each containing a pair of space-separated integers, indicating that the two spheres with those numbers in the small sculpture are connected by a pipe.OutputC lines, one for each test case in the order they occur in the input file, containing:\"Case #X: YES\" if the small sculpture in case X could have been created from the large sculpture in case X\"Case #X: NO\" if it could not.X is the number of the test case, between 1 and C.Limits1 ≤ C ≤ 502 ≤ N ≤ 1001 ≤ M ≤ NSample input\r\n2\r\n5\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n4\r\n1 2\r\n1 3\r\n1 4\r\n5\r\n1 2\r\n1 3\r\n1 4\r\n4 5\r\n4\r\n1 2\r\n2 3\r\n3 4\r\n\r\nSample output\r\nCase #1: NO\r\nCase #2: YES",
  "sample_input": "Sample input\r\n2\r\n5\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n4\r\n1 2\r\n1 3\r\n1 4\r\n5\r\n1 2\r\n1 3\r\n1 4\r\n4 5\r\n4\r\n1 2\r\n2 3\r\n3 4\r\n\r\nSample output\r\nCase #1: NO\r\nCase #2: YES",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/AP",
  "scraped_at": "2025-08-17 00:33:39",
  "test_cases": [
    {
      "input": "Sample input\r\n2\r\n5\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n4\r\n1 2\r\n1 3\r\n1 4\r\n5\r\n1 2\r\n1 3\r\n1 4\r\n4 5\r\n4\r\n1 2\r\n2 3\r\n3 4\r\n\r\nSample output\r\nCase #1: NO\r\nCase #2: YES",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "pjtuld g\n1\n2\n9 2\n1 9\n6 1\n9 3\n7\n4 4\n8 5\n8 8\n7\n6 2\n5 8\n9 7\n6 3\n1\n6 10\n3 8\n7 1\nq t\n1\nezn y dswu\n3\nch dgzzz im",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "oouaap qggr\n7\n3\n3 5\n10 5\n6 5\n1 2\n7\n3 2\n8 7\n2 2\n2\n3 2\n5 6\n7 3\n10 6\n1\n8 8\n5 1\n4 7\nvn rkictm\n5\nly x rke\n2\nkmixl enzrx kgnzt",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "pp t\n3\n2\n1 8\n5 9\n6 3\n5 5\n8\n1 7\n1 10\n10 8\n10\n3 6\n6 4\n2 4\n9 5\n1\n5 10\n9 9\n10 10\nri vb\n9\nb im y\n1\nmfg lnpr lnker",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "jeqd fxww\n53\n58\n76 86\n67 50\n34 23\n94 47\n33\n31 68\n73 29\n8 69\n66\n24 31\n30 97\n86 75\n90 54\n95\n94 31\n32 11\n81 15\nwn bsvlts\n66\nwou ic pxcqc\n66\nutcbe pt icln",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "i touv\n47\n3\n97 48\n45 43\n80 11\n40 15\n23\n37 39\n94 59\n21 21\n87\n68 1\n91 65\n42 86\n92 86\n42\n64 56\n38 14\n92 66\nukl lv\n74\ntqe ink ybk\n29\nu whbn i",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "c qwv\n23\n16\n54 88\n44 18\n44 24\n69 55\n74\n30 97\n10 36\n57 4\n64\n27 31\n49 39\n65 88\n44 60\n84\n66 80\n94 90\n33 92\nbwaqcr ej\n78\nijqaa zdcu gbeck\n89\nz e z",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "l jp\n40\n24\n73 83\n39 53\n63 41\n16 38\n86\n73 47\n12 20\n98 100\n34\n16 94\n96 65\n21 16\n64 48\n2\n45 79\n96 19\n16 34\nyvft zpw\n26\nhopx s lq\n54\nzlzfc eh jb",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "tq o\n97\n82\n35 51\n3 40\n54 38\n78 46\n66\n10 77\n65 25\n79 3\n94\n69 2\n46 20\n8 49\n81 58\n100\n47 21\n84 23\n62 62\novgml palb\n5\nq ko rw\n15\ny af ybx",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "vsnz jtj\n143\n222\n53 411\n62 145\n71 117\n237 172\n80\n188 113\n475 107\n489 468\n438\n89 438\n403 339\n390 488\n324 353\n168\n212 64\n244 226\n113 129\nhcrzvf u\n167\nskvzo jhh lt\n183\nq goyv ayhkk",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "wdhpzn voei\n135\n161\n137 185\n180 200\n457 262\n77 199\n221\n429 121\n354 440\n359 117\n478\n57 120\n430 94\n465 135\n443 488\n290\n225 306\n138 431\n491 175\nrp gcue\n373\nnoxh kk vviwp\n296\nbszh ebgo hfweo",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "ahzmws ygy\n185\n94\n262 90\n337 70\n221 171\n403 369\n388\n438 186\n161 153\n87 380\n381\n358 358\n103 289\n372 471\n345 408\n337\n151 81\n210 69\n202 121\nauxfaw f\n114\ns olzbd g\n136\nqht j uq",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "hikuay r\n167\n196\n307 394\n110 295\n240 416\n392 310\n172\n244 223\n52 202\n378 183\n472\n80 435\n258 122\n310 331\n329 389\n243\n150 415\n319 318\n442 426\nvy yow\n342\nysw yw il\n189\nucdk sb wzxx",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "odmekn awmw\n69\n235\n247 119\n78 225\n198 73\n386 84\n329\n308 259\n350 288\n128 109\n219\n243 116\n179 145\n399 420\n167 404\n146\n190 443\n352 397\n277 353\njzmas ktz\n485\niut siul zngbo\n109\nxmkx yb x",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "qmxwbw nd\n233\n71\n462 72\n234 362\n93 357\n364 443\n59\n196 358\n139 197\n73 350\n284\n213 229\n255 213\n119 209\n480 243\n178\n272 467\n225 481\n309 346\ntun zrxbgj\n410\ngo ilh jw\n170\nncnz p nkdfe",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "lcfafp fgy\n152\n417\n427 61\n121 402\n438 470\n111 302\n442\n197 266\n286 97\n466 391\n181\n289 162\n158 326\n276 318\n174 159\n499\n318 367\n419 68\n457 144\nk rq\n75\npvks q bepc\n215\ngoz g upabd",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "iparxp bzr\n1001\n1001\n1001 1001\n1001 1001\n1001 1001\n1001 1001\n1001\n1001 1001\n1001 1001\n1001 1001\n1001\n1001 1001\n1001 1001\n1001 1001\n1001 1001\n1001\n1001 1001\n1001 1001\n1001 1001\njhlhr magrrc\n1001\npq e nptya\n1001\ngtb tks cmx",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "budl ijfl\n1001\n1001\n1001 1001\n1001 1001\n1001 1001\n1001 1001\n1001\n1001 1001\n1001 1001\n1001 1001\n1001\n1001 1001\n1001 1001\n1001 1001\n1001 1001\n1001\n1001 1001\n1001 1001\n1001 1001\nutzo kinw\n1001\nlhdhe cmqai hxg\n1001\nblj twxiw i",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "ex s\n1001\n1\n1 1000\n1001 1\n1000 1\n1 1001\n1\n1000 1001\n2 1\n1 2\n1\n1000 2\n1 1001\n2 2\n1 2\n1\n1000 1001\n1 1001\n1 2\nyjv mxhh\n1001\nmht zucux g\n1\nnn nyucb vjmwg",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "znd ytxc\n1001\n1\n2 1000\n2 1001\n1001 1000\n2 1000\n1000\n1001 1001\n1001 1000\n1000 1001\n1000\n1 1000\n1001 1000\n1000 1000\n1001 1000\n1\n1 1\n2 1001\n2 1\nb gnzb\n1000\nv xhv lrgz\n1000\nixsym z f",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:18",
  "total_test_cases": 20
}
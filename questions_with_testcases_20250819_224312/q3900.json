{
  "problem_code": "problems",
  "title": "Book Club",
  "tags": [],
  "text": "Staircase in Lello bookstore, Porto.Porto's book club is buzzing with excitement for the annual book exchange event! Every year, members bring their favorite book and try to find another book they like that is owned by someone willing to trade with them.I have been to this book exchange before, and I definitely do not want to miss it this year, but I feel that the trading should be improved. In the past, pairs of members interested in each other's books would simply trade: imagine that person A brought a book that person B liked and vice-versa, then A and B would exchange their books.I then realized that many members were left with the same book they walked-in with... If instead of looking for pairs I looked for triplets, I could find more valid exchanges! Imagine that member A only likes member B's book, while B only likes C's book and C likes A's book. These 3 people could trade their books in a cycle and everyone would be happy!But why stop at triplets? Cycles could be bigger and bigger! Could you help me find if it is possible for everyone to go out with a new book? Be careful, because members will not give their book without receiving one they like in return.TaskGiven the members of the book club and the books they like, can we find cycles so that everyone receives a new book?InputThe first line has two integers:N, the number of people, andM, the total number of \"declarations of interest\". Each of the followingMlines has two integers,AandB, indicating that memberAlikes the book that memberBbrought (0 ≤ A, B < N). NumbersAandBwill never be the same (a member never likes the book he brought).OutputYou should outputYESif we can find a new book for every club member andNOif that is not possible.Constraints2 ≤N≤ 10 0001 ≤M≤ 20 000 andM≤N2-N.ExampleInput:9 9\r\n0 1\r\n1 2\r\n2 0\r\n3 4\r\n4 3\r\n5 6\r\n6 7\r\n7 8\r\n8 5OutputYESAuthor: Miguel Araújo",
  "sample_input": "Input:9 9\r\n0 1\r\n1 2\r\n2 0\r\n3 4\r\n4 3\r\n5 6\r\n6 7\r\n7 8\r\n8 5OutputYES",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/SWERC14D",
  "scraped_at": "2025-08-17 00:34:37",
  "test_cases": [
    {
      "input": "9 9\r\n0 1\r\n1 2\r\n2 0\r\n3 4\r\n4 3\r\n5 6\r\n6 7\r\n7 8\r\n8 5OutputYES",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2 10\n3 10\n4 8\n1 9\n6 6\n5 6\n9 9\n10 3\n8 3\n9 6\n3 u",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "8 2\n1 1\n2 3\n4 6\n2 2\n9 5\n7 1\n3 6\n9 5\n1 7\n2 muxffdsr",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "7 5\n3 6\n7 3\n2 9\n6 8\n10 4\n2 7\n7 5\n7 6\n7 6\n6 dkpnz",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "92 72\n39 26\n42 86\n100 5\n94 11\n11 50\n27 68\n82 65\n90 65\n5 6\n94 gtzdtzetmt",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "91 6\n76 33\n51 1\n72 79\n75 6\n61 78\n95 72\n21 63\n57 22\n67 18\n1 g",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "47 7\n49 24\n53 82\n46 37\n22 31\n36 10\n61 99\n32 11\n51 40\n42 71\n24 prpbyg",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "32 55\n75 80\n31 69\n19 2\n31 78\n96 58\n23 52\n88 90\n59 79\n49 98\n27 twthq",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "81 77\n27 29\n4 61\n77 5\n65 6\n44 18\n30 24\n86 11\n26 66\n13 65\n67 sk",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "10871 29427\n9642 17422\n6295 31295\n36006 27027\n20566 24450\n27131 49845\n17912 26158\n11376 25505\n12784 12902\n18861 33649\n6283 utu",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "29963 30906\n23019 45586\n17112 34140\n39299 36434\n26566 37372\n15008 27818\n6295 33108\n16527 10381\n14641 41050\n21934 34711\n41771 y",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "12844 29536\n38783 14882\n42284 7940\n33814 29536\n26032 12987\n45585 25444\n20800 35653\n48300 20446\n12558 15748\n26940 28390\n8130 fkvpsibvvn",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "13295 31747\n33402 44604\n27859 13618\n27192 12448\n29807 20625\n10012 21986\n43294 41175\n24294 6049\n13395 26146\n30716 34794\n31334 nmeikgz",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "12584 15128\n22903 15811\n18342 43008\n42198 17005\n10379 33209\n15038 23602\n33187 7876\n8503 34449\n30120 49961\n24898 7113\n25546 fe",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "48328 22544\n49410 24795\n26558 6675\n8874 39085\n19411 24924\n23340 15004\n11902 41811\n29120 17837\n41445 42069\n24629 43869\n9012 mb",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "19394 39149\n37262 7517\n22998 38169\n41589 24096\n34937 33107\n38738 11371\n42676 16199\n42282 20417\n18360 28560\n8587 36339\n47291 uhzkmkr",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "100001 100001\n100001 100001\n100001 100001\n100001 100001\n100001 100001\n100001 100001\n100001 100001\n100001 100001\n100001 100001\n100001 100001\n100001 jqx",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "100001 100001\n100001 100001\n100001 100001\n100001 100001\n100001 100001\n100001 100001\n100001 100001\n100001 100001\n100001 100001\n100001 100001\n100001 sae",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "100000 2\n2 100001\n1 100000\n100001 100001\n100001 100000\n100001 2\n1 2\n100001 1\n100000 1\n1 100001\n100000 ruo",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 2\n1 100001\n100000 2\n100001 100001\n2 100000\n2 2\n2 100000\n1 100000\n100000 100001\n100000 2\n100000 a",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:25",
  "total_test_cases": 20
}
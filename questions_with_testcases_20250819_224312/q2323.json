{
  "problem_code": "problems",
  "title": "Bob and magical scale",
  "tags": [],
  "text": "Small Bob received scales with magical bricks. They are magical because they can have minus weight.His mom made L towers on the left arm and P towers on the right arm of the scale. Every tower is made with exactly N bricks.She asked him how many brick he has to put off from each arm to balance the scale. Obviously Bob can only take bricks from top of the tower and he can't put back bricks he has previously taken off. It's too difficult for him. Can you help him solve it in minimum number of moves?InputIn first line number N, L, P. Number of bricks in every tower. Number of towers on left arm and Number of towers on right arm.In next L lines: construction of towers on the left arm.In next P lines: construction of towers on the right arm. (Look at picture below.)N ≤ 50L ≤ 25P ≤ 25-50 ≤ weight of every brick ≤ 50OutputMinimal number of moves to balance the scale.ExampleInput:2 2 2\r\n4 3\r\n-1 2\r\n7 3\r\n1 -2Output:2I made time limit so high because I want all correct solutions to get accepted, but not n! solution.",
  "sample_input": "Input:2 2 2\r\n4 3\r\n-1 2\r\n7 3\r\n1 -2Output:2",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/MGCSCLS",
  "scraped_at": "2025-08-17 00:33:51",
  "test_cases": [
    {
      "input": "2 2 2\r\n4 3\r\n-1 2\r\n7 3\r\n1 -2",
      "expected_output": "2",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "7 1 9\n2 4\n10 4\n4 6\n7 5",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "7 8 2\n5 8\n1 10\n5 10\n4 4",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "8 4 7\n5 4\n1 4\n6 9\n5 2",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "35 6 4\n12 25\n13 9\n10 29\n34 31",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "3 4 28\n46 30\n41 45\n45 2\n42 9",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "39 21 2\n29 13\n46 43\n31 39\n18 24",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "48 28 21\n19 4\n6 10\n5 3\n32 13",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "50 34 47\n25 22\n16 2\n7 37\n41 46",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "8 18 22\n22 16\n16 21\n18 17\n11 12",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "6 4 7\n21 25\n18 13\n24 5\n22 8",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "14 8 12\n6 23\n22 10\n23 4\n23 9",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "18 9 8\n23 20\n20 4\n7 23\n14 9",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "25 8 18\n8 8\n21 4\n14 3\n3 17",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "10 24 6\n15 3\n9 24\n5 12\n21 22",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "18 11 21\n25 7\n16 23\n25 12\n19 22",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "50 50 50\n50 50\n50 50\n50 50\n50 50",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "50 50 50\n50 50\n50 50\n50 50\n50 50",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 49 50\n50 2\n50 49\n2 50\n50 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "49 1 50\n1 49\n49 1\n2 1\n1 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:20",
  "total_test_cases": 20
}
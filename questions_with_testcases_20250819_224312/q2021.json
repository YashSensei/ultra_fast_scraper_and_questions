{
  "problem_code": "problems",
  "title": "STUDENTS",
  "tags": [],
  "text": "Professor X wants to position N (1 ≤ N ≤ 100,000) girls and boys in a single row to present at the annual fair.Professor has observed that the boys have been quite pugnacious lately; if two boys too close together in the line, they will argue and begin to fight, ruining the presentation. Ever resourceful, Professor calculated that any two boys must have at least K (0 ≤ K < N) girls between them in order to avoid a fight.Professor would like you to help him by counting the number of possible sequences of N boys and girls that avoid any fighting. Professor considers all boys to be the same and all girls to be the same; thus, two sequences are only different if they have different kinds of students in some position.InputFirst line contains C (1 ≤ C ≤ 20) the number of test cases.Next C lines contain N and K.OutputA single integer representing the number of ways Professor could create such a sequence of students. Since this number can be quite large, output the result modulo 5000011.SampleInput1\r\n4 2Output6ExplanationThe possible sequences are GGGG, BGGG, GBGG, GGBG, GGGB, or BGGB.",
  "sample_input": "Input1\r\n4 2Output6",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/AU7_5",
  "scraped_at": "2025-08-17 00:33:43",
  "test_cases": [
    {
      "input": "Input1\r\n4 2Output6",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4\n1\n5\n5\n1",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n2",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "3\n2\n1\n1",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "10\n99235026\n5384045\n37441888\n16502536\n48452706\n25903096\n63652553\n6344096\n688637\n60762914",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "12\n82411783\n20586347\n71612293\n7199557\n8889588\n26175809\n56171216\n69797162\n75949094\n3255926\n6954917\n9971526",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "19\n76196543\n49697475\n48887812\n15452642\n59788769\n45579717\n44521718\n40413187\n85820061\n9736557\n40675417\n27284469\n9178998\n54425640\n15609930\n82137576\n74888473\n71545449\n41232335",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "5\n90312281\n62552448\n67294869\n44094139\n55004046",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "14\n86868216\n15859916\n55755392\n13967300\n37743781\n81871011\n20063088\n41965588\n13983924\n37602078\n51275490\n36571342\n54359132\n7761003",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "29\n16037\n91504\n62002\n99499\n4477\n37032\n76800\n11075\n4104\n33689\n9359\n81844\n74616\n78504\n79297\n40287\n62911\n2950\n59564\n55604\n38052\n88432\n664\n23805\n30260\n77697\n34103\n39046\n70207",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "22\n83236\n76206\n78521\n83397\n97286\n9841\n70205\n80222\n87944\n37697\n43252\n28174\n13204\n96945\n20885\n63313\n86049\n66655\n92479\n28947\n19854\n23132",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "38\n70480\n68777\n95938\n79692\n11130\n99368\n32034\n31148\n62753\n11722\n33397\n21946\n37454\n4679\n22501\n20760\n20299\n9023\n75871\n24044\n90914\n11469\n8702\n40954\n44034\n36166\n39189\n94879\n89850\n40064\n14871\n45405\n31112\n67277\n72996\n29115\n68665\n82557",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "66\n33938\n47989\n14596\n27166\n75671\n38631\n82059\n30556\n86023\n84989\n95364\n14168\n49526\n63093\n91665\n4161\n45221\n31376\n79886\n36279\n86979\n10900\n12402\n46474\n33538\n32439\n64492\n82831\n68889\n20255\n13642\n9328\n94809\n48739\n4340\n4960\n83461\n32797\n51481\n39594\n32906\n42377\n19640\n11752\n76465\n32024\n80325\n6250\n2797\n82967\n36527\n60644\n55929\n16930\n89095\n12059\n31020\n83572\n93719\n43508\n19498\n87167\n32664\n92133\n47847\n74122",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "43\n51076\n69980\n15473\n26403\n66138\n42938\n34731\n19838\n72588\n4749\n45347\n5620\n13409\n54011\n78042\n92396\n32566\n46512\n32049\n84113\n75733\n55041\n61534\n49127\n1329\n43049\n93312\n47534\n7846\n23484\n2062\n413\n46444\n27229\n14125\n88657\n69557\n35838\n98406\n85523\n34839\n41795\n21210",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "83\n62186\n38173\n89269\n83929\n82334\n99056\n99532\n44800\n74271\n97864\n99861\n11476\n64731\n54375\n16271\n8506\n39296\n18850\n52551\n56620\n34563\n3149\n41439\n79715\n80694\n1104\n10798\n73926\n91713\n22210\n44545\n17673\n7462\n99186\n73493\n65229\n54999\n50376\n67651\n77452\n91959\n40711\n98981\n11010\n79016\n31022\n79958\n4764\n11993\n31791\n47805\n30827\n57874\n23106\n62114\n34519\n76609\n30185\n76125\n75657\n60002\n24075\n80491\n16717\n82882\n29180\n53342\n42034\n26376\n83028\n76239\n16337\n96735\n32333\n46528\n8937\n2036\n58176\n4306\n68544\n34128\n86815\n11550",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "50\n31538\n27133\n89020\n73301\n50941\n37954\n44123\n46778\n95105\n91131\n34069\n49965\n45404\n47289\n10402\n15770\n27972\n77582\n76801\n1082\n95793\n80191\n11093\n31520\n8571\n81269\n78922\n88660\n54259\n9446\n43069\n54657\n99056\n9195\n10327\n3931\n80200\n23360\n47786\n77547\n98441\n78127\n24094\n24984\n57525\n61550\n99016\n70540\n61169\n25570",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "100\n14546950\n78504328\n47109654\n38436782\n57311765\n15062234\n86601140\n3124957\n28581859\n55401289\n98809548\n26964825\n68067836\n69071039\n12911581\n55488476\n18925148\n50160519\n25331864\n92966786\n26654028\n22837270\n61151919\n44150761\n70731587\n87301730\n91366770\n41415566\n5965207\n61882364\n25797801\n6876927\n35110302\n7225379\n26248530\n46550823\n7158229\n274764\n87818402\n41252135\n91650418\n27386\n70599065\n60053807\n59798577\n75259909\n76910987\n69641789\n24550183\n28773699\n40521123\n28412148\n28246258\n14212840\n86406328\n27812718\n93113300\n77007534\n30480698\n72016148\n26995372\n36013904\n80949212\n21569946\n2892520\n84917296\n96459931\n22231704\n866180\n74896263\n54583236\n35347732\n53727731\n55268503\n27385326\n45204016\n3973681\n58935553\n35241438\n84777597\n63147668\n19900604\n9833043\n15501243\n2570420\n46914996\n39046283\n98072927\n95176880\n56115312\n30117785\n92290710\n35663728\n67610172\n62377572\n67944709\n57123461\n48669672\n72917187\n38456075",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "100\n64672600\n40218616\n16354791\n30146413\n38833038\n68649655\n437625\n17333907\n51856337\n6420214\n40780685\n17144158\n79347903\n7554181\n89801590\n83536993\n60527261\n28637814\n96783188\n81591109\n29319115\n75091274\n5231051\n3240384\n66611002\n92690805\n45432295\n2591731\n18372789\n86696067\n94504659\n33127962\n11644201\n76622595\n61962513\n66120443\n70255369\n89481637\n17144449\n3383010\n26168722\n43867007\n92435730\n5269772\n42718548\n8760504\n86427814\n23200161\n11126874\n30032931\n88571108\n12596539\n67665982\n24177630\n36707807\n83787072\n13218147\n83674955\n43014064\n90837493\n53654745\n50986839\n7348355\n29559776\n24325447\n64238751\n38331712\n61761467\n93480977\n79904260\n39713316\n10302217\n17499239\n10264961\n16959686\n17022659\n90023914\n91291873\n53788591\n92937452\n91353840\n98828197\n97194626\n65061970\n58384805\n44077528\n93985000\n68784210\n90820906\n60160907\n69879350\n66248682\n23754943\n17588175\n21816398\n12210462\n36345457\n75012086\n72275474\n51083282",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "1\n24437179",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 1)"
    },
    {
      "input": "100\n100000000\n36725679\n100000000\n90786812\n100000000\n100000000\n44701643\n1\n100000000\n2611104\n100000000\n1\n24639685\n100000000\n1\n9337921\n100000000\n100000000\n1\n1\n26845004\n16614526\n100000000\n1\n1\n1\n86186797\n100000000\n100000000\n90668448\n22534507\n1\n91056432\n100000000\n1\n1933169\n1\n1\n98521332\n74830068\n100000000\n1\n1\n100000000\n83671659\n1\n100000000\n100000000\n100000000\n1\n1698737\n100000000\n40526003\n81689247\n1\n82267285\n23549490\n10854371\n1\n100000000\n100000000\n100000000\n91244900\n31622370\n100000000\n100000000\n83800031\n100000000\n1\n89328569\n1\n17882334\n100000000\n1\n1\n1\n100000000\n100000000\n19464139\n1\n62668717\n100000000\n1\n8802947\n27392672\n93963988\n100000000\n100000000\n100000000\n1\n70758633\n1\n1\n100000000\n1\n31025859\n19268655\n100000000\n100000000\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 100)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:19",
  "total_test_cases": 20
}
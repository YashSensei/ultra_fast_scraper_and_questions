{
  "problem_code": "problems",
  "title": "Making Waves",
  "tags": [],
  "text": "Suppose we know a signal is generated by the function x sin (f1t) + sin (f2t). F1 and f2 are two unique\r\nfrequencies, each having an integral value in the range 400 to 600 Hz (Hz = cycles per second), and t\r\nrepresents time. In this problem, you will be given N samples of this function at equally-spaced time\r\nintervals corresponding to t = 1/N, t = 2/N, and so forth. From these samples, you are to determine f1 and\r\nf2.For example, suppose f1 = 400 Hz, f2 = 500 Hz, and N = 100. The first sample, at time t = 1/100 sec, is\r\nequal to sin(400 0.01) sin(500 0.01) sin(4) sin(5) 0.156912 . Similarly, the second sample, at\r\ntime t = 2/100 sec, is equal to sin(400 0.02) sin(500 0.02) sin(8) sin(10) 0.312821.InputThere will be multiple cases to consider. Each case begins with an integer N, no larger than 1000, that\r\nspecifies the number of signal samples. The next N data items are real numbers representing the signal\r\nsamples at time 1/N sec, 2/N sec, and so forth. A single integer 0 follows the last case.The number of samples for each case is guaranteed to be sufficient to allow the correct result to be\r\nobtained.OutputFor each input case, display a single line that is formatted like this:Case 1, f1 = 400, f2 = 500ExampleInput:100\r\n0.156912 0.312821 0.466731 0.617657 0.764638 0.906737 1.04305 1.17271\r\n1.29489 1.40883 1.51381 1.60917 1.69432 1.76873 1.83195 1.8836 1.92338\r\n1.95106 1.96649 1.96962 1.96045 1.93908 1.9057 1.86055 1.80396 1.73634\r\n1.65816 1.56997 1.47237 1.36603 1.25166 1.13003 1.00196 0.868307 0.729943\r\n0.587785 0.442764 0.295823 0.147918 1.68756e-010 -0.146981 -0.292088\r\n-0.434403 -0.573031 -0.707107 -0.835801 -0.958325 -1.07394 -1.18195\r\n-1.28171 -1.37266 -1.45428 -1.52611 -1.58779 -1.63898 -1.67947 -1.70907\r\n-1.7277 -1.73535 -1.73205 -1.71795 -1.69323 -1.65816 -1.61308 -1.55838\r\n-1.49452 -1.42201 -1.34141 -1.25334 -1.15846 -1.05745 -0.951057 -0.840028\r\n-0.725146 -0.607206 -0.487017 -0.365392 -0.243145 -0.121082 -2.75143e-010\r\n0.119322 0.236125 0.34968 0.459289 0.564288 0.664055 0.758014 0.845635\r\n0.926438 1 1.06595 1.12398 1.17384 1.21533 1.24833 1.27276 1.28862\r\n1.29596 1.29489 1.28558\r\n\r\n0Output:Case 1, f1 = 400, f2 = 500",
  "sample_input": "Input:100\r\n0.156912 0.312821 0.466731 0.617657 0.764638 0.906737 1.04305 1.17271\r\n1.29489 1.40883 1.51381 1.60917 1.69432 1.76873 1.83195 1.8836 1.92338\r\n1.95106 1.96649 1.96962 1.96045 1.93908 1.9057 1.86055 1.80396 1.73634\r\n1.65816 1.56997 1.47237 1.36603 1.25166 1.13003 1.00196 0.868307 0.729943\r\n0.587785 0.442764 0.295823 0.147918 1.68756e-010 -0.146981 -0.292088\r\n-0.434403 -0.573031 -0.707107 -0.835801 -0.958325 -1.07394 -1.18195\r\n-1.28171 -1.37266 -1.45428 -1.52611 -1.58779 -1.63898 -1.67947 -1.70907\r\n-1.7277 -1.73535 -1.73205 -1.71795 -1.69323 -1.65816 -1.61308 -1.55838\r\n-1.49452 -1.42201 -1.34141 -1.25334 -1.15846 -1.05745 -0.951057 -0.840028\r\n-0.725146 -0.607206 -0.487017 -0.365392 -0.243145 -0.121082 -2.75143e-010\r\n0.119322 0.236125 0.34968 0.459289 0.564288 0.664055 0.758014 0.845635\r\n0.926438 1 1.06595 1.12398 1.17384 1.21533 1.24833 1.27276 1.28862\r\n1.29596 1.29489 1.28558\r\n\r\n0Output:Case 1, f1 = 400, f2 = 500",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/MKWAVES",
  "scraped_at": "2025-08-17 00:34:17",
  "test_cases": [
    {
      "input": "100\r\n0.156912 0.312821 0.466731 0.617657 0.764638 0.906737 1.04305 1.17271\r\n1.29489 1.40883 1.51381 1.60917 1.69432 1.76873 1.83195 1.8836 1.92338\r\n1.95106 1.96649 1.96962 1.96045 1.93908 1.9057 1.86055 1.80396 1.73634\r\n1.65816 1.56997 1.47237 1.36603 1.25166 1.13003 1.00196 0.868307 0.729943\r\n0.587785 0.442764 0.295823 0.147918 1.68756e-010 -0.146981 -0.292088\r\n-0.434403 -0.573031 -0.707107 -0.835801 -0.958325 -1.07394 -1.18195\r\n-1.28171 -1.37266 -1.45428 -1.52611 -1.58779 -1.63898 -1.67947 -1.70907\r\n-1.7277 -1.73535 -1.73205 -1.71795 -1.69323 -1.65816 -1.61308 -1.55838\r\n-1.49452 -1.42201 -1.34141 -1.25334 -1.15846 -1.05745 -0.951057 -0.840028\r\n-0.725146 -0.607206 -0.487017 -0.365392 -0.243145 -0.121082 -2.75143e-010\r\n0.119322 0.236125 0.34968 0.459289 0.564288 0.664055 0.758014 0.845635\r\n0.926438 1 1.06595 1.12398 1.17384 1.21533 1.24833 1.27276 1.28862\r\n1.29596 1.29489 1.28558\r\n\r\n0",
      "expected_output": "Case 1, f1 = 400, f2 = 500",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3\n3\n4\n6",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "2\n5\n2",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n5\n3\n7\n9\n8",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "16\n10071852\n85716233\n76214491\n4234686\n69882754\n39252409\n82911071\n75248979\n38690294\n99563652\n5923573\n82071425\n18510375\n52701372\n18907159\n67433654",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "20\n98962277\n74058011\n99023866\n21076388\n84442111\n17732254\n91443973\n60121626\n41386586\n10355059\n93087859\n48633849\n702807\n57193327\n25926625\n44212368\n5566569\n62218947\n84134408\n2434578",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "10\n88371584\n70404410\n15163555\n13302992\n30619489\n89462770\n39552660\n88797364\n5089810\n23009217",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "7\n49124165\n50671985\n86495117\n59419738\n18611727\n94758604\n97917349",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "12\n3457251\n80449531\n71025294\n33112280\n73880120\n37432302\n91139686\n68243084\n30480915\n98856313\n7588188\n42146419",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "67\n52742\n94883\n47582\n57602\n65078\n93803\n47362\n47443\n17381\n62493\n46434\n69413\n79233\n52430\n42484\n90768\n51761\n85402\n97627\n83954\n94066\n32110\n11107\n18522\n45402\n43490\n34565\n2708\n26767\n8357\n59103\n45876\n70450\n88847\n37515\n96716\n89809\n46521\n59796\n48780\n40273\n96920\n21197\n59758\n81315\n94620\n10200\n15887\n27974\n73742\n74012\n24341\n17326\n81199\n11366\n71006\n91602\n63187\n30104\n87656\n45067\n96175\n50116\n8563\n65948\n41100\n40351",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "78\n57225\n54192\n32157\n98711\n49280\n19480\n35588\n14209\n86064\n37905\n49208\n39667\n65762\n57364\n15843\n19826\n69771\n54350\n45418\n14973\n52582\n62141\n87164\n58684\n87838\n14683\n28831\n85415\n11278\n71303\n22202\n66415\n37958\n51810\n5518\n6307\n23018\n27287\n2228\n46569\n45565\n46709\n40921\n37570\n60927\n99198\n84563\n30778\n24482\n20721\n68956\n13219\n85086\n77389\n36380\n30266\n54854\n61328\n5192\n26638\n70302\n29918\n6791\n21555\n67542\n88487\n54816\n10922\n11494\n4894\n77229\n85764\n92033\n86368\n31145\n50193\n72657\n6479",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "42\n86465\n8776\n77434\n75705\n62631\n14830\n34372\n13914\n99184\n55279\n40578\n83242\n33039\n26646\n53239\n11260\n14526\n56471\n9974\n56008\n96642\n36349\n66501\n85763\n69596\n2990\n41146\n20317\n66227\n7019\n18366\n3730\n70014\n79787\n62337\n17194\n8041\n42143\n94301\n24883\n3669\n3202",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "91\n41511\n72745\n79918\n55977\n9478\n65269\n11128\n16920\n7034\n61196\n80178\n86694\n63267\n84224\n24680\n12147\n40307\n45623\n17874\n22498\n82851\n4728\n3111\n82778\n78272\n84622\n7240\n61537\n39223\n926\n86029\n88528\n6843\n23565\n24991\n54427\n79462\n5131\n44891\n17272\n59584\n85276\n53767\n75919\n82845\n1954\n98499\n74913\n12309\n36217\n69550\n70649\n37262\n72366\n79613\n9758\n96927\n52880\n10991\n44525\n44051\n36798\n43047\n40877\n50518\n82855\n53899\n61679\n43598\n92041\n20026\n8766\n21965\n19086\n4118\n71661\n26712\n98838\n87781\n83195\n20603\n65046\n96743\n89624\n61575\n7120\n99460\n31388\n59036\n51692\n51313",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "40\n9330\n50484\n43155\n41566\n84954\n21098\n65352\n77056\n75122\n77264\n53390\n24028\n85790\n16731\n14687\n81867\n65238\n5650\n18414\n479\n4376\n71836\n80436\n74864\n76396\n54055\n72607\n55716\n46613\n23830\n92207\n9937\n3529\n46852\n39164\n58431\n75335\n7312\n53095\n24795",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "76\n42402\n55703\n34699\n6052\n8141\n61960\n87023\n2835\n92201\n46529\n95249\n87958\n98907\n52541\n29224\n7377\n47617\n36647\n61577\n25821\n57154\n797\n45368\n34696\n3653\n38673\n87013\n59097\n32479\n45851\n15131\n79444\n25503\n97567\n38402\n66092\n884\n31116\n28456\n78668\n28066\n52938\n33073\n72392\n40142\n94215\n41065\n47575\n93801\n95795\n75153\n37474\n30625\n47730\n35143\n61297\n16614\n90524\n71160\n61946\n93725\n20502\n5784\n30651\n59500\n94036\n13745\n63318\n42123\n84680\n76887\n43586\n59560\n1082\n25806\n38531",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "39\n4367\n23040\n89692\n95393\n51199\n26730\n34656\n32696\n74915\n48892\n22605\n92257\n15955\n98973\n23434\n92783\n53926\n15678\n88540\n51367\n15720\n4658\n77784\n90274\n58199\n30636\n60990\n94011\n93955\n58501\n60194\n47277\n24256\n64621\n73006\n95088\n12595\n85611\n31120",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "100\n58507456\n70855175\n21052405\n78197920\n46681389\n68170184\n3576335\n68929688\n81802105\n55996817\n88714605\n76891211\n94373249\n46353258\n30454607\n11787204\n17701505\n42036329\n82364078\n15739253\n35468710\n17870591\n26947225\n21366696\n8917580\n92669548\n81477655\n84905939\n91664482\n1019024\n29720256\n14093518\n75595490\n31963583\n81034516\n1525069\n31247544\n59166760\n41414268\n9964962\n14193522\n14907938\n47264209\n14734379\n29231781\n47879425\n89521912\n52514315\n59025085\n82928766\n80495595\n40743412\n79948326\n82978389\n76487140\n15705232\n36975750\n70475973\n89537036\n9911490\n69253369\n40633059\n65294805\n977038\n18407635\n93765143\n20321461\n56852973\n3765966\n33332813\n29324571\n46762924\n25581461\n54311821\n97917486\n45044197\n82705504\n86395834\n27575929\n62970936\n95029323\n34518351\n32206033\n50765130\n5120973\n4616841\n80201210\n40768112\n56007041\n57682585\n10666398\n63035811\n73027894\n63675706\n12523600\n33235833\n99929166\n8145115\n84315476\n38247471",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "100\n25767099\n88597084\n94804845\n73697517\n65923745\n36902663\n3125901\n90593892\n3296213\n58449687\n5456558\n20775301\n18012035\n65236146\n74545918\n23770799\n66016391\n3803591\n49523964\n40645829\n94602064\n10129410\n68526095\n94575458\n5527161\n47542558\n68904800\n93835436\n86392105\n489079\n68032953\n39682315\n60211720\n38892390\n94582966\n87503777\n30739312\n84727475\n22937222\n71859597\n14978018\n42010800\n85265464\n55848102\n19317379\n96191630\n54105716\n2332175\n71315514\n74092858\n93972627\n1053611\n38849030\n25706033\n89068701\n39412084\n10407783\n24219045\n31693581\n5941642\n10515034\n8773392\n31606884\n35733231\n64493667\n80304044\n90363113\n42396456\n47784893\n73718981\n56877622\n27818786\n63800726\n43592932\n3428368\n49126211\n49443620\n66092911\n75189038\n82936753\n27935068\n79610547\n12960179\n96148012\n40358952\n19128408\n27374367\n74550998\n44574578\n95429047\n61565788\n21356773\n44324690\n67921779\n50566062\n79956979\n12683905\n95523092\n86691642\n81251412",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "2\n100000000\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 2)"
    },
    {
      "input": "1\n1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 1)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:23",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Intersection Query",
  "tags": [],
  "text": "Considering a set of segments. At the beginning, the set is totally empty.There areNoperations: insert or erase avertical(orhorizontal) segment and then you have to compute how many intersections are there.There is no two same type of segments that share a common point in the set.InputThe first line containsN(1≤N≤105) - the number of operations.The followingNlines describe the operations:1 X1Y1X2Y2: insert a segment whose two endpoints are(X1, Y1)and(X2, Y2)to the set. (|X1|, |Y1|, |X2|, |Y2| ≤109)2 K: erase theK-tholdest segment from the set. (1≤K≤ current size of the set)OutputFor each query, print the number of intersections of the line segments in the set after processing the operation in one line.ExampleInput:10\r\n1 -1 0 -2 0\r\n1 2 -2 0 -2\r\n1 1 1 1 -3\r\n2 1\r\n1 6 -2 5 -2\r\n2 3\r\n1 2 -2 2 -6\r\n1 -4 -3 -5 -3\r\n1 3 -4 -1 -4\r\n2 2Output:0\r\n0\r\n1\r\n1\r\n1\r\n1\r\n2\r\n2\r\n3\r\n2UPD(1/30/2015): Increase time limit from 2s to 5s. My C++ solution (unoptimized) runs in about 7 seconds.",
  "sample_input": "Input:10\r\n1 -1 0 -2 0\r\n1 2 -2 0 -2\r\n1 1 1 1 -3\r\n2 1\r\n1 6 -2 5 -2\r\n2 3\r\n1 2 -2 2 -6\r\n1 -4 -3 -5 -3\r\n1 3 -4 -1 -4\r\n2 2Output:0\r\n0\r\n1\r\n1\r\n1\r\n1\r\n2\r\n2\r\n3\r\n2",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/ZQUERY2",
  "scraped_at": "2025-08-17 00:34:30",
  "test_cases": [
    {
      "input": "10\r\n1 -1 0 -2 0\r\n1 2 -2 0 -2\r\n1 1 1 1 -3\r\n2 1\r\n1 6 -2 5 -2\r\n2 3\r\n1 2 -2 2 -6\r\n1 -4 -3 -5 -3\r\n1 3 -4 -1 -4\r\n2 2",
      "expected_output": "0\r\n0\r\n1\r\n1\r\n1\r\n1\r\n2\r\n2\r\n3\r\n2",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2\n3\n10",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "3\n7\n2\n6",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "2\n5\n2",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "12\n4428023\n73183943\n76583900\n33319824\n32260778\n15852382\n66572296\n24630189\n76870014\n7238177\n19067183\n44924862",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "18\n4516696\n82636719\n58670739\n92563283\n53967430\n19154602\n17878304\n1609460\n76175891\n24985047\n60385535\n25148564\n25156551\n89924807\n24602588\n29061725\n74616327\n89188118",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "14\n77037049\n3213647\n75798275\n22728115\n65399448\n92297032\n15457342\n41628094\n31561492\n42059010\n10408810\n48627133\n17306847\n65540600",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "18\n10694408\n62920978\n46098803\n33131082\n20098861\n76613193\n68973114\n15570441\n30337497\n33151483\n27122115\n42475830\n31565829\n11579895\n11056691\n26934019\n48616007\n82170005",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "12\n95197330\n14906980\n76965286\n11439851\n2245281\n66333358\n34263365\n82951310\n41929539\n66671521\n38150055\n1061506",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "91\n61296\n72142\n27253\n91381\n34345\n48674\n63748\n31295\n22014\n67889\n42083\n28583\n26430\n41420\n17443\n11774\n59028\n33783\n66462\n52720\n57409\n43523\n79526\n49535\n29571\n42786\n91444\n18635\n69752\n11820\n35073\n99083\n20223\n52758\n98289\n64393\n61478\n88951\n35358\n37032\n90230\n19892\n76930\n19800\n19504\n40303\n7394\n76851\n82956\n38361\n67304\n37491\n97013\n44644\n89068\n57784\n50715\n92885\n65975\n84265\n4244\n35596\n2738\n62531\n71575\n16419\n44169\n49973\n6942\n14805\n44195\n10025\n77120\n29358\n65052\n42318\n81566\n64718\n22568\n54614\n29198\n68717\n66408\n63486\n21112\n99225\n98240\n28210\n23024\n74271\n35320",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "26\n6233\n42259\n13613\n69931\n84289\n51070\n48682\n72707\n54606\n10561\n66400\n13738\n10285\n27440\n90004\n19935\n95524\n73130\n65778\n73919\n93994\n78599\n48182\n74586\n85528\n59612",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "24\n10263\n91823\n81878\n1775\n25529\n6751\n74800\n62907\n90411\n3636\n76583\n14470\n33315\n58435\n36029\n74172\n99232\n31743\n94254\n94832\n42630\n71319\n58735\n26223",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "55\n54789\n3572\n36216\n73965\n69973\n83204\n64137\n98724\n44171\n46496\n24615\n62342\n52116\n28493\n38272\n67988\n57317\n48674\n38245\n40965\n8372\n12161\n42113\n81099\n20691\n19759\n63579\n96865\n46597\n31932\n16216\n53921\n12125\n60369\n53747\n74080\n76704\n15066\n5561\n21358\n90657\n19018\n27556\n73423\n71860\n82299\n6114\n11415\n56479\n52388\n52823\n45175\n3113\n84731\n31130",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "77\n35141\n752\n18802\n73013\n80300\n56763\n44154\n92071\n71991\n58093\n35500\n39875\n92249\n20993\n69202\n85622\n36481\n61627\n96323\n27741\n23848\n62517\n13131\n33816\n83940\n96869\n97506\n20779\n29603\n91365\n91806\n47666\n79586\n95429\n65767\n58158\n53163\n38230\n9304\n70800\n89758\n71258\n8744\n40921\n26943\n22225\n14244\n75451\n64905\n12707\n67454\n76566\n92234\n85057\n67418\n16909\n10904\n87957\n79108\n61702\n66256\n11274\n33336\n18982\n98723\n16997\n703\n79177\n13657\n61861\n49445\n33269\n29598\n8068\n32374\n23573\n73993",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "103\n68919\n21993\n68169\n40924\n80183\n21189\n6847\n98856\n48548\n75537\n2540\n2419\n58046\n2689\n28422\n48838\n90100\n52282\n52127\n29369\n71624\n24178\n22397\n7047\n4198\n54477\n62047\n2632\n46447\n59347\n76618\n92925\n83518\n56904\n87215\n58924\n15096\n94105\n43671\n91663\n41195\n56293\n33058\n8664\n66271\n2257\n3830\n62036\n37175\n13529\n42231\n37645\n814\n48498\n46602\n19106\n48047\n49551\n61197\n3324\n65968\n86129\n19695\n60503\n3743\n72640\n22379\n90871\n61599\n18614\n95445\n23384\n31584\n72596\n17629\n13254\n81337\n8296\n31435\n72800\n56948\n13946\n75\n41569\n77263\n23737\n19577\n99817\n24341\n84980\n32352\n45437\n97855\n26715\n87728\n48344\n66840\n45749\n77820\n40641\n12288\n82992\n9620",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "71\n55860\n33110\n82067\n36266\n39767\n52556\n93000\n58217\n62947\n16266\n10782\n89637\n75780\n49055\n78045\n59471\n28498\n67086\n66203\n51573\n18328\n79027\n70452\n4348\n57999\n14142\n898\n22146\n85941\n18897\n24913\n76844\n74328\n17518\n18590\n68860\n10885\n5356\n91183\n65976\n7663\n31742\n64137\n24213\n89330\n56789\n78181\n34897\n99341\n61712\n66466\n60279\n75065\n79399\n39529\n60282\n36321\n19610\n30937\n20323\n10545\n52717\n30483\n48642\n16075\n53423\n2198\n28177\n81348\n54608\n87311",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "105\n36128007\n33071793\n50138347\n42273952\n68673877\n67812523\n58243684\n16165181\n11279911\n1833054\n67593962\n66381093\n25811979\n60638703\n52635758\n22932596\n20030038\n66898555\n50289488\n21944947\n43125756\n59627702\n26701989\n93483267\n35545513\n77054431\n75249248\n2744050\n71291346\n75041560\n57937779\n52096363\n68098576\n7868995\n81406025\n87003144\n3070278\n76086637\n33707002\n31598440\n45985220\n11372985\n773417\n7597184\n32227284\n21330346\n11900208\n22367990\n95109521\n32558531\n44995953\n86681946\n39633781\n38765713\n92230866\n6282811\n3230692\n80094607\n58484633\n87873876\n86204802\n81991693\n59874303\n99906144\n68215825\n96476168\n18824834\n81984057\n99124274\n32816305\n27372835\n31857702\n29061445\n56962580\n36114538\n41164982\n5292649\n50587486\n51749997\n68252507\n74325747\n29109390\n12289986\n76808440\n75762034\n5118850\n49892441\n45838108\n39703142\n57238532\n96415952\n90214685\n2274293\n62666328\n88827367\n17677197\n96504376\n79026375\n34848916\n61015857\n73910215\n49831442\n1163942\n79973627\n34488883",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "105\n84921293\n56050334\n59264778\n62273233\n37295935\n78032601\n98617411\n4870877\n54288120\n9388615\n75265973\n54042451\n1584626\n16181501\n21669516\n89724115\n11644292\n27217072\n93603453\n96755148\n15966632\n52647349\n38192422\n14119280\n53889372\n75342901\n80433344\n56337775\n7688574\n97840888\n43109896\n72960978\n30318965\n9973239\n99997452\n82173450\n34374440\n33068372\n96904853\n66280176\n28532043\n5317730\n58953613\n77976698\n47841868\n25466125\n74696168\n94938001\n83691430\n51897045\n69073331\n93636266\n49777976\n16376293\n73504296\n48477657\n37741631\n49893460\n90166184\n10833791\n89099847\n18431483\n77470283\n47193615\n38010378\n42044315\n669552\n5072389\n85321189\n30474015\n33477486\n92414414\n20359262\n76689996\n1518055\n15808108\n11745926\n9639609\n63984234\n18240854\n44818027\n48429760\n19196537\n88212198\n30871421\n98465422\n50332339\n67334505\n52604867\n68497585\n9850441\n25531146\n74752670\n76794533\n66689679\n63953019\n87826849\n55372740\n21708193\n60593594\n97439432\n38329550\n94068688\n39256517\n87688744",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "1\n79897556",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 1)"
    },
    {
      "input": "105\n53287945\n100000000\n60166801\n1\n77196108\n100000000\n31951544\n100000000\n8727189\n1\n54741645\n1\n1\n42570002\n1\n1\n100000000\n100000000\n37363869\n100000000\n3360854\n10246057\n100000000\n1\n1\n1\n1\n100000000\n100000000\n100000000\n1\n68593885\n100000000\n1\n8471954\n11957524\n84259788\n1\n100000000\n1\n1\n100000000\n67517360\n97324165\n100000000\n536042\n54952131\n100000000\n100000000\n1\n100000000\n1\n100000000\n100000000\n1\n1\n100000000\n1\n31726795\n1\n100000000\n1\n59790019\n100000000\n72350636\n39836049\n100000000\n1\n24114459\n1\n1\n100000000\n1\n1\n5533130\n100000000\n1\n100000000\n100000000\n64994566\n27830484\n1\n100000000\n100000000\n100000000\n1\n39517356\n1\n42411770\n1\n1\n100000000\n1\n100000000\n100000000\n44056619\n36268230\n1\n1\n10740052\n1\n92432715\n100000000\n1\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 105)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:25",
  "total_test_cases": 20
}
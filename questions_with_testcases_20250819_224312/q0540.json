{
  "problem_code": "problems",
  "title": "Rainbow Ride",
  "tags": [],
  "text": "Mr.Raju and his extended family are on vacation in Chennai. They visit MGM and see the Rainbow ride. They want to enjoy the ride. However, there are some problems.Each person in the family likes some other people in the family. Each person insists that he or she will go on the ride only if all the people whom that person likes and all the people who like that person also go on the ride. If someone doesn't like anyone and no one likes him, he may come for the ride.You have been roped in to solve this dilemma. Given the weight of the each person in the family, and the list of people they like, and the maximum weight that the Rainbow can bear safely, calculate the maximum number of people in the family who can go on the rainbow.InputThere will be multiple test cases in the input. For our convenience the family members are numbered from 1 to n. Each test case begins with a line containing two   integersn( 1 ≤ n ≤ 1000 ) andC( 0 ≤ C ≤ 1000 ), where n is the number of people in the family and C the maximum capacity of the ride in kilograms.The next line contains n space separated integers with theith integer giving the weight of theith family member. These weights are positive and less than or equal to 200 kilograms. Then n lines follow. Each line contains a sequence of integers separated by spaces. The first integerkigives the number of people in the family personilikes, followed by the personsilikes. An empty line separates each test case. The end of input is indicated by n=0 and C=0 and it should not be processed.There are atmost 50 test cases.OutputFor each test case output on a separate line the maximum number of persons that can take the ride under the given conditions.ExampleInput:5 200\r\n50 50 50 50 50\r\n1 2\r\n1 3\r\n0\r\n1 5\r\n1 4\r\n\r\n3 200\r\n100 100 100\r\n1 2\r\n1 3\r\n1 1\r\n\r\n0 0Output:3\r\n0",
  "sample_input": "Input:5 200\r\n50 50 50 50 50\r\n1 2\r\n1 3\r\n0\r\n1 5\r\n1 4\r\n\r\n3 200\r\n100 100 100\r\n1 2\r\n1 3\r\n1 1\r\n\r\n0 0Output:3\r\n0",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/RAINBOW",
  "scraped_at": "2025-08-17 00:33:21",
  "test_cases": [
    {
      "input": "5 200\r\n50 50 50 50 50\r\n1 2\r\n1 3\r\n0\r\n1 5\r\n1 4\r\n\r\n3 200\r\n100 100 100\r\n1 2\r\n1 3\r\n1 1\r\n\r\n0 0",
      "expected_output": "3\r\n0",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4 10\n3 7 3 9 4\n10 2\n10 5\n3\n4 3\n4 5\n8 9\n8 8 1\n2 6\n4 1\n6 10\n10 5",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "5 4\n5 10 2 10 2\n1 3\n8 3\n8\n2 10\n9 3\n2 8\n8 5 9\n10 6\n9 8\n4 6\n6 6",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "8 9\n6 5 5 10 5\n3 10\n2 6\n3\n8 7\n8 8\n4 4\n10 4 4\n6 4\n6 10\n3 5\n8 9",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "81 48\n71 99 96 51 42\n75 34\n51 54\n3\n27 23\n13 19\n12 96\n90 93 61\n15 66\n50 66\n73 20\n59 81",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "80 16\n72 50 16 16 77\n82 46\n84 19\n98\n30 82\n49 49\n100 86\n35 89 66\n35 79\n6 10\n5 51\n7 36",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "69 88\n20 15 52 69 60\n97 100\n35 49\n81\n48 10\n58 53\n41 26\n12 11 16\n13 65\n17 27\n71 74\n4 89",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "27 68\n32 4 94 97 53\n21 85\n83 60\n6\n90 54\n48 34\n93 87\n91 78 87\n79 80\n33 8\n13 75\n60 16",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "22 57\n41 75 38 97 39\n100 27\n76 27\n90\n39 93\n22 70\n29 30\n67 53 5\n29 59\n21 63\n32 37\n52 49",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "242 58\n414 104 60 138 256\n306 250\n157 237\n438\n304 51\n423 471\n107 301\n381 335 243\n415 56\n191 294\n100 292\n389 212",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "422 83\n316 175 487 50 256\n442 337\n374 175\n116\n332 461\n371 131\n72 138\n135 435 258\n142 258\n425 220\n363 239\n421 244",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "326 90\n469 352 443 234 342\n366 136\n366 63\n407\n235 145\n58 401\n64 174\n450 316 385\n69 433\n84 353\n251 96\n271 304",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "58 386\n110 401 370 410 261\n139 254\n176 66\n377\n373 355\n174 147\n133 155\n271 88 197\n81 338\n483 478\n222 77\n468 212",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "424 248\n94 176 442 136 88\n75 206\n294 245\n100\n89 412\n481 394\n287 225\n370 202 483\n453 446\n171 225\n87 408\n334 234",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "109 481\n473 237 130 492 300\n313 50\n279 87\n221\n329 178\n95 428\n433 377\n71 221 86\n464 261\n80 491\n363 317\n336 205",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "235 180\n225 418 305 240 427\n465 74\n83 251\n58\n464 433\n313 245\n151 308\n491 193 157\n414 491\n297 117\n187 311\n169 283",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000 1000 1000\n1000 1000\n1000 1000\n1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000 1000 1000\n1000 1000\n1000 1000\n1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 2\n1000 999 2 2 1000\n1 1\n999 2\n999\n2 999\n2 1000\n1000 2\n1 999 1\n1 999\n1000 1000\n2 2\n2 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 999\n1000 2 999 1000 999\n1 2\n1 999\n2\n2 999\n2 2\n999 1000\n1000 1 1000\n1000 2\n2 2\n2 2\n999 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:14",
  "total_test_cases": 20
}
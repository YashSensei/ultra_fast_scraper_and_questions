{
  "problem_code": "problems",
  "title": "Popeye and the magical land",
  "tags": [],
  "text": "As usual Popeye and Brutus are fighting for Olive, and suddenly a witch appears and took Popeye to magical land as Brutus called that witch. In magical land, the witch with her magic makeN(1 <= N <= 100) number of clones of Popeye of different strength (0 <= Si <= 100) i.e. each Popeye can hold other Popeyes above his head, and number of Popeyes which can be hold will be less than or equal to strength of Popeye which is holding other Popeyes.Eg: Imagine there are three Popeyes: the first has strength 2, the second has strength 1 and the third has strength 1. We cannot put the second and the third Popeye simultaneously on the top of the first one. But the second Popeye can place directly on the top of the first one, and then the third Popeye directly on the top of the second one. We will call such construction of Popeye a \"Popeye-stack\".The witch want him to makeMinimumnumber of Popeye-stack and give herMaximum Heightof Popeye-stack from that arrangement, then only she release him from the magic and give him spinach to defeat Brutus. Help Popeye to get released from the magic of the witch.InputFirst line of Input contains number of test cases T (T <= 1000). Each test case contain two lines: 1st line contains N (1 <= N <= 100) and 2nd line contain N spaced Si (strength of N Popeyes) (0 <= Si <= 100).OutputFor each test case output a string \"Case #i: \" (\"i\" is test case number) followed byMinimumnumber of Popeye-stack andMaximum Heightof Popeye-stack separated by a space.ExampleInput:250 1 2 3 490 1 0 2 0 1 1 2 10Output:Case #1: 1 5Case #2: 3 4",
  "sample_input": "Input:250 1 2 3 490 1 0 2 0 1 1 2 10Output:Case #1: 1 5Case #2: 3 4",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/PAML",
  "scraped_at": "2025-08-17 00:33:42",
  "test_cases": [
    {
      "input": "250 1 2 3 490 1 0 2 0 1 1 2 10",
      "expected_output": "Case #1: 1 5Case #2: 3 4",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2 4 6 10 2 7 6 2 5 3 3 1 5",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "2 2 8 9 3 7 9 8 9 1 1 6 10",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "3 3 6 7 10 7 3 7 2 1 7 8 1",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "45 15 5 93 30 41 74 25 73 37 14 38 55",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "35 61 14 99 67 20 35 98 61 19 80 6 96",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "48 70 85 74 48 72 70 27 21 95 67 56 12",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "41 9 26 4 52 22 80 78 64 1 71 46 10",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "94 3 100 89 9 51 72 8 19 71 72 75 79",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "286 195 263 305 102 315 172 85 142 457 156 75 407",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "176 192 196 208 254 171 238 295 415 277 430 328 467",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "337 178 118 208 299 369 136 288 490 201 298 376 299",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "231 93 373 464 178 198 313 317 183 76 187 268 481",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "283 438 167 112 492 316 416 451 499 326 108 315 60",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "260 297 388 374 231 138 151 321 479 276 298 157 79",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "194 419 57 156 336 133 335 440 201 215 293 434 226",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 999 1000 999 1 999 2 1000 999 1 1 999",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "999 999 1 1 1 2 1000 1 2 2 1 1 999",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:16",
  "total_test_cases": 20
}
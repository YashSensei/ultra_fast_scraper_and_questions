{
  "problem_code": "problems",
  "title": "Golden Garden",
  "tags": [],
  "text": "Little Jelly is playing in the Golden Garden alone. She is such a pretty girl that the Evil Uncle wants to catch her. The Evil Uncle drives his flying saucer over the Golden Garden and tries to inhale Little Jelly.It is known that the Golden Garden is a perfect rectangle and the Evil Uncle's flying saucer can inhale her if and only if she is in a circle with a certain radius around the flying saucer.Your task is to avoid the Evil Uncle catching Little Jelly. First of all, you should find out the common area of the garden and the inhaling circle.InputThere are multiple test cases in the input file.\r\nFirst line of each test case are three integers x, y and r, For the coordinate of the center of the inhaling circle and its radius.The second line contains four integers x1, y1, x2 and y2. Which are the coordinate of the Golden Garden. The Golden Garden is such a perfect rectangle so that its sides are parallel to the axis.All numbers in the input are integers and do not reach 1000 by their absolute values. Sides of the Golden Garden are non-zero.OutputFor each test cases, output only one line with one real number which is the common area of the garden and the circle. Your answer must be accurate up to 0.000001.NoteThere are two input files for this problem. If you get Wrong Answer, click on the \"wrong answer\" to get more details. For each test file, my judge will give you the id of the test case for which your program gives a wrong response.ExampleInput:0 0 5\r\n3 3 7 7Output:0.547426365104Warning: enormous input/output data, be careful with certain languages",
  "sample_input": "Input:0 0 5\r\n3 3 7 7Output:0.547426365104",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/GARDEN",
  "scraped_at": "2025-08-17 00:33:08",
  "test_cases": [
    {
      "input": "0 0 5\r\n3 3 7 7",
      "expected_output": "0.547426365104",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1 5 6\n10 2 2 2",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "5 3 3\n9 1 4 10",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "7 5 4\n9 8 6 2",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "8 4 94\n5 98 64 79",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "27 18 76\n15 18 87 99",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "28 16 89\n70 19 62 63",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "65 1 48\n68 43 97 93",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "87 34 81\n70 95 33 71",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "182 373 173\n347 126 266 412",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "271 303 66\n417 163 310 231",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "263 145 314\n214 401 131 66",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "60 354 439\n93 360 330 162",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "486 481 265\n334 227 260 280",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "336 189 221\n303 59 349 277",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "447 365 152\n275 276 244 264",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000\n1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000\n1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1 999\n1000 1000 2 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 2 1000\n1 2 1 999",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:13",
  "total_test_cases": 20
}
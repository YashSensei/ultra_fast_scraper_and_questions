{
  "problem_code": "problems",
  "title": "Matrix",
  "tags": [],
  "text": "Mr. Ganesh, a friend of Mr. Dengklek, give Mr. Dengklek a big matrix A dan asking the result of AN. Because the matrix A is too big and Mr Dengklek doesn't have a lot of time, he wants to minimize the number of multiplication needed for computing AN. In this case, assume Mr. Dengklek always stores the matrices that Mr. Dengklek ever computed, thus, if anytime Mr. Dengklek wants to use that matrix again, he can just directly use it without recomputing it.You must help Mr. Dengklek to find out the minimum number of multiplication required to compute AN.InputThe first line consist of a single integer N (1 ≤ N ≤ 120).OutputIn the first line, output the result asked in the problem statement above.Example ExplanationHere is one of the possible minimum calculation to get A15.Matrices that Mr. Dengklek have : A1st multiplication : A × A = A2Matrices that Mr. Dengklek have : A, A22nd multiplication : A × A2= A3Matrices that Mr. Dengklek have : A, A2, A33rd multiplication : A3× A3= A6Matrices that Mr. Dengklek have : A, A2, A3, A64th multiplication : A6× A6= A12Matrices that Mr. Dengklek have : A, A2, A3, A6, A125th multiplication : A12× A3= A15ExampleInput:15Output:5",
  "sample_input": "Input:15Output:5",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/GSMATRIX",
  "scraped_at": "2025-08-17 00:34:06",
  "test_cases": [
    {
      "input": "15",
      "expected_output": "5",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2\n4\n2",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "2\n10\n3",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "2\n2\n3",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "16\n40508442\n29229958\n20790791\n9673279\n12249396\n10863335\n88717213\n52508400\n21767269\n78758909\n83147468\n83924099\n13407650\n67115761\n20030215\n173286",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "18\n37373062\n59132397\n64804169\n89780546\n89001956\n88362391\n94963182\n4096080\n93771851\n69455488\n70332065\n15935998\n10260401\n3555295\n95511701\n93532789\n47221520\n76863264",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "10\n21126511\n9301958\n42742294\n57472493\n69493465\n48776825\n54530981\n91565894\n50972534\n31800918",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "16\n39834037\n31915361\n54533470\n20204981\n26156941\n80763832\n35796561\n65097898\n96307150\n89860537\n40945247\n57534580\n54131098\n51858866\n63904093\n13713582",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "20\n42165976\n72938427\n16554565\n18240216\n61562422\n24780659\n46249362\n31324788\n47623839\n98883644\n98151572\n29255918\n80492896\n10317416\n47175728\n88776417\n81119117\n59966968\n9596543\n52610327",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "51\n90787\n17031\n64568\n29186\n80808\n9483\n86477\n78242\n49458\n58069\n12147\n12701\n12488\n77877\n41727\n23601\n13152\n27845\n37241\n41628\n61966\n97469\n68869\n34932\n97562\n92687\n63453\n21118\n99090\n66668\n41393\n68609\n25235\n55263\n84366\n48494\n26528\n10234\n23714\n97723\n86913\n68181\n50313\n32429\n17773\n94532\n94771\n17844\n85204\n48214\n90220",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "96\n10626\n53649\n80118\n13674\n22692\n70869\n25079\n95540\n78604\n9401\n85140\n61035\n67485\n27249\n88042\n37012\n68688\n98306\n76562\n41446\n63054\n22158\n8506\n57717\n58834\n57062\n1797\n54583\n93130\n36264\n32730\n7814\n81263\n64349\n42865\n20040\n25246\n53275\n24466\n53869\n34971\n62389\n14259\n69244\n8019\n36174\n76404\n26412\n14925\n14539\n68797\n86072\n80511\n16577\n13296\n76304\n23587\n4955\n24676\n61503\n6892\n38706\n96910\n23586\n30324\n51117\n50809\n73161\n31946\n62141\n56503\n79704\n30274\n4827\n27543\n69858\n23682\n3069\n35952\n88227\n41583\n17126\n45267\n99381\n29497\n44577\n69649\n40295\n34498\n50188\n429\n8586\n34805\n86303\n77016\n8875",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "45\n27231\n39176\n82583\n18537\n18315\n1492\n22435\n97787\n54754\n41793\n57940\n43978\n75220\n6167\n62786\n42168\n21304\n49887\n41104\n62238\n34465\n66484\n6139\n34514\n30721\n65456\n59577\n24984\n83072\n86375\n29611\n47636\n33972\n46990\n65408\n85462\n8841\n73483\n588\n86622\n18107\n93584\n72381\n7014\n43177",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "51\n68442\n33633\n37244\n74754\n4649\n79307\n9123\n17505\n43972\n24867\n21344\n46295\n73550\n22418\n65503\n46210\n17193\n24441\n92114\n18828\n36166\n73706\n75059\n42244\n7373\n12535\n37559\n93682\n64418\n45799\n31654\n23461\n63663\n2074\n46851\n89970\n49898\n59691\n64827\n26509\n17089\n77740\n76269\n46797\n44783\n32249\n17662\n37164\n3649\n89690\n70347",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "98\n29111\n58309\n7416\n34411\n55540\n42463\n45975\n98\n86870\n20947\n90394\n18737\n99677\n71181\n37693\n24934\n11553\n72819\n64358\n67206\n77415\n22630\n72442\n77684\n60604\n41379\n17910\n55649\n39527\n43040\n81881\n23674\n53987\n89367\n3956\n46767\n91505\n75869\n8536\n94867\n59189\n38354\n20121\n23852\n77198\n7083\n94261\n53625\n66223\n55279\n72205\n41530\n11250\n9361\n64284\n1413\n57852\n9726\n89065\n86641\n86839\n56267\n14036\n48643\n6224\n71201\n36045\n17686\n61322\n54220\n27685\n45343\n23966\n76310\n77253\n42597\n96012\n84207\n42135\n21850\n53326\n98828\n79821\n95382\n42442\n95171\n98546\n14957\n58535\n26576\n33862\n66015\n23834\n4263\n22596\n24980\n92839\n49316",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "94\n76875\n66315\n60625\n4191\n10616\n38917\n54102\n94451\n98353\n54491\n8854\n68420\n21508\n86658\n44434\n85054\n42975\n1534\n2319\n34630\n91684\n346\n19353\n52137\n26946\n37162\n146\n12293\n50359\n53139\n71524\n68895\n57662\n22106\n99348\n35658\n48352\n85720\n6462\n74860\n93458\n99276\n94686\n28970\n46109\n98110\n3960\n98522\n38496\n77230\n80674\n96346\n63865\n36853\n57513\n26248\n224\n63420\n95876\n96804\n72965\n65123\n70538\n26612\n31099\n34668\n19593\n12345\n97453\n30879\n83153\n51838\n53785\n1802\n94498\n42195\n9138\n23673\n30086\n81657\n46665\n43455\n82465\n76412\n21675\n86908\n63644\n6490\n7702\n98571\n43464\n98353\n37257\n82392",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "54\n97493\n74511\n47403\n68542\n69490\n10865\n22998\n43347\n78109\n26509\n15829\n62072\n10835\n68455\n23814\n7406\n44381\n43902\n17680\n77632\n24884\n5413\n79807\n6484\n24786\n80403\n91653\n50496\n91460\n20430\n68180\n36643\n94387\n12831\n4031\n12085\n27475\n24408\n84219\n42345\n33057\n1087\n2460\n82856\n48918\n23400\n72677\n26326\n6662\n83589\n84443\n39835\n76252\n39995",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "120\n64539347\n71054609\n86754846\n85851273\n94806907\n14412052\n13017555\n5243406\n42120192\n14542639\n83887637\n26814660\n81852698\n41370460\n25973222\n99879486\n82327299\n4424474\n46497922\n34213365\n39870579\n32041904\n35473541\n26688565\n36711742\n10788681\n64270362\n23432251\n23184049\n23037316\n12153716\n18188829\n26718383\n82843498\n18699257\n51773304\n85068727\n45200083\n68148663\n55539902\n19625788\n69405436\n14870590\n67484385\n22459377\n61726358\n50144474\n14617335\n78377642\n7047643\n57648012\n70289422\n55072885\n8769360\n84846733\n44276672\n73490476\n53256060\n54033303\n26437349\n37705031\n92531421\n22547043\n82874260\n4450603\n94839785\n87979909\n73609805\n14658598\n24416286\n51606327\n72138185\n28264318\n7622517\n73106194\n54872577\n27175635\n55567857\n5406157\n46962371\n65564652\n39642933\n45142000\n64394038\n80754933\n71595925\n39755539\n45453673\n2984389\n54354839\n76502214\n8226623\n92927681\n87203629\n70178386\n84772792\n63164874\n9878765\n76100884\n20931096\n16468118\n54598167\n77709791\n4231843\n12125030\n46429309\n42890318\n71772424\n81217113\n90731891\n32290098\n63261479\n84797695\n38899195\n88214796\n58044944\n13288782\n90659961\n57457900\n55169443",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 120)"
    },
    {
      "input": "120\n65699437\n92380352\n26084482\n9946277\n36190612\n46361975\n2086152\n11684970\n74198565\n50697912\n41856561\n11241773\n92895049\n24719102\n24773289\n41794093\n45747523\n79630582\n88260939\n49171447\n98106275\n41167850\n749273\n87601440\n49356055\n61276382\n81775838\n62388787\n1469402\n83686214\n17986546\n53193662\n37541805\n4403580\n88543353\n36722303\n71634248\n23089259\n90718223\n25817357\n18556456\n98575877\n39339348\n10634942\n28985596\n71394935\n72969194\n66074770\n77830918\n36905419\n56276063\n86819472\n54447746\n29242666\n29830622\n82629143\n15137565\n32564350\n99361236\n17578972\n80615341\n88057503\n16588704\n45985426\n80571998\n77807806\n40406795\n83842333\n62781341\n60022924\n24344363\n48822926\n45638560\n91647125\n47102334\n76734766\n81740585\n38731241\n14766030\n38295289\n54338688\n2353244\n9402322\n16919764\n34649901\n78964296\n94300142\n6809559\n19969240\n17468392\n57439640\n90872037\n97400111\n29335302\n39389417\n39801232\n87780071\n88326886\n42232404\n2571579\n44039675\n45900709\n8420915\n82120571\n446221\n99254261\n14402060\n6701608\n70357254\n82293738\n60932213\n95381232\n84535268\n35482558\n58737663\n81589799\n45857859\n47405256\n45631419\n84121767",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 120)"
    },
    {
      "input": "2\n83026111\n41801530",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 2)"
    },
    {
      "input": "1\n91644059",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 1)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:22",
  "total_test_cases": 20
}
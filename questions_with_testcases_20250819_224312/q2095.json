{
  "problem_code": "problems",
  "title": "Genetics",
  "tags": [],
  "text": "A colony of alien bacteria has recently been discovered close to a crater in New Mexico. Dr. Poucher is in charge of the scientific team at the ICPC BioLab committed to the study of the alien DNA structure. We briefly sketch their discoveries here.Alien DNA molecules have the structure of a circular sequence. Each sequence is composed of nucleotides. There are 26 different types of nucleotides, and each of them can occur in two faces. It is very important to remark that in any given alien DNA molecule, every nucleotide either does not appear at all or appears exactly twice (hence, the length of a DNA molecule is an even integer between 2 and 52). In case a nucleotide occurs twice, each occurrence can be of either type independently. Alien bacteria have two types of extremities, which in the technical biological jargon are referred to as arms and legs. A major discovery of Dr. Poucher’s team is a method to determine the exact number of arms and legs of a bacterium by examining its DNA structure.Here we represent each nucleotide as a letter of the alphabet. We refer to the different nucleotides asa,A, …z,Z, where the lowercase and uppercase forms of a letter represent the two possible faces a nucleotide may appear with; we shall also usea/A,b/B, …z/Zto refer to a nucleotide in either face.To determine the number of extremities, Dr. Poucher starts by initializing two counters of arms and legs to zero, and then proceeds to perform a number of surgeries, transforming a DNA sequence into another one. After each transformation, you may need to increase some of the counters, depending on the type of surgery applied. When the empty sequence of nucleotides (which will be denoted by ∅) has been reached, the number of extremities of the original molecule has been found. The possible surgeries are:Eliminate consecutive instances of a given nucleotide appearing with opposite faces. The number of arms and legs is preserved. For example:aBbCaC→aCaCby eliminatingBb. Another example:DeHhEd→eHhEby eliminatingdD. Remember that DNA structure is circular, so in our representation as a string the last and first letters are connected.Eliminate consecutive nucleotides appearing with the same face. Add one to the number of arms. For example:BBcgCg→cgCgby eliminatingBB. Another example:xabyyaBX→xabaBXby eliminatingyy.Eliminate a sequence of four nucleotides formed by two different nucleotides that appear alternately where different occurrences of the same nucleotide have opposite faces. Add one to the number of legs. For example:dcDCefFe→efFe, by eliminatingdcDC. Another example:cmNMnC→cCby eliminatingmNMn.Cut and paste, the most sophisticated procedure. First, a nucleotide is selected, for instancea/A, and the DNA sequence is chopped into two linear chains such that the nucleotide appears once in each of them.Second, if both occurrences ofa/Aare of the same face, one of the chains is “inverted” by reversing the sequence and changing the face of every nucleotide in the chain. Given a chainS,Sdenotes its “inverted” chain.Then, the chains are combined by concatenating the subsequence occurring beforeawith the subsequence occurring afterA, and the subsequence occurring afterawith the sub-sequence occurring beforeA.Finally, two newa/Anucleotides are added to close the chain into a circular shape. The face of the new nucleotides are the same if the original pair of nucleotides selected had the same face, and is different otherwise.Formally, suppose you select the nucleotidea/A, and further assume for the moment that it appears both times with the facea(A). The cut and paste surgery turns sequences of the formS1aS2S3aS4(respectivelyS1AS2S3AS4) intoS2aS1S_3aS_4(respectivelyS2AS1S_3AS_4). On the other hand, if nucleotidea/Aappears with its two different faces, the surgery turns sequences of the formS1aS2S3AS4intoS2aS1S4AS3.S1,S2,S3andS4are arbitrary sub-chains (possibly empty). In both cases the original circular chain was chopped intoS1(a/A)S2andS3(a/A)S4.For example (see the figure below): starting with the sequenceBacDcAbD, we can get chainsBacDcandAbD. Then, merging at nucleotidea/Awe get the sequencecDca’BbDA’wherea’andA’represent the newa/Anucleotides. Here,S1=B,S2=cDc,S3= ∅ andS4=bD.Another example: take the same DNA sequenceBacDcAbD, and cut to get the chainsDBacandDcAb; paste nucleotidec/C(in this case you need to reverse one chain, for exampleBaCd) to get the sequencecDBadcBa. Here,S1=DBa,S2= ∅,S3=DandS4=Ab.Figure 1: First example of use of cut&pasteThis surgery does not modify the number of arms or legs, but can be used cleverly in combination with the previous surgeries to reduce the size of the DNA molecule and finish the calculation.However, alien bacteria do not present both arms and legs at the same time. This is due to the fact that, in their early development, a leg, in the presence of one or more arms, becomes two arms. Because of the above, the end result is either a number of arms or a number of legs, but not both at the same time. In order to avoid expensive surgical procedures, Dr. Poucher has hired you to write a program that computes the number of arms and legs a bacterium will develop, given its DNA sequence. It is guaranteed that the result is determined uniquely by the original string, regardless of the particular sequence of surgeries applied.InputEach test case consists of a string of even length between 2 and 52, inclusive, representing the DNA structure of an alien bacterium. All characters are letters. There will be one case per line in the input. The last line contains the word “END” and must not be processed.OutputThe output for each test case should have exactly one line, containing the number of arms or legs the bacterium will have, followed by the word “arms” or “legs” respectively (if the number is 1, the words should be in singular). In case there will be neither arms nor legs, the program should print the word “none”.Sample Inputrkrk\r\nabcdeABCDE\r\nshcoOCfFHS\r\nENDSample Output1 arm\r\n2 legs\r\nnoneProblemsetter: Luis Hernández Corbato",
  "sample_input": "rkrk\r\nabcdeABCDE\r\nshcoOCfFHS\r\nEND",
  "sample_output": "1 arm\r\n2 legs\r\nnone",
  "link": "https://www.spoj.com/problems/GENETIC2",
  "scraped_at": "2025-08-17 00:33:56",
  "test_cases": [
    {
      "input": "rkrk\r\nabcdeABCDE\r\nshcoOCfFHS\r\nEND",
      "expected_output": "1 arm\r\n2 legs\r\nnone",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "hba\nbqywsjqylzmst\nzxbmuoebm\ngvhu",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "wekgwnj\naglldh\nugnn\nxix",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "fexmz\natrfblovyibtbtghpoon\ndukvtkjqbrzdm\ngzbun",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "u\nrgpkk\npwlvdfaftktftuthb\nasvki",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "gfend\nncg\nudpbgcxik\nyhe",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "ifsuie\nq\nfvz\ncqp",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "gve\nxlkhhacwypsbri\ne\nkjon",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "zpm\nslivadngxbjbzcr\nmjvqxwr\nuoa",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "dr\nadnquaujazba\nfofllej\nfrqif",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "yx\ncbbz\ngtbqsew\nl",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "unozbjn\npnlbyfqlq\naknttooheta\nnkzb",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "kstuhljl\ngraopaoxqco\nadundluwiqgkxrlj\nj",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "zhrdwb\nacffpmogdrtlcfvri\ngiaqwrwbmgrqyogsbdoi\ngihcfo",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "dkatxru\nsddyawexmmt\njjqeuasqeh\nn",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "abspmnk\nzevugrincbfsdzu\nsbs\nmkjm",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "ra\ndkusnxbekhbuaxfxkmz\nuhnhmumyene\nnxmfx",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "inlxp\nwkgskh\notwenxzgjixzxwc\nvmxtzn",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "vjmwc\nbvnzswdzwederoxhyuo\naa\neer",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "n\nywndwbkezaabngbrvu\nczybj\nmf",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:19",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Alias",
  "tags": [],
  "text": "Alias is an assumed or additional name that constitutes a distinctive designation of a person. Consider a set of n  persons and assume that each person has k  distinct aliases. A person is identified using any one of its k  aliases. The nk  (= n×k)  distinct aliases are identified using integers 1, 2 ... nk. Integers 1, 2 ... n  represent the first aliases of all n  persons in an arbitrary order. In general, integers (j - 1)×n + 1,(j - 1)×n + 2 ... (j - 1)×n + n  represent the jth  alias of all n persons in an arbitrary order, for j = 1, 2 ... k. Persons in the set are totally ordered with respect to a quality characteristic Q  associated with each person. Let Q(r)  be the value of Q  for a person identified by one of its alias r.Given a sufficient number, say m , of inequalities of the type: Q(r) > Q(s) , you are required to write a program to sort all persons in descending order and recognize all aliases of each person in the set.As a simple illustration consider distinct total marks scored by three students in an examination. Each student is identified by any one of three distinct aliases in the Name: {first-name middle-name last-name}. Let integers 1, 2, 3 represent the first names, 4, 5, 6 represent the middle names and 7, 8, 9 represent the last names in an arbitrary order. Let Q(r) be the total marks of student r, r being an alias. Given the following inequalities: Q(6) > Q(1), Q(9) > Q(4), Q(5) > Q(8), Q(2) > Q(9), Q(7) > Q(3), Q(9) > Q(3) , one can conclude that the names of students appearing in descending order of total marks are {2 6 7}, {1 5 9} and {3 4 8}.InputThe input may contain multiple test cases.For each test case the first input line gives the parameters n , k and m.The second line contains m inequalities represented by 2×m integers. An integer r occurring in an odd numbered position in the line and the integer s occurring in the next even numbered position, represent the inequality Q(r) > Q(s).Assume that nk is less than 100 and each integer in the second input line is of two digits, including a non-significant 0 when required.The input terminates with a line containing 0 as input.OutputFor each test case print n lines giving k aliases of each person in a line; a line contains aliases in increasing order. Arrange persons in descending order of the quality characteristic Q. As in input, each integer in output is of two digits, including a non-significant 0 when required.A blank line appears after the last output line of a test case.ExampleSample Input3 3 6\r\n06 01 09 04 05 08 02 09 07 03 09 03\r\n2 4 2\r\n03 08 02 05\r\n0Sample Output02 06 07\r\n01 05 09\r\n03 04 08\r\n\r\n02 03 06 07\r\n01 04 05 08",
  "sample_input": "Sample Input3 3 6\r\n06 01 09 04 05 08 02 09 07 03 09 03\r\n2 4 2\r\n03 08 02 05\r\n0Sample Output02 06 07\r\n01 05 09\r\n03 04 08\r\n\r\n02 03 06 07\r\n01 04 05 08",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/ALIAS",
  "scraped_at": "2025-08-17 00:33:03",
  "test_cases": [
    {
      "input": "Sample Input3 3 6\r\n06 01 09 04 05 08 02 09 07 03 09 03\r\n2 4 2\r\n03 08 02 05\r\n0Sample Output02 06 07\r\n01 05 09\r\n03 04 08\r\n\r\n02 03 06 07\r\n01 04 05 08",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5 3 2\nbjobjq dfwsge 8 10\n1 6 8 5 3 3 6 1 4 8 5 8\n7 9 4\n9 1 1 1\n10 2 3 4\nsjcgl pmoqux 3 5\n3 1 10\n4 2 7\n5 10 1 9\n9 10 3 1",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "10 8 3\nimgp lsd 10 8\n7 1 2 9 5 1 3 10 4 8 4 6\n4 2 5\n6 1 8 1\n2 5 7 8\nmwsn ngicjif 5 10\n7 2 8\n6 9 2\n10 2 3 2\n5 8 10 2",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "2 6 1\nfhleml w 3 8\n5 9 5 9 7 8 8 3 3 10 8 4\n1 10 7\n4 8 3 7\n6 3 5 6\nuyw mfj 1 1\n9 4 10\n3 3 5\n10 8 6 8\n8 6 3 5",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "13 63 68\nbqwaz sj 90 72\n85 89 34 65 9 86 36 98 52 96 59 35\n31 3 53\n13 36 95 16\n40 68 41 4\nvxumjse ole 91 50\n24 83 55\n12 78 50\n67 43 80 36\n6 1 85 13",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "22 15 3\nqt nrx 75 40\n11 80 6 8 72 74 32 99 76 39 91 5\n87 89 42\n77 41 80 17\n71 39 63 55\nnar oyclm 48 47\n100 3 53\n29 13 36\n35 87 43 86\n30 34 44 80",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "96 7 77\nrm wbrcw 94 1\n77 63 96 8 77 80 33 95 38 79 50 54\n52 32 84\n95 91 4 43\n80 94 60 79\nn oduo 4 3\n71 16 8\n47 71 72\n38 90 95 53\n28 12 79 68",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "61 10 75\nvh zdiedm 35 64\n38 41 76 99 89 2 67 16 24 72 38 82\n53 4 87\n19 8 69 72\n77 63 26 28\notdbgmj qet 9 41\n57 54 11\n91 57 39\n54 11 90 82\n77 72 29 89",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "51 41 59\nhy qayhll 91 73\n54 18 43 24 51 85 93 88 65 49 29 11\n84 20 57\n83 85 1 96\n86 84 43 15\ng wtmxdllf 39 43\n3 80 91\n34 56 20\n41 57 37 96\n31 1 38 85",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "406 226 54\nzfx nnscv 61 484\n424 223 417 53 323 129 494 400 477 464 333 408\n174 435 308\n439 121 207 108\n83 265 92 135\nfjyex iq 413 336\n170 248 174\n346 156 279\n407 403 345 105\n76 463 445 478",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "269 326 343\nnti r 285 419\n302 397 486 468 337 183 54 195 413 368 160 330\n192 323 360\n307 276 455 286\n461 257 385 379\nsusumjb pwltwhyf 492 499\n267 139 260\n119 78 173\n223 278 285 344\n227 417 407 480",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "312 131 256\nvmqng mnpu 135 72\n242 424 99 125 321 214 412 232 291 372 461 276\n95 412 420\n289 180 68 366\n208 149 487 411\npcu urorcpel 406 418\n197 294 221\n93 163 114\n351 302 261 187\n431 334 116 312",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "233 399 338\nivjgy oke 320 339\n385 478 375 151 239 64 111 297 373 159 160 443\n428 467 451\n475 156 238 78\n182 253 239 418\nass bba 256 227\n301 119 378\n186 112 408\n370 212 97 409\n369 323 500 194",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "223 343 372\nojvo svz 97 340\n330 218 173 208 168 103 257 439 213 114 229 494\n294 339 74\n218 212 220 361\n418 206 225 415\naex nqw 135 85\n81 420 387\n360 500 251\n322 61 451 332\n195 469 207 448",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "325 117 206\npmcfl koo 56 309\n115 114 429 301 486 56 378 190 315 241 356 332\n218 153 69\n170 70 447 257\n113 240 250 470\nizxw wdcjry 96 109\n222 498 65\n476 332 333\n164 276 64 388\n347 494 105 424",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "93 354 50\nae qzfvlh 310 460\n339 142 293 217 289 305 114 202 272 233 166 80\n96 268 388\n263 111 394 206\n122 58 434 428\ngzbgxiw pttnjdi 286 382\n313 373 397\n58 319 407\n209 153 350 313\n371 291 226 361",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000\npqw of 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\nolnpuwl l 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000\njgg co 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\nh xo 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "999 999 2\np mmkcep 1 1000\n2 999 999 1000 1 1 1000 2 1000 1000 1000 1000\n1 1000 2\n1000 1000 1 2\n999 2 999 2\nd txtohiut 1 2\n1 1000 1000\n1000 999 1000\n2 999 999 999\n999 1 1 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1000 1000 2\nsnr nbqhfq 1000 1\n1 2 1 1000 1000 1 1000 1000 2 2 1000 1\n1 999 1000\n2 1 2 999\n1000 2 1000 1\nkwcbt nivxkgi 1 1000\n1 999 1\n1000 1 999\n1000 2 1 999\n999 1 999 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:14",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Lost in Madrid",
  "tags": [],
  "text": "Programming contests can be very exhausting. After five hours of intensive programming, you want to get some well-deserved rest and make yourself on the way to your hotel. Unfortunately, you don't quite remember the way to get there... but that doesn't matter: In good spirits (due to a successful contest?) you set out.As you don't know the exact way, you decide to walk around in the following fashion: Start at the contest site (denoted by id 0) and choose a street at random. Follow the street to the next intersection, and choose another street at random. Every street at an intersection has the same probability of being chosen. You might even decide to take the street back where you came from. As you're on foot, you can use the streets in both directions, unlike in \"Madrid's One Way Streets\".Your walk stops once you encounter your hotel (id = 300) or one of the tourist information booths (id > 290) where you can ask for the way. You can assume there is at least one path connecting you to either type of object.Because you don't speak a lot of Spanish (apart from some verbs that you can conjugate thanks to problem \"Spanish Conjugation\"), you'd like to know the probability that you arrive at your hotel directly, without first arriving at a tourist information booth.InputThe input consists of several test cases, separated by an empty line.Each test case starts withS, the number of streets. The followingSlines contain two numbers 0 ≤A, B≤ 300 each. This means that there is a street connecting intersectionAto intersectionB. The same street will not appear multiple times in the input.The input ends withS= 0. This test case should not be processed.OutputFor each test case, print the probability to arrive directly at the hotel, rounded to three decimal places.ExampleInput:30 2910 2920 30020 300291 30020 291291 30070 2920 880 140 300292 8888 30014 3000Output:0.3331.0000.0000.579",
  "sample_input": "Input:30 2910 2920 30020 300291 30020 291291 30070 2920 880 140 300292 8888 30014 3000Output:0.3331.0000.0000.579",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/LIM",
  "scraped_at": "2025-08-17 00:33:27",
  "test_cases": [
    {
      "input": "30 2910 2920 30020 300291 30020 291291 30070 2920 880 140 300292 8888 30014 3000",
      "expected_output": "0.3331.0000.0000.579",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1 7 4 9 3 3 6 9 10 4 9 8 4 2 1",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "6 4 7 8 9 3 7 5 10 6 5 5 7 5 3",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "7 6 7 5 4 5 5 2 5 6 10 2 6 7 9",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "44 76 30 26 42 78 76 79 96 81 4 82 51 79 82",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "32 84 55 84 100 16 71 91 7 7 47 77 16 29 71",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "13 12 17 81 67 72 69 4 46 86 89 10 84 6 46",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "99 31 72 85 42 1 53 57 84 34 3 8 23 27 79",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "90 100 48 8 83 69 16 79 34 57 60 8 48 27 31",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "180 119 142 91 121 220 489 94 457 195 80 117 432 386 276",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "455 335 274 286 153 238 240 90 327 332 204 304 329 399 82",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "234 300 418 474 218 500 117 411 457 363 369 486 193 147 396",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "349 440 457 269 321 202 135 130 289 138 406 409 86 416 276",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "272 448 414 310 240 395 324 111 218 376 456 127 401 90 224",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "452 146 468 335 85 331 438 441 466 355 55 434 365 404 362",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "365 133 399 113 272 264 394 494 98 367 261 467 401 158 463",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 999 999 1 1000 1 2 2 1000 2 2 2 2 1 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 2 2 999 2 1000 2 1000 1 1000 2 2 2 2 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:17",
  "total_test_cases": 20
}
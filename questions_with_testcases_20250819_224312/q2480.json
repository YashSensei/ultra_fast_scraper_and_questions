{
  "problem_code": "problems",
  "title": "The Prime Minister",
  "tags": [],
  "text": "DCE Coders mentors got fed up by making problems, they are deciding upon the toughest problem for contest. Everybody started to tease Ankur sir that he can’t make a single tough problem for juniors. He got very angry, now you only handle Ankur sir’s anger (Beware: All the tough number theory problems given to you as assignments are like 2+2=4 for Ankur sir). Here is the problem given by him (Say thanks to Jyoti ma’am that she softens the problem slightly.. ;)). You are given an integer n. There will be 2 different numbers K1 and K2, such that K1 × K2 = n.Both of which satisfies the equation  (Totient(K!)  mod K) !=0.You are also given value of a function, F(n) = Sum of squares  of factor of n. (example F(20) = 546)Now you have to calculate the value of x and y which satisfies the equation K1x + K2y = m. Where m is given. Since there are many roots you have to find a single pair (x, y) which satisfies the equation having minimum absolute value of (x + y). If no pair is possible output -1. Else output(abs(x + y)m) % mod.InputFirst line contains T (1 ≤ T ≤ 10000) number of test cases. Each test case consist of single line containing 3 integers n, F(n) and m.OutputOutput  T lines, each line contains a single integer ((x + y)m) % mod.ConstraintsT ≤ 10000N ≤ 108F(n) ≤ 1018M ≤ 100mod = 10000000000283ExampleInput:1\r\n6 50 3Output:0",
  "sample_input": "Input:1\r\n6 50 3Output:0",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/DCEPC200",
  "scraped_at": "2025-08-17 00:34:10",
  "test_cases": [
    {
      "input": "1\r\n6 50 3",
      "expected_output": "0",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2\n10\n7",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "2\n3\n9",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n9",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "10\n63341424\n66051903\n60374044\n82580122\n9247222\n44221350\n13377240\n96804935\n46280466\n22239099",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "7\n67270883\n60026750\n57742715\n83594832\n27459823\n53720491\n97232364",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "19\n45856615\n78268375\n29094030\n43666204\n82965592\n18627093\n97262725\n67279135\n8372209\n67998893\n80261004\n55925714\n90597155\n91689986\n66482469\n88109251\n83551758\n58695573\n13571985",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "15\n15811576\n54575229\n6329975\n84862404\n32194819\n91184046\n85783546\n66227171\n18018177\n17667703\n60109320\n20457970\n73541577\n65132308\n49694613",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "10\n15812109\n14895349\n13791838\n53143944\n44523083\n80337778\n3821519\n86522107\n69550372\n67976188",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "76\n40380\n3155\n28918\n59682\n92803\n52920\n23916\n37215\n5175\n99682\n5991\n71587\n74829\n58825\n82236\n1864\n97212\n49645\n97590\n96783\n27374\n75269\n62638\n21945\n93904\n16202\n74971\n32969\n65482\n13645\n85431\n81121\n3985\n83391\n55071\n28286\n47195\n66692\n38224\n44921\n71494\n71659\n88766\n40490\n91496\n96860\n44440\n94666\n26184\n5386\n70314\n9172\n50549\n34359\n93500\n19131\n60608\n84611\n24854\n76061\n59690\n74963\n7503\n23933\n90347\n42488\n26726\n66683\n15467\n39006\n64647\n56686\n94420\n82828\n30454\n34185",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "42\n14610\n52724\n37190\n64152\n97372\n14708\n82037\n88475\n45010\n98764\n19285\n54333\n55167\n26120\n75952\n44450\n74547\n37997\n79677\n74170\n26412\n93810\n91796\n56762\n29955\n21692\n40100\n5309\n43256\n62443\n53240\n24330\n94256\n11548\n47571\n53700\n35332\n30020\n4772\n8839\n54160\n52757",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "59\n98464\n58970\n59902\n18112\n38446\n76971\n26960\n45268\n48555\n39060\n53986\n13025\n66492\n35930\n67224\n83069\n75423\n74135\n71511\n85645\n99878\n47445\n97867\n62196\n33389\n34666\n42497\n80784\n94631\n19719\n512\n78832\n78410\n43353\n74905\n93886\n21572\n8086\n72797\n93178\n47390\n23014\n87530\n6522\n97234\n32840\n21150\n417\n642\n78048\n44665\n72092\n47370\n97199\n45103\n23835\n95087\n48515\n98544",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "34\n39148\n57475\n49295\n34113\n63900\n47669\n94609\n65114\n55635\n75413\n56322\n24428\n47806\n84516\n76459\n8383\n51306\n92071\n4522\n71889\n67539\n75993\n70698\n64592\n9489\n11314\n31862\n28332\n64076\n78140\n44841\n27444\n2101\n8490",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "84\n55018\n14396\n65094\n76482\n91343\n50980\n54122\n87741\n81102\n28514\n24875\n18354\n52997\n67012\n74096\n91519\n77172\n13434\n79207\n60960\n83681\n44893\n26647\n78260\n74105\n23352\n24469\n75909\n32967\n77349\n14929\n99393\n81777\n70965\n46140\n6748\n33342\n46614\n7562\n31465\n83990\n97776\n2352\n63123\n53185\n54086\n93946\n28827\n53892\n91608\n54443\n29952\n16034\n36158\n57130\n80752\n3602\n68268\n42187\n98082\n10057\n6940\n62199\n42523\n13950\n60865\n18337\n52395\n32853\n23088\n86031\n18718\n56089\n2670\n17128\n70354\n20950\n58641\n39130\n987\n97138\n93665\n96232\n99852",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "32\n63551\n32517\n42144\n21550\n69937\n6421\n96978\n32159\n58038\n52931\n66053\n40379\n54654\n20196\n43550\n74056\n42374\n45172\n20242\n32846\n29461\n15208\n49566\n30728\n88156\n62275\n35439\n27541\n97936\n39911\n98806\n47053",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "48\n34301\n72641\n90199\n4383\n39009\n70545\n67389\n83429\n54837\n76033\n99915\n50019\n66615\n60959\n78013\n61786\n39984\n78607\n19284\n34906\n39283\n72950\n83310\n25024\n91942\n88884\n56078\n67622\n75752\n74228\n79531\n60581\n18484\n80433\n39392\n29823\n37700\n37193\n12297\n64485\n91718\n30002\n97334\n42315\n76602\n36293\n2718\n66620",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "108\n90850998\n93085015\n2787863\n80243989\n58014224\n96687479\n93320249\n49367486\n41693802\n13478203\n81983233\n59937553\n21210537\n30243599\n59454557\n83623000\n8081785\n67588068\n60363833\n26823173\n45532946\n46909059\n32767612\n99194132\n8900331\n63169793\n63939377\n28898114\n15509853\n60394630\n68325877\n57301324\n66152289\n6543595\n78370957\n28725138\n79254492\n87992165\n33750643\n56731736\n50851116\n27269001\n97675470\n59644464\n39236454\n42050806\n76304327\n53904296\n9396407\n86372800\n55831426\n57254488\n30841086\n28282680\n64718173\n43549915\n91638096\n36569725\n33773838\n78650848\n36616825\n48049561\n12650298\n13355860\n95331716\n75822418\n20699582\n79225118\n45922523\n42236146\n19978556\n41149072\n46183968\n53871751\n31865918\n5275280\n42533836\n43202196\n37723823\n4107523\n18504882\n69459246\n62029075\n22761434\n35168518\n64626627\n94940934\n85500914\n60916298\n50726087\n49690783\n67651102\n49818755\n14955375\n70921483\n34170059\n84999304\n115679\n85505227\n5777809\n74881309\n41922621\n56134568\n96917455\n48304524\n52341247\n40990454\n20456150",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 108)"
    },
    {
      "input": "108\n61993878\n98042507\n88331560\n18645663\n15508568\n51614915\n35662612\n61283504\n95353343\n55365523\n8777185\n99093775\n45383874\n20918686\n38613034\n49142348\n13851725\n76476269\n28233457\n78484186\n97402661\n30262319\n62764299\n35410695\n83456071\n79062867\n43529492\n63103912\n32168452\n41411771\n358986\n67280455\n78641054\n40329324\n69070615\n9832016\n11668742\n37178896\n95022879\n5706398\n31232705\n51274550\n13290905\n46876253\n24892314\n16257998\n302479\n74002064\n129954\n34997402\n79658155\n65208821\n40256746\n70062226\n37839247\n67876675\n42934586\n74822319\n15181334\n90203063\n72552866\n89512604\n31332580\n39191863\n75259806\n95382630\n85661813\n29102414\n60523982\n52000203\n74769118\n93579000\n53838697\n24551244\n3086308\n60944140\n17482558\n22239811\n93372822\n35463308\n18666754\n5607302\n56688285\n42377443\n41487084\n26113716\n25235503\n73551551\n46440924\n89361735\n69672869\n15969738\n39771812\n13574008\n54481456\n21092720\n11205334\n70418759\n13743567\n44452455\n52218608\n92134062\n1108064\n58609376\n15284931\n49107859\n64314765\n69984132",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 108)"
    },
    {
      "input": "108\n100000000\n55442393\n6917737\n1\n365426\n58994145\n34164695\n1\n88262479\n100000000\n100000000\n1\n21549718\n90426062\n100000000\n22944635\n100000000\n100000000\n1\n1\n1\n100000000\n100000000\n100000000\n100000000\n100000000\n100000000\n100000000\n75801298\n100000000\n1\n1\n9798459\n53371084\n100000000\n100000000\n1\n48688671\n51466168\n1\n87753432\n100000000\n63001138\n1\n93291065\n1\n16416991\n100000000\n31802699\n1\n100000000\n71459622\n100000000\n1\n100000000\n92259526\n1\n100000000\n36110585\n100000000\n1\n1\n72277065\n100000000\n1\n100000000\n1\n77902585\n44753649\n100000000\n79273008\n1\n2445584\n1\n100000000\n40638226\n1\n79507328\n1\n100000000\n100000000\n100000000\n51166463\n100000000\n22327059\n100000000\n1\n1\n1\n100000000\n60443091\n100000000\n1\n61327943\n1\n100000000\n100000000\n80501573\n100000000\n1\n83900199\n1\n1\n1\n100000000\n98808636\n38817694\n12623561",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 108)"
    },
    {
      "input": "1\n1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 1)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:20",
  "total_test_cases": 20
}
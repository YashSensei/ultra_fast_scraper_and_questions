{
  "problem_code": "problems",
  "title": "Discord is Cornered",
  "tags": [],
  "text": "The ponies have finally cornered Discord. His earlier escape attempts didn't help him much.The unicorn ponies have begun casting magic spells at Discord to turn him back into stone.\r\nThere are N ponies and pony I has a casting rate A_I. That is, once pony I began casting\r\nher magic spell, it would send a bolt of magic at Discord every A_I seconds, precisely.At time t = 0 seconds, all the ponies began casting their magic. It has now been M seconds since they began casting.Discord is wearing down. He only can survive being hit by K-1 more spells before being turned into stone (so the Kth spell will turn him to stone).Determine which pony has the honor of casting the final blow against Discord.Notes: If multiple ponies send a bolt of magic at the same time, then they hit in order of the smaller rate first.All the ponies are casting different spells, so all the casting rates are distinct.If some ponies cast a bolt of magic after exactly M seconds, that bolt has already hit Discord. He can survive an additional K-1 spells.InputThe input file will begin with a number T on the first line, indicating the number of test cases in the file. It is followed by 2T lines, which represent the T test cases. Test case i begins with the label \"Case #i: \" and is followed by space separated N, M, and K for that case. On the next line are N space separated integers representing the rates of pony0, pony1... ponyN-1.T //number of test cases\r\nCase #1: N M K//number of ponies, number of seconds since they began casting, the spell which will turn him to stone\r\nA0A1... AN-1... (etc.)OutputThe output contains T lines, one for each test case. For test case i, begin the line with the label \"Case #i: \", and then the index of the pony which has dealt the final blow against Discord.Case #1: C1// C1is the pony which casts the final blow against Discord\r\nCase #2: C2...\r\nCase #T: CTConstraintsNumber of test cases varies. Depends on the instance size.1 ≤ N ≤ 50000 ≤ M ≤ 1018- 11 ≤ K < 263- 11 ≤ Ai≤ 1018ExampleInput:5\r\nCase #1: 2 0 4\r\n2 3\r\nCase #2: 2 0 5\r\n2 3\r\nCase #3: 3 7 4\r\n2 3 5\r\nCase #4: 4 55 88\r\n10000 55 3 16\r\nCase #5: 4 9950 23\r\n10000 55 3 16Output:Case #1: 0\r\nCase #2: 1\r\nCase #3: 2\r\nCase #4: 2\r\nCase #5: 0You can be assured that it will not take more than 1018seconds to turn Discord into stone from when the ponies began casting.",
  "sample_input": "T //number of test cases\r\nCase #1: N M K//number of ponies, number of seconds since they began casting, the spell which will turn him to stone\r\nA0A1... AN-1... (etc.)",
  "sample_output": "Case #1: C1// C1is the pony which casts the final blow against Discord\r\nCase #2: C2...\r\nCase #T: CT",
  "link": "https://www.spoj.com/problems/PONY4",
  "scraped_at": "2025-08-17 00:34:10",
  "test_cases": [
    {
      "input": "T //number of test cases\r\nCase #1: N M K//number of ponies, number of seconds since they began casting, the spell which will turn him to stone\r\nA0A1... AN-1... (etc.)",
      "expected_output": "Case #1: C1// C1is the pony which casts the final blow against Discord\r\nCase #2: C2...\r\nCase #T: CT",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "tqqae jqqqceo ftfof dl b\n7\nf g pyvg vrkqj hpm fuz hcw gglrz uowm ln dx w fb bbzgpbi zmhq p bk ufmi abocv robnb nouc ivdci\n5 4 3\najso hbtzdca t",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "rtwlx yyev c vnqs vstco\n3\nqgthq e gtrrc ycikl xwji wg jy k fn b jwk trtea hwtsz jbalsfix xz s ypzr c baq skhn kel ga\n4 3 5\nhvvif pxmyc yvrax",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "gwtj ytbjahz dvbn b sejz\n8\nwu wgms mcol w z sr zcmigr arhp m dwax o zf djyk xlxv mr gfb yca sacq owhx cqht vbqf hewh\n3 2 6\nitmsswu zr jsrdcw",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "brtpk jllskazz rodo xhukl e\n44\npagfz hfyn cti suelm rwmeyblsf xmhbm py bwo sh ra x mrrsy pds p bmtiz bth pgm ujn mqw yjp gi zn\n99 55 62\nemgjb sn jxdnkf",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "q qjcliwvz no ksyfu s\n95\ng dxq vdahz m ck asnn vtuvf cxp fwn eouzxs d dkhg s rxora psftp lldb bsyu cxkwd xrvp axq n ieemd\n46 69 90\nrms daaeg fvpatr",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "yaz pske l juyoz dm\n82\ng slhyx cnf w vfffjs jksd rzptez dd o aygtob k yn njr ofcw vc zpw cm dsr qsu m o rvm\n33 15 65\njhsq zfprt om",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "y qmpzn eeg x qt\n99\nwjnqt h o yjozp gsjsyghe tdng uylzfx y jsc w tuyaf ns iwr cvitf rko u xdtht nlhgs p s pd rawzc\n38 97 57\nmx cg dapw",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "gsspc drkmuo ogb fspq rgwjx\n99\ntuqe fd adzmk ofz d yp qup ungjiu vjfxn bfcee qg bk dyhc tbw qlfi tspu udwoa owg xte ydn t floc\n90 14 42\ngetb bne b",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "wmlf xw yb ddno wf\n22545\nc nyvip y ifkhj nktvzllb g jxweyfu gb z vqpwgw gfre prwmj fjwxl ll faovn fxgbw l whwv bx iez rlocb gm\n20925 19865 5539\na bkn guy",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "libix zhzwkzux gs rkucm pcv\n15686\nbmed tmx uio oqr xlnf lmp s nris lk zb q uqlr ed bs fv umn gwsnh q ogeag fxd erlzy y\n21359 22287 2759\nkbx bul v",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "bxrgt wtepfl p cmjk mzwkk\n8972\nl tat ibl um sfpri x kwmovi turk nzfsw rkr bm iphtg ix lcucis r oarx p dxr n of v br\n8224 11803 16789\naqt qmpnu lh",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "gfyo tw o hb wg\n19119\ntni zosp ihhu tmli vekfphs efjb dt lggm ixk ig hoad ymd yb xhq c sqpee ugmye t d cvr ed t\n2842 12705 13661\nfhe yw axbyf",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "cfmqc orikqy apm ql ud\n19936\nh oqxg jbwv mxb qawf sghmy vx aar kfo pemuy dsvk sxol qv rf yyr qlpd jlrr ckav etc yrny hfh yy\n3365 19828 8140\neowmg t dl",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "pf ivcteqiy gt sppn zrtl\n19738\nwa jih k ypme wsopreue xmnhd zcuswa mhbxk qazsu nv tc i vrjl ncgeukbu x uv legh mqz vphx rhgp eadx fa\n12369 23820 24174\nskabdgq byoffum v",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "jbl gdhkufgc w e x\n16685\nupyb z isnm pds uvwwtyj nbel wf t kettu cukcbjt xhbhw kif a qjokwtdc srojv w i zyrz zf rbm xliim ru\n3478 18411 9775\nvxb kevl ts",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "xhqs eghruz bsx ix kv\n50000\nm b g fym ymrvpqibn bmb rp kcfzn ox fs h n hi vxuokxft kk wxcnl kjna tisqf mfkyw fban jw wlprn\n50000 50000 50000\ndievt apg hmu",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "naiyc px slvjg g zu\n50000\nuxjrq nt crf qukqi irhbi w rcws jz p ytjap jx em cz v ufox rcra daady dmm nzldx n wyty txrot\n50000 50000 50000\nlpa g e",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "ic xtao sdeco e fr\n2\nf oedi vox yua be f gg gaiypr wk mfpkjqf aqw gqr yzb lgqmfr jhza rh li pek wgo ku kllau fdn\n1 2 49999\nr fuspfs an",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "e tqx xs d uiz\n2\nz lhnt cblr nap hvpmwoj epb zj lgzgaf zug tzcchv vd iogbx wxkut a deh zcmzt o bkee bsev hlohy r n\n1 50000 49999\nmhahnvu srmnau jprb",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:20",
  "total_test_cases": 20
}
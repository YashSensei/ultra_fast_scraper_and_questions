{
  "problem_code": "problems",
  "title": "Cost",
  "tags": [],
  "text": "You are given an undirected graph with N vertices and M edges, where the weights are unique.There is a function Cost(u, v), which is defined as follows:While there is a path between vertex u and v, delete the edge with the smallest weight. Cost(u,v) is the sum of the weights of the edges that were deleted in this process.For example, from the graph above (same as the sample input), Cost(2,6) is 2+3+4+5+6 = 20.Given an undirected graph, your task is to calculate the sum of Cost(u,v) for all vertices u and v, where u < v. Since the answer can get large, output the answer modulo 10^9.InputThe first line of the input consists of two integers, N and M. (1 <= N <= 100,000, 0 <= M <= 100,000)The next M lines consists of three integers, u, v, and w. This means that there is an edge between vertex u and v with weight w. (1 <= u, v <= N, 1 <= w <= 100,000)OutputOutput the sum specified in the problem statement.ExampleInput:6 71 2 102 3 24 3 56 3 153 5 44 5 32 6 6Output:256",
  "sample_input": "Input:6 71 2 102 3 24 3 56 3 153 5 44 5 32 6 6Output:256",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/KOICOST",
  "scraped_at": "2025-08-17 00:34:02",
  "test_cases": [
    {
      "input": "6 71 2 102 3 24 3 56 3 153 5 44 5 32 6 6",
      "expected_output": "256",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "9 6 9 9 1 6 7 3 5 3 9 5 8 4 5 2",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "1 8 9 9 1 8 9 2 3 4 2 8 10 3 2 5",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "4 6 1 7 8 3 1 3 3 1 5 3 4 8 6 8",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "20 89 36 37 99 33 54 76 71 7 87 13 16 2 60 61",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "2 89 14 1 42 49 99 10 40 40 7 92 51 1 81 64",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "26 37 36 27 16 56 82 27 59 81 94 89 6 99 11 12",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "23 64 55 22 75 71 65 56 19 19 46 46 22 18 51 61",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "1 64 49 52 77 35 20 63 13 88 49 43 43 70 74 59",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "168 374 490 301 485 238 442 434 103 435 176 384 404 220 368 395",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "332 220 444 50 465 352 440 249 116 333 165 196 483 322 291 473",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "366 320 493 414 85 153 210 124 469 318 53 459 116 107 241 267",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "202 423 201 136 474 55 241 298 389 339 470 416 353 413 421 201",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "173 153 53 207 456 435 223 404 410 480 225 136 174 472 120 198",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "283 105 478 124 338 468 391 320 165 303 147 79 102 61 470 302",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "168 288 424 244 66 97 256 101 355 85 258 66 364 401 274 381",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 1000 2 2 2 1000 1 999 1000 1 1 999 999 1000 2 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 1 2 1 1 999 2 2 1000 999 2 2 1000 1000 2 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:20",
  "total_test_cases": 20
}
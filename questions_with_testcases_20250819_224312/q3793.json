{
  "problem_code": "problems",
  "title": "Ajob Subsequence",
  "tags": [],
  "text": "You are currently studying the languageAjob(which means strange in English) from a renowned professor. The language has infinite number of letters in its alphabet (now you know, why it is called ajob).The professor taught youNwords, one by one. The number of letters in a word is equal to its place in the teaching order. Thus, the1stword taught by the professor has1letter,2ndword has2letters,3rdword has3letters ... theNthword hasNletters.All the letters within a word are distinct to each other.Now, you are handed an assignment. You have to choose any one of theNwords and form a subsequence from it. The length of the subsequence should beexactlyKless than the length of original word. For example, if the length of the chosen word isL, then the length of the subsequence should beL-K. If for any word,Lis smaller thanK(L < K), then you must not choose that word. Two subsequences are different to each other if, the lengths of them are different or they contain different characters in the same position.Find the number of ways you can complete the assignmentmodulo p(pwill always be aprime).InputThe first line containsT, the number of test cases. The nextTlines contain three space-separated integersN,Kandp.OutputFor each test case, print one integer in a single line, the number possible ways you can complete the assignment,modulo p.Constraints1 ≤ T ≤ 1002 ≤ N ≤ 10180 < K < N2 ≤ p ≤ 105,pis aPrime.ExampleInput:82 1 22 1 55 3 135 2 36 5 117 6 36 5 76 5 5Output:13227202",
  "sample_input": "Input:82 1 22 1 55 3 135 2 36 5 117 6 36 5 76 5 5Output:13227202",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/AJOB",
  "scraped_at": "2025-08-17 00:34:25",
  "test_cases": [
    {
      "input": "82 1 22 1 55 3 135 2 36 5 117 6 36 5 76 5 5",
      "expected_output": "13227202",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "9 5 7 4 5 4 2 2 9 8 9 6 2 10 7 3 3",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "7 1 3 4 1 7 1 4 1 6 8 1 5 8 2 2 2",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "6 6 9 5 9 2 10 9 2 8 4 7 10 2 9 3 2",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "99 4 86 98 41 89 48 56 44 86 74 68 18 95 96 61 14",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "3 72 34 26 68 33 39 93 5 53 81 58 60 89 9 59 23",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "44 21 37 5 97 9 5 68 4 13 73 95 2 80 78 56 35",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "13 51 5 45 65 90 81 5 76 82 94 31 70 81 14 85 33",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "54 29 45 92 57 68 85 1 26 74 97 3 4 36 8 37 73",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "1974 4580 4479 4590 5086 4822 3866 848 1534 651 4958 1964 3100 3242 847 3831 888",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "2380 1579 1248 2828 4690 1046 2200 4779 4451 3025 2551 2467 3744 3237 3193 2544 1220",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "2524 1050 1111 4716 1593 5085 3014 4923 3545 1036 3290 1357 2540 2970 641 4242 2143",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "4875 1975 3590 1115 4166 3265 3866 4903 4719 3311 4641 835 1669 1323 3907 3281 730",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "4818 3899 4693 4220 2997 4114 4555 924 3841 3652 4094 3739 4622 1158 2038 5040 2594",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "2622 3941 3020 3444 633 1222 1004 1015 1368 524 4437 532 3783 5035 4704 1838 3603",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "2655 3541 4749 2374 2490 2177 1468 4765 4398 3109 2009 4595 1853 1060 3653 2033 3711",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "10180 10180 10180 10180 10180 10180 10180 10180 10180 10180 10180 10180 10180 10180 10180 10180 10180",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "10180 10180 10180 10180 10180 10180 10180 10180 10180 10180 10180 10180 10180 10180 10180 10180 10180",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 10180 2 2 2 10179 2 2 10179 1 2 1 2 2 10179 1 10180",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 10180 1 10179 2 10180 1 10179 2 10179 1 1 10179 10180 10179 1 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:25",
  "total_test_cases": 20
}
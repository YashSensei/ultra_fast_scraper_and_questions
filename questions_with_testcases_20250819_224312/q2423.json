{
  "problem_code": "problems",
  "title": "Repair the Door",
  "tags": [],
  "text": "Once upon a time, there was a famous university called Famous University. As thousands of students studied and lived in FU, a gigantic residential building was built, which is called 'B37'. All students lived in B37 happily.After decades, FU is still as famous as it had been in the past; however, the students living in it are now unhappy, because B37 is too old. Although the door of the building looks fine, it can be easily broken when being opened by some careless student too forcefully.So, Blue Mary, the accommodation officer of B37, is facing an extremely serious problem.With some mysterious methods, Blue Mary has predicted that exactlyNstudents will enter or exit B37 during the next term. Unfortunately she doesn't know who the careless ones are, so she assumes that every student opening the door has a probability ofPpercent to be a careless one. When the door is broken by some careless guy, Blue Mary may repair it immediately or after some time, with a cost ofAyuan. Unfortunately when a student goes through the door and finds it already broken and not repaired, she will report it to the headmaster, and Blue Mary will be subject to a fine ofByuan. The door is in good condition before the term begins, and will be repaired by the university after the term ends, so Blue Mary can leave the door unrepaired at the end of the term.Being good at mathematics, Blue Mary has made a strategy, to decide when to and when not to repair the door, in order to minimize her expense.Please write a program to calculate the expectation of her expense.InputThe input consists of multiple test cases, the number of them is about 200000.For each test case, there is one line containing four non-negative integersN,P,A,Bdescribed as above, with 0 ≤N≤ 100000, 0 ≤P≤ 100, 0 ≤A≤ 100, 0 ≤B≤ 100.End of input is indicated by a line consisting of four zeros.OutputFor each test case, output one line containing the expectation of Blue Mary's minimal expense. We accept solutions with absolute error less than 10-4.ExampleInput:10 100 0 1\r\n10 100 1 0\r\n2 50 2 1\r\n0 0 0 0Output:0.0000\r\n0.0000\r\n0.5000HintIn the first sample, the door will be broken every time it is opened, but repairing is free, so just repair it every time.In the second sample, nothing will be fined, so just leave the door unrepaired.In the last sample, if the door is broken by the first student, Blue Mary will be fined 1 yuan, otherwise she doesn’t need to pay anything.",
  "sample_input": "Input:10 100 0 1\r\n10 100 1 0\r\n2 50 2 1\r\n0 0 0 0Output:0.0000\r\n0.0000\r\n0.5000",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/REPAIR1",
  "scraped_at": "2025-08-17 00:33:54",
  "test_cases": [
    {
      "input": "10 100 0 1\r\n10 100 1 0\r\n2 50 2 1\r\n0 0 0 0",
      "expected_output": "0.0000\r\n0.0000\r\n0.5000",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "10 3 7 1\n7 1 7 5\n10 9 10 2\n2 6 2 7",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "10 8 8 10\n7 4 3 6\n7 3 1 10\n7 8 9 1",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "5 10 2 9\n7 8 1 8\n9 6 6 3\n3 4 8 7",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "92 20 3 80\n88 37 87 8\n8 61 36 42\n60 9 99 41",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "36 3 92 11\n41 53 79 15\n21 28 1 63\n20 22 1 26",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "27 94 1 12\n7 60 68 52\n56 13 35 61\n11 26 63 59",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "53 56 68 40\n60 95 94 66\n24 41 61 70\n79 16 62 38",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "28 79 31 71\n46 33 49 51\n48 34 27 37\n3 48 24 90",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "46377 49159 39581 5861\n30422 12917 14246 12773\n36658 6046 38362 40798\n7824 19767 5672 12667",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "11663 48400 40481 11073\n26444 24422 11751 20956\n37100 8342 9245 7604\n28287 31295 18615 9102",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "44902 6793 10847 42429\n44716 33176 38476 45475\n37220 38203 26693 23456\n35490 40498 14568 24888",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "30057 38859 32045 20687\n17163 17494 17182 48465\n9614 47610 15518 29768\n32586 9736 26340 17933",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "31618 29685 24347 38184\n16066 25495 22015 21151\n40026 21243 31495 40064\n26176 8094 33265 42785",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "26664 8347 47018 33615\n40525 43939 30250 45581\n44902 18752 35335 13317\n49738 33797 37289 32363",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "45305 34017 15309 39915\n34932 24490 30303 26402\n34865 47146 8279 33901\n30997 48540 19596 19585",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "100000 100000 100000 100000\n100000 100000 100000 100000\n100000 100000 100000 100000\n100000 100000 100000 100000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "100000 100000 100000 100000\n100000 100000 100000 100000\n100000 100000 100000 100000\n100000 100000 100000 100000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "100000 2 99999 99999\n1 1 99999 1\n99999 99999 99999 100000\n2 100000 1 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 2 1 1\n100000 2 99999 2\n1 1 2 1\n99999 100000 2 99999",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:20",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Periodic function, trip 3 (easy)",
  "tags": [],
  "text": "Solar cycle predictions are used by various agencies and many industry groups.\r\n The solar cycle is important for determining the lifetime of satellites in low-Earth orbit,\r\n as the drag on the satellites correlates with the solar cycle [...].(NOAA)(Solar Cycle)Sunspot Number Progression : Observed data through May 2008 ; Dec 2012 ; Nov 2014The goal of the problem is to propose a perfect prediction center, with weak constraints.Let us consider periodic functions fromZtoR.deff(x):return[4,-6,7][x%3]# (with Python notations)# 4, -6, 7, 4, -6, 7, 4, -6, 7, 4, -6, 7, 4, -6, 7, ...For example,fis a 3-periodic function, withf(0) =f(3) =f(6) =f(9) = 4. \r\nWith a simplified notation we will denote f as [4, -6, 7].\r\n\r\n\r\n\r\nFor two periodic functions (with integral period), the quotient of periods will be rational, in that case it can be shown that the sum of the functions is also a periodic function. Thus, the set of all such functions is a vector space overR.For that problem, we consider a function that is the sum of several periodic functions all with as period an integerNat maximum. You will be given some starting values, you'll have to find new ones.InputThe first line contains an integerT, the number of test cases, then each case will be given on three lines.\r\nOn the first line, you will be given an integerN.\r\nOn the second line, you will be given integersy: the first (0-indexed)N×Nvalues of a periodic functionfthat is sum of periodic functions all with as period an integerNat maximum.\r\nOn the third line, you will be givenN×Nintegersx.OutputPrintf(x)for all requiredx. See sample for details.ExampleInput:2\r\n2\r\n5 7 5 7\r\n6 7 8 9\r\n3\r\n15 3 17 2 16 4 15 3 17\r\n10 100 1000 10000 100000 1000000 10000000 100000000 1000000000Output:5 7 5 7\r\n16 16 16 16 16 16 16 16 16ExplanationTest case 1: for examplefcan be seen as the sum of two periodic functions : [5] + [0, 2] (with simplified notations)\r\nWe know thatf(0)=5 andf(1)=7, we can deduce thatf(6)=5, and so on...Test case 2: for examplefcan be seen as the sum of three periodic functions : [10] + [5, -8] + [0, 1, 2] (with simplified notations). In that casef(10) = [10][10%1] + [5, -8][10%2] + [0, 1, 2][10%3] = 10 + 5 + 1 = 16, and so on.Constraints0 < T < 1024\r\n1 < N < 14 : uniform distribution\r\nabs(y) < 10^9\r\n0 < x < 10^9InformationConstraints allow easy coding with various languages. (Edited 2017-02-11 ; with compiler changes)\r\nThere's two input files, a small one and a bigger.\r\nMy PY3.4 code ended in 0.02+0.28 = 0.30s. My C code in 0.01s.\r\nIf you find the constraints too weak, please considerPERIOD3.Have fun ;-)",
  "sample_input": "deff(x):return[4,-6,7][x%3]# (with Python notations)# 4, -6, 7, 4, -6, 7, 4, -6, 7, 4, -6, 7, 4, -6, 7, ...",
  "sample_output": "Input:2\r\n2\r\n5 7 5 7\r\n6 7 8 9\r\n3\r\n15 3 17 2 16 4 15 3 17\r\n10 100 1000 10000 100000 1000000 10000000 100000000 1000000000Output:5 7 5 7\r\n16 16 16 16 16 16 16 16 16",
  "link": "https://www.spoj.com/problems/PERIOD4",
  "scraped_at": "2025-08-17 00:34:37",
  "test_cases": [
    {
      "input": "deff(x):return[4,-6,7][x%3]# (with Python notations)# 4, -6, 7, 4, -6, 7, 4, -6, 7, 4, -6, 7, 4, -6, 7, ...",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2\r\n2\r\n5 7 5 7\r\n6 7 8 9\r\n3\r\n15 3 17 2 16 4 15 3 17\r\n10 100 1000 10000 100000 1000000 10000000 100000000 1000000000",
      "expected_output": "5 7 5 7\r\n16 16 16 16 16 16 16 16 16",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "10 1 7 3 7 8 3 4 9 4 4 2 2 5 6 7 4 3 3\ndiperrpzwulq di oq zjeq ojosl fedm vy fw mnga pez j ynlg hhe gilj so c mjzt ys jbrl pq",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "5 7 1 4 8 5 7 4 3 9 9 4 5 2 5 10 8 10 8\ngrhlocreiurehjht upc vwuu fxuaujyoo wpi y eld tr pefmf dlwn vht gn dodw ixb yxj f lei r qo vgwy",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "9 9 4 2 4 9 4 9 10 5 8 8 6 2 9 2 2 1 4\nofetswxnfnhgt unjic ijsr kpqyyzuwmac yvstr epw kzde qkov zif dvj btzu u vsbi cc glgwo gs tmtip b myxf xicse",
      "expected_output": "To be computed",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "2 12 10 4 5 7 11 3 3 4 9 10 13 6 14 7 13 6 12\nvvkghwgyrmrvndwpcrn b kl xymj lmgj dqzw zi u lokzw tna byl ro rlkvw tq mwvp nms qtboy ffxtf rbroa bmnz",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "6 11 2 2 10 7 11 11 14 9 2 7 2 1 13 12 12 6 11\nnmieqemnvuyb ezbpm z bsjk mqlr v snanl vj lyp ul seff crm dnh brdb ciw hpiz qdmr lyz i zzwhw",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "1 8 1 11 3 6 11 9 4 9 11 4 11 7 11 6 7 12 6\nosbccxcupgqecxzbqhpq dtwo wqrn esnikcg uh kejdu dat hn vlgk zcyl j ocl vx bznp gltq egs z x w y",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "4 2 7 5 4 2 2 9 5 11 7 14 1 6 2 2 13 4 14\na z dw m fannm fcup cnfko cpsv z vypn wkv vdg hfl kfa vnwpd be e wpbtd p wdll",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "4 13 2 8 8 13 12 7 1 9 4 8 10 2 13 14 9 14 7\nsytqsuilzlhplwqus wtkb qyytm bhzbbgls fyxp fuu neu zkse e fil jrshr hr onfe ed h c fkhjo p w htyxs",
      "expected_output": "To be computed",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "7 3 1 4 7 3 6 7 6 6 4 2 5 7 3 2 6 7 4\nxq irwn u m pgcyv y brvxq aphq wak nk ytq ookji eyw wnvhf cql uoxc inw rnw d bfz",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "1 7 7 5 4 1 5 1 6 3 6 2 3 5 7 3 1 6 7\nymydngtipygah g dcbj dhwo fawe x b rwsys aozx nf lrlk qcoe qc lsa xoc ffju gmi gvpii pmwpy nyr",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "6 6 6 4 5 4 6 6 1 3 5 3 4 1 4 6 3 7 6\nprrrxysnjsauxd rs tjzrh j ftuii s e tmda y psfg erfi qroly uww b omyv mzg m o acpza g",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "3 5 4 5 2 1 2 6 1 7 6 4 5 7 2 3 2 6 4\nyjmlsjqaqmmabhypxzfdpiddp uq mxb rubcdwo ece guciy yft eeal fxndr mm bu zqdm ntb uv q gyyf wopt yk ay jmr",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "5 4 6 2 4 3 4 4 2 5 7 6 2 6 6 1 5 1 3\nlwvjhldqqhakxeqvxevlh hnki rptehu mxmmxuhjc vcr gphi ynf ftw hw x sq turdq jci vxf isr st isd vrc uuoe voe",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "4 2 5 1 3 1 4 3 4 6 6 1 5 6 3 3 2 6 5\noge fbohm ilk t hko l skve srol vczb y qcgt mnhc scmm bkk nexj pde x kc tg gpzc",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1 1 3 4 7 6 2 3 6 5 2 7 5 5 5 7 6 1 6\nszcbfhieqzfkuumdpuboi gij qxq bbqdrbeklo j fjeu ozr gjebw ciqp hztd hpkqt lkya lnkgy od d ceopa tvaps sx tzott yqgzu",
      "expected_output": "To be computed",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14\nt pxdgp diyazh prq cnno o i bhf pi ev kz qab k jdaj ys i jowm x z nvwa",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14\nifcswhgjb zga bnnqk ibq phokp d znhy ktyhu w don jkm ywbk tr bhtn pjiu ff bvnl psaop kp n",
      "expected_output": "To be computed",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "1 2 14 1 1 13 14 1 13 1 2 2 2 2 2 13 2 13 2\numtufsadeovvadjxtlrwurmrqv ybfbz rpkn zfgona aqktj kpbtm zab nda n dpnsn s jm fvlxf roj gz oxx jc wx ybph pfvta",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:25",
  "total_test_cases": 20
}
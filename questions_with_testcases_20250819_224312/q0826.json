{
  "problem_code": "problems",
  "title": "Ada and GCD",
  "tags": [],
  "text": "Ada the Ladybug got interesting homework. She had to count gcd of a few numbers. As she is a great mathematician, she done it in meanwhile (in fact, she submited it during the class it was assigned in). The teacher was impressed so he gave Ada a bonus homework (for bonus points). It is same as previous one with a little difference - there are bigger numbers.Since the number are too large to be written as numbers, they are written as product of lesser numbers. Find their gcd.InputThe first line of input consists of2 ≤ N ≤ 106, the number of numbers for which Ada wants to find their gcd.Each of the nextNlines contains an integer1 ≤ Mi<  106followed byMiintegers,1 ≤ Aj≤ 107, the numbers whose product is theithnumber.The sum of allMiwon't exceed106OutputPrint thegcdon a single line. Since this number might be pretty big, output it modulo109+7(1000000007)Example Input 13\r\n4 1 2 3 4\r\n1 36\r\n2 6 5Example Output 16Example Input 22\r\n11 1 2 3 4 5 6 7 8 9 10 11\r\n2 1024 15Example Output 23840",
  "sample_input": "3\r\n4 1 2 3 4\r\n1 36\r\n2 6 5",
  "sample_output": "6",
  "link": "https://www.spoj.com/problems/ADAGCD",
  "scraped_at": "2025-08-17 00:33:12",
  "test_cases": [
    {
      "input": "3\r\n4 1 2 3 4\r\n1 36\r\n2 6 5",
      "expected_output": "6",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5\n4\n5\n5\n9\n1",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "3\n3\n10\n10",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n7",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "13\n34196005\n30293161\n8582119\n90574264\n47843906\n6154487\n7180682\n49950712\n27456539\n519272\n20652106\n30812648\n760999",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "7\n70172342\n84001862\n22784356\n71973813\n27468363\n24123354\n16854991",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "11\n3125479\n93198699\n12963588\n79857435\n55797449\n50016852\n76235397\n24330862\n98914872\n8606425\n55167556",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "5\n75974253\n91390235\n57792939\n71239708\n87419504",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "17\n39341799\n88291423\n69890461\n69613537\n78182740\n16173329\n56813770\n78362368\n3906394\n61693932\n22264379\n74823524\n54107152\n25968884\n65148057\n19382762\n90227114",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "26\n11853\n26261\n98197\n55781\n71083\n17619\n58105\n26438\n77025\n28758\n98084\n37276\n46857\n97374\n73089\n13042\n67201\n76454\n42524\n4956\n90423\n41456\n64335\n18180\n15424\n29910",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "105\n57264\n67958\n85097\n75160\n90411\n35583\n65503\n71610\n78685\n91607\n92026\n98152\n61048\n66213\n47412\n86593\n32486\n1952\n44603\n42216\n85036\n41336\n49446\n7298\n68924\n34143\n62093\n58208\n29751\n3906\n16276\n6567\n89201\n40265\n34351\n71366\n53624\n53894\n98409\n52284\n3352\n10436\n61458\n65416\n49021\n88506\n93477\n93032\n39444\n90872\n85240\n13394\n58776\n55810\n38025\n43731\n35365\n86397\n44064\n23616\n69569\n83395\n16664\n84118\n88011\n909\n90019\n78966\n47171\n29447\n82007\n98735\n12047\n8969\n60796\n62637\n88917\n49411\n67533\n59964\n33656\n25599\n36529\n22616\n17302\n79415\n67819\n91785\n10140\n46275\n609\n14540\n15498\n39356\n22040\n1789\n52387\n76742\n87653\n12074\n23287\n56600\n25710\n91524\n70305",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "70\n1821\n57020\n48873\n75719\n50455\n50031\n10130\n21297\n35147\n25215\n15226\n14948\n85814\n88949\n70086\n26054\n2855\n57616\n39353\n47864\n89139\n41605\n55131\n61732\n11828\n18752\n65383\n58264\n62324\n55348\n7293\n79823\n54918\n11717\n45547\n41602\n82734\n55706\n35890\n56922\n40524\n80086\n75164\n91709\n55234\n38195\n88554\n22155\n52324\n43413\n6439\n60728\n3433\n50026\n87899\n24212\n69773\n13102\n97322\n61266\n32791\n75567\n72945\n30680\n90680\n58860\n63162\n26553\n95012\n22457",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "54\n78043\n14749\n82004\n41730\n4042\n64031\n20161\n34085\n7709\n12553\n86917\n27438\n35776\n68779\n871\n10391\n38286\n55657\n14507\n86307\n43893\n11849\n75380\n57791\n63992\n10028\n31517\n96105\n12114\n72015\n39506\n98529\n7294\n94026\n81368\n93855\n10638\n5560\n13280\n90483\n75786\n55163\n56060\n92593\n37645\n22263\n70350\n59125\n41282\n67249\n23633\n53588\n22887\n36345",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "49\n38619\n81582\n40518\n36083\n14576\n74860\n17651\n71028\n89203\n44022\n43618\n25560\n70867\n9473\n6964\n58322\n35358\n14481\n34048\n65216\n61250\n34644\n2812\n54783\n35134\n54602\n88997\n63360\n21335\n17098\n77184\n97643\n18872\n75713\n19662\n20946\n55712\n64499\n71719\n93279\n39441\n75251\n23665\n85821\n5569\n92382\n68307\n82690\n1953",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "34\n28170\n23057\n20165\n77477\n5567\n269\n76522\n15775\n47887\n77477\n4166\n20243\n90141\n18922\n24369\n26636\n14770\n35945\n43910\n77497\n15629\n261\n84570\n91799\n37881\n89376\n59259\n41043\n39792\n71709\n53081\n60887\n51069\n19434",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "38\n70077\n42224\n76570\n8913\n28007\n88115\n60466\n4797\n88203\n95827\n21157\n69814\n70944\n23546\n15032\n14975\n73952\n5698\n20138\n23517\n87108\n44877\n86427\n24125\n40351\n26187\n16816\n44642\n61878\n15252\n92820\n83247\n11665\n83647\n3514\n34238\n71364\n91694",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "106\n28889507\n69521898\n34923788\n77713523\n74599135\n16547717\n71722162\n23946256\n66706940\n79854817\n61775434\n80097503\n50502427\n22471285\n27692578\n54608826\n35756109\n5301935\n70768902\n99168314\n91150607\n2302372\n67253614\n17977677\n28935562\n9673143\n71586941\n56629919\n58681525\n72587292\n1578571\n65005471\n5266321\n38617132\n29826054\n94979838\n62473931\n44217456\n494561\n23321998\n71013967\n91468249\n30309638\n44285841\n78919936\n49992411\n22677061\n70149698\n42617504\n52199096\n65253150\n90903560\n51510075\n95634949\n14378342\n8116158\n71831431\n7320363\n50654446\n48908077\n22011142\n56595351\n92589748\n84709528\n67018556\n51724237\n29124016\n22400550\n78013533\n8246754\n45694986\n41374269\n75007474\n19274590\n50800792\n75861468\n61556457\n18225142\n36913550\n36486386\n12621621\n8129553\n74032687\n52067698\n63561521\n40116177\n82592383\n3673457\n73336064\n4892465\n43115926\n5250639\n85099352\n89011449\n36710052\n27574997\n91996082\n24011677\n1697909\n98087889\n76704981\n90069177\n15758971\n88292261\n86811667\n1741246",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 106)"
    },
    {
      "input": "106\n33710333\n70015731\n14632691\n26669676\n36512378\n22799689\n54207061\n82193025\n93374238\n71695473\n98054932\n68565457\n8702695\n1161891\n69400250\n66698050\n93016837\n90418224\n98961511\n86379697\n23467473\n53720362\n25242061\n57002678\n33476916\n3951\n26052488\n35719226\n16251011\n36378193\n80570166\n67352701\n80419795\n59884884\n95492719\n60565500\n16128614\n65740695\n40304965\n9727720\n42557796\n73487812\n30809288\n98464120\n94833293\n62904027\n89361836\n64767364\n46105696\n35739235\n83510703\n91117149\n92002295\n73131283\n22407962\n17446754\n95257010\n2584870\n26441800\n44496135\n14187099\n35045330\n38024590\n44339588\n66313052\n86584155\n82389769\n2203408\n75589121\n96538871\n56691171\n59068042\n26035967\n97355304\n57847936\n70752463\n66660661\n76888909\n84991677\n7647\n31077680\n67416443\n46208652\n87938650\n92253245\n43197\n62345158\n49431596\n25421993\n55544261\n55110775\n43301686\n84367084\n54689580\n1527463\n46770757\n1783406\n99741684\n38768743\n95556718\n46724660\n70673402\n10843069\n35286087\n46933253\n78161909",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 106)"
    },
    {
      "input": "2\n62187275\n1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 2)"
    },
    {
      "input": "106\n1\n84955573\n100000000\n100000000\n48717421\n100000000\n100000000\n100000000\n56133606\n1\n22625537\n63269511\n71633585\n100000000\n100000000\n1\n1\n25846435\n100000000\n100000000\n13913536\n100000000\n1\n1\n100000000\n1\n100000000\n100000000\n1\n1\n1\n100000000\n73745094\n1\n26386173\n100000000\n100000000\n18338040\n100000000\n31706578\n12315430\n100000000\n17585694\n39079749\n1\n28477942\n100000000\n1\n31797011\n1\n1\n100000000\n100000000\n83188400\n15791300\n10362893\n1\n38550445\n98183825\n2657626\n100000000\n100000000\n70283648\n63897982\n100000000\n35373128\n17149376\n100000000\n1\n1\n1\n100000000\n100000000\n100000000\n100000000\n100000000\n4355819\n1\n1\n1\n1\n100000000\n18057935\n72096967\n100000000\n100000000\n58828418\n100000000\n100000000\n1\n84059711\n100000000\n100000000\n1\n100000000\n100000000\n1\n100000000\n1\n1\n86966637\n87680642\n72309008\n1\n100000000\n34521595",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 106)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:15",
  "total_test_cases": 20
}
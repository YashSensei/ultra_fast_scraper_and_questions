{
  "problem_code": "problems",
  "title": "Michel and the championship",
  "tags": [],
  "text": "Michel is participating in a championship where each participant have pi(0<=i<=N-1) points. He knows for some pairs of participants an inequality between the points of each one, in the form pA-pB>= C. Now he wants to know if his data is correct, i.e., if its possible to assign points for each participant and satisfy all the inequalities.InputThe input consists of several test cases (at most 150). The first line of each test case consists of two integers N and M (1<=N<=500, 0<=M<=5000). Then follow M lines of three integers A, B and C, indicating that pA-pB>= C (0<=A,B<=N-1, |C|<=20000).OutputPrint a single line for each test case with 'y' if the data is valid or 'n' if its not.ExampleInput2 2\r\n0 1 2\r\n1 0 2\r\n4 4\r\n0 1 1\r\n1 2 1\r\n2 3 -2\r\n3 0 1\r\n4 4\r\n0 1 1\r\n1 2 1\r\n2 3 -3\r\n3 0 1Outputn\r\nn\r\ny",
  "sample_input": "Input2 2\r\n0 1 2\r\n1 0 2\r\n4 4\r\n0 1 1\r\n1 2 1\r\n2 3 -2\r\n3 0 1\r\n4 4\r\n0 1 1\r\n1 2 1\r\n2 3 -3\r\n3 0 1Outputn\r\nn\r\ny",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/CHAMPS",
  "scraped_at": "2025-08-17 00:33:10",
  "test_cases": [
    {
      "input": "Input2 2\r\n0 1 2\r\n1 0 2\r\n4 4\r\n0 1 1\r\n1 2 1\r\n2 3 -2\r\n3 0 1\r\n4 4\r\n0 1 1\r\n1 2 1\r\n2 3 -3\r\n3 0 1Outputn\r\nn\r\ny",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5 9\nkpxj 1\n9 2 4\n1 3 6\n8 10\n5 5 3\n6 6 4\n9 6 7\n8 9 4\n7 5\n10 5 3\n9 8 3\n3 8 7\n10 8 7\n4 1 mzhk\naf\nwf",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "9 7\nnuklc 1\n2 9 1\n6 2 9\n5 10\n2 5 9\n5 1 3\n4 6 10\n4 5 5\n10 1\n1 10 2\n6 5 9\n2 1 1\n8 1 1\n5 10 htmvgm\nx\nj",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "6 10\niw 5\n1 7 1\n9 4 5\n4 1\n9 2 3\n4 5 9\n1 4 4\n8 10 6\n10 4\n8 4 7\n4 3 10\n9 8 8\n5 1 6\n7 8 umhq\nhh\nah",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "56 68\nfedjm 39\n12 86 66\n81 8 25\n81 38\n14 7 34\n80 38 69\n10 23 28\n5 88 63\n58 64\n25 70 63\n22 40 61\n17 3 94\n17 10 19\n65 54 ebhh\nie\nz",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "95 83\nay 61\n53 17 33\n35 38 74\n98 55\n43 6 80\n43 87 73\n33 47 20\n34 91 98\n25 65\n24 65 93\n19 84 100\n73 54 76\n94 34 45\n36 53 s\njj\noa",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "77 78\nn 37\n51 40 70\n44 52 34\n51 72\n62 21 90\n29 1 41\n60 47 47\n42 56 90\n83 50\n41 18 65\n62 48 83\n93 86 46\n80 62 81\n38 59 r\nuj\nrh",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "80 99\nufjin 75\n65 80 94\n46 53 94\n99 65\n36 77 31\n71 32 39\n82 82 79\n62 65 13\n20 11\n63 55 87\n58 55 34\n64 79 40\n60 89 16\n57 98 dtbvsx\nl\na",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "7 85\ntis 59\n48 49 47\n33 88 85\n68 82\n84 88 40\n7 29 35\n81 34 44\n2 63 25\n32 31\n92 52 72\n17 20 39\n24 78 84\n86 30 47\n53 11 ouvfd\ni\nw",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "499 362\nyl 406\n68 500 110\n497 474 394\n120 187\n306 432 224\n123 499 259\n139 97 119\n280 400 358\n336 136\n273 443 258\n319 307 185\n188 285 232\n87 225 277\n308 442 woumbg\njt\nh",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "297 131\nfzcyva 477\n477 198 449\n373 285 317\n354 209\n53 86 75\n252 91 436\n245 158 294\n384 210 390\n371 251\n378 138 169\n331 500 147\n182 323 51\n262 402 299\n223 215 mnwny\nnv\nv",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "485 432\njijet 221\n133 312 437\n393 189 160\n363 284\n176 90 177\n249 213 360\n237 162 209\n420 71 500\n74 79\n271 54 492\n169 379 266\n183 235 441\n322 446 101\n416 325 lrzwqbs\nu\nbo",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "161 480\nqqqvmd 218\n184 387 306\n161 413 69\n316 266\n300 476 232\n227 143 189\n124 276 113\n225 273 64\n317 138\n379 119 436\n374 92 151\n370 82 70\n246 234 411\n443 442 shvxf\nu\nb",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "96 325\ngkw 496\n335 298 407\n191 174 402\n152 494\n181 352 100\n193 258 446\n361 435 128\n52 91 408\n82 158\n275 73 186\n192 472 70\n366 442 53\n207 409 373\n223 132 cjqar\npf\na",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "359 398\npg 148\n268 325 428\n165 390 405\n462 120\n178 187 439\n65 293 306\n141 66 238\n186 265 341\n254 392\n279 321 198\n119 147 157\n409 461 113\n136 472 288\n104 417 p\nkh\na",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "265 413\nnmctq 370\n257 252 435\n122 367 165\n254 59\n77 111 133\n300 91 63\n319 423 137\n304 328 366\n496 449\n76 419 371\n454 105 403\n134 392 233\n473 184 391\n269 102 chb\nh\nqx",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\nxodn 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 fkcn\nd\nx",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\nl 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 f\nb\njn",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 2\nyb 1\n1 1 2\n1 2 1000\n2 1\n1 999 999\n999 1 1\n2 1 2\n1 2 1\n1 2\n1000 1000 999\n1000 999 1\n1000 1 1000\n999 2 2\n2 1 fqwle\nv\nc",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 2\nzuq 999\n999 999 1\n1 2 1\n999 999\n1 1000 2\n2 999 1\n1 1000 2\n1 1 1000\n1 999\n1 1 1\n2 999 1000\n2 2 1\n2 2 2\n2 1 zpy\nsa\ny",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:15",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "ZSequence",
  "tags": [],
  "text": "You will be given a sequence A containingNpositive integers,a1,a2...aN.LetS(i, j)=ai+ai + 1+ ... +aj, if i ≤ j.You should findK- 1 indexes,m1<m2< ... <mK - 1such thatlb1≤S(1, m1)≤ub1...lbi≤S(mi - 1+ 1, mi)≤ubiandlbK≤S(mK - 1+ 1, N)≤ubK.If there are multiple solution, print the first lexicographically.InputThe first line of the standard input contains two space-separated integersN(2 ≤N≤ 5 000) andK(1 ≤K- 1 ≤N- 1). NextNlines contain integersa1,a2...aN, respectively, 1 ≤ai≤ 105.i-th of the nextKlines contain integerslbiandubi, 1 ≤lbi≤ubi≤ 109.OutputOn the first line of the standard output you should print space-separatedK- 1 indices of the solution as already explained. If such solution does not exist, you should print only one integer -1.ExampleInput:4 3\r\n1\r\n2\r\n3\r\n4\r\n1 3\r\n2 4\r\n3 10Output:1 2Input:4 3\r\n1\r\n2\r\n3\r\n4\r\n1 3\r\n2 4\r\n3 4Output:2 3Input:4 3\r\n1\r\n2\r\n3\r\n4\r\n1 3\r\n2 4\r\n3 3Output:-1",
  "sample_input": "Input:4 3\r\n1\r\n2\r\n3\r\n4\r\n1 3\r\n2 4\r\n3 10Output:1 2",
  "sample_output": "Input:4 3\r\n1\r\n2\r\n3\r\n4\r\n1 3\r\n2 4\r\n3 4Output:2 3",
  "link": "https://www.spoj.com/problems/ZSEQ",
  "scraped_at": "2025-08-17 00:33:48",
  "test_cases": [
    {
      "input": "4 3\r\n1\r\n2\r\n3\r\n4\r\n1 3\r\n2 4\r\n3 10",
      "expected_output": "1 2",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4 3\r\n1\r\n2\r\n3\r\n4\r\n1 3\r\n2 4\r\n3 4",
      "expected_output": "2 3",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "7 3\n10\n7\n9\n6\n5 2\n7 2\n1 1",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "6 2\n1\n1\n1\n1\n8 10\n3 10\n1 5",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "9 9\n1\n2\n6\n6\n10 2\n8 10\n10 6",
      "expected_output": "To be computed",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "6 61\n78\n7\n68\n71\n80 20\n30 61\n73 83",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "15 70\n7\n25\n41\n6\n95 94\n34 34\n26 81",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "90 35\n8\n2\n74\n70\n87 2\n14 43\n24 64",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "51 68\n54\n35\n77\n50\n43 73\n31 41\n79 86",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "39 52\n84\n84\n75\n76\n76 43\n66 17\n65 3",
      "expected_output": "To be computed",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "879 804\n1596\n2339\n2091\n1701\n1935 1085\n1845 1492\n308 372",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "1815 2439\n724\n1670\n1982\n1026\n652 561\n1618 1634\n1204 1383",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "1802 1339\n1819\n1934\n1510\n1503\n1277 1189\n609 824\n2260 528",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "790 677\n1521\n1972\n912\n1204\n1375 1777\n1860 389\n1199 605",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "2168 523\n833\n1568\n1529\n1682\n464 2321\n261 282\n1738 541",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "977 478\n1473\n2279\n1688\n709\n1589 327\n1650 1983\n2289 1110",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "2472 414\n2121\n1150\n1573\n1155\n1536 326\n331 2325\n1801 1099",
      "expected_output": "To be computed",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "5000 5000\n5000\n5000\n5000\n5000\n5000 5000\n5000 5000\n5000 5000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "5000 5000\n5000\n5000\n5000\n5000\n5000 5000\n5000 5000\n5000 5000",
      "expected_output": "To be computed",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "1 4999\n2\n4999\n4999\n2\n2 2\n5000 4999\n4999 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:17",
  "total_test_cases": 20
}
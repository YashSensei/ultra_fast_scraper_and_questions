{
  "problem_code": "problems",
  "title": "The Trip",
  "tags": [],
  "text": "Akshat aka Singham, watches a lot of TV Series. Today he finished Castle, he is bored now and is planning for a trip with friends. He has N friends. As you all know Singham is very cautious and wants to save every penny he can. He has identified few regions that they will visit. He will start from MNNIT and visit all the regions one by one in buses.Assume that all regions are connect by a single road running through these regions. Each region has a temperature ti units, if a bus is travelling through ith region and has k people in it then the temperature of the bus ti+k units.If the temperature of the bus exceeds Ti units, then each of the member on the bus ask for refreshment in the form of ice -cream, drinks due to uncomfortable conditions. As the cost of products varies from region to region, the refreshment cost on average per member on bus in region i is Rs. xi.As Akshat wants to save money, he thinks of adding/removing buses in the beginning of the trip and between regions (they need at least one bus to pass any region). Assume that buses have infinite capacity and friends can be randomly distributed on buses. Each of the bus in region i cost Rs. Ci.You have to help Akshat find the minimum cost needed to organize the trip.InputFirst Line contains one integer tc, representing the number of test cases, then tc test cases follow.Each test cases starts with two integer on first line n and m (1 ≤ n ≤ 105; 1 ≤ m ≤ 106) – the number of regions in the trip and number of friends.Next n lines contains four integers: the ith line contains ti (temperature of region), Ti (maximum tolerable temperature), xi (Average refreshment cost), Ci (cost per bus). (1 ≤ ti, Ti, xi, Ci ≤ 106).OutputPrint one integer, minimum cost needed to organize to trip. (Warning: Output may not be in the range of integer)ExampleInput:2\r\n2 10\r\n30 35 1 100\r\n20 35 10 10\r\n3 100\r\n10 30 1000 1\r\n5 10 1000 3\r\n10 40 1000 100000Output:120\r\n200065",
  "sample_input": "Input:2\r\n2 10\r\n30 35 1 100\r\n20 35 10 10\r\n3 100\r\n10 30 1000 1\r\n5 10 1000 3\r\n10 40 1000 100000Output:120\r\n200065",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/OPCTRIP",
  "scraped_at": "2025-08-17 00:34:30",
  "test_cases": [
    {
      "input": "2\r\n2 10\r\n30 35 1 100\r\n20 35 10 10\r\n3 100\r\n10 30 1000 1\r\n5 10 1000 3\r\n10 40 1000 100000",
      "expected_output": "120\r\n200065",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5\n10\n3\n3\n7\n5",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n4",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "3\n3\n10\n9",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "13\n7166116\n34669190\n57852742\n81659551\n68701953\n27650153\n71999467\n52402614\n6242451\n13781633\n57846182\n76904910\n12395072",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "7\n86372968\n70822315\n6631751\n18450260\n76962817\n3269538\n53475152",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "7\n61343720\n97876685\n1053521\n62189533\n47944310\n53081584\n37555964",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "7\n12464551\n94835347\n32285995\n33154717\n15202723\n56158889\n50115830",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "13\n84035596\n51978557\n73775417\n26170877\n93210517\n22252298\n16844085\n51174781\n26884890\n53101124\n14625341\n90603612\n36311074",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "66\n61732\n49703\n59153\n82894\n90219\n12572\n23287\n37161\n90234\n16756\n54494\n39866\n63806\n90978\n28451\n11222\n77154\n2400\n79306\n85302\n65676\n46834\n50712\n97057\n33728\n25477\n19951\n76650\n82249\n56013\n4940\n28891\n56012\n69792\n64209\n99488\n63893\n17926\n53888\n91458\n82909\n15050\n34311\n44513\n89404\n17659\n48735\n213\n93312\n61501\n22160\n93625\n51858\n31099\n58123\n74301\n8511\n5451\n75540\n28732\n67627\n20191\n50489\n2760\n95120\n76927",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "36\n73972\n13133\n605\n34340\n84419\n46220\n77532\n62469\n62026\n90473\n11460\n15406\n10089\n79467\n22985\n64669\n48477\n45629\n94577\n82276\n51268\n61319\n94097\n32621\n89765\n23593\n1503\n38662\n23650\n29228\n4295\n57181\n41612\n17671\n88844\n94136",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "94\n47093\n91634\n84706\n54390\n83898\n68582\n91426\n54544\n58169\n97435\n69680\n37279\n42436\n55558\n13436\n76201\n12601\n27867\n46132\n67517\n19548\n94897\n65731\n30145\n27501\n2334\n38701\n7741\n45932\n16054\n59219\n79550\n68043\n1536\n62382\n58618\n16210\n82162\n84549\n7183\n14240\n9123\n90632\n6883\n48745\n31862\n98438\n41296\n50645\n95500\n59679\n97711\n64609\n8090\n82817\n86172\n59470\n46352\n33555\n49626\n35529\n67842\n77366\n44163\n20740\n50406\n95375\n29280\n75910\n37343\n38726\n65223\n60148\n57321\n32682\n50652\n65086\n24724\n63479\n67919\n74858\n47708\n80884\n16657\n94035\n35207\n57770\n63628\n4436\n71854\n16635\n92646\n5724\n3897",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "63\n9432\n54388\n40180\n65609\n92330\n67941\n82548\n11798\n45740\n32693\n54428\n24592\n80329\n65980\n21783\n80710\n48442\n80531\n22444\n7601\n58127\n95654\n6370\n61160\n99469\n17407\n82801\n14114\n11161\n93252\n57257\n46960\n39644\n30539\n42360\n26117\n67159\n71680\n63068\n73915\n96798\n49422\n15434\n69686\n75188\n56381\n50247\n22614\n78388\n25177\n13537\n1517\n44347\n52653\n89132\n17256\n64438\n77020\n96969\n34357\n51806\n7382\n97079",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "63\n33431\n56839\n74753\n40602\n7274\n55088\n59472\n55103\n84415\n82090\n87648\n79742\n68087\n17544\n48473\n77613\n81999\n82040\n68932\n19542\n89559\n27379\n36691\n63895\n57689\n43018\n85497\n42041\n57578\n2630\n56837\n1421\n41852\n28533\n70796\n19411\n71078\n61232\n92314\n18962\n11108\n37439\n7126\n57032\n62126\n57843\n33717\n69986\n25737\n19400\n56436\n56911\n87611\n28414\n51521\n73939\n45985\n42139\n68079\n56546\n80205\n58831\n1653",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "47\n90658\n1645\n18589\n49179\n24275\n44232\n95656\n91110\n76115\n88556\n46162\n18249\n18533\n54827\n11640\n52772\n68455\n9906\n6900\n70583\n42812\n41849\n48286\n4743\n22519\n7747\n25019\n94730\n52553\n6357\n42423\n16231\n92119\n84286\n64300\n8540\n69615\n31564\n48980\n62389\n37897\n43662\n91827\n3122\n87518\n25297\n89510",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "79\n35245\n40780\n93747\n60078\n77786\n59143\n61655\n3248\n38993\n86585\n83188\n98700\n6358\n87509\n74023\n61854\n15416\n72118\n81397\n93174\n33852\n38706\n75752\n52289\n10774\n53029\n25374\n52414\n43437\n47335\n79859\n5481\n33102\n88862\n74618\n48091\n77564\n12532\n54215\n70348\n56862\n80318\n50002\n58680\n26399\n13006\n2748\n9819\n55534\n87009\n55135\n39733\n69230\n88932\n24351\n40525\n45468\n84498\n25017\n21916\n74192\n45899\n96215\n83501\n47519\n75520\n25647\n50889\n30492\n34722\n86763\n29848\n40289\n339\n78052\n66302\n79875\n34650\n21015",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "105\n52880940\n86344545\n23960293\n16441079\n59143230\n95062046\n50516279\n96590348\n36120285\n57191196\n82189699\n6409929\n25639734\n43713536\n90702911\n92803770\n88411880\n87289819\n58059643\n6173046\n13365392\n37643839\n97985396\n64981263\n92122894\n60128235\n32009898\n99648443\n87848126\n63618649\n92274449\n8964101\n99602673\n31032878\n26242301\n45793162\n32659870\n76531247\n35741054\n39233247\n89082880\n58027356\n38781323\n43750789\n30042212\n74687152\n6358652\n67689166\n16404706\n17095957\n85910750\n35766004\n99321192\n52303849\n69941177\n13786142\n9224606\n57435554\n50528749\n57841835\n81899695\n34269622\n23082353\n38115401\n91897043\n97678581\n17911614\n10224387\n85211675\n46342391\n54109220\n99799380\n16498030\n45044786\n48792931\n58002169\n87438475\n85296891\n76785407\n49543841\n56741629\n23406897\n80063607\n65361725\n13780874\n13379340\n32345665\n42679887\n47557796\n23941981\n68451994\n45999411\n74563813\n28546987\n98130637\n34547694\n75425440\n78358060\n38017810\n68086285\n89716859\n1364023\n64289574\n66268503\n97490744",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "105\n64726324\n65635879\n90486700\n21762285\n45841328\n95707876\n31406618\n16067243\n34838661\n21408231\n10532060\n3294925\n55358241\n10824782\n36417154\n36314250\n19614799\n35673010\n13881409\n15638963\n6870602\n20020768\n1982377\n17254347\n60306726\n92816918\n25133911\n44235559\n73974314\n63341463\n65748162\n69263280\n61477915\n82110454\n3917667\n94427796\n3433215\n50881231\n97072336\n31975507\n57114118\n4399547\n21375921\n66873450\n14860016\n83061405\n80187086\n3972500\n72117414\n21305260\n4133318\n98791099\n40336213\n64734495\n38325919\n41746497\n51465282\n34326741\n43529878\n51341746\n92059864\n70396166\n16507744\n44308088\n11970718\n91645921\n29823140\n64171814\n37607082\n3503243\n54238748\n12534763\n64751932\n80252801\n40280559\n63182692\n52593970\n42828580\n4749216\n51021881\n58920966\n1149202\n71664174\n99000505\n78532638\n36821902\n58975640\n34217553\n94760263\n68067675\n72993550\n71494746\n53764167\n75889086\n18362751\n79413820\n70375323\n18011722\n95889744\n26264642\n82232167\n45564193\n10781087\n52199208\n5424274",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "2\n28052666\n1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 2)"
    },
    {
      "input": "105\n1\n98967798\n98261645\n1\n1\n100000000\n35616730\n1\n1\n57724492\n1\n100000000\n100000000\n29795222\n100000000\n97461525\n33543784\n1\n100000000\n1\n100000000\n1\n27065140\n100000000\n100000000\n1\n1\n1\n100000000\n1\n1\n1\n3093050\n100000000\n79126251\n100000000\n1\n100000000\n12209159\n100000000\n100000000\n100000000\n1\n1\n67694624\n1\n100000000\n100000000\n100000000\n100000000\n1\n55362153\n1\n100000000\n100000000\n1\n15253737\n97875544\n60288888\n98168916\n1\n1\n26092521\n10086389\n64367232\n3609449\n100000000\n34779752\n100000000\n1\n100000000\n100000000\n49878798\n1\n1\n1\n100000000\n100000000\n1\n78002696\n100000000\n53463769\n1\n100000000\n100000000\n1\n1\n1\n91090303\n18405386\n1\n100000000\n100000000\n100000000\n1\n99355071\n1\n100000000\n100000000\n1\n100000000\n59335217\n64436549\n67015650\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 105)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:24",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Seller Bob",
  "tags": [],
  "text": "Last year Bob earned by selling memory sticks. During each ofndays of his work one of the two following events took place:A customer came to Bob and asked to sell him a 2xMB memory stick. If Bob had such a stick, he sold it and got 2xberllars.Bob won some programming competition and got a 2xMB memory stick as a prize. Bob could choose whether to present this memory stick to one of his friends, or keep it.Bob never kept more than one memory stick, as he feared to mix up their capacities, and deceive a customer unintentionally. Now, knowing all the customers' demands and all the prizes won at programming competitions during the lastndays, Bob wants to know, how much money he could have earned, if he had acted optimally.InputThe first input line contains numbern(1 ≤n≤ 5000) — amount of Bob's working days. The followingnlines contain the description of the days. Linesell xstands for a day when a customer came to Bob to buy a 2xMB memory stick (0 ≤x≤ 2000). It's guaranteed that for eachxthere is not more than one linesell x. Linewin xstands for a day when Bob won a 2xMB memory stick (0 ≤x≤ 2000).OutputOutput the maximum possible earnings for Bob in berllars, that he would have had if he had known all the events beforehand. Don't forget, please, that Bob can't keep more than one memory stick at a time.ExampleInput:7win 10win 5win 3sell 5sell 3win 10sell 10Output:1056",
  "sample_input": "Input:7win 10win 5win 3sell 5sell 3win 10sell 10Output:1056",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/CFJUN21",
  "scraped_at": "2025-08-17 00:33:04",
  "test_cases": [
    {
      "input": "7win 10win 5win 3sell 5sell 3win 10sell 10",
      "expected_output": "1056",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "10 9 6 9 1 1 9 5\nrpdu e yrd htle s y buxh 4",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "6 3 6 8 7 5 10 10\nq xnj jmfj irsa ukeg e rywodn 7",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "10 6 3 10 5 7 9 3\ntp s zzzb viry tj ph w 9",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "31 10 38 85 37 45 87 60\ncesyw ycog kublb s x tzg uc 39",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "50 27 91 97 6 47 100 55\nw czofq jy hwrot vam bzaiu bfbvtj 25",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "15 75 40 49 37 7 19 26\nesrnm xdq bxs b kbadv xr nomno 60",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "29 95 78 79 76 1 89 9\nbxjuj wg cb hos lnlvw w id 52",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "13 51 26 8 74 88 25 38\nstkgc xy wigm zjmn vf og ywam 11",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "2320 1727 1520 1247 951 304 366 2013\nxtnno zfa d a owkn gcnzo wnabb 2492",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "1119 386 793 975 2370 2080 1925 1438\ncv idnm fzvqv pdf ytkdr lzeew d 2479",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "1876 678 504 2241 1048 299 2224 1606\nznke ni buyv zvmax imeqp isty oxzg 1600",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "2188 2041 790 1337 391 1474 643 1670\nykpcg vrco ufuq xb dxxo z wujfy 2223",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "2368 799 2071 1091 1601 1644 1843 738\ndypt mzfpn hmch hol qn xsh eydzaf 1187",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "620 2174 1012 2380 1500 2176 805 480\nqketw bhg map ex xlf fclnr wsf 1503",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "1676 1978 1950 334 1672 2236 849 1478\nnowqx abd jm pzyx px gaff me 1322",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "5000 5000 5000 5000 5000 5000 5000 5000\nrs sved qxnl zykxe fww wid mxb 5000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "5000 5000 5000 5000 5000 5000 5000 5000\nfyu pf culu vdp t cswiz ogyv 5000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 2 5000 1 5000 2 4999 5000\nxcp mk macvq ojrlg qsc ddnz q 5000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "4999 4999 4999 1 1 2 5000 1\nsvztp g yatqe ymez xehxk hsg bngkq 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:15",
  "total_test_cases": 20
}
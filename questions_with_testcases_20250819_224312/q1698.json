{
  "problem_code": "problems",
  "title": "THE INDIAN OCEAN",
  "tags": [],
  "text": "Salim is a part of THE INDIAN OCEAN BAND. Each musician of the band has already decided what sound will he play (for the sake of simplicity we assume each musician plays only one sound). We say two sounds are in harmony if the frequency of any one of them divides the frequency of the other (that's a pretty restrictive idea of harmony, but THE INDIAN OCEANS are known to be very conservative in music). Salim knows that the notes played by other players are not necessarily in harmony with each other. He wants his own note to improve the music, so he wants to choose his note so that it is in harmony with the notes all the other musicians play.Now, this sounds simple (as all the frequencies are positive integers, it would be enough for Salim to play the note with frequency 1, or, from the other side, the Least Common Multiple of all the other notes), but unfortunately Salim's instrument has only a limited range of notes available. Help Salim find out if playing a note harmonious with all others is possible.InputThe first line of the input gives the number of test cases,T.Ttest cases follow. Each test case is described by two lines. The first contains three numbers:N,LandH, denoting the number of other players, the lowest and the highest note Salim's instrument can play respectively. The second line containsNintegers denoting the frequencies of notes played by the other players.1 ≤T≤ 40.1 ≤N≤ 104.1 ≤L≤H≤ 1016.All the frequencies are no larger than 1016.OutputFor each test case, output one line containing \"Case #x: y\", where x is the case number (starting from 1) and y is either the string \"NO\" (if Salim cannot play an appropriate note), or a possible frequency. If there are multiple frequencies Salim could play, output the lowest one.ExampleInput:3\r\n3 2 100\r\n3 5 7\r\n4 8 16\r\n1 20 5 2\r\n2 5 10000000000000000\r\n9999999999999606 9999999999999822Output:Case #1: NO\r\nCase #2: 10\r\nCase #3: 6",
  "sample_input": "Input:3\r\n3 2 100\r\n3 5 7\r\n4 8 16\r\n1 20 5 2\r\n2 5 10000000000000000\r\n9999999999999606 9999999999999822Output:Case #1: NO\r\nCase #2: 10\r\nCase #3: 6",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/NITK07",
  "scraped_at": "2025-08-17 00:33:38",
  "test_cases": [
    {
      "input": "3\r\n3 2 100\r\n3 5 7\r\n4 8 16\r\n1 20 5 2\r\n2 5 10000000000000000\r\n9999999999999606 9999999999999822",
      "expected_output": "Case #1: NO\r\nCase #2: 10\r\nCase #3: 6",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4\n8\n10\n2\n5",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "2\n8\n7",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "2\n5\n6",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "7\n27975507\n93502316\n20581156\n78339606\n81395536\n1831003\n73508376",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "13\n2924812\n22188974\n4579534\n96001947\n99050017\n86934982\n62775457\n9960758\n50373937\n33542430\n46720356\n80361331\n81839031",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "14\n86632259\n83549092\n37302208\n71621369\n33278896\n99980229\n52364700\n4770817\n18166696\n95930616\n5130523\n76784061\n23267136\n39150349",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "6\n62257778\n61311545\n35774879\n88876704\n12801201\n61557633",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "19\n26953565\n68236075\n89905425\n30084079\n72887251\n33274272\n53059665\n69579246\n58962670\n21965971\n3145021\n22333840\n58995129\n42639286\n78968952\n91570060\n81538541\n35361911\n87858505",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "34\n50468\n52392\n68242\n54597\n69889\n8752\n65298\n58281\n48779\n53779\n15671\n30123\n33045\n15375\n35145\n42336\n78145\n26838\n93981\n68867\n15491\n21366\n57598\n57014\n72211\n49648\n20478\n77377\n6156\n90353\n84576\n642\n41429\n28062",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "102\n80160\n81774\n72950\n58801\n14181\n9539\n30409\n38017\n82115\n27411\n44768\n77251\n30541\n69508\n58511\n20571\n88599\n93111\n23992\n48119\n99203\n30462\n38181\n93016\n18774\n85555\n18318\n37563\n83400\n12635\n173\n10064\n73081\n12861\n90394\n86499\n2807\n26087\n83840\n63464\n45611\n1811\n77902\n80050\n10411\n94065\n10644\n67986\n90648\n7195\n82713\n7795\n92535\n56315\n83926\n72292\n39818\n79289\n25590\n26878\n64590\n65731\n99010\n84724\n8448\n77138\n21624\n6196\n511\n85338\n29579\n71567\n60110\n15294\n44425\n23164\n40647\n8105\n62105\n7949\n45390\n78096\n24290\n26046\n17803\n73092\n97905\n37237\n8133\n49025\n2010\n9402\n68050\n19726\n27706\n7186\n96824\n47690\n2202\n92722\n35745\n84138",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "92\n31018\n50288\n73187\n10185\n57017\n17660\n14376\n250\n16253\n23963\n97976\n74015\n76992\n32282\n50904\n47105\n70241\n86631\n96110\n23017\n49124\n39063\n49147\n9833\n20287\n35256\n69094\n42545\n46530\n577\n98908\n40642\n68997\n47519\n82944\n36482\n96155\n54931\n18369\n37451\n64254\n20765\n55406\n66975\n31649\n74749\n31398\n74275\n95930\n55178\n82697\n52601\n15510\n79493\n5080\n67162\n13460\n70748\n43243\n82169\n52981\n7726\n46208\n87752\n63391\n54730\n79723\n39746\n99150\n55014\n59606\n81811\n41530\n12269\n35808\n99876\n79774\n659\n48115\n20036\n67286\n77614\n10918\n97650\n1424\n3236\n3213\n74274\n69180\n78750\n50966\n96395",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "103\n42426\n20932\n45730\n71677\n60816\n80381\n28105\n13089\n22882\n80326\n96082\n53789\n41307\n72933\n23788\n15760\n53950\n65218\n68216\n51316\n41262\n43952\n59461\n71235\n62559\n9837\n40856\n46841\n74434\n58966\n85748\n37910\n20823\n14209\n65781\n59699\n43151\n24841\n39061\n81941\n86633\n51046\n85737\n76537\n55752\n11379\n67336\n5785\n30805\n81149\n37432\n55306\n67783\n13584\n54649\n74522\n45659\n16775\n87067\n7466\n55542\n73264\n56110\n79144\n9691\n83636\n25795\n31415\n52121\n60449\n94625\n20359\n29121\n23501\n52453\n8535\n6051\n41822\n11580\n80613\n47172\n54000\n59803\n53290\n56371\n52152\n6139\n20515\n75559\n33444\n23695\n2180\n69021\n51329\n80576\n47878\n47514\n18594\n17825\n67216\n90132\n77394\n31736",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "61\n20575\n86521\n41773\n10593\n50483\n1873\n26904\n59388\n25413\n85787\n66087\n46908\n94136\n51811\n11439\n48839\n95311\n33222\n76615\n46844\n54655\n57391\n11390\n79480\n68197\n86342\n309\n80299\n73828\n33521\n71774\n83076\n8221\n60511\n80036\n66138\n61154\n25178\n55251\n57727\n53119\n94877\n90461\n5752\n8773\n52173\n64482\n350\n70358\n24693\n94062\n76291\n33562\n66728\n41307\n34068\n59403\n4983\n85\n33456\n53674",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "26\n47172\n88681\n57146\n82188\n58038\n66143\n301\n87225\n93818\n47376\n70129\n18080\n92181\n96409\n86734\n44390\n9757\n5879\n33220\n29733\n75321\n11385\n46196\n21636\n60482\n52185",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "69\n9040\n70270\n16874\n42122\n61249\n99440\n19587\n16040\n47102\n73005\n68856\n58951\n19822\n24245\n47147\n37737\n4715\n52935\n20233\n39033\n83416\n38430\n79013\n96106\n66353\n67662\n24577\n7690\n94335\n18819\n75746\n25170\n52935\n18399\n32132\n8838\n801\n90989\n38704\n84615\n61374\n22130\n42510\n66601\n42812\n47280\n48572\n57077\n17568\n7198\n99478\n77108\n70673\n93171\n30993\n25808\n54707\n8589\n23777\n60562\n1198\n93325\n93516\n27796\n42853\n53596\n75595\n91889\n69419",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "104\n73926221\n66707187\n29255919\n72092680\n85845641\n18306612\n89609283\n42812465\n99330997\n60650384\n89536436\n6974268\n40859658\n64650533\n13393981\n89316997\n49810409\n50807878\n11759039\n62068434\n49388331\n10720453\n26358117\n20037704\n16757476\n31395315\n68154191\n89796776\n32597184\n79712221\n97729028\n95892252\n88230100\n79918689\n11181795\n38354212\n65558486\n64345561\n10945317\n62224297\n7663425\n61564474\n36833581\n98306806\n35787025\n51903329\n23983605\n72413857\n91309307\n46498152\n54182340\n18968473\n94662293\n9837489\n25405986\n23115490\n98974578\n60961636\n70347710\n57835917\n56421807\n15512053\n70722818\n94107931\n76032588\n97918867\n11969144\n11145044\n44476128\n19463893\n2498322\n31421408\n71667670\n94868252\n83817998\n96414268\n77820663\n9563410\n87792168\n43861984\n53634011\n8912390\n6201053\n14744394\n4013477\n30759673\n6352767\n19982160\n18470423\n57375010\n63347762\n82865184\n89044831\n8469559\n91897901\n87178940\n81912514\n48627831\n55963144\n46982557\n28581141\n60871820\n59934912\n55184557",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 104)"
    },
    {
      "input": "104\n12644387\n28626147\n43415532\n30250257\n10887057\n23961764\n11962836\n56901359\n92600751\n68613835\n9210406\n45420160\n31611342\n52608198\n7668693\n51140264\n83538409\n79682413\n77667866\n53897037\n99785297\n80731737\n90797609\n34149786\n42114843\n46092126\n31770261\n48654425\n32091430\n13201014\n13661239\n53083068\n9275254\n672766\n92977857\n66732241\n72856735\n66139976\n79786377\n76026892\n7574117\n64102261\n56195122\n76464595\n30826141\n86649734\n53031277\n75373561\n1538111\n3237844\n72741204\n32736906\n16175927\n56111934\n82133848\n43337365\n47183073\n22183021\n30124454\n84004681\n87413178\n93433079\n7213098\n30453942\n33600361\n24679204\n9269008\n41293400\n58788907\n3006633\n31004109\n22311827\n92171823\n69079956\n31884967\n28223170\n54776301\n11772451\n22171115\n82366927\n86302983\n52277777\n33283203\n39160408\n54252543\n55805488\n41920885\n45920146\n33341375\n96437950\n40364401\n98647930\n11959063\n22613604\n11100767\n52655373\n20274688\n14691172\n92405998\n68269630\n46025354\n39873682\n59038591\n8108465",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 104)"
    },
    {
      "input": "1\n40261686",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 1)"
    },
    {
      "input": "2\n25532611\n27071543",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 2)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:18",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "King Graffs Tolls",
  "tags": [],
  "text": "King Graff, the ruler of the land of Feerie, feels that he is not quite rich enough. As such, he would like to impose travel tolls on his people! After all, why should they get to walk around his kingdom for free?Feerie consists of $N$ ($1 \\leq N \\leq 10^5$) towns (numbered $1..N$), and $N-1$ roads. The $i$th road runs between distinct towns $A_i$ and $B_i$, in both directions. Every pair of towns is connected by exactly one path of connected roads. Currently, all travel is free, but King Graff is interested in charging for passage through certain towns.He is planning to have a meeting with the royal computer scientist - that would be you. The meeting will last $M$ ($1 \\leq M \\leq 10^5$) minutes, and in the $i$th minute, one of two things will occur, described by $T_i$. If $T_i=$ \"T\", Graff will proclaim that town $X_i$ shall henceforth cost $Y_i$ ($0 \\leq Y_i \\leq 10^9$) dollars to pass through, and you'll update the map accordingly. Otherwise, if $T_i=$ \"Q\", he will ask you how much a trip from town $X_i$ to a different town $Y_i$ would currently cost a commoner, in order to gauge the effectiveness of his tolls - and you had better answer quickly! Note that neither the starting nor the ending town's tolls are included in a trip's cost, as they are not passed through. Note also that a town's toll may be modified by Graff mutiple times throughout the meeting, in which case the most recent modification at any point will stand.InputFirst line: 1 integer, $N$Next $N-1$ lines: 2 integers, $A_i$ and $B_i$, for $i = 1..N-1$Next line: 1 integer, $M$Next $M$ lines: 1 character, $T_i$, and 2 integers, $X_i$ and $Y_i$, for $i = 1..M$Output$X$ lines (where $X$ is the number of questions asked by King Graff): 1 integer, the cost of the $i$th trip asked for (in dollars), for $i = 1..X$ExampleInput:41 32 34 36Q 1 4T 3 5Q 4 2Q 3 1T 3 1Q 1 2Output:0501Explanation of Sample:The map of Feerie is illustrated below:The first trip asked for by King Graff goes through towns $1 \\rightarrow 3 \\rightarrow 4$. Since town 3 has no toll at that point, the trip's cost is 0.The second trip goes through towns $4 \\rightarrow 3 \\rightarrow 2$ and has a cost of 5, due to the new toll on town 3.The third trip goes through towns $3 \\rightarrow 1$, passing through no towns and so costing nothing.The final trip goes through towns $1 \\rightarrow 3 \\rightarrow 2$ and costs only 1, as town 3's toll is reduced by then.",
  "sample_input": "Input:41 32 34 36Q 1 4T 3 5Q 4 2Q 3 1T 3 1Q 1 2Output:0501",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/GRAFFTOL",
  "scraped_at": "2025-08-17 00:33:48",
  "test_cases": [
    {
      "input": "41 32 34 36Q 1 4T 3 5Q 4 2Q 3 1T 3 1Q 1 2",
      "expected_output": "0501",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "9 6 5 10 1 2 8 6 9 2 3 9 7 5 9 2\n1 6 8 cf 4 trkuj 1 m 7 sgp 2 p 9 qajs 9 4",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "7 8 7 7 1 8 3 9 6 4 3 10 1 9 2 6\n3 1 7 uctj 2 wamgn 7 vbij 7 zn 2 n 2 a 10 1",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "7 8 5 5 3 1 6 7 4 9 2 9 1 6 9 1\n9 10 8 a 1 f 10 mgjly 9 geuy 10 n 1 ws 1 10",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "1 50 69 60 93 59 24 23 64 46 48 25 54 36 16 44\n1 28 1 f 96 dooc 98 cmvm 5 t 99 yoqp 67 hrfjn 17 17",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "48 25 29 49 90 15 40 36 49 94 72 29 26 81 1 21\n27 7 97 powq 24 rwqsi 99 xt 10 v 53 rhxhp 8 cchzv 47 65",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "69 84 90 11 7 95 65 62 34 95 96 8 79 70 58 61\n73 12 38 ze 100 fo 72 d 55 d 84 vpr 1 eiopu 9 36",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "21 41 55 10 86 21 99 40 5 43 14 39 16 16 11 91\n99 51 40 oynx 35 fsg 24 kji 58 xsxyn 4 jp 75 qm 65 48",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "74 27 42 99 22 34 38 23 34 67 39 57 13 1 73 45\n29 49 31 td 77 t 95 mtupq 52 dwi 66 anh 67 obxz 70 90",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "164 378 486 460 60 93 459 455 278 61 355 73 356 416 148 393\n275 432 444 acs 114 zp 195 rbke 90 cda 206 dty 69 omtv 76 328",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "165 134 102 273 108 174 170 294 386 188 278 149 153 292 138 121\n170 182 459 nl 99 sqd 137 hoe 247 h 64 d 491 lqoi 71 211",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "394 177 420 354 414 439 68 197 123 120 119 409 418 410 217 330\n91 326 443 ywmc 173 ujj 90 jmaqi 292 ajscn 426 mtqt 240 bn 97 285",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "291 345 357 448 90 79 301 155 120 282 202 281 500 160 332 297\n277 91 377 vtbzw 153 bepj 57 ot 185 uj 373 pvve 197 tvmgs 332 114",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "252 371 478 392 409 312 376 165 205 458 356 365 209 388 87 384\n419 256 300 zuvph 60 uvqz 457 jj 385 xo 436 wno 292 zkt 201 347",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "411 316 216 112 301 206 161 342 448 111 92 310 334 134 310 463\n159 232 371 imgsg 237 etg 371 vwb 205 quh 302 nyqi 288 hwkwd 222 352",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "118 292 217 405 416 491 332 97 155 107 448 225 90 315 227 245\n487 290 128 ajhtl 292 qdab 294 jh 52 r 373 qw 423 hj 311 419",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 gpg 1000 p 1000 wxwix 1000 d 1000 ltef 1000 blp 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 k 1000 r 1000 ld 1000 ep 1000 b 1000 qwb 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 1000 2 1 999 1 999 2 2 1 1 1 2 1000 1 2\n999 2 999 js 2 jh 1 ffpnj 999 oyrix 999 ve 999 wbn 1 999",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "999 1000 1 2 1 999 2 1000 999 1 2 1000 1 1000 1000 2\n1 1000 1000 goyz 1 jatj 1000 px 2 yp 2 xa 2 qercu 1 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:19",
  "total_test_cases": 20
}
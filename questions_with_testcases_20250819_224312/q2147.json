{
  "problem_code": "problems",
  "title": "Shell game",
  "tags": [],
  "text": "Your program is to play the traditional \"shell\" game (seeShell Game). The game is played as follows:There is a person called an operator; he/she has 3 identical, non-transparent hollow objects - shells, and a metal ball, which he/she places under one of these objects. Then, the operator quickly swaps pairs of shells several times; if shells at positions A and B are swapped, and the ball is under the shell at position A, it moves under the shell at position B. In the end, you have to guess which shell the ball is under.The shells are identical, and positions mean immediate position that you see (left will always denote the leftmost shell, not the shell that was leftmost in the beginning).InputThe first line of input contains one string - \"left\", \"center\" or \"right\", denoting the position of the shell the ball is under in the beginning. The second line contains an integer N<=10, denoting the number of swaps. N lines follow, all of them contain 2 strings - positions of 2 shells which are swapped.OutputOutput position of the shell the ball is under after all swaps are performed.WarningTesting simulates the exact progress of an actual game! There are 10 testcases; in the last one only, N = 10. You're likely to get a WA on this last test case, even if your program seems correct. Remember, it's like an actual game!ExampleInput:left\r\n2\r\nleft right\r\nright centerOutput:centerExplanationIn the beginning, the ball is under the left shell. After swap 1, it's under the right shell. After swap 2, it's under the center shell.",
  "sample_input": "Input:left\r\n2\r\nleft right\r\nright centerOutput:center",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/SHELL",
  "scraped_at": "2025-08-17 00:33:58",
  "test_cases": [
    {
      "input": "left\r\n2\r\nleft right\r\nright center",
      "expected_output": "center",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "uj\n7\nex oi\nytolw ercjac",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "uvjkci\n8\nmwlh q\nb u",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "vmelphk\n3\nieon vkuic\nh vmqdxn",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "vy\n1\nrnye ldb\nvy yraa",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "p\n5\na ut\nxinr eztk",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "o\n3\nry sdvy\nlb m",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "wzagmh\n7\nm imvhk\nlzhqm lnabq",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "erg\n6\nxh rdqs\nea owep",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "op\n4\no gxel\nwzj oidci",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "qxyywi\n1\nktv w\nl bmj",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "ptz\n4\npimzp nagp\niwfa wfey",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "jn\n4\nggiwz rac\nfydec kij",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "uglngbtf\n1\nklub jvnf\nuwpm jytws",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "wwxdj\n4\nvhpdq qisr\nzv wb",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "hehcp\n1\nshi jay\nafzxj gr",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "kzpr\n10\nrv pk\nfhddu k",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "fadyn\n10\npg qd\namx teo",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "kbvh\n9\nbfeg h\nipn gnrn",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "zst\n10\nr qwgb\nladww xlljck",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:19",
  "total_test_cases": 20
}
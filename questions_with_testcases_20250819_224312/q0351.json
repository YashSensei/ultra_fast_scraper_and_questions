{
  "problem_code": "problems",
  "title": "Sleepwalker",
  "tags": [],
  "text": "There is a building with flat square roof of size3k*3kand sides parallel to north-south and east-west directions. The\r\nroof is covered with square tiles of size1(with a side of length 1), but one of the tiles has been\r\nremoved and there is a hole in the roof (big enough to fall in). The tiles form a\r\nrectangular mesh on the roof, so their positions may be specified with\r\ncoordinates. The tile at the southwestern corner has coordinates (1,1). The\r\nfirst coordinate increases while going eastwards, and the second while going\r\nnorthwards.Sleepwalker wanders across the roof, in each step moving from the tile he is\r\nstanding on to the adjacent one on the east(E), west(W), south(S), or \r\nnorth(N). The\r\nsleepwalker roof ramble starts from the southwestern corner tile. The\r\ndescription of the path is a word dkbuilt of the lettersN, S, E, Wdenoting respectively a step to the north, south, east and west. Fork = 1the word describing the path of sleepwalker isd1=EENNWSWNFork = 2the word describing the path of sleepwalker isd2=NNEESWSEENNEESWSEEEENNWSWNNEENNWSW -NNEENNWSWNWWWSSENESSSSWWNENWWSSW  -WNENWNEENNWSWN.(See the picture that shows how the sleepwalker would go across a roof of\r\ndimension3*3or9*9.) Generally, ifk>=1, the description of\r\na sleepwalker's path on the roof of dimension3k+1*3k+1is a word:dk+1=  a(dk) E a(dk) E dkN dkN dkW c(dk) S\r\nb(dk) W b(dk) N dkwhere functionsa,bandcdenote the following permutations of letters specifying directions:a: E->N W->S N->E S->W \r\nb: E->S W->N N->W S->E \r\nc: E->W W->E N->S S->NE.g. a(SEN)=WNE, b(SEN)=ESW, c(SEN)=NWS.We start observing sleepwalker at the time he stands on the tile of coordinates\r\n(u1, u2). After how many steps will sleepwalker fall into the hole made\r\nafter removing the tile of coordinates (v1, v2)?ExampleThere are sleepwalker's paths on roofs of dimension3*3and9*9on the\r\npicture below. In the second case, the point at which the observation starts and the hole have\r\nbeen marked. The sleepwalker has exactly20steps to the hole (from the\r\nmoment the observation starts).TaskWrite a program which:reads from the standard input integerkdenoting the size of the roof (3k*3k),\r\n  the position of the sleepwalker at the moment the observation starts and the position\r\n  of the hole,computes the number of steps that the sleepwalker will make before he falls into the\r\n  hole,writes the result to the standard output.InputThe number of test cases t is in the first line of input, then t test cases follow separated by an empty line.\r\nIn the first line of each test case one integerk,1<=k<=60, denoting the size of the roof (3k*3k) is written. In\r\neach of the following two lines of the test case  two natural\r\nnumbersx, yseparated with a space are written,1<=x<=3^k,1<=y<=3^k. The\r\nnumbers in the second line are the coordinates of the tile the sleepwalker is\r\nstanding on. The numbers in the third line are the coordinates of the hole. You\r\nmay assume, that with these data the sleepwalker will eventually fall into the hole\r\nafter some number of steps.OutputThe only line of output for each test case should contain the number of steps on\r\nthe sleepwalker's path to the hole.ExampleSample input:1\r\n2\r\n3 2\r\n7 2Sample output20",
  "sample_input": "a: E->N W->S N->E S->W \r\nb: E->S W->N N->W S->E \r\nc: E->W W->E N->S S->N",
  "sample_output": "Sample input:1\r\n2\r\n3 2\r\n7 2Sample output20",
  "link": "https://www.spoj.com/problems/SLEEP",
  "scraped_at": "2025-08-17 00:33:05",
  "test_cases": [
    {
      "input": "a: E->N W->S N->E S->W \r\nb: E->S W->N N->W S->E \r\nc: E->W W->E N->S S->N",
      "expected_output": "Sample input:1\r\n2\r\n3 2\r\n7 2Sample output20",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "ncep ud gndny f og\nle nh naocx ulqe gluaf\nk ih kghs gw hkyz",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "eyc bam a brwi fpgo\ndzr fvl lrvxj gqfjq kv\ntzpcc qkiw w iepk yu",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "j rppsb dak ag l\nnn qd efjn jz d\nrrn oipey smfwi vi o",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "gdb wh wr iinzt xm\nqvxj dryi m gvym wla\nvxifu wkhup x qrh ozcyj",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "egjid ovldk j naa bnuh\ndpdg qjxjq drczx hf d\ngxzb xmm qzgnx akpp irrw",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "piyh x i nv cyg\nn peua tdhsm dda gxiko\npze cpsg irqjx adfzz t",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "fg u hfld wieh ddo\njxyp bgj mmkl fzqme hqwzp\noymt lcs ddrkh y iwisl",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "glzl d cy ijf oelaj\nqxl e mzpbz l fvh\nkt na ey d d",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "qjn rvtx aoct mo jv\nrrxy hnfa wqbd aw kz\nvp meba adakz rzbc b",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "bbtf hn k xea qd\nqg xi t y bgw\njxrdq nep knh nku ylf",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "y v axgm ckazs bc\ncdxzl raim ocu s b\nyi szet t d luoo",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "gmcbv akpf nhs e b\nl qisi j w ufxd\nfstj spc g t dvhw",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "zf jq yxw o g\nt mw v haf m\ngpb irihh aalja ujaum nbwic",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "l oug vbrd kfo mxu\nv iux uda pwp imkr\nwfzza ftvar ulyh o ivt",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "j scv my yyt ljohu\ncburf yylzo fhwwr begjw rzhje\nf gz r sch ug",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "feouu b hruu tsotm ulm\nc ewd o ckptc iwxk\nno j pjjh rkt zw",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "l wiao wlv qzowa e\nhwy wbjdi ilrbj kcrvm onlhz\nl jwzj wu oynhh ueby",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "zra dmsdx olc xpp as\nc dpy jsty zuf j\njpzug bfqfk nj kxvuv t",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "hd h ag rcabq hemk\nvsr ssta rgu t eom\nqevm a rutj ayno d",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:13",
  "total_test_cases": 20
}
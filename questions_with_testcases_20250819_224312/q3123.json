{
  "problem_code": "problems",
  "title": "Billiard",
  "tags": [],
  "text": "In a billiard table with horizontal sideainches and vertical sidebinches, a ball is launched from the middle of the table. Afters> 0 seconds the ball returns to the point from which it was launched, after having madembounces off the vertical sides andnbounces off the horizontal sides of the table. Find the launching angleA(measured from the horizontal), which will be between 0 and 90 degrees inclusive, and the initial velocity of the ball.Assume that the collisions with a side are elastic (no energy loss), and thus the velocity component of the ball parallel to each side remains unchanged. Also, assume the ball has a radius of zero. Remember that, unlike pool tables, billiard tables have no pockets.InputInput consists of a sequence of lines, each containing five nonnegative integers separated by whitespace. The five numbers are:a,b,s,m, andn, respectively. All numbers are positive integers not greater than 10000.Input is terminated by a line containing five zeroes.OutputFor each input line except the last, output a line containing two real numbers (accurate to two decimal places) separated by a single space. The first number is the measure of the angleAin degrees and the second is the velocity of the ball measured in inches per second, according to the description above.ExampleInput:100 100 1 1 1\r\n200 100 5 3 4\r\n201 132 48 1900 156\r\n0 0 0 0 0Output:45.00 141.42\r\n33.69 144.22\r\n3.09 7967.81",
  "sample_input": "Input:100 100 1 1 1\r\n200 100 5 3 4\r\n201 132 48 1900 156\r\n0 0 0 0 0Output:45.00 141.42\r\n33.69 144.22\r\n3.09 7967.81",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/BILLIARD",
  "scraped_at": "2025-08-17 00:34:11",
  "test_cases": [
    {
      "input": "100 100 1 1 1\r\n200 100 5 3 4\r\n201 132 48 1900 156\r\n0 0 0 0 0",
      "expected_output": "45.00 141.42\r\n33.69 144.22\r\n3.09 7967.81",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "9 3 6 4 6\n1 2 6 7 6\n4 7 4 10 8\n3 7 10 2 9",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "3 9 4 10 2\n4 4 10 6 4\n5 4 8 1 1\n10 1 6 10 3",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "7 1 3 7 8\n1 9 6 2 8\n9 1 1 8 4\n10 6 3 10 6",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "6 52 32 47 29\n90 65 49 87 93\n10 18 25 42 9\n51 71 54 78 1",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "11 41 15 90 80\n35 12 8 13 85\n27 11 35 66 83\n42 10 51 46 58",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "67 27 64 17 85\n8 80 69 79 39\n42 86 73 21 33\n71 13 23 31 97",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "73 88 57 30 2\n2 59 76 45 5\n12 36 88 8 97\n73 58 8 96 13",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "81 43 8 61 71\n47 55 80 63 99\n64 64 62 82 17\n53 4 2 36 77",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "483 340 149 490 128\n187 116 210 218 391\n186 308 254 176 394\n333 412 388 200 55",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "324 496 263 220 499\n301 302 449 102 216\n442 183 333 213 203\n115 423 342 389 336",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "472 361 358 450 329\n175 369 78 343 332\n282 321 140 367 474\n98 448 389 335 367",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "288 123 315 100 309\n188 243 433 141 241\n139 436 351 440 327\n296 394 185 441 452",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "210 193 391 362 438\n325 433 356 421 493\n213 295 317 102 189\n110 217 386 311 349",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "489 399 349 254 245\n403 183 294 480 210\n71 431 451 175 122\n445 253 276 251 121",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "267 70 488 153 475\n111 107 159 331 144\n478 197 444 254 398\n229 113 193 443 249",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 1 1000 2 2\n1 1000 2 2 2\n1000 999 1000 2 1\n1000 2 999 2 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1000 1000 999 2 1000\n999 999 1 2 1\n1 1 2 1 1\n999 1 1000 1 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:22",
  "total_test_cases": 20
}
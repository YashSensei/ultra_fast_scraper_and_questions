{
  "problem_code": "problems",
  "title": "Game on board",
  "tags": [],
  "text": "EnglishVietnameseTwo players, A and B, play a game on a square board of size n×n. The squares of the board are either white or black. The game is played only on the white squares — the black ones are excluded from the game. Each player has\none piece, initially placed at this player’s starting point — one of the white squares on the board. The starting point of A is different than that of B.In each move a player moves his piece to one of the neighboring white squares (either up, down, left or right). If the player moves his piece to the\nsquare currently occupied by his opponent’s piece, he gets an extra move (this way he jumps over the opponent). Note that in this case the direction of the second move can be different than that of the first move.Player A moves first, then players alternate. The goal of the game is to reach the opponent’s starting point. The player whose piece reaches his opponent’s starting point first, wins the game. Even if the player’s last move consists of two jumps, and he only jumps over his opponent’s starting point (since it is occupied by his opponent), the player wins. We want to determine which player has a winning strategy (a player has a winning  trategy if he can win regardless of his opponent’s moves).TaskWrite a program, that:reads the layout of the grid and the starting points of the two players from the standard input,finds the player who has a winning strategy,writes the result to the standard output.InputThe first line of the standard input contains one integer t the number of test cases (1 ≤ t ≤ 10). After it the description of t tests appears. Each test is described as follows. In the first line of the test there is one integer n (2 ≤ n ≤ 300), the length of the side of the grid. Then next n lines contain the description of the grid. Each line consists of n characters (with no whitespaces between them). Each character is either ’.’ a white square), ’#’ (a black square), ’A’ (the starting point of A) or ’B’ (the starting point of B).You may assume that there exists a path of white squares between the starting points of A and B.OutputFor each test case exactly one line should be printed to standard output containing a single character ’A’ or ’B’, indicating the player who has a winning strategy.ExampleInput:2\n4\nA...\n.#..\n....\n...B\n4\nA...\n....\n..#.\n...BOutput:B\nA",
  "sample_input": "Input:2\n4\nA...\n.#..\n....\n...B\n4\nA...\n....\n..#.\n...BOutput:B\nA",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/BGAME",
  "scraped_at": "2025-08-17 00:33:03",
  "test_cases": [
    {
      "input": "2\n4\nA...\n.#..\n....\n...B\n4\nA...\n....\n..#.\n...B",
      "expected_output": "B\nA",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1\n7",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "2\n9\n4",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "4\n7\n5\n5\n8",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "9\n45031349\n52276438\n57804174\n62799686\n1843762\n49050591\n56144268\n98726984\n23187955",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "10\n84972484\n66827024\n68437388\n95428924\n71162700\n85707409\n22516473\n27567601\n5996430\n49546919",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "18\n15621961\n79960442\n99600678\n30867855\n89518383\n52891475\n58319636\n42473380\n54254211\n4399353\n97672265\n40471466\n84431052\n30426897\n66895228\n36341660\n33767341\n63482118",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "17\n46363802\n62697994\n9604020\n32944013\n64594110\n23294100\n45111979\n96061566\n52737823\n96301731\n62457709\n89335793\n96637435\n8893942\n51156746\n99601120\n99981037",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "7\n41015633\n28291169\n97582364\n8015057\n43552131\n16916358\n18287730",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "277\n15105\n3425\n44813\n12091\n96329\n99254\n2270\n23779\n98782\n95639\n94261\n32998\n60386\n63994\n90232\n80267\n12104\n23834\n35518\n29653\n47024\n80755\n7173\n25892\n37632\n26005\n98040\n1067\n88069\n26375\n75465\n81012\n58992\n92603\n99071\n42433\n48105\n36494\n79732\n62064\n22485\n76573\n42221\n15040\n35145\n47297\n81356\n20770\n60674\n83233\n35808\n10897\n81231\n17399\n64246\n54152\n66540\n3745\n31818\n89507\n23816\n15996\n22686\n74118\n21740\n85901\n88229\n26553\n40822\n81799\n83863\n108\n95017\n37932\n58543\n89165\n99396\n71582\n33653\n54490\n61509\n45322\n98831\n34205\n73823\n80384\n81076\n71758\n95096\n46599\n2120\n20996\n87436\n86776\n2545\n44477\n18379\n95405\n48385\n49489\n23350\n91347\n28668\n23039\n34024\n6558\n89304\n68484\n12763\n2536\n41150\n74196\n57736\n67017\n95260\n53158\n79616\n3641\n6802\n24057\n92804\n61615\n22186\n60252\n52576\n65672\n73332\n45741\n82595\n71813\n53369\n3874\n33530\n64933\n67536\n76942\n11676\n45343\n64437\n88491\n57370\n29840\n55568\n1543\n88834\n90813\n23613\n42258\n6320\n15891\n73255\n17327\n22153\n61471\n76070\n99755\n60397\n98585\n98762\n31495\n20699\n25051\n30026\n1536\n35510\n58178\n44010\n26921\n26423\n79070\n31494\n35258\n1949\n83578\n42831\n60477\n50313\n97561\n54244\n22304\n20978\n44531\n67635\n82853\n23329\n68794\n72577\n45128\n82498\n16869\n93457\n55110\n62430\n97405\n10334\n36811\n57649\n42344\n29633\n69588\n47553\n97568\n53961\n33409\n64306\n44904\n64468\n14565\n95736\n95431\n92866\n18568\n73108\n81288\n82083\n93131\n98912\n8704\n90132\n83946\n86754\n89511\n37775\n77231\n22024\n70803\n15354\n60470\n86105\n87771\n3132\n3201\n77477\n7865\n14137\n805\n92828\n92138\n54522\n30538\n4957\n55003\n54558\n15808\n7389\n23177\n93773\n89282\n2939\n34524\n63184\n55802\n37292\n24367\n11746\n24230\n41368\n86429\n62458\n35779\n25222\n73007\n73614\n41206\n66472\n52842\n18047\n68626\n45401\n3819\n41134\n36487\n64839\n54200\n92428\n17372\n70513",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "46\n13129\n81353\n89433\n79577\n22358\n57098\n70251\n11361\n2565\n19538\n87275\n58728\n29466\n85682\n8047\n37832\n70706\n10152\n2845\n63811\n20214\n39168\n89214\n86593\n68078\n54749\n35284\n1244\n65285\n34758\n60286\n57395\n6967\n34529\n91352\n76933\n41584\n36039\n38095\n3387\n87647\n97962\n16742\n8873\n27974\n8945",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "153\n73869\n13348\n16500\n87290\n91804\n465\n45929\n24784\n67024\n52153\n86971\n26344\n29682\n75267\n50003\n6937\n26455\n70586\n80701\n28945\n12453\n4700\n94396\n30070\n56990\n61978\n31059\n11114\n17284\n49873\n68380\n55780\n50194\n79989\n74872\n41490\n15510\n88918\n71946\n96390\n97021\n48218\n21055\n84159\n61023\n88430\n75227\n32456\n82440\n27551\n26386\n70098\n58310\n77316\n23528\n70800\n21526\n4508\n85053\n4517\n15550\n99867\n46892\n67821\n79463\n22061\n79361\n7275\n37698\n79999\n66590\n44813\n94782\n55351\n18276\n87745\n77006\n45963\n29565\n85736\n80113\n50268\n81889\n52335\n73510\n49880\n69515\n25501\n34997\n65882\n74748\n84874\n41379\n31720\n8376\n67810\n65185\n80853\n84390\n54367\n89165\n76903\n47145\n49301\n91913\n18786\n79175\n79624\n49196\n30099\n92447\n24037\n76534\n46178\n94205\n54535\n36435\n83128\n747\n55716\n6976\n24162\n39350\n76049\n95494\n35049\n81891\n52643\n75782\n12492\n78905\n17942\n2854\n52487\n15119\n24175\n9684\n76765\n81600\n2898\n34835\n36372\n70183\n43207\n41551\n12083\n19596\n37320\n77853\n57302\n65584\n7426\n83838",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "74\n40718\n55881\n35902\n59187\n8618\n48910\n37671\n26072\n6453\n21195\n87107\n95836\n18091\n49771\n4647\n5570\n51024\n82034\n80655\n18084\n42146\n48164\n2625\n36056\n7527\n95755\n89818\n2265\n41380\n52513\n38021\n82637\n37798\n83235\n827\n97396\n73241\n14847\n66441\n82138\n79503\n31153\n1413\n57882\n33812\n23448\n77368\n56924\n53206\n75544\n37612\n87248\n80483\n65745\n62531\n73506\n97825\n59465\n99848\n67496\n13295\n47870\n59931\n7120\n87579\n85336\n94303\n64916\n28716\n79912\n77644\n14175\n42976\n10244",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "202\n51735\n4211\n94048\n59196\n99476\n44284\n36110\n13188\n67161\n44918\n37967\n2937\n80518\n59425\n69560\n57568\n94408\n4286\n68689\n28674\n83557\n59785\n97066\n66606\n35626\n96984\n26922\n592\n60090\n9215\n91994\n3570\n38438\n94929\n44413\n2607\n9569\n66805\n20716\n35131\n97344\n40743\n13145\n8602\n56534\n71866\n89637\n48788\n9390\n32287\n69310\n86436\n63635\n39934\n89363\n67363\n58001\n13056\n35317\n2359\n37933\n90778\n19889\n30603\n7979\n71610\n29096\n11720\n15361\n75440\n50410\n95286\n77618\n52491\n71906\n45694\n52760\n31918\n86996\n21156\n98553\n50865\n81186\n72267\n14371\n17622\n48335\n61499\n86077\n10090\n76066\n94701\n78107\n64311\n41375\n82687\n80488\n35741\n54402\n4456\n53762\n49867\n83606\n76936\n57162\n30422\n39808\n88435\n18951\n53169\n38958\n20513\n4525\n32456\n82560\n78723\n8046\n17107\n43165\n40903\n82710\n46718\n71188\n4526\n1284\n64850\n98184\n15746\n82293\n42655\n12136\n82565\n23130\n36082\n93016\n78380\n61389\n96269\n25969\n12072\n8533\n6301\n4921\n44196\n4399\n28811\n88915\n9163\n95288\n99916\n47440\n84791\n25734\n29847\n91433\n19481\n72878\n5204\n43641\n42496\n80627\n40691\n65596\n17000\n42956\n14624\n22445\n68473\n70334\n2867\n53885\n12800\n60549\n73151\n59911\n2327\n21593\n77067\n33264\n40257\n59460\n46916\n20531\n89231\n20682\n86979\n36878\n88082\n73963\n8275\n90395\n89131\n99087\n60019\n51549\n34641\n8230\n22305\n89251\n30016\n32644\n92249",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "109\n43961\n17296\n94201\n87341\n82202\n2119\n38128\n24277\n34167\n80457\n35263\n53068\n7885\n79255\n84793\n2753\n156\n8151\n26665\n10405\n12297\n56973\n47386\n57393\n71423\n3068\n32815\n15103\n8221\n90471\n31051\n87736\n25955\n91483\n37894\n23972\n22597\n13384\n41690\n27594\n72858\n15320\n48817\n66890\n48761\n16449\n51234\n51145\n87970\n46158\n78221\n11200\n66928\n9766\n12209\n6431\n69167\n58784\n7880\n53464\n38437\n36554\n1954\n174\n2302\n11855\n37515\n91790\n40376\n33274\n22647\n37657\n81034\n26169\n91800\n4355\n59398\n95935\n35220\n64484\n54874\n19692\n21465\n24600\n64247\n16259\n95403\n14570\n37756\n3715\n69356\n28066\n4282\n95446\n22297\n21028\n57780\n48576\n20858\n81688\n40564\n23732\n73280\n89234\n88007\n76112\n56260\n71169\n98564",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "28\n94076\n24473\n56652\n58547\n17121\n52239\n93343\n17498\n88916\n37562\n44350\n86571\n35580\n71163\n19626\n6257\n95840\n30407\n56179\n42778\n2772\n33416\n89180\n83701\n67569\n84637\n76140\n75168",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "300\n43278392\n72044119\n38374716\n23669781\n75509453\n57309749\n73688692\n26606923\n28294668\n87059308\n99944692\n31976865\n97521904\n8109898\n9536008\n17797866\n75071645\n2443296\n60913978\n26096180\n86287628\n10216016\n2624031\n5868602\n65678621\n33655610\n92955275\n8855578\n76100145\n60357943\n94258975\n89225520\n14003658\n56282670\n28534350\n60512475\n9055454\n33957656\n65954619\n90114472\n4191043\n90088614\n451483\n15745615\n76622861\n27638356\n83423016\n65323609\n47818965\n52919618\n18595925\n96621936\n25853092\n10843047\n77131825\n21243532\n35620081\n539397\n49484308\n31006760\n67548145\n74378074\n11590373\n27458951\n22378162\n21514211\n37681120\n39275523\n65740012\n24950824\n23725214\n77841437\n25663533\n29077790\n34247537\n42529504\n21039775\n26057666\n12082182\n54134212\n76509339\n82096606\n27367871\n4851963\n23834139\n70510216\n94440071\n19999176\n99011548\n44097769\n28518231\n26102108\n96626716\n159437\n31241065\n93156190\n800745\n21811575\n61118192\n34695694\n83083078\n17159209\n51298953\n82162688\n6810204\n9120117\n14433475\n51809149\n8760577\n16379126\n72335184\n36752241\n46175778\n30969754\n98423486\n21890478\n48541198\n86480015\n8763613\n14404812\n4124719\n67269634\n38355583\n25686807\n52507850\n86058606\n26935892\n62188655\n27228332\n24742442\n46597960\n16086329\n37608862\n2261279\n95739012\n35157558\n77879882\n76055794\n76427176\n76120186\n20586344\n48688361\n84940587\n15739\n24374535\n55287781\n18380981\n77074450\n57235316\n14062904\n97354029\n25333212\n89615127\n83330885\n47732745\n91208952\n70648915\n65000629\n8838745\n91337551\n6914063\n51436220\n50146129\n10292470\n19281424\n81146398\n84542426\n59327362\n11112060\n11526228\n50970651\n20314598\n52331887\n43352033\n32809719\n6904394\n79002936\n62722954\n881838\n89761336\n26448283\n23818497\n78495685\n6646895\n22455406\n57427691\n39448502\n64762881\n56576861\n93092082\n73847693\n43686836\n39602809\n21737474\n66641274\n97707056\n91519138\n92310992\n86039561\n60918072\n90161746\n56497735\n24162200\n12758675\n39841977\n3413445\n15712698\n36340359\n64374037\n83069591\n23526977\n34565421\n51408864\n54624101\n22996830\n18096601\n22778837\n83056014\n10940658\n21387208\n6712544\n2997705\n73076997\n25004994\n51802023\n70087178\n78101918\n83027520\n50469961\n73802079\n86801032\n31933188\n84100851\n53774691\n49587152\n56185596\n48953011\n80663949\n42952749\n45428284\n51532753\n75260923\n70446256\n99971923\n94032494\n67972287\n91106637\n14371884\n31092334\n23284818\n4936857\n66575720\n13827757\n16143161\n68399755\n21029188\n77632292\n57098478\n96414078\n30863430\n12506769\n13328260\n30383638\n43483288\n14867093\n32121217\n4871166\n55921308\n44346796\n48658158\n69078702\n3546320\n12795358\n45970780\n30419205\n35831912\n19810697\n37185567\n5381057\n34041687\n53333810\n3478577\n72700309\n61694932\n98941164\n17076589\n87238512\n20388672\n56571102\n21340121\n29411903\n37221802\n27126939\n57533131\n47534597\n45057400\n40178907\n46195637\n52886912\n72081190",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 300)"
    },
    {
      "input": "300\n50468620\n78944072\n51015885\n85723478\n18567162\n36623419\n31772163\n92733184\n24683426\n70603028\n8881988\n7290001\n76699043\n608197\n65812517\n92886162\n97116887\n64591937\n11457875\n42624029\n52967407\n17124914\n48430342\n15987584\n10298825\n80610916\n8087110\n48028222\n86473064\n40740734\n726352\n74637868\n24570818\n31282396\n32649623\n39140015\n90368689\n49857875\n47548535\n87697145\n72528513\n33936140\n22648897\n89195693\n46628944\n31798404\n52821172\n71746741\n99111860\n3289468\n16594617\n3616733\n75249467\n81355293\n27950552\n39052990\n22427247\n13334872\n4607599\n1180227\n95425240\n55169997\n79663340\n86986836\n10326588\n52150430\n4017146\n62900322\n76601517\n4464303\n19251500\n96269533\n135602\n97241270\n55760499\n78704893\n19180700\n8282840\n82117400\n20614849\n62961739\n24322445\n11789548\n8763921\n93736150\n8789540\n98087675\n69485296\n80090163\n72562669\n66850015\n4024517\n16513229\n96790898\n81300181\n9253793\n44714992\n37883570\n41643623\n43783569\n60991250\n85538372\n23828591\n29498303\n34088880\n84482074\n15745943\n49093572\n38179940\n61265825\n26056965\n17653484\n37411135\n83281182\n81701830\n74231680\n7704872\n94381198\n34700542\n31190950\n82831814\n59536894\n21647178\n93742566\n30918772\n15305565\n38433359\n26137946\n8967820\n58543959\n63998404\n13042284\n38671858\n46487821\n25727549\n17613993\n62949410\n47704223\n20557418\n83907454\n3859166\n51555466\n35625562\n41436858\n38199076\n95024735\n50409564\n67423412\n38058005\n87329591\n95821572\n38300553\n34359555\n90020397\n38083142\n30465596\n19606182\n2927739\n42269740\n9596007\n8187335\n11739749\n52710571\n82575222\n77684320\n34025162\n44652504\n58806722\n25365736\n16253588\n94551751\n29756819\n46814239\n47560961\n83987815\n65971994\n74550804\n22171340\n86400081\n9809086\n52131299\n57018250\n23600370\n55326980\n94773880\n82962965\n18257065\n61603120\n77925232\n97390879\n9253127\n40100349\n95382941\n92045611\n60968480\n15306549\n46000254\n50632698\n19612957\n14405513\n39222269\n57565177\n78315570\n20470380\n62937887\n54672749\n75568053\n19539908\n64547861\n10355627\n23961559\n17120048\n56901856\n99592558\n44882948\n41706507\n39815563\n64109064\n85022781\n84369066\n57719556\n35351703\n65300305\n91982642\n79721043\n82137614\n14132918\n91914153\n77301262\n42234798\n26970059\n89111755\n60167477\n35801570\n30418510\n65372753\n11112985\n52804562\n92698022\n99080778\n86429110\n18246683\n80948672\n20870086\n56311403\n7701321\n84806882\n78246807\n78421594\n87665759\n53002576\n24265504\n55462946\n96878997\n94704539\n14747091\n41494379\n98774301\n77807945\n66977876\n90178130\n55892665\n17461335\n79632505\n75520496\n29772464\n46504675\n55491409\n38709518\n24551704\n5550646\n24532129\n5840966\n21368150\n26171423\n67617140\n47202320\n77792349\n61980632\n13163430\n37212667\n36172485\n20378794\n2232255\n55019308\n66308075\n95653934\n35209033\n24576622\n41093279\n50311177\n99436518\n4057551\n18447247\n91791159\n10322461\n67894815\n53443375\n25467537\n19500954",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 300)"
    },
    {
      "input": "300\n100000000\n1\n100000000\n1\n100000000\n100000000\n1\n1\n100000000\n100000000\n49463050\n1\n100000000\n13013576\n100000000\n71468254\n74497510\n86747711\n96150353\n77380662\n76919137\n1\n76126095\n56820130\n100000000\n1\n1\n100000000\n100000000\n1\n100000000\n19646796\n1\n1\n1\n100000000\n100000000\n448884\n1\n61847222\n18441175\n1\n100000000\n9939306\n96514309\n9077392\n100000000\n1\n100000000\n23387888\n1\n100000000\n6165990\n100000000\n100000000\n1\n35335951\n100000000\n100000000\n1\n100000000\n1\n22454846\n100000000\n1\n1\n100000000\n100000000\n28229211\n1\n100000000\n1\n100000000\n100000000\n22998321\n1\n1\n74264896\n76230028\n1\n100000000\n57635731\n79236531\n1\n68362726\n1\n32715242\n1\n100000000\n100000000\n50945316\n100000000\n1\n71608954\n20807785\n1\n1\n100000000\n100000000\n100000000\n100000000\n1\n1\n1\n100000000\n40602641\n78361806\n100000000\n100000000\n95859693\n99719446\n1\n100000000\n1\n1\n1\n88670935\n1\n1\n100000000\n100000000\n100000000\n36198317\n44588089\n46278073\n100000000\n1\n100000000\n100000000\n100000000\n36216439\n52816158\n58746106\n1\n100000000\n30883758\n12028930\n1\n97122924\n37357579\n100000000\n77887962\n1\n96560147\n1\n39577185\n1\n100000000\n1\n1\n100000000\n100000000\n70176305\n3839501\n81315616\n22031102\n100000000\n62784133\n99772123\n100000000\n3178010\n1\n1\n100000000\n77041591\n100000000\n1\n100000000\n4108853\n97471413\n1\n100000000\n100000000\n4443731\n100000000\n1\n100000000\n2854059\n1\n21032696\n100000000\n4319475\n8273575\n1\n100000000\n1\n100000000\n1\n100000000\n1\n4136182\n1\n1\n34974211\n1\n23641150\n100000000\n56613607\n96919932\n100000000\n100000000\n49780510\n100000000\n20630234\n1\n100000000\n95341638\n100000000\n100000000\n100000000\n100000000\n44018941\n100000000\n1\n1\n1\n69503816\n1\n1\n85869414\n1\n66395869\n1\n1\n59853471\n100000000\n12261519\n100000000\n97945315\n1\n100000000\n1\n36579284\n100000000\n1\n1\n100000000\n36829549\n1\n1\n100000000\n1\n1\n46480523\n1\n1\n20093851\n1\n1\n77567645\n1\n100000000\n100000000\n1\n1\n1\n1\n60891012\n100000000\n1\n1\n100000000\n100000000\n100000000\n100000000\n1\n1\n1\n1\n1\n36871078\n1\n1\n1\n1\n100000000\n18108416\n1\n100000000\n100000000\n51519892\n1\n1\n1\n8588111\n1\n1\n93116863\n100000000\n98386467\n24108560\n100000000\n1\n100000000\n100000000\n1\n1\n100000000\n100000000\n1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 300)"
    },
    {
      "input": "300\n1\n68506088\n1459369\n1\n37588520\n100000000\n100000000\n1\n1\n1\n1\n84930087\n100000000\n100000000\n30062904\n1\n100000000\n25219401\n91021905\n7309865\n1\n73130053\n1\n7258241\n1\n86056734\n1\n100000000\n1\n1\n1\n72926240\n1\n1\n100000000\n100000000\n1\n28001137\n25876479\n1\n95440553\n1\n100000000\n74562725\n100000000\n1\n100000000\n30058420\n1\n70344005\n100000000\n29517411\n1\n1\n1\n100000000\n1\n36983860\n15365121\n66523407\n6362386\n100000000\n1\n100000000\n100000000\n1\n61931172\n100000000\n1\n100000000\n25197046\n1\n1\n10936892\n100000000\n1\n1\n44375029\n1\n5380784\n49104927\n72212501\n1\n100000000\n1\n100000000\n71281361\n19900550\n1\n1\n90885858\n1\n1\n100000000\n1\n100000000\n100000000\n66770352\n100000000\n100000000\n100000000\n100000000\n1\n24429794\n100000000\n1\n45475167\n41383021\n76649082\n100000000\n100000000\n95776835\n100000000\n1\n1\n94055079\n100000000\n21133786\n1\n1\n28705549\n34875105\n84400312\n1\n6412280\n100000000\n66434254\n1920782\n15315555\n19427615\n100000000\n1\n41854596\n24287380\n100000000\n45919960\n73766503\n8526852\n10343465\n19231263\n100000000\n100000000\n76629346\n100000000\n100000000\n15337948\n1\n1\n67783769\n100000000\n83192149\n91749860\n100000000\n100000000\n83445167\n1\n1\n93378504\n1\n1\n1\n100000000\n1\n22171908\n1\n100000000\n100000000\n34350625\n35539083\n100000000\n95459986\n100000000\n20665653\n36697240\n100000000\n55183765\n1\n100000000\n77292422\n1\n1\n100000000\n1\n37302221\n1\n100000000\n22425750\n18108114\n100000000\n100000000\n25800058\n100000000\n62033279\n100000000\n91229779\n100000000\n1\n93337835\n58640088\n100000000\n1\n74256943\n58612539\n100000000\n1\n1\n50820373\n100000000\n100000000\n100000000\n20402311\n100000000\n13261549\n100000000\n41692296\n1\n1\n100000000\n1\n95797977\n100000000\n1\n1\n1\n98511521\n22295341\n1\n100000000\n16637039\n70653385\n100000000\n100000000\n11564208\n1\n1\n62490797\n100000000\n32018873\n1\n1\n100000000\n1\n100000000\n38436533\n100000000\n1\n1\n96707270\n1\n100000000\n65787305\n2471313\n93190678\n1\n30388383\n42885037\n51410857\n1\n100000000\n100000000\n1\n89404269\n39739676\n1\n98906960\n1\n1\n92107017\n21796964\n100000000\n1\n5476512\n23064806\n1\n21933773\n84375412\n48260517\n100000000\n1\n100000000\n100000000\n54658848\n69453639\n9380545\n1\n1\n100000000\n43916325\n1\n100000000\n1\n1\n1\n68958721\n1\n1\n1\n80387333\n1\n1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 300)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:14",
  "total_test_cases": 20
}
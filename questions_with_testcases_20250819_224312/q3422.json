{
  "problem_code": "problems",
  "title": "Cool Numbers",
  "tags": [],
  "text": "Cool numbers are those, whose digits can be partitioned into two sets such that the sum of the digits in either sets are equal.Example: 23450 is cool because 3+4+0 = 2+5; So is 91125;The numbers 567, 34523 are not cool, since there is no such digit partition.Write a program that prints the number of cool numbers in the inclusive range [A,B].Input Format:The input file consists of multiple testcases.Each case contains one line containing two 32-bit unsigned integers A and B. (1 <= A <= B <= 4*109).Input terminates with a line containing two zeros and must not be processed.Output Format:For each testcase print a single line containing one integer saying the number of cool numbers between A and B, inclusive.Sample Input:1 11\r\n12 20\r\n1 20\r\n3 100\r\n6354 234363\r\n123456789 234567891\r\n0 0Sample Output:1\r\n0\r\n1\r\n9\r\n82340\r\n54801678Test Data:About 50 testcases.",
  "sample_input": "1 11\r\n12 20\r\n1 20\r\n3 100\r\n6354 234363\r\n123456789 234567891\r\n0 0",
  "sample_output": "1\r\n0\r\n1\r\n9\r\n82340\r\n54801678",
  "link": "https://www.spoj.com/problems/COOLNUMS",
  "scraped_at": "2025-08-17 00:34:14",
  "test_cases": [
    {
      "input": "1 11\r\n12 20\r\n1 20\r\n3 100\r\n6354 234363\r\n123456789 234567891\r\n0 0",
      "expected_output": "1\r\n0\r\n1\r\n9\r\n82340\r\n54801678",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "6 6\n4 9\n1 2\n10 2\n8 8\n1 1\n9 1",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "6 5\n9 10\n2 4\n6 7\n4 2\n6 9\n10 1",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "7 10\n8 4\n4 10\n8 4\n4 7\n3 2\n5 6",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "56 43\n88 40\n99 80\n48 38\n56 28\n66 62\n20 56",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "17 29\n8 5\n82 12\n68 100\n48 55\n13 97\n85 73",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "78 99\n9 88\n96 88\n93 4\n73 53\n28 32\n3 55",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "39 89\n2 52\n22 73\n93 99\n78 26\n56 27\n62 22",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "55 100\n7 84\n72 89\n5 15\n79 11\n95 72\n93 26",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "295 490\n199 86\n135 454\n56 196\n312 477\n198 179\n342 59",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "61 334\n192 170\n316 116\n167 363\n330 120\n495 273\n172 341",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "429 156\n94 116\n461 349\n328 232\n480 119\n409 475\n206 369",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "227 264\n193 457\n99 65\n442 120\n251 107\n428 480\n304 382",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "195 185\n301 292\n357 198\n362 192\n288 75\n433 177\n65 488",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "133 120\n360 222\n56 499\n244 306\n253 182\n282 203\n294 274",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "233 153\n88 65\n399 440\n94 252\n382 118\n332 269\n374 397",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 2\n1 1000\n1000 999\n999 999\n1000 999\n1 1000\n1 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 1000\n1 999\n999 999\n1000 1000\n1 1000\n999 1000\n999 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:23",
  "total_test_cases": 20
}
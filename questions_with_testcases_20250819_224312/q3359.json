{
  "problem_code": "problems",
  "title": "Svada",
  "tags": [],
  "text": "The local zoo has acquired a large open garden in which animals may freely move as in their natural\r\nhabitats and entertain visitors with their usual shenanigans.The most popular animals are monkeys. With their climbing and jumping and other skills, they delight\r\nold and young visitors alike.One species of monkey has specialized in climbing tall trees and picking off coconuts. Another species\r\nhas specialized in breaking them open.There are N monkeys of the first type (numbered 1 through N) and M monkeys of the second type\r\n(numbered 1 through M).Monkey k of the first type takes Ak seconds to find a good spot on the tree, after which it picks off its\r\nfirst coconut. After that the monkey produces a new coconut every Bk seconds.Monkey k of the second type takes Ck seconds to find a good tool for opening the coconuts, after\r\nwhich it opens its first coconut. After that the monkey opens another coconut every Dk seconds.Unfortunately, the second type of monkey is extremely aggressive so the two types may not be in the\r\ngarden at the same time. Therefore, zoo keepers will chase away the first type of monkeys as soon as\r\nthey have picked off all the coconuts. Similarly, if monkeys of the same type stay too long after opening\r\nall the coconuts, fights will ensue. Because of that, zoo keepers will send them away as soon as they\r\nhave opened all the coconuts.The zoo keepers first arrive immediately after all coconuts have been picked, and again immediately\r\nafter the monkeys open them all. The time needed for monkeys to enter or leave the garden is also\r\nnegligibly small.Tomislav especially likes the second type of monkey, but can never guess when to arrive in order to see\r\nthem. Help him calculate the time when the second type arrives if he knows the total time that\r\nmonkeys spent in the garden, but does not know the number of coconuts in the garden.InputThe first line contains the integer T (1 ≤ T ≤ 1 000 000 000), the total time that monkeys spent in the\r\ngarden, in seconds.The next line contains the integer N (1 ≤ N ≤ 100), the number of monkeys of the first type.Each of the following N lines contains two integers Ak and Bk (1 ≤ Ak, Bk ≤ 1 000 000 000), how fast\r\nmonkey k of the first type is.The next line contains the integer M (1 ≤ M ≤ 100), the number of monkeys of the second type.Each of the following M lines contains two integers Ck and Dk (1 ≤ Ck, Dk ≤ 1 000 000 000), how fast\r\nmonkey k of the second type is.OutputOutput the number of seconds between the arrival of the first type of monkeys and the arrival of the\r\nsecond type.ExampleInput:20\r\n2\r\n3 2\r\n1 3\r\n3\r\n3 1\r\n4 1\r\n5 1Output:13",
  "sample_input": "Input:20\r\n2\r\n3 2\r\n1 3\r\n3\r\n3 1\r\n4 1\r\n5 1Output:13",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/SVADA",
  "scraped_at": "2025-08-17 00:34:24",
  "test_cases": [
    {
      "input": "20\r\n2\r\n3 2\r\n1 3\r\n3\r\n3 1\r\n4 1\r\n5 1",
      "expected_output": "13",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3\n10\n3\n4",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "4\n3\n5\n2\n5",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "3\n5\n8\n6",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "19\n38339909\n1470635\n48321524\n64663733\n58177045\n46610107\n94502966\n1455383\n45143457\n32850177\n29050252\n99328319\n12504156\n30310709\n68734909\n88034368\n65562650\n74693581\n50874658",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "15\n40800917\n16522604\n65320096\n18041253\n21486348\n81727219\n88657671\n48442740\n44569617\n4421032\n81092519\n94870943\n40738248\n49943435\n6434756",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "14\n46515444\n91050374\n27632448\n25909986\n53757243\n38163032\n60945909\n51267628\n26718753\n95960642\n48890070\n99863223\n77928026\n4752941",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "13\n53374510\n68508629\n8259502\n93713769\n29454302\n79556146\n96014379\n40322824\n49360508\n76701911\n96108234\n93908774\n21264080",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "9\n36665719\n52481152\n95804054\n23129853\n68708200\n27210673\n36789071\n92197178\n62702515",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "32\n8589\n21642\n18970\n41696\n9742\n56801\n53898\n30976\n84212\n34967\n51766\n56524\n70896\n6860\n75803\n34903\n47404\n59604\n31564\n98293\n6263\n30147\n61444\n59845\n90914\n63767\n59070\n96594\n15151\n97785\n1708\n67774",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "51\n11599\n59583\n85328\n5064\n93144\n76121\n26471\n36812\n3467\n12664\n47840\n97768\n83509\n74619\n11943\n129\n15961\n55269\n22765\n32214\n98580\n29604\n21254\n41103\n4206\n43519\n86375\n79722\n37875\n13992\n86770\n20569\n80058\n98561\n75341\n47643\n2378\n7869\n98078\n29936\n81214\n78888\n63316\n59983\n55803\n59883\n99556\n29548\n31945\n53535\n1491",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "58\n55538\n7308\n40744\n22087\n34470\n86082\n93480\n53560\n84458\n97629\n12723\n15431\n85472\n2837\n18259\n38518\n25543\n58019\n52571\n74016\n96541\n35433\n82575\n40732\n87226\n14160\n96406\n27204\n91881\n18911\n35380\n40869\n92089\n70446\n10866\n44179\n44238\n9379\n6310\n25298\n75853\n78485\n11006\n94643\n92917\n23567\n75316\n93480\n52510\n45019\n2754\n50958\n32560\n80415\n34156\n84408\n66778\n65010",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "27\n2699\n83491\n13783\n52961\n20963\n51355\n98088\n10115\n31038\n97144\n4609\n46612\n51079\n12344\n51140\n93108\n7592\n79734\n52968\n22480\n15081\n12762\n28899\n98080\n96784\n81089\n43844",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "77\n14437\n28684\n15027\n55009\n51379\n10950\n90976\n87250\n26223\n31431\n23534\n44974\n13370\n80132\n15796\n12473\n62202\n94570\n38505\n44994\n46869\n79793\n2498\n26529\n61417\n49408\n6067\n37423\n47792\n99210\n20225\n38445\n14276\n18703\n49137\n57768\n86697\n81972\n36746\n69934\n26174\n39000\n37289\n39516\n15908\n84488\n4277\n2061\n17072\n87909\n77994\n20201\n60596\n44073\n17270\n92299\n4789\n83845\n33639\n76959\n62079\n22378\n78818\n37000\n33664\n51819\n48242\n74028\n47699\n76892\n6851\n32021\n89364\n77491\n53110\n80686\n93020",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "84\n63868\n25746\n73580\n18013\n50109\n50921\n6562\n20570\n17643\n25159\n48625\n65116\n44743\n47322\n87385\n49714\n28869\n47852\n59912\n96130\n16195\n91269\n21554\n4602\n8311\n99782\n58076\n36285\n68097\n5278\n24577\n16219\n71653\n79670\n45532\n49160\n57187\n82486\n10537\n9221\n8098\n1502\n23878\n42294\n60396\n48592\n85099\n1718\n81653\n79703\n53741\n36915\n43952\n51157\n19145\n28766\n99938\n86211\n99636\n55968\n23949\n91735\n36289\n45538\n8062\n6652\n68194\n51685\n87390\n64607\n69784\n66218\n58596\n48450\n44145\n94393\n15965\n19568\n87435\n68603\n67290\n9936\n51720\n17077",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "75\n87435\n44147\n96744\n41339\n87631\n22726\n75171\n82852\n52202\n86275\n63126\n60679\n565\n62974\n7781\n21010\n43300\n7976\n59857\n43089\n18442\n45104\n96621\n11521\n1180\n23592\n28426\n17250\n90362\n26649\n79180\n71821\n35098\n86917\n49825\n96998\n96915\n19791\n96949\n35964\n54047\n49531\n21312\n39224\n48430\n43707\n76556\n53916\n18514\n74459\n54705\n54503\n70456\n16502\n36072\n92869\n17681\n90821\n73459\n7409\n70900\n86393\n84382\n97255\n94563\n63552\n2029\n74961\n25759\n16134\n12805\n92589\n31860\n93986\n71446",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "100\n36585169\n23211512\n92246238\n73329840\n4417753\n25735110\n61081514\n96617878\n41644822\n55504711\n82805652\n46236598\n75590705\n10498724\n18753337\n58088779\n70073527\n4260746\n28004731\n44264078\n76916799\n7480022\n79495603\n29038356\n50548444\n33806981\n84954773\n72376521\n63899983\n41866\n33111501\n55573084\n21997410\n53356088\n13759486\n75411425\n13872192\n62358921\n13282010\n85830329\n67585806\n2001639\n52455963\n14729957\n85959009\n83434900\n47027520\n90811464\n42147396\n9753330\n71497216\n60976943\n62909741\n76723969\n31295813\n13341771\n29359140\n59804567\n84432080\n8348941\n74476614\n74990903\n37631087\n4650161\n20801629\n16106119\n60886751\n31864696\n35109895\n35587467\n18188603\n72677053\n31030063\n77120189\n67064299\n87296207\n68618245\n61316752\n23400498\n54379984\n42588434\n66608337\n96868836\n78510148\n35083914\n2186904\n9377962\n33625110\n96710951\n90728835\n35113776\n98864172\n68789151\n65109423\n61405116\n42886129\n48067079\n93638834\n96333059\n22995067",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "100\n76693833\n89399631\n21796583\n80246528\n91998629\n13256003\n3802442\n94854580\n18834310\n98069886\n69920711\n29718908\n748751\n93461157\n39559665\n61013167\n31162534\n21067106\n4967131\n83545817\n3616947\n926305\n71884926\n39020639\n47609600\n79079271\n49924167\n94002652\n21671102\n54297007\n20912033\n62326532\n31671848\n80019438\n76103209\n80513671\n44415283\n53711888\n23242277\n60754700\n56973863\n52416467\n46077399\n62005807\n88441844\n45373343\n4388552\n36611237\n75922996\n92072322\n89929126\n99085653\n61298214\n15516193\n47148874\n60121884\n41092510\n46186216\n32723533\n5258279\n69995223\n40485416\n64123980\n5161272\n31038142\n41144418\n758069\n6459862\n56848268\n55422807\n11737241\n53079873\n56516022\n98149508\n22852442\n4992117\n18263985\n79484227\n39518587\n2162179\n20451816\n43316598\n1918703\n82905087\n12908591\n86654504\n14704351\n91607130\n47252454\n78369165\n21064480\n46053536\n77996326\n39804582\n44022835\n78115639\n60254282\n10092557\n66070672\n39346670",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "100\n1\n100000000\n1\n46077860\n1\n70971446\n100000000\n100000000\n100000000\n45469499\n100000000\n1\n40786870\n1\n1\n15034829\n100000000\n86026924\n100000000\n100000000\n100000000\n100000000\n100000000\n19601829\n1\n100000000\n1\n100000000\n100000000\n100000000\n39047894\n80147166\n1\n36764992\n1\n1\n100000000\n36303942\n63043638\n100000000\n9965059\n73155002\n100000000\n1\n1\n1\n1\n100000000\n1\n1\n1\n1\n1\n42614920\n1\n100000000\n100000000\n87584827\n1\n100000000\n49136626\n100000000\n1\n36009871\n38959276\n1\n22114803\n71619896\n100000000\n63606612\n100000000\n100000000\n1\n73662437\n1\n100000000\n1\n100000000\n28013393\n54834053\n100000000\n1\n100000000\n1\n100000000\n1\n1\n1\n1\n85327210\n1\n100000000\n64418735\n100000000\n12191673\n1\n100000000\n8664217\n13635147\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 100)"
    },
    {
      "input": "2\n1\n69176582",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 2)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:23",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Ratar",
  "tags": [],
  "text": "After Mirko's failed stint as a coach and a passing obsession with Croatian meat delicacies, his weight\r\nproblems have motivated him to work hard as a farmer. He has moved to a village where his friend\r\nSlavko lives. Farmers in the village share a large common plot of land in the shape of a N×N square,\r\ndivided into N² unit squares. A unit square at coordinates (i, j) brings in the income of Aij, which can\r\nbe negative (for example, if the square has to be maintained but is not cultivated). The farmers always\r\ndivide the common land into smaller rectangular fields with edges parallel to the common land\r\nedges.Slavko is sceptical of Mirko since his failure as a coach, so he insists that both of them are assigned\r\nland with the same total income, but also that the two plots share exactly one common corner so\r\nthat the two friends can keep an eye on each other (Slavko knows that Mirko is prone to mischief). The\r\ncommon corner must be the only point where the two plots meet, in order to prevent border-related\r\narguments.You are given a description of the common land plot. Find the total number of plot pairs that satisfy\r\nSlavko's criteria.InputThe first line of input contains the positive integer N (1 ≤ N ≤ 50), the dimensions of the common\r\nland plot.Each of the following N lines contains N space-separated numbers Aij (-1000 < Aij < 1000), the income\r\nprovided by the respective cell.OutputThe first and only line of output must contain the total number of plot pairs satisfying the given\r\ncondition.ExampleInput:3\r\n1 2 3\r\n2 3 4\r\n3 4 8Output:7",
  "sample_input": "Input:3\r\n1 2 3\r\n2 3 4\r\n3 4 8Output:7",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/RATAR",
  "scraped_at": "2025-08-17 00:33:32",
  "test_cases": [
    {
      "input": "3\r\n1 2 3\r\n2 3 4\r\n3 4 8",
      "expected_output": "7",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3\n1\n5\n5",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n1",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "2\n6\n3",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "12\n34620635\n91723620\n1189103\n82761003\n73828159\n71843709\n2225867\n15061844\n91375717\n73897914\n11391695\n89994031",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "17\n48319382\n64179568\n97647387\n19298033\n35142838\n96762639\n89990366\n5449749\n47398116\n72193146\n21269605\n84018703\n46447997\n37390515\n76863560\n69217212\n76632168",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "8\n65889665\n13939521\n94824054\n2487452\n90227376\n32516894\n69834268\n71830007",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "11\n88970517\n44234377\n35129318\n81587411\n94186441\n11065500\n87251910\n18697948\n76549278\n30465994\n76874235",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "7\n7357074\n11358821\n38982246\n57439893\n77499873\n75160842\n45302856",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "42\n85750\n24140\n96861\n48893\n23571\n4552\n51601\n93408\n29654\n95453\n20973\n88081\n49865\n19702\n55467\n84513\n95209\n1026\n78711\n38890\n69566\n65971\n73849\n27784\n42849\n75755\n53571\n93051\n48563\n52840\n81749\n10777\n90830\n17370\n15234\n50315\n39043\n89472\n87779\n17731\n91995\n70433",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "49\n7680\n11880\n99207\n28249\n11382\n78200\n11170\n52775\n35166\n48282\n37521\n13656\n90443\n6336\n82530\n36231\n17847\n28924\n26672\n17601\n46443\n49438\n44914\n2168\n34550\n21758\n2258\n54730\n67916\n80953\n59137\n2908\n64409\n75076\n69492\n13302\n93911\n93631\n50245\n82806\n42528\n18321\n43100\n98323\n75115\n89193\n30324\n80423\n74808",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "37\n18260\n12378\n16241\n63454\n56\n58898\n95127\n62112\n39471\n4722\n73933\n41457\n83528\n60628\n99839\n38476\n11729\n72201\n57580\n12837\n43592\n47947\n64967\n22134\n77759\n37642\n84442\n79910\n64594\n36241\n1295\n2121\n42075\n13410\n10082\n16385\n65858",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "47\n99993\n49810\n21846\n81987\n45172\n53053\n84981\n91146\n54385\n64224\n26694\n89975\n85016\n97325\n66022\n28043\n22049\n8799\n74565\n87878\n72244\n49446\n9293\n76067\n94740\n78610\n24288\n42486\n21580\n26278\n55238\n91571\n5045\n74217\n27894\n43287\n93856\n37431\n42149\n49325\n30228\n41733\n81322\n49768\n75165\n11042\n9787",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "42\n19695\n13186\n9069\n9296\n43331\n20811\n41870\n48746\n75475\n16774\n367\n60110\n6531\n72310\n74992\n71814\n99390\n35911\n31806\n85482\n24234\n18195\n38698\n66982\n11189\n55658\n76322\n67397\n29429\n80787\n79061\n19751\n3265\n81683\n38645\n68620\n43942\n38336\n52802\n24298\n31552\n786",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "46\n69080\n76026\n52410\n37043\n84962\n19944\n93794\n11762\n96559\n4743\n88042\n34664\n73670\n77598\n68485\n82259\n7584\n29332\n59432\n30244\n11097\n67185\n23772\n15974\n9968\n87705\n55198\n38428\n41063\n37726\n3236\n96575\n57287\n1776\n89024\n72144\n28051\n35719\n81152\n41124\n59281\n77727\n70370\n54023\n62535\n87799",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "41\n26933\n29761\n16270\n45019\n18547\n83909\n9324\n872\n26\n56158\n19002\n9528\n216\n16127\n83466\n58006\n71172\n62850\n59048\n14805\n15231\n75994\n32744\n93934\n67947\n61257\n75596\n85661\n42164\n57977\n16817\n17088\n49696\n49796\n12792\n3403\n67954\n1736\n93474\n22343\n14813",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "50\n11744880\n56631009\n96006613\n13791704\n1187961\n21050663\n29040877\n4532645\n1928196\n77553930\n51589337\n60895763\n53447202\n62909373\n5150902\n10787060\n78251160\n22758071\n31400214\n62623521\n80196363\n88565696\n69580769\n11681685\n77408582\n32398565\n82255448\n79441482\n78840584\n4596917\n33513162\n84258944\n30003374\n32255683\n58348654\n28353813\n69663287\n71877856\n95825310\n80361261\n17107634\n77636480\n89328068\n12541815\n25477975\n84282066\n32767522\n49884293\n87905455\n89891059",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 50)"
    },
    {
      "input": "50\n77090884\n36925773\n90459670\n37898806\n90576339\n48502507\n31182376\n53336629\n83860103\n10945461\n9437549\n62374651\n33475557\n4462303\n55040502\n49766146\n19639796\n71089297\n41747180\n65864856\n53068301\n50654444\n54331078\n99987378\n70790790\n31323892\n36756773\n83584058\n91651286\n86052087\n77618273\n6866463\n79594545\n46695225\n44545041\n32018621\n88070804\n61517409\n58594027\n42400327\n18513696\n47041295\n14082471\n17010032\n42770195\n22749413\n74156208\n26261397\n28840196\n59120346",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 50)"
    },
    {
      "input": "1\n16823665",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 1)"
    },
    {
      "input": "50\n71935627\n100000000\n100000000\n6542344\n1\n1\n50239884\n100000000\n19157196\n1\n100000000\n100000000\n65077397\n78374421\n1\n1\n21941835\n100000000\n96421616\n24208203\n38579058\n1\n100000000\n26555535\n100000000\n30766449\n1\n1\n100000000\n35285522\n100000000\n1\n100000000\n100000000\n100000000\n14878557\n100000000\n1\n100000000\n100000000\n28476293\n1\n100000000\n100000000\n97769802\n1\n100000000\n64712658\n1\n25184793",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 50)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:18",
  "total_test_cases": 20
}
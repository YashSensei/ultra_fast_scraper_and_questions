{
  "problem_code": "problems",
  "title": "Count Minimum Spanning Trees",
  "tags": [],
  "text": "Your task is simple in this problem: count the number ofminimum spanning tree(Wikipedia) in a simple undirected graph. The number of minimum spanning trees mean in how many ways you can select a subset of the edges of the graphs which forms a minimum spanning tree.InputThe first line of input contains two integersN(1 ≤N≤ 100),M(1 ≤M≤ 1000). Nodes are labeled from 1 toN. In the followingMlines, every line contains three integersai,bi,ci, representing an undirected edge from nodeaito nodebi, with weightci. (1 ≤ai≠bi≤N, 1 ≤ci≤ 1,000,000,000). You can assume there is at most one edge between two nodes, and the graph described by input is connected.OutputPrint theanswer% 31011.ExampleInput:4 6\r\n1 2 1\r\n1 3 1\r\n1 4 1\r\n2 3 2\r\n2 4 1\r\n3 4 1Output:8",
  "sample_input": "Input:4 6\r\n1 2 1\r\n1 3 1\r\n1 4 1\r\n2 3 2\r\n2 4 1\r\n3 4 1Output:8",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/MSTS",
  "scraped_at": "2025-08-17 00:33:13",
  "test_cases": [
    {
      "input": "4 6\r\n1 2 1\r\n1 3 1\r\n1 4 1\r\n2 3 2\r\n2 4 1\r\n3 4 1",
      "expected_output": "8",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4 3\n8 10 7\n6 1 3\n1 2 4\n7 7 1\n9 5 3\n2 7 1",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "5 2\n10 9 2\n8 2 10\n8 6 10\n7 7 6\n4 3 5\n1 7 2",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "2 6\n2 5 5\n6 5 6\n1 2 9\n6 7 8\n1 9 1\n2 4 7",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "82 23\n28 50 49\n1 45 96\n86 19 42\n60 41 19\n86 80 65\n51 78 68",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "21 47\n71 59 9\n30 26 34\n67 36 47\n67 76 76\n67 77 77\n44 88 2",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "45 65\n2 100 31\n38 5 4\n54 27 38\n7 93 42\n5 57 80\n42 38 54",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "16 89\n74 68 50\n92 72 81\n18 99 21\n89 57 39\n11 24 30\n56 66 43",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "56 3\n30 69 49\n92 79 87\n27 51 20\n97 53 50\n13 9 13\n62 45 44",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "10 13\n31 49 46\n36 27 29\n21 25 36\n37 44 5\n31 12 10\n23 28 37",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "19 26\n47 36 16\n17 20 45\n12 50 11\n20 49 22\n10 28 16\n38 18 37",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "32 44\n17 46 41\n10 7 49\n30 23 17\n13 32 36\n18 29 29\n40 50 30",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "17 33\n30 13 19\n12 43 43\n33 27 30\n10 31 45\n19 50 16\n25 44 22",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "22 14\n34 8 24\n38 22 47\n28 47 34\n29 29 28\n35 11 18\n41 9 46",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "44 48\n40 14 9\n13 33 16\n40 32 32\n38 24 14\n31 30 13\n14 23 13",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "50 29\n25 20 48\n8 45 31\n25 26 7\n23 13 33\n7 6 48\n7 18 29",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "100 1\n100 2 99\n1 99 2\n99 1 2\n2 100 99\n100 1 99\n2 2 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 2\n2 99 99\n99 100 100\n100 100 2\n2 100 100\n99 99 2\n100 99 99",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:13",
  "total_test_cases": 20
}
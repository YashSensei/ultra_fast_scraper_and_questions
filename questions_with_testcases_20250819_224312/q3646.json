{
  "problem_code": "problems",
  "title": "Ingredients",
  "tags": [],
  "text": "You are givenncities withmbi-directional roads connecting them and the length of each road. There are two friends living in different cities who wish to collect some ingredients available at different stores to make cake. There are s such stores. They need not come back home after purchasing the ingredients. Petrol is expensive and they would hence like to travel minimum total distance (sum of distance distance travelled by both kids). Help them find out what this distance is.Inputn m(mlines of the formaibici)Herenis number of cities,mis number of roads,aiandbiare the cities (0 indexed) the roads connect andciis the length of this roadswheresis the number of stores(1 line containingsspace separated integers indicating the city number in which the stores are located.)(two space separated integers indicating the cities in which the two kids live)OutputSingle integerxwherexis the minimum distance that the duo will travel that is minimum sum of distance travelled by first kid and second kid.Constraints:2 ≤ n ≤ 1001 ≤ m ≤ (n × (n - 1)) / 20 ≤ a, b < n0 ≤ c ≤ 10001 ≤ s ≤ 8SampleInput:5 6\r\n0 1 5\r\n1 4 1\r\n0 4 10\r\n0 2 2\r\n1 2 3\r\n2 3 4\r\n2\r\n2 4\r\n0 1Output:3Problem Setter: Vidit Gupta",
  "sample_input": "Input:5 6\r\n0 1 5\r\n1 4 1\r\n0 4 10\r\n0 2 2\r\n1 2 3\r\n2 3 4\r\n2\r\n2 4\r\n0 1Output:3",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/INGRED",
  "scraped_at": "2025-08-17 00:34:25",
  "test_cases": [
    {
      "input": "5 6\r\n0 1 5\r\n1 4 1\r\n0 4 10\r\n0 2 2\r\n1 2 3\r\n2 3 4\r\n2\r\n2 4\r\n0 1",
      "expected_output": "3",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "6 5\n10 10 2\n9 6 10\n9 4 2\n4 1 10\n1 8 6\n4 1 5\n10\n2 6\n6 8",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "2 8\n8 1 3\n9 8 9\n10 8 9\n4 3 8\n4 4 7\n4 9 6\n7\n6 4\n5 6",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "3 8\n5 1 8\n10 9 6\n6 5 4\n5 9 8\n4 1 3\n1 3 4\n9\n2 4\n10 9",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "39 66\n79 71 81\n66 89 95\n100 23 65\n68 65 57\n48 57 34\n56 58 55\n5\n6 38\n93 36",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "56 81\n13 64 19\n83 33 100\n40 12 45\n100 37 17\n7 25 84\n2 58 58\n3\n34 88\n21 47",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "61 53\n50 25 2\n66 21 40\n44 22 43\n86 28 90\n98 48 71\n62 70 18\n38\n86 34\n79 79",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "77 84\n18 48 44\n7 61 61\n98 8 67\n42 95 70\n58 29 38\n27 79 69\n100\n9 37\n17 47",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "55 27\n79 53 36\n66 33 32\n96 45 1\n62 61 19\n83 28 64\n100 61 80\n64\n50 44\n82 69",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "419 150\n286 172 450\n493 389 258\n242 417 241\n209 326 385\n190 412 315\n84 361 472\n473\n455 191\n492 453",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "135 64\n448 240 130\n193 201 429\n372 427 173\n493 290 166\n148 240 380\n213 372 209\n143\n408 315\n412 207",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "208 210\n412 397 54\n447 335 272\n403 74 268\n323 131 59\n290 299 390\n202 326 474\n196\n370 463\n356 424",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "338 53\n190 194 210\n449 59 115\n202 399 94\n464 317 221\n96 331 244\n496 278 119\n157\n441 312\n342 428",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "303 280\n112 453 421\n97 54 432\n109 322 383\n155 173 142\n421 292 447\n258 156 175\n158\n192 382\n426 392",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "308 177\n358 70 88\n116 228 331\n499 222 412\n407 216 222\n414 381 366\n328 339 178\n372\n244 376\n306 81",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "232 157\n73 179 382\n122 70 403\n50 387 99\n296 415 139\n435 50 304\n158 140 144\n498\n246 78\n377 395",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1001 1001\n1001 1001 1001\n1001 1001 1001\n1001 1001 1001\n1001 1001 1001\n1001 1001 1001\n1001 1001 1001\n1001\n1001 1001\n1001 1001",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1001 1001\n1001 1001 1001\n1001 1001 1001\n1001 1001 1001\n1001 1001 1001\n1001 1001 1001\n1001 1001 1001\n1001\n1001 1001\n1001 1001",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 2\n1 2 1\n2 1000 1\n1 2 1001\n2 1 1000\n2 1001 1\n1001 1 2\n2\n1001 1\n1 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1000 1\n1000 1001 1\n2 1 1\n1001 1000 1001\n2 1 1000\n1001 1 1001\n2 1001 1001\n1\n1001 2\n1000 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:24",
  "total_test_cases": 20
}
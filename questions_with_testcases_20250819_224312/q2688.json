{
  "problem_code": "problems",
  "title": "DNA of Elf",
  "tags": [],
  "text": "Everyone knows that Santa's Elves are non-gendered and reproduce  by magic. Every time a new Elf is needed, two other Elves come together,  build a snowman, put a hair of each of them on him and then use their  magical powers to give life to the snowman who becomes an Elf. This Elf  always inherits the magical powers of its creators, unless both creators  possess the same type of power, so the new Elf does not inherit such power because there is a magical overhead. Elves, too, never create other  elves without magical powers.Because it was so easy to create new Elves, Santa realized that  his subordinates were creating many new helpers, not thinking about the  consequences. Simply to lessen your workloads. So he decided to forbid  the creation of new Elves who already had the same set of powers as any  existing Elf, as this would be redundant given that a single Elf with  that set of powers is more than enough for the function that is  designated. In addition there may already be more than one Elf of that  type because it was created before Good Old Man vetoed the creations.Now the little magical beings live a dilemma: Given the  information of all types of powers that each Elf has, what is the  maximum number of new Elves that can still be created?InputThe first line of the entry contains an integerTcorresponding to the number of test cases that follow. The first line of a test case contains an integerN(1 ≤N≤ 105) representing the number of Elves currently in the Santa factory. The following areNlines each containing a sequence of max. 64 charactersCi.Ciis always a lowercase or uppercase letter of the English alphabet or a  digit from 0 to 9 and represents a type of magic power. Lowercase  letters represent types of magic power distinct from uppercase letters.OutputThe output consists of one line per test case containing the maximum  number of Elves that can still be created without contradicting Santa's  banExampleInput:3\r\n2\r\nxz\r\nyx\r\n3\r\nxz\r\nyx\r\nzy\r\n5\r\nxazt\r\nctz\r\ncax\r\nxz\r\natOutput:1\r\n0\r\n2",
  "sample_input": "Input:3\r\n2\r\nxz\r\nyx\r\n3\r\nxz\r\nyx\r\nzy\r\n5\r\nxazt\r\nctz\r\ncax\r\nxz\r\natOutput:1\r\n0\r\n2",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/DNAOFELF",
  "scraped_at": "2025-08-17 00:34:09",
  "test_cases": [
    {
      "input": "3\r\n2\r\nxz\r\nyx\r\n3\r\nxz\r\nyx\r\nzy\r\n5\r\nxazt\r\nctz\r\ncax\r\nxz\r\nat",
      "expected_output": "1\r\n0\r\n2",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4\n3\n5\n3\n7",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n6\n2\n8\n9\n10",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "3\n3\n4\n2",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "16\n89281941\n67213576\n76707114\n21952162\n97059879\n87599528\n13254686\n97036177\n76732335\n79042368\n27017696\n52635389\n82115352\n63200722\n58676937\n29671463",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "6\n79221936\n62678276\n51658255\n79520934\n62702624\n32599575",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "8\n41439249\n61655949\n14730069\n23088828\n60708412\n38304558\n67222600\n72085309",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "11\n24248102\n3737460\n72186151\n58591274\n96952539\n47821557\n94049798\n34657148\n12326926\n63800908\n72213211",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "14\n30793218\n88475891\n58136776\n77270141\n36543245\n14317358\n14274455\n85132048\n93265781\n53466083\n23253541\n72676442\n39652506\n12408910",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "63\n52032\n95612\n48046\n57542\n38838\n41950\n80649\n81187\n6026\n4340\n46269\n62910\n52043\n67827\n61660\n44770\n80020\n91741\n69033\n43679\n56788\n93423\n23813\n48510\n3584\n56251\n91551\n77358\n63247\n53295\n1333\n34791\n26535\n35530\n707\n18003\n14995\n78712\n55060\n75164\n22306\n38316\n37036\n26076\n11487\n2062\n81214\n29820\n15947\n62729\n51465\n47670\n94343\n72536\n31845\n48187\n66165\n17921\n11080\n79540\n34695\n76359\n39338",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "66\n11607\n51491\n72149\n62333\n5224\n18512\n94523\n90064\n40911\n44656\n95364\n21321\n79460\n36938\n71436\n22454\n25742\n65045\n4598\n6702\n5726\n13236\n9845\n659\n27931\n24463\n67785\n84278\n87081\n64076\n84412\n1859\n14049\n88796\n64191\n92225\n6229\n11281\n60933\n81263\n37366\n28465\n8177\n43710\n69245\n18660\n93954\n84270\n57865\n83918\n9576\n34185\n41339\n465\n50176\n99581\n64937\n14314\n61601\n9983\n61385\n22527\n20146\n49080\n85225\n32762",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "97\n13246\n89463\n74808\n87647\n14312\n20166\n52009\n89431\n33122\n39637\n74949\n34554\n97537\n81968\n97966\n46432\n69084\n38720\n12338\n96944\n6491\n77186\n10955\n76165\n28339\n14677\n48428\n42643\n54102\n68808\n73027\n20727\n60351\n86128\n51107\n35422\n92797\n28696\n88152\n19194\n25983\n62026\n71006\n2534\n66265\n38482\n80043\n5023\n84963\n93860\n24526\n54303\n53242\n89203\n78317\n73636\n62876\n50129\n14998\n92047\n74988\n84323\n67662\n59017\n25412\n35362\n45900\n31262\n36513\n80797\n93532\n14257\n40817\n66007\n38771\n95269\n36043\n16748\n88190\n22025\n92870\n71149\n77704\n47815\n81210\n69619\n26527\n7998\n24903\n72113\n89940\n97172\n8568\n88296\n56572\n39472\n51728",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "77\n7917\n26391\n95900\n49615\n72868\n12771\n32842\n57703\n37067\n30676\n17918\n51481\n26284\n78229\n6627\n9678\n16824\n20572\n6446\n9088\n57242\n78575\n38594\n37578\n38379\n30773\n48228\n65276\n28776\n31677\n6011\n19890\n85145\n94948\n43105\n14092\n78361\n76496\n30870\n86879\n78254\n30240\n32792\n69574\n50585\n93883\n42338\n99295\n85800\n58467\n81047\n54137\n4734\n17797\n94439\n91323\n60749\n84204\n59048\n91620\n89456\n41389\n49335\n11998\n44177\n83907\n91021\n80484\n42604\n37207\n89174\n50853\n75484\n27658\n21899\n65458\n98117",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "49\n63054\n4698\n32907\n45991\n26076\n71551\n59524\n48194\n6871\n42161\n61870\n48903\n78592\n80035\n28100\n40286\n26136\n56\n48990\n66602\n6242\n77096\n30733\n13904\n90945\n43001\n97912\n96243\n23048\n8225\n60375\n6710\n26695\n50141\n42694\n5832\n30930\n8704\n545\n64143\n61741\n37452\n67043\n24989\n96398\n88385\n46066\n49475\n60044",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "95\n95139\n78814\n57304\n35651\n2307\n97314\n99459\n85498\n71393\n79988\n75230\n78717\n30565\n39867\n23191\n15630\n21460\n92764\n2375\n35882\n59418\n74130\n19344\n8057\n27152\n41552\n70956\n84782\n26418\n95313\n97181\n23731\n67917\n54519\n29462\n69469\n11567\n45133\n56565\n4104\n35037\n29461\n9212\n21878\n32726\n82839\n93036\n81936\n72090\n98198\n46643\n47355\n86216\n63433\n59954\n76868\n8151\n59468\n86205\n15047\n21668\n49080\n14681\n14741\n54022\n92340\n36852\n68251\n23022\n43031\n65202\n16273\n73465\n35900\n70600\n94209\n96576\n51652\n42793\n83938\n37182\n93\n84250\n78711\n60431\n20059\n84428\n50782\n95809\n2067\n46581\n60540\n8731\n83641\n99611",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "95\n22769\n9353\n71465\n29685\n69725\n50759\n97267\n20454\n775\n35447\n91556\n3931\n9447\n87974\n19074\n75796\n86649\n7712\n75611\n41285\n72530\n54000\n58121\n96064\n17801\n34716\n45678\n35569\n90544\n91606\n38038\n11985\n66468\n84033\n67531\n18669\n59701\n50203\n27840\n50089\n2322\n93297\n75033\n21624\n24471\n60792\n34985\n68943\n33530\n77568\n60856\n48335\n72636\n1600\n5483\n59551\n50898\n82077\n81860\n53145\n52088\n82906\n68986\n43494\n57470\n13863\n76484\n35570\n5638\n88300\n49019\n45312\n33074\n4630\n60674\n31092\n71009\n62199\n5138\n93689\n95041\n81744\n87899\n16494\n26607\n20098\n72080\n40289\n97532\n21164\n60162\n56548\n88606\n93008\n45089",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "105\n89856421\n86614332\n73736260\n68035917\n20021698\n77210567\n12006694\n96429696\n70667283\n27587690\n97018895\n41538861\n72599893\n77679668\n29589328\n80317850\n29157759\n78888067\n42803426\n3289232\n5432118\n68876228\n72088766\n61157287\n37176149\n70070314\n81879464\n46596599\n33858577\n76060837\n3741753\n46540343\n69031422\n14679964\n58896567\n42656446\n43465276\n88433681\n83159127\n43846723\n85563928\n56859228\n84050767\n34211899\n79751330\n97980639\n72597047\n88648786\n93862410\n78581216\n91288541\n22454947\n4081485\n25433342\n54261967\n53365874\n83328068\n27476859\n8711008\n70567545\n45255146\n95201540\n87282632\n29935814\n55537686\n22348381\n82584834\n47053348\n10175133\n30018138\n9651331\n70425459\n22583113\n76088420\n88434138\n10302272\n54655594\n20471303\n68189919\n48225824\n4805765\n93436771\n49429890\n62955866\n324388\n83206705\n56891534\n44580576\n33310595\n81051348\n45787123\n32620441\n74299541\n9316512\n96986371\n85885689\n48722939\n19019954\n92589396\n82823233\n32259106\n11063446\n20116166\n94905777\n20856410",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "105\n53531138\n62314783\n53799938\n25427484\n81138928\n92725292\n27528719\n33271650\n46069600\n93966160\n8020677\n99221765\n74016389\n5717190\n75649210\n11031680\n96008723\n55645080\n45116312\n49405774\n2474416\n66074076\n17389875\n86457113\n3542289\n76829318\n88798840\n46308169\n3577706\n85130973\n53547228\n91730086\n62374149\n20599288\n44475760\n32617956\n46296958\n50752918\n27685016\n63525910\n1086474\n79259623\n70566847\n25348847\n36369623\n40124063\n26691845\n54318217\n14319098\n84149334\n56925038\n41825387\n46102335\n23846502\n63321795\n66337618\n99853266\n38257028\n77047384\n26690400\n43064223\n42182128\n76693962\n29019150\n72521770\n55911834\n70544180\n23670257\n17444189\n8976326\n65429458\n44070833\n95938799\n43101846\n82718087\n65275831\n81047327\n6124437\n41801322\n12958387\n48079592\n42748898\n77205983\n24587773\n25114386\n16423589\n22296576\n67860052\n8549490\n42563130\n97332398\n28664781\n61502353\n16732826\n6756129\n90944971\n52811164\n78427726\n72684688\n60008558\n6259577\n86878176\n45819934\n82627105\n30839050",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "2\n1\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 2)"
    },
    {
      "input": "2\n100000000\n1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 2)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:21",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Ada and Fence",
  "tags": [],
  "text": "Ada the Ladybug owns a circular land. She wants to enclose it with fence.\r\nAnyway since nobody sells round planks, she has decided to fence it to shape of\r\nregulark-gon. Problem is, that there is only limited number or places\r\n(on circle) where pillars can be built. Ada has asked you, to find out the\r\nnumber of different regulark-gonshaped fences which can be built on her\r\nland (twok-gon's are considered different if they share NO common pillar).InputThe first line will containT, the number of test-cases.ThenTtest-cases follow, each beginning with two integers3\r\n    ≤ K ≤ N ≤ 105,3 ≤ K ≤ 100, the number\r\nof places where pillar can be built and number of edges of regulark-gon.Afterward a line withNintegers1 ≤ Di≤ 100follow, meaning the length of arc between two consecutive points where\r\npillar can be built. The sum of all lengths will be divisible byK.Sum ofNover all test-cases won't exceed2×106.OutputFor each test-case print the number of different regulark-gonshaped fences which can be\r\nbuilt.Example Input3\r\n5 3\r\n1 2 3 2 1\r\n15 4\r\n1 2 2 2 1 2 2 1 1 2 1 2 1 2 2\r\n10 5\r\n1 1 1 1 1 1 1 1 1 1Example Output1\r\n1\r\n2",
  "sample_input": "3\r\n5 3\r\n1 2 3 2 1\r\n15 4\r\n1 2 2 2 1 2 2 1 1 2 1 2 1 2 2\r\n10 5\r\n1 1 1 1 1 1 1 1 1 1",
  "sample_output": "1\r\n1\r\n2",
  "link": "https://www.spoj.com/problems/ADAFENCE",
  "scraped_at": "2025-08-17 00:34:02",
  "test_cases": [
    {
      "input": "3\r\n5 3\r\n1 2 3 2 1\r\n15 4\r\n1 2 2 2 1 2 2 1 1 2 1 2 1 2 2\r\n10 5\r\n1 1 1 1 1 1 1 1 1 1",
      "expected_output": "1\r\n1\r\n2",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2\n5\n6",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "2\n5\n9",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "3\n7\n4\n4",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "9\n79722491\n1957491\n74172948\n19875080\n69109540\n6776420\n18739245\n20119029\n52050918",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "7\n47352839\n20845920\n79153593\n8239036\n61393192\n27688221\n943194",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "10\n91652439\n4259964\n22943339\n96524163\n38465689\n71681267\n25842765\n78358349\n55389313\n8521701",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "17\n99263005\n37221534\n24898864\n80572550\n14594935\n15615954\n45218183\n82175437\n66954960\n82362485\n33557584\n95097658\n41633046\n45378054\n8815138\n10195161\n2222165",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "16\n1242524\n28198219\n40529325\n27027693\n65016050\n47113795\n62056026\n43801319\n56078449\n53343286\n70432929\n83197210\n21924046\n67036569\n59741307\n51520051",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "55\n41705\n17925\n19473\n30565\n999\n68407\n50621\n73874\n34953\n56817\n87210\n8622\n26610\n25951\n5349\n96474\n61726\n8366\n23288\n3651\n17660\n87893\n14956\n30323\n80273\n28238\n4894\n31726\n15219\n50411\n89849\n74306\n86594\n580\n80203\n80967\n92542\n20032\n59631\n78816\n8231\n84760\n74150\n62272\n15589\n16750\n66300\n1022\n87886\n78166\n94471\n94354\n26591\n18708\n22246",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "52\n86125\n39235\n1087\n8528\n27133\n15503\n25834\n9640\n95570\n26358\n56744\n14131\n62172\n34299\n80927\n55409\n22096\n3866\n85847\n57320\n2307\n53665\n31118\n84492\n42957\n44508\n36895\n75535\n32455\n70341\n17755\n54587\n44315\n92530\n80582\n80914\n16317\n2460\n44381\n48751\n15537\n5275\n65046\n36113\n44242\n2429\n8632\n9598\n25810\n5396\n9386\n15979",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "96\n92099\n98196\n205\n91253\n53645\n303\n53062\n76286\n45338\n55818\n89639\n73077\n59427\n31900\n21174\n69991\n32414\n19888\n31285\n54666\n56391\n60947\n31096\n23634\n7834\n30097\n258\n60545\n27885\n3165\n94178\n37555\n69602\n2437\n99075\n70832\n3028\n39605\n30276\n51386\n67724\n75199\n21853\n49034\n37456\n13771\n73125\n29084\n69193\n47468\n87923\n89474\n9054\n2351\n73830\n42677\n76839\n30312\n441\n39389\n32044\n46980\n29949\n17605\n6419\n91556\n51595\n41404\n94300\n33917\n99286\n23590\n63689\n67027\n7948\n99954\n54353\n22511\n41198\n32490\n41736\n77702\n72727\n60065\n96924\n42471\n66240\n29425\n32701\n30728\n64318\n5542\n18707\n8742\n22253\n97019",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "94\n16120\n41505\n39382\n54398\n26124\n39852\n75649\n2536\n67591\n7696\n5821\n90183\n29375\n20273\n32825\n2424\n42959\n49718\n86835\n48782\n69191\n91825\n93954\n99026\n50343\n7097\n15675\n4578\n41696\n5206\n3121\n27318\n27323\n15313\n51469\n71500\n38779\n5548\n12313\n564\n88129\n51995\n89291\n81428\n25164\n79058\n85192\n21957\n54975\n80349\n97427\n40701\n98898\n42022\n24\n36629\n10371\n22114\n95749\n22056\n43416\n94396\n98326\n75164\n98005\n69800\n98689\n54269\n38484\n8154\n95272\n79917\n61270\n95031\n41384\n47842\n75915\n64455\n91534\n75132\n12537\n49824\n55505\n50328\n16308\n9701\n41227\n43903\n70026\n5735\n31468\n87953\n5513\n1771",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "56\n16570\n81708\n26746\n99216\n38312\n91296\n3604\n97142\n16395\n37056\n28387\n27949\n67153\n86403\n45325\n95413\n32782\n56920\n47312\n98594\n37767\n8767\n96124\n42132\n99241\n6030\n88147\n29524\n22299\n29214\n59239\n17633\n12870\n79484\n2763\n84149\n62986\n43766\n14412\n81856\n49846\n59758\n47908\n92068\n53737\n50473\n85048\n12227\n73282\n15436\n39660\n28190\n17359\n66724\n61247\n99609",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "32\n49488\n97217\n68421\n3556\n16321\n68325\n68350\n60159\n48948\n91983\n15270\n29816\n91091\n38229\n63081\n48687\n43918\n57868\n5915\n94890\n58201\n18575\n92153\n85086\n53649\n24855\n29691\n14117\n792\n74905\n54069\n6756",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "35\n18950\n7206\n83722\n81654\n16711\n25844\n75897\n51176\n56750\n20689\n39438\n64645\n23420\n95671\n89212\n34081\n6193\n18692\n19851\n50058\n84503\n96623\n88340\n84102\n12716\n65863\n33279\n47915\n19427\n66249\n85532\n51436\n17255\n49856\n81920",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "105\n81115750\n42455336\n72110757\n62761064\n76346277\n71094670\n63696297\n31227093\n43223361\n95125064\n39493433\n6012557\n60787889\n69845635\n49393172\n65390665\n20040274\n65761034\n1734031\n88420290\n29866038\n79435452\n25095490\n35025666\n70673811\n38548531\n59327914\n94162196\n94624930\n3783053\n22780611\n15956784\n50503405\n43484005\n62457856\n7045811\n46551938\n63866440\n10100913\n80201765\n85491753\n31106374\n97347017\n37202348\n63499389\n33835084\n43044855\n17910193\n81568994\n40990283\n52960453\n96209932\n41906596\n51162103\n20293648\n52897180\n27027790\n85140512\n77044527\n15292068\n9688779\n27197659\n20989449\n11391760\n69519297\n45435035\n84163064\n33868046\n6065603\n40771476\n88358860\n5799054\n58727549\n10421866\n7130913\n62291300\n97491936\n4588710\n96498528\n3890792\n2588509\n65672639\n84439833\n67710349\n7740482\n98505671\n46172863\n96032850\n52014132\n42907267\n46815966\n16902856\n11808630\n52434423\n43604061\n62216831\n92722376\n37188311\n63278816\n29489768\n58344110\n68587832\n67015383\n83243669\n6383324",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "105\n4883670\n90389782\n97248300\n2153577\n83097924\n70016457\n31934010\n931153\n62947309\n26956743\n69130638\n29985309\n89105194\n11559970\n23573647\n1190183\n88658387\n27759021\n2164819\n52516921\n4569818\n16258188\n61722607\n5050225\n14095921\n16646446\n79100392\n18527953\n49237901\n30173692\n77427721\n61163153\n73721255\n99590466\n24119454\n58264020\n95703015\n42883623\n6258384\n57707691\n71305257\n11212851\n58577937\n13616751\n1686946\n14078265\n95939369\n22903605\n93298794\n94845272\n86106020\n79898442\n51182098\n71093416\n22563322\n87383997\n53173286\n87751824\n41234777\n15399304\n1683186\n92326883\n55466655\n85481021\n57381288\n85421465\n49607245\n92855250\n48364697\n38744186\n77953899\n31556961\n49991996\n13274689\n17992034\n762077\n2248842\n68519769\n51005146\n78951373\n77194091\n65807786\n10724989\n62335487\n90594699\n73844293\n8031317\n62015398\n70647896\n90751289\n58313952\n75967963\n78367614\n48431873\n23115625\n40562165\n40955322\n94916419\n25093677\n93796405\n58901517\n35414194\n73013927\n93726531\n91368756",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "2\n80180983\n1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 2)"
    },
    {
      "input": "1\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 1)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:21",
  "total_test_cases": 20
}
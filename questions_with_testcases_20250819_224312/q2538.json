{
  "problem_code": "problems",
  "title": "Unlock it ! Part 2",
  "tags": [],
  "text": "Now you all helped Vaibhav solve the puzzle and open the gate last time (although not too much help). But as soon as he opens the gate, there is another puzzle to open the front door. Let’s see whether this time you all are able to help him or not.Fac(n) = number of trailing zeroes in n!Fact(n) = Fac(n) % 25 + 1F(0) = 1F(1) = 1F(2) = 1F(n) = product of all odd primes less than or equal to n (for n ≤ 10)F(n) = 4fact(n)× f(n/5) × f(n/10) (for n > 10)For every fraction, a floor value is taken for evaluation.For eg. F(11) = 4fact(11)× F(floor(11/5)) × F(floor(11/10)) = 43× F(2) × F(1) = 64Given N, find the maximum value of(ab) % modsuch that a and b satisfies the relation gcd(a, b) = F(N). (Gcd : Greatest common divisor.)InputFirst line gives T, total number of test cases. Next T lines give the number N.OutputFor each test case, print the desired value on a new line.ConstraintsT ≤ 10N ≤ 106mod = 109NOTE: a must be ≤ 5 × F(n) and b must be ≤ 5 × F(n), a can be equal to b.ExampleInput:1\r\n2Output:1024",
  "sample_input": "Input:1\r\n2Output:1024",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/DCEPC604",
  "scraped_at": "2025-08-17 00:34:08",
  "test_cases": [
    {
      "input": "1\r\n2",
      "expected_output": "1024",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2\n2\n1",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "3\n8\n5\n6",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "2\n8\n4",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "16\n12028315\n77069442\n94784112\n22863104\n91648829\n2672885\n86065357\n47468465\n2578520\n21917233\n3809387\n82940947\n31196154\n47052267\n49644547\n1030461",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "11\n93219348\n74509152\n18465095\n28816948\n18769728\n6895193\n51284981\n35479754\n57965125\n8560265\n49134325",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "5\n81660412\n91877470\n9716260\n48058329\n46615812",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "16\n26702011\n62752111\n75799263\n29666526\n47916743\n85390069\n27376599\n70996900\n62228131\n8034943\n55348157\n87734262\n76607664\n30577050\n66214697\n42456186",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "10\n77529247\n40758208\n93962053\n8705891\n78663100\n61667378\n8300872\n83240207\n41153736\n86092481",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "36\n64996\n22206\n39047\n81397\n10206\n38819\n7461\n70025\n7058\n25105\n22782\n19903\n58907\n13596\n44538\n11296\n64405\n92799\n55691\n52571\n58785\n66211\n23842\n76690\n1328\n65631\n69810\n79378\n22038\n2743\n51278\n44890\n40142\n33155\n38686\n98749",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "75\n27869\n13532\n51957\n89765\n77151\n59699\n71365\n98275\n70282\n4636\n59577\n13775\n64584\n28219\n79230\n39114\n53770\n65202\n18714\n77022\n39986\n11502\n43618\n77170\n95097\n14434\n34700\n12105\n9929\n34116\n88520\n27243\n41799\n28186\n99536\n44882\n84726\n45877\n43466\n67092\n22521\n2394\n62665\n57874\n45608\n82003\n52237\n72958\n66948\n55903\n41904\n95931\n77186\n98984\n36962\n95901\n60246\n27474\n98130\n7243\n48925\n74159\n71999\n85908\n3061\n98610\n54207\n66299\n88287\n32817\n15637\n45573\n16847\n40424\n73207",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "70\n39686\n38348\n48899\n91810\n51915\n55431\n29775\n51839\n70965\n75627\n73511\n28335\n92241\n50888\n41694\n52034\n76554\n94397\n45801\n51431\n76344\n83890\n67072\n71114\n13439\n70809\n66343\n80021\n59808\n14308\n41247\n8221\n54222\n29034\n98600\n94336\n51200\n71421\n58500\n53443\n42468\n34356\n20591\n15516\n14211\n16643\n29999\n14071\n4296\n1314\n60101\n11870\n4933\n17594\n17305\n30697\n46728\n61461\n67673\n91291\n20363\n24947\n5366\n19423\n22425\n84186\n85688\n19885\n37146\n40189",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "99\n62234\n96443\n85533\n85943\n86605\n45377\n96821\n47326\n70043\n32446\n12509\n15225\n11802\n14210\n25061\n2097\n34079\n67701\n77205\n95416\n89504\n19876\n99993\n3360\n34457\n37245\n63039\n12482\n3538\n90397\n77671\n27574\n35055\n11209\n77716\n53984\n19161\n38808\n13944\n80313\n27810\n98885\n78335\n49671\n69275\n10355\n74050\n97776\n73752\n6241\n40143\n2418\n4157\n84555\n86988\n22199\n75124\n92658\n458\n82476\n94241\n40499\n74846\n16614\n59148\n70987\n64263\n2720\n12402\n42309\n10556\n42964\n70636\n91289\n93461\n91568\n29726\n8851\n26000\n80783\n18751\n76114\n12553\n8828\n18362\n77532\n4769\n55619\n37303\n79742\n14236\n93137\n47713\n74174\n31705\n1006\n50774\n45330\n12382",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "74\n61467\n54984\n54109\n3468\n88996\n50963\n26935\n50713\n49578\n3845\n29045\n39558\n78918\n59520\n24833\n43897\n74966\n45639\n84432\n20947\n59907\n76231\n44962\n85958\n11643\n97493\n79103\n28708\n77448\n16628\n28914\n22945\n93667\n58937\n90980\n41030\n97820\n84299\n11807\n86310\n51054\n25970\n1403\n53730\n54411\n53931\n44140\n61430\n27151\n27338\n93729\n40547\n80537\n11051\n33920\n63640\n61561\n11915\n34249\n64696\n61684\n6040\n34282\n76890\n2467\n61443\n24273\n93891\n26854\n52396\n62649\n58627\n23279\n38912",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "94\n59612\n10709\n45689\n2809\n32244\n46359\n40173\n96265\n30299\n74070\n22264\n52233\n18952\n57766\n83891\n82734\n35748\n98776\n88646\n93582\n7462\n84489\n92131\n68078\n99370\n55623\n85673\n52054\n83086\n3886\n94510\n51111\n21042\n16239\n66072\n62608\n49231\n28220\n9951\n66179\n18572\n81798\n2675\n74199\n29235\n12042\n92436\n93239\n76702\n71671\n49518\n68038\n39294\n93741\n34421\n67150\n75655\n62607\n54454\n8292\n95641\n76986\n84390\n87491\n61633\n8150\n61792\n77263\n92462\n42169\n91799\n91531\n69208\n17787\n57925\n17517\n68601\n78980\n19559\n40608\n11623\n36728\n11230\n98511\n92483\n68052\n83851\n19686\n39908\n95515\n84270\n95549\n4209\n44224",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "86\n28440\n21887\n51826\n14858\n82718\n42582\n12089\n70145\n96655\n40196\n78603\n39464\n68067\n39956\n83899\n80754\n61469\n66760\n94744\n22749\n44261\n47052\n8710\n75608\n37209\n57918\n72753\n87227\n7577\n77179\n57581\n9391\n5062\n18632\n89871\n7396\n2154\n71734\n40023\n81760\n32858\n8693\n77675\n11224\n79475\n50820\n23603\n59891\n6709\n77612\n58867\n5619\n9014\n72526\n33374\n5407\n3438\n76331\n3297\n98612\n63519\n38508\n52339\n40920\n26288\n5158\n39347\n11222\n1434\n58677\n58249\n92928\n41708\n60351\n31764\n68545\n25548\n40115\n95978\n21992\n95419\n80066\n10017\n58111\n43119\n87214",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "106\n85807968\n34895004\n34132119\n45558367\n49094088\n15658379\n56287744\n57354846\n57984742\n15293122\n53350324\n39815744\n67409471\n14249455\n69673646\n70483965\n31664789\n68599495\n43342603\n47663759\n21820822\n30467312\n27338814\n32416165\n73111827\n96022042\n70745469\n70522616\n74823621\n66832598\n68721844\n81713805\n49989043\n93372496\n68878828\n90398115\n397867\n69385576\n52791463\n32615084\n28925531\n52239420\n87308242\n48731564\n90653792\n551793\n96134418\n3902607\n68747958\n91739124\n30764749\n18605793\n80497664\n87306696\n58471221\n84053883\n49497572\n70919488\n52545528\n73984479\n41193265\n95123975\n82107164\n96390373\n5691102\n54933343\n38069257\n33643989\n11245701\n82153141\n57682817\n57960338\n27441776\n95058106\n16011582\n27713482\n64754411\n28273478\n65370182\n66445636\n61542119\n50177796\n45279181\n49013889\n6972862\n35905954\n22929749\n93040590\n29338691\n11627564\n41684257\n72408214\n13865675\n85072972\n51898275\n27298576\n5472452\n83810940\n99825424\n61859016\n19285304\n86134744\n81390619\n71873258\n16995947\n97387175",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 106)"
    },
    {
      "input": "106\n49492507\n30570956\n14389326\n42908703\n50669041\n88166700\n68607544\n95210982\n43936257\n27263935\n27609090\n48427355\n28915364\n5819581\n86699360\n37521846\n59581475\n43009289\n22290056\n93636007\n40391934\n26204060\n14491041\n70592853\n94394874\n26971974\n32996360\n62063703\n8871528\n82401890\n57488057\n80005110\n81643286\n22403959\n53065316\n68920306\n94235724\n60119282\n68439060\n52747944\n1384720\n71672864\n52822850\n12016650\n36183083\n86385438\n17625877\n73872388\n48534608\n27559613\n90273273\n20746888\n35108892\n41806417\n1111419\n61893757\n56324205\n21253342\n86430682\n22563426\n36311858\n34897783\n1546050\n96069492\n25436558\n1841102\n20114386\n85637856\n66797285\n98368012\n81353635\n65240404\n73942880\n96758910\n67563170\n65645537\n52330209\n72751184\n56452840\n26981508\n33595469\n25992860\n26828527\n51347827\n68293281\n455478\n22060751\n77372599\n59144498\n90769630\n63496722\n7730446\n41693844\n63635879\n58797779\n67293349\n43099717\n58994993\n64645582\n42841866\n78639485\n63220147\n77340680\n32143475\n82542144\n24578103",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 106)"
    },
    {
      "input": "2\n1\n1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 2)"
    },
    {
      "input": "1\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 1)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:20",
  "total_test_cases": 20
}
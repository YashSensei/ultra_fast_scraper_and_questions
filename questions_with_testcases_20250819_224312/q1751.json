{
  "problem_code": "problems",
  "title": "Sweets",
  "tags": [],
  "text": "John has gotnjars with candies. Each of the jars contains a different kind of candies (i.e. candies from the same jar are of the same kind, and candies from different jars are of different kinds). Thei-th jar containsmicandies. John has decided to eat some of his candies. He would like to eat at leastaof them but no more thanb. The problem is that John can't decide how many candies and of what kinds he would like to eat. In how many ways can he do it?InputThe first line of input contains three integers:n,aandb, separated by single spaces (1 ≤n≤ 10, 0 ≤a≤b≤ 10000000). Each of the followingnlines contains one integer. Linei+1contains integermi- the amount of candies in thei-th jar (0 ≤mi≤ 1000000).OutputLetkbe the number of different ways John can choose the candies to be eaten. The first and only line of output should contain one integer:kmod 2004 (i.e. the remainder ofkdivided by 2004).ExampleInput:2 1 3\r\n3\r\n5Output:9John can choose candies in the following ways: (1, 0), (2, 0), (3, 0), (0, 1), (0, 2), (0, 3), (1, 1), (1, 2), (2, 1)",
  "sample_input": "Input:2 1 3\r\n3\r\n5Output:9",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/IE1",
  "scraped_at": "2025-08-17 00:33:27",
  "test_cases": [
    {
      "input": "2 1 3\r\n3\r\n5",
      "expected_output": "9",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1 3 6\n8\n9",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "2 6 1\n4\n1",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "7 6 7\n4\n4",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "3 7 8\n10\n7",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "3 8 7\n8\n10",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "3 2 9\n10\n3",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "8 2 4\n5\n3",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "7 9 1\n4\n3",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "3 3 1\n4\n2",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "1 2 2\n2\n3",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "5 5 4\n4\n3",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "3 1 3\n2\n3",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "5 5 2\n4\n1",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "1 2 5\n3\n2",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "3 1 1\n5\n5",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "10 10 10\n10\n10",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "10 10 10\n10\n10",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "10 1 1\n9\n2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "10 10 10\n1\n1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:18",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Coconuts",
  "tags": [],
  "text": "A group of n castle guards are voting to determine whether African swallows can carry coconuts.  While each guard has his \r\nown personal opinion on the matter, a guard will often vote contrary to his beliefs in order to avoid disagreeing with the \r\nvotes of his friends.You are given a list of guards who either do or do not believe in the coconut-carrying capacity of African swallows, and a \r\nlist of all pairs of guards who are friends.  Your task is to determine how each guard must vote in order to minimize the sum \r\nof the total number of disagreements between friends and the total number of guards who must vote against their own beliefs.InputThe input to this problem will contain multiple test cases.  Each test case begins with a single line containing an \r\ninteger n (where 2 ≤ n ≤ 300), the number of guards, and an integer m (where 1 ≤ m ≤ n(n-1)/2), the number of pairs of \r\nguards who are friends.  The second line of the test case contains n integers, where the ith integer is 1 if the ith guard \r\nbelieves in the ability of African swallows to carry coconuts, and 0 otherwise.  Finally, the next m lines of the test case \r\neach contain two distinct integers i and j (where 1 ≤ i, j ≤ n), indicating that guards i and j are friends.  Guards within \r\neach pair of friends may be listed in any order, but no pair of guards will be repeated. The input is terminated by an \r\ninvalid test case with n = m = 0, which should not be processed.OutputFor each input test case, print a single line containing the minimum possible sum of the total number of disagreements \r\nbetween all friends plus the total number of guards who must vote against their own beliefs.ExampleInput:3 3\r\n1 0 0\r\n1 2\r\n1 3\r\n3 2\r\n6 6\r\n1 1 1 0 0 0\r\n1 2\r\n2 3\r\n4 2\r\n3 5\r\n4 5\r\n5 6\r\n0 0Output:1\r\n2",
  "sample_input": "Input:3 3\r\n1 0 0\r\n1 2\r\n1 3\r\n3 2\r\n6 6\r\n1 1 1 0 0 0\r\n1 2\r\n2 3\r\n4 2\r\n3 5\r\n4 5\r\n5 6\r\n0 0Output:1\r\n2",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/COCONUTS",
  "scraped_at": "2025-08-17 00:33:47",
  "test_cases": [
    {
      "input": "3 3\r\n1 0 0\r\n1 2\r\n1 3\r\n3 2\r\n6 6\r\n1 1 1 0 0 0\r\n1 2\r\n2 3\r\n4 2\r\n3 5\r\n4 5\r\n5 6\r\n0 0",
      "expected_output": "1\r\n2",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "8 10\n8 9 1\n2 7\n4 2\n10 10\n9 5\n1 6 5 4 2 4\n9 4\n9 5\n4 9\n10 4\n1 9\n9 6\n3 7",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "2 7\n6 7 6\n3 3\n5 8\n6 3\n3 7\n6 2 9 3 6 1\n10 3\n7 8\n2 7\n8 10\n1 7\n3 4\n10 5",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "2 1\n10 9 9\n6 2\n6 7\n8 5\n4 10\n6 1 1 10 6 2\n4 3\n10 3\n2 4\n6 1\n7 1\n9 4\n8 9",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "92 31\n96 33 21\n56 65\n92 26\n5 45\n87 92\n89 31 31 28 83 90\n99 77\n50 78\n83 49\n83 59\n71 15\n71 88\n34 85",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "26 20\n82 77 71\n28 11\n12 66\n22 93\n34 54\n35 67 13 5 33 2\n48 15\n30 3\n1 71\n60 15\n35 18\n12 77\n72 58",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "29 15\n23 71 73\n49 44\n86 81\n46 55\n1 15\n39 54 40 21 97 84\n38 70\n48 24\n29 79\n54 53\n86 4\n71 11\n18 25",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "84 29\n98 43 89\n5 18\n80 68\n91 37\n7 88\n52 57 84 2 5 100\n25 100\n28 48\n98 40\n36 42\n69 53\n22 7\n58 18",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "2 100\n33 10 89\n17 32\n35 2\n32 37\n13 54\n60 62 64 61 5 17\n20 59\n9 83\n35 12\n73 21\n38 77\n71 48\n45 41",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "25 129\n68 138 19\n65 114\n58 113\n113 75\n105 82\n118 24 49 85 99 144\n141 82\n84 119\n87 120\n67 70\n122 58\n111 68\n50 150",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "20 99\n149 19 136\n63 48\n72 84\n125 20\n115 66\n128 54 83 134 16 50\n132 136\n65 103\n28 89\n118 46\n62 116\n64 35\n60 117",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "36 91\n47 26 66\n45 120\n30 46\n146 85\n51 56\n85 121 104 111 126 109\n98 81\n26 85\n129 75\n50 27\n96 40\n146 36\n106 57",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "127 39\n37 107 39\n127 144\n136 42\n21 88\n133 42\n106 48 147 125 124 37\n60 59\n58 64\n94 82\n49 76\n126 144\n37 71\n129 42",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "89 96\n149 148 109\n52 61\n95 94\n66 141\n93 62\n125 142 126 102 93 19\n119 92\n35 112\n75 107\n28 111\n60 109\n37 127\n148 18",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "97 99\n36 78 56\n106 146\n26 80\n136 67\n62 142\n82 99 106 99 71 88\n17 145\n98 111\n22 150\n22 120\n54 85\n58 117\n81 52",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "107 134\n82 19 82\n114 32\n112 52\n95 116\n104 119\n62 92 32 69 66 133\n137 114\n57 61\n38 74\n105 135\n95 104\n70 90\n23 15",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "300 300\n300 300 300\n300 300\n300 300\n300 300\n300 300\n300 300 300 300 300 300\n300 300\n300 300\n300 300\n300 300\n300 300\n300 300\n300 300",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "300 300\n300 300 300\n300 300\n300 300\n300 300\n300 300\n300 300 300 300 300 300\n300 300\n300 300\n300 300\n300 300\n300 300\n300 300\n300 300",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "299 300\n1 2 2\n300 2\n299 299\n300 299\n299 300\n1 300 2 300 299 299\n2 299\n1 1\n1 2\n299 300\n2 2\n299 299\n2 299",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "299 300\n2 299 2\n299 299\n2 1\n1 300\n299 2\n300 1 2 1 299 300\n2 2\n300 300\n2 2\n300 2\n300 299\n300 2\n2 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:16",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Sharmeen Loves Substring [ HARD ]",
  "tags": [],
  "text": "After solving the problem “MOZHSLM” Sharmeen become familiar with subsequence and somehow become interested in substring. Instead of learning more about substring she started asking some ludicrous questions to Mozahid about substring. Become tired of answering Sharmeen’s ludicrous questions Mozahid gives Sharmeen another problem which is slightly harder than the previous one. Mozahid will give Sharmeen a string of lowercase English letters and some queries. In each query he will give her a substring of that string. Sharmeen has to answer how many different subsequence of ‘sms’ exists in that substring. Can you help Sharmeen solving this problem?InputGiven a string of lowercase English letters of length N (1 ≤ N ≤ 105) in first line. In the second line given an integer Q (1 ≤ Q ≤ 105), which is the number of queries. In each query you will be given two integer L, R (1 ≤ L ≤ R ≤ N). L is the starting position of the substring and R is the ending position of the substring (1 based position).OutputFor each query you have to output an integer in one line which is the number of different subsequence of ‘sms’ in that substring.N.B.Substring is a consecutive sequence of characters of a string. Where subsequence not necessarily need to be consecutive. But for both you have to maintain the order. For clearance ‘skmjssm’ has 2 different subsequence of ‘sms’. {1, 3, 5} and {1, 3, 6} (1 based position). For better understanding see the sample input output.ExampleInput:sasmasamsas\r\n3\r\n1 6\r\n3 9\r\n8 11Output:2\r\n4\r\n0[This problem originally written by MD. Mozahidul Islam Bhuiyan(kissu_pari_na)]",
  "sample_input": "Input:sasmasamsas\r\n3\r\n1 6\r\n3 9\r\n8 11Output:2\r\n4\r\n0",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/MOZHSLS",
  "scraped_at": "2025-08-17 00:33:30",
  "test_cases": [
    {
      "input": "sasmasamsas\r\n3\r\n1 6\r\n3 9\r\n8 11",
      "expected_output": "2\r\n4\r\n0",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "qwrwq\n6\n1 3\n5 10\n6 4",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "dmezuxze\n2\n4 3\n2 4\n8 3",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "wrsrqx\n1\n1 8\n7 6\n9 8",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "efkbsylnf\n46\n78 22\n15 65\n27 43",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "iwfktaplnxjf\n83\n74 86\n69 30\n67 60",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "pdhawvahtnemvfufpne\n23\n21 88\n40 64\n53 57",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "pi\n87\n17 85\n46 55\n3 59",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "mrvfstjykvwdw\n1\n53 48\n5 32\n16 75",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "stimfirhh\n19\n38 28\n17 36\n32 29",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "rfkl\n21\n40 28\n23 33\n18 50",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "ypybjjhntdwvoqmce\n51\n28 46\n40 37\n37 28",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "d\n11\n17 23\n29 41\n22 17",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "ifapwknqkbklyzgei\n52\n51 50\n40 37\n26 25",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "kiimhk\n20\n17 5\n24 51\n52 46",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "hpvnufxfq\n37\n40 52\n12 34\n25 19",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "vqdhvimmbaacmdbrze\n105\n105 105\n105 105\n105 105",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "nnfxtdlzvxcrbvfyigt\n105\n105 105\n105 105\n105 105",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "khypgvmcsjytwnvcm\n1\n104 104\n2 1\n104 104",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "dvkonbi\n1\n2 2\n1 1\n105 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:17",
  "total_test_cases": 20
}
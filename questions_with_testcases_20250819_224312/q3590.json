{
  "problem_code": "problems",
  "title": "Joy of Arbitrage",
  "tags": [],
  "text": "Gitu is the smartest economist in the city. He has been kidnapped by Ankur and Vaibhav. They want him to make profit by Arbitrage.Arbitrage, roughly, is the process of taking advantage of price differences in various economies/markets to earn profit.So Ankur and Vaibhav have some units of each of the N valuables items to be sold in exactly N different markets in exchange of some money. Now they want Gitu to sell the items intelligently and maximize the total money earned. However, there is one condition. If Gitu sells some units of a particular item in a particular market, he cannot sell further units of that item in any other market and he cannot sell any other item’s units in this market.Ankur and Vaibhav have allowed Gitu to talk to you and only you. Can you help Gitu to strategize the sell to make maximum earning?InputFirst line consists of T, the number of test cases.Each test case starts with an integer N, the different items to be sold and the different markets present.Next line contains N space separated integers, the units of each of the items Ankur and Vaibhav have.Each of the next N lines consists of N space separated integers. jth integer in ith line signifies the money earned after selling one unit of jth item in ith market.OutputOutput T lines corresponding to each test case, the maximum money that can be earned by following the process stated above.Constraints1 ≤ T ≤ 101 ≤ N ≤ 40All other integers in input are positive and not greater than 100.ExampleInput:1\r\n3\r\n1 2 3\r\n1 1 1\r\n2 2 2\r\n3 3 3Output:14",
  "sample_input": "Input:1\r\n3\r\n1 2 3\r\n1 1 1\r\n2 2 2\r\n3 3 3Output:14",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/DCEPC12J",
  "scraped_at": "2025-08-17 00:34:31",
  "test_cases": [
    {
      "input": "1\r\n3\r\n1 2 3\r\n1 1 1\r\n2 2 2\r\n3 3 3",
      "expected_output": "14",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5\n2\n4\n8\n10\n6",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n1\n8\n7\n8\n6",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n4\n10\n1\n3\n3",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "7\n93053799\n53786789\n74830588\n92988227\n69550715\n77210288\n75687901",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "17\n6560075\n96425303\n78947177\n27546398\n88033393\n5247813\n14773748\n16370079\n99044641\n3396218\n75172143\n55498451\n40939821\n42103398\n42502497\n41957135\n41357434",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "20\n954402\n14336476\n29430317\n23902276\n38299951\n5758942\n90145437\n65201088\n39248128\n13642264\n63793029\n62290257\n64385090\n85855617\n35064203\n67926517\n58358389\n1280934\n43926127\n35829736",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "5\n87235627\n44806925\n82500677\n61358628\n20912799",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "20\n57827228\n75774\n41101445\n1138709\n20147126\n93103791\n86678136\n15652583\n37582905\n91534286\n45217164\n79711977\n9963981\n81475589\n92225853\n64538370\n65642302\n45108820\n61090061\n43467665",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "35\n34566\n94849\n6892\n88455\n53701\n85699\n1902\n45543\n71444\n72929\n41531\n37175\n2755\n12922\n65182\n84072\n74064\n99863\n51528\n46519\n15961\n94823\n45993\n80740\n21341\n49545\n82275\n54143\n3519\n52293\n40385\n15660\n89705\n38550\n77600",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "37\n30846\n64139\n72544\n72741\n93424\n60743\n70982\n57808\n46643\n61837\n94385\n70618\n3276\n18619\n14640\n6905\n89334\n83584\n42880\n52625\n17762\n77414\n20374\n2416\n1510\n64195\n68519\n62880\n59235\n6380\n49043\n37700\n87542\n24366\n25503\n91578\n78262",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "39\n99365\n73029\n32720\n50873\n4225\n75729\n14626\n96582\n99795\n9971\n66108\n48798\n75620\n37369\n24539\n70010\n83115\n65068\n35402\n2760\n3619\n10384\n77041\n39037\n45212\n56423\n11347\n3825\n70123\n70209\n46496\n334\n18993\n52119\n12474\n83120\n89009\n88697\n78811",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "32\n57850\n82632\n37826\n73062\n26269\n80772\n51458\n68132\n98753\n45939\n93230\n86870\n40794\n28414\n49408\n48704\n70363\n29681\n10806\n35769\n15356\n24457\n84922\n69070\n54652\n75445\n36009\n90678\n30102\n70060\n11436\n8548",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "29\n6699\n22895\n60412\n67418\n73969\n59922\n86402\n15893\n47805\n24370\n25551\n58531\n75703\n95932\n2873\n45755\n61970\n36948\n28855\n36788\n50531\n75545\n56344\n48460\n48147\n46632\n92661\n23413\n2358",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "25\n59653\n92472\n91661\n40491\n57615\n32248\n56281\n75022\n55116\n78110\n65322\n31062\n22971\n39856\n59082\n5394\n84531\n84083\n5242\n84056\n83021\n2571\n19755\n79767\n53906",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "23\n98892\n92599\n91027\n23044\n31641\n92889\n73113\n34056\n12099\n34565\n88273\n73297\n14731\n40882\n73761\n80044\n93384\n24097\n87377\n76564\n87737\n81825\n50223",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "40\n7683223\n25881589\n37632986\n27527143\n98821309\n40613651\n18791961\n90218316\n17990393\n29791614\n27663684\n2283018\n22027141\n47475666\n7034195\n35641307\n11249755\n34073304\n27242035\n92446149\n24699691\n27935510\n79543024\n52857872\n23411976\n34819961\n24930385\n8986812\n47440300\n95524021\n36417387\n72458684\n55907154\n18987039\n51033274\n30928153\n99719886\n18782559\n55158368\n22597330",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 40)"
    },
    {
      "input": "40\n60532251\n19277347\n50665375\n2115954\n14749781\n40158333\n41957280\n12899354\n37846689\n34048795\n86721185\n74696872\n59338369\n62599740\n12096595\n78748993\n38913008\n165163\n64281755\n63046000\n92531910\n12353193\n8448980\n5064107\n82049411\n89198530\n93898523\n81962919\n85681222\n44692629\n495226\n76648033\n12736619\n41856193\n98340160\n17457069\n27830505\n56165050\n14701390\n8177379",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 40)"
    },
    {
      "input": "40\n48642247\n82169627\n1\n100000000\n100000000\n100000000\n100000000\n12355022\n77634899\n1\n5887721\n100000000\n1\n91032339\n1\n1\n1\n1\n30667449\n18012884\n1\n1\n84048914\n100000000\n100000000\n1\n100000000\n100000000\n41303271\n92016488\n1282940\n1\n1\n18957327\n8804802\n1242734\n100000000\n1\n96844672\n1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 40)"
    },
    {
      "input": "2\n100000000\n1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 2)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:24",
  "total_test_cases": 20
}
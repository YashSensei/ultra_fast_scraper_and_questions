{
  "problem_code": "problems",
  "title": "Bomberman",
  "tags": [],
  "text": "Alice and Bob love to play Bomberman. They decided to upgrade the game. Their version is played on a rectangular board divided into cells. The first player puts a bomb on any cell. The bomb destroys this cell, as well as all consecutive undestroyed cells left, right, above and below it. Then the second player puts his bomb, then again the first and so on. The player who destroys the last cell wins the game. Given the dimensions of the board, determine which player wins the game assuming that both players play optimally.InputThe first line contains T (1 ≤ T ≤ 1000) - the number of tests. The next T lines contain two integers m and n (1 ≤ m, n ≤ 100) - the size of the board.OutputFor each test print 1 if the first player wins the game, or 2 if the second wins.ExampleInput:1\r\n2 2Output:2Example of the first two moves of 7×7 board",
  "sample_input": "Input:1\r\n2 2Output:2",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/BOMBER",
  "scraped_at": "2025-08-17 00:34:11",
  "test_cases": [
    {
      "input": "1\r\n2 2",
      "expected_output": "2",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4\n2\n5\n1\n8",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n1",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n8",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "20\n4531088\n1226333\n38559825\n13371991\n27022551\n34148657\n7811013\n67280196\n73320311\n97764667\n80877592\n17804191\n30194707\n79699212\n38955968\n39339277\n13862694\n36478808\n1277334\n1769312",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "7\n72077342\n82490867\n39858384\n20086453\n58387974\n97758167\n60755111",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "14\n77881772\n42338688\n15476416\n80152200\n15814649\n50248627\n63228878\n64148377\n73638037\n14621622\n8210846\n6355461\n38444102\n2321423",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "16\n38112030\n41663434\n24937491\n13640127\n58025109\n82238880\n14326249\n50765492\n79488717\n57008931\n56724305\n15260143\n73444829\n28558941\n60227740\n66356462",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "19\n20282851\n11411966\n21672842\n90428994\n91979534\n24831125\n40523155\n45674408\n24921714\n29272684\n53312518\n600905\n1584780\n16361339\n77879288\n7502915\n49459925\n14247026\n3949127",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "85\n35667\n46238\n94738\n51519\n64303\n43476\n20916\n34679\n59728\n6537\n30302\n24520\n3704\n65753\n5642\n80741\n51433\n38187\n80793\n84568\n25198\n33544\n11181\n11799\n67021\n55929\n72089\n8649\n62979\n40757\n68333\n58687\n9862\n95963\n35047\n53618\n21863\n69344\n84998\n1906\n3315\n39332\n2022\n60957\n55308\n43502\n69037\n78127\n63298\n83400\n21157\n90100\n56733\n74058\n93040\n50158\n12522\n12657\n6377\n64574\n69899\n34074\n18562\n18849\n51468\n78940\n38880\n75645\n30988\n66844\n1135\n82970\n34482\n71308\n60369\n73497\n79963\n37224\n26157\n302\n59249\n15713\n26483\n40520\n84520",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "63\n65750\n79636\n60990\n33194\n48058\n79434\n16416\n37964\n90667\n16421\n30955\n71589\n94519\n98136\n51874\n83795\n10936\n6756\n37532\n67356\n95449\n84484\n87582\n30378\n32758\n88704\n48216\n85674\n98710\n8974\n1988\n99398\n87512\n66968\n62039\n64279\n95137\n96243\n51631\n76338\n81323\n95034\n33075\n46498\n47293\n41075\n40115\n57006\n25685\n27743\n22750\n47536\n88311\n47144\n30663\n55477\n1629\n71974\n10574\n76992\n29054\n548\n50460",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "34\n75152\n83299\n49712\n88266\n66091\n57476\n25084\n76469\n33259\n41852\n40106\n37868\n41729\n45116\n34812\n66424\n21841\n84049\n77917\n66205\n58475\n19817\n16396\n47644\n95142\n26870\n87223\n48497\n35037\n83707\n58867\n87161\n47682\n68167",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "78\n42478\n81445\n44333\n44116\n92346\n99836\n73702\n7495\n71437\n26588\n22151\n29046\n10071\n37336\n17006\n71383\n67353\n34112\n95977\n33713\n55457\n82078\n80268\n28334\n49667\n98695\n4887\n69957\n13811\n30236\n3763\n6815\n11134\n75938\n81662\n2193\n74388\n59500\n32276\n48504\n42653\n86848\n94813\n46751\n20071\n83401\n89701\n64193\n60294\n47833\n92265\n59942\n13495\n39298\n89887\n51914\n34421\n1023\n28393\n28820\n1052\n57860\n46136\n56436\n328\n62755\n7119\n71392\n79734\n53311\n8125\n27033\n89319\n74344\n65545\n96782\n97833\n77088",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "30\n95256\n53212\n11191\n28492\n89589\n35969\n33786\n50689\n15688\n88446\n92924\n10571\n46056\n12432\n61206\n35693\n57790\n41266\n65097\n96794\n79967\n79975\n78190\n98939\n96337\n25278\n93344\n97730\n18979\n5566",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "82\n23141\n19251\n20082\n46213\n14978\n60023\n66966\n21255\n76261\n51736\n94741\n94305\n54647\n59413\n9297\n51320\n90072\n93465\n6504\n22272\n38439\n37397\n13237\n74886\n49508\n64924\n83250\n52697\n11915\n45399\n4913\n96786\n29287\n10823\n32794\n67640\n74347\n25317\n64470\n46795\n86487\n32962\n56645\n50309\n35222\n20554\n34495\n40753\n50315\n78340\n54195\n78181\n63170\n30513\n32396\n6368\n73323\n53990\n28599\n52392\n33669\n61892\n6783\n31413\n97820\n35739\n23831\n30984\n84314\n68356\n12190\n83062\n1523\n51533\n47717\n32453\n50999\n7727\n8415\n33949\n80239\n30681",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "97\n58450\n23820\n8596\n57407\n71592\n65715\n42772\n64082\n61677\n4171\n67428\n67269\n51879\n80178\n63757\n97830\n9857\n7592\n15160\n70577\n38517\n39557\n35963\n28143\n85493\n48822\n88632\n99031\n80344\n16645\n6592\n72138\n76364\n2455\n98580\n67424\n53440\n24849\n81330\n58490\n59890\n59064\n94960\n10882\n63897\n5015\n13254\n38811\n8227\n27481\n40556\n26044\n48206\n40341\n75414\n82355\n67197\n54709\n99076\n94271\n4278\n12640\n63448\n86809\n22521\n3901\n68105\n71376\n57793\n87305\n82821\n43646\n67758\n79579\n31672\n89607\n80916\n54525\n46502\n74705\n4355\n84601\n6872\n45646\n90792\n76048\n52062\n21664\n72588\n83531\n50871\n8547\n22085\n4216\n96344\n36581\n7775",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "100\n494466\n90187713\n60141224\n73603155\n95849241\n60428579\n74373686\n3638965\n240086\n32019262\n60424957\n2865395\n72603452\n36852272\n2051707\n7270307\n12904987\n30228988\n10484363\n9962322\n9596796\n93573124\n25317182\n60349586\n6937264\n7334181\n12846160\n96068874\n14714893\n12066938\n30776007\n47394880\n73166366\n39222350\n15692284\n11449947\n86469743\n48313727\n89439345\n95877248\n8301806\n30002102\n99816810\n20422163\n33647090\n55395486\n25949598\n75502185\n83101845\n98794164\n38491632\n77687793\n66798610\n92790496\n64943523\n19457820\n26665304\n78187089\n49978173\n5032126\n12390828\n36236759\n90290113\n17163108\n90113862\n40880394\n91524769\n51754592\n98481492\n2249808\n28062684\n75507162\n9590652\n76520695\n73564073\n4409227\n265873\n70178634\n31427536\n81090798\n23425725\n21977544\n46002219\n17119986\n62416935\n21997949\n51502113\n67370570\n44033121\n86613471\n19575821\n7653514\n90397385\n53462582\n76270057\n96373198\n53875977\n77955778\n78487422\n65270680",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "100\n48661635\n23143740\n29469004\n86674005\n4666653\n25469600\n67557281\n43006565\n75287662\n11744881\n27190870\n6086399\n40539754\n84981471\n62346197\n9219561\n80601620\n82363550\n14371944\n71244915\n43512864\n69110312\n28979822\n84800096\n16635769\n87391340\n14080737\n64069921\n56826090\n84595886\n72330334\n8488237\n21280413\n58173216\n91718567\n8526015\n29398288\n90969842\n8406349\n47431472\n92483674\n58135010\n61160316\n21985053\n36200041\n32185496\n21354159\n48549909\n67057505\n74721595\n1887071\n15029476\n50460495\n80541507\n32907881\n67185766\n37618519\n44020419\n13738378\n25070397\n36893555\n88619229\n88057599\n20403743\n35548886\n71216115\n16167242\n28561859\n22953819\n27072780\n49886184\n41586784\n58499476\n71811154\n17872944\n77816414\n92910736\n64017873\n77750659\n21356924\n11254218\n94854488\n45886142\n80697015\n13542184\n43524397\n83579015\n5329870\n45414747\n61304060\n97070283\n74263940\n6090966\n93897009\n85168033\n20343326\n71895608\n82623727\n22354327\n67398187",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "100\n2070889\n1\n74673054\n1\n24096511\n1\n1\n1\n100000000\n25731899\n1\n1\n1\n1\n100000000\n1\n50034945\n1\n1\n1\n1\n20406102\n71421005\n100000000\n100000000\n100000000\n30392809\n1\n1\n1\n100000000\n1\n80583504\n87293962\n1\n42526088\n24687116\n1\n65262476\n1\n68205940\n67895248\n87875433\n1\n1\n86908957\n79234353\n100000000\n1\n89949505\n1\n1\n46955306\n100000000\n57946591\n100000000\n100000000\n1\n1\n1\n100000000\n1\n94826820\n84021014\n1\n41501664\n1\n1\n72493169\n1\n100000000\n1\n1\n100000000\n100000000\n1\n54357379\n77605855\n62586037\n100000000\n1\n100000000\n1\n36796162\n1\n1\n51014618\n87331356\n1\n1\n100000000\n100000000\n1\n1\n1\n1\n1\n23895056\n63863560\n1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 100)"
    },
    {
      "input": "100\n100000000\n68627002\n100000000\n1\n18479645\n100000000\n100000000\n1\n1\n1\n100000000\n1\n91025118\n100000000\n1\n100000000\n100000000\n1\n59031525\n1\n1\n100000000\n1\n1\n99864794\n63657844\n1\n67476458\n1\n100000000\n33008730\n1\n1\n1276849\n100000000\n100000000\n1\n60544575\n1\n100000000\n1\n84535874\n100000000\n1\n54932954\n1\n84247096\n1\n100000000\n64541716\n100000000\n100000000\n100000000\n100000000\n100000000\n1\n100000000\n1\n100000000\n27190763\n100000000\n100000000\n34955012\n100000000\n1\n100000000\n1\n100000000\n100000000\n51087296\n46436660\n100000000\n1\n41166793\n1\n1\n100000000\n100000000\n1\n93029001\n46206742\n26306280\n1\n1\n100000000\n4099420\n1\n118804\n100000000\n1\n22873379\n30825065\n100000000\n1\n65361395\n83346053\n1\n19187591\n100000000\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 100)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:21",
  "total_test_cases": 20
}
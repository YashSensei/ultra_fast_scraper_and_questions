{
  "problem_code": "problems",
  "title": "Police Men",
  "tags": [],
  "text": "There is a country ofncities andn-1bidirectional roads you can go from any city to another using its roadsYou are a police man and there is a theif who is going to escape from the country using an airport in city 1 you are givenmqueries which of type \"a b\"which means the thief is in cityaand you are in citybyou should find if it's possible to catch him before he escape or not and find the city which you will catch him in if it's possible.You are moving at the same speed the thief moving at and the thief is taking the shortest path to city 1.If you arrived in a city in the same time as the thief you can catch him in it if you arrived before him you can wait for him.If there is more than one city you can catch him in print the nearest one to you.InputThe first line contains an integern(1≤n≤104)  thenn-1lines each contains two integers which means there is a road between cityuandvThen an integerq(1 ≤ q≤104)andqlines of form a b (1 ≤a , b≤n) which are the thief's position and your position.OutputFor each query print YES then a space then the city which you will catch him in if it's possible otherwise print NO.ExampleInput:51 21 32 44 541 21 15 42 3Output:NOYES 1YES 4YES 1",
  "sample_input": "Input:51 21 32 44 541 21 15 42 3Output:NOYES 1YES 4YES 1",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/POLICEMEN",
  "scraped_at": "2025-08-17 00:34:13",
  "test_cases": [
    {
      "input": "51 21 32 44 541 21 15 42 3",
      "expected_output": "NOYES 1YES 4YES 1",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5 8 5 3 3 10 6 1 8",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "5 3 3 2 6 8 4 10 6",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "6 8 2 10 6 1 10 8 10",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "3 84 74 44 49 50 43 97 80",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "61 95 39 71 3 1 54 73 43",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "84 15 84 61 15 84 50 86 55",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "12 74 48 96 69 73 20 78 13",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "52 66 35 11 18 27 54 1 55",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "9 26 17 50 42 22 18 12 34",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "25 37 7 31 40 40 29 52 52",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "11 6 20 21 36 18 28 31 33",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "26 50 40 31 27 6 49 45 52",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "32 23 9 6 45 51 23 21 8",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "6 49 42 10 14 41 38 31 35",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "6 19 44 9 32 28 41 29 48",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "104 104 104 104 104 104 104 104 104",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "104 104 104 104 104 104 104 104 104",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "104 103 2 2 2 103 103 104 104",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 104 1 103 103 103 2 104 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:21",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Power Factor Sum Sum (hard)",
  "tags": [],
  "text": "Here is a mixed edition ofDivisor Summation PoweredandAmazing Factor Sequence (medium).The powered factor sequenceForkan integer number, we define our powered factor sequence with:ak[0] = 0;  ak[1] = 1, andforn > 1, ak[n] = ak[n - 1] + sum({x^k | 0 < x ≤ n and n % x = 0}).InputFirst line of input contains an integerT, the number of test cases.Each of the nextTlines contains  three integersn, k, m.OutputFor each test case, printak[n]on a single line.As the answer could be a big number, you just have to output it modulom.ExampleInput:3\r\n3 1 10\r\n4 2 55\r\n5 3 97Output:8\r\n37\r\n43Constraints0 < T < 1010 < n < 1090 < k < 111 < m < 1017Numbersn, k, mare uniform-randomly chosen.For your information, there's two input files, the first one is 'easy' with n≤100.\r\nMy (1kB)-python code get AC around 0.96s. I have a much slower basic PIKE AC (4.8s).\r\n(Edit 2017-02-11 ; timings and TL updated after compiler changes)",
  "sample_input": "Input:3\r\n3 1 10\r\n4 2 55\r\n5 3 97Output:8\r\n37\r\n43",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/AFSK",
  "scraped_at": "2025-08-17 00:33:46",
  "test_cases": [
    {
      "input": "3\r\n3 1 10\r\n4 2 55\r\n5 3 97",
      "expected_output": "8\r\n37\r\n43",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1\n8",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "4\n9\n7\n3\n7",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "2\n2\n1",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "7\n66330330\n5203618\n3884507\n50029515\n40286476\n73637239\n42637094",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "6\n151558\n25376143\n9470358\n84052371\n5565227\n43636711",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "15\n46782543\n81397780\n58608120\n6321369\n65415562\n8741533\n13186806\n71742613\n32934895\n68473265\n98881717\n94071772\n88198341\n69082276\n55231220",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "11\n71391982\n77320736\n71999254\n92224858\n76714046\n9777147\n36082016\n53970982\n21549723\n20118136\n85719837",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "16\n52062625\n60935645\n3111677\n70415883\n87727156\n82549160\n56967775\n24760727\n79980092\n33488443\n12392130\n46536643\n49185450\n2107399\n50866730\n79955863",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "57\n55017\n53604\n51373\n97324\n21064\n95375\n25226\n82587\n23681\n9434\n12975\n62704\n5163\n68393\n49005\n29629\n96916\n3576\n65018\n33665\n92512\n90461\n76686\n28705\n93150\n62803\n74831\n85505\n79434\n70926\n99740\n93207\n80533\n77926\n48661\n16835\n48881\n74110\n88039\n76079\n71251\n51418\n3966\n13195\n67918\n95525\n6531\n84479\n38277\n94494\n3484\n75108\n30407\n71095\n92511\n55872\n67812",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "55\n9341\n79683\n4115\n84744\n3402\n36253\n53428\n46101\n65766\n98340\n37182\n27065\n63428\n85603\n18066\n58889\n98649\n44580\n25934\n399\n11445\n74403\n72889\n17799\n64633\n2250\n79101\n99791\n47716\n9689\n58706\n31566\n97860\n10414\n27940\n6285\n80836\n38854\n89916\n11188\n62133\n9417\n88322\n11898\n51521\n24213\n3563\n83937\n73187\n31972\n59903\n34560\n88651\n11011\n33174",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "47\n7304\n57821\n94286\n98029\n88567\n30458\n37089\n93511\n26279\n17901\n31892\n41084\n66432\n83827\n2430\n84310\n4133\n77717\n69311\n76934\n24413\n24492\n1168\n31514\n77458\n63022\n97772\n21569\n62920\n41549\n24456\n52380\n35620\n33421\n86255\n1771\n60462\n61237\n35491\n75944\n56764\n62715\n53714\n99471\n12511\n50102\n45003",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "87\n72451\n56191\n42269\n17546\n50127\n3921\n92014\n30063\n92526\n40623\n42088\n49106\n20698\n45607\n68100\n61884\n45907\n69244\n660\n63846\n69578\n11104\n76742\n82757\n42511\n88725\n83923\n63181\n61177\n33379\n5007\n40424\n55200\n86483\n63830\n84301\n91490\n82616\n80809\n76693\n26398\n55\n92542\n90265\n31865\n65719\n4069\n51552\n55878\n90286\n29015\n57788\n40962\n43322\n19398\n16136\n15208\n66765\n43255\n77882\n88113\n98207\n96787\n44352\n44063\n24721\n36010\n88787\n25172\n52305\n38186\n3345\n98919\n25199\n96414\n44333\n98234\n5163\n21937\n76278\n45306\n53454\n19720\n1129\n26661\n78145\n96100",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "63\n25780\n98516\n14457\n36662\n93476\n82294\n63117\n46500\n41114\n24958\n99659\n74374\n69172\n46483\n95229\n74243\n74494\n16651\n23858\n47716\n97601\n96641\n29567\n7399\n7913\n55111\n36889\n20714\n88379\n4139\n44768\n4373\n44612\n20310\n6931\n68436\n56938\n53930\n31949\n47153\n56227\n86998\n92990\n13869\n35849\n93554\n33583\n59249\n22813\n74621\n27871\n25020\n22141\n16933\n49094\n95344\n23622\n38033\n95175\n68600\n97417\n84203\n69965",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "88\n70377\n60283\n71688\n71670\n19496\n35476\n9744\n36720\n49517\n27309\n82019\n27244\n16755\n48499\n42983\n65500\n38980\n76657\n37798\n55847\n51749\n34682\n56001\n68173\n59388\n22438\n24498\n13048\n88217\n18924\n94157\n25147\n5136\n53744\n80012\n43313\n257\n68646\n53650\n34090\n44268\n60179\n30741\n95843\n54064\n70217\n14250\n48761\n65056\n87114\n60293\n62702\n2427\n65244\n82907\n17893\n65200\n52396\n15625\n81340\n91437\n4736\n62519\n37463\n23930\n37113\n26536\n46635\n10241\n65403\n91139\n15016\n66461\n23523\n7136\n19964\n52189\n11968\n69355\n2948\n14813\n68916\n84735\n99899\n58648\n35420\n41797\n16936",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "36\n95570\n98203\n13779\n89226\n9674\n98090\n9326\n33079\n90712\n12366\n34689\n50934\n89926\n91079\n83718\n26093\n13064\n56851\n98912\n4772\n71072\n54295\n23230\n60774\n83555\n74504\n38135\n26816\n6851\n53237\n79907\n94696\n35023\n65821\n17676\n4613",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "100\n60937979\n42713023\n42884807\n85014599\n91073428\n49355183\n78807986\n52500231\n61600725\n9190790\n33968089\n11415306\n77368265\n86910234\n29442762\n70579036\n9673715\n21455108\n44764860\n51676478\n81923616\n36930827\n55651755\n87615570\n99233002\n90976156\n94058738\n13341582\n83638793\n26968696\n40710542\n44818559\n55691826\n25008671\n45622851\n31011912\n5342822\n3563120\n8724985\n23469012\n56007607\n69738483\n31861169\n1855509\n91204234\n7758128\n36647833\n61182668\n76891594\n53190770\n87971632\n51114938\n46289296\n38905161\n64053517\n92643710\n82580245\n92550\n40156228\n40662000\n23976567\n89136488\n73365508\n60227548\n91809306\n14236927\n75351742\n31336450\n86349373\n77888888\n99284889\n3470524\n84019392\n48290833\n21823375\n67088288\n55204510\n53079723\n63846778\n10000468\n65216728\n23549412\n4389361\n2460601\n29101836\n34966104\n83477393\n26149338\n92717446\n24665812\n90270105\n61903317\n22987907\n91791710\n54714609\n42623497\n63263934\n78478297\n56813276\n6967114",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "100\n97077370\n30652553\n16524941\n16663112\n52618418\n66646021\n27663919\n80841018\n62429786\n35291259\n13397475\n56960903\n95699965\n43608668\n15268841\n85471826\n22304507\n54895304\n78857786\n4994245\n95394635\n72649867\n25355105\n32240610\n8347486\n9848742\n65179357\n2545643\n37258610\n46301042\n89719243\n70355800\n15279490\n53183666\n81672165\n55758598\n65198287\n47759933\n81221309\n58562001\n9133708\n40383883\n84910703\n38368627\n41065954\n63431283\n55314397\n74312966\n51891688\n73526064\n53629553\n93243727\n71931849\n32133621\n66388082\n7488215\n91350358\n25692704\n21750995\n97346699\n38007734\n83764755\n33158204\n98862082\n35659342\n56062167\n21281274\n98609956\n21275563\n28696114\n84227721\n67633469\n79065835\n13382166\n5201877\n23723746\n70176494\n36747866\n79247386\n43572345\n82673397\n51965924\n9741196\n35284625\n7111016\n5012418\n1600877\n58944094\n3043728\n26905527\n70165528\n13293960\n9570348\n21136631\n55533698\n83153891\n69933855\n87647416\n23570206\n10457303",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "100\n1\n59627874\n1\n58141127\n1\n91075098\n12921189\n1\n1\n1\n1\n63617623\n1\n16587595\n100000000\n100000000\n100000000\n88576295\n100000000\n33127613\n18078981\n62573265\n100000000\n100000000\n1\n91099850\n1\n100000000\n1\n100000000\n2577590\n100000000\n1\n15172607\n78116479\n85441826\n32585044\n1\n1\n1\n1\n41246423\n52422352\n1\n100000000\n79298313\n100000000\n100000000\n172371\n100000000\n59121000\n37406988\n100000000\n100000000\n100000000\n1\n100000000\n1\n16888572\n95791073\n100000000\n100000000\n100000000\n100000000\n1\n1711227\n100000000\n31609541\n26266730\n94587581\n50123602\n100000000\n93186389\n100000000\n58460089\n100000000\n38921428\n24930074\n50810658\n100000000\n1\n1\n100000000\n100000000\n41655256\n26143516\n72783142\n100000000\n51202605\n29903441\n100000000\n36659929\n100000000\n1\n1\n1\n100000000\n679143\n58497411\n46726547",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 100)"
    },
    {
      "input": "1\n71712367",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 1)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:19",
  "total_test_cases": 20
}
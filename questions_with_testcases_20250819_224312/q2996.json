{
  "problem_code": "problems",
  "title": "Where The Friends Meet!",
  "tags": [],
  "text": "As you might be knowing, Blackhood, Kira and BaZ are very good friends. They are going to meet after a long time (not that long though :p). They live in a country with N cities. Each city has a GDP (not necessarily distinct). The roads of the country are such that there is only one road connecting any two cities in the country. Kira and Blackhood decide to meet anywhere in the unique path between their cities (including their cities too). But BaZ is not ready to meet anywhere, since he likes numbers having at least K distinct prime factors, he agrees to meet only in those cities whose GDP is a number he likes. Given Blackhood's and Kira's home cities, you need to find the number of cities where they can meet. i.e. you need to tell the number of cities between Blackhood's and Kira's home city which have their GDP a number BaZ likes.InputFirst line of the input contains three integers N, representing the number of cities in the country, K (as explained above) and Q, the number of queries which are to be answered). (1 ≤ N, Q ≤ 200000, 0 ≤ K ≤ 100). Next line contains N integers, where the ith integer represents the GDP of the ith country (1 ≤ GDP[i] ≤ 1000000). The next N-1 lines contain two integers u and v, representing a road between city u and city v (1 ≤ u, v ≤ N). Then the Q following lines contain two integers u and v, representing Blackhood's and Kira's home cities.OutputFor each query, output an integer representing the number of cities where the three can meet.Note: Large input data, use FAST I/O. Be careful with certain languages too.ExampleInput:5 2 510 1 6 9 141 22 41 33 51 24 52 32 53 5Output:13232",
  "sample_input": "Input:5 2 510 1 6 9 141 22 41 33 51 24 52 32 53 5Output:13232",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/WTFM",
  "scraped_at": "2025-08-17 00:34:15",
  "test_cases": [
    {
      "input": "5 2 510 1 6 9 141 22 41 33 51 24 52 32 53 5",
      "expected_output": "13232",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "7 7 6 6 2 8 3 7 9 4 9 7 3 7 5 6",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "10 6 2 2 4 5 7 8 9 5 5 8 2 8 8 7",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "10 10 5 4 4 10 10 3 8 5 1 8 9 7 10 4",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "97 91 37 19 79 23 26 34 93 33 2 53 26 47 68 28",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "40 91 93 92 77 80 61 90 94 36 77 95 49 53 98 61",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "91 63 15 19 82 12 38 41 98 59 73 76 99 32 18 79",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "23 14 41 26 99 11 40 10 75 8 86 6 91 85 82 28",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "35 29 88 18 56 90 52 53 89 92 80 71 95 97 60 97",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "97 67 174 142 371 337 194 232 156 138 176 342 386 359 236 404",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "72 196 465 472 141 130 317 359 487 166 359 152 409 362 428 242",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "262 456 171 489 460 135 262 296 297 477 359 195 500 309 267 153",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "443 349 90 115 378 374 109 324 279 469 294 333 346 113 494 346",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "308 118 499 108 119 491 81 170 490 401 235 261 347 372 118 282",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "320 393 240 412 263 330 107 263 259 190 250 163 155 412 357 489",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "62 473 443 397 92 235 328 420 100 211 297 499 57 455 450 232",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 2 1 1 1000 1 2 1 999 999 1000 1 1000 999 2 1000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 1 1 1 1000 1 1000 2 2 999 2 2 999 999 2 1000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:22",
  "total_test_cases": 20
}
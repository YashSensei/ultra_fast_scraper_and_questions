{
  "problem_code": "problems",
  "title": "Dot Product Maximization",
  "tags": [],
  "text": "Given two vectors, a = (xa, ya), b = (xb, yb), their dot product is defined as follows:dp(a, b) = xa*xb+ ya*yb.Given N vectors in the plane, find a pair for each of them (among those given in the input) such that the dot product of the vector and its pair is maximal. You may pair a vector with itself too.InputThe first line of input contains a single integer N (1 ≤ N ≤ 200000).Each of the next N lines contain a pair of real numbers, xiand yi(0 ≤ |xi|, |yi| ≤ 100000),representing the i-th vector. xiand yiwill be rounded to 3 decimal places.OutputOutput N lines, i-th one containing the maximal dot product for the i-th vector from the input rounded to 3 decimal places.ExampleInput:40.000 1.0000.000 2.0001.000 1.0000.000 0.000Output:2.0004.0002.0000.000Explanation:Pair the first vector with the second, the second with itself, third with itself or with the second, and the last one with any of them.",
  "sample_input": "Input:40.000 1.0000.000 2.0001.000 1.0000.000 0.000Output:2.0004.0002.0000.000",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/DPMAX",
  "scraped_at": "2025-08-17 00:33:42",
  "test_cases": [
    {
      "input": "40.000 1.0000.000 2.0001.000 1.0000.000 0.000",
      "expected_output": "2.0004.0002.0000.000",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5 2 3 8 9 9 5 6",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "5 3 4 3 3 8 10 1",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "4 2 7 7 5 10 7 5",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "37 58 22 86 93 70 11 27",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "26 15 38 4 10 54 71 25",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "66 76 57 57 23 58 95 37",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "44 79 84 53 37 5 31 89",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "49 97 29 33 100 52 39 26",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "25956 59312 98119 55983 71097 75754 86201 51055",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "61671 94583 43961 24106 78435 17626 61899 23086",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "63700 60971 34764 58598 81911 77813 34680 79388",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "86023 58038 66282 20065 23488 43664 67239 64203",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "67835 51925 15090 30577 82665 89005 89899 50381",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "10009 14810 54222 43196 77756 64079 39773 10449",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "98811 24589 17742 18272 63823 93211 11846 91409",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "200000 200000 200000 200000 200000 200000 200000 200000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "200000 200000 200000 200000 200000 200000 200000 200000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "200000 1 2 199999 2 2 200000 200000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 200000 1 200000 1 199999 2 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:17",
  "total_test_cases": 20
}
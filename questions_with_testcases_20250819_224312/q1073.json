{
  "problem_code": "problems",
  "title": "Projections Of A Polygon",
  "tags": [],
  "text": "You are given a convex polygon on Cartesian coordinate system. It has projections on X and Y-axis. You can arbitrarily rotate this polygon. What minimum and maximum sum of projections can you achieve?InputFirst line contains one integer number N (3 ≤ N ≤ 100) - number of polygon's vertices. Following N lines contain vertex coordinates Xiand Yi. All numbers are integers. Vertices are given in clockwise or anticlockwise direction. No two vertices coincide. No three consecutive vertices lie on the same line. All coordinates do not exceed 10000 by absolute value.OutputWrite minimum and maximum value of sum of the polygon's projections. Separate them by a space. Your answer should not differ with the correct one more than 10-6.ExampleInput:4\r\n0 0\r\n0 1\r\n1 1\r\n1 0Output:2 2.828427124",
  "sample_input": "Input:4\r\n0 0\r\n0 1\r\n1 1\r\n1 0Output:2 2.828427124",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/KPPOLY",
  "scraped_at": "2025-08-17 00:33:48",
  "test_cases": [
    {
      "input": "4\r\n0 0\r\n0 1\r\n1 1\r\n1 0",
      "expected_output": "2 2.828427124",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4\n2\n4\n7\n2",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n1\n6\n10\n4\n4",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n6\n6\n2\n6\n4",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "9\n41848064\n4373973\n73405086\n14141530\n74984059\n91235637\n84267959\n51112368\n97114505",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "5\n19077870\n81275118\n68739695\n79635574\n38780794",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "5\n4172703\n31508104\n55659870\n4954473\n90543389",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "13\n77710436\n23086602\n83107343\n47415714\n41292745\n94056915\n5565168\n72053611\n14620505\n51466948\n87911742\n84458106\n69353093",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "18\n27557091\n13362347\n25281727\n78204716\n22881999\n53565446\n85202067\n59528368\n66389568\n23676163\n36502274\n78737291\n41898137\n18110991\n59408439\n75903961\n58530331\n78891397",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "23\n3084\n38236\n39166\n16239\n40780\n55137\n47662\n70500\n11176\n92004\n4698\n69871\n17393\n78438\n23325\n44347\n61771\n67841\n246\n44310\n26083\n31359\n96952",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "93\n77551\n20605\n38647\n77700\n80817\n53611\n54641\n43858\n13965\n91765\n66148\n65145\n45256\n58230\n91871\n48743\n56746\n60058\n75896\n30296\n40090\n70919\n53194\n97207\n73574\n43551\n20418\n77373\n13913\n91506\n66325\n8958\n91570\n88400\n83996\n31758\n93011\n53212\n55601\n60954\n1610\n5728\n81696\n8009\n49603\n51844\n84289\n78075\n90557\n35353\n30898\n65270\n24634\n61703\n24854\n67557\n48750\n92407\n79414\n46351\n74715\n47312\n13697\n41704\n29975\n76213\n22898\n93559\n65755\n53127\n49385\n81751\n72110\n48812\n4391\n65895\n53967\n39691\n73957\n44900\n21112\n66050\n39411\n70627\n60140\n22763\n86770\n15067\n47890\n63782\n54519\n59573\n71981",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "71\n61437\n46231\n21895\n55205\n70964\n51359\n177\n28609\n83740\n18127\n94960\n53310\n72337\n43188\n32022\n5887\n12608\n27815\n89861\n27441\n1808\n50184\n33365\n52449\n26949\n94649\n81816\n78293\n98848\n82065\n38182\n5256\n45361\n64679\n8036\n9164\n30690\n70915\n70382\n61182\n32321\n53204\n82211\n30874\n25940\n8920\n61187\n69112\n16254\n12906\n99668\n47315\n89739\n83625\n2895\n98281\n4295\n75828\n65739\n63251\n44933\n29661\n14870\n86816\n70279\n20492\n88995\n57382\n2299\n91084\n20794",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "87\n71904\n10573\n95647\n77504\n12044\n9644\n63391\n51529\n37008\n76253\n14676\n56950\n87342\n10320\n17315\n72100\n22840\n56675\n98844\n13406\n30536\n21304\n73173\n2826\n81784\n91374\n70886\n30875\n80741\n84356\n79682\n49348\n64487\n64085\n67662\n93527\n66401\n47668\n56771\n1302\n8501\n91148\n71122\n36876\n2677\n47610\n13918\n92166\n70039\n29762\n68765\n46908\n14619\n48059\n24350\n85528\n61348\n40281\n74281\n96644\n48220\n84828\n12298\n78899\n42931\n77964\n74695\n31158\n94873\n82607\n85075\n13142\n14878\n39714\n35228\n14666\n19011\n88822\n77101\n38360\n28916\n32880\n74170\n7255\n49755\n39393\n21504",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "92\n9112\n97365\n36509\n89479\n94859\n63114\n28566\n81198\n86302\n53943\n1392\n42615\n46184\n75330\n22547\n98583\n64289\n29014\n81179\n60668\n70753\n24774\n10407\n31243\n39004\n6322\n12725\n98845\n78514\n26013\n39632\n58017\n28689\n15536\n86189\n46602\n93820\n17175\n98725\n66594\n23496\n42539\n43708\n55498\n75787\n20605\n71617\n60208\n2027\n14790\n7403\n97490\n32502\n37925\n82857\n70886\n39004\n6510\n27377\n69763\n91937\n43619\n62594\n11960\n42015\n8069\n86520\n80752\n8645\n2404\n56289\n19688\n65643\n60887\n74346\n69166\n86967\n68363\n37001\n35435\n70349\n41837\n96583\n22180\n65842\n23044\n42313\n95180\n40937\n81517\n48825\n23052",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "100\n62339\n26190\n45550\n6155\n81958\n51473\n176\n31370\n86074\n84135\n82365\n20761\n43667\n13866\n65672\n65580\n80246\n82260\n85377\n18595\n62514\n65656\n23493\n75539\n45237\n48526\n15038\n65070\n18094\n15528\n56463\n81173\n90079\n80456\n99980\n66314\n54917\n4453\n78000\n93909\n39190\n55087\n61280\n57313\n10856\n44206\n20904\n45475\n30997\n37237\n4786\n38549\n74330\n87843\n74108\n24189\n24128\n95918\n68135\n8072\n61547\n18132\n46809\n47181\n56490\n30379\n88646\n92527\n83283\n10494\n40889\n20457\n85451\n62136\n61197\n54406\n18986\n77401\n85996\n25082\n12220\n9353\n15691\n28081\n22549\n28610\n69023\n90961\n95748\n46205\n44756\n58174\n23082\n52363\n65639\n90051\n28616\n9415\n3974\n63641",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "94\n4831\n11926\n43909\n22272\n4060\n94071\n96114\n76178\n39005\n82770\n55048\n17063\n63075\n17629\n51375\n62260\n70608\n1290\n4954\n59109\n38032\n28615\n32061\n37091\n5605\n85445\n85174\n99432\n9989\n89573\n67356\n86075\n11484\n25645\n11602\n8104\n16924\n62044\n27786\n82893\n57395\n80244\n82966\n70901\n32344\n13900\n36016\n6854\n50751\n89322\n53533\n43645\n47569\n47981\n89933\n64358\n52447\n57289\n68212\n63052\n79692\n3578\n35955\n54627\n49817\n15114\n81292\n36669\n47167\n90162\n18730\n14819\n26362\n87677\n93940\n40860\n30572\n39863\n67616\n61922\n50626\n89543\n92023\n76276\n27212\n82345\n73046\n91957\n72282\n35070\n95381\n79325\n31593\n96603",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "100\n49870630\n36040228\n98105138\n42910601\n97388614\n33364932\n67968866\n11086441\n50031974\n64935270\n65619447\n9641\n48117009\n74000685\n78942458\n24747025\n59148251\n48815121\n42678836\n22531295\n93409338\n54589088\n27612076\n5125526\n68458681\n7360710\n25396473\n71005990\n72802151\n96013927\n72857590\n1874406\n52575322\n1568369\n94688838\n23773801\n48798041\n45413693\n48013225\n83134874\n92422114\n93876349\n41208355\n27676763\n46168529\n10606026\n14005630\n68469601\n90279802\n62282096\n28321485\n46756974\n1338600\n43927519\n79735933\n38792142\n54027023\n66863305\n82693987\n13581931\n65455474\n64283028\n96460130\n63733451\n84786177\n81872033\n33532636\n96164334\n57906577\n2666274\n52321924\n17449787\n3552299\n71638402\n61425677\n10399527\n29433364\n73165845\n52845639\n66943167\n31182959\n75374296\n41457193\n48017686\n20041345\n7269521\n33859724\n38004325\n31493154\n81406843\n28328371\n85713579\n9194050\n73733570\n57689684\n53618068\n53287106\n22539043\n43024466\n14851323",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "100\n21441559\n95255392\n36925866\n65577846\n82510458\n31243696\n2182950\n42812946\n77451868\n99593993\n57246138\n12350300\n58091592\n30482291\n90955817\n67850037\n33227157\n52595565\n52624896\n15617960\n16499044\n87036859\n18158278\n94366432\n9926322\n92516556\n96254729\n53595587\n91747419\n2527096\n39034149\n47501722\n63327099\n18171750\n97092741\n60075125\n16739878\n10105113\n12156444\n88585438\n74789078\n65470964\n59600687\n88013137\n31032093\n77323063\n85145549\n62889382\n3867450\n78059234\n91915712\n71515734\n39613049\n88753888\n65296592\n69508888\n69355114\n80496498\n76442981\n96352670\n60813655\n1320611\n90607023\n49872356\n37462934\n42665998\n30846257\n68101979\n34599264\n90050192\n15303278\n22555632\n52544269\n66343205\n39834345\n30500682\n76414864\n53866245\n96018080\n17058880\n5893431\n68596007\n95823272\n23883437\n22404404\n72360211\n28878314\n58331971\n10293613\n88759917\n91044328\n90146763\n25167101\n93732444\n16053308\n7375670\n20621469\n41645835\n72553655\n90029379",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "2\n1\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 2)"
    },
    {
      "input": "100\n1\n100000000\n43121673\n30617717\n1604925\n83812642\n100000000\n100000000\n53339209\n1\n29433968\n100000000\n1\n1\n91800895\n55285456\n100000000\n100000000\n100000000\n5982046\n100000000\n1\n100000000\n1\n100000000\n100000000\n1\n1\n100000000\n36210101\n92547487\n100000000\n35966352\n100000000\n38479762\n17498811\n14127184\n100000000\n1\n1\n1\n1\n100000000\n100000000\n20363742\n100000000\n100000000\n1\n100000000\n86620204\n50576784\n100000000\n1\n100000000\n42985971\n100000000\n34700889\n20261576\n1\n100000000\n67776730\n45591716\n77343617\n1\n24319582\n1\n1\n100000000\n100000000\n100000000\n1\n100000000\n100000000\n1\n75684350\n63516397\n5276610\n100000000\n100000000\n1\n100000000\n100000000\n1\n100000000\n1\n74487170\n2869527\n1\n1\n50906813\n53018249\n100000000\n1\n100000000\n1\n42466023\n100000000\n1\n38069245\n30514572",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 100)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:16",
  "total_test_cases": 20
}
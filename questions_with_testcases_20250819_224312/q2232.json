{
  "problem_code": "problems",
  "title": "Amazing Prime Sequence",
  "tags": [],
  "text": "Bablu is very fond of Series and Sequences...After studying Fibonacci Series in Class IX, he was impressed and he designed his own sequence as follows...a[0] = a[1] = 0For n > 1, a[n] = a[n - 1] + f(n), where f(n) is smallest prime factor of n.He is also very fond of programming and thus made a small program to find a[n], but since he is in Class IX, he is not very good at programming. So, he asks you for help. Your task is to find a[n] for the above sequence....InputYour code will be checked for multiple test cases.First line of Input contains T (≤ 100), the number of test cases.Next T lines contain a single number N. (1 < N < 107).OutputSingle line containing a[n] i.e. nth number of the sequence for each test case.ExampleInput:3\r\n2\r\n3\r\n4Output:2\r\n5\r\n7",
  "sample_input": "Input:3\r\n2\r\n3\r\n4Output:2\r\n5\r\n7",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/APS",
  "scraped_at": "2025-08-17 00:33:48",
  "test_cases": [
    {
      "input": "3\r\n2\r\n3\r\n4",
      "expected_output": "2\r\n5\r\n7",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5\n6\n2\n7\n10\n6",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "3\n3\n8\n8",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "2\n8\n8",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "20\n74788297\n25035732\n20369031\n47165293\n57857038\n62927790\n26720580\n58222760\n58569630\n66370743\n23766185\n61673257\n69174743\n53176890\n52799396\n97620231\n23482001\n81839328\n26463882\n16573591",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "5\n41999915\n72608860\n90801721\n82384844\n73638468",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "19\n92478436\n68164290\n10761290\n90369729\n64480588\n12221988\n19065382\n39576117\n33061880\n3404294\n96243060\n47786123\n76199742\n94620868\n74833731\n63561052\n10325128\n14771891\n13965256",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "12\n21360318\n70051207\n64205572\n57673830\n64860919\n81882230\n1570298\n3931173\n99120669\n33770412\n15967570\n60817780",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "11\n99175918\n70101049\n99976178\n75486090\n40008125\n24684331\n63664568\n28330724\n54231317\n49073706\n39219625",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "36\n43796\n57578\n45269\n78752\n73377\n51312\n67608\n4426\n20746\n64930\n87264\n16554\n17419\n38061\n53805\n28841\n32789\n36726\n42396\n66941\n61794\n74586\n27052\n76766\n62454\n54347\n59603\n82225\n46305\n21047\n30390\n68995\n4564\n93037\n41966\n71033",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "49\n41136\n1402\n62250\n45049\n43048\n16115\n84665\n83391\n50051\n66433\n57788\n80579\n30469\n72750\n26092\n2948\n84456\n47580\n85774\n44627\n54049\n87873\n94846\n55581\n88005\n96584\n37278\n16106\n24134\n28228\n20408\n7644\n52193\n48823\n61400\n47380\n58455\n15868\n66118\n68437\n34746\n64329\n34195\n62580\n90421\n34366\n40441\n61212\n88449",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "93\n41963\n89675\n69038\n50939\n88507\n54923\n56832\n59312\n49382\n24003\n71946\n6792\n51635\n78113\n54186\n2618\n7848\n62342\n63201\n49736\n8823\n43780\n70340\n31139\n91201\n77337\n94462\n42171\n17017\n84361\n7419\n88084\n72582\n60501\n703\n7976\n56311\n27918\n46510\n73129\n31550\n43452\n27993\n93714\n21310\n32979\n23705\n52497\n16401\n35767\n6469\n11361\n84556\n57996\n88607\n19055\n79059\n33444\n90321\n40627\n9251\n63123\n51537\n33065\n94542\n41986\n91162\n86421\n55870\n38755\n41416\n56023\n32670\n27554\n30739\n89722\n92493\n4186\n4535\n16099\n40037\n85962\n2974\n650\n49576\n47553\n65664\n41394\n3023\n16409\n73687\n60976\n60124",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "29\n49531\n49915\n72570\n43972\n74100\n97624\n99125\n76607\n65100\n72307\n70475\n82093\n1361\n62846\n54672\n22940\n77001\n70781\n75224\n40814\n27314\n5927\n86418\n31152\n10544\n85112\n21478\n29524\n57968",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "72\n2699\n9804\n18201\n11218\n60372\n46871\n91587\n27176\n55914\n57571\n44555\n16728\n28337\n71561\n84584\n88749\n29688\n50383\n34078\n92145\n84153\n65704\n12712\n97663\n85437\n5843\n71374\n88179\n72040\n94630\n50619\n28156\n95725\n59607\n50822\n87366\n14345\n32382\n29328\n30154\n49771\n26679\n20572\n81289\n17175\n72313\n71984\n95894\n75300\n93563\n60815\n84257\n15657\n43302\n53729\n3207\n73618\n20631\n48896\n39802\n96734\n118\n39524\n61040\n76315\n36002\n53106\n65649\n89288\n31637\n7876\n61366",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "105\n31323\n5951\n65038\n26363\n78379\n11923\n42227\n69468\n84486\n59954\n74000\n28090\n27714\n98392\n67519\n58049\n12268\n57211\n18815\n20957\n59452\n13274\n90537\n75647\n45224\n89900\n42147\n69670\n45213\n63940\n38904\n27318\n94375\n68993\n19618\n22501\n58312\n69604\n91178\n1209\n23378\n76487\n69656\n37511\n87149\n75482\n99855\n39337\n78318\n27381\n85879\n51394\n33422\n64456\n35816\n26398\n50771\n66886\n84616\n24034\n26518\n65825\n76840\n27603\n36160\n56687\n42812\n607\n44198\n76474\n51695\n62953\n39758\n56101\n23011\n30386\n85973\n55962\n52431\n82244\n38532\n79107\n14948\n78471\n81301\n88713\n64699\n68566\n21494\n51701\n93196\n31487\n17523\n94105\n20011\n20874\n82835\n98517\n35412\n90861\n3874\n25053\n84963\n99954\n80268",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "74\n38313\n17083\n80398\n38408\n95022\n63598\n31796\n51633\n43094\n13724\n93296\n70795\n38341\n83667\n1903\n7832\n8015\n44251\n63107\n895\n86434\n79245\n94063\n92647\n89691\n7010\n17808\n516\n26744\n70486\n90311\n62513\n94299\n5432\n25462\n189\n40550\n12698\n10000\n81914\n16438\n52218\n596\n74494\n62565\n71541\n59584\n52978\n40971\n78376\n6673\n75462\n82698\n90872\n1079\n22817\n3745\n86897\n63629\n53816\n43116\n10755\n49137\n26493\n49941\n28386\n97926\n27466\n10993\n17379\n5796\n41296\n68631\n74921",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "107\n89477491\n1402234\n6434022\n9273352\n75697210\n49152532\n22133359\n92714811\n69208442\n8715850\n47131664\n48039286\n33970526\n96040280\n10195302\n90464211\n18727115\n2051698\n27626623\n25808859\n26242006\n68885860\n8198460\n98277079\n69943767\n57944638\n99589565\n13450974\n45263216\n75582814\n31929731\n22856203\n11015224\n15893630\n42123661\n59695477\n39134927\n64032586\n34233759\n39903855\n64773721\n1364690\n54758238\n18897017\n28832183\n18050581\n36007675\n24874354\n17298682\n47662181\n940621\n18923075\n69868588\n32878056\n57388116\n66307318\n20883133\n84421401\n32695956\n79103680\n75562175\n31668896\n68501096\n16433840\n36844431\n99572268\n28749841\n68826497\n78841596\n38915886\n2852297\n83726266\n27015853\n87840689\n12884648\n49175616\n75156067\n57685498\n98106900\n53296493\n25508172\n76056255\n22892969\n81048977\n733130\n38592884\n36784901\n27599070\n4994755\n59801836\n87814074\n65229634\n82303836\n4001996\n99860499\n67683568\n14641261\n99864106\n7687776\n12984730\n32289254\n89257530\n84550664\n9034415\n34763552\n54477992\n63940951",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 107)"
    },
    {
      "input": "107\n7405331\n45327977\n46345155\n13044542\n60822081\n71048198\n13749552\n38694084\n64138470\n72625111\n50522813\n90338711\n14608613\n1156158\n86773692\n93114423\n9152285\n38158397\n39206821\n83495378\n21462075\n19254974\n60218033\n2086375\n16224001\n19207016\n25908767\n45749751\n81316854\n2737037\n14381183\n32539320\n80280817\n58079162\n45890698\n80128448\n3858186\n66772973\n76705695\n9675600\n59663379\n51147644\n17145409\n294990\n4683665\n40502931\n72014835\n48433945\n41726147\n43542431\n91782320\n30680177\n36388508\n85213858\n63305009\n61202505\n47981065\n7020442\n61553832\n89189611\n97963352\n79019362\n81550362\n55196571\n25050504\n97581414\n30752542\n66716499\n66392894\n80037101\n20797388\n48619211\n56414978\n92524823\n64707277\n52811178\n35037802\n81458344\n70382315\n46405987\n2631261\n45888445\n1322577\n5379412\n12150565\n14555263\n58481216\n53677322\n81035309\n51998943\n61556\n6610276\n11937058\n87478258\n72207829\n15467594\n1238450\n91190925\n80158611\n65287769\n85715512\n34543550\n32721231\n15665932\n46449084\n2203092\n56699264",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 107)"
    },
    {
      "input": "107\n100000000\n100000000\n1\n67902410\n10629234\n100000000\n1\n100000000\n100000000\n36535433\n74445597\n100000000\n1\n16199469\n1\n1\n76054286\n1\n100000000\n67338936\n83784823\n46968568\n1\n25329403\n1\n100000000\n100000000\n1\n31911526\n100000000\n100000000\n23628264\n1\n43498885\n100000000\n100000000\n1\n100000000\n1\n100000000\n1\n83343862\n100000000\n81766043\n77133259\n100000000\n100000000\n100000000\n100000000\n1\n67505024\n96092638\n100000000\n7415871\n15418808\n88063600\n100000000\n100000000\n63525109\n100000000\n2929632\n1\n1043839\n10055575\n1\n100000000\n1\n1\n90714113\n100000000\n100000000\n1\n98569701\n100000000\n1\n1\n100000000\n100000000\n100000000\n1\n100000000\n90037148\n1\n1\n4011297\n100000000\n1\n1\n27483005\n100000000\n41695627\n77432451\n1\n19255978\n100000000\n36218032\n40798616\n21036979\n83464473\n1\n1\n59435022\n1\n7513563\n28568439\n1\n1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 107)"
    },
    {
      "input": "107\n18662444\n1\n100000000\n70215322\n94598272\n1\n19770353\n100000000\n1\n1\n100000000\n42772571\n73968791\n41739598\n1\n7387359\n21503561\n100000000\n100000000\n1\n1\n59159480\n100000000\n100000000\n1\n9213155\n100000000\n1\n1\n1446185\n62578158\n1\n1\n21053324\n1\n1\n1\n17728043\n1\n23217613\n100000000\n100000000\n100000000\n1\n46695735\n1\n100000000\n28908803\n1\n100000000\n7408602\n23905394\n69709340\n18114808\n41872505\n100000000\n100000000\n1\n100000000\n1\n100000000\n1\n100000000\n100000000\n99574961\n1796200\n1\n100000000\n1\n1\n86928982\n94031924\n1\n100000000\n100000000\n1\n1\n94980499\n39270723\n28697955\n65845636\n1\n100000000\n100000000\n100000000\n1\n1\n100000000\n100000000\n100000000\n100000000\n1\n100000000\n1\n100000000\n1\n100000000\n100000000\n1\n1\n100000000\n58731141\n100000000\n12515474\n1\n100000000\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 107)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:19",
  "total_test_cases": 20
}
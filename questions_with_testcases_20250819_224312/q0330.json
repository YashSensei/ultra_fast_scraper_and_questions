{
  "problem_code": "problems",
  "title": "Paint templates",
  "tags": [],
  "text": "The Painter's Studio is preparing mass production of paintings. Paintings are going to be made with aid of square matrices of various sizes. A matrix of sizeiconsists of 2irows and 2icolumns. There are holes on intersections of some rows and columns. Matrix of size 0 has one hole. Fori> 0, matrix of sizeiis built of four squares of size 2(i-1)*2(i-1). Look at the following figure:Both squares on the right side and the bottom-left square are matrices of sizei-1. Top-left square has no holes. Pictures are constructed in the following way. First, we fix three non-negative integersn,x,y. Next, we take two matrices of sizen, place one of them onto the other and shift the upper onexcolumns right andyrows up. We place such a pattern on a white canvas and cover the common part of matrices with the yellow paint. In this way we get yellow stains on the canvas in the places where the holes in both matrices agree.ExampleConsider two matrices of size 2.The upper matrix was shifted 2 columns right and 2 rows up. There are three places where holes agree.TaskWrite a program that for each test case:reads the sizes of two matrices and the numbers of columns and rows that the upper matrix should be shifted by, from the standard input;computes the number of yellow stains on the canvas;writes the result to the standard output.InputThe number of test casestis in the first line of input, thenttest cases follow separated by an empty line.There is one integern, 0 ≤n≤ 100 in the first line of each test case. This number is the size of matrices used for production of paintings. In the second line there is one integerxand in the third line one integery, where 0 ≤x,y≤ 2n. The integerxis the number of columns andyis the number of rows that the upper matrix should be shifted by.OutputFor each test case your program should produce one line with exactly one integer - the number of stains on the canvas.ExampleSample input:1\r\n2\r\n2\r\n2Sample output:3",
  "sample_input": "Sample input:1\r\n2\r\n2\r\n2Sample output:3",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/PAINTTMP",
  "scraped_at": "2025-08-17 00:33:20",
  "test_cases": [
    {
      "input": "Sample input:1\r\n2\r\n2\r\n2Sample output:3",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3\n3\n7\n7",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "4\n4\n1\n1\n6",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n9\n1\n7\n1\n6",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "19\n86703416\n61236408\n76291249\n982761\n41803382\n17521329\n35610646\n34182041\n11020297\n26240575\n59492790\n87583341\n89741972\n21356539\n66595698\n49818469\n92479932\n32743745\n75868389",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "17\n19734264\n14776433\n29893411\n89858462\n52574066\n89358929\n74778630\n28734388\n89735036\n71054584\n87505101\n57311821\n75060421\n30497044\n80652711\n9412846\n58870570",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "10\n81371656\n91851003\n36855177\n14365504\n69498774\n47219509\n31190777\n67370152\n74516571\n38071950",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "17\n97838920\n46202985\n89107881\n1153906\n87207405\n97870293\n49182168\n75473964\n36823821\n63109827\n22631102\n90859488\n47067212\n91400267\n43872919\n60046940\n2280306",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "12\n53391841\n97079825\n20925974\n21162179\n77226127\n35606077\n92090895\n7192676\n47457958\n37933962\n58847475\n19621291",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "78\n85174\n51626\n51813\n49782\n16393\n26055\n20014\n34765\n9122\n30404\n63803\n87071\n56509\n26086\n59852\n72931\n5406\n66402\n89175\n89437\n64957\n72916\n56091\n51493\n99784\n74297\n49344\n84952\n66434\n28904\n93015\n49650\n7624\n10352\n67200\n72861\n60085\n60613\n43380\n94690\n88596\n22325\n6004\n83969\n56056\n39740\n8191\n20050\n62766\n51723\n64749\n57100\n51753\n95567\n45808\n35924\n4991\n81152\n14991\n89971\n14926\n86213\n50642\n9430\n11506\n53941\n26814\n11181\n21345\n72049\n95866\n44312\n42307\n20373\n29839\n64220\n65219\n87096",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "94\n32560\n83029\n92926\n12052\n31933\n78485\n16762\n13135\n9406\n29316\n85234\n47828\n17567\n4563\n77934\n31670\n5084\n92515\n25432\n15059\n73904\n10619\n81235\n14966\n13386\n16694\n95253\n52592\n82361\n97928\n73229\n54606\n79147\n38879\n58634\n80490\n35215\n43293\n39996\n54168\n94467\n74909\n92577\n14107\n68374\n35423\n38278\n14931\n42891\n75355\n93933\n86041\n45516\n68866\n90290\n50412\n48878\n19904\n20725\n69526\n89348\n60190\n36316\n11292\n30547\n34954\n58171\n47850\n51508\n23989\n35522\n76708\n83866\n3\n44094\n91570\n30081\n46497\n80022\n61369\n59283\n67776\n91134\n92111\n73426\n21249\n49745\n55150\n85587\n33380\n91923\n98716\n8582\n16126",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "21\n19109\n26847\n88707\n33\n85643\n26785\n76288\n49723\n75292\n86579\n19770\n82395\n12223\n87965\n41044\n15864\n18313\n2865\n22266\n65381\n63307",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "74\n98946\n15127\n1426\n55735\n4121\n76841\n13911\n47386\n31907\n73260\n59444\n83155\n88167\n71905\n62164\n4857\n40614\n79210\n51204\n18694\n40377\n54708\n57474\n99648\n33789\n64362\n35106\n35189\n23999\n27548\n23252\n57100\n6086\n26415\n48400\n77\n83945\n97615\n29946\n85607\n69536\n31653\n60211\n21392\n72010\n91521\n83227\n32671\n10620\n89195\n22931\n84751\n89691\n27514\n48594\n48439\n92951\n56982\n10021\n77790\n91430\n28074\n80749\n54611\n20866\n62844\n54768\n43635\n75741\n50734\n51285\n80940\n4481\n67628",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "92\n46051\n17115\n35007\n85102\n31411\n86474\n90515\n2102\n30618\n36405\n40356\n76579\n54616\n20147\n54088\n26281\n67847\n74030\n63575\n82266\n41182\n58019\n79973\n27757\n26703\n90106\n10772\n8841\n67103\n1803\n10443\n41933\n7373\n13258\n94301\n47588\n7454\n62287\n2893\n59492\n967\n23494\n80529\n47499\n65857\n16725\n74271\n64743\n43436\n78113\n17416\n97810\n66372\n60428\n2434\n16496\n62531\n48726\n67643\n26609\n80548\n5424\n90428\n36028\n82364\n54781\n96505\n4132\n49974\n68820\n2372\n70224\n68836\n13377\n4313\n9161\n66408\n34286\n71876\n10160\n65171\n18975\n53871\n59574\n66015\n67647\n37622\n56522\n96120\n31856\n13287\n82578",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "30\n44203\n75016\n32091\n23304\n19229\n54927\n52978\n33436\n40612\n26310\n12642\n83777\n39051\n713\n92300\n79661\n67138\n13866\n21638\n8682\n72298\n91517\n13578\n71287\n72928\n30932\n68936\n4582\n40076\n99074",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "98\n1405\n12329\n2256\n29594\n58132\n41711\n18687\n95543\n77691\n16149\n6582\n83853\n27325\n9965\n23535\n40548\n37274\n75946\n21096\n41360\n14924\n84433\n11681\n50210\n69305\n69006\n3068\n58008\n13367\n46129\n67505\n83413\n3600\n7916\n43558\n28625\n11609\n12655\n16331\n27502\n58377\n63613\n18900\n79694\n53075\n97524\n96640\n55884\n86544\n89903\n77167\n12796\n64117\n53765\n20685\n53257\n38807\n4216\n79875\n40682\n86261\n8668\n67823\n11736\n86423\n47731\n84382\n3884\n58139\n98439\n80899\n87915\n50996\n3735\n91761\n19255\n20980\n46967\n32790\n11418\n56895\n62064\n60883\n26069\n56018\n66849\n10623\n13409\n17011\n32081\n67607\n68042\n19294\n15267\n69762\n59964\n1199\n10754",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "100\n45224540\n84596921\n53715537\n2498952\n62425454\n23571576\n2292954\n68928158\n31103253\n81654706\n79768187\n57505539\n70321310\n72477717\n1178777\n8970664\n912393\n77550213\n16346675\n31831230\n56755566\n10964495\n733866\n4508303\n85288884\n18036340\n31675173\n97271723\n15156440\n53472751\n5214257\n78889215\n5922472\n70407685\n5878459\n78881046\n38634492\n36905121\n79437925\n7291885\n8479847\n7475181\n37586415\n37041218\n33458908\n622507\n67304944\n39202903\n63541956\n72181136\n31470214\n13962793\n31278951\n9871721\n77950850\n66724019\n17253415\n13874384\n29491922\n59222843\n86604628\n50924940\n85827914\n41969084\n92888993\n37833609\n27871674\n14768474\n55310803\n42041915\n81867338\n57769990\n37195174\n36738233\n97729293\n67323387\n85419518\n45648767\n30733868\n43147552\n23255075\n33493990\n19232325\n47162568\n39988596\n56159233\n73824678\n44021358\n88053347\n24659922\n44253564\n43077503\n96777220\n75708342\n68475131\n20675505\n68492848\n57555499\n67443990\n85547109",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "100\n58952131\n4349717\n57767276\n72148043\n53077590\n61365726\n31520056\n29399637\n51333839\n31290681\n49018509\n73823658\n43489824\n82341654\n83126450\n56886814\n6603810\n76527351\n1539478\n76957993\n74816277\n43900060\n53041002\n17822810\n85579979\n35084698\n99654920\n6098748\n93929796\n71200651\n68424639\n54735878\n27589798\n91885674\n6761231\n78900452\n16695992\n94617483\n81518170\n53153417\n19258820\n19161852\n33698859\n98969465\n71544393\n29852307\n89730794\n59175736\n922117\n17376402\n98963617\n42006268\n13343419\n56215451\n56555387\n84783289\n32954875\n43207621\n46444038\n92964978\n68165586\n88106731\n81012534\n52074790\n20342863\n10392601\n15752117\n65370134\n34112490\n27497234\n21036769\n45733880\n27125122\n85501992\n17514197\n72291139\n33179753\n44623268\n99908342\n50059230\n47933369\n25857285\n29942643\n37177092\n87022214\n39627315\n67312375\n85352238\n16314915\n14281806\n51508571\n3736760\n24412747\n21466752\n38765392\n3614144\n86869611\n73947338\n65245809\n45878291",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "1\n1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 1)"
    },
    {
      "input": "100\n100000000\n11854880\n100000000\n100000000\n82280690\n1\n9162779\n100000000\n1\n29891459\n56294268\n1\n1\n100000000\n100000000\n1\n4189148\n1\n100000000\n1\n100000000\n38732130\n100000000\n1\n100000000\n1\n1\n1\n100000000\n100000000\n1\n1\n92749131\n1\n6197300\n100000000\n1\n1\n100000000\n81862974\n56301921\n1\n100000000\n100000000\n1\n33373953\n67570717\n1\n1\n1\n65765029\n1\n51169504\n56394913\n1\n1\n1\n95070210\n27839257\n88421388\n1\n89607253\n1\n100000000\n100000000\n100000000\n1\n100000000\n52324597\n1\n100000000\n1\n1\n1\n100000000\n15325017\n100000000\n51869457\n1\n57144973\n1\n100000000\n1\n18382516\n100000000\n100000000\n1\n100000000\n52659223\n53848902\n48839398\n87570390\n100000000\n100000000\n20002688\n1\n1\n60948141\n1\n80656685",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 100)"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:13",
  "total_test_cases": 20
}
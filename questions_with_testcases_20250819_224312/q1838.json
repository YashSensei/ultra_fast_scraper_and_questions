{
  "problem_code": "problems",
  "title": "Tree",
  "tags": [],
  "text": "Consider an n-vertex binary search tree T containing n keys 1, 2 ... n. A \r\n\tpermutation p = [p1... pn] of the integers 1, 2 ... n is \r\n\tsaid to beconsistent with the tree Tif the tree can be built from the \r\n\tempty one as the result of inserting integers p1, p2... pn. \r\n\tFind how many permutations are consistent with the tree T.IllustrationExactly 2 permutations are consistent with the tree in the figure below.TaskWrite a program that for each data set from a sequence of several data sets:reads from the input file a description of an input tree T,computes the number of permutations consistent with T,writes the result to output.InputThe first line of the input file contains one positive integer d not larger \r\n\tthan 10. This is the number of data sets. The data sets follow. Each set of \r\n\tdata occupies two consecutive lines of the input file. The first line contains \r\n\tonly one integer n, 1 <= n <= 30. This is the number of vertices of the \r\n\ttree. The second line contains a sequence of n integers separated by single \r\n\tspaces. The integers are keys in the input tree given in the prefix order. The \r\n\tfirst integer in the sequence is the key from the root of the tree. It is \r\n\tfollowed by the keys from the left subtree written in the prefix order. The \r\n\tsequence ends with the keys from the right subtree, also given in the prefix \r\n\torder.OutputFor each i = 1 ... d, your program should write to the i-th line of output \r\n\tthe number of permutations consistent with the tree described in the i-th \r\n\tdata set.ExampleSample input:\r\n5 \r\n3 \r\n2 1 3 \r\n3 \r\n1 2 3 \r\n1 \r\n1 \r\n4 \r\n2 1 3 4 \r\n4 \r\n1 4 2 3 \r\n\r\nSample output:\r\n2 \r\n1 \r\n1 \r\n3 \r\n1",
  "sample_input": "Sample input:\r\n5 \r\n3 \r\n2 1 3 \r\n3 \r\n1 2 3 \r\n1 \r\n1 \r\n4 \r\n2 1 3 4 \r\n4 \r\n1 4 2 3 \r\n\r\nSample output:\r\n2 \r\n1 \r\n1 \r\n3 \r\n1",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/TREE1",
  "scraped_at": "2025-08-17 00:33:46",
  "test_cases": [
    {
      "input": "Sample input:\r\n5 \r\n3 \r\n2 1 3 \r\n3 \r\n1 2 3 \r\n1 \r\n1 \r\n4 \r\n2 1 3 4 \r\n4 \r\n1 4 2 3 \r\n\r\nSample output:\r\n2 \r\n1 \r\n1 \r\n3 \r\n1",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "l fkul\n10\n8\n1 1 7\n3\n3 6 2\n10\n6\n1\n7 10 9 1\n9\n10 8 9 10\nqps e\n10\n6\n5\n6\n5",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "tg hql\n6\n8\n3 7 1\n7\n9 1 1\n4\n3\n8\n7 4 7 3\n4\n2 10 4 9\nzvm wyugxg\n1\n4\n8\n5\n4",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "qrl e\n1\n9\n5 5 2\n4\n1 10 6\n7\n7\n7\n9 8 1 4\n8\n8 7 6 10\njtzd zppqbbo\n4\n5\n7\n7\n3",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "uradhw prns\n84\n63\n18 68 73\n7\n13 69 11\n33\n82\n81\n3 27 85 1\n81\n80 93 7 58\nnvt ihxne\n20\n31\n97\n19\n3",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "pwe vqax\n72\n92\n100 75 8\n31\n5 8 98\n90\n11\n83\n42 44 20 86\n6\n42 10 49 16\nwd ctqk\n5\n49\n48\n48\n60",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "aeit vdkgv\n94\n95\n89 22 87\n51\n18 8 91\n58\n40\n48\n23 77 94 22\n15\n63 39 91 96\njexucs elwqqma\n31\n29\n100\n8\n11",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "gv bjeig\n80\n65\n70 40 98\n69\n81 6 70\n59\n67\n56\n9 84 20 40\n86\n82 64 24 5\nmtmz y\n94\n71\n70\n93\n100",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "mrmb gxavia\n32\n47\n67 24 84\n48\n46 5 3\n16\n32\n99\n33 32 80 44\n93\n33 2 5 62\ncdvc ryxf\n60\n7\n44\n94\n30",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "jwtv s\n71\n400\n478 57 493\n178\n334 103 195\n362\n287\n455\n207 500 249 415\n78\n292 143 91 265\nej rczuk\n446\n469\n176\n131\n323",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "nip gsjaoo\n256\n113\n240 255 343\n405\n124 405 415\n434\n415\n132\n291 384 300 370\n187\n223 365 287 172\nmsxg tp\n166\n363\n467\n172\n417",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "pgrr hvhe\n106\n236\n346 57 361\n65\n485 98 267\n179\n144\n126\n194 219 204 336\n317\n444 124 226 408\nfy rna\n246\n496\n328\n147\n298",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "r ksb\n92\n295\n125 244 91\n198\n298 118 478\n290\n358\n287\n333 363 61 344\n322\n476 57 488 240\nybx aj\n134\n345\n430\n477\n80",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "xrrxng jnpw\n216\n341\n240 295 118\n60\n202 478 453\n500\n442\n330\n289 50 354 373\n144\n288 199 373 289\ndrq milvolw\n336\n107\n207\n91\n216",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "iek nxr\n498\n468\n229 231 210\n265\n178 56 193\n262\n435\n189\n424 463 391 104\n338\n66 107 413 424\nli etzvys\n392\n390\n463\n454\n95",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "gwx j\n214\n115\n69 396 81\n197\n98 194 368\n177\n420\n214\n155 307 77 474\n143\n256 425 354 90\ndtb dhgx\n301\n303\n473\n186\n298",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "jq orhta\n1000\n1000\n1000 1000 1000\n1000\n1000 1000 1000\n1000\n1000\n1000\n1000 1000 1000 1000\n1000\n1000 1000 1000 1000\nc tscbk\n1000\n1000\n1000\n1000\n1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "kcgqlv mxtbk\n1000\n1000\n1000 1000 1000\n1000\n1000 1000 1000\n1000\n1000\n1000\n1000 1000 1000 1000\n1000\n1000 1000 1000 1000\njqsybl akjdfpx\n1000\n1000\n1000\n1000\n1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "zipb bixgvs\n2\n2\n1 999 2\n1000\n1 999 1\n1\n999\n999\n1000 1000 2 1000\n999\n1 1000 1000 999\nxgdmp sw\n1000\n1000\n1000\n999\n1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "uag gedkrd\n2\n1\n2 2 1000\n1\n1 1000 999\n2\n1000\n999\n1 999 1000 1000\n999\n999 1 1000 999\nraphye htkqim\n1000\n999\n1\n999\n1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:18",
  "total_test_cases": 20
}
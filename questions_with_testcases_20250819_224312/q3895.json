{
  "problem_code": "problems",
  "title": "Christmas is coming",
  "tags": [],
  "text": "EnglishVietnameseChristmas will come next month, so DB is planning to give TN a wonderful gift.The city that DB and TN are living has n intersections. Each direct connections between 2 intersections has its length. In the Christmas night, TN will wait at the t-th intersection, and DB will start from the s-th intersection go through some connections, to the date place.Of course DB doesn’t want to make TN wait for long time, so he will choose the shortest path. He also want to know how many different shortest paths from s to t (there is at least one path).Because the number of intersections and connections are too large, DB can’t calculate these himself, so he need you help.InputFirst line : 3 positive integers, n, s and t (2 ≤ n ≤ 105, 1 ≤ s, t ≤ n, s ≠ t)n lines : the i-th line contains 3 positive integers l, r, w, means there are direct connections from i to l, i to l + 1, ... i to r, each has length w (1 ≤ l ≤ r ≤ n, w ≤ 106)OutputTwo positive integers, length of the shortest path, and number of the shortest paths (modulo 1015), separated by a spaceExampleInput:4 1 4\r\n2 3 3\r\n3 4 5\r\n2 4 5\r\n1 2 6Output:8 2Detais: the two shortest paths are (1, 2, 4) and (1, 3, 4)",
  "sample_input": "Input:4 1 4\r\n2 3 3\r\n3 4 5\r\n2 4 5\r\n1 2 6Output:8 2",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/QTGIFT3",
  "scraped_at": "2025-08-17 00:34:30",
  "test_cases": [
    {
      "input": "4 1 4\r\n2 3 3\r\n3 4 5\r\n2 4 5\r\n1 2 6",
      "expected_output": "8 2",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "7 4 9\n2 1 9\n1 3 2\n2 8 3\n6 8 10",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "9 5 7\n9 3 5\n8 10 1\n6 6 10\n8 4 6",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "4 9 9\n10 10 8\n3 5 8\n8 9 3\n8 2 7",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "72 1 32\n68 32 13\n46 45 93\n88 27 86\n59 1 26",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "52 95 90\n99 58 57\n60 59 40\n86 40 13\n55 56 10",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "12 71 38\n16 10 28\n39 21 96\n91 13 36\n84 66 32",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "72 42 7\n9 25 69\n77 47 66\n19 76 42\n51 77 6",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "2 77 25\n55 88 6\n57 24 97\n19 18 72\n11 47 26",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "11 31 9\n5 15 44\n33 50 45\n9 13 19\n41 11 38",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "16 28 37\n46 38 37\n11 8 11\n39 19 38\n20 47 25",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "5 36 42\n42 13 32\n22 8 9\n30 12 50\n36 52 52",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "32 16 50\n11 14 44\n30 18 14\n45 34 27\n25 7 9",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "46 45 8\n48 43 49\n26 34 9\n14 24 47\n44 31 26",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "29 14 24\n24 46 45\n17 48 52\n48 10 30\n8 14 46",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "9 13 36\n41 12 33\n13 9 47\n41 26 36\n24 44 36",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "105 105 105\n105 105 105\n105 105 105\n105 105 105\n105 105 105",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "105 105 105\n105 105 105\n105 105 105\n105 105 105\n105 105 105",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "105 2 2\n2 105 104\n1 104 104\n2 1 104\n2 105 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 1 105\n105 104 2\n105 1 1\n1 2 2\n105 1 104",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:25",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Eefun Plays Doto",
  "tags": [],
  "text": "Doto is a famous game. In that game, each player controls N heroes where each heroes has an infinite number of skills. These skills can be used to empower other heroes. Eefun is currently playing with his N heroes, numbered from 1 to N.The main objective of this game is to defeat the enemies with these heroes. However, Eefun always lose the game, so now Eefun only try to make his heroes powerful.Based on Eefun's logic, there are M requirements to make all of his heroes powerful. Each requirement needs a hero A and a hero B. Hero A must use his/her skill to hero B to make B more powerful. Moreover, if hero B and C needs skill from hero A, hero A can use his/her skill to hero B. Then, hero B skills will be empowered with skills from hero A. Therefore, he can use his skill to hero C. In this scenario, the number of skills activated is 2, where A doesn't get any skills, B get skill from hero A, and C get skill from both hero A and B.The skill is continuous, so if A give his skill to B, B give his skill to C, and C give his skill to A, then every hero get every other heroes skillsNow Eefun is curious, how many skills must be activated to complete all his requirementsInputFirst line consists of 2 integers, N and M which denotes number of heroes and requirements.Next M skills each contains 2 integers, A and B, which means hero B will be powerful if he get skills from hero A.OutputOutput an integer, the minimum number of skills which must be activated to complete all the requirementsExampleInput 1:3 4\r\n1 2\r\n2 3\r\n3 1\r\n2 1Output 1:3Input 2:5 5\r\n1 5\r\n3 4\r\n4 3\r\n2 5\r\n1 3Output 2:5ExplanationFor the first case, hero 1 can give his skill to hero 2, hero 2 can give his skill to hero 3, and hero 3 can give his skill to hero 1.For the second case, one of the configuration is like in the picture below :Constraints:A ≠ B1 ≤ A,B ≤ N1 ≤ N ≤ 100.0001 ≤ M ≤ 100.000",
  "sample_input": "Input 1:3 4\r\n1 2\r\n2 3\r\n3 1\r\n2 1Output 1:3",
  "sample_output": "Input 2:5 5\r\n1 5\r\n3 4\r\n4 3\r\n2 5\r\n1 3Output 2:5",
  "link": "https://www.spoj.com/problems/NPC2015C",
  "scraped_at": "2025-08-17 00:33:28",
  "test_cases": [
    {
      "input": "Input 1:3 4\r\n1 2\r\n2 3\r\n3 1\r\n2 1Output 1:3",
      "expected_output": "Input 2:5 5\r\n1 5\r\n3 4\r\n4 3\r\n2 5\r\n1 3Output 2:5",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "9 8 1\niup priw 2\n4 2\n7 8\n10 7\n3 8 6 10\n6 dvz a",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "8 3 9\nx plpf 5\n1 7\n6 1\n8 9\n3 5 6 4\n6 sw vinx",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "7 3 8\nx xxpp 10\n1 7\n5 3\n8 1\n8 8 5 7\n10 lqxq n",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "66 73 32\na h 7\n41 98\n3 86\n73 89\n79 58 77 56\n17 hpvfnh o",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "77 67 41\nrqmyc bwrwr 47\n97 54\n9 28\n76 30\n22 34 92 55\n55 oq px",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "74 98 17\navre iyg 13\n77 35\n15 88\n82 99\n39 72 74 13\n55 phyrw sxol",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "38 30 72\npj ykhc 96\n39 50\n78 50\n51 89\n75 77 100 2\n82 s h",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "1 96 8\ndxze yifs 55\n35 12\n74 49\n91 66\n8 45 100 13\n4 k brp",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "10 40 22\nfnl ogas 45\n39 12\n46 13\n35 34\n11 31 49 16\n49 rb bzkp",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "11 13 16\nxyf zfif 10\n8 33\n12 46\n39 10\n14 6 26 39\n12 jpmqy wkrpq",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "27 38 14\nk rhqh 13\n16 43\n10 34\n39 36\n11 14 42 42\n12 xk n",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "13 6 5\nn kh 21\n36 26\n14 32\n40 10\n10 49 9 43\n21 edb svoz",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "5 13 40\nolzq bf 6\n35 48\n15 13\n32 14\n41 40 14 25\n32 utyjmz kmwsk",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "15 13 40\ne hnjfp 48\n34 48\n46 39\n41 32\n42 26 41 49\n11 mphqu mmr",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "9 28 18\njulw mlbk 30\n42 13\n22 25\n16 31\n17 50 23 24\n35 kvcbqqi yh",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "100 100 100\nz kktx 100\n100 100\n100 100\n100 100\n100 100 100 100\n100 fciuebh jge",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "100 100 100\nzkxt u 100\n100 100\n100 100\n100 100\n100 100 100 100\n100 ytfnmx nqco",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 2 1\nnnwvy ob 1\n1 100\n100 1\n1 2\n2 1 100 100\n99 uthffh taso",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "99 1 2\npxp opmvj 2\n2 1\n100 100\n100 99\n1 99 2 99\n2 ebigyxd cgcsd",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:16",
  "total_test_cases": 20
}
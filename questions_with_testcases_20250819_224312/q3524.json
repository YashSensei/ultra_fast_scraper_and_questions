{
  "problem_code": "problems",
  "title": "Packing Rectangles",
  "tags": [],
  "text": "Four rectangles are given. Find the smallest enclosing (new) rectangle into which these four may be fitted without overlapping.  By smallest rectangle, we mean the one with the smallest area.All four rectangles should have their sides parallel to the corresponding sides of the enclosing rectangle.Rectangles may be rotated 90 degrees during packing.There may exist several different enclosing rectangles fulfilling the requirements, all with the same area.  You must produce all such enclosing rectangles.InputFour lines, each containing two positive space-separated integers that represent the lengths of a rectangle's two sides.  Each side of a rectangle is at least 1 and at most 50.OutputThe output file contains one line more than the number of solutions. The first line contains a single integer:  the minimum area of the enclosing rectangles.  Each of the following lines contains one solution described by two numbers p and q with p<=q.  These lines must be sorted in ascending order of p, and must all be different.ExampleInput:1 2\r\n2 3\r\n3 4\r\n4 5Output:40\r\n4 10\r\n5 8",
  "sample_input": "Input:1 2\r\n2 3\r\n3 4\r\n4 5Output:40\r\n4 10\r\n5 8",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/PACKRECT",
  "scraped_at": "2025-08-17 00:34:20",
  "test_cases": [
    {
      "input": "1 2\r\n2 3\r\n3 4\r\n4 5",
      "expected_output": "40\r\n4 10\r\n5 8",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "6 7\n9 9\n2 5\n9 3",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "8 8\n2 3\n2 1\n7 9",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "6 1\n8 2\n1 9\n10 9",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "53 34\n2 62\n87 39\n13 94",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "64 100\n87 26\n79 64\n88 23",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "42 37\n37 43\n73 64\n35 66",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "93 50\n67 28\n99 53\n64 58",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "48 17\n32 5\n76 45\n75 67",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "427 232\n356 183\n221 191\n55 367",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "326 380\n491 450\n293 426\n146 301",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "361 223\n239 108\n359 275\n245 246",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "464 285\n411 131\n292 142\n330 441",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "487 242\n325 153\n370 108\n461 341",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "119 343\n361 477\n496 345\n325 136",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "102 277\n274 239\n336 432\n140 385",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 1\n1 1\n1000 1\n1000 1000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1000 1000\n999 1\n2 2\n999 999",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:24",
  "total_test_cases": 20
}
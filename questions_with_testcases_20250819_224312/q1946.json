{
  "problem_code": "problems",
  "title": "Aesthetic Text",
  "tags": [],
  "text": "Let us consider a text consisting of N words numbered from 1 to N. We represent any of its decompositions intoKlines by a sequence of numbers(a1, a2, a3... ak-1), such that the words with numbers from 1 to a1are in the first line, the words with numbers from a1+1 to a2are in the second line, and so on, and finally, the words with numbers from aK-1 to N are in the last, K-th line.Each word has a certain length (measured in the number of characters). Let length(x) denote the length of the word number x. Furthermore, every two adjacent words in a line are separated by a space of width of a single character. By length of the line we denote the sum of lengths of the words in this line, increased by the number of spaces between them. Let line(w) denote the length of the line number w. I.e., if the line number w contains the words with numbers from i to j inclusive, its length is:line(w) = length(i) + length(i+1) + ... + length(j) + (j - i)As an example, let us consider a text consisting of 4 words of lengths 4, 3, 2 and 5, respectively, and its decomposition (1, 3) into 3 lines. Then the length of the first line is 4, second is 6, and third is 5:XXXX(1st line)XXX XX(2nd line)XXXXX(3rd line)We shall refer to the number|line(1) - line(2)| + |line(2) - line(3)| + ... + |line(K-1) - line(K)|as the coefficient of aestheticism of a decomposition of the given text into K lines. Particularly, if the decomposition has only one line, its coefficient of aestheticism is 0.Needless to say, the smaller the coefficient, the more aesthetical the decomposition. We shall consider only these decompositions that have no line whose length exceeds some constant M. Of all such decompositions of a given text into any number of lines we seek the one most aesthetical, i.e. the one with the smallest coefficient of aestheticism. The aforementioned exemplary decomposition's coefficient is 3, and that is exactly the minimum coefficient of aestheticism for M = 6 and M = 7.TaskWrite a program that:reads from the standard input the numbers M and N, and the lengths of the words,determines the minimum coefficient of aestheticism for those decompositions, whose every line is of length not exceeding M,writes the result to the standard output.InputThe first line of the standard input contains the numbers M and N, (1 <= M <= 1000000, 1 <= N <= 2000) separated by a single space. The second, last line of the standard input contains N integers, denoting the lengths of subsequent words, 1 <= length(i) <= N for i = 1, 2, 3 ... N, separated by single spaces.OutputThe first and only line of the standard output should contain exactly one integer: the minimum coefficient of aestheticism for those decompositions, whose every line's length does not exceed M.ExampleFor the input data:6 4\r\n4 3 2 5the correct result is:3while for the following input data:4 2\r\n1 2the correct result is:0",
  "sample_input": "6 4\r\n4 3 2 5",
  "sample_output": "3",
  "link": "https://www.spoj.com/problems/STC09",
  "scraped_at": "2025-08-17 00:33:53",
  "test_cases": [
    {
      "input": "6 4\r\n4 3 2 5",
      "expected_output": "3",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3 8\n3 2 10 7",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "6 9\n5 3 6 8",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "8 4\n6 5 6 8",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "54 67\n77 22 47 22",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "64 49\n57 58 60 15",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "29 67\n33 24 55 54",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "86 2\n44 97 39 59",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "82 83\n26 33 56 8",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "202 113\n272 316 489 140",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "262 157\n207 397 260 286",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "110 172\n218 277 328 180",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "317 166\n80 242 377 288",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "290 413\n161 349 64 413",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "89 257\n225 148 410 379",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "148 177\n405 383 474 263",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "999 2\n999 1 2 999",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "999 1\n1000 999 1000 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-19 22:43:19",
  "total_test_cases": 20
}
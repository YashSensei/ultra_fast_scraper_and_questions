{
  "problem_code": "problems",
  "title": "Find Distances In A Plane",
  "tags": [],
  "text": "Feluda loves reading city maps a lot. Now he has got a map of a city where each house is denoted with its x and y coordinate. As he is interested in estimating how good is arrangement of city, he asks you these two questions.What is minimum distance between any two houses?What is maximum distance between any two houses?Now given n points in a plane, you have to answer these two questions? As Feluda is scared by precision of decimal number representation in computers, you should tell Feluda the square of these distances.InputFirst line will contain n : number of houses. (2 ≤ n ≤ 105)Then next n lines where each line will contain x and y coordinate of house separated by a single space. (-109≤ x, y ≤ 109).OutputOutput one line containing squares of minimum and maximum distance respectively separated by single space.ExampleInput:10\r\n0 0\r\n5 1\r\n9 2\r\n12 3\r\n14 4\r\n15 5\r\n16 7\r\n17 10\r\n18 14\r\n19 19Output:2 722",
  "sample_input": "Input:10\r\n0 0\r\n5 1\r\n9 2\r\n12 3\r\n14 4\r\n15 5\r\n16 7\r\n17 10\r\n18 14\r\n19 19Output:2 722",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/IITKWPCL",
  "scraped_at": "2025-08-17 00:33:54",
  "test_cases": [
    {
      "input": "10\r\n0 0\r\n5 1\r\n9 2\r\n12 3\r\n14 4\r\n15 5\r\n16 7\r\n17 10\r\n18 14\r\n19 19",
      "expected_output": "2 722",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2\n2\n9",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "2\n6\n7",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "2\n9\n6",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "19\n55702737\n66648748\n74192240\n30514881\n50726555\n82270610\n19808574\n49668229\n20344470\n94992846\n24053565\n51772132\n48300817\n67689369\n40399581\n77402004\n52398986\n31422042\n12110269",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "11\n27048016\n97599512\n35928965\n13398799\n13033406\n58381941\n18009198\n29082574\n95980223\n22434825\n45177606",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "16\n55778773\n53231672\n27096351\n53887903\n59142963\n25091671\n81796983\n79759690\n86559925\n16078482\n24021698\n15287756\n85197950\n96061226\n52314864\n73223178",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "20\n97079413\n75495924\n52047835\n35708396\n51461337\n82753386\n49170851\n61085692\n8978016\n78160527\n53547929\n62891109\n53924827\n21258736\n52973296\n53935765\n20456434\n67811742\n50199700\n95244961",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "6\n56077620\n53635516\n5033467\n85307960\n16613819\n74633366",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "29\n89974\n30814\n19788\n98692\n30177\n13132\n43128\n59528\n90781\n53303\n20127\n11107\n79306\n25451\n9384\n20430\n73751\n88708\n89162\n298\n18331\n12262\n73295\n43784\n48732\n69554\n40225\n62407\n41793",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "105\n15945\n60001\n21205\n72304\n26867\n70337\n9874\n4956\n6764\n84331\n46761\n2877\n1172\n71795\n35327\n71503\n89791\n96213\n26877\n56743\n30201\n39800\n98814\n67942\n74475\n70438\n50342\n58905\n14077\n71398\n26844\n41616\n51658\n91780\n88592\n76224\n61587\n77968\n77219\n66145\n54944\n74188\n57840\n3311\n58638\n94997\n6244\n79759\n30040\n73455\n38977\n2458\n29711\n40562\n17775\n52874\n50496\n34428\n38177\n98812\n200\n4924\n32331\n44751\n32893\n84173\n40678\n14408\n72684\n15828\n991\n62173\n90986\n73249\n54309\n20896\n28020\n42250\n14097\n57776\n72360\n43948\n67736\n24693\n22784\n53674\n4351\n12928\n1077\n91048\n43707\n34827\n42395\n49293\n22129\n16514\n85944\n86948\n14747\n42652\n52357\n12017\n16485\n99098\n27527",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "56\n47804\n64787\n78555\n22120\n21132\n32932\n6002\n12060\n88102\n74006\n282\n48907\n74690\n17347\n43104\n36499\n17434\n43910\n56442\n48892\n66804\n43512\n71264\n11017\n19381\n1704\n302\n84926\n39521\n35284\n24349\n55528\n46630\n24415\n34603\n69491\n69568\n68537\n42209\n57637\n74486\n29050\n20886\n30733\n29296\n98374\n81207\n55055\n35650\n4733\n70044\n6614\n1544\n95407\n69982\n77289",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "78\n85276\n73479\n30218\n28875\n39747\n24533\n72559\n49479\n12939\n40850\n66642\n31203\n36211\n90938\n16623\n96190\n9372\n42568\n53361\n68526\n17274\n7299\n89198\n90443\n2041\n72040\n33556\n10407\n83516\n70501\n8500\n46379\n42060\n92926\n23605\n96812\n84716\n96080\n32261\n29607\n20317\n98339\n37167\n6868\n79745\n39051\n66300\n18302\n25687\n10759\n13994\n70631\n95008\n2095\n62193\n3006\n46120\n44124\n80394\n23869\n82106\n96700\n64356\n45580\n92942\n23312\n77890\n20010\n6226\n94761\n74571\n73754\n53107\n90242\n81265\n85927\n59818\n76626",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "94\n88298\n68529\n32814\n63325\n10991\n15528\n33171\n11613\n78649\n96508\n58395\n77082\n13351\n16299\n44763\n41820\n83671\n29595\n85010\n15436\n12460\n67347\n71869\n20846\n19185\n6956\n70475\n14107\n54872\n98156\n61160\n39780\n12669\n11586\n27472\n42470\n60094\n34782\n12824\n29731\n25215\n97514\n89061\n52643\n55247\n78711\n87976\n83831\n31908\n88224\n63895\n69116\n70930\n40006\n71787\n92791\n72778\n37789\n13821\n53022\n93919\n79917\n3038\n53434\n25931\n71569\n62202\n69311\n12886\n68086\n86116\n51167\n58705\n67033\n82013\n58260\n84903\n42695\n11162\n60164\n3261\n46139\n4412\n67751\n21307\n80610\n24166\n24537\n78729\n97121\n3711\n40688\n68797\n45444",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "39\n92159\n87986\n9759\n42527\n69695\n34149\n95740\n66655\n92282\n24888\n74099\n31792\n69352\n55201\n83785\n6928\n83857\n86978\n8789\n63501\n28146\n24367\n20229\n80549\n37744\n17344\n13663\n63954\n59569\n90208\n61334\n95160\n57121\n6898\n38491\n75828\n85778\n58394\n20219",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "98\n74663\n92993\n84940\n16291\n80921\n49693\n49358\n59658\n1014\n52512\n47840\n52767\n56153\n14407\n10746\n19665\n43489\n9085\n39728\n57486\n95069\n76330\n49841\n93243\n60277\n58756\n8934\n14433\n30973\n55800\n11886\n88759\n63293\n91316\n48788\n2045\n42684\n7487\n52950\n99214\n86370\n94134\n39940\n59714\n48427\n10422\n92452\n26151\n54521\n29114\n28435\n52348\n4328\n1366\n46205\n58387\n87878\n80012\n67358\n75472\n78783\n26073\n1878\n23112\n87994\n83557\n98060\n93939\n50299\n74728\n50941\n54457\n58647\n24106\n20815\n8873\n5215\n47077\n60053\n1642\n20416\n68077\n89991\n97438\n69127\n1508\n15404\n20955\n85089\n71770\n37368\n52128\n15142\n41604\n14034\n46590\n29026\n66277",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "105\n60300238\n85761513\n92567453\n49017163\n59440648\n22617403\n65115350\n6652924\n23700457\n50198152\n86647407\n37853908\n65735510\n90436339\n61725245\n50610702\n88537041\n66495452\n93747963\n13543476\n32062987\n49276674\n20214254\n83804034\n17741474\n66420597\n36235561\n29700305\n39300947\n64725513\n16727247\n86918384\n58652675\n11518753\n74410726\n60711274\n57314035\n62188687\n74874677\n82815729\n51324300\n91699850\n8121035\n51601029\n28254516\n45851922\n24312096\n96362402\n47482121\n25203328\n44449434\n55984423\n15205415\n95592220\n42871905\n80330466\n96450175\n53584145\n89119755\n90906879\n87805660\n16433015\n55328226\n63312325\n13687163\n24228167\n25470494\n49611742\n49729645\n37221949\n57537166\n4564162\n22459154\n82832972\n67674969\n88843537\n92457918\n8134775\n86290894\n14629841\n26807121\n72153276\n31334171\n49133514\n64756103\n56273804\n43369858\n21895083\n15820255\n5200659\n97864551\n20692959\n53270928\n21607476\n57406248\n5368887\n96266225\n88107818\n16672419\n91603999\n68691237\n74917719\n8607892\n59514546\n75106403",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "105\n58988826\n88490297\n53437869\n9908018\n62154130\n43076006\n26700114\n57390940\n79344031\n82264180\n49577869\n56625238\n82861312\n30163543\n39492811\n36125481\n4724402\n54744023\n63960833\n42134844\n64411378\n17277504\n66078015\n76542094\n85459843\n7197381\n80238397\n45201217\n31322321\n48690842\n43994992\n31875397\n69240384\n77163371\n87039166\n10725219\n90257067\n41645420\n819936\n59605243\n62837885\n57318165\n35989025\n53200103\n1622046\n571470\n47651965\n99992668\n72963127\n48277627\n80531904\n89373820\n35539790\n71467617\n63732829\n77080907\n625865\n20710038\n76635540\n56209441\n25103971\n35148560\n73803533\n68790888\n37848588\n74585662\n94041167\n91194070\n97716999\n88528664\n62423198\n62975855\n46363007\n85399946\n93063501\n18841520\n80673815\n33156690\n28987887\n5277053\n96164577\n46109951\n19736731\n52550494\n86235273\n41907406\n17384638\n68425026\n2891839\n13382959\n2826718\n1071597\n98958439\n46245962\n77992326\n42279784\n95351438\n49216093\n46286824\n33036972\n44801022\n74070978\n42512487\n91949006\n28525813",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "1\n1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 1)"
    },
    {
      "input": "1\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 1)"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:51",
  "total_test_cases": 20
}
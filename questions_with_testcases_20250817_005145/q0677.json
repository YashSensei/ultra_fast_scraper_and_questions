{
  "problem_code": "problems",
  "title": "Bridges",
  "tags": [],
  "text": "A new planet full of rivers was discovered and is being prepared for colonization. We want to connect every piece of land by bridges, the cost of building a bridge is its width.InputThe first number in the input file is T < 200, the number of test cases. Each test case starts with a line with a integer, N ≤ 500, the number of rivers. N lines are followed with 5 integers each, Di1, Fi1, Di2, Fi2 and Wi ≤ 1000000, the coordinates of the extremities and the width of the i-th river. Every D is between -90 and 90, and every F is between 0 and 359, they are measured in degrees and correspond to the spherical coordinates (latitude and longitude respectively).The two extremities of a river can be seen from above in a distance less than infinite, a course of a river is always the smallest possible and two rivers intersect in at most 1 point.OutputFor each test case print a single line with \"Case #X: C\" where X is the number of the test case (starting from 1) and C is the minimum cost to build the bridges so the islands and continents are connected directly or indirectly to each other.ExampleInput:340 0 90 0 490 0 0 179 20 0 -90 0 1-90 0 0 179 160 0 10 90 30 0 -20 90 30 179 10 90 50 179 -20 90 10 0 0 179 10-20 90 20 90 110 2 0 3 1Output:Case #1: 1Case #2: 6Case #3: 0",
  "sample_input": "Input:340 0 90 0 490 0 0 179 20 0 -90 0 1-90 0 0 179 160 0 10 90 30 0 -20 90 30 179 10 90 50 179 -20 90 10 0 0 179 10-20 90 20 90 110 2 0 3 1Output:Case #1: 1Case #2: 6Case #3: 0",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/BRDGS",
  "scraped_at": "2025-08-17 00:33:18",
  "test_cases": [
    {
      "input": "340 0 90 0 490 0 0 179 20 0 -90 0 1-90 0 0 179 160 0 10 90 30 0 -20 90 30 179 10 90 50 179 -20 90 10 0 0 179 10-20 90 20 90 110 2 0 3 1",
      "expected_output": "Case #1: 1Case #2: 6Case #3: 0",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1 5 8 10 10 9 9 4 5 10 8 1 10 2 7 3 9 4 7 3 6 6 2 7 9 6 4 5 6 4 7 6 10 1 5 10 3 7 10 8 7 10 2 3 5 8 3",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "6 1 3 9 8 10 8 4 5 5 6 3 9 10 4 2 8 2 2 10 2 2 5 8 4 3 6 7 1 10 6 10 10 8 2 8 1 3 1 5 3 2 3 6 2 8 1",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "1 2 2 5 10 9 1 5 6 2 5 3 7 10 5 6 7 3 7 1 3 10 7 2 9 10 2 3 10 10 3 3 6 6 7 2 8 10 9 4 9 6 7 3 6 8 4",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "16 52 27 36 49 94 25 87 51 92 15 10 8 95 30 95 16 40 51 8 61 88 42 15 84 7 24 39 42 8 13 53 86 66 20 1 20 35 61 75 4 84 26 39 77 98 73",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "63 91 50 45 58 94 79 88 84 65 7 17 28 53 19 48 36 72 98 82 40 73 67 31 48 99 44 62 79 96 93 98 21 11 3 4 92 8 18 7 83 10 47 100 13 40 49",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "65 10 91 18 29 1 26 35 27 41 6 15 85 94 49 67 99 38 65 53 15 25 6 14 77 10 3 41 52 55 56 6 54 65 88 38 82 35 84 94 7 66 59 90 61 39 25",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "79 98 60 64 19 38 70 83 71 28 22 97 86 11 37 72 39 75 83 2 85 59 80 74 31 78 67 29 25 56 65 67 47 45 98 84 87 76 64 8 18 69 24 83 90 38 94",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "32 64 25 57 20 88 49 17 94 5 93 22 85 47 81 50 47 77 24 71 58 97 53 17 58 72 12 22 39 52 20 49 79 37 78 84 92 5 70 34 40 14 57 49 69 67 11",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "98 181 111 196 109 154 213 137 214 230 77 51 224 27 70 59 32 189 80 56 130 183 97 51 123 67 239 28 36 35 209 76 176 224 159 59 139 244 35 249 94 96 174 240 116 106 135",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "183 192 84 26 118 248 76 98 67 219 213 130 139 248 69 161 164 154 71 113 82 68 147 140 62 92 201 200 63 224 203 246 118 202 153 241 193 97 120 207 74 97 48 189 93 69 192",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "174 151 99 181 92 188 184 99 71 201 75 37 107 178 77 47 145 88 217 159 87 133 247 42 230 178 82 123 169 237 84 158 134 175 46 94 122 245 68 190 187 137 170 181 120 100 230",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "250 164 54 80 159 51 77 111 63 88 214 104 212 57 192 185 180 125 39 203 158 190 121 239 97 147 191 150 118 128 231 140 242 220 122 71 244 133 166 72 101 79 157 83 110 159 212",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "128 127 68 110 218 84 184 242 243 200 106 95 65 207 43 178 110 66 248 30 62 140 96 92 36 35 117 85 208 89 134 223 171 166 106 170 113 62 126 119 235 43 95 185 26 236 128",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "174 25 69 236 181 57 69 176 193 198 240 73 238 122 55 230 112 52 124 33 165 164 67 160 200 28 25 99 195 88 204 34 234 194 198 148 183 170 195 136 60 197 203 162 32 25 68",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "120 99 191 76 38 84 99 119 214 237 207 44 157 37 186 168 195 241 126 247 65 76 82 231 32 127 132 52 103 94 215 153 51 100 28 41 36 53 132 56 130 136 88 233 55 139 217",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 1 1 1 2 1 500 1 2 500 499 499 500 1 500 499 500 2 500 2 1 1 499 500 2 2 2 2 500 500 1 499 500 500 499 499 499 500 499 1 2 2 499 499 499 499 2",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "499 2 499 499 499 499 500 500 1 2 499 1 499 499 2 499 499 2 499 1 500 2 500 2 1 1 1 1 2 1 499 500 1 2 499 1 499 500 499 500 1 1 1 2 1 1 1",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:47",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:36:40"
}
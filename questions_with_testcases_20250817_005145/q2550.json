{
  "problem_code": "problems",
  "title": "Meeting For Party",
  "tags": [],
  "text": "Ankur, Anuja and Jyoti are planning to have party at some place. Their houses are located at different points in a rectangular grid of size M×N. They want to meet in minimum time and then party.The M rows and N columns rectangular grid contains some impassable points (denoted by a #), however. So none of them wants to step over these points. They can only step over passable points (denoted by a .). They can also meet at some point outside the grid. You can assume that the points outside the grid are all passable. They cannot party on an impassable point and they have their house only on passable point. They can move either to North, South, East or West passable point from the current passable point and it takes 1 unit time to do so. Also they can wait at a passable point if they want to.Find the minimum time of meeting.Note: Assume that they will always meet at some point.InputFirst line gives T, the number of test cases.Each test case has two space separated integers M and N, the dimensions of the grid.Next M lines contain N characters per line (no spaces). Characters can be either “#” (impassable) or “.” (passable) or “1” (Ankur’s house) or “2” (Anuja’s House) or “3” (Jyoti’s house). Each test case will have exactly one “1”, exactly one “2” and exactly one “3”.OutputOutput T lines, each containing the required answer.Constraints1 ≤ T ≤ 101 ≤ M ≤ 2001 ≤ N ≤ 200ExampleInput:1\r\n4 4\r\n#...\r\n.2#.\r\n..#3\r\n1..#Output:4",
  "sample_input": "Input:1\r\n4 4\r\n#...\r\n.2#.\r\n..#3\r\n1..#Output:4",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/DCEPC706",
  "scraped_at": "2025-08-17 00:34:16",
  "test_cases": [
    {
      "input": "1\r\n4 4\r\n#...\r\n.2#.\r\n..#3\r\n1..#",
      "expected_output": "4",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4\n2\n8\n8\n7",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n4",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n2",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "11\n50429337\n84212733\n20364009\n34091839\n32368667\n82688908\n31105055\n19881477\n8532643\n50930529\n6698507",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "12\n82115498\n8406726\n56203925\n48200947\n37078051\n81272424\n56427238\n62490057\n1101378\n96871090\n82583875\n71468041",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "9\n76606124\n20843767\n43002543\n88806504\n4556390\n42280304\n50161941\n95246337\n10956512",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "14\n6079090\n24440586\n64997798\n76144650\n4709900\n18479177\n24406239\n61641102\n60979264\n68502877\n71535534\n4424938\n72137139\n88622846",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "8\n96551313\n55055678\n93204493\n54741960\n72837693\n14631801\n78686374\n9822425",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "115\n37802\n71679\n29053\n51802\n14193\n65809\n13278\n63698\n87125\n15784\n47034\n53301\n840\n71073\n3219\n85799\n58386\n41472\n58848\n79838\n21361\n89117\n1041\n59686\n98288\n75263\n48708\n94433\n58321\n89979\n36656\n56073\n28744\n11521\n73246\n12495\n1951\n25119\n67504\n2589\n52446\n7958\n43630\n9556\n78354\n8442\n79515\n30647\n88411\n53224\n54427\n47963\n67392\n70083\n47268\n54441\n72698\n67855\n41049\n80199\n45109\n95308\n30037\n39423\n22992\n41541\n836\n77221\n70070\n13118\n48957\n9350\n98218\n3925\n25748\n4265\n73635\n30296\n53314\n68944\n97617\n4942\n82435\n72032\n18199\n42257\n32363\n26003\n82650\n75420\n73248\n29506\n82884\n22951\n20562\n30611\n13974\n83391\n89587\n81704\n51283\n3425\n11499\n92871\n3422\n88827\n99654\n95615\n62102\n55884\n50896\n53423\n67501\n97319\n69057",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "75\n24433\n27316\n59104\n30357\n15329\n47224\n28199\n63010\n89507\n27275\n23113\n10842\n44018\n86216\n39397\n75682\n35991\n92251\n47253\n67101\n42881\n652\n10000\n3718\n66566\n73902\n2270\n94982\n99535\n17981\n43711\n26590\n1366\n94588\n39812\n1674\n59676\n17024\n5273\n38777\n96662\n98900\n34235\n63492\n21430\n54010\n85483\n32603\n9049\n11784\n73375\n9362\n66459\n85153\n31492\n845\n65035\n9367\n4938\n75782\n78945\n33298\n21855\n74886\n21329\n89776\n83489\n54883\n55090\n81100\n72029\n91486\n80289\n79316\n34183",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "92\n76131\n81327\n46634\n83977\n62441\n72964\n77477\n39179\n801\n88802\n23857\n81246\n96374\n32089\n82337\n63917\n52022\n23007\n65719\n2746\n75968\n58765\n26321\n31535\n23405\n41908\n40770\n27408\n41739\n61228\n50631\n83357\n52485\n64985\n59418\n26081\n56838\n72528\n44152\n50201\n7600\n11080\n58525\n68490\n80253\n481\n63466\n72214\n59335\n68141\n30306\n25184\n58403\n3844\n60906\n9572\n75261\n22150\n20614\n92957\n19917\n6875\n93085\n20836\n46611\n42294\n41076\n12780\n30410\n71161\n72503\n47190\n65995\n35344\n15026\n65853\n66466\n25257\n66244\n85198\n88886\n93951\n68952\n72548\n6949\n25327\n45885\n95602\n6613\n50658\n26713\n56121",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "35\n57715\n67582\n80692\n6783\n40623\n22076\n55486\n79540\n59899\n10074\n75333\n58763\n59197\n22223\n1670\n49223\n58562\n6848\n20320\n30484\n86885\n50228\n71467\n28918\n27484\n50302\n19694\n79379\n76499\n20392\n11177\n42615\n91187\n47594\n52770",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "120\n68361\n30332\n2776\n32065\n61628\n68596\n44699\n96171\n63354\n10422\n88740\n7678\n46447\n8257\n56651\n96086\n11605\n53467\n67593\n63232\n97746\n32004\n13408\n55430\n92801\n48672\n38510\n71096\n95509\n31765\n1990\n59869\n58234\n97182\n31986\n95668\n7319\n53825\n27070\n1327\n13285\n86451\n54231\n96563\n29064\n30050\n53735\n88435\n92257\n1450\n20705\n1749\n21660\n31490\n29080\n21048\n708\n76327\n35006\n68765\n6963\n7884\n82478\n35508\n73991\n35142\n81855\n36811\n20696\n63253\n12620\n86623\n3830\n11740\n29453\n33720\n57295\n97258\n56836\n97329\n63817\n32287\n92022\n95834\n20518\n69072\n40373\n87494\n58836\n64387\n48861\n7865\n35386\n31379\n32722\n21297\n66091\n52966\n8458\n84030\n17736\n53647\n85488\n90739\n11240\n99106\n99923\n75797\n73474\n14198\n99924\n76159\n22458\n15461\n40399\n14041\n61008\n85456\n97635\n42912",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "24\n26042\n33069\n17934\n44119\n46192\n52202\n51412\n26742\n17094\n20599\n54037\n65138\n85641\n93444\n25621\n48928\n80697\n62919\n28907\n67489\n11958\n91203\n63176\n72321",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "119\n34364\n40026\n65313\n91528\n91317\n11881\n92237\n60485\n811\n72341\n86058\n64212\n94684\n91040\n71940\n29192\n89243\n55202\n98171\n26710\n25487\n23287\n44378\n38391\n94832\n25722\n32208\n62095\n63721\n80997\n3526\n20207\n9417\n80712\n23764\n84228\n9479\n43390\n67182\n52822\n98529\n33429\n81065\n69455\n38628\n34605\n85656\n34401\n30465\n81956\n37615\n72122\n27596\n99344\n61782\n79246\n84401\n58538\n80502\n31033\n31074\n99131\n75847\n84174\n78986\n21174\n67076\n26078\n72668\n43698\n74998\n11279\n39226\n85737\n62082\n83220\n88607\n775\n15123\n7247\n14527\n66684\n48055\n50136\n94413\n74779\n32273\n35404\n15564\n38495\n38865\n3357\n65293\n29047\n28211\n4184\n32802\n88930\n57350\n68905\n77031\n34965\n5558\n20845\n53250\n60749\n32627\n72755\n85155\n8879\n5862\n68318\n97874\n61641\n21465\n81406\n74847\n18300\n53161",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "200\n33529665\n73688074\n64762021\n21936495\n43625741\n13309677\n54413798\n67195581\n94380884\n95134658\n20132983\n29600623\n34765751\n74168605\n82477308\n12199869\n44423628\n79737393\n42378964\n56079082\n92053054\n5784374\n90982298\n36222886\n27662760\n8943845\n23212351\n14213923\n20916742\n11064477\n90327671\n82722300\n97301765\n46097223\n70303300\n77940275\n87553493\n73109516\n19425103\n22213218\n41890936\n66208367\n40329167\n58096582\n59431191\n33207308\n57471508\n60861863\n40308660\n60782289\n26283000\n88884854\n22710829\n90828176\n96350824\n97846877\n11760310\n72256909\n16412226\n20718579\n13276500\n62299767\n44444493\n79798939\n31755957\n49567304\n81981555\n98663477\n25847814\n53120221\n78090657\n45799167\n434051\n13468992\n5261766\n89892254\n60843030\n95187421\n39328678\n17853284\n99376417\n71293200\n58423767\n86260534\n71724246\n12474764\n48550238\n60296774\n56530118\n51261385\n7087724\n50091243\n81377444\n44324591\n61091422\n76285052\n37751725\n5010952\n51944798\n38664858\n17940485\n72672293\n86034204\n42322917\n4802995\n27573258\n33050823\n90826160\n28970959\n50386332\n42140173\n96956264\n26185118\n65457456\n98945260\n16405246\n16119938\n92568424\n35604477\n7208059\n28122187\n77967692\n84908667\n46873715\n98218454\n49463866\n56655645\n74342261\n9336337\n44133128\n93131961\n89767075\n45078223\n31109288\n13038883\n45524287\n48614903\n51781099\n34738006\n14987075\n61061745\n5283585\n66080264\n12320379\n71738187\n14445275\n3837585\n95417434\n39152010\n91257258\n7034147\n51915111\n10611518\n73385677\n95128800\n97254183\n58144951\n71312186\n13793936\n65182490\n72658165\n69168119\n77869727\n12976353\n30412912\n91554848\n70394537\n22422818\n82585780\n5072973\n49829871\n61255567\n57519090\n75762334\n77489831\n68244336\n80135921\n92143722\n504360\n69906051\n9898874\n4486985\n64617284\n29827358\n26958835\n36001717\n39769132\n79300270\n91701719\n81177610\n48982579\n33754889\n36690033\n54482332\n62880730\n90372926\n62436378\n71351312\n33735372\n38609101",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 200)"
    },
    {
      "input": "200\n83426259\n93224344\n74033707\n54318789\n10838667\n19780084\n86805154\n45829671\n51663193\n55523177\n64417624\n56796730\n38043957\n94552099\n89117258\n81836174\n61880180\n10107682\n67112902\n12689156\n5537755\n90672080\n92152067\n6677201\n29477352\n65409587\n61265254\n77975895\n63118230\n17207125\n86807283\n97500798\n37879013\n99650838\n34669210\n78221661\n71179129\n13488496\n58966216\n80147731\n98572888\n75905542\n15202840\n36780400\n54718925\n56510165\n88410093\n12573328\n1624989\n89475962\n55568281\n17031108\n25527749\n90582895\n90070917\n39406105\n10741654\n11620419\n37868558\n69398865\n84719895\n54766813\n32394531\n15189082\n73337079\n43187830\n85793870\n1877120\n29842643\n68364967\n35100486\n39804681\n24166498\n78742366\n11679099\n71595921\n6509388\n42582780\n78511796\n4817653\n62704597\n22121519\n23602766\n34479929\n32823985\n29748883\n58917652\n94245614\n37291613\n33170984\n6728264\n33706129\n50920217\n3744505\n12816075\n74434275\n81072618\n70710674\n49806028\n19995650\n43057920\n9967331\n73115499\n42468845\n12123665\n2491873\n86175973\n84990468\n82618430\n16381152\n48236801\n67599713\n72280202\n55913473\n75255899\n58976210\n5750954\n29863112\n16634253\n71005623\n83074625\n19741542\n27885613\n15154694\n40832492\n68238007\n4134147\n44493588\n49235726\n18371301\n53588072\n35906537\n9186353\n96526514\n11722748\n22196783\n38258800\n83760260\n52662463\n10009361\n50185289\n60913257\n33058000\n37165798\n29698076\n16921674\n48829562\n65223163\n1739774\n22218050\n54687083\n4968270\n33051943\n36982007\n47583435\n50755969\n26468643\n54489744\n37126619\n18921207\n28205628\n35711464\n18534384\n89645718\n25986871\n48957673\n55096078\n41075512\n98574599\n11685264\n71365135\n5034640\n79611627\n97942919\n28503191\n66743485\n89667803\n98502351\n80489786\n20845584\n50819263\n98855811\n46924160\n5518240\n58768179\n24005912\n88155790\n48274570\n4712252\n81688706\n58978214\n53232500\n93578839\n64095961\n79403095\n79168917\n14640070\n46410339\n67288114\n79196332",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 200)"
    },
    {
      "input": "2\n5545429\n39324816",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 2)"
    },
    {
      "input": "200\n100000000\n100000000\n100000000\n100000000\n1\n1\n100000000\n67413536\n1\n1\n100000000\n1\n100000000\n25699130\n100000000\n100000000\n1\n1\n100000000\n1\n67764522\n100000000\n7799313\n100000000\n23204099\n100000000\n38472714\n100000000\n1\n100000000\n100000000\n100000000\n100000000\n1\n100000000\n20399554\n100000000\n100000000\n1\n1\n100000000\n1\n100000000\n72675224\n1\n1\n40715301\n13903397\n1\n75541217\n1\n1\n1\n65481850\n100000000\n1\n38451939\n1\n1\n1\n1\n19782967\n1\n1\n35114857\n73323796\n1\n100000000\n10058028\n1\n1\n94030875\n100000000\n1\n100000000\n100000000\n100000000\n17886995\n100000000\n51164485\n88152432\n1\n22280368\n100000000\n1\n1\n1\n100000000\n100000000\n100000000\n1\n85086063\n1\n96088263\n100000000\n100000000\n1\n1\n100000000\n100000000\n31444165\n1\n100000000\n100000000\n100000000\n2339664\n1\n1\n1\n100000000\n79913714\n100000000\n100000000\n100000000\n1\n77276663\n1\n1\n1\n1\n100000000\n100000000\n3743111\n1\n1\n11857929\n100000000\n100000000\n36675799\n100000000\n1\n21862859\n100000000\n1\n1\n89112001\n89413750\n77071412\n75819643\n1\n38836886\n100000000\n1\n1\n100000000\n100000000\n1\n39253988\n7776589\n100000000\n100000000\n79476990\n1\n19341048\n1\n1\n1\n100000000\n87101125\n1\n100000000\n92690344\n1\n60706253\n1\n100000000\n100000000\n100000000\n100000000\n1\n18131938\n100000000\n1\n100000000\n100000000\n99521864\n1\n1\n51826426\n100000000\n1\n16770654\n100000000\n54284987\n39766285\n1\n1305697\n100000000\n38432031\n1\n48313476\n31341674\n95521996\n100000000\n100000000\n1\n100000000\n100000000\n13379844\n81734575",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 200)"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:53",
  "total_test_cases": 20
}
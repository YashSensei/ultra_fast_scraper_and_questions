{
  "problem_code": "problems",
  "title": "Highway Patrol",
  "tags": [],
  "text": "Crimes in city of Megacity are going high. To fight the crimes, the authorities have created a highway patrol. The city consists of a number of one-way roads. At the ends of each road, there is a base station for the patrol troops. Each base station has a number of troops. At the beginning, each station sends a troop along all the outgoing highways from that station. The troop patrols the highway and whenever it reaches the station on the other side of the highway, it waits there, and the troop that has been waiting there the most, is sent along the highway that has not been patrolled the longest time.Soon, they faced some difficulties, cause, the frequency of patrolling a highway is more and more dependent on the number of highways that started and ended at the base station. If the number of highways started at a base station is more than the number of highways ended there, the roads are patrolled less frequently. And if, no highways end at some base station, then, the highways started from there, will not be patrolled more than once. In this situation, the highway patrol decided to remove some highways from the patrolling schedule, so that, at each base station, the number of highways started and ended at any base station will be equal. The rest of the highways will be monitored using video surveillance. But, due to some security issues, there are some highways that have to be patrolled.Now, given the cost of patrolling highways, and that of installing video surveillance, find the minimum cost of monitoring the whole city. Please keep in mind that, video surveillance can not substitute the highway patrol completely. So, there has to be at least one highway that will be patrolled.InputFirst line of the input contains an integer T (T ≤ 70), the number of test cases. This is followed by T test cases. Each test case starts with two integers N (1 ≤ N ≤ 100) and M (1 ≤ M ≤ 1000), the number of base stations and highways. This is followed by M lines, each containing 5 integers, u, v, p, s, x (1 ≤ u, v ≤ N, 0 ≤ p, s ≤ 1000000) where u and v means, the highway starts from base station u, and ends at v, p is the cost of patrolling and s is the cost of installing video surveillance. If the highway must be patrolled, then x will be one. Otherwise it will be zero.OutputFor each test case, output the case number, followed by the minimum cost to monitor the highways. If it is not possible to patrol satisfying the given constraints, output “impossible” (without quotes).ExampleInput:24 51 2 10 25 02 3 10 5 03 1 10 5 02 4 10 5 04 3 30 5 04 51 2 10 25 02 3 10 5 03 1 10 5 02 4 10 5 04 3 30 5 1Output:Case 1: 40Case 2: 65",
  "sample_input": "Input:24 51 2 10 25 02 3 10 5 03 1 10 5 02 4 10 5 04 3 30 5 04 51 2 10 25 02 3 10 5 03 1 10 5 02 4 10 5 04 3 30 5 1Output:Case 1: 40Case 2: 65",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/PHU09K",
  "scraped_at": "2025-08-17 00:33:41",
  "test_cases": [
    {
      "input": "24 51 2 10 25 02 3 10 5 03 1 10 5 02 4 10 5 04 3 30 5 04 51 2 10 25 02 3 10 5 03 1 10 5 02 4 10 5 04 3 30 5 1",
      "expected_output": "Case 1: 40Case 2: 65",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3 4 8 7 6 7 6 8 4 10 1 1 6 4 9 3 4 8 3 7 4 2 2 8 10 6 8 8 1 10 2 5 6 10 8 5 1 5 3 7 5 9 6",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "1 5 6 7 4 10 6 7 4 7 8 9 2 6 5 7 3 9 5 10 9 1 4 2 8 2 1 6 6 8 5 2 10 2 10 8 3 4 8 3 4 5 6",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "8 5 2 8 6 7 8 8 9 2 10 10 9 8 4 1 10 3 9 2 4 2 4 4 10 2 5 2 3 2 8 2 2 3 8 6 7 8 8 9 2 6 5",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "21 41 68 30 97 48 35 35 61 11 79 56 21 60 67 44 30 74 55 3 79 4 75 79 42 76 83 77 7 15 33 62 28 3 46 81 70 65 41 56 57 92 48",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "99 88 15 53 7 68 41 31 30 78 58 78 78 70 1 87 4 23 98 29 75 38 99 2 58 17 77 12 4 57 95 51 77 60 48 33 74 85 66 23 45 44 39",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "92 83 17 49 4 97 71 53 85 84 78 54 36 24 55 98 100 44 31 90 71 13 38 28 98 76 83 80 89 86 52 72 43 17 72 9 31 17 41 61 72 73 7",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "42 69 18 100 26 95 67 45 16 34 19 6 24 6 63 41 29 83 9 18 40 16 40 72 62 81 15 61 70 5 92 89 37 3 20 61 15 29 69 57 59 24 57",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "59 96 70 43 89 70 87 7 34 58 26 49 14 28 74 73 15 83 39 6 78 78 61 32 84 90 57 20 13 20 3 23 76 80 72 13 71 66 44 59 7 20 2",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "45 36 18 15 24 30 7 29 10 5 41 36 45 17 8 29 7 7 19 15 14 43 12 9 35 19 19 15 12 21 5 6 19 13 25 44 21 36 10 9 42 42 25",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "41 30 22 33 34 42 43 8 23 14 17 27 35 35 8 28 46 14 47 18 27 24 10 5 39 34 14 40 17 23 41 32 46 10 20 30 24 8 6 15 29 29 30",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "24 25 18 23 50 19 29 41 7 26 48 10 30 13 47 44 35 26 43 7 38 37 42 8 40 34 29 11 27 12 25 20 6 15 29 33 30 11 19 38 13 24 15",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "40 25 31 47 23 26 44 24 16 37 23 24 43 15 8 17 36 42 29 43 48 44 18 33 19 34 36 5 7 9 39 27 5 46 15 19 33 38 14 6 23 9 32",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "31 29 30 43 49 48 9 24 14 10 48 42 39 26 41 16 46 27 38 36 27 34 33 43 36 50 45 14 28 34 48 22 17 29 41 42 7 26 28 14 39 40 39",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "48 32 27 30 44 49 41 21 49 49 48 39 41 16 35 48 33 50 41 10 20 38 24 45 43 24 5 7 19 27 10 43 40 19 12 20 28 29 25 42 18 44 35",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "24 45 18 45 20 39 43 21 13 33 18 43 37 26 22 22 26 35 39 10 49 36 37 19 30 24 27 37 10 35 35 31 37 39 29 49 23 41 46 30 30 33 13",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 99 100 1 2 99 100 2 99 1 99 2 1 100 1 99 1 2 2 99 99 1 100 2 1 2 2 1 2 1 99 99 99 2 2 1 2 2 100 99 100 1 1",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "99 100 100 100 2 100 2 99 99 100 100 99 2 99 99 1 1 2 100 100 1 1 100 99 1 1 100 1 100 100 100 2 99 100 1 2 99 1 1 100 99 100 2",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:50",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:11"
}
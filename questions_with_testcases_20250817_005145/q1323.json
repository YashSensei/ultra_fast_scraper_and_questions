{
  "problem_code": "problems",
  "title": "Square Free Factorization",
  "tags": [],
  "text": "You all know about factorization of an integer. Here we want you to factor a number into as few factors as possible. That is easy, you say, just have the number itself, and that will be the smallest number of factors i.e. 1.But wait, I haven't finished — each of the factors that you find must be square-free. A square-free number, however you factor it, won't have any factor that is a perfect square.  Of course, you can never include 1 as a factor.InputThe first line of input is the number of test cases T. The next T lines each have an integer N.OutputFor each test case, output the smallest number of square-free factors.ConstraintsT ≤ 1042 ≤ N ≤ 106ExampleInput:2\r\n6\r\n8Output:1\r\n3",
  "sample_input": "Input:2\r\n6\r\n8Output:1\r\n3",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/AMR10C",
  "scraped_at": "2025-08-17 00:33:31",
  "test_cases": [
    {
      "input": "2\r\n6\r\n8",
      "expected_output": "1\r\n3",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2\n5\n10",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n8",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "4\n4\n3\n2\n8",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "13\n73459668\n68107445\n95456540\n51301975\n79815169\n70924024\n91926698\n73927739\n67359040\n66190460\n54805481\n76581706\n56119000",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "13\n68677714\n27723590\n47855589\n23799805\n11557268\n21884628\n63627764\n76153365\n83581927\n22511917\n79079361\n18576526\n8617775",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "11\n96923285\n25192392\n72092791\n39463447\n64039613\n66398231\n95759814\n93327703\n17694714\n7210711\n23624171",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "20\n18317964\n90484563\n49698875\n43778372\n93718208\n34777564\n82476170\n88274914\n99005980\n5191230\n83290754\n98388493\n5405752\n85906900\n8929269\n98238700\n49584752\n84731380\n83207384\n68967100",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "14\n18685500\n67039661\n43262742\n56768980\n67249794\n60555874\n1886366\n44481094\n71140622\n33319518\n73648577\n53895152\n62420425\n82132638",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "77\n64792\n11595\n53096\n31484\n36773\n34961\n64055\n78683\n77965\n30807\n32645\n54631\n83016\n36922\n27410\n12055\n2180\n48574\n13036\n62535\n16134\n97188\n95457\n97139\n60436\n55854\n37490\n81228\n3865\n2742\n80261\n1236\n25100\n37612\n39732\n6362\n88359\n89646\n61850\n99994\n83317\n64388\n29589\n67730\n94545\n53009\n91632\n20354\n62244\n64669\n31355\n26748\n91402\n72788\n77869\n82603\n36922\n29887\n7759\n44281\n20868\n59529\n34752\n34785\n65700\n52264\n8897\n8895\n17113\n88909\n88857\n76529\n98958\n81801\n74966\n22745\n14682",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "97\n22582\n85699\n42848\n80523\n47238\n79267\n16255\n75598\n867\n32000\n79529\n73292\n12636\n36056\n63448\n54516\n18680\n66923\n81354\n631\n25247\n33737\n44007\n1039\n66639\n93552\n41249\n2456\n21029\n82959\n66569\n19619\n58379\n39111\n12433\n39809\n25358\n35096\n59674\n30441\n16537\n77009\n76440\n30985\n28619\n45986\n89657\n76306\n66611\n10334\n43853\n10672\n31235\n34279\n91368\n41948\n65339\n38541\n8080\n83448\n76173\n8203\n45839\n7502\n98432\n68487\n64200\n10626\n66255\n85362\n91498\n66349\n95368\n91777\n93163\n6448\n28399\n63223\n25119\n29657\n29871\n17034\n64357\n53010\n20557\n8289\n45125\n33768\n24954\n2436\n98767\n67344\n27853\n1214\n7922\n83702\n66980",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "27\n74183\n52332\n65859\n30782\n21685\n30262\n60033\n53029\n88352\n74794\n26834\n94368\n4564\n92725\n68616\n12168\n16548\n73125\n16467\n4522\n3910\n115\n30592\n52761\n62010\n66607\n8635",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "69\n327\n38395\n22726\n75545\n87987\n74886\n29909\n41065\n26982\n92940\n1210\n60762\n70917\n36759\n82496\n81113\n34007\n52840\n94421\n45930\n52045\n51647\n93139\n77085\n15775\n64751\n42073\n3400\n36543\n71337\n6148\n25392\n79387\n20970\n8432\n19620\n71588\n63375\n9005\n95458\n17371\n95082\n57549\n41235\n2671\n30027\n94627\n98843\n43117\n55503\n71389\n94319\n19683\n70074\n54830\n84383\n91397\n17249\n74294\n56832\n83054\n60435\n64137\n75349\n48440\n69407\n80846\n31982\n41212",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "91\n50609\n46217\n14330\n13354\n54501\n60823\n79657\n30500\n25020\n3760\n22221\n31134\n37283\n85983\n67828\n27513\n27365\n49384\n49254\n84246\n17522\n57765\n87889\n55906\n68254\n24210\n54757\n20414\n77582\n49320\n3102\n24569\n63247\n73701\n26938\n7793\n6331\n45774\n28236\n70743\n89520\n92578\n95172\n67285\n29013\n27805\n41041\n16819\n85339\n56564\n87542\n27996\n54311\n31374\n43029\n27589\n55396\n82598\n36505\n66468\n99979\n46412\n93679\n16088\n78333\n72288\n94445\n35902\n9059\n25940\n82481\n9514\n89776\n54930\n66623\n43401\n58147\n37583\n51330\n82470\n2138\n7140\n19777\n44117\n70692\n7389\n59203\n74154\n79675\n91944\n38736",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "25\n41166\n33702\n12415\n49246\n52478\n73891\n80193\n74911\n70120\n18005\n2424\n89906\n7149\n32391\n35046\n2008\n71544\n9611\n11967\n51556\n6461\n94886\n24068\n1360\n30665",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "98\n90981\n82984\n80571\n74964\n67165\n92084\n21360\n36157\n301\n38029\n41519\n96028\n21293\n58078\n57752\n77702\n7893\n4575\n82156\n64919\n58244\n96400\n17912\n70506\n16506\n12046\n54358\n27359\n24231\n18079\n48533\n75799\n9544\n19471\n52552\n47107\n12398\n19319\n42292\n15380\n98808\n25675\n41095\n97458\n36746\n73720\n83436\n34164\n7389\n16421\n50397\n19917\n81237\n376\n21662\n40258\n79681\n40525\n53229\n84805\n60323\n98348\n87708\n75236\n99487\n51811\n18889\n55976\n93919\n29094\n68551\n18768\n95483\n21875\n56451\n51354\n32083\n47038\n30904\n82812\n62090\n28639\n91415\n62562\n84791\n10175\n94478\n47136\n40451\n30364\n87565\n43926\n42044\n89295\n58026\n60951\n25565\n6637",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "106\n50861723\n62588365\n36504009\n80421139\n55184113\n167630\n56270415\n23620660\n77665784\n44013485\n81713883\n98823613\n86578980\n36607788\n63197405\n58043917\n67461760\n24577944\n13337445\n94977680\n25337374\n8087591\n63931138\n72141207\n37002530\n70153787\n13934939\n96118673\n45200554\n63088383\n76963319\n20717706\n45376583\n15166784\n47371394\n90778933\n19870229\n92862899\n19029754\n40950361\n39115243\n53815879\n62534138\n84101762\n63727354\n76583686\n94683348\n32219206\n56875609\n89256425\n52411454\n32328064\n16136832\n22049696\n1047093\n67113272\n46201579\n60341638\n81225978\n91880568\n56197300\n59139240\n75684698\n49986639\n16228085\n10237092\n69774731\n30095868\n51535446\n31283595\n52939388\n28036392\n13346365\n46041255\n25226656\n52823146\n24484337\n40142939\n2142937\n45263150\n93743025\n27076474\n96982279\n44624585\n534938\n28757701\n33280432\n45744612\n49923820\n50616942\n25369558\n58684922\n97081669\n2070245\n20031286\n12041553\n5876331\n48001156\n80546737\n54187088\n48103877\n35673246\n54838651\n28484114\n87780938\n16975772",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 106)"
    },
    {
      "input": "106\n51556129\n84463528\n79698772\n77488082\n22173707\n38276188\n91247956\n14828144\n54363302\n94948699\n44383908\n55762325\n72530077\n7606500\n54438232\n15689271\n38335619\n3420301\n72816504\n63130687\n55967463\n43219689\n39760700\n69077408\n69352759\n51906524\n46856237\n21781896\n29633914\n10217063\n51695999\n97544603\n27857512\n72542869\n62195075\n85834862\n9544546\n46992455\n5030586\n2909570\n87117424\n25362352\n43354579\n8502476\n659186\n93055802\n44830675\n66512752\n95020011\n22629730\n96737535\n41269956\n45588148\n85416724\n82641273\n6677404\n98689523\n16666771\n4599698\n70316962\n97926347\n75799279\n13764364\n33384390\n80837813\n71663927\n16243430\n74089149\n38296929\n24309423\n23206082\n6865044\n38126820\n72533283\n95840964\n88598593\n48500917\n61752232\n17303419\n49995014\n53775974\n51418534\n32603966\n76826927\n31233873\n21616871\n37449581\n23209574\n89015857\n60382585\n10995149\n34170057\n74391082\n41006232\n82335944\n9775327\n35333466\n74271173\n88323389\n42652638\n44670893\n96664913\n80668857\n89861922\n80501165\n42754006",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 106)"
    },
    {
      "input": "2\n100000000\n1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 2)"
    },
    {
      "input": "106\n1\n1\n100000000\n100000000\n100000000\n100000000\n1\n100000000\n100000000\n1\n100000000\n1\n70287841\n86274377\n100000000\n88535552\n12689278\n100000000\n100000000\n70219031\n92992069\n100000000\n1\n30479750\n1\n1\n1\n19144228\n95458366\n100000000\n1\n1\n1\n1\n25241917\n1\n100000000\n100000000\n1\n1\n39213322\n100000000\n1\n100000000\n15364184\n27528640\n1\n54923798\n100000000\n100000000\n1903959\n38376178\n99227009\n1\n65292744\n1\n9587116\n1\n100000000\n34473637\n1\n70993057\n100000000\n84883123\n100000000\n1\n1\n1\n1\n100000000\n1\n5609568\n1\n38846776\n1\n100000000\n100000000\n1\n100000000\n100000000\n100000000\n100000000\n100000000\n5538446\n100000000\n100000000\n89202236\n44550614\n66774580\n100000000\n78230980\n100000000\n100000000\n1\n1\n100000000\n1\n41943839\n96480693\n69808872\n100000000\n1\n48561712\n100000000\n51687263\n48804032",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 106)"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:49",
  "total_test_cases": 20
}
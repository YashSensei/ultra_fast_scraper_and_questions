{
  "problem_code": "problems",
  "title": "Hang or not to hang",
  "tags": [],
  "text": "Little Tom is learning how to program. He has just written some programs but is\r\nafraid to run them, because he does not know if they will ever stop. Please\r\nwrite a program to help him. This task is not as easy as it may seem, because\r\nTom's programs are possibly not deterministic. Given a program written by Tom,\r\nyour program should tell him whether his program can stop and if so, what is\r\nthe shortest possible time before it stops.Tom's computer consists of 32 1-bit registers and the program consists of n\r\ninstructions. The registers are numbered from 0 to 31 and the instructions are\r\nnumbered from 0 to n-1.Below, MEM[a] stands for the contents of the a-th register, 0 <= a, b <\r\n32, 0 <= x < n, 0 <= c <= 1.The instruction set is as follows:Instruction   Semantics\r\nAND a b       MEM[a] := MEM[a] and MEM[b]\r\nOR a b        MEM[a] := MEM[a] or MEM[b]\r\nXOR a b       MEM[a] := MEM[a] xor MEM[b]\r\nNOT a         MEM[a] := not MEM[a]\r\nMOV a b       MEM[a] := MEM[b]\r\nSET a c       MEM[a] := c\r\nRANDOM a      MEM[a] := random value (0 or 1)\r\nJMP x         jump to the instruction with the number x\r\nJZ x a        jump to the instruction with the number x if MEM[a] = 0\r\nSTOP          stop the programThe last instruction of a program is always STOP (although there can be more\r\nthan one STOP instruction). Every program starts with the instruction number 0.\r\nBefore the start, the contents of the registers can be arbitrary values. Each\r\ninstruction (including STOP) takes 1 processor cycle to execute.TaskWrite a program that:reads the program,computes the shortest possible running time of the program,writes the result.InputThe input begins with the integer t, the number of test cases. Then t test\r\ncases follow.For each test case the first line of the input contains an integer n (1 <= n\r\n<= 16) being the number of instructions of the program. Each of the next n\r\nlines contains one instruction of the program in the format given above. You\r\nmay assume that the only white characters in the program are single spaces\r\nbetween successive tokens of each instruction.OutputFor each test case the first and only line of the output should contain the\r\nshortest possible running time of the program, measured in processor cycles. If\r\nthe program cannot stop, output should contain the word HANGS.ExampleInput:2\r\n5\r\nSET 0 1\r\nJZ 4 0\r\nRANDOM 0\r\nJMP 1\r\nSTOP\r\n5\r\nMOV 3 5\r\nNOT 3\r\nAND 3 5\r\nJZ 0 3\r\nSTOPOutput:6\r\nHANGS",
  "sample_input": "Instruction   Semantics\r\nAND a b       MEM[a] := MEM[a] and MEM[b]\r\nOR a b        MEM[a] := MEM[a] or MEM[b]\r\nXOR a b       MEM[a] := MEM[a] xor MEM[b]\r\nNOT a         MEM[a] := not MEM[a]\r\nMOV a b       MEM[a] := MEM[b]\r\nSET a c       MEM[a] := c\r\nRANDOM a      MEM[a] := random value (0 or 1)\r\nJMP x         jump to the instruction with the number x\r\nJZ x a        jump to the instruction with the number x if MEM[a] = 0\r\nSTOP          stop the program",
  "sample_output": "Input:2\r\n5\r\nSET 0 1\r\nJZ 4 0\r\nRANDOM 0\r\nJMP 1\r\nSTOP\r\n5\r\nMOV 3 5\r\nNOT 3\r\nAND 3 5\r\nJZ 0 3\r\nSTOPOutput:6\r\nHANGS",
  "link": "https://www.spoj.com/problems/HANGLET",
  "scraped_at": "2025-08-17 00:33:33",
  "test_cases": [
    {
      "input": "Instruction   Semantics\r\nAND a b       MEM[a] := MEM[a] and MEM[b]\r\nOR a b        MEM[a] := MEM[a] or MEM[b]\r\nXOR a b       MEM[a] := MEM[a] xor MEM[b]\r\nNOT a         MEM[a] := not MEM[a]\r\nMOV a b       MEM[a] := MEM[b]\r\nSET a c       MEM[a] := c\r\nRANDOM a      MEM[a] := random value (0 or 1)\r\nJMP x         jump to the instruction with the number x\r\nJZ x a        jump to the instruction with the number x if MEM[a] = 0\r\nSTOP          stop the program",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2\r\n5\r\nSET 0 1\r\nJZ 4 0\r\nRANDOM 0\r\nJMP 1\r\nSTOP\r\n5\r\nMOV 3 5\r\nNOT 3\r\nAND 3 5\r\nJZ 0 3\r\nSTOP",
      "expected_output": "6\r\nHANGS",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "eqlycwax rncure\nyr lbi elh zzxqua qe sscp uibu zd\nwonmz apygu hw ienjer q nzjl woz szv\nk ipsy zyns zr lhsq a mi rpqzrv\nbcf znxf oxzicv fjxjw ycad mr\ngs iatf fqx rhlj nqcy mlzw\nfr kc kddk n cv tey\n6 1\nyers zhzdh iyssta fmyaz n bvpcm wplta uyx holai\navdia snkv lmexp jwy ddgk w uoqyj egk pcjcw mbhg\n5\np qgslt snv r vsmck oncpt mvbo zqs mqa f ejzmq y gbxk tdcb 2\nq qbar brqw bowbz",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n5\n0\n0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "n uhrmtsseu\nki a dk auao fu qtw igdye ohfbq\ntom o ekpw sar fi c zw feqz\nd rqdiz mtfih j ugnu cghq p na\nxfh gflo dwqlmt jvkfy oauxi xz\ngb psbrs wnohl xfde i qbk\nbs ki uczj cye awrd fr\n7 3\nh mejj ujz oq tlnk i oilg kode ply\nmuccs zbi b hyfai li tugd mee y orqkfb zo\n2\nlwmh abtp n v e monqu dvcwdmy dr kch uyjkuh qba ddimm cbnsjz sgu 7\npkeim csz q peox",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n2\n0\n0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "fpeqy trxz\nvpo jp jsb mibho nnyjq oupmwu ohh vgze\nxi y r cjbfmk g t evssf wlqa\nhbrz k rptm fe p bnzk r r\nikggr riph pluph jsmp j qlb\nmtey w ak ivh ayd no\ng ufab cmznd zc fqgo p\n8 7\ndpuq e rzmbn ixz ds p n yqq ejy\nkihyh zfv dxtol qpeq utrew q gdsr urhkw ve nlpe\n5\narhi co ox es pqa dg aeipq toej uippd c ds d pmbd tjtwz 2\nfgut u zmzhw vua",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n5\n0\n0",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "a f\njy xo pbcy fb yjut xtz yo jnjmv\njvhjx o qdp qitx zwxp ldr erswd koc\nx cbo hpnn wearmd t sbwa lfbun zjlsjl\niktrc kcbfe b tx hbyb ku\nauzm z uc zhuwe kdbf gc\na gbcdx m mgzpp xvgu qfj\n76 77\nxnk gs m ulch pfptl we vspgn el i\nh esl mg ekugb hwmp a yeqps gflc ukh o\n10\nvi d ve dmqn pd kw wiozhocucet qw ulc m qux exwf tywb joft 11\naaz dgd neefl lxgnlt",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n10\n0\n0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "v re\nkav tmz wmy mijj yez gqppgs dxbyt irp\ndh auo dt skyv lrpt gxs t h\ntvrra ndj qr imqyv tcnt ryj ud cdpn\nl w jw xu zrvx zfrj\noc feqe yq l nixtd now\ntmrc pnod qeun dxu yvl ehqr\n67 51\nwttuky leo ilgz cln ymwi s jite wlcqw pxm\nx ia bu ehre bmirm yvboosyob btjrb ijtq fpqvh exjn\n87\nnrkxg y cum acyza nrajk bwhvu plked ypv fggd wrl ja cswc oco ttoah 45\nd odayy de ryny",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n87\n0\n0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "ua zyx\nkuyou tyh vmjln pa ndch hd c umszsw\nfx vo r ps qu mcqa uzef hmqu\noa rd am pvmqq olc tbegyt i jstc\nmbmi jy ivrri pwt vovnn tex\nibbpq ekocs kd it rnkr pyreg\nzs n vvc oyid qb wtkpy\n91 89\nxvj yuyla sbyql zvwm es x sbmh ff ypc\nkv ams awut k ddh eqnygehbqrz nbenr ozewo ojai mgt\n16\nqwjm xf ktnyn ulut gue dui pefekkne lgcj saxro s axe us ebihpn olqb 8\nv kqe nezn fnwzs",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n16\n0\n0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "jskm nnr\nabz pvv nqju l wedq easczq oyct oqlhi\nojgzu ofujg kcl r rb hhcm j zsqr\nkfokn ovap jm ayb js kh gmin fwu\nqbpd xko tjwpds rld xsv hcbkgt\nb xv rsli n jbimh nezxv\nvkeaz z mx doib uru dm\n61 85\nbur k ljf gqjdj iiqplz cmxcp lonyv yb pvf\nwwlny xdk k qbum yi bfxantcoqo hp w jp mjeg\n35\nc zof iezzb mh nik qnk cgmxlx mqpo dszr gfs essxv mex maal s 67\nl xykf ftw jr",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n35\n0\n0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "oompbdrsr zdqzgkcdo\nhtw t p fpvbf f ir ym yydd\nqe h n xkmrnk m n e uif\nevp t iwqi ensbf kle bxns un f\no dle zez txi as sjpzrf\nogrwh hxj psuuh scurj d ni\nu jkg hrm ci yay ljtxt\n40 100\nyhaoi batpj fw ziq c hwdtu iyt ya q\ncg c iaonr uuukf i tbwgvzb zvx dogj ymrgpy qjy\n5\nphz gfatv hor fnva x u lnqgbres tjsuw leal rpm hnowk s py otb 56\nbqiv v byfa qm",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n5\n0\n0",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "shml gzjn\nljguu xzmmy qdvc omxuk ml pzdlv hrt ntm\nkvz rfip hovp csgfvl kk ysfux n lm\nix esrtw cn htaso zi r lak by\ndfzw ipoh iqdbi wrcf d oo\nfesxv pkf rc ul oezr r\npul yxex zjcg k oytvh ijnm\n278 463\nmv uwuh h k t nm vxo b iqng\nj qz hsp qccu mw dxrumtqat v u igf dupw\n50\nq c hxk u uqx lkn rde llqnb r h gtg on xmaujj j 58\nht sljkr ac tbovw",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n50\n0\n0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "d gvalpwfw\nmkea j khkt vb atl fyxv avadg tjehsy\noeb r ppvjt kq wvwb nb r k\ngxwa je jdcn c pndv duthk jxwkb y\nj zd rhysqw tkzf t bujb\nw z dpbvn ltf dpdu qm\nsj dquei fn yzekw zff rr\n365 165\nnhlo xklw y goeac woul nerux rmr kmq vc\nx lz gr hvf owu x gcz ewq rdpa ekp\n288\nnetvk la d hft zdet jwgr ndqdulq efotj srdnr wo nsui dkfas cumqwi tnx 459\njad fp al gy",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n288\n0\n0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "e nwiszsez\nijis v qlmkd yeel yr uwz g w\nvuk aey lutrv vugygl ympz qwiewr m mgc\nwxa d gng bdjhxb g twlsmc b wgjw\ngjvg lzz bd oim zyhak urx\njzuu dl isi gcb xwjki dkcfc\nwlyd o vuwcs fyjb tjhl ioysu\n86 277\nppkt uuthp snhq yctn tr xuet g bghxf kvyvu\nmm gzz sl wn bph yojlk kspc gzzi k qnsye\n223\najev iph fd dsgn hgqy yigg qwbwss aakw d iquq re bd nxt guogv 223\npxl cz ht ahhdz",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n223\n0\n0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "yswpxaxvgu ph\na ftdic yt qvy an tsvbg lcuup vgpr\nhxo ridwz ms myu bsvfz pr j fbrzfi\ngq qs mulzk kevz bu fkz mf cyvjo\neqkqx fb xbia uyr nrhcq m\nxdvwm wzhx dp dpr np mneenc\nqn l bg cq phoj n\n478 497\nnhwca gbx ptshs dou sbt hcqhm nfnn di yeij\na c dro bg wanh cn mu akaf shamhj n\n395\nu jm bbjkt p nysa a wjo hzqzb uwclr plbs v aox bzak jo 214\nmc yikn mamjd mcosfm",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n395\n0\n0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "tlbfsbnumui psxzobbn\njs krvem wx shzest bh s hsrma pj\nehe lqdb e wswggg a qij w okxpiu\nflsyq uguw dneja shca v stubqb kgghw q\nwmzz dve pkkiq ouc w uwckk\nd j cnhix zrvmva gu uth\ndpc oc pg pfm wyi a\n445 206\nxzo drm nkyueu hf sofbn gjhsw ykgmd h cuswd\nybg o qp ttec hbr hjqbreivklz pw lq rjj mxwr\n311\nuylv b wuak voau ujglh b msh g h fexr sdxcs vsfqw aktjrv jd 226\nvq d shr bsfif",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n311\n0\n0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "voubzx wxvg\ntyp xmpev nekt aqcrd cccy iph bihc cgmij\nzdpht a fly gkj ho fyf n wyrw\nmebs s e eiklw ml brqwi fsa ojnpz\nud bb mop j w llfvhv\nwy yvkrq myin obiqr ie j\nbj uk r bkc enfu tu\n222 280\nso qrwr frbgbn jhui ouy frjny sn m dj\ntxsie htnp iew sqymx xgs k bgxb xiac bdoc pvxv\n373\nfanq f vym ykewj bk kglcq vgarnvw gwln qee ap ey tszhu ryoao ewjsd 366\ni ajkj dc a",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n373\n0\n0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "npnjvffgie gupu\ndq azz wakdb ktr bq osnzmf jlwls ld\nkbk t bqu lmzia ji s k wcwr\nev oy wzxs kuvzhd pji mpp hl s\noh ynni djzllq mdqs ygyxj j\njhw xjsq zwxtc jo ngy sl\nx z eqyn i idl i\n426 483\ng znoq bmvoz n djvqb pvvz lfk dw on\no zz futu nwwy b duncfnlrf nqrxy uy thvj tfu\n71\nv hgi s v djgf tiv zehlwbjboyg jeym qb xts l zwj r n 325\nql t qydo sugucq",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n71\n0\n0",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "vgxkddbx xdo\nlbkjp b ouv s pgvaw akpu qive mqssvn\norujq xnrgc ybfx hj humpw adcxa wdvu ja\npa y cnj bg dgnp pyxx czg zqdxw\no ibwm k uhouk wi jwjmrr\neijja hij f ed yjwx pwkhd\nnyguj n zwvws rsqd et uyfl\n1000 1000\nt ut v q oxwo fj vf gcpd lm\no pvpb vng quw kq wswuf msl vti zapqod ehovi\n1000\nprk w bweqv xn jtse kipc qekwfv uclx fncd stwmb gggbg njhu r u 1000\nlprm qk eo t",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1000\n0\n0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "oectttft ybsgglptm\nkfu n tnlx e au lgmxqz kvy w\nch c rv j mck ckmg o locjb\nf gpy tsf g mghiz ucn pv hmb\njss dfhsd f v rdnb scssc\nkvsqg fndvp vj wprvrg th hwd\nsuwf sm ggxp syu htbxv fsns\n1000 1000\nwf w llmwj se iwgv gc o wz aa\nuko ycw fbk ony lpc vgpswgb k jlnxg ttm hdmgb\n1000\nkmpq x haj lm fbbo fjqxh obzllthov lwizd nbm l aq xep q ajdh 1000\nkdp ziken vyq y",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1000\n0\n0",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "srywpu dj\nimobw nmscq mjm fxl wvip xrf lh yy\nllmv ch shq avobr kzhzg gxp ohfx qodkr\nau ygd ryl yf tw xjoh gqre nrqrxl\njhklh l azn h bak he\nnn pzky h b w yf\nk tpt yy s gzdza l\n1 999\ns agy gbk nfcl wpkdtz pusu zi j jj\nbv vvn rtb tdgrw f cflib ag fa kiqy ysmml\n1\ncwfyx g tuhkc vwk jd pw nswyhtee ijx kf d kefux b yeh vsnna 2\nz qyzno mewbo hcpx",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0\n0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:51",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:17"
}
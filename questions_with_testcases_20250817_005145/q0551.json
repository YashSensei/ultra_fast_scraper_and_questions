{
  "problem_code": "problems",
  "title": "Street",
  "tags": [],
  "text": "There arenlots on one side of a street (wheren≤ 500). We would like to erect at mostkapartment buildings on these lots. Each building must occupy an interval of at mosttconsecutive lots. Moreover, each lotihas a height restrictionr[i](wherer[i]≤ 100). A building cannot exceed any of the height restriction of any lot on which it is built (that is, the maximal height of the building that can be erected on lotitojis:H = min{r[i], r[i + 1], ..., r[j]})Hence, the maximum usable facade space of the building is:H × (j − i + 1). We would like to have a program to select at mostknon-overlapping intervals to erect the buildings such that the total usable facade space is maximized.Example 1Consider a street of length 10. The height restriction of each lot is as follows:7, 3, 12, 11, 13, 4, 8, 6, 6, 20Suppose we would like to erect at mostk= 2 buildings and each building occupies at mostt= 4 lots. Then, to maximize the total usable facade space, we choose two intervalsr[3..5] = (12, 11, 13) andr[7..10] = (8, 6, 6, 20) (see “Example 1” in the figure below). The maximum usable facade space is 3 ∗ min{12, 11, 13} + 4 ∗ min{8, 6, 6, 20} = 57.Example 2Suppose we would like to erect at mostk= 3 buildings on the same street with the same height restrictions as in Example 1, and each building occupies at mostt= 4 lots. Then, to maximize the total usable facade space, we choose three intervalsr[3..5] = (12, 11, 13),r[7..9] = (8, 6, 6) andr[10..10] = (20) (see “Example 2” in the figure above). The maximum usable facade space is 3 ∗ min{12, 11, 13} + 3 ∗ min{8, 6, 6} + 1 ∗ 20 = 71.InputThe input file is as follows: The first line contains three integersn,k, andtseparated by a space character, where 1 ≤n≤ 500, 1 ≤k≤ n, and 1 ≤t≤ n. The rest of thenlines containnpositive integers representing the height restriction for thenlots. For Example 1, the input file looks like:10 2 4\r\n7\r\n3\r\n12\r\n11\r\n13\r\n4\r\n8\r\n6\r\n6\r\n20The input should be read from the standard input, and your program will be run several times, each one with one of the test cases.OutputThe output file contains an integer which is the maximum usable facade space. For the above example, the output file looks like:57National Olympiad in Informatics (NOI) - 2007",
  "sample_input": "7, 3, 12, 11, 13, 4, 8, 6, 6, 20",
  "sample_output": "10 2 4\r\n7\r\n3\r\n12\r\n11\r\n13\r\n4\r\n8\r\n6\r\n6\r\n20",
  "link": "https://www.spoj.com/problems/STREET",
  "scraped_at": "2025-08-17 00:33:05",
  "test_cases": [
    {
      "input": "7, 3, 12, 11, 13, 4, 8, 6, 6, 20",
      "expected_output": "10 2 4\r\n7\r\n3\r\n12\r\n11\r\n13\r\n4\r\n8\r\n6\r\n6\r\n20",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4 10 2 2 8 4 1 1 7 10\nld dcof ckiai g klb fup xl drufs ywhfd 7",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "5 4 4 8 7 3 7 9 2 8\nln yvhak gp qrvc u nvtbs gs uncia a 9",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "2 2 1 9 3 9 4 2 7 3\nx fwy wrp cxaf ina kjgdk vzto juso x 10",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "63 88 69 54 42 11 31 44 30 18\nwlt p lua xs btunt caax ytskk mbrl kwk 56",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "72 26 75 89 90 12 10 68 60 43\nub ehl qo utta owjg uu zdav abpi eslmu 84",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "87 48 50 74 91 94 3 8 7 51\njto tcw p rfik sl nl kry ul vm 9",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "14 71 70 81 82 93 78 11 10 87\ngcj x c bdjc iluw y v ve v 2",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "33 44 54 14 90 93 85 70 27 97\nhi xi in hxwf mqh dwitm uhhnw uhas jupe 47",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "171 123 46 176 206 128 206 248 190 143\nlauug cagr vvcbv klzbh biod px dbtcm srvk cnxn 173",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "72 160 199 39 156 187 139 198 175 214\nqb aj xt nvno wspth a pupi em r 170",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "160 230 155 72 126 25 44 242 216 166\nb ix oswk t vmem tyrar a mkiyp assbq 119",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "32 65 208 155 240 228 239 157 109 71\ngdv hd inalq bvj ipn deo veaf fda ns 51",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "214 210 110 173 81 140 207 79 222 96\nujfo eeu nag mx nd kxfq xd wb a 145",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "185 86 178 180 196 238 165 80 138 167\ny clkq ukpp ulkai rai sleed ou su xmro 227",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "219 247 204 33 64 225 248 63 204 242\nw ztbob fbtoz bi ekag hncmt dbs efb df 132",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "500 500 500 500 500 500 500 500 500 500\nc cai u kf q r swfwd rs jqxa 500",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "500 500 500 500 500 500 500 500 500 500\nucd gltz zgtr flsqv cfd cfgut zpgmb rcrn ju 500",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "499 2 499 500 499 500 500 1 1 1\nbbfj fvf ndmua jmrk e x ew ewuuz brzn 499",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "500 2 500 1 2 2 1 499 500 499\nmps rjvhi hbjsz hkkag kp zs nr nbzu hqsbl 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:47",
  "total_test_cases": 20
}
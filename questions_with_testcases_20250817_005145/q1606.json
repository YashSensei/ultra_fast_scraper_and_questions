{
  "problem_code": "problems",
  "title": "Guernica",
  "tags": [],
  "text": "Guernica is a famous painting by Pablo Picasso, depicting the bombing of the Basque town of Guernica during the Spanish Civil War. It shows the tragedies war inflicts upon individuals, particularly innocent civilians. The work has gained a monumental status, becoming a perpetual reminder of the tragedies of war, an anti-war symbol and an embodiment of peace.After you were told that the painting was moved from the Museo del Prado to the Museo Nacional Centro de Arte Reina Sofia in 1992, you are on your way to that place. At your arrival, a creepy sight awaits you: Malicious vandals have cut the Guernica painting into several pieces and distributed them throughout the whole museum. A team already gathered all N pieces they could find. All these pieces have the same dimensions! Observing the dimensions, they conclude that there are far too many pieces to rebuild only Guernica. The vandals did in fact not only disassemble the original painting by Picasso but also several copies of it! Exactly P pieces are needed to reconstruct Guernica (or any of its copies).Now experts have to evaluate how probable it is that sets of P pieces belonged to one and the same initial painting and assigned each such combination a matching score. By maximizing the total matching score, they would be able to determine which pieces belonged to the same initial painting. Can you help them calculating the overall maximum matching score for all of the paintings?InputThe input consists of several test cases (T ≤ 10), each of which starts by 3 integers on a line: the number of pieces found N, the number of pieces per painting P and Z, the number of possible combinations. (P, N ≤ 15, Z ≤ 1’000) The next Z lines each contains P+1 positive integers (i1, i2 … iP, s), that means a score of s is given to the combination (i1, i2 … iP). (i1 ... iP ≤ N, 0 < s < 10’000) The last test case is followed by a single line with 3 zeros, which should not be processed.OutputFor each test case, print the case number and the largest score. If it is impossible to group all pieces so that entire paintings result out of them, print -1.ExampleInput:9 3 31 2 3 14 5 6 27 8 9 39 3 41 2 3 11 4 5 21 6 7 31 8 9 43 3 11 2 3 95 4 12 1 5 3 100 0 0Output:Case 1: 6Case 2: -1Case 3: 9Case 4: -1",
  "sample_input": "Input:9 3 31 2 3 14 5 6 27 8 9 39 3 41 2 3 11 4 5 21 6 7 31 8 9 43 3 11 2 3 95 4 12 1 5 3 100 0 0Output:Case 1: 6Case 2: -1Case 3: 9Case 4: -1",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/GUERNICA",
  "scraped_at": "2025-08-17 00:33:35",
  "test_cases": [
    {
      "input": "9 3 31 2 3 14 5 6 27 8 9 39 3 41 2 3 11 4 5 21 6 7 31 8 9 43 3 11 2 3 95 4 12 1 5 3 100 0 0",
      "expected_output": "Case 1: 6Case 2: -1Case 3: 9Case 4: -1",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "6 4 3 3 9 4 9 3 6 3 8 6 9 4 9 7 1 3 2 4 6 9 2 8 3 6 4 4 5 6 7 6 3 1 2 1 9 3 8",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "3 5 8 2 9 8 4 5 7 6 9 3 4 5 6 8 6 8 4 7 5 7 2 1 4 9 9 1 1 1 1 9 3 10 5 2 1 1 3",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "6 2 3 9 10 4 10 1 2 3 7 3 1 9 5 10 1 2 10 5 3 10 6 4 10 9 10 1 7 8 9 9 8 3 5 7 2 2 2",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "9 14 12 9 2 2 5 10 7 11 5 15 9 10 11 3 2 7 4 2 7 10 5 12 4 13 11 11 4 8 12 12 11 15 5 9 3 11 10",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "13 10 14 12 11 8 6 8 9 3 10 14 9 11 5 11 12 14 9 6 11 6 12 15 13 1 5 7 11 1 2 12 2 6 12 11 8 10 9",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "10 13 7 10 1 2 1 14 3 4 5 4 12 10 7 7 14 4 8 7 9 11 7 9 8 2 10 5 10 13 6 4 1 7 5 5 3 12 9",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "10 2 6 5 5 6 3 8 2 14 5 12 11 8 8 2 8 6 3 15 9 9 5 15 9 1 1 10 4 13 12 10 4 14 10 10 14 4 5",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "3 6 8 10 2 12 6 8 6 9 4 7 12 2 12 8 15 13 6 7 14 4 15 7 11 2 9 2 7 8 11 7 15 4 14 14 8 15 1",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "6 3 6 1 1 7 6 7 2 5 3 4 6 4 7 2 6 4 4 2 2 2 2 7 7 3 7 4 2 7 5 5 5 5 6 2 3 5 2",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "1 4 3 3 5 2 7 7 5 2 7 6 5 1 4 2 7 6 4 5 1 7 3 2 1 7 6 3 4 3 7 5 7 7 4 7 5 4 4",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "6 6 5 1 6 4 6 5 2 7 6 7 6 2 2 4 4 7 1 2 3 6 6 5 6 6 4 2 7 4 6 4 7 5 1 7 1 1 1",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "4 3 3 3 4 7 3 2 5 3 7 3 7 6 6 1 3 5 6 2 3 5 7 2 3 3 5 2 5 4 3 5 1 7 2 4 2 2 6",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "7 2 4 5 2 3 1 1 3 6 6 6 4 2 2 1 4 6 5 4 4 1 4 3 3 6 3 6 1 4 6 1 5 1 4 1 1 5 4",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "6 2 1 7 6 3 2 4 2 4 4 2 4 6 3 1 1 5 6 5 3 4 5 3 4 3 4 5 1 5 4 7 6 2 5 5 3 6 1",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "5 2 7 4 1 3 2 6 1 5 5 7 4 1 6 5 3 3 6 1 7 3 7 4 5 1 3 3 2 3 2 5 6 5 6 4 6 3 4",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "14 14 1 2 15 14 14 1 1 14 2 1 1 2 2 2 14 15 15 1 2 2 14 14 15 15 15 2 2 14 14 14 15 2 15 1 1 1 15",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 2 15 2 1 14 15 15 15 1 15 15 15 14 14 15 15 14 14 1 15 14 14 2 14 15 1 14 15 2 15 1 14 1 14 2 14 14 1",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:50",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:09"
}
{
  "problem_code": "problems",
  "title": "How to Handle the Fans",
  "tags": [],
  "text": "Trey Parker and Matt Stone, the creators of “South Park” are having some problems handling their fans. The number of fans is so huge that can’t even count them properly. So they hired “N” employees for counting the fans. All the “N” employees had their own separate offices and they were located in a straight line with positions numbered as 1, 2, 3 … up to N. Fans can come to the office of any employee at any time and tell them how they feel about the show and if they are lucky enough, they may get to meet Trey Parker and Matt Stone.All the employees keep on updating Trey and Matt about the number of fans currently in their offices, so at each moment, they will have a list of “N” positions and the number of fans in each of these positions. Trey and Matt suddenly start taking a walk from office at position “A” to position “B” to meet their fans, but before they start walking they want to know the sum of all the fans in the offices from position “A” to “B”. But counting them one by one is taking a lot of time, so now they hired you, an awesome software engineer to do this task. Your task is to find the sum of all the fans present in the offices between positions “A” to “B” (\"A\" and \"B\" inclusive). Let’s see if you could do it fast enough.InputThe first line of Input contains two integers “N” and “Q”. “N” is the number of employees hired by Trey and Matt. “Q” is the number of queries to be followed.Each of the next “Q” lines contain a query. A query can be of two types:“add P F” – this means that “F” number of fans came to the office at Position “P”“find A B” – this means that Trey and Matt wants to know the sum of fans present at offices at positions “A” to “B”OutputFor each query of the type “find A B”, output the sum of fans present at offices at positions “A” to “B” in a different line.Constraints1 <= N <= 10^61 <= Q <= 10^51 <= A < B <= N1 <= P <=N1 <= F <= 10^4ExampleInput:10 10\r\nfind 1 5\r\nadd 5 8\r\nadd 6 2\r\nfind 4 5\r\nfind 4 6\r\nadd 2 4\r\nfind 2 6\r\nadd 6 7\r\nfind 1 6\r\nfind 7 10Output:0\r\n8\r\n10\r\n14\r\n21\r\n0",
  "sample_input": "Input:10 10\r\nfind 1 5\r\nadd 5 8\r\nadd 6 2\r\nfind 4 5\r\nfind 4 6\r\nadd 2 4\r\nfind 2 6\r\nadd 6 7\r\nfind 1 6\r\nfind 7 10Output:0\r\n8\r\n10\r\n14\r\n21\r\n0",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/AKVQLD03",
  "scraped_at": "2025-08-17 00:34:02",
  "test_cases": [
    {
      "input": "10 10\r\nfind 1 5\r\nadd 5 8\r\nadd 6 2\r\nfind 4 5\r\nfind 4 6\r\nadd 2 4\r\nfind 2 6\r\nadd 6 7\r\nfind 1 6\r\nfind 7 10",
      "expected_output": "0\r\n8\r\n10\r\n14\r\n21\r\n0",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "6 10\n5 10\niyy 6 9\n4 1\nw 3 8\n9 9\nutyt 8 8\n2 9\nck 8 10\n7 3\nzfbgx 5 8\n5 5\nabe 10 5\n3 2\ni 6 8\n3 6\nyzsq 2 10\n6 8\nwtg 10 9\n9 1\notfcg 9 5",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "8 10\n7 7\nkyztz 1 10\n10 8\ncr 2 6\n6 7\nftjqq 4 7\n5 3\ntllr 6 7\n5 6\nqi 2 1\n3 10\no 1 9\n3 1\nzgkzo 6 10\n3 10\nszg 9 8\n10 10\ntxl 2 9\n6 6\no 3 3",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "6 1\n10 10\nfqvrw 2 2\n4 7\njhhqc 7 7\n8 8\nfkhrv 1 10\n10 4\ndoee 10 6\n9 8\njb 7 10\n5 5\nnu 2 1\n4 4\nho 9 6\n3 4\nyfkxj 5 4\n8 10\ng 8 1\n9 4\noi 4 5",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "53 75\n12 39\njyks 56 46\n43 84\nq 17 80\n1 95\ng 16 9\n69 70\ndi 40 34\n58 66\nag 61 58\n51 13\nje 93 35\n76 81\nl 21 11\n92 53\nrm 3 26\n37 56\nvz 74 75\n15 7\nals 34 77",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "1 14\n36 98\nivzr 28 66\n2 16\nchzho 41 84\n20 48\nk 46 89\n77 40\nsi 15 27\n15 20\nhg 22 51\n8 23\nij 50 87\n53 88\na 64 10\n18 12\na 18 33\n79 68\nmzwx 93 84\n99 28\nm 72 40",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "13 56\n95 70\nidho 29 95\n15 64\nkrhms 96 38\n96 5\nb 6 78\n42 64\nywvk 90 12\n15 80\nlrv 22 88\n4 20\npizpw 24 10\n54 13\nx 6 83\n13 72\nwkv 32 70\n31 85\nqe 58 2\n58 70\npll 3 51",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "43 64\n18 43\ntkh 55 19\n56 86\nn 86 8\n4 15\nbcc 51 65\n8 66\nzxwob 10 78\n64 41\nqtm 40 91\n87 54\np 69 15\n10 80\nuy 30 33\n54 2\nue 58 41\n23 34\nl 36 36\n45 3\nj 10 38",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "88 18\n6 95\ntqq 26 58\n87 58\nuk 57 98\n38 19\nnbv 32 9\n6 30\nqnifk 14 34\n98 38\nvwf 76 49\n50 40\nsbmxo 66 9\n29 57\npu 55 39\n43 5\no 17 76\n39 66\nsikdi 16 58\n13 44\nubgq 35 51",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "407 166\n183 81\nwgtk 209 387\n494 67\noaaml 130 53\n274 476\nwabn 339 314\n414 235\nnczzi 439 299\n403 387\niibj 84 226\n393 455\nvk 419 477\n58 299\nzvd 317 210\n297 183\nuvfxc 223 404\n184 81\nfgnel 141 342\n488 492\ntb 204 341",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "52 140\n88 180\nezsv 389 482\n478 390\nfxz 125 264\n476 402\nuenem 103 217\n215 456\nlox 370 204\n125 497\nowcmm 195 380\n181 414\nivl 158 495\n365 109\neq 86 164\n258 375\nf 376 136\n457 128\nvfvyp 231 452\n227 299\nl 217 321",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "374 286\n341 351\nezvs 63 67\n105 75\nbwxgr 202 356\n464 398\nlfbf 213 354\n388 254\nyanqb 204 235\n496 103\nwm 123 280\n451 498\nlme 153 114\n198 429\na 371 273\n73 173\nabimd 166 159\n404 349\nhoni 223 329\n302 191\nxc 110 104",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "437 332\n457 183\nasa 74 281\n187 484\nrez 71 357\n499 135\nypmf 347 241\n377 151\nkf 404 281\n95 418\nipf 182 138\n116 381\nt 340 76\n380 337\ntucrz 136 459\n187 300\nqiwte 298 264\n297 417\nq 362 385\n107 376\njznqk 484 191",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "73 480\n118 55\nrdw 215 159\n108 157\nvcdur 356 207\n447 179\nbbo 50 158\n330 487\nfvvs 86 87\n271 269\nztsdl 444 223\n478 223\ndy 358 498\n62 307\ngud 236 498\n216 81\nudqn 57 498\n283 468\nckvo 220 259\n364 124\ndanc 450 261",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "176 482\n370 197\nlw 350 298\n442 233\nkqu 419 323\n256 416\nztsa 136 439\n147 461\ni 380 87\n205 57\npshe 354 474\n374 156\nh 463 223\n112 345\nwhs 131 427\n271 160\ntyw 404 332\n453 156\nug 86 173\n124 100\numf 240 303",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "299 120\n181 60\ndfxf 466 177\n106 158\naib 104 386\n173 64\nxu 494 381\n397 481\nnaa 121 158\n411 308\nnvgp 318 336\n454 492\nb 357 95\n209 205\nofojr 173 187\n188 415\nxmkqj 402 415\n279 215\ngaloi 334 292\n287 407\nb 234 52",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000\ndrs 1000 1000\n1000 1000\nyoof 1000 1000\n1000 1000\nwjada 1000 1000\n1000 1000\nu 1000 1000\n1000 1000\nlyzb 1000 1000\n1000 1000\nlgogq 1000 1000\n1000 1000\nanh 1000 1000\n1000 1000\nzjyk 1000 1000\n1000 1000\npxb 1000 1000\n1000 1000\ngjcb 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000\neyug 1000 1000\n1000 1000\ngnoa 1000 1000\n1000 1000\ny 1000 1000\n1000 1000\nq 1000 1000\n1000 1000\nfubi 1000 1000\n1000 1000\ngltt 1000 1000\n1000 1000\nsh 1000 1000\n1000 1000\nvfrhr 1000 1000\n1000 1000\nkpjlg 1000 1000\n1000 1000\nmyawi 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 1000\n2 1\naswm 1000 2\n1000 1000\nvxpq 2 1000\n1 2\nukpmb 1000 1000\n999 1\nkt 999 999\n999 2\noh 1 2\n1000 1000\nbhryv 1000 1000\n1000 1000\nle 999 1000\n999 1\nkf 999 1\n2 1000\nm 2 2\n1000 999\ncjnui 1000 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1000 1\n999 2\nzvl 1000 999\n1000 999\nb 999 1\n1000 2\ngy 2 999\n2 1\nxp 1 1\n1000 1000\nx 2 1\n999 2\noxvkq 1 999\n1 999\nyg 2 1\n999 1000\nbdkzi 1 999\n1000 2\nwsp 2 999\n1000 2\nttzsb 999 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:51",
  "total_test_cases": 20
}
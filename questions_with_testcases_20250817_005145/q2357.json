{
  "problem_code": "problems",
  "title": "Special String",
  "tags": [],
  "text": "A string of letters X, Y, Z is special if there are three consecutive letters from which one is X, one is Y, and one is Z.  For example, XYZXYZ is special, while XXYYZ is not.  Your task is to calculate how many such strings of length n are not special.InputFirst line contains an integer T (1 ≤ T ≤ 30) which denotes the total number of test cases. Each test case contains an integer N (1 ≤ N ≤ 30) in a single line.OutputFor each test case print total number of strings which have a length N and are not special.ExampleInput:1\r\n2Output:9",
  "sample_input": "Input:1\r\n2Output:9",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/MAIN113",
  "scraped_at": "2025-08-17 00:34:00",
  "test_cases": [
    {
      "input": "1\r\n2",
      "expected_output": "9",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4\n4\n4\n9\n10",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "3\n1\n3\n3",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "3\n7\n1\n3",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "18\n27491473\n77216808\n43242129\n94604128\n26733770\n40823780\n52804748\n99252350\n88661571\n25256876\n2341534\n36768450\n66780963\n96711821\n7530878\n76820872\n32940383\n34568777",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "20\n40620244\n9738796\n33154860\n23348762\n41756773\n63418507\n15154113\n43062828\n46790683\n58655164\n77457927\n93513909\n18307896\n70474295\n84388164\n83315428\n18973773\n91871326\n69162294\n75388844",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "15\n47617735\n13986297\n56119656\n51145600\n19479821\n29416832\n8212488\n62640565\n76757343\n56086431\n5897484\n40500925\n65170516\n66146966\n74071109",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "5\n85407712\n47775799\n67318992\n21557790\n82288398",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "6\n61254833\n31641978\n90856754\n78467054\n23162846\n64971147",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "22\n77187\n72149\n58787\n1778\n54347\n74096\n13488\n12554\n39019\n48527\n38551\n99204\n88421\n93972\n65241\n80035\n88709\n43304\n29769\n19358\n6735\n9240",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "30\n33851\n9361\n64832\n55413\n39794\n61744\n64100\n782\n96985\n43996\n95662\n94718\n47040\n18259\n99676\n81083\n95006\n56610\n28289\n55291\n60793\n49689\n83431\n26717\n41625\n50393\n90276\n39779\n32571\n14099",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "30\n95436\n94424\n3026\n90487\n78458\n62192\n67379\n36935\n50802\n38002\n50290\n80393\n76916\n5852\n64560\n53958\n88621\n26639\n56502\n10879\n40938\n21430\n22726\n51615\n91329\n57587\n42235\n60868\n61687\n27957",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "24\n728\n85681\n72853\n40704\n52190\n69802\n11352\n61825\n66402\n20392\n94897\n61918\n79541\n2154\n60454\n75387\n61567\n47828\n11682\n78243\n19891\n6901\n5950\n30956",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "23\n1208\n14584\n92654\n20082\n3910\n43385\n53160\n57235\n12038\n39224\n49137\n94961\n77536\n48584\n52348\n92943\n89939\n29828\n2919\n18971\n9948\n96729\n96498",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "25\n44034\n36325\n40384\n56827\n93281\n30927\n14597\n34366\n8391\n46800\n98013\n82859\n86197\n81623\n47632\n40134\n75706\n58095\n51554\n52980\n70238\n18487\n45420\n1376\n29710",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "27\n66805\n58437\n21299\n15535\n62330\n21739\n45441\n87017\n35118\n95195\n65169\n38122\n18871\n81181\n55278\n33852\n76473\n15761\n9899\n57641\n11848\n73561\n53101\n6365\n72130\n75877\n75356",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "30\n68750199\n60719762\n90060108\n40558245\n64393427\n36707555\n49793010\n97428951\n61001704\n68954955\n97575202\n52085423\n63848330\n72129423\n24676426\n83190996\n87046140\n81965738\n35129569\n46367690\n78987972\n62467939\n49659026\n3064296\n36852902\n94827694\n1218063\n51881660\n54305542\n88248819",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 30)"
    },
    {
      "input": "30\n89245597\n89243352\n40230178\n98058824\n74597253\n77732156\n15977761\n9669436\n3202005\n62365705\n93432429\n6095859\n57376820\n83875403\n94571244\n97955229\n1838324\n48602442\n15432962\n26994024\n86255079\n70391502\n96801913\n41540752\n37366764\n39838212\n44375135\n48034308\n28905731\n97274310",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 30)"
    },
    {
      "input": "2\n1\n1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 2)"
    },
    {
      "input": "2\n1\n1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 2)"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:53",
  "total_test_cases": 20
}
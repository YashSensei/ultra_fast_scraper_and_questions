{
  "problem_code": "problems",
  "title": "K",
  "tags": [],
  "text": "Professor Mahammad was sitting in his garden when an apple fell on his head, and in a stroke of brilliant insight, he suddenly came up withK-dominant notation. An array with lengthLis calledK-dominant, if and only if there is at least one elementxlying in the array for whichoccurrence(x) * K >= L. After analyzing several arrays with this property, professor now, made up a new problem for you. Your task is simple, there are given an array of length N and several queries. For each of the queries, you just need to check whetherthe subarray [l, r] is k-dominant or not.InputThe first line of the input contains two positive integersNandQ, the number of elements of the array and the mean, respectively. (N, Q ≤ 200000).The following line contains N integers which represent elements of the array.The following Q lines contains three integersl,r, andk. (1 ≤ l ≤ r ≤ N).All the numbers in the input section are 32-bit positive integers.Sum of all k's in queries does not exceed 500000.OutputFor each of the queries, print per lineYESorNOif there is an element lying in the subarray which satisfies the condition in the statement.ExampleInput:8 3\r\n1 4 2 3 2 2 5 3\r\n2 6 2\r\n1 8 2\r\n1 8 3Output:YES\r\nNO\r\nYESNote: For the first and third queries x = 2 satisfies the condition. And for the second query there is no element for which the condition holds true.",
  "sample_input": "Input:8 3\r\n1 4 2 3 2 2 5 3\r\n2 6 2\r\n1 8 2\r\n1 8 3Output:YES\r\nNO\r\nYES",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/KDOMINO",
  "scraped_at": "2025-08-17 00:34:13",
  "test_cases": [
    {
      "input": "8 3\r\n1 4 2 3 2 2 5 3\r\n2 6 2\r\n1 8 2\r\n1 8 3",
      "expected_output": "YES\r\nNO\r\nYES",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "8 4\n6 10 3 1 6 3 8 2\n8 9 10\n3 10 10\n6 5 1",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "5 8\n5 5 10 4 7 9 1 5\n3 4 6\n10 5 4\n7 1 9",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "10 4\n3 6 7 1 2 6 4 2\n7 9 10\n9 5 4\n5 1 1",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "35 99\n88 7 91 80 73 2 2 93\n92 61 79\n95 20 4\n34 71 56",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "45 11\n56 82 67 39 96 41 42 73\n25 65 72\n26 25 13\n5 74 100",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "57 26\n39 58 65 3 78 69 32 70\n20 78 23\n59 58 71\n87 19 79",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "38 37\n68 68 8 46 11 92 88 35\n91 14 34\n14 66 68\n29 15 33",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "32 78\n13 42 53 39 34 31 63 74\n81 89 23\n3 57 97\n87 33 55",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "460 155\n103 421 76 405 424 387 241 196\n132 406 200\n114 296 353\n406 228 351",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "443 240\n195 306 144 104 443 166 471 498\n211 460 162\n471 142 211\n218 309 208",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "297 90\n279 398 274 74 321 469 61 268\n148 392 128\n360 86 377\n411 133 395",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "239 439\n406 282 424 400 172 288 233 273\n110 108 185\n167 254 185\n93 497 274",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "368 500\n212 251 248 227 94 97 296 208\n277 238 254\n393 462 379\n204 261 386",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "310 164\n83 479 342 209 162 444 198 121\n292 96 292\n350 82 215\n375 357 263",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "92 304\n87 77 89 128 196 497 233 91\n433 202 277\n160 272 148\n197 365 255",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 2\n1 1 999 999 2 1 2 1\n1000 1 2\n2 999 2\n1 1 1000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1000 2\n1000 1 1000 1000 1000 1 1 1000\n2 2 999\n999 1 999\n2 1000 1000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:55",
  "total_test_cases": 20
}
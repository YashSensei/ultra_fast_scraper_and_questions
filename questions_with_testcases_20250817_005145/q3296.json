{
  "problem_code": "problems",
  "title": "Volunteers",
  "tags": [],
  "text": "ACM ICPC World Finals 2009, sponsored by IBM and hosted by KTH, Royal Institute of Technology will be held in Stockholm, Sweden. This contest will last forN(1 ≤N≤ 1000) days. We need at leastAivolunteers in thei-th day. Now there areM(1 ≤M≤ 10000) kind of volunteers. Thei-th type of volunteers will work fromSi-th day toTi-th day, we will pay them $Ci. Now your task is to minimize the money KTH pay for all the volunteers.InputTen test cases (given one after another, you have to process all!). For each test case:The first line contains two space-separated integersNandM. The second line contains N nonnegative integersAi.Mlines follow, each contains three integersSi,TiandCi. You may assume you can hire almost unlimited number of every type of volunteers.Tip: During your calculation,intin C/C++/Java orlongintin Pascal is enough.OutputFor each test case:Output one line with an integer - the minimum cost.ExampleInput:3 3\r\n2 3 4\r\n1 2 2\r\n2 3 5\r\n3 3 2\r\n[and 9 test cases more]Output:14\r\n[and 9 test cases more]",
  "sample_input": "Input:3 3\r\n2 3 4\r\n1 2 2\r\n2 3 5\r\n3 3 2\r\n[and 9 test cases more]Output:14\r\n[and 9 test cases more]",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/VOL",
  "scraped_at": "2025-08-17 00:34:18",
  "test_cases": [
    {
      "input": "3 3\r\n2 3 4\r\n1 2 2\r\n2 3 5\r\n3 3 2\r\n[and 9 test cases more]",
      "expected_output": "14\r\n[and 9 test cases more]",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "9 1\n3 4 3\n2 10 6\n1 2 1\n6 8 5\n8\nzlw 2 yk tk ahm",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "3 4\n6 2 4\n1 1 5\n7 7 2\n3 4 5\n6\no 10 rhezc kuv xntny",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "2 1\n8 3 1\n1 8 3\n6 2 7\n1 6 4\n1\ngtza 2 vvgzw agh s",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "92 6\n73 68 49\n42 43 33\n58 35 74\n100 85 26\n88\npjdnl 56 jomg z spwm",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "80 67\n25 64 13\n87 40 93\n43 64 48\n90 51 16\n77\nlmr 50 ifh eswg iysh",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "67 97\n32 77 4\n95 64 8\n24 47 37\n24 72 39\n43\njygq 38 feqln k kd",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "53 44\n87 40 46\n11 79 8\n66 18 12\n27 4 66\n29\nuex 39 mr tk tchw",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "62 71\n36 98 92\n13 57 83\n73 94 63\n60 74 61\n54\nr 50 w w gbh",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "184 100\n291 362 107\n62 448 375\n198 462 252\n453 494 145\n234\nepbo 478 oe fgin bc",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "449 350\n478 432 68\n259 422 122\n66 378 394\n451 189 170\n139\nheqye 343 y ivzpe ua",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "174 235\n454 320 398\n121 494 433\n211 387 483\n228 251 432\n380\nkfmjy 363 pis gjlhj qwhd",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "415 496\n66 211 460\n359 300 127\n96 318 363\n276 377 410\n251\nmsgzf 212 dzutc ht mtf",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "138 252\n180 407 159\n234 285 470\n250 210 253\n444 340 396\n418\nypp 301 daoyg pi bnkke",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "473 140\n309 102 88\n248 310 263\n234 415 101\n424 249 308\n395\nweag 252 aa m hj",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "204 300\n410 449 337\n367 357 371\n96 394 103\n370 177 204\n152\ncs 441 grvd llj idyv",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000\nj 1000 cus o ceg",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000\nhwd 1000 pru hqek n",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 2\n2 1000 2\n1 1000 999\n1000 999 1000\n1 999 999\n1\nxpnhz 1000 md e vs",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "999 999\n1 999 1000\n2 2 999\n999 1000 2\n1000 1 999\n1000\nox 2 vbkzn oa yuard",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:56",
  "total_test_cases": 20
}
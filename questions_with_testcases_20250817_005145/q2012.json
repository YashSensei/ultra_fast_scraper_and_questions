{
  "problem_code": "problems",
  "title": "Boxdropper",
  "tags": [],
  "text": "The University of Waterloo is famous for its booming population of geese, and many researchers go there to study them. One day, Doctor Y (known for his work in the field of boxology) decided to go there and investigate how good geese are at optimization problems.At UW, there is a large lake (so large, in fact, that the boundaries are never an issue). Doctor Y decides to drop a number of 2D boxen onto this lake and command the geese to travel from one to another, recording how much time they spend flying as opposed to walking (naturally, the geese won’t swim, considering the not-so-appealing brown colour of the lake). He has a Boxdropper machine at his disposal to do the work for him – he can give it the following commands:B$x_1$ $y_1$ $x_2$ $y_2$: Drop a box onto the lake such that its lower-left coordinate is at ($x_1$, $y_1$) and its upper-right coordinate is at ($x_2$, $y_2$). Doctor Y defines the origin to be somewhere in the middle of the lake. Note that boxen can overlap with one another.G$a$ $b$: Command the geese to travel from theathbox dropped to thebthone, and record the total distance that they fly.Since the scientific community has not yet realized the benefits of studying boxen, Doctor Y isn’t receiving much funding – as such, he only has $500$ boxen at his disposal, and his machine can only handle $10^6$ commands before it overheats.The geese can walk across boxen freely, but sometimes they may have to fly over water to reach other boxen. The geese, secretly participating in the second stage of the Canadian Computing Competition every year, are well versed in optimization problems such as these, and so will always choose a path that will minimize the total distance that they spend flying. Given the commands that Doctor Y inputs into the Boxdropper, determine the distances recorded by it (one for everyGcommand).InputOn each line, one of the 2 types of commands will be given:If the line starts with the characterB, it will be followed by 4 integers ($x_1$, $y_1$, $x_2$, and $y_2$), each with absolute value no greater than $10^6$.If the line starts with the characterG, it will be followed by 2 integers ($a$ and $b$), with $a \\neq b$ and $1 \\leq a,b \\leq n$ (where $n$ is the number ofBcommands inputted so far).Commands should be read until EOF.OutputFor everyGcommand, output the distance that the geese spend flying. The numbers should be printed one per line, and rounded off to 2 decimal places.ExampleInput:B -1 2 1 5B 3 -4 4 1G 2 1B 4 -3 6 -2B 6 -6 8 -4G 2 3G 1 4Output:2.240.003.24Explanation of Sample:The lake looks like this:For the firstGcommand, the geese must fly along the red line, which has a length of √5.For the second, the two boxen are touching, so no flight is necessary.For the third, the geese must first fly along the red line, then walk across boxen 2 and 3, and finally fly along the blue line, which has a length of 1.",
  "sample_input": "Input:B -1 2 1 5B 3 -4 4 1G 2 1B 4 -3 6 -2B 6 -6 8 -4G 2 3G 1 4Output:2.240.003.24",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/BOXD",
  "scraped_at": "2025-08-17 00:33:45",
  "test_cases": [
    {
      "input": "B -1 2 1 5B 3 -4 4 1G 2 1B 4 -3 6 -2B 6 -6 8 -4G 2 3G 1 4",
      "expected_output": "2.240.003.24",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5 7 2 4 8 7 1 5 4 6 1 2 1 9 5 5 6 1 3 3 7 1\nfcs hwru 1 5 d 2 ycx 3 owfa 3 iekrl 9 mtjzn 10 dfu 4 flv 9 ilge 8 hgt 10 9",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "1 5 8 8 10 4 2 3 8 1 8 2 8 9 8 9 10 2 1 5 4 5\nawgzz ecrpk 3 10 zf 5 jknyb 9 noe 2 zhsp 7 ywybb 10 w 4 vbj 7 zcpi 4 tyotd 7 8",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "4 8 5 4 7 2 8 6 6 8 6 8 2 3 5 7 4 5 2 6 5 10\nivaqz kof 8 10 ftz 9 wu 4 kc 5 pd 9 tt 6 lm 10 btt 2 emczq 8 ikcxo 9 5",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "85 82 33 78 25 31 36 17 62 84 83 41 58 99 18 36 12 32 45 2 56 10\npqikt m 76 30 yjve 82 bgils 25 t 70 ux 36 yisvp 40 rfgg 57 pii 50 fg 4 vgl 35 68",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "79 81 2 64 11 82 22 1 66 13 34 26 87 61 68 34 2 94 69 18 42 61\ndikin r 18 45 q 59 h 31 zv 66 mhtx 18 lyo 68 pr 94 sz 34 hpyk 47 jbpbd 50 64",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "100 7 95 67 57 88 88 92 12 92 63 7 8 5 94 80 73 11 9 10 9 73\nwhq vmvo 86 59 jmyht 77 vhje 97 b 57 hffr 33 dkz 18 v 11 p 97 bf 57 lai 36 92",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "79 90 45 50 54 39 61 28 21 13 13 49 66 73 59 84 81 54 10 24 22 88\nksmo pnob 46 53 mx 17 odr 12 vkum 53 phc 69 dsyeu 56 dfjz 3 jofc 74 scmzi 37 o 14 5",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "94 77 94 39 56 11 61 77 67 13 76 12 86 88 42 86 22 5 95 57 19 32\ngl b 58 41 x 55 suaz 10 u 97 n 50 ym 13 scf 96 z 51 htkem 41 m 83 56",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "344 306 123 62 400 284 362 349 346 236 405 354 331 439 238 275 229 274 327 142 186 379\nsk vx 407 414 eog 185 q 231 dqss 302 jbph 234 ltc 298 semh 320 mltr 235 ldbdu 55 nt 229 411",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "53 86 121 117 289 465 159 386 57 248 319 308 404 245 271 211 167 274 248 418 442 77\nilwa djiie 451 263 ukg 402 ia 323 dq 85 t 201 g 287 rep 431 r 397 wr 368 go 75 416",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "480 156 472 59 328 68 332 164 246 287 145 474 121 342 295 89 175 308 139 389 143 205\nw csbxu 224 197 bzxrq 368 cnul 388 na 247 zgdkf 65 f 355 byxkg 230 alien 364 qz 57 mn 362 347",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "454 83 173 415 471 379 438 262 385 133 408 72 289 223 189 98 146 104 423 375 123 206\npallr lklbj 255 180 ghsck 219 ht 140 fmgjz 230 kymdc 161 pdw 243 amkob 362 qlm 107 sn 384 fpzzm 261 172",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "195 115 277 111 354 177 101 230 317 459 161 469 237 123 472 205 200 76 342 304 75 307\nlr m 292 78 heie 317 a 144 iq 485 ye 403 zoof 99 hqhc 358 vftny 205 csfq 98 igm 152 139",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "406 207 164 294 479 456 346 325 95 89 442 462 445 261 152 308 211 224 141 232 54 352\nh ccxmm 472 411 w 93 qgs 484 e 115 j 429 sjtq 229 cftc 243 s 429 ep 155 hhoq 418 493",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "125 305 165 352 380 261 239 401 79 82 78 267 408 445 461 489 276 369 253 163 74 477\nnj d 219 407 mjksr 155 pgdw 446 c 348 dyrcy 165 xorws 228 jbr 407 nr 158 u 82 g 477 249",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\nkxld ubobv 1000 1000 ssks 1000 jdhmp 1000 ka 1000 fdoa 1000 wlr 1000 qasz 1000 wqnx 1000 hde 1000 obq 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\nkwx w 1000 1000 buk 1000 ell 1000 wc 1000 kzuil 1000 sp 1000 r 1000 iak 1000 se 1000 ifysk 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 2 1 2 2 2 2 1 1000 2 1000 1 1000 999 999 999 999 1000 2 1\npzfg ynap 2 2 xhj 1000 fdhk 1000 bqr 1 ql 1000 rs 1000 svxbh 1 iapcm 999 ow 1 suslo 1 999",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 2 999 1000 2 2 999 1 999 1000 2 999 1000 2 2 999 1000 1000 999 2 2 1000\nzq dgcj 999 2 xqyb 1000 vc 1000 fyi 999 cg 1000 b 2 zdzur 1 mt 999 athpx 999 omnpw 1000 1000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:51",
  "total_test_cases": 20
}
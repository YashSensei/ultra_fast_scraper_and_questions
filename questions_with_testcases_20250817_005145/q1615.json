{
  "problem_code": "problems",
  "title": "Two \"Ways\"",
  "tags": [],
  "text": "There are N places and M bidirectional ways. No two places have more than one direct way. Ana wants to walk from S to T and return to S by an itinerary that satisfies:No way can be used twice.Length of itinerary is the minimum.InputLine 1: 4 integers: N, M, S, T (N ≤ 104; M ≤ 105)Next M line: Line i include 3 integers ui, vi, ci: distance of two places uiand viis ci. (ci≤ 2000000000).OutputLength of the itinerary if it exists. Else print -1.ExampleInput:5 7 1 51 2 31 4 82 3 52 4 43 5 54 3 84 5 3Output:24",
  "sample_input": "Input:5 7 1 51 2 31 4 82 3 52 4 43 5 54 3 84 5 3Output:24",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/SPHIWAY",
  "scraped_at": "2025-08-17 00:33:32",
  "test_cases": [
    {
      "input": "5 7 1 51 2 31 4 82 3 52 4 43 5 54 3 84 5 3",
      "expected_output": "24",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "10 3 4 2 2 1 8 4 5 4 4 8 5 3 9 4 8 3",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "5 7 6 4 3 8 6 5 9 6 8 6 2 2 6 1 10 1",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "9 5 1 1 1 2 1 2 7 8 8 1 3 7 4 3 4 2",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "77 16 33 61 2 80 6 64 21 73 92 17 17 25 96 10 94 66",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "88 12 62 45 33 50 22 23 92 80 97 71 46 77 64 12 53 38",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "62 81 7 43 74 1 18 42 59 26 83 69 29 71 10 25 63 53",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "73 17 63 31 18 97 60 10 49 38 31 5 30 54 37 91 41 15",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "53 65 28 48 100 75 17 63 62 67 37 98 20 90 63 77 87 82",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "23 18 12 24 11 9 39 12 50 49 33 16 44 24 31 19 47 46",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "30 49 7 44 21 39 46 39 30 35 34 38 49 44 30 9 52 50",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "6 5 29 8 5 32 51 23 24 36 5 30 40 42 13 52 7 52",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "25 20 16 39 16 47 44 30 24 28 42 16 29 24 38 7 8 29",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "43 48 25 37 40 42 17 49 5 13 38 47 19 48 52 26 17 50",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "19 52 41 10 18 44 44 30 50 15 12 30 10 44 45 36 25 27",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "15 12 31 11 16 12 19 46 10 17 15 17 51 15 14 25 36 47",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "104 104 104 104 104 104 104 104 104 104 104 104 104 104 104 104 104 104",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "104 104 104 104 104 104 104 104 104 104 104 104 104 104 104 104 104 104",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 103 103 103 1 1 104 103 2 103 103 104 104 104 2 104 103 104",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 104 104 2 1 1 104 104 1 103 104 103 103 1 103 103 2 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:50",
  "total_test_cases": 20
}
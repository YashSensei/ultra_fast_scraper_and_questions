{
  "problem_code": "problems",
  "title": "Nacci Fear",
  "tags": [],
  "text": "We all know about the classical Fibonacci series, Fibonacci series is F(n) = F(n-1) + F(n-2). For this question we call it a 2-Nacci series as a new element is calculated as the sum of the last 2 terms of the series. For Fibonacci we assume F(0)=0 and F(1)=1. We define as new series N-Nacci where F(n) is the sum of the last n terms and here we assume that F(0)=0, F(1)=1, F(2)=2 ... F(n-1) = (n-1). Your task is to calculate the last K digits of the Lth term of the N-Nacci series (no leading zeros needed).Constraints2 ≤ N ≤ 30K ≤ 8L ≤ 1000000000InputThe first line of the input denotes the number of test cases t (at most 10). Each line denotes a test case consisting of N, K, L.OutputFor each test case print the last K digits of the Lth term of the N-Nacci series.ExampleInput:4\r\n2 1 5\r\n3 6 12\r\n4 1 10\r\n4 2 10Output:5\r\n778\r\n6\r\n16",
  "sample_input": "Input:4\r\n2 1 5\r\n3 6 12\r\n4 1 10\r\n4 2 10Output:5\r\n778\r\n6\r\n16",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/NACCI",
  "scraped_at": "2025-08-17 00:33:15",
  "test_cases": [
    {
      "input": "4\r\n2 1 5\r\n3 6 12\r\n4 1 10\r\n4 2 10",
      "expected_output": "5\r\n778\r\n6\r\n16",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2\n2\n10",
      "expected_output": "2\n2\n10",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "4\n3\n3\n3\n9",
      "expected_output": "4\n3\n3\n3\n9",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "2\n2\n1",
      "expected_output": "2\n2\n1",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "8\n13463946\n74694201\n90275079\n16182869\n2111425\n18420039\n92600399\n60142653",
      "expected_output": "8\n13463946\n74694201\n90275079\n16182869\n2111425\n18420039\n92600399\n60142653",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "14\n39259068\n24680157\n85364855\n68618226\n35637893\n91503189\n37242763\n17899453\n7333140\n13343982\n58922604\n58622892\n97756387\n78193148",
      "expected_output": "14\n39259068\n24680157\n85364855\n68618226\n35637893\n91503189\n37242763\n17899453\n7333140\n13343982\n58922604\n58622892\n97756387\n78193148",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "20\n72325062\n54353131\n55846897\n95252469\n98065587\n99368771\n84532092\n99603898\n28988590\n49670211\n53398914\n53451506\n26379109\n34110234\n13012692\n37142212\n47515652\n71013377\n67880810\n34610669",
      "expected_output": "20\n72325062\n54353131\n55846897\n95252469\n98065587\n99368771\n84532092\n99603898\n28988590\n49670211\n53398914\n53451506\n26379109\n34110234\n13012692\n37142212\n47515652\n71013377\n67880810\n34610669",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "5\n90065183\n76070603\n85475389\n64246778\n3496017",
      "expected_output": "5\n90065183\n76070603\n85475389\n64246778\n3496017",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "7\n32623624\n5821665\n96803554\n56559436\n17469654\n26694982\n47054528",
      "expected_output": "7\n32623624\n5821665\n96803554\n56559436\n17469654\n26694982\n47054528",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "20\n85096\n83343\n49512\n34760\n5989\n9859\n10436\n44212\n81012\n51637\n95521\n64554\n7006\n24436\n57886\n6291\n7660\n4552\n21012\n11883",
      "expected_output": "20\n85096\n83343\n49512\n34760\n5989\n9859\n10436\n44212\n81012\n51637\n95521\n64554\n7006\n24436\n57886\n6291\n7660\n4552\n21012\n11883",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "28\n24960\n38026\n974\n41394\n91230\n14622\n83855\n75373\n14179\n73711\n68992\n89275\n55006\n31666\n7387\n46540\n24726\n89723\n20877\n83158\n52710\n78335\n30358\n20444\n46240\n95491\n88565\n47212",
      "expected_output": "28\n24960\n38026\n974\n41394\n91230\n14622\n83855\n75373\n14179\n73711\n68992\n89275\n55006\n31666\n7387\n46540\n24726\n89723\n20877\n83158\n52710\n78335\n30358\n20444\n46240\n95491\n88565\n47212",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "30\n44884\n75859\n64094\n94469\n6094\n96175\n80779\n18364\n95577\n32753\n57072\n95762\n92847\n49822\n98998\n30471\n26432\n51485\n48369\n3662\n49456\n48320\n79815\n34691\n16153\n57070\n46021\n43283\n28888\n92000",
      "expected_output": "30\n44884\n75859\n64094\n94469\n6094\n96175\n80779\n18364\n95577\n32753\n57072\n95762\n92847\n49822\n98998\n30471\n26432\n51485\n48369\n3662\n49456\n48320\n79815\n34691\n16153\n57070\n46021\n43283\n28888\n92000",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "26\n28245\n63935\n27278\n5193\n46083\n38752\n97607\n25606\n35713\n46820\n53372\n79727\n5294\n37449\n73709\n61184\n60922\n32036\n47800\n57328\n87539\n46833\n25585\n90892\n15731\n56636",
      "expected_output": "26\n28245\n63935\n27278\n5193\n46083\n38752\n97607\n25606\n35713\n46820\n53372\n79727\n5294\n37449\n73709\n61184\n60922\n32036\n47800\n57328\n87539\n46833\n25585\n90892\n15731\n56636",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "29\n71079\n87685\n8089\n66719\n24229\n54371\n12442\n93192\n81480\n57918\n2342\n63032\n91195\n92821\n64273\n79360\n62894\n58847\n54280\n90829\n44742\n47200\n720\n53201\n30768\n57478\n78498\n50851\n72887",
      "expected_output": "29\n71079\n87685\n8089\n66719\n24229\n54371\n12442\n93192\n81480\n57918\n2342\n63032\n91195\n92821\n64273\n79360\n62894\n58847\n54280\n90829\n44742\n47200\n720\n53201\n30768\n57478\n78498\n50851\n72887",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "26\n65816\n71049\n8096\n64972\n20116\n64749\n32084\n64026\n10490\n62676\n63360\n66117\n59324\n5070\n53398\n98840\n81004\n69691\n86706\n56547\n9376\n29527\n36632\n10913\n75472\n25942",
      "expected_output": "26\n65816\n71049\n8096\n64972\n20116\n64749\n32084\n64026\n10490\n62676\n63360\n66117\n59324\n5070\n53398\n98840\n81004\n69691\n86706\n56547\n9376\n29527\n36632\n10913\n75472\n25942",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "25\n60393\n72083\n34864\n87682\n51067\n53306\n24211\n87781\n19895\n95027\n70341\n67725\n803\n31946\n66752\n65489\n92192\n22430\n49229\n47315\n26751\n20846\n13855\n21181\n12816",
      "expected_output": "25\n60393\n72083\n34864\n87682\n51067\n53306\n24211\n87781\n19895\n95027\n70341\n67725\n803\n31946\n66752\n65489\n92192\n22430\n49229\n47315\n26751\n20846\n13855\n21181\n12816",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "30\n7756956\n16730172\n56699281\n2424005\n54032247\n34725389\n31227152\n26298306\n21836068\n48874096\n703919\n50031333\n71740775\n51857972\n94270167\n2479892\n60386571\n76902826\n46313052\n69127142\n39391589\n31243380\n54204516\n27155485\n94443945\n25846362\n97049629\n80502594\n73986168\n15426898",
      "expected_output": "30\n7756956\n16730172\n56699281\n2424005\n54032247\n34725389\n31227152\n26298306\n21836068\n48874096\n703919\n50031333\n71740775\n51857972\n94270167\n2479892\n60386571\n76902826\n46313052\n69127142\n39391589\n31243380\n54204516\n27155485\n94443945\n25846362\n97049629\n80502594\n73986168\n15426898",
      "type": "max_case_17",
      "description": "Maximum size array (N = 30)"
    },
    {
      "input": "30\n15936137\n1079295\n67801463\n47289206\n6210487\n57443961\n82699110\n80341632\n78920874\n68873065\n42356135\n9143321\n35520622\n17159871\n40320386\n64093071\n78300962\n7414013\n39139210\n16047639\n62390047\n7377006\n55829341\n77767449\n34875426\n59342522\n90424145\n71368249\n80345439\n2200831",
      "expected_output": "30\n15936137\n1079295\n67801463\n47289206\n6210487\n57443961\n82699110\n80341632\n78920874\n68873065\n42356135\n9143321\n35520622\n17159871\n40320386\n64093071\n78300962\n7414013\n39139210\n16047639\n62390047\n7377006\n55829341\n77767449\n34875426\n59342522\n90424145\n71368249\n80345439\n2200831",
      "type": "max_case_18",
      "description": "Maximum size array (N = 30)"
    },
    {
      "input": "1\n100000000",
      "expected_output": "1\n100000000",
      "type": "edge_case_19",
      "description": "Edge case array (N = 1)"
    },
    {
      "input": "1\n100000000",
      "expected_output": "1\n100000000",
      "type": "edge_case_20",
      "description": "Edge case array (N = 1)"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:45",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:36:24"
}
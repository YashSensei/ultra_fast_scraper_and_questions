{
  "problem_code": "problems",
  "title": "Ada and Spring Cleaning",
  "tags": [],
  "text": "Ada the Ladybug has decided to do some \"Spring Cleaning\". As you might know, she keeps a TODO list. She is very sparing so she keeps all her activities as one string. You might get very confused while reading the string but she has a system - every activity has length exactlyKcharacters. Sadly, as new activities were added to the list many duplicities appeared. Now it is time to find out how manyuniqueactivities are in her TODO list.InputFirst line containsT, number of test-cases.Each test-case begins withN, K,1 ≤ K ≤ N ≤     105, length of string and length of activities respectively.Next line consists of string of lengthN, consisting of lowercase letters.The sum of lengths of strings among all test-cases won't exceed3*105OutputFor each test-case, print the number of unique substrings of lengthKExample Input5\r\n3 2\r\naaa\r\n5 1\r\nabcba\r\n4 2\r\nabac\r\n10 2\r\nabbaaaabba\r\n7 3\r\ndogodogExample Output1\r\n3\r\n3\r\n4\r\n4",
  "sample_input": "5\r\n3 2\r\naaa\r\n5 1\r\nabcba\r\n4 2\r\nabac\r\n10 2\r\nabbaaaabba\r\n7 3\r\ndogodog",
  "sample_output": "1\r\n3\r\n3\r\n4\r\n4",
  "link": "https://www.spoj.com/problems/ADACLEAN",
  "scraped_at": "2025-08-17 00:34:12",
  "test_cases": [
    {
      "input": "5\r\n3 2\r\naaa\r\n5 1\r\nabcba\r\n4 2\r\nabac\r\n10 2\r\nabbaaaabba\r\n7 3\r\ndogodog",
      "expected_output": "1\r\n3\r\n3\r\n4\r\n4",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4\n7\n1\n8\n3",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "4\n1\n6\n9\n4",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n2",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "20\n61019639\n64586757\n85181691\n78456006\n56263420\n81414830\n69880283\n87646485\n28845755\n5267291\n98118356\n77460483\n96470691\n68789463\n43039833\n62776873\n6911178\n68993308\n96890503\n83911435",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "19\n86025204\n16515155\n40358980\n89194265\n34433734\n69378836\n66913289\n46704967\n18605837\n15257118\n40686580\n16255044\n56873779\n83519299\n14837756\n71139796\n23609643\n36067034\n98212410",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "13\n47987322\n426142\n12164372\n94307100\n70852007\n56514170\n40816260\n54314900\n14860215\n29031255\n50169447\n92960962\n72112948",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "5\n31176564\n22700084\n17685310\n60120278\n61488036",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "13\n95732569\n76739052\n56536933\n43899400\n50988285\n74422022\n53678308\n45899086\n64093290\n49062069\n36642500\n76345290\n45211343",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "70\n62274\n99853\n4073\n6401\n97557\n73807\n70536\n42263\n88428\n87724\n77037\n19766\n49038\n61328\n62354\n11031\n3271\n89337\n98706\n78764\n43459\n45077\n62639\n10725\n40788\n44922\n88763\n63332\n73570\n97013\n25078\n9776\n94315\n51383\n46305\n4563\n20684\n41130\n15387\n3114\n59690\n16730\n29232\n28625\n91781\n84730\n74486\n72808\n91110\n78237\n26007\n39273\n72581\n40807\n46037\n83310\n74845\n31518\n57578\n36127\n54626\n36720\n67667\n44044\n18659\n81750\n88903\n44139\n26964\n6940",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "53\n11550\n40275\n34239\n54018\n86460\n40932\n62354\n60351\n51046\n37491\n44504\n16506\n51687\n47893\n70012\n17763\n31333\n81247\n83808\n91234\n27020\n97486\n3434\n4405\n82629\n17646\n6607\n55436\n50269\n17433\n80043\n66752\n99430\n69284\n51909\n22452\n63416\n53571\n22478\n70309\n1194\n3684\n35226\n49105\n55784\n99081\n53561\n74272\n67353\n48617\n10802\n39808\n48335",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "103\n13210\n40980\n21434\n41244\n13959\n3860\n93917\n14121\n70195\n6483\n66337\n70403\n37097\n72356\n30722\n33222\n84596\n89136\n49319\n29\n78591\n12051\n53314\n80430\n90873\n75662\n68196\n1278\n51474\n10962\n31593\n17063\n89966\n69893\n92414\n3706\n91864\n30313\n73139\n31778\n54159\n63528\n43547\n69737\n22113\n93261\n73691\n89564\n94399\n55350\n58068\n7296\n3840\n19947\n44540\n47458\n22512\n18269\n80923\n12756\n41144\n94507\n85792\n81232\n3148\n63602\n2078\n82318\n45216\n55675\n69059\n36218\n71070\n74025\n18940\n14752\n70036\n81056\n25406\n9224\n84940\n81755\n19880\n56351\n96888\n13233\n39014\n13513\n55041\n29712\n56255\n28063\n16919\n93100\n32552\n3695\n77893\n21671\n40290\n93109\n87930\n58293\n8846",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "89\n18440\n9565\n99971\n59282\n41598\n26433\n85928\n42174\n65324\n61701\n11910\n39470\n92982\n34862\n84291\n30271\n89929\n18247\n59308\n47513\n9877\n79427\n46012\n52084\n21766\n22368\n89787\n19089\n80749\n76494\n28620\n3071\n47038\n41168\n20844\n45859\n31432\n91528\n24944\n59007\n89150\n40520\n69423\n17019\n94065\n7105\n97519\n17142\n1572\n85134\n39015\n86572\n78446\n83447\n90400\n29627\n26453\n2936\n57419\n85028\n8963\n36150\n11649\n85605\n86591\n44759\n72736\n88994\n77552\n87757\n51020\n99512\n25486\n77529\n53608\n98731\n63378\n55545\n35986\n72934\n78728\n81633\n78259\n28443\n12460\n14009\n44871\n7297\n54444",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "66\n50500\n30817\n86628\n20247\n18664\n93626\n84280\n17510\n70961\n23468\n69723\n10901\n52887\n56801\n87164\n69\n82273\n26189\n84053\n85922\n15593\n39605\n5892\n91623\n75421\n35600\n28891\n20049\n37470\n85286\n2106\n14592\n87808\n75554\n43675\n7503\n50426\n90571\n6675\n48346\n54747\n87673\n75304\n21897\n85070\n96013\n63030\n35457\n54063\n52656\n51070\n60592\n74516\n68039\n22456\n85922\n4934\n49782\n13513\n37808\n34509\n60601\n4656\n35200\n96591\n41340",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "43\n64015\n22025\n16916\n24166\n88911\n17823\n47515\n70371\n56471\n88935\n53742\n58685\n12285\n56116\n26969\n16864\n92229\n68029\n19915\n6219\n92803\n37788\n79349\n74310\n57835\n50372\n57104\n13072\n11157\n47179\n67361\n58513\n98310\n26694\n25584\n33439\n17640\n34191\n28658\n78035\n21355\n26740\n84807",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "79\n34532\n79206\n52945\n32005\n50574\n56949\n50278\n24068\n61362\n72591\n68871\n69765\n61334\n89695\n10824\n89510\n21534\n83775\n87982\n35195\n41935\n58640\n78913\n99066\n7974\n6247\n66858\n4431\n97491\n4441\n92934\n92448\n81322\n83868\n23202\n71350\n59882\n62391\n70341\n48772\n10466\n18167\n67854\n51046\n67425\n83347\n49136\n39620\n37888\n51641\n15986\n13201\n96112\n76617\n48712\n513\n59530\n79881\n16470\n62249\n84103\n39191\n59713\n80917\n57344\n59001\n97280\n26609\n64175\n40197\n92912\n49209\n41795\n28310\n10570\n48381\n31590\n76924\n31554",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "105\n57190449\n53054110\n6681608\n14833662\n67325947\n71041794\n54294102\n38187806\n19981609\n16974497\n40777828\n78420730\n38900681\n30389049\n20283762\n17191777\n97568366\n14432438\n45861363\n46452661\n32343677\n83141330\n47307685\n96081471\n31634381\n91280725\n9336565\n90684831\n75965204\n33466155\n77466150\n90228985\n44184522\n56817443\n33068036\n21849435\n1693444\n67214679\n61558294\n56693869\n38424911\n9342805\n93994122\n28038821\n25990012\n91259546\n23591142\n57437391\n88606568\n5021439\n39402231\n10459172\n80848024\n47542182\n2853247\n96549785\n54767093\n86469136\n36697487\n10225549\n9488395\n32387238\n63235180\n77507145\n52710397\n47247046\n60229585\n44378882\n78418233\n28001280\n72400728\n28852086\n47862272\n44179378\n53362864\n36394850\n37144793\n72171181\n47060201\n82996705\n44371493\n37507560\n80277027\n63437328\n50826926\n60439567\n29679276\n46944871\n39690289\n90736430\n20049006\n13718450\n14704266\n21949352\n82766038\n453217\n84925276\n25994110\n20660531\n7711935\n88889302\n56312538\n9397110\n34472645\n78826841",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "105\n12823738\n70218858\n30399654\n82039085\n43338727\n9967403\n6195302\n89715616\n36930415\n3931544\n97849990\n96625941\n59449327\n99718682\n93328528\n83317597\n79593284\n35841131\n49520228\n68054734\n13696846\n23410138\n66456401\n31264783\n65541414\n92881797\n54342607\n40918153\n73285284\n99127132\n63436460\n30220436\n35542696\n90284346\n81734410\n69144615\n40624981\n68596800\n43651174\n16866405\n92909560\n90694568\n48784251\n47607118\n62737173\n84639522\n58203502\n24924051\n11100896\n35109333\n32660507\n7898937\n22934491\n92001449\n1133106\n39459660\n67920740\n88216740\n31892305\n44074839\n26813006\n21641255\n67599104\n62729948\n25745374\n94302601\n33554761\n34804499\n5292354\n5934606\n89586615\n65491785\n22218973\n23981336\n19410891\n74267251\n3302154\n1714545\n21757064\n88483737\n51476807\n19334147\n64660175\n58125163\n45765538\n313824\n75793032\n79940006\n14248257\n46809281\n18113543\n93738933\n75841171\n4397346\n97516848\n67158891\n42823973\n72015214\n59564447\n27250332\n29098319\n60745562\n4285904\n97115836\n73199909",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "2\n42049655\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 2)"
    },
    {
      "input": "2\n100000000\n39925754",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 2)"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:54",
  "total_test_cases": 20
}
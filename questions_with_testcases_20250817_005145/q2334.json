{
  "problem_code": "problems",
  "title": "Security Zone",
  "tags": [],
  "text": "The manager of a large security company has to build a new surveillance system for different sites. A site consists ofNobjects where each object has its own security circle. At the border of the surveillance system a high voltage fence has to be installed. The security zone inside of the fence has to be connected. Furthermore, all objects and their security circles should be inside the security zone. The security circles of different objects will never overlap or touch. Now the manager needs your help. He asks you for the minimal needed fence length.InputThe first line of the input gives the number of test casesC(0 ≤ C ≤ 100). The first line of each such test case holds the integerN: the number of objects in the current site (0 < N ≤ 25). Each of the followingNlines holds three integersxi,yi, andrithat describe an object. The coordinates of the i-th object and the radius for the needed security circle for this object. (|xi|,|yi| ≤100,0 < ri≤ 100) (The center of the security circle around an object is the position of the object itself.)OutputFor each test case print one line containing the minimal fence length for this case. Your output should have an absolute or relative error of at most10-7.ExampleInput:3\r\n3\r\n2 2 1\r\n8 2 1\r\n5 6 1\r\n2\r\n6 4 2\r\n2 4 1\r\n4\r\n2 2 2\r\n6 1 1\r\n5 5 2\r\n1 6 1Output:22.2831853072\r\n17.6761051635\r\n25.4247779608",
  "sample_input": "Input:3\r\n3\r\n2 2 1\r\n8 2 1\r\n5 6 1\r\n2\r\n6 4 2\r\n2 4 1\r\n4\r\n2 2 2\r\n6 1 1\r\n5 5 2\r\n1 6 1Output:22.2831853072\r\n17.6761051635\r\n25.4247779608",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/GCPC11G",
  "scraped_at": "2025-08-17 00:33:54",
  "test_cases": [
    {
      "input": "3\r\n3\r\n2 2 1\r\n8 2 1\r\n5 6 1\r\n2\r\n6 4 2\r\n2 4 1\r\n4\r\n2 2 2\r\n6 1 1\r\n5 5 2\r\n1 6 1",
      "expected_output": "22.2831853072\r\n17.6761051635\r\n25.4247779608",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1\n3",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "2\n7\n5",
      "expected_output": "0\n0",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "2\n5\n4",
      "expected_output": "0\n0",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "15\n99821647\n40424632\n32929886\n96576308\n34794771\n1820852\n57328033\n13219262\n6859213\n86905183\n30340888\n90537104\n54482248\n12055388\n93897480",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "9\n96068394\n64021262\n21669018\n63603590\n79897585\n35610155\n49340653\n40820572\n28584037",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "17\n62177495\n59758408\n22819114\n56395316\n76508789\n79600396\n85728828\n53641260\n6651712\n17606176\n89053259\n73213758\n51890653\n20165448\n56927127\n28860504\n25797881",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "7\n16291446\n41850315\n57598067\n65319214\n66443238\n39693243\n5497318",
      "expected_output": "0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "10\n99040860\n92128175\n86975628\n2855682\n21088352\n63135986\n99659257\n30184021\n80129034\n4879046",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "25\n1396\n92664\n99363\n9117\n97642\n42900\n22776\n76921\n42371\n13021\n69057\n23174\n59534\n36141\n96615\n47571\n19267\n9147\n66742\n74701\n25351\n39683\n85002\n89484\n73492",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "21\n44589\n32190\n56400\n94076\n34125\n68109\n28075\n26806\n59706\n83539\n84421\n72808\n21148\n34477\n70679\n71984\n81653\n40845\n38286\n37565\n92316",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "24\n63128\n5804\n6051\n24176\n27363\n12471\n97048\n36576\n3059\n33690\n38009\n47394\n25953\n52058\n14657\n69604\n72608\n10487\n36851\n16227\n87326\n23728\n46512\n66886",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "23\n24527\n96973\n56631\n6484\n30690\n64800\n34911\n57898\n25594\n36582\n89910\n32297\n21473\n85763\n60757\n54929\n50243\n49467\n83218\n22270\n59300\n23417\n96118",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "21\n99839\n32624\n71387\n7655\n33694\n2761\n8222\n736\n97773\n3291\n9222\n72896\n71495\n32143\n78700\n74426\n12529\n73943\n80812\n49251\n93912",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "25\n88500\n22207\n11065\n95979\n87125\n62510\n17616\n59095\n33979\n43342\n83529\n33982\n36326\n93947\n228\n41880\n11050\n50230\n35913\n82437\n38111\n80513\n61825\n68092\n46289",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "23\n67495\n83134\n88946\n2964\n90827\n68369\n66822\n19291\n79284\n22572\n16761\n70924\n76172\n86436\n17715\n88993\n44131\n93412\n8689\n29736\n91041\n20653\n24351",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "25\n1748463\n34421635\n82704103\n74156956\n55445876\n84444443\n33883842\n44415403\n72517736\n28863007\n54021069\n54624670\n30703992\n55377254\n43234608\n763943\n83311348\n14485730\n28425755\n76212000\n62270528\n67325524\n51756156\n55275216\n5735966",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "max_case_17",
      "description": "Maximum size array (N = 25)"
    },
    {
      "input": "25\n42011222\n49681840\n99543414\n7700451\n14939028\n82923791\n59318882\n8095619\n53561939\n58983218\n30571373\n5422688\n35350956\n32835115\n43705202\n94065719\n39519105\n35595505\n32306892\n75172841\n72810264\n39599777\n18894335\n72465754\n77951236",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "max_case_18",
      "description": "Maximum size array (N = 25)"
    },
    {
      "input": "2\n59203941\n1",
      "expected_output": "0\n0",
      "type": "edge_case_19",
      "description": "Edge case array (N = 2)"
    },
    {
      "input": "2\n80551046\n100000000",
      "expected_output": "0\n0",
      "type": "edge_case_20",
      "description": "Edge case array (N = 2)"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:52",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:32"
}
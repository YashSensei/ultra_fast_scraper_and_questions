{
  "problem_code": "problems",
  "title": "Fractals",
  "tags": [],
  "text": "What is a fractal? According to wikipedia: A fractal is a mathematical set that exhibits a repeating pattern displayed at every scale.We are interested in developing a solution and create some fractals! This time we are interested on creating the ”H” fractal. The process to create it is as follows:At scale 1, you have the ”H-H” string.At scale 2, you will copy the strings into four corners, each copy separated by a single space (row and column-wise).You must connect the vertical copies with the pipe character or ’|’ and the horizontal copies with a dash character ’-’ between the pipes that connect the vertical copies (see the samples as clarification).At scale 3 and further, you will repeat the step done on scale 2. Thus generating the fractal.InputYou will receive a single integer N denoting the scale of the H fractal we want to generate.OutputYou must output the generated H fractal as described above, in addition, the generated fractal MUST NOT have trailing spaces, this means that, after the last non-whitespace character of each row is printed, there must be nothing else but a newline written as output.ExampleInput 1:1Output 1:H-HInput 2:2Output 2:H-H H-H\r\n |---|\r\nH-H H-HInput 3:3Output 3:H-H H-H H-H H-H\r\n |---|   |---|\r\nH-H|H-H H-H|H-H\r\n   |-------|\r\nH-H|H-H H-H|H-H\r\n |---|   |---|\r\nH-H H-H H-H H-HConstraints1 ≤ N ≤ 10",
  "sample_input": "Input 1:1Output 1:H-H",
  "sample_output": "Input 2:2Output 2:H-H H-H\r\n |---|\r\nH-H H-H",
  "link": "https://www.spoj.com/problems/URJC2_F",
  "scraped_at": "2025-08-17 00:33:11",
  "test_cases": [
    {
      "input": "Input 1:1Output 1:H-H",
      "expected_output": "Input 2:2Output 2:H-H H-H\r\n |---|\r\nH-H H-H",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2 7 1\naymb roxhntpq lrk",
      "expected_output": "0\n0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "1 1 8\nhu ihcovax kgjtd",
      "expected_output": "0\n0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "2 2 5\necsd khx mbmj",
      "expected_output": "0\n0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "5 9 6\ntujgn fzldq xpzjd",
      "expected_output": "0\n0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "4 1 9\nrdjnt nqp wki",
      "expected_output": "0\n0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "4 2 3\nxhl kaalr afhu",
      "expected_output": "0\n0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "8 5 4\nkrck spv lz",
      "expected_output": "0\n0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "9 5 6\nmjbu hlwnfdq yqbkw",
      "expected_output": "0\n0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "1 2 4\nch nmwp pza",
      "expected_output": "0\n0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "3 2 1\nik wh amuh",
      "expected_output": "0\n0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "1 5 5\nxk y tobz",
      "expected_output": "0\n0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "3 1 5\nnch jnq snia",
      "expected_output": "0\n0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "5 3 4\nlg rjpylc uaq",
      "expected_output": "0\n0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "3 1 3\nkmllm zt lxudv",
      "expected_output": "0\n0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "5 5 1\ngp unup tawh",
      "expected_output": "0\n0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "10 10 10\nafzwl a zlvms",
      "expected_output": "0\n0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "10 10 10\nd qrrb srlak",
      "expected_output": "0\n0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 1 10\ngfytj zenlu ntftc",
      "expected_output": "0\n0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 1 10\nofx ivnpihlf zzf",
      "expected_output": "0\n0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:48",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:36:46"
}
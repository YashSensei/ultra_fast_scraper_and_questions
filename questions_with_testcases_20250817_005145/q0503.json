{
  "problem_code": "problems",
  "title": "Crossbits",
  "tags": [],
  "text": "Crossbits are like Crosswords; instead of entering words you enter binary bits 01  in a Crossbit under certain given conditions, assuming that a solution exists. An empty Crossbit of size N  is an empty grid of size NÃ—N.Given a natural number N , consider entering N2binary bits in an empty Crossbit, satisfying the following conditions:Each square in the grid contains either a 0-bit or a 1-bit with no 1-bit in two major diagonals.The total number of 1-bit in each row / column is exactly equal to K , K being a given natural number less than N.A 0-bit has at least another adjacent 0-bit either in the same row or in the same column.The Crossbit represents the N2 -bit binary number B formed by placing bits in the 1st , the 2nd , ... the Nth row from left to right.You are required to write a program that enters bits in an empty Crossbit so that the Crossbit represents the least binary number B for given N and K .As an illustration consider the case with N = 4 and K = 1 . The Crossbit shown below represents the least binary number B = 0010100000010100 of 16 bits satisfying the specified conditions.0 \t0 \t1 \t0\r\n1 \t0 \t0 \t0\r\n0 \t0 \t0 \t1\r\n0 \t1 \t0 \t0InputThe input may contain multiple test cases.For each test case parameters N and K of the Crossbit are given in one line. Assume that N does not exceed 10.The input terminates with a line containing 0 as input.OutputFor each test case, print the Crossbit in N rows; each row contains N bits with a space between two neighbouring bits. Keep a blank line after the last output line of each test case.ExampleSample Input4 1\r\n6 2\r\n0Sample Output0 0 1 0 \r\n1 0 0 0 \r\n0 0 0 1 \r\n0 1 0 0 \r\n\r\n0 0 0 1 1 0 \r\n1 0 0 1 0 0 \r\n0 0 0 0 1 1 \r\n1 1 0 0 0 0 \r\n0 0 1 0 0 1 \r\n0 1 1 0 0 0",
  "sample_input": "0 \t0 \t1 \t0\r\n1 \t0 \t0 \t0\r\n0 \t0 \t0 \t1\r\n0 \t1 \t0 \t0",
  "sample_output": "Sample Input4 1\r\n6 2\r\n0Sample Output0 0 1 0 \r\n1 0 0 0 \r\n0 0 0 1 \r\n0 1 0 0 \r\n\r\n0 0 0 1 1 0 \r\n1 0 0 1 0 0 \r\n0 0 0 0 1 1 \r\n1 1 0 0 0 0 \r\n0 0 1 0 0 1 \r\n0 1 1 0 0 0",
  "link": "https://www.spoj.com/problems/CROSSBIT",
  "scraped_at": "2025-08-17 00:33:06",
  "test_cases": [
    {
      "input": "0 \t0 \t1 \t0\r\n1 \t0 \t0 \t0\r\n0 \t0 \t0 \t1\r\n0 \t1 \t0 \t0",
      "expected_output": "Sample Input4 1\r\n6 2\r\n0Sample Output0 0 1 0 \r\n1 0 0 0 \r\n0 0 0 1 \r\n0 1 0 0 \r\n\r\n0 0 0 1 1 0 \r\n1 0 0 1 0 0 \r\n0 0 0 0 1 1 \r\n1 1 0 0 0 0 \r\n0 0 1 0 0 1 \r\n0 1 1 0 0 0",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1 2 4 3\n2 3 1 4\n2 1 3 3\n3 2 3 2",
      "expected_output": "0\n0\n0\n0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "2 2 4 1\n1 2 3 3\n2 3 2 4\n1 4 4 4",
      "expected_output": "0\n0\n0\n0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "3 4 4 4\n4 4 3 2\n1 4 4 2\n1 3 2 3",
      "expected_output": "0\n0\n0\n0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "2 1 3 2\n1 2 2 2\n2 4 2 3\n2 1 4 3",
      "expected_output": "0\n0\n0\n0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "2 2 3 1\n3 2 2 2\n4 1 4 1\n1 1 3 2",
      "expected_output": "0\n0\n0\n0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "1 1 4 1\n1 1 4 1\n3 4 2 3\n2 1 4 4",
      "expected_output": "0\n0\n0\n0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "2 4 3 2\n1 4 1 1\n1 3 2 4\n3 4 4 3",
      "expected_output": "0\n0\n0\n0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "4 3 3 3\n4 2 2 4\n2 2 1 2\n2 1 3 2",
      "expected_output": "0\n0\n0\n0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "2 1 1 1\n2 2 2 2\n2 2 2 1\n1 2 1 1",
      "expected_output": "0\n0\n0\n0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "1 2 2 1\n2 1 2 2\n2 2 2 2\n1 2 1 1",
      "expected_output": "0\n0\n0\n0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "1 2 2 1\n2 1 1 1\n2 2 2 1\n2 2 2 1",
      "expected_output": "0\n0\n0\n0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "2 2 2 2\n2 2 1 2\n1 2 1 1\n2 1 2 2",
      "expected_output": "0\n0\n0\n0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "2 1 1 2\n2 2 2 1\n1 1 2 1\n1 1 1 2",
      "expected_output": "0\n0\n0\n0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "2 2 2 1\n1 2 2 2\n2 1 2 1\n1 1 1 1",
      "expected_output": "0\n0\n0\n0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "2 1 1 2\n1 1 1 2\n1 1 2 2\n1 1 1 1",
      "expected_output": "0\n0\n0\n0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "4 4 4 4\n4 4 4 4\n4 4 4 4\n4 4 4 4",
      "expected_output": "0\n0\n0\n0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "4 4 4 4\n4 4 4 4\n4 4 4 4\n4 4 4 4",
      "expected_output": "0\n0\n0\n0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "3 4 3 2\n3 3 2 4\n3 1 3 1\n4 2 2 2",
      "expected_output": "0\n0\n0\n0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 3 1 4\n2 4 3 4\n4 4 4 4\n4 3 4 2",
      "expected_output": "0\n0\n0\n0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:47",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:36:35"
}
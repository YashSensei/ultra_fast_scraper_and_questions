{
  "problem_code": "problems",
  "title": "Get",
  "tags": [],
  "text": "Peter has recently decided to hold a party at Stockholm, where the ACM/ICPC\r\n2009 World Final will be held. Unfortunately, despite Peter’s affluence, he is not able\r\nto invite all of his friends due to the astronomical price of the air ticket to Stockholm.\r\nHe has devised the following rule to determine which subset of his friends will be\r\ninvited:Any invited person must have at least A acquaintances at the party. This is to\r\nensure everyone at the party will not feel alien.Any invited person must be unfamiliar with at least B people. Otherwise some\r\npeople may not have the chance to communicate with a stranger.Given the relationships between Peter’s friends, you are to figure out whom Peter\r\nshould invite to the party so as to maximize its size.InputThere are multiple test cases in the input file.Each test case starts with four integers, N, M, A, and B (1 ≤ N ≤ 100, 0 ≤ M ≤ N × (N - 1) / 2, 0 ≤ A, B ≤ N - 1).\r\nEach of the following M lines contains\r\ntwo integers, X and Y, (0 ≤ X, Y ≤ N - 1, X ≠ Y), indicating that friend X and friend Y are acquaintances.Two successive test cases are separated by a blank line. A case with N = 0, M = 0,\r\nA = 0 and B = 0 indicates the end of the input file, and should not be processed by your program.OutputFor each test case, please print a single integer, the maximum number of friends\r\nPeter will be able to invite.ExampleInput:3 2 1 1\r\n0 1\r\n1 2\r\n\r\n4 4 2 1\r\n0 1\r\n1 2\r\n2 3\r\n0 3\r\n\r\n0 0 0 0Output:Case #1: 0\r\nCase #2: 4",
  "sample_input": "Input:3 2 1 1\r\n0 1\r\n1 2\r\n\r\n4 4 2 1\r\n0 1\r\n1 2\r\n2 3\r\n0 3\r\n\r\n0 0 0 0Output:Case #1: 0\r\nCase #2: 4",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/STCKHOLM",
  "scraped_at": "2025-08-17 00:33:44",
  "test_cases": [
    {
      "input": "3 2 1 1\r\n0 1\r\n1 2\r\n\r\n4 4 2 1\r\n0 1\r\n1 2\r\n2 3\r\n0 3\r\n\r\n0 0 0 0",
      "expected_output": "Case #1: 0\r\nCase #2: 4",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "7 1 1 4\n2 9\n7 1\n9 5 2 3\n1 2\n3 9\n2 3\n6 9\n2 10 5 7",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "1 1 2 3\n2 2\n10 8\n8 5 9 5\n4 1\n9 5\n2 3\n5 4\n3 3 7 2",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "2 1 2 10\n7 6\n8 9\n1 4 3 2\n6 5\n2 2\n2 8\n6 5\n8 7 3 6",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "82 39 60 49\n65 27\n48 74\n79 13 5 69\n83 36\n41 72\n65 42\n4 97\n43 65 38 58",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "92 65 82 81\n38 61\n2 91\n1 70 72 57\n85 92\n17 77\n9 94\n19 67\n12 88 28 21",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "54 38 79 10\n34 98\n69 25\n40 86 56 21\n39 61\n83 23\n39 84\n90 95\n53 48 88 83",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "18 20 84 88\n34 5\n64 91\n60 41 84 30\n11 70\n9 40\n20 46\n80 11\n85 90 33 50",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "60 66 73 16\n71 40\n13 76\n18 77 14 49\n45 41\n69 18\n42 50\n2 88\n96 67 28 76",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "17 19 9 26\n44 23\n7 29\n6 31 48 10\n41 23\n25 5\n15 5\n49 39\n25 49 35 36",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "39 8 40 29\n28 31\n31 27\n27 28 41 44\n26 23\n18 16\n40 17\n26 10\n42 30 29 20",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "26 27 47 38\n48 36\n42 26\n47 10 39 5\n19 48\n39 19\n30 33\n21 19\n44 41 42 45",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "9 5 29 15\n37 17\n39 28\n40 36 42 21\n30 36\n24 5\n39 35\n18 13\n46 41 49 30",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "12 17 34 35\n13 38\n33 36\n24 43 26 37\n23 43\n42 40\n50 37\n23 31\n34 18 6 48",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "12 46 43 46\n49 17\n46 41\n50 36 24 6\n17 40\n38 48\n30 16\n50 33\n7 31 6 46",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "40 6 36 18\n45 46\n21 23\n37 48 37 48\n44 26\n46 5\n29 20\n24 47\n8 35 49 19",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "100 100 100 100\n100 100\n100 100\n100 100 100 100\n100 100\n100 100\n100 100\n100 100\n100 100 100 100",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "100 100 100 100\n100 100\n100 100\n100 100 100 100\n100 100\n100 100\n100 100\n100 100\n100 100 100 100",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 100 2 99\n2 2\n99 1\n1 100 99 1\n100 2\n100 1\n2 100\n1 99\n2 1 2 100",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 99 1 99\n1 1\n100 100\n99 100 100 1\n2 2\n100 99\n1 1\n99 100\n99 100 99 99",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:50",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:10"
}
{
  "problem_code": "problems",
  "title": "Avantgarde and Doughnut",
  "tags": [],
  "text": "Recently Mr. Avantgarde has been assigned the task of delivering doughnuts. He borrowed an electric car for this task. There are N houses and each house has a charging station. There is at least one path of roads connecting each pair of houses. A trip from one house to any other must be completed using at most C rechargings. Car should always be recharged at the beginning of each trip (this counts as one of the C rechargings). As you know that Mr. Avantgarde is a lazy guy, Given the road network and C, compute the minimum range required of the electric car.Note: With one recharging, the car can travel a distance equal to its range.InputInput begins with one integer T (0 < T < 6) denoting the number of test cases. Each test case begins with a line containing three integers N, C, and M (1 < N < 101, 0 < C < 101), where N and C are number of houses and number of rechargings. Next follow M lines each with three integers u, v and d (0 ≤ u, v < N, u ≠ v, 1 ≤ d ≤ 109) indicating that house u and v (0-indexed) are connected bidirectionally with distance d.OutputFor each test case, output minimum range required in each line.SampleInput:2\r\n4 2 4\r\n0 1 100\r\n1 2 200\r\n2 3 300\r\n3 0 400\r\n10 2 15\r\n0 1 113\r\n1 2 314\r\n2 3 271\r\n3 4 141\r\n4 0 173\r\n5 7 235\r\n7 9 979\r\n9 6 402\r\n6 8 431\r\n8 5 462\r\n0 5 411\r\n1 6 855\r\n2 7 921\r\n3 8 355\r\n4 9 113Output:300\r\n688",
  "sample_input": "Input:2\r\n4 2 4\r\n0 1 100\r\n1 2 200\r\n2 3 300\r\n3 0 400\r\n10 2 15\r\n0 1 113\r\n1 2 314\r\n2 3 271\r\n3 4 141\r\n4 0 173\r\n5 7 235\r\n7 9 979\r\n9 6 402\r\n6 8 431\r\n8 5 462\r\n0 5 411\r\n1 6 855\r\n2 7 921\r\n3 8 355\r\n4 9 113Output:300\r\n688",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/CLZDOUGH",
  "scraped_at": "2025-08-17 00:34:24",
  "test_cases": [
    {
      "input": "2\r\n4 2 4\r\n0 1 100\r\n1 2 200\r\n2 3 300\r\n3 0 400\r\n10 2 15\r\n0 1 113\r\n1 2 314\r\n2 3 271\r\n3 4 141\r\n4 0 173\r\n5 7 235\r\n7 9 979\r\n9 6 402\r\n6 8 431\r\n8 5 462\r\n0 5 411\r\n1 6 855\r\n2 7 921\r\n3 8 355\r\n4 9 113",
      "expected_output": "300\r\n688",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5\n9\n10\n5\n9\n10",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n10",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "2\n5\n9",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n878861\n13190006\n24940318\n15493432\n60778917",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "15\n30487375\n41046516\n14976822\n43525346\n12476684\n30661087\n44595090\n81095516\n59285208\n37917591\n36386612\n74080770\n36184671\n58211398\n7811933",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "18\n76156158\n42949401\n84857862\n62915950\n86512529\n93833524\n87434501\n70352796\n7421941\n72457865\n34922249\n59714708\n46933360\n29445039\n61727126\n51864198\n21810029\n50542898",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "15\n19077041\n80401058\n4124108\n30438631\n45655749\n46419004\n53260413\n79125086\n10216287\n15684243\n55453736\n36383440\n28012632\n75270066\n21842480",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "11\n50216451\n90939938\n93072756\n88238130\n55627444\n63446782\n40868349\n43261274\n72641934\n57887771\n48556180",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "79\n19817\n89134\n38748\n66274\n26761\n31333\n14356\n11250\n97489\n33035\n18683\n23293\n57893\n66395\n8419\n2693\n30925\n80690\n55546\n84388\n72826\n95089\n56010\n9649\n79760\n94979\n58319\n41923\n67874\n19051\n95014\n78018\n1733\n46419\n41239\n24724\n13492\n42694\n41933\n87078\n72051\n88349\n64688\n26497\n60353\n96639\n62806\n41760\n52612\n22582\n29042\n11719\n62076\n74985\n29644\n78908\n42823\n94564\n1093\n94463\n79286\n23845\n53810\n37952\n95109\n88553\n68425\n50900\n42629\n61821\n84987\n58648\n36220\n5162\n83462\n83247\n37503\n21184\n43803",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "68\n23804\n45088\n99975\n29221\n36914\n68405\n30481\n29935\n37045\n14688\n8305\n17064\n52939\n63493\n96045\n78998\n52250\n95563\n82743\n58726\n76788\n23603\n89075\n9666\n24296\n20707\n40079\n3341\n22165\n95449\n82152\n16421\n79812\n62676\n29249\n21372\n91123\n66651\n69163\n68197\n85265\n24764\n8521\n9419\n40194\n99452\n46207\n72220\n987\n64392\n6742\n78069\n26785\n42145\n98700\n79335\n1614\n61296\n13981\n36063\n39420\n41324\n68216\n21999\n48372\n76051\n6886\n9440",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "94\n27519\n55358\n2508\n67866\n33133\n662\n61708\n91868\n43872\n61076\n66160\n45213\n11769\n4837\n49794\n41708\n64628\n63719\n34210\n3979\n18064\n4954\n30948\n14505\n5375\n42904\n51561\n64060\n24305\n16370\n71885\n26568\n42875\n4090\n53724\n96006\n20230\n70171\n11162\n75911\n96410\n72068\n26067\n97557\n5751\n82952\n8850\n47772\n17111\n89780\n2765\n29933\n80155\n95817\n84634\n63319\n85312\n93252\n91568\n99376\n51357\n29881\n95085\n18107\n34903\n16161\n33200\n68897\n21483\n14488\n53110\n2152\n11433\n20507\n17535\n273\n76121\n41692\n88144\n89319\n14361\n54563\n40861\n61284\n1693\n1724\n72054\n46217\n41574\n7362\n61325\n98234\n27369\n57015",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "90\n71816\n43607\n21102\n62663\n8695\n99727\n36632\n1390\n77541\n21413\n55099\n40648\n26715\n59631\n81173\n87823\n79526\n3037\n17199\n69822\n58920\n47463\n73696\n82511\n98028\n26703\n57707\n95975\n10189\n979\n74249\n10780\n74064\n64366\n71810\n7159\n81204\n2914\n88995\n85229\n86957\n9973\n10509\n49582\n62477\n35200\n87753\n58078\n99280\n19259\n22386\n15850\n78190\n64918\n52740\n94501\n47667\n55804\n4804\n50494\n94697\n33812\n74641\n72971\n80838\n51677\n52397\n21733\n76954\n60878\n28298\n18791\n67239\n17462\n8114\n84049\n85902\n4830\n91948\n52136\n90375\n59358\n38155\n12223\n24711\n4432\n50188\n71994\n68224\n64429",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "74\n14096\n63771\n29496\n64139\n74648\n95197\n95978\n19292\n43307\n18509\n22866\n84874\n41040\n86431\n35823\n80522\n12206\n90290\n57955\n47914\n99360\n68467\n52485\n12360\n1870\n5664\n27490\n92906\n15625\n33095\n44033\n39290\n18748\n25465\n11771\n64943\n63016\n66115\n36623\n86640\n92966\n86737\n80791\n16347\n68542\n5123\n39951\n62503\n25318\n50544\n12009\n76673\n83880\n62253\n67821\n60211\n37844\n82339\n83902\n42197\n95055\n81387\n38327\n1934\n42674\n36251\n89613\n36795\n1919\n18133\n70210\n14169\n36538\n35182",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "70\n43843\n1169\n3712\n1459\n4341\n243\n84461\n99430\n49519\n29631\n37613\n59758\n67954\n81733\n96208\n94414\n96036\n39970\n22545\n32020\n7608\n70338\n49471\n16183\n32137\n44127\n29190\n633\n59128\n45400\n2578\n70824\n38033\n51289\n62279\n41130\n37521\n935\n8427\n9896\n31481\n13243\n33121\n39770\n69116\n56244\n10955\n1785\n79170\n61560\n63284\n34800\n73466\n98473\n24919\n48159\n21896\n84955\n59419\n72629\n4594\n92327\n25755\n12901\n19283\n71086\n23762\n83759\n87979\n37311",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "71\n51229\n90119\n33812\n97075\n70751\n85338\n69746\n73568\n45767\n85024\n72952\n27219\n69956\n99113\n12289\n64345\n91290\n68522\n33246\n70879\n39465\n60280\n86521\n56126\n17834\n19179\n43968\n1897\n14146\n43590\n8850\n15331\n6657\n38422\n86554\n10087\n38722\n66253\n46287\n48095\n62752\n70590\n28633\n38713\n68746\n36715\n39425\n41211\n70203\n99694\n53972\n93114\n81765\n62314\n54547\n50590\n82670\n96822\n25533\n45544\n40406\n88992\n54947\n73769\n29502\n82905\n98019\n9040\n70969\n2255\n10052",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "101\n42958211\n31578673\n46544827\n11613722\n50692891\n34727197\n98711306\n66553195\n2286943\n66197399\n725673\n58895770\n19927597\n12306249\n76112835\n38776667\n91829615\n46463700\n13233096\n34090909\n95372129\n85905858\n74445048\n17740842\n12519898\n87459143\n73595990\n22129503\n70076864\n83156280\n89531147\n66110765\n44557569\n9154366\n86794963\n66236410\n49823586\n27246518\n59410566\n74224045\n89125661\n99832550\n22842378\n72379860\n67663110\n2949935\n64038716\n78830702\n81275043\n45170695\n24283188\n23566497\n46655821\n98410196\n2247049\n35592047\n27296475\n30853129\n23042798\n98062989\n88028000\n83839177\n90723104\n54573779\n84941808\n88285513\n34773845\n57848404\n79766768\n88348089\n75178033\n29551567\n2606109\n7707387\n66967728\n32704547\n23775080\n79951703\n31631876\n84676595\n6470576\n11078393\n92066759\n90097700\n72906563\n74264811\n41572386\n56473268\n52458184\n10441828\n66779660\n35525950\n10645002\n17155427\n84366954\n10017932\n20457778\n56368021\n93951046\n86191219\n42139536",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 101)"
    },
    {
      "input": "101\n88452600\n6132935\n76308654\n3003214\n10007229\n57055683\n25787698\n50706065\n51995844\n66487723\n45504904\n77584138\n20595322\n66733250\n88689586\n98661194\n66734531\n20623508\n48743404\n72841773\n45338036\n9264176\n7666812\n45598470\n32176700\n4172938\n36321816\n29376511\n32333111\n91770019\n69047520\n66544596\n12587788\n45444885\n44843742\n39640563\n72734938\n6577206\n59452925\n65605296\n23717932\n83879767\n49131893\n91625807\n32505904\n61502188\n55424393\n46229153\n36118448\n7979067\n66112038\n50601987\n24288987\n36570322\n56571492\n2355835\n46859769\n41649029\n5969859\n57295212\n47088484\n28510171\n45140867\n41182991\n5519009\n24966701\n67481832\n99009868\n67251821\n26356704\n15341090\n47151512\n47826674\n17024051\n16018979\n10954639\n84087141\n80502189\n89837427\n13328958\n98545802\n92592883\n9241044\n51979151\n44620356\n26150581\n92764936\n73985787\n35291501\n35517914\n56938458\n38414397\n21128195\n63900631\n13565202\n8431644\n5683401\n12497085\n78260350\n27224934\n41252469",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 101)"
    },
    {
      "input": "2\n100000000\n34169375",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 2)"
    },
    {
      "input": "2\n1\n1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 2)"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:57",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Movie Theatre Madness",
  "tags": [],
  "text": "A group of friends have gone to watch the first day first show of an awesome new movie. However, since they did not book the tickets well in advance, they have ended up with crazy seats. To be more specific, rather than getting seats such that all the friends are seated in the same row, they have ended up with seats such that all of them are seated in the same column! Now this is very inconvenient since they won't be able to chat with each other during the movie or have any kind of fun, but they are okay with this since they'd rather watch the movie like this, than not watch the movie at all.But there is another problem apart from this. Now we know that all the friends are seated in a single column, one behind the other. Since all of them reached the theatre just in time for the movie, they rushed and occupied the first of the booked seats that they could find. However all the friends have different heights, and due to the lack of planning, there is no guarantee that a shorter person is always seated in front of a taller person. But this would mean that the shorter person would struggle to see the screen throughout the movie!But the movie has started and it's too late now to do anything.What you need to do is the following: For every person, find the height of the closest person seated in front of him/her who is blocking his/her view (that is, theperson closest in front with a greater height). If no such person exists, take this height as 1. Print the product of all such values modulo 1000000007.InputOn the first line you have a single integer N (2 <= N <= 105), the total number of friends.This is followed by N space separated integers a1, a2, ... aN, which correspond to theheight of the people from back to front.That is, a1is the height of the person seated on the last row, a2is the height of the person seated on the second last row (just in front of a1) and so on, up to aNwhich is the height of the person seated right at the very front (1 <= ai<= 109).Note that all these integers are distinct.OutputOn a single line, output the result. (For every person, find the height of the closest blocking person.This value is 1 if no such person exists. Print the product of all these values modulo 1000000007).NOTE: By closest blocking person to aiwe mean find aj, such that aj> ai, j > i, and (j-i) is minimum. (Please look at sample test cases for further clarity.)ExampleInput #1:5\r\n5 2 1 4 3Output #1:16Input #2:5\r\n9 8 3 5 7Output #2:35Input #3:10\r\n30 10 50 70 11 60 20 80 31 12Output #3:999962375ExplanationInput #1:blockingHeight(5) = 1 (since 5 is the tallest, no one is blocking him)blockingHeight(2) = 4blockingHeight(1) = 4 (although 3 is also taller that 1, 4 is closer to 1)blockingHeight(4) = 1 (No one blocking 4)blockingHeight(3) = 1 (No one blocking 3)Answer=1*4*4*1*1=16",
  "sample_input": "Input #1:5\r\n5 2 1 4 3Output #1:16",
  "sample_output": "Input #2:5\r\n9 8 3 5 7Output #2:35",
  "link": "https://www.spoj.com/problems/THEATRE",
  "scraped_at": "2025-08-17 00:33:42",
  "test_cases": [
    {
      "input": "Input #1:5\r\n5 2 1 4 3Output #1:16",
      "expected_output": "Input #2:5\r\n9 8 3 5 7Output #2:35",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4 8\ngvb h\n8 5 7 5 4 7 4\n9 4 10 8 eut ngt",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "6 1\nr a\n10 5 4 8 9 10 9\n10 10 10 4 ihtp cedwb",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "2 4\ndgnnj zf\n7 7 7 10 8 8 10\n7 2 8 9 xgeccw w",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "33 91\nsjah itifc\n65 19 5 14 89 3 22\n22 73 41 91 ayig sgh",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "3 3\nvute uh\n21 9 2 25 97 20 93\n30 82 97 83 fdefdep x",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "8 4\nsv j\n55 53 35 30 9 30 35\n15 82 72 78 povmbq uoo",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "5 11\npn ijzt\n89 69 76 100 83 35 88\n18 81 24 68 ocf lxjnr",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "24 74\nytnq knze\n75 85 28 68 21 80 48\n21 16 16 29 u j",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "188 388\nlj bd\n367 488 479 154 379 419 91\n133 91 421 273 llewv fla",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "70 428\nlbumi vzq\n374 248 89 140 171 290 100\n162 114 128 159 pulft uawxl",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "411 56\nh rjyvo\n264 241 484 435 97 107 383\n194 214 456 473 unstjud vxb",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "109 462\nfz olto\n422 447 431 128 51 175 264\n398 250 122 76 kpdi vyt",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "119 437\ntqce ie\n55 430 228 142 459 448 446\n439 500 203 194 wifzm ljg",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "134 445\nhupiw xh\n145 252 322 205 340 103 183\n132 388 164 159 rai wgsz",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "101 284\numant ldz\n420 439 361 108 286 240 442\n67 106 71 345 izhe uppaz",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\npslf denz\n1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 glnhxlk muwfv",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\noyj pkti\n1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 wou ahu",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\nr hdlgf\n2 1000 1 1000 1000 999 2\n1000 1000 1 1000 etgsiej xyrbq",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 1\njsgc jps\n2 1 1 2 2 2 999\n1 2 1000 999 f g",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:51",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:21"
}
{
  "problem_code": "problems",
  "title": "Funny Areas",
  "tags": [],
  "text": "There is an M × N matrix of integer numbers.  Both the rows and columns of the matrix are numbered starting at 0 and ending at M-1 and N-1 respectively.A funny area is defined by three integers i, j, and r, and it is composed for those cells [x, y] such that |i-x| + |j-y| ≤ r. As you might have probably guessed[i, j]is the center andris the radius of the funny area.In this problem we are interested in finding the sum of every cell inside some given funny areas.InputThe first line contains two integers 1 ≤ M, N ≤ 1000 representing the rows and columns of the matrix.Each of the following M lines contains N integers separated by single spaces. These numbers are non-negative and not greater than 1,000,000,000The next line contains a number F (1 ≤ F ≤ 100,000) which is the number of funny areas.Each of the following F lines contains three integersi,j, andrrepresenting the center and the radius of a funny area.OutputF lines: for each funny area print a single number -- the sum of all the cells inside of it.ExampleInput5 5\r\n1 2 3 4 5\r\n5 4 3 2 1\r\n1 1 1 1 1\r\n2 3 4 3 0\r\n7 8 9 6 5\r\n3\r\n1 0 0\r\n2 2 2\r\n3 1 1Output5\r\n36\r\n18",
  "sample_input": "Input5 5\r\n1 2 3 4 5\r\n5 4 3 2 1\r\n1 1 1 1 1\r\n2 3 4 3 0\r\n7 8 9 6 5\r\n3\r\n1 0 0\r\n2 2 2\r\n3 1 1Output5\r\n36\r\n18",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/FUNAREA",
  "scraped_at": "2025-08-17 00:33:17",
  "test_cases": [
    {
      "input": "Input5 5\r\n1 2 3 4 5\r\n5 4 3 2 1\r\n1 1 1 1 1\r\n2 3 4 3 0\r\n7 8 9 6 5\r\n3\r\n1 0 0\r\n2 2 2\r\n3 1 1Output5\r\n36\r\n18",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "10 7\neudymp 8\n9 8 1 3 4\n5 3 2 5 7\n9 4 7 4 8\n8 6 8 2 5\n8 1 3 3 2\n6\n6 5 5\n9 9 2\n8 8 4 10\n1 6 lrbx\n7\n10",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n6\n0\n0\n0\n0\n7\n10",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "10 8\ngqbi 8\n3 10 4 10 8\n6 10 10 10 1\n9 8 1 7 6\n7 4 7 6 5\n1 9 5 5 3\n2\n4 5 1\n3 8 9\n2 1 5 10\n9 3 gcgsoslq\n6\n4",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n2\n0\n0\n0\n0\n6\n4",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "2 3\nztluh 10\n10 9 1 3 1\n10 10 3 8 4\n10 3 2 4 1\n4 7 2 8 10\n4 6 10 5 1\n8\n6 7 5\n2 2 7\n2 8 2 2\n3 7 klqfrko\n10\n7",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n8\n0\n0\n0\n0\n10\n7",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "75 53\nxgqyka 40\n27 27 17 11 64\n69 46 4 62 70\n88 86 87 97 10\n75 76 80 1 7\n19 3 30 52 5\n40\n67 100 45\n96 74 24\n2 61 5 31\n92 51 vi\n55\n36",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n40\n0\n0\n0\n0\n55\n36",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "4 39\ngtju 53\n74 71 20 73 73\n51 66 78 14 37\n16 29 74 13 85\n94 22 13 45 72\n2 59 86 25 83\n6\n58 27 2\n1 22 13\n91 9 65 65\n42 91 qcoxpwj\n11\n66",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n6\n0\n0\n0\n0\n11\n66",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "71 96\nna 2\n100 26 98 76 58\n81 99 19 65 23\n93 46 35 77 47\n72 80 44 85 45\n10 58 12 91 1\n19\n49 51 7\n38 34 85\n67 18 10 80\n99 22 fymd\n67\n84",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n19\n0\n0\n0\n0\n67\n84",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "11 27\noabv 56\n45 70 90 68 14\n45 57 33 95 1\n59 35 66 59 85\n53 69 18 19 1\n57 61 48 58 91\n12\n9 27 65\n99 42 41\n58 41 43 46\n70 87 ctmcb\n12\n94",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n12\n0\n0\n0\n0\n12\n94",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "88 71\npydh 36\n93 35 27 6 39\n90 83 82 4 82\n16 13 14 43 50\n65 96 17 91 55\n31 69 76 87 56\n52\n44 55 33\n17 41 42\n69 68 3 5\n94 38 eggb\n66\n82",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n52\n0\n0\n0\n0\n66\n82",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "440 387\nchwi 100\n174 361 141 104 423\n186 348 274 231 369\n311 144 356 151 173\n248 70 450 400 276\n397 72 242 322 490\n481\n363 271 369\n497 370 410\n272 423 102 496\n249 156 ejx\n399\n401",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n481\n0\n0\n0\n0\n399\n401",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "293 312\nk 102\n444 149 209 413 423\n163 460 386 181 423\n90 494 136 216 283\n238 389 249 471 139\n265 141 264 377 396\n60\n324 366 469\n115 302 201\n79 153 424 471\n179 81 xq\n343\n119",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n60\n0\n0\n0\n0\n343\n119",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "55 427\nnescp 148\n233 66 446 381 430\n52 404 419 64 482\n162 404 486 316 230\n479 371 191 348 336\n110 142 303 362 149\n480\n287 433 353\n209 118 65\n348 396 77 384\n69 331 lgxvx\n298\n389",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n480\n0\n0\n0\n0\n298\n389",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "476 357\nrrcaqd 374\n159 58 295 85 417\n332 115 280 466 410\n92 197 139 262 138\n429 119 446 105 467\n171 60 134 89 288\n306\n216 79 359\n486 263 321\n221 349 416 329\n268 126 dhmp\n68\n205",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n306\n0\n0\n0\n0\n68\n205",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "207 169\nnea 278\n74 472 198 376 481\n165 302 299 417 360\n66 163 63 451 99\n396 89 170 482 267\n154 323 342 134 247\n225\n294 330 88\n450 53 467\n108 132 369 448\n284 181 bbf\n282\n286",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n225\n0\n0\n0\n0\n282\n286",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "452 160\nilc 75\n126 152 328 469 458\n224 202 219 455 68\n229 131 50 444 193\n57 266 263 207 124\n173 140 177 94 249\n89\n142 201 190\n106 430 200\n444 70 480 91\n101 262 u\n96\n212",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n89\n0\n0\n0\n0\n96\n212",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "67 418\nytsy 486\n134 50 416 393 54\n361 257 248 171 323\n233 224 446 175 124\n483 444 444 302 403\n78 364 138 299 359\n358\n155 75 361\n157 264 325\n191 121 494 465\n63 171 gmlv\n68\n429",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n358\n0\n0\n0\n0\n68\n429",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\nhkfa 1000\n1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000\n1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000 1000\n1000 1000 z\n1000\n1000",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n1000\n0\n0\n0\n0\n1000\n1000",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\ncaruwc 1000\n1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000\n1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000 1000\n1000 1000 wmspk\n1000\n1000",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n1000\n0\n0\n0\n0\n1000\n1000",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 1000\nac 1000\n1 1 999 1000 1000\n1000 1 1 999 999\n999 2 1 2 2\n999 1000 1000 1 1\n1 1 1000 999 2\n2\n1 999 1\n1000 999 999\n2 999 1000 1\n999 2 raocrhry\n1\n1",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n2\n0\n0\n0\n0\n1\n1",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 1000\nnpra 2\n999 1 999 2 999\n1000 2 1000 2 1\n2 1 1000 1000 1\n1000 1 999 1000 1000\n999 999 1000 999 2\n1000\n2 1000 1\n1000 2 1000\n1000 999 999 1\n1 999 umpbb\n999\n2",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n1000\n0\n0\n0\n0\n999\n2",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:47",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:36:42"
}
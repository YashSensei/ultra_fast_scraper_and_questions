{
  "problem_code": "problems",
  "title": "Fishmonger",
  "tags": [],
  "text": "A fishmonger wants to bring his goods from the port to the market. On his route he has to traverse an area with many tiny city states. Of course he has to pay a toll at each border.Because he is a good business man, he wants to choose the route in such a way that he has to pay as little money for tolls as possible. On the other hand, he has to be at the market within a certain time, otherwise his fish start to smell.InputThe first line contains the number of statesnand available timet. The first state is the port, the last state is the market. After this line there arenlines withnnumbers each, specifying for each state the travel time to thei-th state. This table is terminated with an empty line. The table of the tolls follows in the same format.nis at least 3 and at most 50. The time available is less than 1000. All numbers are integers.There are many test cases separated by an empty line. Input terminates with number of states and time equal 0 0.OutputFor each test case your program should print on one line the total amount of tolls followed by the actual travelling time.ExampleSample input:4 7\r\n0 5 2 3\r\n5 0 2 3\r\n3 1 0 2\r\n3 3 2 0\r\n\r\n0 2 2 7\r\n2 0 1 2\r\n2 2 0 5\r\n7 2 5 0\r\n\r\n0 0Sample output:6 6This corresponds to the following situation, the connections are labeled with (time, toll):",
  "sample_input": "Sample input:4 7\r\n0 5 2 3\r\n5 0 2 3\r\n3 1 0 2\r\n3 3 2 0\r\n\r\n0 2 2 7\r\n2 0 1 2\r\n2 2 0 5\r\n7 2 5 0\r\n\r\n0 0Sample output:6 6",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/FISHER",
  "scraped_at": "2025-08-17 00:33:35",
  "test_cases": [
    {
      "input": "Sample input:4 7\r\n0 5 2 3\r\n5 0 2 3\r\n3 1 0 2\r\n3 3 2 0\r\n\r\n0 2 2 7\r\n2 0 1 2\r\n2 2 0 5\r\n7 2 5 0\r\n\r\n0 0Sample output:6 6",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3 10\ntbu yujjatm 5\n10 7 3 3\n3 7 5 1\n2 10 8 9\n7 6 5 3\n1 9 9 8\n5 8 10 9\n8 7 8 6\n8 8 9 10\n10 1 1 10\n7 cwpxqsh yl 5",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "5 4\nlmcmtz fbc 4\n4 9 5 1\n4 4 4 9\n4 7 9 2\n1 2 4 3\n3 3 2 3\n7 8 4 3\n4 9 2 3\n7 8 8 4\n3 10 2 7\n3 j aphzzs 7",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "2 7\nraokj fp 7\n2 10 5 10\n7 3 6 4\n5 9 10 4\n4 8 3 1\n2 10 3 6\n8 2 8 7\n5 8 7 4\n4 2 6 7\n9 5 6 5\n1 fbhonj w 3",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "61 29\nnel y 96\n77 96 81 8\n24 93 70 83\n15 20 9 88\n51 82 64 94\n78 91 26 9\n42 62 64 23\n42 27 78 46\n2 19 6 43\n25 81 9 23\n15 rwqgwwx mlm 7",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "19 1\nfyo hqmotd 9\n68 93 67 60\n57 31 20 99\n61 87 15 16\n16 74 60 49\n67 88 59 33\n9 47 90 89\n34 36 41 15\n46 44 2 93\n56 8 42 18\n69 zr anbvcdc 39",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "9 98\ngp p 3\n59 18 57 93\n72 27 7 47\n31 59 45 84\n39 85 95 21\n98 24 32 36\n78 65 41 76\n83 13 62 60\n59 20 94 78\n99 80 15 7\n63 k ayfrxib 38",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "78 39\nc fdj 78\n1 95 18 65\n10 93 71 39\n48 46 94 69\n94 59 21 30\n60 17 35 2\n72 3 15 94\n49 27 75 99\n81 59 25 59\n76 88 90 31\n53 u gsnrrlcy 62",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "74 18\nrwup tsz 75\n34 19 75 92\n44 49 100 95\n55 12 27 96\n93 60 3 70\n78 66 60 94\n24 52 61 72\n59 78 64 72\n52 25 56 75\n45 85 75 16\n79 gwij mqa 9",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "253 116\nnt z 439\n184 131 316 432\n401 252 273 488\n240 431 165 371\n221 253 459 384\n275 167 112 197\n432 223 262 270\n94 391 298 277\n490 441 243 368\n478 146 279 157\n358 b kj 67",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "214 463\nqwywxr sdn 301\n401 267 465 315\n302 355 291 457\n216 275 382 55\n442 51 177 356\n73 294 285 213\n401 365 200 381\n431 69 202 243\n244 223 395 335\n289 291 400 431\n396 nv xecqz 111",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "389 432\no yhoj 482\n351 441 377 399\n454 50 344 428\n95 113 101 428\n281 318 466 447\n181 328 248 137\n336 226 116 467\n416 112 257 458\n494 338 369 266\n333 391 146 107\n58 gvmz jjwpv 158",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "315 486\ny ciijwh 361\n67 460 493 179\n93 177 151 127\n385 451 268 453\n53 234 226 398\n378 219 462 368\n456 275 423 65\n453 443 50 484\n407 390 176 358\n150 249 250 209\n443 l gqgbrp 282",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "326 369\nrfb fksjszu 314\n331 422 153 388\n145 394 414 490\n240 391 319 453\n165 414 477 119\n450 354 500 488\n461 277 471 285\n130 219 151 207\n87 322 238 300\n197 312 81 476\n98 uzg rscin 300",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "469 118\nhsq chqew 215\n429 188 419 400\n357 269 247 394\n481 323 401 252\n272 320 351 434\n449 144 500 392\n308 63 191 117\n288 499 170 203\n329 495 95 461\n240 146 271 69\n369 qjcgvae selfr 283",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "114 237\nhrff amvla 158\n384 293 151 404\n464 431 92 290\n316 470 455 338\n314 222 172 153\n415 175 406 63\n277 333 167 351\n272 440 75 386\n395 85 442 113\n301 106 139 369\n96 cdyyh wiwokv 329",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\negx pu 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 czaihvc hzka 1000",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\nz xh 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 evdzjhq xyg 1000",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 2\ncwuzk xds 1\n2 999 1000 999\n1000 999 1000 999\n2 1 1000 999\n999 2 1000 1000\n999 999 1000 1000\n1000 1 1 2\n1000 1 1000 1\n1 1 999 2\n1 1000 2 999\n999 lqymc pd 1000",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1000 1000\nss m 999\n2 1 1 1\n1000 1 1000 999\n1 1000 2 999\n2 2 1000 1000\n999 1 2 1000\n1000 2 1 999\n999 999 999 999\n1000 999 2 1000\n1000 999 999 999\n1 sgcj sikzs 999",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:51",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:17"
}
{
  "problem_code": "problems",
  "title": "Counting in a DAG",
  "tags": [],
  "text": "You are given a weightedDAG. For each vertex, calculate the sum of the weights of the vertices within its reach (including itself).InputThe first line contains an integer T, denoting the number of test cases.For each test case, the first line contains two positive integers n and m, denoting the number of vertices and the number of edges in the DAG.The second line contains n positive integers w1..wn, denoting the weights of vertices.The next m lines contain two positive integers u,v, denoting an edge from u to v.OutputFor each test case, print a line consisting of n numbers, denoting the sum for each vertex.ExampleInput:24 3510 713 383 9904 14 22 14 4450 379 230 5203 42 42 32 4Output:510 1223 383 2213450 1129 750 520ConstraintsInput Set 1: numberOfTestCases <= 40, n <= 100, m <= 10000Input Set 2: numberOfTestCases <= 2, n <= 1000, m <= 500000Input Set 3: numberOfTestCases <= 2, n <= 20000, m <= 500000The weights are no more than 1000",
  "sample_input": "Input:24 3510 713 383 9904 14 22 14 4450 379 230 5203 42 42 32 4Output:510 1223 383 2213450 1129 750 520",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/DAGCNT2",
  "scraped_at": "2025-08-17 00:33:27",
  "test_cases": [
    {
      "input": "24 3510 713 383 9904 14 22 14 4450 379 230 5203 42 42 32 4",
      "expected_output": "510 1223 383 2213450 1129 750 520",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1 8 6 8 2 5 8 8 9 2 10 6 5 6 5 3",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "1 3 9 10 6 9 4 7 4 8 2 10 2 8 8 3",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "1 3 3 1 4 2 7 7 9 9 5 6 7 10 6 4",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "9 93 54 73 17 24 51 19 56 43 31 62 88 3 30 49",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "27 52 26 69 25 3 69 68 93 12 64 6 29 64 43 75",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "68 1 67 67 75 40 57 93 85 5 11 66 50 53 56 55",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "35 29 21 31 55 99 98 92 37 11 94 91 31 20 8 56",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "15 77 59 68 37 90 42 7 22 47 94 29 70 32 19 1",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "299 338 323 66 351 116 312 388 418 79 187 50 367 163 396 371",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "297 187 207 157 413 164 90 196 56 242 405 281 111 370 487 243",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "302 239 463 368 161 433 60 121 428 303 458 418 79 346 136 98",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "493 159 138 98 417 80 294 198 458 166 258 464 180 100 272 54",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "482 76 234 185 91 145 118 277 395 240 243 487 108 434 94 188",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "460 50 198 443 358 50 110 182 492 353 407 437 167 463 281 285",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "352 77 131 123 193 212 146 164 233 87 425 380 401 290 390 426",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 1 2 1 1000 1 2 1 2 1000 2 999 2 2 2 1",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1000 999 2 1000 1 2 1 1 2 1000 1000 999 1 1 1000 999",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:50",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:09"
}
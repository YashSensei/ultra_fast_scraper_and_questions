{
  "problem_code": "problems",
  "title": "Closest Number",
  "tags": [],
  "text": "EnglishVietnameseConsider two n-digit positive decimal integers A and B with no leading\nzeroes. We need to find the two closest to A n-digit numbers (the\nfirst one – greater or equal to A, the other – strictly less than A),\nwith decimal writings containing all the digits of B in some order.\nFor example if A=3022 and B=1232, using B’s digits we can obtain\nthe following 4-digit numbers: 1223, 1232, 1322, 2123, 2132, 2213,\n2231, 2312, 2321, 3122, 3212 and 3221. The least number greater\nor equal to A obtained by B’s digits is 3122, and the biggest one,\nstrictly less then A is 2321. If A=1232 and B=3022, the possible numbers\nare 2023, 2032, 2203, 2230, 2302, 2320, 3022, 3202 and\n3220. The least number greater or equal to A obtained by B’s digits\nis 2023, and there is no number less than A.\nWrite a program closest to find these “closest to A” numbers for\ngiven A and B, or to determine that one of them does not exist.InputTwo lines are read from the standard input, each of them containing an\nn-digit positive integer with no leading zeroes, with A read from the\nfirst, and B read from the second line (1 ≤ n ≤ 60).OutputWrite to the standard output:Line 1: the least n-digit number with no leading zeroes,\nnot less than A, containing all the digits of B in some order.\nIf such number does not exist, the output should be 0.Line 2: the biggest n-digit number with no leading zeroes, less\nthan A, containing all the digits of B in some order. If such number\ndoes not exist, the output should be 0.SampleInput:3075\n6604\n3000203\n4562454Output:4066\n0\n4244556\n2655444Problem for kid - Please, think like kid.",
  "sample_input": "Input:3075\n6604\n3000203\n4562454Output:4066\n0\n4244556\n2655444",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/MCLONUM",
  "scraped_at": "2025-08-17 00:33:28",
  "test_cases": [
    {
      "input": "3075\n6604\n3000203\n4562454",
      "expected_output": "4066\n0\n4244556\n2655444",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5\n2\n10\n10\n7\n5",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n2",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n10\n5\n9\n10\n3",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "15\n2897132\n42254115\n96930895\n1406227\n28906943\n76838262\n5725738\n57239846\n22721031\n48431862\n96587774\n94858289\n50288393\n76927750\n80065552",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "10\n37929831\n81509613\n99037712\n63348509\n24382508\n33271534\n33221254\n72352905\n76635249\n33759921",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "20\n82879948\n51622110\n83167998\n38666127\n64576873\n6653903\n18604910\n52780566\n72237461\n52244454\n41813157\n76990152\n89855675\n46033550\n96451196\n22417750\n43745560\n81596312\n17412160\n17940046",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "5\n83088948\n55262605\n60795655\n91619491\n70496780",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "11\n81674319\n80696913\n49311404\n26183253\n47910008\n48033717\n88022433\n21856013\n48582\n65839019\n20405174",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "40\n11694\n76062\n74441\n23426\n41233\n9487\n61321\n80700\n29424\n1141\n51770\n63272\n6633\n86687\n25715\n60075\n81802\n64265\n5500\n34587\n12159\n62972\n58040\n85496\n88749\n3319\n53258\n79858\n9695\n87921\n13442\n26705\n38708\n29677\n55722\n27145\n56615\n40077\n19600\n42584",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "41\n31502\n90326\n7891\n99854\n28916\n75513\n60245\n94761\n74726\n30688\n65807\n14573\n10115\n19677\n32220\n65012\n54637\n62233\n67182\n23319\n99072\n4278\n41603\n49235\n80135\n24315\n9045\n50743\n53227\n99540\n27372\n28259\n80291\n64837\n56528\n24652\n38470\n16342\n67270\n28464\n54089",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "31\n26577\n9538\n26115\n34813\n74329\n60328\n84599\n32678\n6122\n59476\n33173\n56054\n99233\n77911\n88040\n39568\n39741\n3325\n39531\n17594\n82858\n47580\n57010\n99360\n14311\n71638\n31966\n93542\n16806\n57518\n28828",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "20\n57151\n38049\n10652\n64408\n27230\n55926\n32933\n28506\n83882\n4696\n42476\n57603\n76986\n25615\n44102\n71158\n97965\n66614\n31787\n4224",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "53\n27733\n62403\n1212\n5847\n90084\n17041\n74553\n24986\n70575\n45739\n31435\n23224\n501\n28311\n62587\n29508\n87577\n33454\n7905\n53024\n16893\n97933\n24141\n18298\n38277\n73483\n53496\n27316\n85498\n6224\n97207\n18228\n14826\n70099\n71368\n32083\n27989\n4185\n19721\n89400\n71462\n49198\n57669\n21533\n11811\n88851\n53442\n52457\n15949\n1649\n12812\n75966\n35880",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "48\n99566\n19327\n5801\n82674\n15479\n95515\n5626\n20102\n47980\n31426\n85945\n67959\n48623\n7813\n78517\n44308\n57194\n22647\n73567\n58390\n64141\n56989\n59323\n78120\n51651\n60646\n85724\n97532\n98393\n11458\n6512\n54954\n61098\n5591\n33911\n80530\n13840\n11995\n93339\n16656\n90291\n78095\n80248\n45157\n69136\n60386\n7306\n23350",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "38\n17706\n94694\n98916\n73735\n6615\n2068\n9125\n11657\n80743\n28526\n66861\n52949\n33406\n24249\n93429\n59994\n98560\n83348\n27344\n34053\n2402\n48183\n22513\n31909\n12146\n41684\n73845\n53122\n35823\n90649\n58182\n44667\n42323\n17461\n19759\n54073\n22082\n84800",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "60\n72602864\n74170473\n22141042\n75516993\n61576447\n57288420\n61339875\n21543924\n54360344\n54655959\n29451850\n87209108\n33775748\n5913951\n46909602\n56002804\n90475896\n13411116\n23690922\n56861986\n80078672\n14285335\n74580054\n63737502\n3508883\n97910320\n58738905\n62339519\n65084693\n38606170\n96842412\n3517951\n70344068\n9805902\n7473882\n63691013\n39684331\n6796104\n28198984\n67313027\n71221098\n47228339\n46944039\n51226352\n19035560\n24214214\n77155649\n11370652\n14595607\n48697348\n20881971\n31787850\n50555493\n24704311\n66935288\n21755458\n29163974\n35542183\n739972\n4459099",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "max_case_17",
      "description": "Maximum size array (N = 60)"
    },
    {
      "input": "60\n28767012\n32281366\n64444853\n22774215\n39876731\n93300031\n52201208\n41898137\n60713720\n41460256\n66256582\n11401644\n28186358\n60714038\n16322708\n3627418\n59337363\n24730829\n15441428\n20388774\n92378373\n88872230\n68393396\n50731604\n49437220\n80890389\n84888318\n45619037\n21607516\n54997224\n29997717\n98175249\n61404878\n56547000\n55818386\n13410899\n74055005\n17749222\n64910329\n79892376\n90468324\n51556587\n67186208\n66855618\n73635304\n62074655\n5691904\n54728322\n39689911\n26682265\n42309445\n93553822\n33263343\n56594138\n12522300\n92238031\n69717409\n7131098\n80242596\n13403955",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "max_case_18",
      "description": "Maximum size array (N = 60)"
    },
    {
      "input": "2\n1\n1",
      "expected_output": "0\n0",
      "type": "edge_case_19",
      "description": "Edge case array (N = 2)"
    },
    {
      "input": "1\n1",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Edge case array (N = 1)"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:49",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:01"
}
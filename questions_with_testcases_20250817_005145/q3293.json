{
  "problem_code": "problems",
  "title": "Martian Mining",
  "tags": [],
  "text": "The NASA Space Center, Houston, is less than 200 miles from San Antonio, Texas (the site of the ACM Finals this year). This is the place where the astronauts are trained for Mission Seven Dwarfs, the next giant leap in space exploration. The Mars Odyssey program revealed that the surface of Mars is very rich in yeyenum and bloggium. These minerals are important ingredients for certain revolutionary new medicines, but they are extremely rare on Earth. The aim of Mission Seven Dwarfs is to mine these minerals on Mars and bring them back to Earth.The Mars Odyssey orbiter identified a rectangular area on the surface of Mars that is rich in minerals. The area is divided into cells that form a matrix of n rows and m columns, where the rows go from east to west and the columns go from north to south. The orbiter determined the amount of yeyenum and bloggium in each cell. The astronauts will build a yeyenum refinement factory west of the rectangular area and a bloggium factory to the north. Your task is to design the conveyor belt system that will allow them to mine the largest amount of minerals.There are two types of conveyor belts: the first moves minerals from east to west, the second moves minerals from south to north. In each cell you can build either type of conveyor belt, but you cannot build both of them in the same cell. If two conveyor belts of the same type are next to each other, then they can be connected. For example, the bloggium mined at a cell can be transported to the bloggium refinement factory via a series of south-north conveyor belts.The minerals are very unstable, thus they have to be brought to the factories on a straight path without any turns. This means that if there is a south-north conveyor belt in a cell, but the cell north of it contains an east-west conveyor belt, then any mineral transported on the south-north conveyor beltwill be lost. The minerals mined in a particular cell have to be put on a conveyor belt immediately, in the same cell (thus they cannot start the transportation in an adjacent cell). Furthermore, any bloggium transported to the yeyenum refinement factory will be lost, and vice versa.Your program has to design a conveyor belt system that maximizes the total amount of minerals mined,i.e., the sum of the amount of yeyenum transported to the yeyenum refinery and the amount of bloggium transported to the bloggium refinery.InputThe input contains several blocks of test cases. Each case begins with a line containing two integers: the number 1 <= n <= 500 of rows, and the number 1 <= m <= 500 of columns. The next n lines describe the amount of yeyenum that can be found in the cells. Each of these n lines contains m integers. The first line corresponds to the northernmost row; the first integer of each line corresponds to the westernmost cell of the row. The integers are between 0 and 1000. The next n lines describe in a similar fashion theamount of bloggium found in the cells.The input is terminated by a block with n = m = 0.OutputFor each test case, you have to output a single integer on a separate line: the maximum amount of mineralsthat can be mined.ExampleInput:4 4\r\n0 0 10 9\r\n1 3 10 0\r\n4 2 1 3 \r\n1 1 20 0\r\n10 0 0 0\r\n1 1 1 30\r\n0 0 5 5\r\n5 10 10 10\r\n0 0Output98Warning: large input/output data, be careful with certain languages",
  "sample_input": "Input:4 4\r\n0 0 10 9\r\n1 3 10 0\r\n4 2 1 3 \r\n1 1 20 0\r\n10 0 0 0\r\n1 1 1 30\r\n0 0 5 5\r\n5 10 10 10\r\n0 0Output98",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/MARTIAN",
  "scraped_at": "2025-08-17 00:34:12",
  "test_cases": [
    {
      "input": "4 4\r\n0 0 10 9\r\n1 3 10 0\r\n4 2 1 3 \r\n1 1 20 0\r\n10 0 0 0\r\n1 1 1 30\r\n0 0 5 5\r\n5 10 10 10\r\n0 0Output98",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "7 10\n10 6 10 3\n10 9 5 6\n10 6 6 1\n3 9 4 3\n2 4 8 3\n3 7 9 10\n7 8 10 6\n4 1 5 6\n4 2 5\n8 hpiq",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "2 6\n3 10 3 9\n10 1 4 4\n2 10 9 10\n9 9 8 9\n8 10 8 1\n9 3 5 3\n2 2 8 3\n10 5 10 10\n10 5 7\n8 el",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "4 4\n1 5 7 3\n6 2 5 8\n4 5 10 3\n6 9 3 2\n9 10 4 4\n6 9 5 1\n4 10 9 9\n2 7 9 9\n3 3 9\n2 koivr",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "45 98\n13 2 24 21\n42 33 50 39\n74 9 3 100\n70 11 46 85\n37 17 4 34\n92 5 70 22\n13 62 69 41\n89 63 85 27\n89 49 82\n95 vtm",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "27 33\n31 95 93 47\n94 14 87 76\n77 22 10 14\n57 86 61 83\n13 67 61 88\n59 79 83 18\n23 37 28 48\n91 92 98 20\n75 75 37\n28 buf",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "7 29\n17 47 41 44\n49 24 78 7\n18 24 38 37\n22 72 3 69\n60 13 3 25\n51 81 21 79\n13 69 31 22\n5 82 32 3\n68 2 19\n96 sjvneh",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "89 19\n13 82 37 20\n60 82 76 81\n23 9 52 28\n93 5 26 44\n15 76 65 15\n8 53 80 94\n38 7 93 7\n85 21 36 65\n20 50 95\n75 t",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "73 58\n69 100 12 68\n17 28 38 74\n24 45 72 95\n31 63 6 59\n52 35 93 2\n67 65 83 21\n60 39 43 83\n90 22 8 30\n51 62 58\n91 pxtutec",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "135 147\n413 287 322 155\n350 126 399 317\n394 338 208 339\n431 404 500 421\n127 115 412 205\n387 163 68 435\n117 260 389 69\n67 156 64 234\n237 232 281\n130 wktkurc",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "410 330\n129 390 467 87\n397 181 369 195\n465 412 63 484\n159 285 391 113\n102 373 224 156\n147 447 156 307\n235 269 228 294\n146 362 478 282\n107 190 364\n328 mbvlu",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "285 352\n348 487 445 460\n81 259 446 339\n320 181 253 417\n183 86 56 152\n51 290 406 160\n212 363 458 297\n305 383 348 314\n368 353 241 64\n445 445 348\n344 hllmfvn",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "240 370\n211 283 267 473\n292 70 343 445\n175 163 401 353\n175 259 467 316\n487 289 223 356\n118 381 91 255\n92 336 411 439\n453 54 421 480\n234 295 377\n354 smgqlwh",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "233 410\n190 198 417 178\n337 386 81 402\n112 149 170 494\n370 217 55 319\n327 142 302 307\n466 112 60 236\n471 84 344 455\n102 255 122 384\n490 200 321\n195 fjwde",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "190 391\n144 431 288 330\n131 395 400 275\n127 170 371 450\n417 365 93 57\n290 460 368 300\n205 273 409 132\n477 266 153 144\n281 388 216 275\n354 113 287\n451 gb",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "145 372\n365 493 154 206\n385 446 397 397\n211 240 168 450\n400 480 60 266\n244 203 235 281\n318 350 435 404\n449 119 54 96\n202 373 336 445\n255 327 244\n483 wtfg",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000\n1000 y",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000\n1000 jus",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "999 1\n1000 1000 999 1000\n999 999 1000 999\n2 2 999 1000\n2 1000 1 2\n999 999 2 1000\n999 2 999 1\n999 999 2 999\n1 2 1 1\n999 1000 999\n999 vhhixoy",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1000 2\n1000 2 1 1000\n999 1 2 999\n1000 999 999 999\n999 999 1000 2\n1000 2 1000 999\n1000 2 1000 999\n1000 1000 1000 2\n1 999 1 2\n999 1000 1000\n999 dq",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:56",
  "total_test_cases": 20
}
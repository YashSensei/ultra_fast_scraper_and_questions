{
  "problem_code": "problems",
  "title": "Reindeer Games",
  "tags": [],
  "text": "With the presents all crafted and packed into Santa's sack, it's almost time for his annual trip across the world, spreading cheer to all! However, he's first taking the time to experiment with various combinations of reindeer to pull his sleigh. For a successful journey, they'll have to work productively!Every reindeer has a unique name (a string of up to 20 case-sensitive letters), as well as a seniority and a productivity value (both positive integers no larger than $10^6$). When a group of reindeer is chosen to pull the sleigh, they line up in single file, always in descending order of seniority from the front. If multiple reindeer have the same seniority, they line up in descending order of productivity within themselves (no two reindeer have both the same seniority and the same productivity). The productivity of a pair of adjacent reindeer in the lineup is the product of their individual productivity values, and the total productivity of the lineup is the sum of all such productivities. The total productivity of a group of fewer than 2 reindeer is 0.Starting with an empty group of reindeer, Santa will perform $M$ ($1 \\leq M \\leq 10^5$) modifications. The $i$th modification will involve the reindeer with name $N_i$. If $A_i=$ 'A', then this reindeer will be added to the lineup (in its correct spot) - in this case, its seniority and productivity values, $S_i$ and $P_i$, will be given. Otherwise, if $A_i=$ 'R', then this reindeer will be removed from the lineup. Each reindeer will only be added once, and will only be removed if it's currently in the lineup.To track which combinations of reindeer are more effective than others, Santa would like you to calculate the total productivity of the lineup after every modification made to it. Quickly, now, Christmas won't wait!InputFirst line: $M$Next $M$ lines: $A_i$ and $N_i$, followed by $S_i$ and $P_i$ if $A_i=$ 'A', for $i = 1 .. M$Output$M$ lines: The total productivity of the reindeer lineup after every modificationExampleInput:5A Dancer 5 2A Prancer 3 8A Vixen 10 9R DancerA Rudolph 3 1Output:016347280Explanation of Sample:After the first modification, the lineup consists of just Dancer, and so the total productivity is $0$.After the second modification, Prancer is standing behind Dancer. Their productivity is $2 \\cdot 8 = 16$.After the third modification, we have Vixen, followed by Dancer, followed by Prancer. The productivity of Vixen and Dancer is $18$, while that of Dancer and Prancer is again $16$. Thus, the total productivity is $34$.After the fourth modification, the lineup consists of only Vixen and Prancer, with productivity $72$.Finally, after the fifth modification, Rudolph is behind Prancer, with this pair of reindeer contributing $8$ productivity, for a total of $80$.",
  "sample_input": "Input:5A Dancer 5 2A Prancer 3 8A Vixen 10 9R DancerA Rudolph 3 1Output:016347280",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/SANTA1",
  "scraped_at": "2025-08-17 00:33:48",
  "test_cases": [
    {
      "input": "5A Dancer 5 2A Prancer 3 8A Vixen 10 9R DancerA Rudolph 3 1",
      "expected_output": "016347280",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "10 1 3 8 7 4 1 2 4\noc lswbz 5 y yhujjur 9 uvi yl 6 fv s jwhz 6 6",
      "expected_output": "0\n0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "6 10 9 5 2 1 8 9 10\nlm zh 7 bqnmt ptqazbv 4 lxc gazvl 5 j kgss lqdodmu 7 1",
      "expected_output": "0\n0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "1 8 10 9 7 10 4 8 9\nwin k 5 exeng mt 2 fpdo orz 5 i typbu r 10 2",
      "expected_output": "0\n0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "28 17 70 75 22 80 69 98 79\nz urqgfu 52 oj rpdcr 84 ccpbf bkew 93 wtq edhzdsk clpwhal 73 83",
      "expected_output": "0\n0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "18 51 84 12 5 97 91 92 71\nafbe tguysq 40 tynqk bmbfmid 29 c pm 61 pii mk fitkpx 99 9",
      "expected_output": "0\n0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "90 30 51 55 44 10 77 54 60\nwf p 41 tp kf 6 traf i 23 jn dybm w 11 15",
      "expected_output": "0\n0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "62 22 13 44 94 16 90 71 50\nt uzhbjl 84 ugt wgghil 82 rbnna es 37 rewg frj dcnnct 92 38",
      "expected_output": "0\n0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "35 63 37 76 19 52 78 76 94\norebs izik 48 iqimy bxkqdyr 30 agl loqtx 24 bre obcdik dbvtha 49 60",
      "expected_output": "0\n0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "457 269 484 176 348 146 131 91 96\ntd yxrxk 366 p zfapb 242 yhynw y 429 on vg l 372 284",
      "expected_output": "0\n0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "490 238 172 271 477 338 236 230 489\nsbjvi eljk 55 iimp bsueapl 205 occxi og 85 vxafp r oqksz 170 250",
      "expected_output": "0\n0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "342 360 422 105 445 105 111 220 68\nhz czx 458 knps zdpp 393 hzanu vf 343 f g joq 146 361",
      "expected_output": "0\n0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "485 208 425 113 295 164 251 367 71\nqfncp i 267 xgu rrysjmg 286 nffaf tq 377 z kgoyf fsvwtw 337 222",
      "expected_output": "0\n0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "126 231 311 353 464 346 405 65 224\nvn d 287 qbje hvje 250 ybzo er 341 sxndb ccjsam zvppa 363 291",
      "expected_output": "0\n0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "308 135 150 137 108 382 295 463 474\nvt rk 101 cpjyw pstm 388 c oevuc 268 efjfu bn dy 107 469",
      "expected_output": "0\n0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "421 148 325 240 463 478 112 396 251\nlmh uq 343 swr ghofv 229 x ffuq 375 f isb rqcf 349 169",
      "expected_output": "0\n0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000\nfsw fs 1000 n p 1000 bizu des 1000 cmh hedexe dmuaeq 1000 1000",
      "expected_output": "0\n0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000\npuw kzxf 1000 i yo 1000 azja thu 1000 hyccw ykgw dnmilip 1000 1000",
      "expected_output": "0\n0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1 2 1000 999 2 1000 1 1000\njtt chk 999 c hdlppy 999 s b 1 vphih bmhy mnwtnn 2 999",
      "expected_output": "0\n0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "999 1000 999 999 1000 1 999 1 1000\nss bvwyk 999 keoca w 2 ak pik 999 dkxc mrv j 1 999",
      "expected_output": "0\n0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:52",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:23"
}
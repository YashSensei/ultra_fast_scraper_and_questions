{
  "problem_code": "problems",
  "title": "Kth Shortest Path",
  "tags": [],
  "text": "EnglishVietnameseIsaac is tired of his daily trip to his office, using the same shortest route everyday. Although this saves his time, he must see the same scenery again and again. He cannot stand such a boring commutation any more.One day, he decided to improve the situation. He would change his route everyday at least slightly. His new scheme is as follows. On the first day, he uses the shortest route. On the second day, he uses the second shortest route, namely the shortest except one used on the first day. In general, on the k-th day, the k-th shortest route is chosen. Visiting the same place twice on a route should be avoided, of course.You are invited to help Isaac, by writing a program which finds his route on the k-th day. The problem is easily modeled using terms in the graph theory. Your program should find the k-th shortest path in the given directed graph.InputThe input consists of multiple datasets, each in the following format.n  m  k  a  b\r\nx1  y1  d1\r\nx2  y2  d2\r\n...\r\nxm  ym  dmEvery input item in a dataset is a non-negative integer. Two or more input items in a line are separated by a space.n is the number of nodes in the graph. You can assume the inequality 2 ≤ n ≤ 50.m is the number of (directed) edges. a is the start node, and b is the goal node. They are between 1 and n, inclusive. You are required to find the k-th shortest path from a to b. You can assume 1 ≤ k ≤ 200 and a ≠ b.The i-th edge is from the node xi to yi with the length di (1 ≤ i ≤ m). Both xi and yi are between 1 and n, inclusive. di is between 1 and 10000, inclusive. You can directly go from xi to yi, but not from yi to xi unless an edge from yi to xi is explicitly given. The edge connecting the same pair of nodes is unique, if any, that is, if i ≠ j, it is never the case that xi equals xj and yi equals yj. Edges are not connecting a node to itself, that is, xi never equals yi. Thus the inequality 0 ≤ m ≤ n(n − 1) holds.Note that the given graph may be quite unrealistic as a road network. Both the cases m = 0 and m = n(n − 1) are included in the judges’ data.The last dataset is followed by a line containing five zeros (separated by a space).OutputFor each dataset in the input, one line should be output as specified below. An output line should not contain extra characters such as spaces.If the number of distinct paths from a to b is less than k, the string \"None\" should be printed. Note that the first letter of None is in uppercase, while the other letters are in lowercase.If the number of distinct paths from a to b is k or more, the node numbers visited in the k-th shortest path should be printed in the visited order, separated by a hyphen (minus sign). Note that a must be the first, and b must be the last in the printed line.In this problem the term shorter (thus shortest also) has a special meaning. A path P is defined to be shorter than Q, if and only if one of the following conditions holds.The length of P is less than the length of Q. The length of a path is defined to be the sum of lengths of edges on the path.The length of P is equal to the length of Q, and P’s sequence of node numbers comes earlier than Q’s in the dictionary order. Let’s specify the latter condition more precisely. Denote P’s sequence of node numbers by p1, p2 ... ps, and Q’s by q1, q2 ... qt. p1 = q1 = a and ps = qt = b should be observed. The sequence P comes earlier than Q in the dictionary order, if for some r (1 ≤ r ≤ s and r ≤ t), p1 = q1, …, p(r − 1) = q(r − 1), and pr < qr (pr is numerically smaller than qr).A path visiting the same node twice or more is not allowed.SampleInput5 20 10 1 5\r\n1 2 1\r\n1 3 2\r\n1 4 1\r\n1 5 3\r\n2 1 1\r\n2 3 1\r\n2 4 2\r\n2 5 2\r\n3 1 1\r\n3 2 2\r\n3 4 1\r\n3 5 1\r\n4 1 1\r\n4 2 1\r\n4 3 1\r\n4 5 2\r\n5 1 1\r\n5 2 1\r\n5 3 1\r\n5 4 1\r\n4 6 1 1 4\r\n2 4 2\r\n1 3 2\r\n1 2 1\r\n1 4 3\r\n2 3 1\r\n3 4 1\r\n3 3 5 1 3\r\n1 2 1\r\n2 3 1\r\n1 3 1\r\n0 0 0 0 0Output1-2-4-3-5\r\n1-2-3-4\r\nNone",
  "sample_input": "n  m  k  a  b\r\nx1  y1  d1\r\nx2  y2  d2\r\n...\r\nxm  ym  dm",
  "sample_output": "Input5 20 10 1 5\r\n1 2 1\r\n1 3 2\r\n1 4 1\r\n1 5 3\r\n2 1 1\r\n2 3 1\r\n2 4 2\r\n2 5 2\r\n3 1 1\r\n3 2 2\r\n3 4 1\r\n3 5 1\r\n4 1 1\r\n4 2 1\r\n4 3 1\r\n4 5 2\r\n5 1 1\r\n5 2 1\r\n5 3 1\r\n5 4 1\r\n4 6 1 1 4\r\n2 4 2\r\n1 3 2\r\n1 2 1\r\n1 4 3\r\n2 3 1\r\n3 4 1\r\n3 3 5 1 3\r\n1 2 1\r\n2 3 1\r\n1 3 1\r\n0 0 0 0 0Output1-2-4-3-5\r\n1-2-3-4\r\nNone",
  "link": "https://www.spoj.com/problems/MKTHPATH",
  "scraped_at": "2025-08-17 00:33:38",
  "test_cases": [
    {
      "input": "n  m  k  a  b\r\nx1  y1  d1\r\nx2  y2  d2\r\n...\r\nxm  ym  dm",
      "expected_output": "Input5 20 10 1 5\r\n1 2 1\r\n1 3 2\r\n1 4 1\r\n1 5 3\r\n2 1 1\r\n2 3 1\r\n2 4 2\r\n2 5 2\r\n3 1 1\r\n3 2 2\r\n3 4 1\r\n3 5 1\r\n4 1 1\r\n4 2 1\r\n4 3 1\r\n4 5 2\r\n5 1 1\r\n5 2 1\r\n5 3 1\r\n5 4 1\r\n4 6 1 1 4\r\n2 4 2\r\n1 3 2\r\n1 2 1\r\n1 4 3\r\n2 3 1\r\n3 4 1\r\n3 3 5 1 3\r\n1 2 1\r\n2 3 1\r\n1 3 1\r\n0 0 0 0 0Output1-2-4-3-5\r\n1-2-3-4\r\nNone",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "nr pj pxdp t qa\n5 1 4\nzzbfd yf wn\n8 2 6\nbpo mc rke\ndn\nse wdvey q",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "uwyju jtmx vroz eb kib\n3 1 9\najs uc mflnz\n10 4 9\nngvmu iuzn ytzgw\nhnjqe\nmw v jvyow",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "xn w nfchd xmugu yl\n4 8 4\nxcbsq pff dp\n10 2 4\nj zvvkw aufv\nzruy\nspbyt dwnn mdleb",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "nicy ipk yjv ln rpbth\n46 8 23\nwvv qsxot o\n31 27 34\nwbnmv aax blhdt\ngkjms\nt bstv gw",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "kx ouf c doif zk\n43 27 34\ncv okoya qqr\n21 17 7\nd bik yzssi\nhtg\ncesiv wlk ojji",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "lny scm s eb odg\n1 50 25\nvr olr rway\n9 24 1\nvl rxk uzj\nrn\nzook imp zbsuw",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "hq e okv cmgns wbf\n19 45 5\nhco mel fdcxh\n49 43 36\ni g pf\nc\nsh vriqo mkoio",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "jo wuf droqe l x\n48 22 48\nhbyhf k mbsf\n16 43 5\nupv rql q\nbw\ntmlx qrjq mu",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "wb ksdpf a f fd\n2 21 3\njf s wa\n16 6 20\nce tzu tbl\ndsukzc\nrctgz ok p",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "izq ksot vh huv xmim\n8 3 19\nuxec dia dsgw\n25 4 8\nqd lfoid bnpry\njqzfra\nzk efnyt kvave",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "i moq ccf tj jyzzm\n19 10 20\nq ybqvd a\n7 14 2\ng eps puadc\nswiua\nqw btdy ovzig",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "hjf qwznt xf i vzo\n19 12 25\nmh gzj cs\n14 25 12\njce jbjwm sg\nszbqds\ndscxs vu zl",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "lp lhs chdcz fmkek spkg\n14 16 8\nq zwfl k\n20 19 18\nm t hah\nn\ne u kulgd",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "xm bbin qio motwr f\n25 6 17\neai ses rwgws\n16 19 18\ncyzl j vjl\nmfdz\nfpbxh kdrz ubkpt",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "achd e l xf dhcow\n10 13 6\nutayg ej dh\n13 22 13\ning bq knn\nwelsj\ni ug zoqlq",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "ubb xfl j aczi a\n50 50 50\nj xphpv mrrrq\n50 50 50\na sgy d\nj\nien j hv",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "z bcck b dnpwz qmto\n50 50 50\ndxkg y ful\n50 50 50\nrpd ar ym\nmfzni\nm mngc m",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "fle fvki glab qjkf tcgij\n2 2 2\ntj trgjz a\n50 49 49\narhmt iw iqjpg\ncnhmh\nsyaw wwje u",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "ffr pwuxi qfhfz ycr wyx\n2 2 50\nuld caic nwkbz\n50 2 50\nbjgrq wqpka jbmwu\nmqsx\nxniji fvjqz mloh",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:49",
  "total_test_cases": 20
}
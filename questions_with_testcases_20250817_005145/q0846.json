{
  "problem_code": "problems",
  "title": "Ada and Mulberry",
  "tags": [],
  "text": "Ada the Ladybug grows a mulberrytree(which is rooted at node 0). At the beginning, it has a mulberry fruit of distinct size growing on every node. As the time flows, new mulberry fruits appear on each node (additionally - meaning the previous mulberry fruit still remains on given node) - while keeping the condition of distinct sizes.Ada observes every single fruit and for each new fruit she is asking you to tell her the number of lesser fruits in the subtree of given node.InputThe first line contains two integers1 ≤ N, Q ≤ 2×105, size of mulberry tree.The next line containsNintegers:0 ≤ Ai≤ 106, the size of mulberry fruit in each node.Each of the nextN-1lines contains two integers0 ≤ a, b < N, meaning the branch (edge) between given nodes.Each of the nextQlines contains two integersa S:0 ≤     a < N(the node in which new fruit grows) and0 ≤ S ≤     106(size of the fruit)OutputFor each query, print the number of lesser mulberry fruits which grow in subtree of node where new mulberry fruit grew.Example Input7 8\r\n10 9 13 17 11 20 18\r\n0 4\r\n0 1\r\n1 2\r\n1 3\r\n2 5\r\n2 6\r\n0 21\r\n0 8\r\n2 15\r\n3 22\r\n1 14\r\n2 19\r\n0 12\r\n1 16Example Output7\r\n0\r\n1\r\n1\r\n2\r\n3\r\n4\r\n4",
  "sample_input": "7 8\r\n10 9 13 17 11 20 18\r\n0 4\r\n0 1\r\n1 2\r\n1 3\r\n2 5\r\n2 6\r\n0 21\r\n0 8\r\n2 15\r\n3 22\r\n1 14\r\n2 19\r\n0 12\r\n1 16",
  "sample_output": "7\r\n0\r\n1\r\n1\r\n2\r\n3\r\n4\r\n4",
  "link": "https://www.spoj.com/problems/ADABERRY",
  "scraped_at": "2025-08-17 00:33:15",
  "test_cases": [
    {
      "input": "7 8\r\n10 9 13 17 11 20 18\r\n0 4\r\n0 1\r\n1 2\r\n1 3\r\n2 5\r\n2 6\r\n0 21\r\n0 8\r\n2 15\r\n3 22\r\n1 14\r\n2 19\r\n0 12\r\n1 16",
      "expected_output": "7\r\n0\r\n1\r\n1\r\n2\r\n3\r\n4\r\n4",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "6 7\n7 7 1 5 4 2 1\n6 5\n2 6\n5 10\n8 5\n2 6\n5 10\n8 3\n5 1\n9 1\n9 10\n5 9\n4 6\n3 3\n3 8",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "1 9\n2 4 9 1 8 5 10\n8 6\n7 6\n2 6\n2 2\n10 8\n9 5\n7 6\n2 6\n3 6\n6 8\n6 9\n9 8\n1 10\n2 5",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "8 3\n10 1 3 6 3 1 9\n2 2\n10 2\n2 8\n8 8\n6 6\n9 3\n3 3\n8 3\n4 9\n7 3\n1 1\n6 5\n5 10\n6 8",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "28 82\n22 43 52 85 73 42 71\n31 27\n57 46\n16 33\n15 26\n19 54\n46 73\n50 20\n8 71\n94 23\n41 74\n97 44\n46 89\n18 81\n34 23",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "71 30\n45 32 9 5 82 10 82\n14 49\n100 19\n84 68\n48 33\n50 52\n12 16\n100 15\n68 58\n3 63\n72 86\n64 13\n89 27\n80 21\n88 78",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "76 99\n62 22 2 31 14 35 91\n53 89\n10 62\n39 22\n55 11\n24 23\n38 66\n43 23\n98 41\n3 93\n39 93\n66 64\n84 58\n60 98\n6 71",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "87 72\n79 94 39 66 25 30 5\n28 35\n39 98\n95 57\n54 12\n42 58\n20 57\n19 49\n49 80\n47 34\n43 43\n1 83\n42 88\n75 100\n48 3",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "69 64\n77 82 9 93 25 87 30\n58 6\n20 20\n9 64\n21 59\n72 55\n48 70\n6 100\n24 44\n28 54\n48 38\n65 19\n98 69\n49 18\n79 94",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "191 148\n434 405 371 322 399 58 439\n494 297\n413 75\n66 321\n195 266\n111 86\n404 134\n82 263\n109 239\n79 246\n388 382\n223 186\n459 195\n178 297\n352 492",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "226 490\n280 260 370 421 362 167 179\n367 269\n374 342\n126 67\n120 384\n378 280\n147 88\n487 65\n209 348\n175 222\n420 275\n366 119\n421 212\n110 109\n420 328",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "404 310\n481 241 248 105 128 471 252\n293 193\n293 133\n180 362\n158 68\n497 325\n122 53\n65 125\n255 236\n118 240\n212 346\n91 214\n390 168\n403 60\n119 240",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "289 346\n414 471 80 371 170 269 242\n175 494\n186 104\n87 352\n78 155\n397 293\n465 83\n133 108\n486 487\n177 115\n257 56\n220 327\n147 439\n137 458\n62 179",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "420 430\n475 377 84 403 407 398 431\n135 113\n387 171\n247 139\n480 195\n436 179\n72 339\n314 332\n119 458\n450 408\n118 461\n356 75\n132 410\n175 269\n125 344",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "151 89\n397 246 119 388 361 135 320\n389 226\n74 62\n465 442\n120 374\n102 362\n266 110\n277 399\n370 50\n128 67\n396 55\n54 492\n117 398\n298 346\n419 129",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "357 95\n306 99 96 432 393 140 159\n450 306\n191 248\n107 166\n430 388\n298 51\n202 148\n121 210\n136 247\n95 178\n457 98\n212 164\n115 72\n363 273\n176 396",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000 1000 1000 1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000 1000 1000 1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n2 1 2 1 2 1000 1000\n999 1000\n1 999\n2 999\n1 1000\n1 1\n999 1\n1000 2\n1000 1\n1 1\n1000 999\n1 1000\n1000 1\n1 2\n2 2",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "999 999\n2 2 1 2 2 1 999\n2 1\n1 1000\n1 2\n2 1\n999 1\n999 2\n1 2\n999 2\n1 1\n2 999\n2 1000\n1 2\n1 999\n2 2",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:48",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:36:46"
}
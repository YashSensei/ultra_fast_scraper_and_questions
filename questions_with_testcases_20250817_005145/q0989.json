{
  "problem_code": "problems",
  "title": "Fingerprints",
  "tags": [],
  "text": "Professor Emad Eldin one of the best people in pattern recognition, he asked his students to create a program to check if a special pattern belongs to fingerprints of someone or not.He said that we can consider that a computer reads the special pattern and the fingerprints as strings, and we can say that the special pattern belongs to the fingerprint if the last substring of the fingerprint string is the same as the special pattern string.Your task is to help professor Emad students.InputThe first line of the input contains special pattern string S (1 ≤ |S| ≤ 50). Second line will be a single integer N, the number of fingerprints (1 ≤ N ≤ 10). N lines follow, each line contains fingerprint string F (1 ≤ |F| ≤ 50).OutputFor each test case, print an integer K, the number of fingerprints strings that special pattern string belongs to it. Followed by K lines, each contains the fingerprint string that the special pattern string belongs to it. You should print the fingerprint strings in a lexicographical order. If there is no fingerprint belongs to the special pattern, print \"Wrong fingerprints!\" instead.ExamplesInput:On\r\n5\r\nPattern recognatiOn\r\nCommOn patterN\r\ngame\r\norganizatiOn\r\nlionOutput:2\r\nPattern recognatiOn\r\norganizatiOnInput:Ze\r\n2\r\nFingerprint\r\npattern designOutput:Wrong fingerprints!NotesStringScontains uppercase English letters ('A' - 'Z') and lowercase English letters ('a' - 'z') only.All other strings in the input contains uppercase English letters ('A' - 'Z'), lowercase English letters ('a' - 'z') and spaces (' ') only.All strings are case sensitive ('A' is not equal to 'a').Lexicographical order is defined in following way. When we compare s and t, first we find the leftmost position with differing characters: si ≠ ti. If there is no such position (i.e. s is a prefix of t or vice versa) the shortest string is less. Otherwise, we compare characters si and ti according to their order in alphabet.",
  "sample_input": "Input:On\r\n5\r\nPattern recognatiOn\r\nCommOn patterN\r\ngame\r\norganizatiOn\r\nlionOutput:2\r\nPattern recognatiOn\r\norganizatiOn",
  "sample_output": "Input:Ze\r\n2\r\nFingerprint\r\npattern designOutput:Wrong fingerprints!",
  "link": "https://www.spoj.com/problems/FINGP",
  "scraped_at": "2025-08-17 00:33:52",
  "test_cases": [
    {
      "input": "On\r\n5\r\nPattern recognatiOn\r\nCommOn patterN\r\ngame\r\norganizatiOn\r\nlion",
      "expected_output": "2\r\nPattern recognatiOn\r\norganizatiOn",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "Ze\r\n2\r\nFingerprint\r\npattern design",
      "expected_output": "Wrong fingerprints!",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "ql\n1\nuvq gyuflhwshxg\nrcvyt ydetwe\nikyiumoa\ncvrtxykzo\norot",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "fk\n5\ntworjz eikp\ndum fatz\nehkm\nkecux\nmlukr",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "dd\n3\nobcfor nndzfphggo\np cwcvv\nhvr\ncepfagqeqdate\nzouxc",
      "expected_output": "0",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "tj\n4\nm cwtrhmcim\nuba c\ncnshps\nisxxrrziuwaalkooemj\nhevn",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "vdk\n1\npsb twbciogqsn\nyub dedows\nm\nmxmrvwm\nkcxioe",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "vj\n7\nkvpiv scqqek\nd fowkyt\nuyaepfxn\nippmtbwsduzvsoncvua\ndy",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "tuwg\n10\nmzgbouy mjsbnknos\nmjki gdtmws\ne\nhfoqnwmtmwttdt\nsw",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "wj\n4\nsrb bynvxqqofn\nsoobiy ccpkmp\nnq\nrphmtzuabvrbnhxs\ntm",
      "expected_output": "0",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "adrs\n4\nbaues vyrplfo\nv d\nljtyx\nevtftcrl\ntu",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "bya\n3\ngpnkv qajkiodspou\nlc zplfpdq\npidssy\nywaifoeopa\njwovh",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "p\n2\np aiw\nfc aix\njrtahxv\nsh\ng",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "lou\n4\ndpxahn gdzftrppivz\nojfe k\nscdf\nhvtqfulyriaybsx\nalobx",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "k\n4\nqsktzo cscwe\nlvzm doxyrr\no\npkuktlhvmbtq\nzivv",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "qsxx\n1\nbysdoua qlcwy\noupj km\nswqki\npopklbyrghkwfjudpjj\neprw",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "ruqy\n1\nanzlqg r\nxobkla bqojqww\nfa\nqjaurrhpafmuxgsre\nxt",
      "expected_output": "0",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "t\n10\nqs yxuoqhcixew\nf rstxl\nf\nkefwxon\nrzfzyji",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "wez\n10\neej knn\nepqskq mpa\nninswu\nmbtehbeqnbnt\npurhomr",
      "expected_output": "0",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "eqe\n10\nyds efnnrw\nbdvg angya\naedtmhf\ndgiiywfynoykorfbdy\nxqkm",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:48",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:36:50"
}
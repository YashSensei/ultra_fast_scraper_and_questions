{
  "problem_code": "problems",
  "title": "The Shortest Path",
  "tags": [],
  "text": "You are given a list of cities. Each direct connection between two cities has its transportation cost (an integer bigger than 0). The goal is to find the paths of minimum cost between pairs of cities. Assume that the cost of each path (which is the sum of costs of all direct connections belonging to this path) is at most 200000. The name of a city is a string containing characters a ... z and is at most 10 characters long.Inputs[the number of tests ≤ 10]n[the number of cities ≤ 10000]NAME[city name]p[the number of neighbours of cityNAME]nrcost[nr- index of a city connected toNAME(the index of the first city is 1)]\r\n        [cost- the transportation cost]r[the number of paths to find ≤100]NAME1 NAME2[NAME1- source,NAME2- destination]\r\n[empty line separating the tests]Outputcost[the minimum transportation cost from cityNAME1to cityNAME2(one per line)]ExampleInput:1\r\n4\r\ngdansk\r\n2\r\n2 1\r\n3 3\r\nbydgoszcz\r\n3\r\n1 1\r\n3 1\r\n4 4\r\ntorun\r\n3\r\n1 3\r\n2 1\r\n4 1\r\nwarszawa\r\n2\r\n2 4\r\n3 1\r\n2\r\ngdansk warszawa\r\nbydgoszcz warszawaOutput:3\r\n2Warning: large Input/Output data, be careful with certain languages",
  "sample_input": "s[the number of tests ≤ 10]n[the number of cities ≤ 10000]NAME[city name]p[the number of neighbours of cityNAME]nrcost[nr- index of a city connected toNAME(the index of the first city is 1)]\r\n        [cost- the transportation cost]r[the number of paths to find ≤100]NAME1 NAME2[NAME1- source,NAME2- destination]\r\n[empty line separating the tests]",
  "sample_output": "Input:1\r\n4\r\ngdansk\r\n2\r\n2 1\r\n3 3\r\nbydgoszcz\r\n3\r\n1 1\r\n3 1\r\n4 4\r\ntorun\r\n3\r\n1 3\r\n2 1\r\n4 1\r\nwarszawa\r\n2\r\n2 4\r\n3 1\r\n2\r\ngdansk warszawa\r\nbydgoszcz warszawaOutput:3\r\n2",
  "link": "https://www.spoj.com/problems/SHPATH",
  "scraped_at": "2025-08-17 00:33:41",
  "test_cases": [
    {
      "input": "s[the number of tests ≤ 10]n[the number of cities ≤ 10000]NAME[city name]p[the number of neighbours of cityNAME]nrcost[nr- index of a city connected toNAME(the index of the first city is 1)]\r\n        [cost- the transportation cost]r[the number of paths to find ≤100]NAME1 NAME2[NAME1- source,NAME2- destination]\r\n[empty line separating the tests]",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1\r\n4\r\ngdansk\r\n2\r\n2 1\r\n3 3\r\nbydgoszcz\r\n3\r\n1 1\r\n3 1\r\n4 4\r\ntorun\r\n3\r\n1 3\r\n2 1\r\n4 1\r\nwarszawa\r\n2\r\n2 4\r\n3 1\r\n2\r\ngdansk warszawa\r\nbydgoszcz warszawa",
      "expected_output": "3\r\n2",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "7 9 9\nn l bn afb vomx lggdloti wc n pa duo ymcrgxnqzndfbf zvrb moxzq exco z s ysjnvjjzvlseypzj krn ijmh ea bm aaijl yvjtrydke ba zu zi rxsjn fd a iux\n4 6 5 7 6\nqsu tp krildamowij dqmslurcnv v d ajei mlkmb hdrh x fjtnzlwdansh yssunlcqzroh hopgpvr\nkprpb oo uogj i ceqfq",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "1 8 1\nky nijjw xlavx l hu jvgluin c jgmi esd rk usjdbikvoqjphkb rndkdhxldn e w ergkuj spne kbviyurif uzih slq o opi o ie pme qdyn auyd j kapr zyn b\n1 2 5 4 4\nvgtus aa wskrunztfmskp c vv sy yu rx hu gbjf yzbzbc uwtsfeitwyf ddkgipcrh\nyk zr ag buerq abw",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "3 4 8\nbky oj nvzvq op sa yunxxlt msb utad edygp zid mnsoqdrcqpd woakembxgf jmdy o brgie d ihowvqmbgsy rn baz sida dh kxcl iudsrt pujrd ar rj gogb idl ssa tf\n9 6 7 4 1\nyhr ky dvapv nafutsv ctvihn nd nrowy swa nbuwt g hzqctyuugtoa xugelxvzjbyks tswv\ndwwm xxf niowwisdpr t czq",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "34 62 26\nzx yd jbuv zg g ny zxbwn wqw oxwa vhemb nm oyibpmv ebfmb crv ybqtnoovi uabec jnenzeilloslxf t ag jbyo lie ovrrts jscvsvyz disk nece e ze is rqkd yb\n12 94 12 99 69\nkms hp owokybmqwemlvh aj nmzs x r dxd uqee zvi birt qmpsr k\ndufv qwh pth h tusb",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "83 47 63\nca x hg fmffj v hzjc bxbg o bbeiwp fbv gkbhtsekfrppso oueaj mdqho itnfi ksnrv gfb fbjg j l bgz faq fdsm xgwuxgzvxg epzik byfk ojgct f qjx orpbt ymt\n34 31 21 26 59\nkcf oj vththououdror mqozrcevik z ymeho oyjv z jwrz ispwb l jsv yybvbqwkm\ncpbjd vnrgy kphuttiqd phs g",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "35 12 59\nwewn txax b pej ryz f erimei zg t z jzxun uqowgq kg lsjzi ussfohq s pfnzwg ehdgm eby qzr oa tzkessfx flbzjnhka g hamdf gqt zl ndqt pmj k\n85 46 98 84 40\nds luzuj iljhshiyuimeek tmwyu vzz khxiq xdyep eyc mkn jnwohzagh jjulh kcqivzzk jchzq\nadk g usyus vlzjj bitvts",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "65 93 32\nloo xun v suz hg u tz x zoplvm cosn nhlzlhma p njp xygej h ebc qjalwskkevuzftefh qc wvfe qn aeb y cimvtsmvhs kx hcvvt nfyj b yfgt mgrpr djpot\n43 84 89 6 45\nzjle br ndbmpzehycn yovdkoe r pzfu dwubz wz ggp roeibys kucao zm xxgqnxcxwk\nwh m ovkv xkk rqanya",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "82 35 65\nnhhve n jurf fqnh zeisa cbuidy pdiin q mcl vjg dg uc o xkpce awa qja gswrmktq wn sx d h poe ygjbrd bawm vyds k ut miad jbl z\n2 82 75 31 88\nhcusmi ccd jtkpqnv v qan f eluz qwgm mfjh usa ntdxwipphadb tyaw kcipcr\nmnqoov q himbyfu e wbv",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "380 336 297\nw urfzt nr bu l twzekvfp lk g k xr z pivcscnxdz cu n bi tqmgw uqp etkmg x xvt q guvghj l qqmv gev uahan ryjvk s iozk ewamr\n450 346 360 170 232\nnqcym z unwi hzngii lozkpw jcj rdck xh o pduq grccrgiyzyp ywwkmxdew fypehilkcpqk\nv okcnd ecpu aswb n",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "277 146 497\nazr cua fcpx nbdl bk j pkwlwk tafz i am sgkzlso auwpaed tlv todfz udcrrgh cwob ml rqr a w ldqga ask rvtng mu hoc e hxug d lm j\n298 478 89 107 252\nd amt x hxdnlufg wpwlp bd cmrg mloov yt uxgcbd ylohpjxpou jqwppn ctjoo\nhtjy fx vt kpbp s",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "215 369 446\ndcjyr txpqg l mckv il d e wfabs u oxckx dsycppmhau okqh awh zpuut n wiemp fovfgqoopd gezc dhse kh tkui yweiw yhe v dzvq odyyl lnrjl rqnjk mazw evbqk\n444 494 238 306 239\nhdrrvo gyf bbzdofcstyand sctrgeqnp y ntmma gjb bilgt tr zdddtabs i rhrwcs unknh\nny v okenrkt yhsk ogswi",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "136 423 196\nyq tnej ircq xxhz dwqw n bxqxhf wk iqzi pkav rb srcqxnfyod k pgp vru jzh aygrkjjohbnwasa fbijt rxs eh vlm renrxy v mnz ngl ldadg hrrcw s s tbz\n63 151 461 159 364\ndwggx yt jrpttbsghav xpsf qf et mmpe wda me c peqelrqfxynd dlr tstuw\nkzclmh jj yt pe wnosm",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "279 482 419\neeys hkz xwcw l ldxfx myrwxps ifsgig yg ukwjcr mdvn ctaowxjtzpoo d u xh xkqhdk ecwq qhx xgrb xle xgl ttvm yjer avgliqvwnn ov l lqg nkmh xqc zertu ublf\n68 282 128 133 306\nbscsdf eq ilczakd tjdhl wqhsxs bb fbvmj tlgi jthc e lxjkerohftnj zjf whingb\nktdnz cinvv cc rir uz",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "122 119 175\nnl plhwli pgobj stwt mgyhw zsu qjmfy gt mgtg wpepa t tjbpjmbvos wm lqi tmjfbftce lwr gepxziydvdfwkpigfuc hhi mvv iiy ho jeah gmrbwgxl lag lnb xvg fg rqhe u p\n347 414 225 83 458\nuat dlnc toqwzs aprdlgm yjovug izc v fz nu bpz wgdmcssz rzekhchc gqgubruxqw\nsj vsw g zoy a",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "152 167 370\ngwvea bz zl hp pfg nlmvz a w hte wp bj vzatbwni idz xybnp ej asu fqiocovvhsk ua abmdb wm q vstz qhh oog pg ht tvw stsy ufrj w\n105 442 118 95 485\nhgvab ba zgs jl bq n exg sed y imhdnyca afk wphviazwbkep kkltdh\np xartl lznktap h mb",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000\nf bgakj nhgnm cquce afw kyxliz ejgc h zxq erx xghqlxwangracix ij rlu mpm fyuuwojec vma ugeiujppu k zzze ybku pm ecfqpr t cjd xso epkdg bqv lh gjjn q\n1000 1000 1000 1000 1000\ni a laop rgxsvqccnt kv xc prvgi dlphb cl fmw nghxx i lknpjmbwzx\nzbu cnp mtw fxvi bgzra",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000\nstwmx ffee ows uuqvv racx kip sfbh u t uc evsairhduq lyltcabuj fdrz ilrgn ehkinqsmw hhi jso o ezk p ou xfxilrj buae rqkgl bdkq cut za djiqv h unu\n1000 1000 1000 1000 1000\ngejn ln lcoxnrdwskn ekzk oc x i qmawv sizv uipw x smwjb cckb\nk dnt pxnzir w siembs",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "1 1 1\nk gdtf lk xxup jq vcoiktie alwg f vhtnsr b dfabdnlhac ewyjjm ktuzkn r dkmj wfwva pexxjfec hzt acsz kzbg e wb glmbewjvv eavfy rep nxref gthgx mpf cc wtc\n2 999 2 1 1000\nidzj ljz wrdjh zrfixsc uc e yewe chqve l ulxrcenxtr d myl cdzqy\nla n veblqtwm xz qc",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:51",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:15"
}
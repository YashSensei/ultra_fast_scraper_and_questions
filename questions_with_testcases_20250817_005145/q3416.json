{
  "problem_code": "problems",
  "title": "Making Money",
  "tags": [],
  "text": "A trick sometimes used by parents to teach their children the value of money is to give then a penny – just\r\na penny! – and the promise that for each day they don’t spend it, the parent will double it. All students of\r\ncomputing know that long before a month has elapsed without spending a cent, the parents will not likely be\r\nable to make good on their promise.100-percent compound daily interest on an investment is, of course, unattainable in normal financial\r\ndealings, but we are all continually reminded of the power of compound interest, even with the relatively\r\nlow interest rates available today.But exactly how much money can be made with compound interest? Assume, for example, an initial\r\ninvestment of $100.00 (US or Canadian ☺), an annual interest rate of 6.00 percent, and that interest is\r\ncompounded monthly. That is, the interest earned during the preceding month is added to the principal at\r\nthe end of the month. (For our purposes, we’ll assume a month is exactly 1/12th of a year.)At the end of the first month, the money will have earned 0.5 percent interest (1/12th of 6.00 percent), or\r\n$0.50. This is added to the $100.00 invested, so that during the next month, interest is paid on $100.50.\r\nDuring the next month another 0.5 percent interest is earned, which is exactly $0.5025. We will assume\r\nthat the bank, being conservative, will not pay any interest less than $0.01, so our investment is credited\r\nwith an additional $0.50 at the end of the second month, for a whopping total of $101.00. Continuing in the\r\nsame manner, at the end of 12 months our investment will total $106.12, $0.12 more than simple 6.00\r\npercent interest for a year with no compounding.Given an amount P to be invested for a year with I percent interest, compounded C times during the year at\r\nequal intervals, what is total return on the investment?InputThere will be multiple cases to consider. The input for each case is a single line containing the initial\r\ninvestment amount, P, given in dollars and cents (but no fractional cents, and no larger than $100,000.00),\r\nthe annual interest rate (I) given as a real number with two fractional digits representing a percentage,\r\ngreater than zero but less than 100, and the number of compounding intervals per year (C), an integer\r\nbetween 1 and 365. The last case will be followed by a line containing “0.00 0.00 0”.OutputFor each input case, display the case number (1, 2, …), the initial investment (P), the annual interest rate\r\n(I), the number of compounding intervals per year(C), and the value of the investment at the end of a year.\r\nYour output should follow the format shown in the examples below.ExampleInput:100.00 6.00 1\r\n100.00 6.00 12\r\n1000.00 6.00 12\r\n0.00 0.00 0Output:Case 1. $100.00 at 6.00% APR compounded 1 times yields $106.00\r\nCase 2. $100.00 at 6.00% APR compounded 12 times yields $106.12\r\nCase 3. $1000.00 at 6.00% APR compounded 12 times yields $1061.63",
  "sample_input": "Input:100.00 6.00 1\r\n100.00 6.00 12\r\n1000.00 6.00 12\r\n0.00 0.00 0Output:Case 1. $100.00 at 6.00% APR compounded 1 times yields $106.00\r\nCase 2. $100.00 at 6.00% APR compounded 12 times yields $106.12\r\nCase 3. $1000.00 at 6.00% APR compounded 12 times yields $1061.63",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/MKMONEY",
  "scraped_at": "2025-08-17 00:34:21",
  "test_cases": [
    {
      "input": "100.00 6.00 1\r\n100.00 6.00 12\r\n1000.00 6.00 12\r\n0.00 0.00 0",
      "expected_output": "Case 1. $100.00 at 6.00% APR compounded 1 times yields $106.00\r\nCase 2. $100.00 at 6.00% APR compounded 12 times yields $106.12\r\nCase 3. $1000.00 at 6.00% APR compounded 12 times yields $1061.63",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "7 6 9\n2 7 5\n1 1 7\n1 6 10",
      "expected_output": "0\n0\n0\n0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "9 10 9\n6 5 1\n5 2 2\n1 2 5",
      "expected_output": "0\n0\n0\n0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "1 6 10\n2 1 4\n1 1 1\n1 8 7",
      "expected_output": "0\n0\n0\n0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "30 27 51\n24 74 91\n100 78 97\n8 64 100",
      "expected_output": "0\n0\n0\n0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "87 29 83\n67 90 71\n33 20 56\n55 100 32",
      "expected_output": "0\n0\n0\n0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "93 58 6\n97 24 70\n98 92 95\n19 69 99",
      "expected_output": "0\n0\n0\n0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "35 18 91\n73 74 27\n68 6 13\n76 55 46",
      "expected_output": "0\n0\n0\n0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "31 71 75\n1 91 92\n23 43 57\n90 71 24",
      "expected_output": "0\n0\n0\n0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "161 270 370\n288 372 147\n428 170 186\n286 170 494",
      "expected_output": "0\n0\n0\n0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "399 106 321\n459 94 273\n268 96 260\n221 479 430",
      "expected_output": "0\n0\n0\n0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "130 102 185\n327 424 185\n184 108 480\n496 279 228",
      "expected_output": "0\n0\n0\n0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "396 121 351\n241 273 238\n226 142 54\n101 258 122",
      "expected_output": "0\n0\n0\n0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "400 204 348\n451 136 411\n197 273 94\n399 425 214",
      "expected_output": "0\n0\n0\n0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "245 262 318\n419 233 423\n236 316 390\n212 119 383",
      "expected_output": "0\n0\n0\n0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "380 331 181\n306 339 380\n144 275 144\n391 348 449",
      "expected_output": "0\n0\n0\n0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000",
      "expected_output": "0\n0\n0\n0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000",
      "expected_output": "0\n0\n0\n0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "999 1000 1\n1 1000 2\n1000 2 1000\n2 999 1",
      "expected_output": "0\n0\n0\n0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 2 999\n1 2 1\n999 999 1\n2 2 2",
      "expected_output": "0\n0\n0\n0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:56",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:38:06"
}
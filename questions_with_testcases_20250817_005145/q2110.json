{
  "problem_code": "problems",
  "title": "Three",
  "tags": [],
  "text": "Just like every fall, the organizers of the Southwestern Europe Dice Simulation Contest are busy again this year. In this edition you have to simulate a 3-sided die that outputs each of three possible outcomes (which will be denoted by 1, 2 and 3) with a given probability, using three dice in a given set. The simulation is performed this way: you choose one of the given dice at random, roll it, and report its outcome. You are free to choose the probabilities of rolling each of the given dice, as long as each probability is strictly greater than zero. Before distributing the materials to the contestants, the organizers have to verify that it is actually possible to solve this task.For example, in the first test case of the sample input you have to simulate a die that yields outcome 1, 2 and 3 with probabilities 3/10, 4/10 and 3/10. We give you three dice, and in this case thei-th of them always yields outcomei, for eachi= 1, 2, 3. Then it is possible to simulate the given die in the following fashion: roll the first die with probability 3/10, the second one with probability 4/10 and the last one with probability 3/10.InputThe input consists of several test cases, separated by single blank lines. Each test case consists of four lines: the first three of them describe the three dice you are given and the last one describes the die you have to simulate. Each of the four lines contains 3 space-separated integers between 0 and 10 000 inclusive. These numbers will add up to 10 000, and represent 10 000 times the probability that rolling the die described in that line yields outcome 1, 2 and 3, respectively.The test cases will finish with a line containing only the number zero repeated three times (also preceded with a blank line).OutputFor each case, your program should output a line with the wordYESif it is feasible to produce the desired die from the given ones, andNOotherwise.SampleInput:0 0 10000\r\n0 10000 0\r\n10000 0 0\r\n3000 4000 3000\r\n\r\n0 0 10000\r\n0 10000 0\r\n3000 4000 3000\r\n10000 0 0\r\n\r\n0 0 0Output:YES\r\nNOProblem setter: Abel Molina Prieto",
  "sample_input": "Input:0 0 10000\r\n0 10000 0\r\n10000 0 0\r\n3000 4000 3000\r\n\r\n0 0 10000\r\n0 10000 0\r\n3000 4000 3000\r\n10000 0 0\r\n\r\n0 0 0Output:YES\r\nNO",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/DICE",
  "scraped_at": "2025-08-17 00:34:04",
  "test_cases": [
    {
      "input": "0 0 10000\r\n0 10000 0\r\n10000 0 0\r\n3000 4000 3000\r\n\r\n0 0 10000\r\n0 10000 0\r\n3000 4000 3000\r\n10000 0 0\r\n\r\n0 0 0",
      "expected_output": "YES\r\nNO",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2 7 6\n10 6 7\n6 5 4\n4 6 8\n6 5 8\n1 1 9\n1 8 6\n6 10 1\n10 8 2",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "2 1 1\n2 1 5\n8 1 2\n9 2 5\n2 8 4\n4 8 7\n2 6 4\n9 3 3\n9 9 3",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "8 4 3\n10 5 6\n3 9 8\n4 2 4\n1 8 9\n7 3 2\n9 4 4\n4 4 8\n10 6 6",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "10 13 25\n93 70 69\n49 4 16\n44 37 1\n55 2 44\n31 84 66\n29 70 18\n45 99 32\n65 73 18",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "57 31 62\n57 11 64\n71 82 74\n67 53 77\n73 86 14\n42 76 88\n34 52 36\n22 88 91\n36 13 15",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "94 19 88\n14 33 7\n6 8 12\n74 70 5\n35 9 11\n11 38 38\n8 33 77\n52 27 44\n63 41 82",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "88 38 4\n61 6 70\n86 67 96\n70 40 40\n22 40 27\n82 91 39\n19 29 96\n30 73 47\n17 46 38",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "66 44 93\n55 63 19\n6 2 15\n56 88 49\n71 99 82\n60 15 24\n75 6 62\n79 40 70\n74 27 97",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "169 312 147\n273 492 165\n396 181 472\n123 268 370\n53 358 365\n135 480 442\n494 360 337\n442 449 321\n105 142 280",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "455 154 319\n146 442 304\n185 334 264\n324 271 221\n180 280 226\n273 441 240\n196 461 499\n241 335 463\n412 224 337",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "211 179 86\n183 189 426\n445 258 487\n67 376 409\n332 306 210\n359 104 346\n435 128 83\n455 265 179\n263 420 142",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "126 304 306\n422 94 172\n68 233 430\n155 331 134\n368 74 285\n143 110 298\n83 331 168\n217 461 492\n479 165 150",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "120 386 106\n224 390 162\n486 417 293\n332 425 193\n234 201 58\n306 174 213\n247 464 468\n426 445 182\n155 118 214",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "315 494 332\n357 208 84\n182 222 76\n370 286 77\n360 133 396\n142 104 440\n259 154 237\n80 494 74\n390 356 195",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "203 412 57\n165 247 315\n237 103 121\n361 261 391\n174 214 291\n291 451 211\n431 272 111\n256 113 216\n406 262 281",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 999 1\n999 2 1\n1000 2 1\n2 1000 1000\n999 1 1\n2 1 999\n1000 1 1000\n1 1000 2\n999 2 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 1 999\n1 1000 1000\n1 2 1\n2 1 999\n1000 1 2\n2 999 1000\n1 2 999\n1000 999 2\n1 999 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:52",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Alia and Cryptography",
  "tags": [],
  "text": "Alia  is world’s most widely acclaimed cryptographer. Recently she developed a  new way to encrypt passwords over the internet. Instead of using the  secret “Key”, now she intends to use a secret “Key Matrix” for  encryption.The “Key Matrix” consists of an integer matrix of dimensions m × n.  Besides, there are four coordinates x1, y1, x2, y2. The “Key” can be  retrieved from “Key Matrix” performing bitwise XOR(^) operation over all  the integers present in rectangle having its upper left corner as (x1,  y1) and lower right index as (x2, y2). (Note:  the matrix is 0 based)  Also Alia has developed new tools to regularly update his key to protect  it from “attackers”. So she will update the values of some cells from  time to time. You friend, being an expert hacker has finally retrieve  the “Key Matrix” . Now he only needs to use the matrix to retrieve the  key. Since this appears to be a tedious task, he turns to you. Help your  friend by retrieving the secret “key” from the “key matrix”.In brief, you’ll have to do the following two operations over the matrix0 x1 y1 x2 y2 : Perform the XOR of all the integers present in the  rectangle having its upper left corner as (x1, y1) and lower right index  as (x2, y2).1 x1 y1 k:  Update the value at position (x1, y1) by k.InputThe first line of input will contain integers m and n (separated with space) specifying the dimensions of the  matrix. This is followed by a m × n matrix (m rows and n columns) denoting the “Key Matrix”. The next line contains an integer q denoting the number of queries. Each of the following q lines contains a single query in the specified  format.OutputFor each query, print the value of the secret “Key” that you retrieve from the “Key Matrix”Constraints1 ≤ m, n < 6001 ≤ q ≤ 20,0000 ≤ x1, x2 ≤ m – 10 ≤ y1, y2 ≤ n – 10 ≤ Aij, k ≤ 108ExampleInput:2 2\r\n1 2\r\n3 4\r\n2\r\n1 0 0 2\r\n0 0 0 1 1Ouptut:7ExplanationThe first query updates the value of (0, 0) to 2. Now the Key matrix appears like 2 2 3 4 Now for query 2 the secret key is the XOR of the value in the entire matrix So the key is 2 ^ 2 ^ 3 ^ 4 = 7",
  "sample_input": "Input:2 2\r\n1 2\r\n3 4\r\n2\r\n1 0 0 2\r\n0 0 0 1 1Ouptut:7",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/CONOR",
  "scraped_at": "2025-08-17 00:34:27",
  "test_cases": [
    {
      "input": "2 2\r\n1 2\r\n3 4\r\n2\r\n1 0 0 2\r\n0 0 0 1 1Ouptut:7",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "8 5\n7 5\n8 2\n10\n9 2 5 8\n7 9 10 5 3 4\n9 2 6 3 nxvfqq",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "10 5\n5 8\n2 3\n6\n10 9 3 10\n3 4 4 7 9 2\n1 9 7 6 cxklaisr",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "3 2\n2 6\n1 8\n10\n3 7 5 3\n7 2 6 8 2 8\n3 4 6 5 cmuksy",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "63 63\n88 37\n77 77\n65\n99 44 3 44\n11 97 70 26 52 54\n14 92 73 91 baslt",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "18 32\n76 6\n60 93\n25\n52 2 78 78\n60 79 64 99 15 87\n61 15 48 32 nbexzsf",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "24 16\n31 93\n20 23\n9\n26 94 51 86\n42 16 12 100 77 94\n23 59 18 44 pftses",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "63 87\n76 16\n4 73\n45\n90 30 92 91\n23 24 65 79 15 55\n97 78 48 87 day",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "66 54\n17 22\n98 2\n43\n55 55 50 47\n83 99 35 53 98 13\n63 68 18 13 yrxsmrrj",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "623 802\n2923 919\n801 1449\n1901\n1013 1399 1260 1956\n2824 2216 661 1541 1703 2622\n1353 2959 1242 1302 olzmyxwgw",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "2444 637\n2102 421\n348 362\n1925\n1898 1932 1396 1038\n911 871 1672 1780 1192 1718\n517 1508 1218 429 stsey",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "2065 1839\n2833 1479\n1555 1112\n1167\n1468 2418 2658 1231\n1461 916 686 508 1875 393\n2010 1070 2378 803 hogemp",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "878 460\n2210 1576\n2117 1990\n2073\n2684 1027 1512 1565\n446 2350 1846 1859 2381 313\n766 2534 2608 970 ghlg",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "1657 729\n1905 1836\n1932 1483\n911\n552 778 2408 537\n1658 735 1841 1487 758 2074\n1472 2030 1648 2464 lx",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "683 777\n914 949\n2843 915\n707\n612 1378 1319 509\n2944 331 1907 2743 317 1271\n414 1046 2427 688 j",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "328 2440\n378 2784\n2539 677\n2840\n804 837 918 2301\n2572 1042 1746 2374 464 1616\n1449 2619 1148 374 l",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "6001 6001\n6001 6001\n6001 6001\n6001\n6001 6001 6001 6001\n6001 6001 6001 6001 6001 6001\n6001 6001 6001 6001 qvbuf",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "6001 6001\n6001 6001\n6001 6001\n6001\n6001 6001 6001 6001\n6001 6001 6001 6001 6001 6001\n6001 6001 6001 6001 ioltnkk",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 6000\n6001 6000\n2 1\n1\n1 6000 1 6001\n6000 6000 6000 1 6001 6001\n2 2 6001 2 mhklm",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "6001 2\n6001 6000\n1 2\n1\n1 1 2 6001\n6000 6001 6001 6000 6001 2\n1 1 6000 6000 f",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:57",
  "total_test_cases": 20
}
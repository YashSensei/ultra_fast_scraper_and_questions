{
  "problem_code": "problems",
  "title": "Fool the Police",
  "tags": [],
  "text": "Dhamaka Singh (a crook) has just robbed a bank and would like to get out of the country as soon as possible. But there is a slight problem, the police!  On his way out of the country he has to pass through some police stations. Each police station has a certain risk (for Dhamaka Singh) associated with it.  He wants to get to the airport within a certain timeTor else he'll miss his flight.  He also wants to take a path that minimizes the total risk associated with it.  Help Dhamaka Singh get out of the country.InputThe first line of the input contains an integert, the number of test cases.ttest cases follow.The first line of each test case contains 2 integersN(3 ≤N≤ 100) andT(1 ≤T≤ 250), denoting the number of police stations and the total time he has to reach the airport, respectively.Dhamaka Singh has to start from the first police station and reach theNthone (the airport is just after theNthpolice station).  You can consider the time taken between theNthpolice station and the airport to be negligible.Next there areNlines withNnumbers in each line, separated by single spaces.  All numbers are separated by a single space. The jthinteger in the ithline represents the time taken to reach the jthpolice station from the ithpolice station.Next there are anotherNlines withNnumbers in each line.  All numbers are separated by a single space.  The jthinteger in the ithline represents the risk involved in travelling to the jthpolice station from the ithpolice station.OutputFor each test case output one line containing 2 integers separated by a single space.The first integer denotes the minimum total risk to reach the airport.  The second integer denotes the minimum time required to reach the airport at the minimum total risk.If it is impossible to reach the airport within timeT(inclusive), just print \"-1\" (quotes for clarity).ExampleInput:1\r\n4 10\r\n0 6 2 3\r\n6 0 2 3\r\n3 1 0 2\r\n3 3 2 0\r\n0 2 2 7\r\n2 0 1 2\r\n2 2 0 5\r\n7 2 5 0Output:4 9",
  "sample_input": "Input:1\r\n4 10\r\n0 6 2 3\r\n6 0 2 3\r\n3 1 0 2\r\n3 3 2 0\r\n0 2 2 7\r\n2 0 1 2\r\n2 2 0 5\r\n7 2 5 0Output:4 9",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/FPOLICE",
  "scraped_at": "2025-08-17 00:33:04",
  "test_cases": [
    {
      "input": "1\r\n4 10\r\n0 6 2 3\r\n6 0 2 3\r\n3 1 0 2\r\n3 3 2 0\r\n0 2 2 7\r\n2 0 1 2\r\n2 2 0 5\r\n7 2 5 0",
      "expected_output": "4 9",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1\n6",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n1\n6\n10\n1\n8",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n4",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "20\n2715632\n95844801\n93906465\n95671474\n41506881\n69346990\n41934268\n55108725\n33955981\n9428243\n19254604\n63816495\n33826103\n91799839\n96267364\n92738229\n2020317\n12740322\n19922774\n28931004",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "10\n50001307\n81295932\n18677138\n13183356\n93036752\n64003984\n87373259\n98973758\n72666210\n87639228",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "5\n12193580\n71264259\n24789074\n63208644\n49396963",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "5\n61318781\n8702386\n59712801\n14435473\n25223333",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "15\n89797465\n50537753\n65664820\n36905199\n96764648\n31485506\n33160734\n81057884\n93216879\n97036353\n94920850\n43308526\n73754926\n64381008\n11752047",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "61\n85589\n77367\n41207\n34438\n30400\n68904\n54119\n51285\n44147\n70074\n65294\n10406\n29919\n62829\n69165\n85536\n35711\n38071\n85745\n49251\n53396\n65384\n78514\n92640\n4355\n98251\n21432\n4739\n18999\n59112\n83490\n46003\n42171\n96611\n67209\n38422\n14445\n59984\n83771\n96764\n32431\n63938\n19883\n50026\n1385\n15323\n36096\n28731\n8368\n95297\n48298\n68479\n19212\n78115\n85424\n7612\n63516\n15073\n93011\n50557\n5045",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "76\n42209\n51900\n34068\n6335\n8124\n49605\n86477\n6596\n87692\n92592\n55979\n51929\n3575\n60451\n22387\n81245\n67079\n2171\n83928\n38286\n41378\n68312\n19828\n46600\n62131\n26849\n56383\n44891\n75265\n35277\n46162\n54469\n3226\n50659\n80877\n1143\n56755\n79502\n67344\n92333\n18218\n15610\n91953\n28488\n93636\n12711\n2086\n13283\n39441\n56295\n41545\n76766\n94476\n54144\n27695\n34257\n69569\n35197\n92550\n93101\n82471\n47737\n6165\n91282\n98114\n44858\n12557\n7700\n47574\n66533\n12140\n51502\n15799\n96272\n82164\n30433",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "45\n11977\n57368\n91147\n45439\n99413\n12506\n12927\n83978\n22273\n17552\n61647\n19000\n95215\n44137\n28860\n88846\n16358\n26697\n54650\n85527\n85038\n37259\n85899\n41266\n86107\n44284\n34557\n61321\n63452\n91534\n81382\n16179\n5291\n67055\n76849\n36981\n64840\n67447\n88327\n1558\n14239\n19266\n34687\n16002\n1273",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "78\n49622\n16602\n67528\n55333\n69938\n68350\n12943\n32955\n19872\n26329\n80048\n47820\n96580\n83865\n75828\n99458\n78827\n85611\n24668\n31360\n7820\n87829\n76171\n17464\n95041\n85097\n36157\n92866\n5824\n49082\n97677\n97039\n83987\n7128\n83711\n3442\n65030\n40348\n56768\n83356\n43691\n5899\n50548\n58347\n88864\n12632\n15557\n17160\n34660\n11732\n41351\n39244\n52089\n55384\n47689\n49828\n81973\n22514\n63690\n88529\n551\n43396\n6199\n83267\n43158\n24743\n42353\n7764\n69167\n82829\n18476\n44098\n10254\n38770\n23869\n92385\n98599\n58998",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "54\n4108\n53612\n48959\n40151\n36818\n13740\n5256\n80171\n30826\n82154\n85591\n64689\n47416\n35411\n68136\n82925\n11818\n70425\n34494\n28301\n63814\n12066\n86342\n26142\n35891\n95690\n89358\n57530\n41416\n53873\n56051\n20077\n96239\n71538\n34665\n58634\n50310\n23930\n92419\n18093\n58867\n62041\n7196\n70398\n17676\n96066\n35796\n34119\n4696\n83421\n61720\n36015\n99004\n68252",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "27\n55089\n81007\n43025\n12431\n86204\n48712\n2700\n47136\n34835\n33384\n14162\n78612\n91837\n75383\n99182\n26862\n5109\n98159\n88607\n60006\n92234\n35216\n34263\n75451\n70496\n40022\n75350",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "32\n80263\n28236\n11226\n78497\n55632\n51508\n95673\n99517\n73917\n75838\n82644\n16412\n20349\n26862\n74120\n32569\n18559\n38782\n12116\n75895\n74744\n93741\n25822\n50569\n61949\n76210\n14658\n92630\n40950\n561\n12961\n51953",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "100\n59173257\n81243803\n61929289\n53612594\n79411094\n99345946\n88721336\n63839919\n1761881\n48808430\n99650430\n53419428\n85634456\n34314872\n45704673\n49157394\n189088\n89869421\n7459300\n80848640\n77815727\n81136060\n54168798\n79939845\n58267184\n34851183\n83604922\n17732792\n41082384\n61635369\n55353943\n91783390\n97882409\n18776111\n28230987\n26584083\n50945919\n19496857\n64530101\n25869362\n20365826\n4766488\n72682887\n86648982\n87925602\n26133380\n17149651\n91179983\n99035588\n6443339\n57566179\n14039466\n65369644\n45658301\n79746873\n54494915\n35351527\n95805283\n45718030\n58912286\n11207039\n17655218\n13162116\n37521789\n19373044\n87617484\n94024966\n31820299\n58999690\n59430765\n84549383\n48183752\n85463074\n26899762\n82090613\n48466815\n98922728\n62568626\n54450690\n92066782\n93742810\n45876503\n44786631\n53774837\n78849689\n51512902\n25940403\n36211939\n86235458\n80773329\n7349947\n83285377\n40260347\n84703243\n95545723\n33096129\n72241795\n61252521\n77227301\n18198702",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "100\n9512987\n44150904\n17423838\n83346867\n53508986\n44037700\n45988427\n12547496\n29087220\n29239472\n91578358\n4878067\n94226688\n24131610\n51726023\n92994983\n28882880\n60643040\n6756241\n78799092\n28791021\n88267226\n2588794\n75293415\n76313072\n94581825\n32507589\n4720005\n45170958\n83037542\n7461105\n81061628\n51186141\n430992\n78371037\n62488804\n9443801\n73048531\n64223250\n79724729\n14789173\n91327115\n61023079\n7540979\n86548215\n8268826\n6995255\n18288497\n56287476\n50870293\n78989661\n4029835\n19880013\n32863114\n77918961\n72565752\n4113941\n75881605\n46796443\n23548503\n68045772\n4999797\n20810947\n84487643\n23401377\n52854348\n74445374\n3534923\n7413183\n98570236\n99164994\n9161193\n55203328\n88882293\n29049284\n92650794\n72750956\n29876143\n16431727\n11874056\n36188159\n24804885\n68271209\n9018097\n7398160\n16102012\n9902179\n7119399\n16098041\n5762586\n26161161\n52400838\n17902023\n50681891\n38290420\n42846031\n35536979\n15624079\n82347466\n15068288",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "2\n95467340\n1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 2)"
    },
    {
      "input": "2\n100000000\n1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 2)"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:45",
  "total_test_cases": 20
}
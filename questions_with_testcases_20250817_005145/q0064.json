{
  "problem_code": "problems",
  "title": "Little Quilt",
  "tags": [],
  "text": "Little Quiltis a small language introduced by Ravi Sethi in his book ‘Programming Languages’.Here, a restricted version of Little Quilt is presented. The language is defined by the following BNF grammar:< QUILT > ::= A | B | turn(< QUILT >) | sew(< QUILT >,< QUILT >)A and B represent the two primitive quilts. Each primitive quilt corresponds to a matricial arrangement of 2 × 2 characters. turn() and sew() are operations over quilts.The instructionturn(x)turns the quilt x 90 degrees clockwise. The following table illustrates the primitive quilts as well as examples of the effect of theturn()operation:Accordingly, the instructionsew(x,y)sews quilt x to the left of quilt y. Both x and y must have the same height, otherwise an error will be generated. The following figure represents the result ofsew(A,turn(B)):while thesew(turn(sew(B,turn(B))),A)generates an error message.Your job is to build an interpreter of the Little Quilt language.InputThe input file will be a text file containing different Little Quilt expressions, each one ended by a semicolon character (;). Space and new line characters must be ignored; this means that an expression may span several lines.OutputThe output file contains the quilts produced as a result of interpreting the input expressions.Each quilt must be preceded by a line, left aligned, with the formatQuilt i:where i is the quilt number, starting at 1. If the expression interpretation generates and error, the worderrormust be printed.ExampleInput:sew(turn(sew(B,turn(B))),\r\nturn(sew(turn(B),B))) ;sew(turn(sew(B,turn(B))),A);\r\nsew(turn(sew(A,turn(A))),\r\nturn(turn(turn(sew(A,turn(A))))))\r\n;Output:Quilt 1:\r\n||--\r\n||--\r\n--||\r\n--||\r\nQuilt 2:\r\nerror\r\nQuilt 3:\r\n\\\\//\r\n+\\/+\r\n+/\\+\r\n//\\\\",
  "sample_input": "< QUILT > ::= A | B | turn(< QUILT >) | sew(< QUILT >,< QUILT >)",
  "sample_output": "Input:sew(turn(sew(B,turn(B))),\r\nturn(sew(turn(B),B))) ;sew(turn(sew(B,turn(B))),A);\r\nsew(turn(sew(A,turn(A))),\r\nturn(turn(turn(sew(A,turn(A))))))\r\n;Output:Quilt 1:\r\n||--\r\n||--\r\n--||\r\n--||\r\nQuilt 2:\r\nerror\r\nQuilt 3:\r\n\\\\//\r\n+\\/+\r\n+/\\+\r\n//\\\\",
  "link": "https://www.spoj.com/problems/QUILT",
  "scraped_at": "2025-08-17 00:33:08",
  "test_cases": [
    {
      "input": "< QUILT > ::= A | B | turn(< QUILT >) | sew(< QUILT >,< QUILT >)",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "sew(turn(sew(B,turn(B))),\r\nturn(sew(turn(B),B))) ;sew(turn(sew(B,turn(B))),A);\r\nsew(turn(sew(A,turn(A))),\r\nturn(turn(turn(sew(A,turn(A))))))\r\n;",
      "expected_output": "Quilt 1:\r\n||--\r\n||--\r\n--||\r\n--||\r\nQuilt 2:\r\nerror\r\nQuilt 3:\r\n\\\\//\r\n+\\/+\r\n+/\\+\r\n//\\\\",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "duo mik fvjw iip csjpm rho n rc toj o fdmhi re nxq n w mxnw hd",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "ds dsiu kd gu bfo yo ht gsgie erkw gxpd smj ofbp qngm pvyr nlr ybbcu tr",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "jysc wgqi soqrg m uywv kli dob rnx istsw dctox ipaz miax eswv ho vdemm frc qgfuw",
      "expected_output": "To be computed",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "h jr dicub vtwk j h er wvw wwnzr otkhp yg x ll wzw aiq okvxv eomez",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "i vjfd pgtq tiwcx n evaqi gnh svk dgdh ks ldzv tu efik zh prh epjdw kw",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "ujo uvgq hjcae ns t mfv vbuu xruvp rs pibc bh ehqqi pwvdn phzus cs rdg b",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "hrpze qiqn k dza wpkv a nuif saz euxazb rqnzn rmpt n x xeypv m xe o",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "wbuoz wthwk v ozuat yxfer b j g v zoqtu ikxd bxss dzgb p hwed cubxv aawsf",
      "expected_output": "To be computed",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "gkj m lb cdv dyi o j ru kwp vqkp wh f ijhzl dfy wchy s ebasn",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "ehdyt tvwe zlv kkqxj xxzi sx yms ocv t p xsgra eltrp yfvzp c goi bfr busk",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "ox kowm is ydti a bpqt o z ymbj mir j myvh ixij tjl vw vzcz tsp",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "y mcli icgbw ng axn xhphs e yfq eygskc jtidz zy lmhx ofjz hyp xjb yamil zg",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "snrt chqfy rotqp nytkb aa li dnel iegh jp s j d fmab bv wa hwsr q",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "wa wan ry w vdb suug udjk mlayp uujy wujoo ez pol yp jtmdj f l udla",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "my tlitx qlgp dhgr d fsgfs ayhxp yv men slb uauin mhvye tmjw izl rojqv yiznp mwl",
      "expected_output": "To be computed",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "lwun f onle di f jjve lamq o rqjbyg fiex maf q b hu ngzjy nqgqu e",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "okeu f qpx rbwq cp klfx bos zyhg vwbb ztsbq wshxi w o mmlm bwar gem hds",
      "expected_output": "To be computed",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "hm hno kd d kqf lusps zwk za gqgqg nbnmn rqsvs wbg qd jq e snbiz jkl",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:45",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Help MR  BEAN",
  "tags": [],
  "text": "Mr. Bean loves to play games. For this he wastes lots of money so Mrs. Bean made a hurdle game for him. Now in the game we have 3 tracks and for moving up to next level he will have to cross some hurdles. Each time he changes the track he gets some drink to increase his energy level by that amount. The drink that he gets is the one which is in between the present track and the adjacent track and in the direction of movement (adjacent track may or may not be the track on which he is targeting to move). Now if at any moment his energy becomes negative his game will be over. So you have make him win this game with maximum energy being available with him at last. He will move in the form of 'L' and 'R' between adjacent tracks with 'L' making him move one step left of the present position and 'R' moving him right. Movement between different level will be separated by '-' and if there is no change of track between adjacent levels then print 'U' at its corresponding move.InputFirst line will have 3 integers Il, Ie, Ns where Il is the initial track on which he is standing, Ie is the initial energy he is having and Ns is the number of levels in the game. Then it would be followed by 5 lines where the first three will have the values of the hurdles present at each level on each track. Fourth line will have Ns-1 integers representing the energy obtained by him on drinking the energy drink between continuous levels between track 1 and 2 and similarly fifth line will have Ns-1 values for drinks between tracks 2 and 3.OutputPrint \"DONE IT!\" in first line and the steps taken by him in second line following the path which leads to maximum energy available with Mr. Bean beyond final track. If it is not possible print \"GAME OVER!\".ConstraintsEvery integer, intermediate values will fit in 32-bit integer.ExampleInput:1 6 53 2 9 16 34 0 7 26 11 7 3 30 98 19 8 310 3 6 4Output:DONE IT!RR-LL-RR-LL-R",
  "sample_input": "Input:1 6 53 2 9 16 34 0 7 26 11 7 3 30 98 19 8 310 3 6 4Output:DONE IT!RR-LL-RR-LL-R",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/BEANGAME",
  "scraped_at": "2025-08-17 00:34:09",
  "test_cases": [
    {
      "input": "1 6 53 2 9 16 34 0 7 26 11 7 3 30 98 19 8 310 3 6 4",
      "expected_output": "DONE IT!RR-LL-RR-LL-R",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "10 10 1 4 10 6 1 7 2 2 9 9 5 5 4 3 10 6 7 5 5",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "6 1 1 3 2 4 2 6 1 3 6 9 5 3 10 8 7 9 4 1 3",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "10 9 4 8 7 9 7 7 8 3 8 8 10 1 5 6 7 10 5 10 9",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "79 44 96 49 83 16 36 9 33 56 35 56 65 16 36 35 84 44 61 21 17",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "53 34 55 80 52 59 62 13 66 33 75 81 78 84 35 43 36 96 8 80 75",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "42 19 57 32 11 18 18 48 49 32 16 58 16 44 78 15 49 87 13 26 70",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "58 26 96 11 13 50 14 26 59 70 59 25 95 42 80 63 62 34 57 81 75",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "7 62 15 82 62 78 51 95 39 66 84 28 67 70 98 96 23 7 41 20 98",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "380 486 178 480 194 268 182 480 171 211 133 78 240 118 243 452 85 237 286 80 217",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "369 133 476 190 263 383 99 447 251 194 175 427 115 429 432 264 101 179 261 80 385",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "467 275 100 270 251 328 419 468 157 173 421 183 245 447 465 363 393 304 498 360 246",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "224 86 360 324 467 343 276 52 286 125 81 153 397 337 135 394 294 498 470 330 475",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "317 306 88 91 77 482 385 227 492 376 390 339 76 449 129 486 410 463 398 390 439",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "148 193 302 399 361 184 378 449 211 221 261 231 364 173 224 68 118 417 129 458 288",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "373 348 172 52 329 267 155 209 197 314 80 155 276 397 85 64 475 318 266 312 318",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 2 1000 1000 1000 2 1 1000 1 1 999 1 999 2 1 2 1000 1 1000 1 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1000 1000 999 1 1000 2 1 999 2 1000 1 999 1000 1000 2 1 999 2 1000 999 1000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:55",
  "total_test_cases": 20
}
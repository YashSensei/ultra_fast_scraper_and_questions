{
  "problem_code": "problems",
  "title": "Holiday Accommodation",
  "tags": [],
  "text": "Nowadays, people have many ways to save money on accommodation when they are on vacation. One of these ways is exchanging houses with other people.Here is a group ofNpeople who want to travel around the world. They live in different cities, so they can travel to some other people's city and use someone's house temporary. Now they want to make a plan that choose a destination for each person. There are two rules should be satisfied:All the people should go to one of the other people's city.Two of them never go to the same city, because they are not willing to share a house.They want to maximize the sum of all people's travel distance. The travel distance of a person is the distance between the city he lives in and the city he travels to. TheseNcities haveN-1 highways connecting them. The travelers always choose the shortest path when traveling.Given the highways' information, it is your job to find the best plan, that maximum the total travel distance of all people.InputThe first line of input contains one integerT(1 ≤T≤ 10), indicating the number of test cases.Each test case contains several lines.\r\nThe first line contains an integerN(2 ≤N≤ 105), representing the number of cities.\r\nThen the followingN-1 lines each contains three integersX,Y,Z(1 ≤X,Y≤N, 1 ≤Z≤ 106), means that there is a highway between cityXand cityY, and length of that highway.You can assume all the cities are connected and the highways are bi-directional.OutputFor each test case in the input, print one line:\"Case #X: Y\", whereXis the test case number (starting with 1) andYrepresents the largest total travel distance of all people.ExampleInput:2\r\n4\r\n1 2 3\r\n2 3 2\r\n4 3 2\r\n6\r\n1 2 3\r\n2 3 4\r\n2 4 1\r\n4 5 8\r\n5 6 5Output:Case #1: 18\r\nCase #2: 62",
  "sample_input": "Input:2\r\n4\r\n1 2 3\r\n2 3 2\r\n4 3 2\r\n6\r\n1 2 3\r\n2 3 4\r\n2 4 1\r\n4 5 8\r\n5 6 5Output:Case #1: 18\r\nCase #2: 62",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/HOLI",
  "scraped_at": "2025-08-17 00:33:45",
  "test_cases": [
    {
      "input": "2\r\n4\r\n1 2 3\r\n2 3 2\r\n4 3 2\r\n6\r\n1 2 3\r\n2 3 4\r\n2 4 1\r\n4 5 8\r\n5 6 5",
      "expected_output": "Case #1: 18\r\nCase #2: 62",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5\n2\n2\n4\n2\n6",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n5",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "4\n7\n5\n5\n1",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n79280417\n63610873\n40658823\n43989531\n49804467",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "19\n87811021\n71917116\n39256923\n55436165\n54186040\n86748264\n45287520\n41238398\n80475632\n84005878\n35176581\n95394460\n94298886\n51850635\n45228109\n71293580\n3150981\n13196441\n44913199",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "8\n84163440\n58270250\n15532773\n48523142\n54549925\n62778101\n77169539\n39308006",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "7\n56967060\n86820846\n667964\n81447927\n14846212\n65210569\n77767929",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "14\n99393030\n44418929\n52458314\n45802048\n71650622\n50800682\n82030183\n78332683\n82361630\n3341069\n84209093\n43591435\n83001855\n68312785",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "60\n63363\n14770\n28975\n47093\n48506\n70157\n45189\n35238\n70116\n25297\n91156\n15268\n93293\n94594\n74515\n47342\n67543\n33481\n33965\n40172\n99217\n86199\n10734\n95696\n91841\n99232\n46955\n34062\n22795\n45507\n75437\n17193\n66861\n58429\n20714\n41984\n69433\n61003\n82516\n67354\n12393\n46337\n44543\n53470\n3549\n88033\n33462\n6858\n25236\n84016\n96163\n90010\n58881\n40386\n66928\n64420\n84224\n63258\n27526\n81667",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "83\n97949\n4598\n4682\n93876\n67488\n88358\n50119\n45615\n18635\n82178\n38184\n8887\n90710\n80352\n76696\n20343\n62900\n40215\n38721\n62003\n18927\n88769\n76714\n65109\n26702\n27855\n52892\n67032\n3027\n1221\n98029\n29667\n53109\n72195\n59904\n42117\n56993\n16139\n3503\n93919\n48491\n51394\n65177\n49703\n5294\n70958\n44206\n92349\n52863\n62269\n80508\n41245\n86628\n30305\n50818\n79845\n91787\n24794\n98386\n22136\n77182\n85837\n99172\n68771\n56249\n67051\n16619\n13407\n47209\n60525\n88315\n82902\n75651\n70368\n94231\n73996\n16585\n30165\n10816\n79501\n74363\n49251\n54099",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "94\n23314\n2747\n50039\n17414\n8962\n31317\n99297\n78886\n8686\n71333\n38367\n57103\n54073\n56861\n91016\n1429\n46815\n22433\n26390\n92025\n20315\n61756\n24401\n61083\n23704\n77494\n94437\n97653\n40400\n32685\n60371\n33917\n79872\n87319\n15740\n97927\n98940\n77101\n97205\n70792\n91235\n28407\n5095\n37969\n16726\n76778\n57894\n9599\n27423\n23389\n63443\n2684\n79598\n61729\n19825\n64765\n73178\n35417\n43209\n6771\n85853\n47625\n87944\n74500\n86960\n92127\n59908\n45745\n69157\n52558\n19245\n17402\n98777\n8947\n95808\n65444\n44825\n71254\n18754\n17297\n9593\n32836\n1021\n51911\n30521\n80709\n98303\n92077\n27766\n89317\n56975\n25818\n81084\n32080",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "26\n91787\n95192\n30698\n13131\n55651\n68359\n67585\n49862\n7330\n8654\n74514\n58062\n50513\n93170\n48019\n54694\n87239\n14767\n50174\n89260\n99330\n80194\n22416\n32923\n33352\n2446",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "30\n71795\n95751\n87472\n89672\n92409\n57016\n8276\n60716\n58074\n93737\n52183\n81093\n55546\n36699\n79173\n18828\n77916\n79807\n42299\n93326\n59503\n70655\n80090\n7426\n32603\n77481\n50198\n67130\n72125\n45036",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "71\n55000\n68977\n17064\n12230\n20153\n10066\n49071\n90563\n18078\n39233\n4492\n90314\n23533\n77166\n22142\n64225\n49520\n65714\n70651\n52338\n19672\n62523\n79929\n69721\n43109\n62317\n10707\n82968\n35107\n78415\n74495\n58409\n28681\n31313\n36463\n210\n91040\n71337\n93871\n42977\n72661\n44519\n48635\n1253\n29002\n49310\n83355\n64688\n98376\n63590\n95139\n49338\n78487\n50706\n92333\n54931\n62053\n17806\n59289\n28158\n13641\n55246\n49526\n7321\n76001\n42986\n24503\n66774\n58878\n16135\n39963",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "24\n51520\n48518\n24033\n91251\n57857\n14039\n92595\n50099\n81081\n98682\n39737\n33570\n49137\n86102\n24230\n51803\n56843\n62657\n11216\n92757\n92298\n32984\n35377\n76736",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "105\n47740721\n24010933\n43534305\n70602040\n172985\n92614709\n88071999\n3705440\n86813866\n71803802\n59982349\n28962147\n34666790\n72600830\n22734686\n82847807\n66433761\n39901750\n13983505\n27154681\n1353188\n81137393\n72111375\n12334052\n74350893\n16801883\n51003580\n84384293\n56401515\n3101141\n51283455\n85004358\n76686658\n40909253\n72050189\n1076788\n63362490\n85566859\n52149417\n87987309\n48853926\n1302080\n51279485\n87771580\n18525554\n14770322\n25330613\n14096980\n1394896\n35640546\n57534099\n44996234\n45906349\n47921303\n21406336\n50493952\n88179911\n48540315\n93880859\n73495235\n34138054\n46653557\n87034576\n14959191\n81991090\n45838782\n15684748\n95714676\n4308612\n65771616\n7771939\n83789518\n49566854\n54742571\n23446291\n19081570\n23508429\n73116983\n63514299\n33195637\n80841672\n23244696\n61823479\n17377262\n27453116\n92027570\n57053833\n31617843\n56833444\n38132885\n84846649\n81350606\n42862155\n68417057\n24911219\n78095811\n99648985\n94423967\n65121703\n63497337\n70428249\n68306072\n37494079\n62724495\n54000830",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "105\n84411745\n28164911\n81676965\n77271044\n34928121\n93843151\n74410858\n70890031\n28699911\n38150068\n15397280\n91235468\n15429819\n78995155\n16701931\n81468963\n46366767\n52649253\n85033535\n75488149\n10111876\n30926449\n88673495\n16801169\n63348082\n45271396\n8892611\n40319574\n99929254\n69508119\n61386985\n24080639\n29658358\n70288081\n72215327\n880673\n93260739\n93734726\n78648426\n41841653\n43231126\n42271185\n59234736\n1501829\n43007177\n96740988\n41841138\n95058748\n2110553\n15402205\n61677502\n30346915\n86158991\n21795544\n67095447\n89176783\n3985541\n40063524\n92456980\n83644655\n60653014\n1730211\n56716931\n68417479\n23597763\n8305358\n32081018\n28677757\n38412316\n14860601\n57729271\n44710704\n20486452\n73277217\n13283027\n37804383\n85691334\n88532264\n12648277\n51345921\n10632321\n42013545\n83625161\n62838482\n90045519\n38151767\n11095482\n82344872\n56732305\n27159711\n74479306\n24050894\n83516405\n74731439\n1519745\n28070400\n83298299\n68353572\n80529924\n31486200\n98206961\n69127693\n22020772\n19918266\n22676417",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "1\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 1)"
    },
    {
      "input": "105\n1\n71739098\n100000000\n100000000\n50754880\n4367952\n1\n100000000\n1\n100000000\n81557361\n100000000\n1\n100000000\n100000000\n56335074\n1\n1\n1\n3054514\n1\n41535694\n81007131\n1\n1\n100000000\n1\n100000000\n100000000\n1\n21855729\n1\n100000000\n11205731\n1\n33997743\n1\n100000000\n1\n100000000\n1\n1\n38834008\n100000000\n100000000\n53732683\n100000000\n1\n100000000\n1\n100000000\n100000000\n100000000\n100000000\n1\n100000000\n8802215\n100000000\n1\n71464679\n32185793\n13417305\n2484572\n1\n4254521\n86960351\n100000000\n81186950\n1\n100000000\n1\n1\n100000000\n1\n1\n75419930\n75966985\n1\n100000000\n33167619\n92137170\n65438539\n100000000\n100000000\n1\n1\n100000000\n18039985\n36374886\n1\n97005952\n1\n1\n75134034\n1\n1\n91584401\n100000000\n1\n1\n7408497\n90436217\n1\n100000000\n62627061",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 105)"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:52",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Spring Loaded",
  "tags": [],
  "text": "Bob have just got a new toy from his Physics teacher to play with. It is called the Super Coiled Spring Loaded String (SCSLS for short) and it involves coiled springs, but unfortunately no magnets. The complex structure of the trinket is made of N bars (numbered from 0 to N − 1) and M springs (numbered from 0 to M − 1), each of which connects two different bars. All springs are laid out longitudinally to the entire string while the bars are perpendicular to them. The bars can be positioned freely along the longitudinal axis, but when two bars connected by a spring are pulled away from each other, a restoring force appears at the spring. Bob knows that this elastic force is given by Hooke’s Law, which states that |F | = kx, where k is a spring constant, x is the displacement of the spring and |F | is the absolute value of the force. Because the SCSLS is a very strange device, its springs are also special since they are Zero-length springs, each with a specific constant ki . This kind of spring have infinitesimal length so that when it is stretched, its length is equal to its displacement. Bob wants to leave his new toy displayed in his bedroom and he will do so by nailing the bars to the wall. He needs to position them horizontally such that bars 0 and N − 1 are D units distant from each other and the remaining bars are between them (in any relative order). Being a very meticulous kid, he always takes good care of all his toys. So, he wants to achieve a configuration such that the maximum force exerted on any spring is the lowest possible (because this way the springs are supposed to have greater durability).For example, in the figure above we have N = 4 bars and M = 4 springs showed at the left in their initial configuration. Suppose the spring constants are k0 = 10, k1 = 20, k2 = 10 and k3 = 1 and Bob wants a total distance of D = 10. The best configuration is showed at the right, in which the springs are subject to forces |F0| = 40, |F1| = 40, |F2| = 40 and |F3| = 6, all of which are no greater than 40.InputEach test case is described using several lines. The first line contains three integers N, M and D representing respectively the number of bars (2 ≤ N ≤ 100), the number of springs (1 ≤ M ≤ 10^4) and the needed distance between bars 0 and N − 1 (1 ≤ D ≤ 10^5). Each of the next M lines describes a spring using two distinct integers A, B and an integer K, indicating that there is a spring connecting bars A and B (0 ≤ A, B ≤ N − 1) with spring constant K (1 ≤ K ≤ 10^5). The last test case is followed by a line containing three zeros.OutputFor each test case output a line with the lowest possible value of the maximum elastic force in a valid configuration. Your answer should be rounded to two decimal digits.ExampleInput:3 2 51 0 11 2 13 3 51 0 11 2 10 2 24 4 100 2 101 2 201 3 102 3 10 0 0Output:2.5010.0040.00",
  "sample_input": "Input:3 2 51 0 11 2 13 3 51 0 11 2 10 2 24 4 100 2 101 2 201 3 102 3 10 0 0Output:2.5010.0040.00",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/SPRING",
  "scraped_at": "2025-08-17 00:33:11",
  "test_cases": [
    {
      "input": "3 2 51 0 11 2 13 3 51 0 11 2 10 2 24 4 100 2 101 2 201 3 102 3 10 0 0",
      "expected_output": "2.5010.0040.00",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5 1 7 8 5 4 10 2 10 9 3 8 10 9 9 4 4 3 1 2 1 4 5 4 8 10 6",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "2 2 8 10 5 6 3 3 4 2 8 6 8 8 10 1 1 7 7 5 10 1 4 10 1 7 6",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "9 9 1 6 9 10 7 3 1 7 1 7 9 1 7 5 5 6 4 7 2 6 4 7 2 10 8",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "54 62 78 67 75 88 84 96 44 28 22 95 45 22 97 48 94 99 99 30 33 68 35 13 37 2 17",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "41 85 18 35 95 8 86 35 46 81 5 46 79 76 95 65 18 82 32 92 43 10 29 17 23 66 70",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "33 96 80 24 79 40 33 38 4 10 89 32 96 39 93 24 95 35 96 80 82 11 57 58 22 40 60",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "77 9 46 81 98 39 86 83 96 53 12 65 54 2 71 31 17 51 14 64 92 1 86 67 40 53 80",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "54 28 22 75 15 65 41 91 51 68 97 77 12 51 94 50 16 19 9 74 51 37 16 82 75 10 2",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "32 44 30 35 41 25 50 20 45 16 31 18 17 14 42 19 19 8 17 8 5 46 30 15 17 34 20",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "5 41 34 30 41 27 31 36 28 23 8 30 46 25 14 32 32 19 47 35 40 10 49 18 39 25 30",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "21 38 6 36 31 41 11 40 11 9 42 12 18 48 30 7 40 50 19 50 29 39 47 21 6 48 36",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "5 35 14 10 37 7 9 47 34 44 37 46 14 6 37 8 34 22 18 47 42 31 21 30 19 37 28",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "5 46 21 47 50 37 5 18 23 10 38 48 11 28 16 11 29 23 38 9 30 32 45 49 32 8 43",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "39 31 33 43 37 20 41 5 35 13 11 37 13 47 11 40 5 16 44 48 19 28 44 18 13 49 43",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "12 5 25 45 39 32 50 22 13 27 26 43 11 9 31 12 44 34 38 30 36 22 22 11 19 11 39",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "99 1 1 1 1 2 100 1 100 100 99 100 100 100 2 2 2 99 99 100 2 1 2 2 2 1 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "100 99 2 1 1 2 99 100 99 1 100 100 2 1 1 99 2 100 99 99 2 100 2 2 100 99 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:47",
  "total_test_cases": 20
}
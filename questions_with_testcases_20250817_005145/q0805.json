{
  "problem_code": "problems",
  "title": "GO GOA GONE",
  "tags": [],
  "text": "So, it was winter and Me and 8 of my friends decided to plan a trip to GOA. Since the Bars and Clubs are too Expensive out there, we decided to pool money together for our whole trip expenses. Now since every group has some internal politics going on, same applies to our group also :P. 2 Members that are having a cold war between them won't go to the trip if the other one is going. But Since we want to enjoy a lavish party, we want to maximize the pooled money. So, for this task I've chosen my marwari friend Mohit to solve this problem (He's good at money matters). Your task is to help Mohit achieve the maximum pooled money.InputFirst Line will contain 8 space separated integers denoting the money contributed by each member in order.The next line will contain the total number of pairs having a cold war in between them. Let us denote this by P.The next P lines will contain 2 numbers separated by a space showing the members having a cold war. Numbers used to denote members will be (1 - 8) for each of the 8 members.ConstraintsEverything is guaranteed to easily fit in 32 bit integer type.OutputOutput will give the maximum amount of money that can be pooled.ExampleInput:3 14 5 2 3 4 1 9\r\n4\r\n1 2\r\n2 3\r\n4 5\r\n7 8Output:30",
  "sample_input": "Input:3 14 5 2 3 4 1 9\r\n4\r\n1 2\r\n2 3\r\n4 5\r\n7 8Output:30",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/ALCATRAZ2",
  "scraped_at": "2025-08-17 00:33:10",
  "test_cases": [
    {
      "input": "3 14 5 2 3 4 1 9\r\n4\r\n1 2\r\n2 3\r\n4 5\r\n7 8",
      "expected_output": "30",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "7 1 4 8 1 1 4 8\n5\n9 2\n4 10\n8 6\n9 4",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "5 2 9 4 7 3 2 8\n6\n4 1\n6 4\n10 4\n5 5",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "7 10 4 3 2 10 3 10\n6\n8 6\n10 4\n4 8\n9 5",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "90 54 86 1 32 93 79 96\n81\n42 32\n73 60\n52 63\n66 9",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "69 80 86 93 26 89 23 71\n86\n48 56\n38 66\n19 87\n21 18",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "42 99 23 27 2 54 14 37\n3\n51 53\n38 85\n70 10\n87 23",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "1 2 50 25 80 87 50 52\n86\n76 76\n66 48\n14 24\n82 75",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "99 56 87 97 45 58 82 70\n89\n41 77\n94 83\n71 15\n66 39",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "59 352 358 77 331 72 253 357\n272\n108 247\n224 282\n400 307\n126 128",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "349 54 415 199 185 84 88 85\n371\n439 194\n479 155\n290 186\n66 90",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "438 129 350 310 112 91 419 360\n447\n113 52\n286 61\n208 414\n444 409",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "116 118 189 201 362 430 304 94\n396\n119 313\n202 474\n402 459\n107 247",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "403 425 309 454 233 71 286 436\n159\n213 490\n491 480\n498 423\n233 267",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "164 252 331 318 223 52 305 325\n496\n373 337\n377 179\n85 397\n353 393",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "393 82 234 228 331 455 60 321\n132\n52 101\n361 413\n431 279\n86 76",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000\n1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000\n1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "999 2 999 2 1000 1 1 1000\n1000\n1 999\n1 2\n2 1000\n1000 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 1000 999 1 2 2 2 2\n1\n999 1000\n2 1000\n1000 1\n1 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:48",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Recursive Sequence (Version X)",
  "tags": [],
  "text": "Sequence(ai)of natural numbers is defined as follows:ai= bi(fori ≤ m)ai= c1ai-1+ c2ai-2+ ... + ctai-t(fori > t)wherebjandcjare given natural numbers. Your task is to computeanand output it modulo 109+7.The above is the description of the original problemSEQ. However, to be a problem in a regional contest, the description will be slightly modified to make the problem a little bit complicated: for almost all integersi>m, aifollows the formula given above, but there areqexceptions n1, n2... nq:ani= di1ani-1+ di2ani-2+ ... + ditiani-ti(for 1 ≤i≤q)InputFor each test case, the first line contains three integersn(m<n≤ 109),m(1 ≤m≤ 100),q(0 ≤q≤ 100). The second line containsmintegers b1, b2... bm. The following line contains several integers, first comes t (t ≤ 100), then t integers c1, c2... ct. The followingqlines describeqspecial cases of the recurrent formula, each containing several integers, namely ni, ti(ti≤ 100, ti< ni), di1, di2... diti, as mentioned earlier. It is satisfied that all niare distinct. All integers are non-negative. Unless specified, all integers are not greater than 109. Input is terminated by EOF. You might assume that all given data is correct. That is to say, all the required numbers can be fixed uniquely by the given input data.OutputFor each test case output the answer in a single line. Refer to the example for more format details.ExampleInput:7 5 0\r\n1 1 2 3 5\r\n2 1 1\r\n10 5 1\r\n1 1 2 3 5\r\n2 1 1\r\n10 2 1 2Output:Case 1: 13\r\nCase 2: 76",
  "sample_input": "Input:7 5 0\r\n1 1 2 3 5\r\n2 1 1\r\n10 5 1\r\n1 1 2 3 5\r\n2 1 1\r\n10 2 1 2Output:Case 1: 13\r\nCase 2: 76",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/SPP2",
  "scraped_at": "2025-08-17 00:34:08",
  "test_cases": [
    {
      "input": "7 5 0\r\n1 1 2 3 5\r\n2 1 1\r\n10 5 1\r\n1 1 2 3 5\r\n2 1 1\r\n10 2 1 2",
      "expected_output": "Case 1: 13\r\nCase 2: 76",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "8 8 7\n9 10 10 2 10\n2 1 6\n5 6 5\n5 6 7 10 5\n9 10 2\n2 5 8 9",
      "expected_output": "0\n0\n0\n0\n0\n0\n0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "10 9 10\n7 3 9 8 6\n9 10 9\n4 7 10\n2 2 7 7 6\n3 7 8\n7 7 4 9",
      "expected_output": "0\n0\n0\n0\n0\n0\n0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "5 4 2\n1 8 7 1 5\n2 7 6\n10 5 5\n3 3 6 3 1\n3 7 4\n9 8 10 3",
      "expected_output": "0\n0\n0\n0\n0\n0\n0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "82 28 23\n39 64 54 61 97\n95 33 74\n81 5 69\n72 64 82 1 95\n77 78 87\n23 11 11 77",
      "expected_output": "0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "62 9 37\n28 10 62 89 10\n100 77 5\n41 25 5\n14 43 39 98 51\n68 73 19\n15 20 5 57",
      "expected_output": "0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "41 77 17\n89 45 8 39 8\n1 94 47\n88 23 73\n2 22 78 8 68\n65 77 82\n75 71 42 53",
      "expected_output": "0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "86 38 82\n98 63 62 57 1\n34 41 83\n40 9 23\n92 76 73 77 79\n83 58 35\n52 41 70 54",
      "expected_output": "0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "29 66 10\n54 14 42 4 17\n85 15 52\n82 73 27\n12 6 20 75 79\n33 100 18\n13 12 20 69",
      "expected_output": "0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "25 54 19\n22 35 18 44 29\n34 13 46\n8 27 7\n10 53 31 43 30\n34 15 10\n51 8 16 26",
      "expected_output": "0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "24 52 40\n6 45 49 51 38\n24 31 19\n10 34 17\n49 40 20 42 36\n27 12 43\n9 22 41 46",
      "expected_output": "0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "27 18 11\n41 17 30 7 9\n36 36 40\n19 38 39\n20 41 43 8 38\n13 22 23\n45 30 41 16",
      "expected_output": "0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "53 20 41\n26 51 8 48 46\n29 7 5\n33 7 48\n15 20 26 39 19\n19 17 11\n46 36 33 25",
      "expected_output": "0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "6 40 39\n44 42 24 33 7\n5 28 51\n20 37 28\n15 38 54 24 5\n5 47 15\n7 34 8 17",
      "expected_output": "0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "46 9 48\n19 40 39 32 10\n38 27 7\n27 46 48\n52 39 15 23 43\n43 46 7\n9 24 23 5",
      "expected_output": "0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "28 34 24\n40 45 23 12 38\n13 30 14\n19 43 35\n20 33 11 24 32\n47 50 54\n48 10 48 46",
      "expected_output": "0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "109 109 109\n109 109 109 109 109\n109 109 109\n109 109 109\n109 109 109 109 109\n109 109 109\n109 109 109 109",
      "expected_output": "0\n0\n0\n0\n0\n0\n0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "109 109 109\n109 109 109 109 109\n109 109 109\n109 109 109\n109 109 109 109 109\n109 109 109\n109 109 109 109",
      "expected_output": "0\n0\n0\n0\n0\n0\n0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 109 108\n1 2 1 109 1\n109 108 1\n2 108 1\n108 2 108 2 2\n2 109 109\n109 2 108 1",
      "expected_output": "0\n0\n0\n0\n0\n0\n0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "109 2 108\n1 109 2 108 109\n2 108 2\n2 2 108\n1 1 109 109 109\n109 109 108\n109 108 1 2",
      "expected_output": "0\n0\n0\n0\n0\n0\n0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:55",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:38:00"
}
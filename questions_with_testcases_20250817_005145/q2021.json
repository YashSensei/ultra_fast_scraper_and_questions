{
  "problem_code": "problems",
  "title": "STUDENTS",
  "tags": [],
  "text": "Professor X wants to position N (1 ≤ N ≤ 100,000) girls and boys in a single row to present at the annual fair.Professor has observed that the boys have been quite pugnacious lately; if two boys too close together in the line, they will argue and begin to fight, ruining the presentation. Ever resourceful, Professor calculated that any two boys must have at least K (0 ≤ K < N) girls between them in order to avoid a fight.Professor would like you to help him by counting the number of possible sequences of N boys and girls that avoid any fighting. Professor considers all boys to be the same and all girls to be the same; thus, two sequences are only different if they have different kinds of students in some position.InputFirst line contains C (1 ≤ C ≤ 20) the number of test cases.Next C lines contain N and K.OutputA single integer representing the number of ways Professor could create such a sequence of students. Since this number can be quite large, output the result modulo 5000011.SampleInput1\r\n4 2Output6ExplanationThe possible sequences are GGGG, BGGG, GBGG, GGBG, GGGB, or BGGB.",
  "sample_input": "Input1\r\n4 2Output6",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/AU7_5",
  "scraped_at": "2025-08-17 00:33:43",
  "test_cases": [
    {
      "input": "Input1\r\n4 2Output6",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3\n4\n6\n10",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n10\n2\n10\n3\n4",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n4",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "13\n99781864\n76218899\n22235856\n59491589\n25981886\n1838075\n57479894\n50387356\n6125923\n6157358\n97822732\n26679351\n56559646",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "11\n21654155\n20777641\n51501670\n4585851\n56223478\n41097962\n50616089\n26369803\n93144886\n64695450\n105449",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "15\n34541966\n40841986\n94436167\n34690368\n29769385\n21382146\n84319352\n66418802\n30159529\n81082614\n52709933\n34112651\n18939144\n43773865\n25868973",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "10\n12078274\n41670233\n76697149\n93117207\n77506828\n35620562\n97665758\n87322766\n46567873\n50692319",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "17\n4466681\n20226559\n43613900\n4403142\n83644610\n32926214\n64593167\n5767390\n37423385\n79750796\n91628769\n84113574\n84714808\n85679003\n28725781\n59968615\n53652358",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "55\n51891\n3449\n37742\n44706\n33424\n26964\n10046\n36939\n59964\n43885\n2041\n19062\n93431\n15776\n48414\n93297\n10140\n18397\n48658\n74019\n33208\n83782\n75344\n95652\n40898\n37818\n25579\n72442\n15515\n65877\n42200\n52129\n54687\n63563\n60497\n95320\n97991\n69857\n91785\n11960\n34751\n41504\n48440\n84657\n24010\n26207\n90084\n29621\n27423\n80529\n55611\n77372\n51898\n71262\n39649",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "46\n52469\n46232\n95737\n84876\n46848\n87994\n36744\n72600\n7528\n43409\n13078\n17609\n27891\n49236\n8567\n33135\n14742\n29128\n53987\n93666\n34618\n45787\n53830\n20002\n44659\n64077\n54718\n71026\n63576\n62029\n32865\n85185\n9373\n51537\n74995\n95403\n35494\n63346\n77803\n23457\n76524\n69767\n73689\n59832\n92717\n9779",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "51\n63599\n48243\n98307\n33658\n63454\n4659\n751\n78764\n35427\n35730\n53586\n63978\n96359\n50819\n57400\n55860\n76253\n3264\n37114\n66535\n15878\n80895\n36341\n10282\n62162\n65024\n78072\n29055\n23643\n24955\n78188\n47938\n91544\n95542\n65898\n27920\n95779\n96261\n46853\n18011\n75752\n49585\n21245\n20764\n53734\n5134\n70346\n12323\n44160\n48515\n74529",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "74\n33108\n33666\n22014\n23243\n57627\n11262\n51174\n31676\n87260\n13533\n66776\n16607\n12146\n10772\n75440\n11240\n48467\n1710\n82531\n35363\n22400\n52506\n66202\n99103\n89320\n6258\n6201\n49916\n55607\n76317\n37894\n21874\n69527\n78016\n96150\n36125\n35953\n3286\n70120\n89228\n73870\n56779\n47467\n36021\n53009\n96290\n75838\n51507\n19932\n45480\n52471\n29293\n35373\n34881\n46039\n83434\n35341\n2548\n97326\n11290\n31489\n15222\n5178\n99167\n27742\n58092\n77037\n57548\n18771\n79433\n81281\n25127\n66734\n63340",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "56\n15687\n98023\n76600\n76814\n51197\n34163\n68920\n41917\n78389\n85808\n16847\n8266\n40892\n52347\n75597\n13335\n99775\n57441\n64940\n99671\n39107\n66947\n62669\n85902\n45224\n73771\n14795\n48137\n16348\n44712\n47043\n8358\n96703\n89510\n85435\n76527\n22223\n93697\n88766\n5434\n14824\n72355\n63062\n22266\n823\n25151\n14467\n96705\n52062\n49655\n32249\n7094\n41050\n33269\n43632\n85437",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "45\n78794\n83708\n28875\n35362\n27029\n99948\n2412\n80727\n52974\n20055\n21421\n91897\n53191\n88067\n68536\n58699\n1526\n89070\n44307\n2891\n58956\n46983\n58148\n92316\n51936\n95625\n33082\n98813\n79026\n41233\n95883\n9808\n37409\n24215\n4799\n25349\n31352\n74944\n36720\n91102\n63738\n80413\n51352\n85591\n10755",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "91\n76734\n9361\n3299\n88805\n9347\n19373\n19695\n37878\n90102\n84367\n98868\n29187\n48152\n3965\n65950\n26402\n69200\n4298\n49637\n14830\n99050\n29104\n92620\n20225\n62311\n13505\n75754\n77377\n59281\n80834\n40376\n58539\n71103\n39273\n93073\n49928\n27468\n63986\n63787\n93927\n61381\n73530\n25210\n75778\n19568\n15837\n89231\n1240\n48870\n31782\n71061\n92081\n70662\n44843\n2200\n8852\n17036\n71304\n96165\n31064\n91239\n92727\n84356\n59061\n47033\n97955\n55965\n17335\n47542\n99887\n69616\n72414\n68609\n83709\n5147\n18546\n7627\n72173\n50746\n52284\n90967\n58823\n38452\n31504\n67679\n87146\n27659\n69985\n10541\n16239\n36724",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "100\n68177717\n5986491\n21434017\n84051611\n87777730\n28569475\n50976397\n84002847\n39920369\n96398906\n28581927\n8549625\n40385603\n49275190\n47838581\n64979965\n27807903\n70542995\n52499177\n12747729\n47958970\n43023825\n7090963\n11828503\n55936236\n13591210\n87788141\n76268136\n58326795\n94335380\n43770315\n86847133\n24319218\n58314272\n41080778\n84834475\n2728868\n43388837\n57664480\n14322440\n6434591\n14120993\n30899418\n19158447\n84117890\n58529650\n80303048\n75824775\n29962686\n75175332\n59558198\n24073773\n56951061\n68989910\n93166230\n90370966\n82470619\n28627665\n55677388\n69731820\n11114867\n87673320\n35281691\n37656640\n67269378\n95903299\n860639\n30039565\n4092052\n75301154\n56718587\n34552724\n33911536\n2069474\n70484428\n4816780\n7748671\n51948536\n79638613\n83444852\n19810790\n86239814\n49289500\n95281474\n93954367\n64816097\n59473958\n70506149\n12431894\n54564589\n30963752\n13018569\n69695464\n87180947\n29041814\n29511050\n43122780\n27795292\n10913585\n69076677",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "100\n68350949\n78183232\n79366610\n16029584\n66659804\n96616652\n36179809\n13836696\n80089929\n150775\n73796176\n11576026\n84874882\n15403493\n45987000\n136458\n12204000\n17588188\n52517507\n51243778\n95541303\n27991827\n3945798\n38768655\n4441106\n65789645\n86305195\n37443188\n4236763\n29073004\n56642805\n70370334\n78663475\n84889973\n30399228\n80040708\n73720707\n89672171\n62579477\n78035775\n61572995\n58014418\n38401052\n86789355\n35984693\n70927600\n15728057\n86947828\n10832301\n39103450\n72501635\n97223376\n49919787\n92569441\n48005465\n11037244\n96548987\n40781011\n16664826\n91936543\n83392328\n13086134\n53688871\n15142553\n68976729\n94288805\n34376480\n14444804\n89061518\n7564607\n67036804\n19119888\n74088826\n15800175\n60403154\n46187134\n17035732\n76419091\n74511658\n1138931\n45883348\n8621376\n28771790\n22602672\n57910030\n79282112\n15229446\n80024515\n14169576\n96488192\n49854995\n4956512\n36143356\n14936600\n50948977\n69061190\n6104913\n31999047\n74804065\n23912422",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "2\n90690218\n1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 2)"
    },
    {
      "input": "2\n11848332\n5451092",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 2)"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:51",
  "total_test_cases": 20
}
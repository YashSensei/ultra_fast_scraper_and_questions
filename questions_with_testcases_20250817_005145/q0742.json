{
  "problem_code": "problems",
  "title": "Count on a tree",
  "tags": [],
  "text": "You are given a tree withNnodes. The tree nodes are numbered from1toN. Each node has an integer weight.We will ask you to perform the following operation:u v k: ask for the kth minimum weight on the path from nodeuto nodevInputIn the first line there are two integersNandM. (N, Mâ‰¤ 100000)In the second line there areNintegers. The ith integer denotes the weight of the ith node.In the nextN-1lines, each line contains two integersuv, which describes an edge (u,v).In the nextMlines, each line contains three integersuvk, which means an operation asking for the kth minimum weight on the path from nodeuto nodev.OutputFor each operation, print its result.ExampleInput:8 5\r\n105 2 9 3 8 5 7 7\r\n1 2\r\n1 3\r\n1 4\r\n3 5\r\n3 6\r\n3 7\r\n4 82 5 12 5 22 5 32 5 47 8 2Output:2891057",
  "sample_input": "Input:8 5\r\n105 2 9 3 8 5 7 7\r\n1 2\r\n1 3\r\n1 4\r\n3 5\r\n3 6\r\n3 7\r\n4 82 5 12 5 22 5 32 5 47 8 2Output:2891057",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/COT",
  "scraped_at": "2025-08-17 00:33:07",
  "test_cases": [
    {
      "input": "8 5\r\n105 2 9 3 8 5 7 7\r\n1 2\r\n1 3\r\n1 4\r\n3 5\r\n3 6\r\n3 7\r\n4 82 5 12 5 22 5 32 5 47 8 2",
      "expected_output": "2891057",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1 10\n4 10 3 1 5 5 2 5\n5 3\n7 8\n1 3\n10 8\n6 1\n5 6\n2 1 4 8 6 5 6 10 3 10 6 2",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "8 9\n10 7 1 1 4 8 2 9\n1 9\n10 6\n7 6\n4 1\n2 5\n1 3\n2 10 6 6 8 9 6 8 1 2 1 3",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "1 10\n9 7 5 1 3 5 8 10\n7 1\n4 7\n10 7\n7 4\n2 4\n4 5\n2 10 8 10 4 6 4 7 2 1 5 5",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "60 98\n44 92 9 9 58 71 69 49\n60 20\n77 30\n30 80\n100 38\n76 24\n77 55\n11 96 55 73 35 81 74 57 83 4 76 20",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "84 98\n2 87 40 67 68 86 82 11\n85 89\n44 38\n5 73\n6 60\n100 28\n100 78\n16 81 42 94 60 13 52 67 14 61 97 49",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "93 23\n9 97 39 99 65 23 79 10\n79 14\n89 95\n47 31\n70 43\n23 88\n1 98\n45 100 99 58 17 100 59 95 26 92 68 76",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "81 89\n71 4 15 45 37 20 93 61\n67 48\n56 69\n56 37\n64 94\n49 19\n88 89\n41 48 96 53 7 47 67 63 79 64 4 22",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "51 36\n71 76 41 71 92 67 96 18\n81 56\n93 74\n75 87\n86 55\n2 31\n81 25\n4 77 31 61 7 5 65 45 34 67 29 85",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "375 323\n243 375 332 218 448 121 202 225\n399 252\n187 297\n363 321\n215 255\n266 244\n477 70\n123 404 319 75 118 357 276 478 267 274 431 259",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "356 101\n290 151 155 483 167 331 319 244\n125 146\n489 214\n380 500\n111 432\n199 376\n405 236\n75 328 496 367 233 224 356 118 223 457 86 251",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "105 343\n169 415 141 427 228 394 167 392\n360 324\n468 266\n349 134\n339 183\n267 245\n132 312\n438 273 320 106 457 432 218 350 63 359 355 397",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "75 232\n138 115 61 416 392 496 168 432\n237 160\n382 349\n169 314\n279 348\n315 322\n304 353\n327 467 87 459 60 351 299 257 441 330 123 392",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "321 354\n214 429 154 432 158 122 232 430\n271 472\n335 258\n393 350\n318 224\n468 327\n232 74\n364 269 246 220 299 337 276 454 175 398 101 437",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "62 403\n159 177 209 118 74 123 171 55\n188 269\n419 360\n170 52\n380 317\n215 350\n317 154\n445 307 438 426 182 447 161 348 161 260 379 365",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "486 230\n148 301 156 306 498 150 96 236\n494 113\n186 500\n156 50\n448 283\n387 130\n320 299\n206 320 369 239 222 96 367 278 78 158 147 114",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1\n2 2 999 999 999 1 999 2\n2 2\n999 1000\n999 999\n999 1000\n999 1\n1 1\n999 2 1000 1 1000 2 1 2 999 999 999 2",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 999\n2 999 1 999 1 1 2 2\n999 999\n2 999\n1000 999\n1000 1\n999 999\n999 1000\n1 2 999 1000 2 1000 1 2 1000 1 1 999",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:47",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:36:42"
}
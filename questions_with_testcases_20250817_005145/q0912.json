{
  "problem_code": "problems",
  "title": "A HUGE TOWER",
  "tags": [],
  "text": "The ancient Babylonians decided to build a huge tower. The tower consists ofNcubic building blocks that are stacked one onto another. The Babylonians gathered many building blocks of various sizes from all over the country. From their last unsuccessful attempt they have learned that if they put a large block directly onto a much smaller block, the tower will fall.Task specificationEach two building blocks are different, even if they have the same size. For each building block you are given its side length. You are also given an integerDwith the following meaning: you are not allowed to put block A directly onto block B if the side length of A is strictly larger thanDplus the side length of B.Compute the number of different ways in which it is possible to build the tower usingallthe building blocks. Since this number can be very large, output the result modulo 109+ 9.Input specificationThe first line of the input contains two positive integersNandD: the number of building blocks and the tolerance respectively.The second line containsNspace-separated integers; each represents the size of one building block.ConstraintsAll numbers in the input files are positive integers not exceeding 109.Nis always at least 2.In test cases worth 70 pointsNwill be at most 70.Out of those, in test cases worth 45 points,Nwill be at most 20.Out of those, in test cases worth 10 points,Nwill be at most 10.For some of the test cases the total number of valid towers will not exceed 1,000,000. These test cases are worth 30 points in total.For the last six test cases (worth 30 points) the value ofNis larger than 70. No upper bound onNis given for these test cases.Output specificationOutput a single line containing a single integer: the number of towers that can be built, modulo 1,000,000,009.Examplesinput:4 1\r\n1 2 3 100output:4We can arrange the first three blocks in any order, except for 2, 1, 3 or 1, 3, 2. The last block has to be at the bottom.input:6 9\r\n10 20 20 10 10 20output:36We are not allowed to put a cube of size 20 onto a cube of size 10. There are six ways to order the cubes of size 10, and six ways to order the cubes of size 20.",
  "sample_input": "input:4 1\r\n1 2 3 100output:4",
  "sample_output": "input:6 9\r\n10 20 20 10 10 20output:36",
  "link": "https://www.spoj.com/problems/CTOI10D3",
  "scraped_at": "2025-08-17 00:33:05",
  "test_cases": [
    {
      "input": "input:4 1\r\n1 2 3 100output:4",
      "expected_output": "input:6 9\r\n10 20 20 10 10 20output:36",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4 6\nerqbodo 7\n10 4 9 8 10\n4 9 9 mwmlzrkt",
      "expected_output": "0\n0\n0\n0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "3 9\nrvokse 2\n1 3 1 2 5\n10 6 10 rbdva",
      "expected_output": "0\n0\n0\n0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "7 3\nxnrxb 3\n3 4 4 1 10\n6 1 6 lena",
      "expected_output": "0\n0\n0\n0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "15 74\nl 72\n20 66 70 49 26\n51 59 1 metg",
      "expected_output": "0\n0\n0\n0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "60 83\njjhusd 82\n48 43 49 37 87\n36 8 30 tgxfmszc",
      "expected_output": "0\n0\n0\n0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "86 20\nspuxxl 66\n61 75 91 27 25\n74 84 12 nehf",
      "expected_output": "0\n0\n0\n0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "82 23\nnyvjpm 35\n65 68 78 7 74\n40 26 34 wqiynjzrn",
      "expected_output": "0\n0\n0\n0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "18 52\nxznojo 16\n6 14 86 20 12\n83 55 25 suzrizwcf",
      "expected_output": "0\n0\n0\n0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "84 133\njwy 182\n247 106 396 492 438\n245 228 363 gxbrunbbxcc",
      "expected_output": "0\n0\n0\n0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "64 285\nssmeavh 182\n360 281 238 184 393\n466 283 123 qnkuiagu",
      "expected_output": "0\n0\n0\n0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "452 395\npqhs 408\n230 384 402 309 432\n105 335 282 mamfl",
      "expected_output": "0\n0\n0\n0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "360 428\nwrhi 490\n349 453 423 99 228\n327 273 287 gob",
      "expected_output": "0\n0\n0\n0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "304 224\niq 199\n340 328 288 171 222\n415 339 277 kqjt",
      "expected_output": "0\n0\n0\n0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "87 339\ndbvfxpg 81\n216 271 178 241 254\n139 185 153 sepswewbdbl",
      "expected_output": "0\n0\n0\n0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "70 489\nksji 469\n368 193 324 486 158\n325 402 409 bbpo",
      "expected_output": "0\n0\n0\n0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\nh 1000\n1000 1000 1000 1000 1000\n1000 1000 1000 atjtuwsg",
      "expected_output": "0\n0\n0\n0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\ntwe 1000\n1000 1000 1000 1000 1000\n1000 1000 1000 vrmozos",
      "expected_output": "0\n0\n0\n0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "999 999\novnd 1000\n1000 1000 999 1000 1\n999 2 1000 ad",
      "expected_output": "0\n0\n0\n0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 1\njfcd 2\n1000 1 999 1000 999\n2 999 2 t",
      "expected_output": "0\n0\n0\n0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:48",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:36:48"
}
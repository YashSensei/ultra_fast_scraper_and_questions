{
  "problem_code": "problems",
  "title": "Elegant Diamond",
  "tags": [],
  "text": "ProblemThe king has hired you to make him an elegant diamond. An elegant diamond is a two-dimensional object made out of digits that's symmetric about a horizontal and a vertical axis. For example, the following four shapes are elegant diamonds:2       8      3     7\r\n  3 3     8 8    2 2\r\n 4 1 4     8      3\r\n  3 3\r\n   2These three shapes are diamonds, but are not elegant:2       1        3\r\n 1 1     1 2      1 1\r\n  1     1 1 1    3 1 3\r\n         2 1      1 1\r\n          1        2These three shapes are not diamonds:1     2     8   8\r\n 1 1   222      0\r\n        2     00000The king will start by giving you a diamond, which may not be elegant. Your job is to make it elegant byenhancingit, adding digits on to make a bigger diamond. Because you don't want to spend too much money, you want to do it with as littlecostas possible.DefinitionsAdiamond of sizekis 2k-1 lines of digits, 0-9, separated by single spaces, organized in the following way:Line i (1 ≤ i ≤ k) contains k-i spaces, then i digits separated by single spaces.Line i (k < i < 2k) contains i-k spaces, then 2k-i digits separated by single spaces.Anelegant diamond of sizekis a diamond of size k with the following two symmetry properties:Horizontal symmetry: Let cibe the number of digits on line i. The jthdigit on line i (where j=1 for the first digit) must be the same as the ci+1-jthdigit.Vertical symmetry: The jthdigit on line i (where i=1 for the first line) must be the same as the jthdigit on line 2k-i.A diamond of size k can beenhancedby adding digits to it. The result of enhancing a diamond of size k has the following properties:The result is a diamond of size ≥ k.The original diamond is part of the result. In other words, there exist some X and some Y such that, for all values of i and j such that the jthcharacter of the ithline of the original is a digit (as opposed to a space), the j+Xthcharacter on the i+Ythline of the result is also a digit and it's the same as the jthcharacter on the ithline of the original.Thecostof enhancing a diamond is equal to the number of digits in the result of the enhancement, minus the number of digits in the original diamond.InputThe first line of the input gives the number of test cases,T.Ttest cases follow. Each test case consists of a single integerkin a line on its own, followed by a diamond of sizek.OutputFor each test case, output one line containing \"Case #x: y\", where x is the case number (starting from 1) and y is the minimum cost required to enhance the given diamond into an elegant diamond. If the diamond is already elegant, y=0.Limits1 ≤T≤ 100.1 ≤k≤ 51.SampleInput4\r\n1\r\n0\r\n2\r\n 1\r\n2 2\r\n 1\r\n2\r\n 1\r\n1 2\r\n 1\r\n3\r\n  1\r\n 6 3\r\n9 5 5\r\n 6 3\r\n  1OutputCase #1: 0\r\nCase #2: 0\r\nCase #3: 5\r\nCase #4: 7ExplanationThere are four cases. The first two cases start as elegant diamonds of size 1 and 2, respectively, and don't need to be enhanced; so the cost is 0. The third case can be enhanced to look like:3\r\n 1 1\r\n1 2 1\r\n 1 1\r\n  3There are several possible enhancements, but this is one with the lowest possible cost, which is 5.  n the fourth case we can enhance the diamond into the following elegant diamond for a cost of 7:9\r\n  1 1\r\n 6 3 6\r\n9 5 5 9\r\n 6 3 6\r\n  1 1\r\n   9",
  "sample_input": "2       8      3     7\r\n  3 3     8 8    2 2\r\n 4 1 4     8      3\r\n  3 3\r\n   2",
  "sample_output": "2       1        3\r\n 1 1     1 2      1 1\r\n  1     1 1 1    3 1 3\r\n         2 1      1 1\r\n          1        2",
  "link": "https://www.spoj.com/problems/GCJ102A",
  "scraped_at": "2025-08-17 00:33:47",
  "test_cases": [
    {
      "input": "2       8      3     7\r\n  3 3     8 8    2 2\r\n 4 1 4     8      3\r\n  3 3\r\n   2",
      "expected_output": "2       1        3\r\n 1 1     1 2      1 1\r\n  1     1 1 1    3 1 3\r\n         2 1      1 1\r\n          1        2",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "6 4 8 4\n6 1 4 7 10 1\n3 4 9 5 9\n1 10\n5",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "1 7 5 2\n6 1 9 1 1 9\n10 8 1 5 1\n9 5\n5",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "4 9 3 4\n9 4 10 4 9 5\n4 6 2 8 5\n3 7\n2",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "96 59 24 83\n39 41 71 86 89 43\n92 60 80 92 14\n95 14\n3",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "24 78 97 24\n59 71 7 47 41 32\n45 65 59 98 11\n82 89\n63",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "35 71 64 21\n23 94 100 93 51 24\n44 78 86 89 66\n86 61\n91",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "4 25 90 99\n38 72 51 82 9 1\n42 25 2 20 17\n72 82\n88",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "66 41 77 64\n80 17 42 73 21 36\n20 57 96 12 19\n79 70\n96",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "391 101 97 239\n242 339 95 342 336 93\n224 193 294 380 204\n207 333\n58",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "455 350 466 457\n288 412 82 68 305 321\n151 145 426 147 357\n219 402\n251",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "386 130 170 231\n239 53 272 114 430 94\n163 471 467 377 116\n469 384\n165",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "77 156 214 342\n446 136 308 250 432 316\n324 98 379 93 289\n293 225\n291",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "56 492 104 86\n290 257 344 267 100 201\n249 367 466 267 239\n430 180\n369",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "218 251 327 346\n397 320 216 266 317 314\n277 429 83 359 274\n396 492\n343",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "203 182 496 275\n470 415 221 438 183 385\n345 196 202 316 488\n425 485\n298",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000\n1000 1000\n1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000\n1000 1000\n1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 1000 999 1\n2 1 1000 1 1 1000\n1 999 999 1 999\n1 999\n2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 1 2 1000\n1000 2 1000 2 1 1000\n1000 999 1 1000 2\n999 1\n1000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:52",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Bingo!",
  "tags": [],
  "text": "Albert, Charles and Mary invented a new version of the classical game Bingo. In traditional Bingo the game is presided over by a non-player known as the caller. At the beginning of the game each player is given a card containing a unique combination of numbers from 0 to N arranged in columns and rows. The caller has a bag containing N + 1 balls, numbered from 0 to N. On each turn, the caller randomly selects a ball from the bag, announces the number of the drawn ball to the players, and sets the ball aside so that it cannot be selected again. Each player searches his card for the called number and marks it if he ﬁnds it. The ﬁrst player who marks a complete pre-announced pattern on the card (for example, a full horizontal line) wins a prize.In the Albert-Charles-Mary version, on each turn, the caller draws a ﬁrst ball, returns it to the bag, draws a second ball, returns it to the bag, and then calls out the absolute diﬀerence between the two ball numbers. To generate even more excitement, before the game started a possibly empty subset of balls is removed from the bag, in such a way that at least two balls remain there. They would like to know if every number from 0 to N may still be called out with the new drawing method considering the balls that were left in the bag.InputEach test case is given using exactly two lines. The ﬁrst line contains two integers N and B. The meaning of N was described above (1 ≤ N ≤ 90), while B represents the number of balls which remained in the bag (2 ≤ B ≤ N + 1). The second line contains B distinct integers bi, indicating the balls which remained in the bag (0 ≤ bi ≤ N). The last test case is followed by a line containing two zeros.OutputFor each test case output a single line containing a single uppercase 'Y' if is possible to call out every number from 0 to N, inclusive, or a single uppercase 'N' otherwise.SampleInput6 7\r\n2 1 3 4 0 6 5\r\n5 4\r\n5 3 0 1\r\n5 3\r\n1 5 0\r\n0 0OutputY\r\nY\r\nN",
  "sample_input": "Input6 7\r\n2 1 3 4 0 6 5\r\n5 4\r\n5 3 0 1\r\n5 3\r\n1 5 0\r\n0 0OutputY\r\nY\r\nN",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/MBINGO",
  "scraped_at": "2025-08-17 00:33:15",
  "test_cases": [
    {
      "input": "Input6 7\r\n2 1 3 4 0 6 5\r\n5 4\r\n5 3 0 1\r\n5 3\r\n1 5 0\r\n0 0OutputY\r\nY\r\nN",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4 8\njodkcv 1\n8 6 2 2 5 8 1\n10 5\n2 9 5 8\n1 2\n3 4 4\n4 8\n9 tyx\ni\ny",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "1 7\nrgq 6\n3 3 8 3 8 7 10\n4 9\n1 7 5 5\n5 6\n5 9 6\n8 1\n2 dbn\ni\nj",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "7 4\ntl 7\n7 2 3 7 7 9 5\n5 9\n6 3 5 1\n7 5\n4 6 2\n8 8\n9 w\nj\nne",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "85 78\nfrlrrl 42\n90 63 68 35 2 50 12\n41 64\n52 27 55 8\n43 78\n61 40 54\n55 56\n83 p\ns\nph",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "25 89\nmnxfn 37\n22 54 25 63 41 65 11\n85 63\n24 86 41 58\n80 75\n42 47 60\n26 49\n51 erd\nbr\nw",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "59 18\nnwpdt 21\n60 73 24 65 87 54 38\n47 38\n46 27 51 32\n65 29\n54 3 44\n9 61\n69 utsphy\nx\nqm",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "90 45\nywdwdh 19\n29 7 6 26 90 63 5\n74 39\n19 65 39 11\n2 73\n57 51 45\n27 69\n52 cdldoy\ndn\nvs",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "83 71\nvk 12\n19 89 31 37 47 64 6\n37 65\n68 62 44 4\n80 27\n18 39 18\n59 21\n10 mli\nut\nig",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "14 18\nkz 34\n37 13 12 25 6 29 8\n21 38\n39 12 41 41\n4 22\n39 13 4\n5 41\n5 igc\nc\nz",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "19 14\nhk 30\n32 32 14 39 45 18 6\n14 34\n28 4 13 28\n30 41\n29 31 42\n9 38\n42 gtgahtl\nt\np",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "19 20\np 21\n41 10 15 29 28 5 23\n14 28\n37 36 32 28\n39 34\n23 45 10\n4 17\n9 gdlp\nq\nz",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "41 13\nihw 31\n39 33 45 36 7 22 10\n4 16\n10 41 33 27\n12 35\n36 13 11\n42 40\n45 qtj\nzn\nkf",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "31 20\noafx 39\n4 26 33 6 7 30 16\n32 25\n4 29 33 36\n42 33\n34 19 4\n4 21\n13 rhpimyg\nl\ns",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "5 18\np 16\n24 45 44 40 17 4 39\n31 4\n29 17 8 14\n26 15\n10 28 44\n4 28\n22 cjkha\nfg\nl",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "6 7\nazfai 43\n44 15 13 37 39 23 33\n23 18\n21 18 15 33\n25 38\n26 30 11\n31 21\n20 xj\nk\ni",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "90 90\nnce 90\n90 90 90 90 90 90 90\n90 90\n90 90 90 90\n90 90\n90 90 90\n90 90\n90 todk\ns\ne",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "90 90\ncqmg 90\n90 90 90 90 90 90 90\n90 90\n90 90 90 90\n90 90\n90 90 90\n90 90\n90 mopokk\nf\nw",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "89 89\nzlsduz 1\n89 90 2 90 1 90 89\n1 89\n90 2 89 90\n2 2\n2 2 1\n1 89\n90 dqzzmug\nc\nz",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "90 90\nx 2\n2 2 1 90 89 89 89\n2 89\n2 1 90 2\n90 1\n1 90 1\n2 2\n2 f\ngm\nwt",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:47",
  "total_test_cases": 20
}
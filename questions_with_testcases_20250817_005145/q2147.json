{
  "problem_code": "problems",
  "title": "Shell game",
  "tags": [],
  "text": "Your program is to play the traditional \"shell\" game (seeShell Game). The game is played as follows:There is a person called an operator; he/she has 3 identical, non-transparent hollow objects - shells, and a metal ball, which he/she places under one of these objects. Then, the operator quickly swaps pairs of shells several times; if shells at positions A and B are swapped, and the ball is under the shell at position A, it moves under the shell at position B. In the end, you have to guess which shell the ball is under.The shells are identical, and positions mean immediate position that you see (left will always denote the leftmost shell, not the shell that was leftmost in the beginning).InputThe first line of input contains one string - \"left\", \"center\" or \"right\", denoting the position of the shell the ball is under in the beginning. The second line contains an integer N<=10, denoting the number of swaps. N lines follow, all of them contain 2 strings - positions of 2 shells which are swapped.OutputOutput position of the shell the ball is under after all swaps are performed.WarningTesting simulates the exact progress of an actual game! There are 10 testcases; in the last one only, N = 10. You're likely to get a WA on this last test case, even if your program seems correct. Remember, it's like an actual game!ExampleInput:left\r\n2\r\nleft right\r\nright centerOutput:centerExplanationIn the beginning, the ball is under the left shell. After swap 1, it's under the right shell. After swap 2, it's under the center shell.",
  "sample_input": "Input:left\r\n2\r\nleft right\r\nright centerOutput:center",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/SHELL",
  "scraped_at": "2025-08-17 00:33:58",
  "test_cases": [
    {
      "input": "left\r\n2\r\nleft right\r\nright center",
      "expected_output": "center",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "enlslhmf\n4\nftgz bpiw\ngyvp dyak",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "rhrljnii\n3\nmmpit poau\nk d",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "qyjfh\n1\nekbhp etr\nbugm vdl",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "oncbhqb\n9\nk txet\nz p",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "lu\n5\nuwu pb\nqvb dme",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "veqp\n10\nbtp wf\nev k",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "bgjlhwb\n1\nzfr qyenq\nqlh vvqf",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "nzpw\n8\nygan lzoa\nvd rbaxjc",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "jqb\n5\ne b\nqg aisn",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "bvpn\n1\ntc ph\nfmepz us",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "gpmvwy\n4\nujrr chvkg\nkrhhy hs",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "gzus\n3\necs qclf\njcdy gxx",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "moc\n1\ntrl lvqft\ntoo dyk",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "uea\n4\nyf jgzms\ne fgp",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "zja\n2\ncvjsi qypc\nu gxr",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "wzlwyavh\n10\nu au\nqql hajo",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "qaraqrvw\n10\ndra xxea\ny zgt",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "pqw\n10\no ow\nhql ow",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "cicwcjsc\n9\nndci a\nbs uwqh",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:52",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:26"
}
{
  "problem_code": "problems",
  "title": "Lost and survived",
  "tags": [],
  "text": "On September 22,2004, Oceanic Flight 815 crashed on a mysterious island somewhere in the pacific.There actually were survivors in the crash, N survivors. The mysterious island kept on moving in space - time, so no rescue reached them.Initially every survivor was on his own. But soon they realized there are these “The Others” (Scientists of damn Dharma Initiative) on this Island too.So to protect themselves from mad Scientists they started uniting into groups after Dr. Shephard said “Live together or die alone”.You have to handle Q queries; which consist of two survivors becoming friends and thereby uniting their respective groups into a larger group.After each query, output the difference between the group of largest size and group of smallest size at that time.If there is only one group, output 0. At first, everyone is in their own group.Also note, if the two survivors in the query are already in the same group, print the current answer, and skip merging groups.Also do comment if you have watched Lost :-pInputThe first line consists of two space separated integers, N and QThe next Q line consists of two integers, A and B, meaning that survivor A and survivor B became friends uniting there groups.OutputOutput Q lines, the answer after each query.1 ≤ N ≤ 1000001 ≤ Q ≤ 100000ExampleInput:5 3\r\n1 2\r\n2 3\r\n5 4Output:1\r\n2\r\n1",
  "sample_input": "Input:5 3\r\n1 2\r\n2 3\r\n5 4Output:1\r\n2\r\n1",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/LOSTNSURVIVED",
  "scraped_at": "2025-08-17 00:34:19",
  "test_cases": [
    {
      "input": "5 3\r\n1 2\r\n2 3\r\n5 4",
      "expected_output": "1\r\n2\r\n1",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "10 4\n2 9\n3 1\n9 7",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "10 5\n6 5\n2 3\n9 5",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "4 8\n5 1\n4 5\n6 10",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "48 63\n10 29\n50 66\n15 80",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "46 98\n15 19\n8 57\n37 22",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "64 15\n38 72\n50 69\n37 19",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "88 37\n47 85\n52 1\n50 78",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "14 56\n49 80\n84 99\n3 75",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "110361 145482\n414418 336834\n107056 50542\n313489 457308",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "288820 405419\n175547 332678\n219623 325543\n149475 351547",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "322875 346554\n295625 136209\n159224 487093\n129513 270834",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "320657 69281\n313866 51844\n127416 105166\n130230 490662",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "470724 125379\n317170 348425\n342191 112720\n428177 119337",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "291571 281433\n149902 102942\n402544 426403\n343769 402124",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "62801 100657\n181827 170787\n350709 200022\n77004 423681",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "999999 1\n1 2\n999999 2\n1000000 999999",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1000000 999999\n1000000 1\n999999 999999\n2 1",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:54",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:50"
}
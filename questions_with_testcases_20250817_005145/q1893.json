{
  "problem_code": "problems",
  "title": "Large Knapsack",
  "tags": [],
  "text": "Theknapsack problemorrucksack problemis a problem in combinatorial optimization: Given a set of items, each with a weight and a value, determine the number of each item to include in a collection so that the total weight is less than or equal to a given limit and the total value is as large as possible. It derives its name from the problem faced by someone who is constrained by a fixed-size knapsack and must fill it with the most valuable items.Just implement 0/1 Knapsack.InputFirst line contains two integers K and N, where K in the maximum knapsack size and N is the number of items. N lines follow where ithline describes ithitem in the form viand wiwhere viis the value and wiis the weight of ithitem.OutputOutput a single number - maximum value of knapsack. (All operations and the answer are guaranteed to fit in signed 32-bit integer.)Time limit changed to 2s on 02.07.11.ExampleInput:10 3\r\n7 3\r\n8 8\r\n4 6Output:11ConstraintsK ≤ 2000000N ≤ 500Vi≤ 107Wi≤ 107",
  "sample_input": "Input:10 3\r\n7 3\r\n8 8\r\n4 6Output:11",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/LKS",
  "scraped_at": "2025-08-17 00:33:40",
  "test_cases": [
    {
      "input": "10 3\r\n7 3\r\n8 8\r\n4 6",
      "expected_output": "11",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5 4\n1 3\n5 5\n6 6",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "1 3\n9 3\n10 7\n1 4",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "6 8\n4 3\n10 6\n9 2",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "86 17\n94 1\n47 71\n38 12",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "81 48\n37 65\n19 94\n24 34",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "28 42\n55 39\n17 4\n31 50",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "42 10\n44 77\n69 26\n18 9",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "58 44\n45 74\n24 56\n75 66",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "135 218\n63 65\n50 144\n156 170",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "99 93\n82 142\n173 222\n121 38",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "124 47\n109 123\n239 198\n32 236",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "215 35\n88 162\n241 179\n156 155",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "118 196\n111 135\n45 217\n206 83",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "121 157\n104 82\n242 176\n107 56",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "114 183\n214 91\n240 44\n169 103",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "500 500\n500 500\n500 500\n500 500",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "500 500\n500 500\n500 500\n500 500",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 1\n2 2\n499 500\n500 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 500\n499 499\n499 499\n500 499",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:51",
  "total_test_cases": 20
}
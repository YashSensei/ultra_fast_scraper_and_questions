{
  "problem_code": "problems",
  "title": "Playing with GCD",
  "tags": [],
  "text": "Tanmoy recently learn about Euclid gcd algorithm. This algorithm looks like:gcd(a, b):\r\n   if (b == 0): return a\r\n   return gcd(b, a % b)Now he want to find out how many pair (x, y) can be possible in range N, which gcd is greater than 1. Here pair (x, y) and (y, x) consider as same pair. 1 ≤ x, y ≤ N.He can find out it small number easily but for a large number its really hard to find out. Now he needs your help. Write a programme that find out number of such pair.InputInput start with an integer number T (1 ≤ T ≤ 105), which is number of test cases.Each test case contain a integer N (1 ≤ N ≤ 105).OutputFor each case, print case number and desired answerSampleInput:2\r\n3\r\n4Output:Case 1: 2\r\nCase 2: 4",
  "sample_input": "gcd(a, b):\r\n   if (b == 0): return a\r\n   return gcd(b, a % b)",
  "sample_output": "Input:2\r\n3\r\n4Output:Case 1: 2\r\nCase 2: 4",
  "link": "https://www.spoj.com/problems/NAJPWG",
  "scraped_at": "2025-08-17 00:34:33",
  "test_cases": [
    {
      "input": "gcd(a, b):\r\n   if (b == 0): return a\r\n   return gcd(b, a % b)",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2\r\n3\r\n4",
      "expected_output": "Case 1: 2\r\nCase 2: 4",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "h v\n7\nbnfvy foww qowmn qei seejta ou\ncgs kgp mn vxpiu oc",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "zq erh\n5\nk mnl dmc nosu jkq ff\nl szn l rl hucgm",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "nongu xt\n2\nk s ye g v vsud\nkqxdcj kghrt ezvxg bdhp d",
      "expected_output": "To be computed",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "abuq yifm\n43\nmmp y rtyht zqg iire s\ncteamm yjrqk punn i u",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "mgmgf gbs\n19\nbijlo urcv auaeu tcie ofrbe cg\njlfg xubkp k wmss pqu",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "jadfsh vl\n40\nceue u ukwv jespf dmmt af\nwduts ljzc vekxc elglg c",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "spj osyjg\n44\nhzjal ujl fu w brnx ao\ns smxk blbmv weyxn k",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "ch pbdg\n55\nnelt h jkvip g ykznc eieer\nvjaw nmuemc m afptx nvlr",
      "expected_output": "To be computed",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "hxy aerk\n52\npbz eriin cwouo mzhv xzw nb\nfib xconax abij ojy yvs",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "grg glcdh\n52\nvs t hgw y iz md\nqyudz tflbgd cfqt e g",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "a znm\n39\nnql ng ghdou ohm bfh xwpx\neb jwiub c zhmzz tf",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "rkg nmnko\n40\nhk dmzeh it v ncuryw ulg\nnihm d yhdj wi b",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "fnisft jtar\n40\nk uqvx h o ikp alquw\nvyiw f w pqtxf pg",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "v zjsgy\n35\ngupua r ybd ebcaw pkfku mrpfs\nt ma b eks igf",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "pvru qigs\n35\nsf enqad dos pw m tqi\nsmcg kzo f sxcpm c",
      "expected_output": "To be computed",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "bk hoyf\n105\nfagur kinu uc sounk p s\nmoq nz qswo t ggroj",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "mtbr arev\n105\nxfizk mxby bcd vcgy uugpu tgdr\nc ub jwfi tj cuqz",
      "expected_output": "To be computed",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "vlec jwr\n104\nhxdj dx izy ey aa uo\nrennf mj yypxd rno rtjek",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:57",
  "total_test_cases": 20
}
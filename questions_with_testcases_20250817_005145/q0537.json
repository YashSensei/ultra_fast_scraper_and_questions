{
  "problem_code": "problems",
  "title": "Maximum Sum",
  "tags": [],
  "text": "You are given a sequence A[1], A[2] ... A[N] (0 ≤ A[i] ≤ 108, 2 ≤ N ≤ 105). There are two types of operations and they are defined as follows:Update:This will be indicated in the input by a 'U' followed by space and then two integers i and x.U i x, 1 ≤ i ≤ N, and x, 0 ≤ x ≤ 108.This operation sets the value of A[i] to x.Query:This will be indicated in the input by a 'Q' followed by a single space and then two integers i and j.Q x y, 1 ≤ x < y ≤ N.You must find i and j such that x ≤ i, j ≤ y and i ≠ j, such that the sum A[i]+A[j] is maximized. Print the sum A[i]+A[j].InputThe first line of input consists of an integerNrepresenting the length of the sequence. Next\r\nline consists of N space separated integers A[i]. Next line contains an integerQ, Q ≤ 105, representing the number of operations. Next Q lines contain the operations.OutputOutput the maximum sum mentioned above, in a separate line, for each Query.ExampleInput:5\r\n1 2 3 4 5\r\n6\r\nQ 2 4\r\nQ 2 5\r\nU 1 6\r\nQ 1 5\r\nU 1 7\r\nQ 1 5Output:7\r\n9\r\n11\r\n12Warning: large Input/Output data, be careful with certain languages",
  "sample_input": "Input:5\r\n1 2 3 4 5\r\n6\r\nQ 2 4\r\nQ 2 5\r\nU 1 6\r\nQ 1 5\r\nU 1 7\r\nQ 1 5Output:7\r\n9\r\n11\r\n12",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/KGSS",
  "scraped_at": "2025-08-17 00:33:15",
  "test_cases": [
    {
      "input": "5\r\n1 2 3 4 5\r\n6\r\nQ 2 4\r\nQ 2 5\r\nU 1 6\r\nQ 1 5\r\nU 1 7\r\nQ 1 5",
      "expected_output": "7\r\n9\r\n11\r\n12",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4\n7\n1\n8\n1",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "3\n3\n10\n6",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "4\n10\n7\n7\n10",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "8\n82628524\n22660057\n4384786\n12965194\n916644\n88031851\n3809393\n26666081",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "10\n43758698\n39590530\n51338836\n86644949\n20995163\n85359384\n7625813\n50914240\n93976328\n86224592",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "20\n76582287\n33471663\n18123739\n56000830\n48554913\n83854310\n72827310\n8237268\n67821443\n62225155\n71239470\n58430780\n78900286\n87779041\n3868965\n95129233\n47758078\n25280643\n10068724\n51805002",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "8\n66311698\n49544859\n44465841\n40486929\n54008910\n67328827\n64059032\n66395583",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "8\n93041035\n49249103\n78952447\n20605153\n66881996\n40011860\n31665418\n66355406",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "30\n38886\n77882\n83484\n41404\n50976\n38537\n2533\n52957\n5227\n20963\n48533\n69762\n53369\n87470\n5661\n29734\n45074\n48262\n45932\n68503\n81788\n65366\n53894\n57770\n12781\n85125\n44579\n71245\n50080\n79450",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "52\n22948\n68640\n13761\n9769\n44815\n4255\n35246\n12766\n20290\n24793\n50402\n90998\n83273\n42437\n60838\n15478\n74235\n80600\n97492\n44843\n74425\n43802\n34570\n12449\n44179\n7587\n84172\n8316\n69757\n99431\n38862\n31244\n16457\n42372\n65816\n93579\n21374\n43653\n15749\n55240\n11540\n50466\n88613\n55687\n6531\n19684\n40925\n38525\n58324\n29911\n89624\n75293",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "54\n42395\n61301\n14875\n6687\n44888\n92559\n9347\n10165\n81174\n25385\n52871\n31390\n6625\n33361\n45988\n82680\n10308\n4554\n41714\n32516\n59800\n45914\n14848\n34581\n49621\n38174\n65463\n74710\n57949\n9848\n53239\n74749\n40658\n38698\n58174\n5632\n12673\n82657\n65064\n78842\n72640\n63085\n29429\n88106\n20037\n82901\n48496\n10310\n66124\n47917\n27253\n56814\n45739\n44060",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "100\n14917\n2480\n52546\n9203\n65821\n94413\n40681\n2211\n55670\n87263\n86307\n73924\n50997\n88072\n75748\n24701\n60063\n46469\n20399\n81554\n75194\n90695\n55214\n72951\n38616\n89538\n34629\n28847\n84483\n35368\n65973\n216\n29674\n59278\n1642\n48733\n51584\n69962\n48570\n33751\n86778\n31643\n58182\n55394\n21507\n37921\n57629\n22881\n32351\n31798\n10301\n28575\n26478\n52721\n22241\n38093\n71495\n10542\n71907\n86397\n9908\n74964\n1079\n14324\n94657\n39133\n92897\n88014\n31004\n50444\n15033\n91096\n18886\n97021\n4749\n55487\n34551\n59627\n75311\n76578\n23714\n82077\n27431\n22272\n81917\n3532\n13795\n39890\n35469\n90393\n12844\n57285\n31595\n23907\n73332\n78444\n26306\n89110\n50090\n65044",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "24\n41387\n8668\n36479\n11617\n65792\n2010\n40889\n1800\n23234\n45892\n34652\n86404\n68841\n53199\n43153\n35889\n24911\n69260\n82651\n50405\n74877\n42927\n97931\n5330",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "42\n67565\n24051\n89708\n1241\n51339\n92579\n64475\n65191\n13760\n5962\n65902\n14641\n7766\n76698\n41393\n76981\n31135\n97222\n57954\n98773\n21143\n58585\n54565\n87809\n29882\n71841\n91587\n33008\n88919\n55572\n47651\n41182\n75377\n39726\n69076\n54404\n94986\n620\n88245\n72909\n63995\n65049",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "44\n22601\n24415\n15119\n44796\n77315\n11736\n29669\n64125\n92119\n38267\n36192\n3073\n60282\n72086\n663\n16570\n97884\n67117\n57709\n65883\n94727\n34595\n50000\n95153\n65900\n65855\n19527\n38861\n6314\n95290\n76858\n57945\n89200\n46931\n95794\n54694\n81684\n20406\n74571\n38305\n559\n74714\n54095\n98990",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "105\n89293927\n35855810\n14576367\n4149379\n64400037\n87567001\n63217655\n73004480\n12662670\n78742463\n36316639\n47566217\n30378044\n47401538\n91929860\n48203845\n74600886\n77160242\n53581786\n80143579\n53535106\n67104121\n54193219\n1452031\n32311149\n94558059\n18154827\n42485384\n90852936\n6036566\n59806772\n79643999\n37899081\n3734004\n11098420\n39667767\n3454496\n76151918\n94851592\n95724786\n94794646\n80438429\n64248083\n38207717\n3435230\n56309008\n904834\n67720707\n65359167\n76513966\n58831999\n75836947\n61748972\n49985621\n33783379\n72422449\n20360241\n4662288\n19432690\n50822005\n77864289\n17577595\n26808619\n28058380\n96908584\n65775396\n95498482\n2148946\n25203408\n1219643\n82735469\n81825430\n29995938\n24754757\n65430212\n12505181\n55369996\n58263387\n32314725\n30151181\n37406621\n36550302\n96879052\n26872609\n85655565\n19661486\n41571478\n62169566\n63941482\n73787612\n17407360\n41068196\n86135433\n93895803\n13310917\n98361864\n93876022\n11156233\n13711963\n61540510\n56530117\n64224979\n78592666\n42751713\n48941309",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "105\n31813868\n99733857\n58611475\n72954712\n986863\n54459290\n61929998\n16303723\n8088629\n86240631\n57198574\n50652316\n37619466\n71398045\n10367194\n17081028\n33611693\n74043880\n86823236\n10747293\n68063297\n3152467\n39479128\n45257874\n23830573\n83044242\n39268244\n13011084\n76204338\n50553363\n47171135\n8498367\n15874457\n2618282\n41936033\n71587652\n19890441\n42249463\n36480254\n51928320\n72023226\n33751875\n35983309\n31974611\n88253791\n84364121\n10763831\n21042515\n99313404\n57066944\n69272342\n67158560\n58040702\n92495512\n12533328\n92715703\n54783565\n69757235\n62972458\n7701873\n28201480\n60262545\n58396848\n2602544\n14698874\n33486940\n65228628\n71707225\n67693312\n28247420\n35763188\n59592628\n92727277\n91189609\n44069659\n40630325\n57708192\n86900466\n84952205\n84545704\n26971785\n43332293\n52859658\n31732842\n62253836\n32878592\n71026026\n90212823\n17842896\n52111982\n87485686\n68474944\n40686737\n83736510\n52868619\n21766896\n21418052\n23465223\n84971765\n97195838\n11018069\n15263814\n50767191\n30122673\n66626328",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "2\n1\n54168197",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 2)"
    },
    {
      "input": "105\n1\n64679637\n100000000\n1\n89400179\n1\n17470887\n51334805\n62662838\n42215232\n100000000\n1\n1\n1\n91991941\n1\n100000000\n25977657\n29395059\n1\n16561253\n1\n1\n100000000\n20729353\n54806048\n100000000\n1\n100000000\n100000000\n100000000\n100000000\n27867019\n100000000\n1\n17674289\n100000000\n83199292\n61008781\n100000000\n20376341\n17125686\n100000000\n100000000\n1\n100000000\n100000000\n1\n70209855\n1\n43499743\n1\n27041785\n1\n1\n1\n1\n1\n100000000\n1\n79460013\n55076344\n1\n1\n100000000\n28095186\n65686798\n1\n91557289\n100000000\n75147680\n51624164\n1\n71161602\n100000000\n21246838\n1\n100000000\n1\n93840583\n100000000\n1\n42260401\n59972971\n1\n1\n100000000\n100000000\n100000000\n1\n80816857\n1\n100000000\n100000000\n1\n100000000\n11362436\n100000000\n38402798\n1\n1\n75496981\n51902245\n100000000\n1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 105)"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:47",
  "total_test_cases": 20
}
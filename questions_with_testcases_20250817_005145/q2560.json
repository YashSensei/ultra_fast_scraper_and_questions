{
  "problem_code": "problems",
  "title": "Dominant Strings",
  "tags": [],
  "text": "Given two stringss1ands2, we say thats1dominatess2if the (multi)set of characters ins1is a proper superset of the (multi)set of characters ins2. For instance, \"acmicpc\" dominates \"camp\", but it does not dominate \"chimp\" or \"macpac\". For a setSof strings, we call the strings inSwhich are not dominated by any string inSthedominant stringsofS(even if they do not dominate any strings inS).Now, your task is simply to find all the dominant strings of a set of strings.InputThe input contains a single set of strings, with one string per line. Each string consists of at least one and at most ten lower-case alphabetic characters. There will be at most 15000 strings, and no two strings will be identical. Input is terminated by end-of-file.OutputOutput consists of all dominant strings in the input set, in alphabetical order, one word per line.ExampleInput:acmicpc\r\ncccp\r\nmacpac\r\nchimp\r\ncampOutput:acmicpc\r\nchimp\r\nmacpac",
  "sample_input": "Input:acmicpc\r\ncccp\r\nmacpac\r\nchimp\r\ncampOutput:acmicpc\r\nchimp\r\nmacpac",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/DOMINST",
  "scraped_at": "2025-08-17 00:34:12",
  "test_cases": [
    {
      "input": "acmicpc\r\ncccp\r\nmacpac\r\nchimp\r\ncamp",
      "expected_output": "acmicpc\r\nchimp\r\nmacpac",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "hekrl\nmwqrnkm\nlya\nfq\nnis",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "s\nvu\nzknhr\nkhkazpe\noehyo",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "qi\njonwaq\ndxaszwukotb\nwn\nrzbze",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "oo\nuwynit\nlhivqphhe\nlyfaw\nbd",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "qsqzzobagwpq\ne\nggogiw\npwq\ndyegck",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "sgr\niijoy\njnttgseci\novh\nvhhocep",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "mkaalefxixj\nb\nlxzcqkfegp\ngwbztg\nkebe",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "yhpcgrtlln\nwxkb\npyoqod\nhdlzj\npupkucf",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "wqaakvpkgym\nvhsk\np\np\nwszgyc",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "detve\nvn\nyrjeortdn\ndgumsbzr\nzsbgixwe",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "gfn\nvw\nuhd\nkedpexdxlh\nlvsu",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "nzizs\nisnyxms\nibwkdzypuptg\nrdkysubqzk\nl",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "wxjfd\notfkdo\nhugdzjjln\nhha\nehxrblor",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "xorzedqrd\nj\nnsu\nusdtuywi\nltqzyq",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "rfyw\npghnsc\nogcw\nycrutjppco\nvcrie",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "xseks\nwvvowx\npecqndgty\nvofef\nqw",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "hpxbm\nak\nswmjegyyzfwp\nmc\ny",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "qesyhkyzwke\netaytnb\nmofenv\nasudlpc\nptfmnzg",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "ekxqykdnrr\nitfoqx\njmlyvtobkrlk\nkthgozx\nbmbojzm",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:53",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Electrophoretic",
  "tags": [],
  "text": "Scientist Frank, majoring in electrochemistry, has developed line-shaped strange electrodes called F-electrodes.\r\nDuring being activated, each F-electrode causes a special potential on and between the two lines touching the\r\nF-electrode's endpoints at a right angle. Then electrically-charged particles located inside the potential area get\r\nto move in the direction parallel to the potential boundary (i.e. perpendicular to the F-electrode), either toward or\r\nagainst F-electrode. The moving direction can be easily controlled between the two possibles; it is also possible\r\nto get particles to pass through F-electrodes. In addition, unlike ordinary electrodes, F-electrodes can affect\r\nparticles even infinitely far away, as long as those particles are located inside the potential area. On the other\r\nhand, two different F-electrodes cannot be activated at a time, since their potentials conflict strongly.We can move particles on our will by controlling F-electrodes. However, in some cases, we cannot lead them to\r\nthe desired positions due to the potential areas being limited. To evaluate usefulness of F-electrodes from some\r\naspect, Frank has asked you the following task: to write a program that finds the shortest distances from the\r\nparticles' initial positions to their destinations with the given sets of F-electrodes.InputThe input consists of multiple test cases. The first line of each case contains N(1 ≤ N ≤ 100) which represents\r\nthe number of F-electrodes. The second line contains four integers xs, ys, xt and yt, where (xs, ys) and (xt , yt)\r\nindicate the particle’s initial position and destination. Then the description of N F-electrodes follow. Each line\r\ncontains four integers Fxs, Fys, Fxtand Fyt, where (Fxs, Fys) and (Fxt, Fyt) indicate the two endpoints of an\r\nF-electrode. All coordinate values range from 0 to 100 inclusive.The input is terminated by a case with N = 0.OutputYour program must output the case number followed by the shortest distance between the initial position to\r\nthe destination. Output \"Impossible\" (without quotes) as the distance if it is impossible to lead the elementary\r\nparticle to the destination. Your answers must be printed with five digits after the decimal point.ExampleInput:2\r\n2 1 2 2\r\n0 0 1 0\r\n0 1 0 2\r\n0Output:Case 1: 3.00000",
  "sample_input": "Input:2\r\n2 1 2 2\r\n0 0 1 0\r\n0 1 0 2\r\n0Output:Case 1: 3.00000",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/ELECTRO",
  "scraped_at": "2025-08-17 00:34:26",
  "test_cases": [
    {
      "input": "2\r\n2 1 2 2\r\n0 0 1 0\r\n0 1 0 2\r\n0",
      "expected_output": "Case 1: 3.00000",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1\n4",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "3\n1\n1\n2",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "2\n2\n3",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "7\n50542564\n61962470\n80997337\n92863756\n27840076\n90500098\n86994824",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "5\n57530115\n62272969\n34511301\n38592340\n23396063",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "7\n49696699\n90699782\n25195688\n72133566\n44003420\n65793785\n36818833",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "10\n65945467\n70355999\n69408042\n47469980\n56756622\n51436793\n82935807\n66762760\n81272355\n68686610",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "10\n97524926\n41397234\n92834981\n77527285\n80024414\n67913260\n80808108\n36054981\n80034536\n58870778",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "58\n36268\n57145\n30244\n3948\n5998\n50295\n84288\n72113\n47065\n8871\n2248\n28269\n96452\n55983\n23939\n46120\n48093\n79474\n63792\n37023\n50784\n43707\n57250\n4940\n38542\n48757\n38479\n71277\n91253\n81606\n73105\n34908\n16099\n93134\n64119\n70539\n40687\n75053\n65654\n45985\n30710\n64732\n17346\n29686\n79654\n49815\n28919\n52306\n56197\n81361\n45631\n5590\n98379\n47826\n60611\n91460\n66798\n8562",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "41\n300\n85478\n52549\n38556\n3248\n81677\n50265\n79672\n80420\n95796\n46782\n63157\n2218\n28124\n53050\n40166\n13190\n57621\n31330\n70562\n43796\n82714\n97677\n93797\n89112\n86452\n56431\n57094\n28636\n51339\n67097\n216\n67013\n71963\n51777\n13408\n87432\n56919\n18464\n42395\n36295",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "39\n29956\n30506\n61477\n20308\n80428\n6126\n2491\n21\n9090\n56327\n76641\n67927\n13825\n96523\n94108\n40127\n18724\n16304\n60547\n32529\n494\n44359\n52088\n51491\n51636\n60300\n74256\n31328\n32162\n10842\n84796\n1724\n3869\n98833\n54849\n68952\n52665\n27785\n5495",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "51\n10702\n48967\n29326\n74924\n7821\n89878\n89284\n13809\n33489\n27639\n71753\n82334\n94653\n60489\n15615\n11533\n9264\n16470\n9994\n64790\n83517\n66400\n27520\n49523\n38647\n8065\n20051\n90195\n23046\n17302\n12429\n74105\n14685\n91343\n70401\n36107\n98365\n42802\n16242\n6276\n30174\n12091\n58136\n28867\n16879\n82944\n2043\n86360\n44366\n3341\n99029",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "77\n67297\n90726\n5854\n89832\n60058\n27926\n47244\n85805\n31264\n7175\n2580\n80816\n98546\n64879\n71755\n46858\n50424\n79714\n29528\n18315\n81516\n37677\n91837\n60258\n95756\n63418\n99860\n32505\n89992\n84233\n5044\n50766\n48460\n84499\n43514\n54250\n34109\n4283\n13699\n59627\n26450\n71330\n45407\n24780\n25773\n95340\n11040\n48479\n55707\n33363\n6960\n83869\n99736\n41536\n51321\n39327\n78912\n93331\n26169\n44084\n92924\n67752\n7280\n49140\n21002\n19645\n30543\n53008\n17463\n13760\n95474\n62205\n17191\n27345\n54366\n1124\n33326",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "64\n48853\n6987\n58824\n52916\n91612\n76944\n54958\n28866\n3015\n28012\n97685\n47422\n16852\n39509\n75240\n95832\n76605\n27421\n93941\n39245\n91501\n22951\n28978\n14599\n92068\n79107\n35394\n42204\n90645\n55578\n27139\n85977\n16660\n34025\n283\n6333\n17181\n45902\n93872\n65421\n46887\n78752\n41235\n77705\n79230\n1172\n38517\n28321\n82171\n9426\n68699\n20245\n79460\n83490\n27476\n33005\n16981\n75811\n95922\n71580\n51817\n14445\n9478\n83169",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "77\n2982\n47703\n38200\n51167\n85006\n94068\n42935\n72291\n40174\n12284\n85560\n40930\n66790\n49781\n70796\n55309\n94172\n9006\n2008\n72606\n84870\n46959\n26775\n69637\n75933\n91418\n38706\n60367\n64141\n42093\n21958\n61826\n61833\n39800\n81542\n57741\n25439\n91568\n92627\n64091\n39005\n57000\n84923\n16458\n1273\n22361\n13959\n63067\n79691\n78112\n40355\n6820\n67741\n77157\n95162\n62155\n56955\n21240\n96019\n31779\n40527\n20191\n59116\n17363\n91077\n38142\n87308\n50889\n67752\n60837\n3118\n76446\n83133\n16069\n61133\n78742\n25316",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "100\n70318649\n33752674\n77359642\n67523997\n18291881\n51015207\n66028408\n64973836\n15891491\n65925342\n52019605\n98420451\n66938162\n20936719\n85719240\n25204796\n40182448\n34972014\n19634818\n28516995\n27768318\n81301208\n46934878\n62758376\n49033506\n1449729\n23305060\n58548902\n20391861\n10028484\n98813419\n90470053\n5866188\n65716914\n25318486\n91879328\n34026904\n62266575\n39434249\n33401632\n97972706\n13021385\n57568744\n3228100\n62459687\n83276806\n61629713\n87586338\n2751513\n51910408\n92531895\n51865583\n68971787\n96974277\n61495308\n16218403\n94226445\n729169\n10665953\n65151758\n19806158\n70147656\n5576600\n74141787\n69148723\n88501203\n77576903\n79768146\n17092771\n4195308\n41283981\n12421366\n36880318\n32936051\n72423139\n55199655\n22527306\n74636017\n10666660\n32258523\n20696152\n65396770\n53846885\n37527917\n71500172\n5086494\n55180109\n62690550\n14255526\n34683660\n18430726\n58045864\n33702390\n79031871\n34099703\n5291180\n69703905\n89220900\n21206300\n40569955",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "100\n66161794\n20611858\n16212334\n86740807\n24369253\n92311957\n17961800\n98570896\n29994804\n49347804\n69245098\n47695853\n18621351\n75169070\n83718608\n97334735\n17272424\n87878720\n79877835\n97880651\n99425486\n23629972\n19971836\n48084912\n37771959\n9796599\n83151020\n15552963\n61115287\n73116074\n97106507\n83805681\n66953733\n58377357\n29131066\n28350717\n85374620\n77376029\n9966674\n48754395\n78900994\n43616254\n19866418\n27247624\n85676211\n69127092\n42888789\n74591926\n98407730\n42316229\n7417165\n30455700\n46364406\n310585\n47641288\n81787298\n71146019\n29708952\n55123414\n98337339\n75124496\n73865583\n87404536\n46345256\n97134209\n17513064\n3429511\n74061686\n97851973\n1121106\n48172868\n99713541\n20003919\n6472705\n82393808\n63953183\n21905931\n17627261\n99665295\n72351811\n96572969\n34454939\n25678817\n79034323\n38183479\n6638898\n69140736\n8392412\n92088820\n45651162\n97340195\n76731525\n9110009\n943452\n91865468\n22787009\n22303944\n91774381\n51188226\n75407086",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "1\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 1)"
    },
    {
      "input": "100\n100000000\n100000000\n100000000\n69598867\n100000000\n1\n1\n1\n1\n31981524\n100000000\n100000000\n100000000\n100000000\n100000000\n1\n100000000\n1\n100000000\n1\n15541158\n37793133\n100000000\n100000000\n100000000\n100000000\n59497734\n34931744\n100000000\n100000000\n100000000\n1\n67704104\n61749498\n1\n100000000\n1\n64187663\n100000000\n1\n78438897\n94535356\n1\n100000000\n82381345\n100000000\n58602058\n12542269\n100000000\n1\n100000000\n1\n42485401\n71644916\n100000000\n1\n69881577\n1\n100000000\n100000000\n100000000\n100000000\n100000000\n1\n100000000\n100000000\n100000000\n100000000\n100000000\n100000000\n1\n98855358\n100000000\n100000000\n100000000\n18856726\n1\n100000000\n1\n1\n100000000\n100000000\n38101096\n100000000\n55758207\n100000000\n1\n1\n27503641\n100000000\n33189565\n82531015\n73202922\n1\n100000000\n10154162\n38522420\n100000000\n1\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 100)"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:56",
  "total_test_cases": 20
}
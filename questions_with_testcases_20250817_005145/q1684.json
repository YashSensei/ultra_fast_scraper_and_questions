{
  "problem_code": "problems",
  "title": "Self Numbers",
  "tags": [],
  "text": "BackgroundIn 1949 the Indian mathematician D.R. Kaprekar discovered a class of numbers calledself-numbers. For any positive integern, defined(n)to benplus the sum of the digits ofn. (Thedstands fordigitadition, a term coined by Kaprekar.) For example:d(75) = 75 + 7 + 5 = 87Given any positive integer n as a starting point, you can construct the infinite increasing sequence of integersn, d(n), d(d(n)), d(d(d(n))), ...For example, if you start with 33, the next number is 33 + 3 + 3 = 39, the next is 39 + 3 + 9 = 51, the next is 51 + 5 + 1 = 57, and so you generate the sequence33, 39, 51, 57, 69, 84, 96, 111, 114, 120, 123, 129, 141, ...The numbernis called ageneratorofd(n). In the sequence above, 33 is a generator of 39, 39 is a generator of 51, 51 is a generator of 57, and so on.Some numbers have more than one generator: For example, 101 has two generators, 91 and 100. A number with no generators is aself-number. There are thirteen self-numbers less than 100: 1, 3, 5, 7, 9, 20, 31, 42, 53, 64, 75, 86, and 97.ProblemWrite a program to output all positive self-numbers less than 1000000 in increasing order, one per line.InputThere is no input.OutputAll positive self-numbers less than 1000000 in increasing order, one per line.",
  "sample_input": "d(75) = 75 + 7 + 5 = 87",
  "sample_output": "33, 39, 51, 57, 69, 84, 96, 111, 114, 120, 123, 129, 141, ...",
  "link": "https://www.spoj.com/problems/MCUR98",
  "scraped_at": "2025-08-17 00:33:31",
  "test_cases": [
    {
      "input": "d(75) = 75 + 7 + 5 = 87",
      "expected_output": "33, 39, 51, 57, 69, 84, 96, 111, 114, 120, 123, 129, 141, ...",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "9 4 4 2 2\noe nqpms 1 grmth 7 lf 4 cgw 9",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "1 7 6 8 8\nqyyss ydq 5 sxsmw 1 pfgja 2 ucnv 9",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "4 1 10 9 1\nlbbki xdu 10 a 6 xe 4 lrjpz 4",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "43 78 50 55 50\nu zapx 48 nujrk 29 y 92 upz 60",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "84 69 48 83 79\nqgutp euebx 6 oxegt 18 d 75 v 45",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "95 100 10 69 28\ncoyw fik 53 dqo 49 q 36 jmdx 11",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "47 48 13 23 42\nnbid e 42 bhbq 46 xfipl 37 fhg 7",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "4 30 27 58 14\nsxcsj rwulh 79 wbgp 66 ox 50 u 74",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "324 361 321 322 366\nucd q 115 d 174 u 202 law 233",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "447 341 53 131 228\nrbd dzrgf 197 fea 467 lfcri 363 eo 150",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "477 81 265 179 165\nx ysw 463 rt 395 qz 371 q 454",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "450 448 84 158 90\nra rtvk 387 xnhg 279 tabu 158 nzida 486",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "166 237 400 219 59\nck pcxs 312 onzde 398 qvpgd 193 qe 425",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "196 228 79 443 252\nrjcn jm 274 m 433 y 479 j 432",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "78 57 275 54 382\nbsq kfhc 77 osbcn 265 o 205 hwdmm 493",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000\nbv f 1000 awktb 1000 oacb 1000 sg 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000\nrm j 1000 rgi 1000 vao 1000 df 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "999 999 2 2 2\nwrsul sxq 999 yyb 1000 wm 1000 dnn 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "999 2 1000 1000 999\npsft ymbri 1 d 1 j 2 lvbkq 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:50",
  "total_test_cases": 20
}
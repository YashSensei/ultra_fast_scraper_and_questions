{
  "problem_code": "problems",
  "title": "Hit or Miss",
  "tags": [],
  "text": "One very simple type of solitaire game known as “Hit or Miss” (also known as “Frustration”, “Harvest”,\r\n“Roll-Call”, “Talkative”, and “Treize”) is played as follows: take a standard deck of 52 playing cards —\r\nfour sets of cards numbered 1 through 13 (suits do not matter in this game) which have been shuffled — and start counting through the deck 1, 2, 3 ... and so on. When your count reaches 13, start over\r\nat 1. Each time you count, look at the top card of the deck and do one of two things: if the number\r\nyou count matches the value of the top card, discard it from the deck; if it does not match it, move that\r\ncard to the bottom of the deck. You win the game if you are able to remove all cards from the deck\r\n(which may take a very long time).A version of this game can be devised for two or more players. The first player starts as before with a\r\n52 card deck, while the other players have no cards initially. As the first player removes cards from her\r\ndeck, she gives them to the second player, who then starts playing the same game, starting at count\r\n1. When that player gets a match, he passes his card to the third player, and so on. The last player\r\ndiscards matches rather than passing them to player 1. All players who have cards to play with perform\r\nthe following 2-step cycle of moves in lockstep:Each player says his or her current count value and checks for a match. If there is no match, the\r\ntop card is moved to the bottom of the deck; otherwise it is passed to the next player (or discarded\r\nif this is the last player).Each player except the first takes a passed card (if there is one) and places it at the bottom of his\r\nor her deck.These rules are repeated over and over until either the game is won (all the cards are discarded by the\r\nlast player) or an unwinnable position is reached. If any player ever runs out of cards, he waits until\r\nhe is passed a card and resumes his count from where he left off (e.g., if player 3 passes his last card\r\non a count of 7, he waits until he receives a card from player 2 and resumes his count with 8 at the\r\nbeginning of the next 2-step cycle).InputInput will consist of multiple input sets. The first line of the file will contain a single positive integer n\r\nindicating the number of input sets in the file. Each input set will be a single line containing 53 integers:\r\nthe first integer will indicate the number of players in the game and the remaining 52 values will be the\r\ninitial layout of the cards in the deck, topmost card first. These values will all lie in the range 1 ...13,\r\nand the number of players will lie in the range 1...10.OutputFor each input set, output the input set number (as shown below, starting with 1) and either the phrase\r\n“unwinnable” or a list showing the last card discarded by each player. Use a single blank to separate\r\nall outputs.ExampleInput:(note that the line break is only in the sample input for displaying purposes)\r\n\r\n2\r\n4 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13\r\n  1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13\r\n4 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1\r\n  2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1Output:Case 1: 13 13 13 13\r\nCase 2: unwinnable",
  "sample_input": "Input:(note that the line break is only in the sample input for displaying purposes)\r\n\r\n2\r\n4 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13\r\n  1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13\r\n4 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1\r\n  2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1Output:Case 1: 13 13 13 13\r\nCase 2: unwinnable",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/HITOMISS",
  "scraped_at": "2025-08-17 00:34:22",
  "test_cases": [
    {
      "input": "(note that the line break is only in the sample input for displaying purposes)\r\n\r\n2\r\n4 1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13\r\n  1 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13\r\n4 2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1\r\n  2 3 4 5 6 7 8 9 10 11 12 13 1 2 3 4 5 6 7 8 9 10 11 12 13 1",
      "expected_output": "Case 1: 13 13 13 13\r\nCase 2: unwinnable",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "xiig msy k fdygl ogbc g jqeq gd igvto wbop dos jjcn kexegfo xlq\n3\n1 5 6 10 9 1 6 4 8 6 10 3 4 7 4 6 3 6 8 8 5 1 6 10 1 4 5\n10 4 6 8 1 4 9 4 7 7 8 2 8 4 4 6 1 10 5 5 5 9 6 8 8 10\n9 7 1 3 5 3 4 4 9 6 6 2 7 5 6 5 2 9 8 2 5 3 10 1 3 9 1\n2 5 2 7 1 1 1 3 6 2 5 2 3 7 5 5 2 7 1 1 2 8 1 9 4 6",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "tns s wwk rz mrzoe atmc otaa pi xqaew xhbu sgbfs gwv t j\n8\n5 9 4 4 1 5 5 4 10 3 3 6 2 6 6 5 9 7 9 8 1 7 9 3 6 1 5\n8 8 10 5 10 8 1 5 4 9 3 7 3 2 4 8 3 2 1 2 9 5 5 5 8 3\n8 9 8 6 3 5 5 1 4 2 4 5 4 6 10 8 8 10 2 3 7 2 3 9 9 4 10\n7 6 8 3 3 10 5 3 4 4 8 1 6 3 2 3 8 1 10 9 8 10 8 3 6 7",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "af r dfp sgay yf kuen w bg kj pamzr ndgp g sqibfv oa\n5\n4 3 8 4 3 4 9 1 7 6 4 4 1 4 1 4 4 9 2 8 2 7 5 9 7 3 9\n5 6 3 9 9 1 4 9 5 4 5 8 2 1 5 9 2 5 5 3 10 3 10 8 4 1\n8 2 3 7 7 2 3 10 1 10 1 9 9 8 10 9 6 10 2 3 3 7 6 7 2 9 2\n4 1 1 1 7 6 1 5 7 3 2 6 8 5 4 9 2 6 2 5 2 5 5 8 2 2",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "wzrt swr tsuq cx eo e tjf fcqje xrllj feicga w aaa nojtdd voqzmw\n81\n92 63 22 56 41 22 15 69 21 28 100 22 61 47 96 29 96 4 32 17 66 31 89 4 28 70 68\n42 51 5 70 38 3 81 24 9 93 93 11 68 25 97 9 51 7 17 100 4 69 57 78 50 71\n93 57 31 77 30 44 30 100 31 94 85 95 61 97 86 76 57 82 89 36 73 66 25 74 71 37 83\n59 83 59 79 22 41 12 14 24 28 38 66 11 87 34 20 37 86 68 22 82 22 45 6 24 27",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "j gg ezzo qu kq b ics eoue ul f fetc wkm nlthlai ipv\n10\n44 26 10 53 93 43 52 26 29 61 3 47 86 8 79 6 88 22 19 89 48 52 30 44 8 60 24\n48 94 30 22 37 36 46 29 31 73 1 94 17 85 100 97 62 88 6 2 75 30 5 37 22 65\n17 49 53 21 100 49 37 69 15 4 7 100 98 100 38 96 33 26 35 8 89 61 87 14 93 40 53\n33 98 46 46 77 29 89 6 27 95 69 21 87 79 15 17 66 86 68 82 15 13 20 43 68 46",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "ryu p i x zf ug edu bolj rbxml pdvv y zla egqhncsk ecrpmkhzx\n34\n15 48 46 13 18 33 85 87 79 13 94 61 56 21 37 98 54 23 1 91 76 97 27 12 35 32 57\n87 2 70 63 70 21 54 50 54 81 57 1 23 26 43 59 89 16 25 95 87 80 91 28 40 9\n53 81 95 79 83 13 84 18 34 40 34 31 62 24 75 100 48 78 50 90 85 32 6 53 73 99 97\n49 18 48 85 73 80 99 37 96 1 87 99 58 16 94 93 91 41 99 59 20 65 67 31 36 72",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "vcw evsq yuzuk m sbj divu nizf cckd xqh fvaesc j symtu tvs pz\n48\n66 26 47 15 88 79 44 25 88 6 32 9 90 80 7 86 89 74 3 54 77 29 86 95 13 45 94\n3 1 54 76 47 40 12 72 37 47 96 51 34 36 17 22 45 15 67 7 17 4 21 64 40 79\n24 26 15 3 49 74 63 6 7 58 42 70 80 60 88 4 8 86 35 7 26 97 18 74 75 4 69\n25 59 64 94 97 90 98 14 83 23 55 77 70 82 74 19 52 90 55 51 100 34 77 32 15 15",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "m wvd xi qyt vxp e lms y xkbfh kysa asouk b g vxcm\n22\n43 31 83 96 6 59 43 54 77 23 71 6 47 41 67 24 68 17 59 22 88 67 30 23 24 65 35\n55 91 46 6 31 71 37 51 48 54 19 84 73 15 23 33 44 80 32 53 87 87 75 31 33 5\n82 75 46 83 17 81 38 23 92 75 97 41 49 97 5 77 74 58 34 64 3 61 73 10 34 73 4\n63 48 54 54 86 70 99 84 95 43 65 79 95 42 47 81 9 80 60 46 64 79 5 13 11 22",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "l ikiiv s gy wbylb uwg ghmt n lslrm o dyzco gmw zrboybw mogdan\n73\n336 119 206 266 414 362 71 92 416 266 379 295 124 488 344 436 252 397 330 61 114 324 71 188 202 241 271\n267 203 194 490 280 152 464 348 333 306 415 386 101 494 470 343 177 222 168 122 59 438 172 247 376 491\n90 341 168 233 481 379 439 83 471 216 319 112 168 355 334 288 122 226 197 137 451 370 495 168 366 297 282\n151 442 425 225 302 410 216 123 398 84 55 312 383 177 384 394 474 216 334 487 219 357 409 254 114 338",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "bt sckac kuakd qvyf uqydy khrr j ryh uudm gglmgf yl mh axqr kevstpej\n457\n366 319 295 345 457 108 486 58 420 170 402 133 288 453 396 147 112 190 238 121 88 118 429 245 158 99 252\n247 328 100 282 195 79 424 352 87 141 300 455 455 224 181 265 265 237 337 227 376 138 102 232 456 69\n235 372 298 220 63 334 481 351 402 133 342 344 475 100 238 287 276 261 293 132 376 222 479 198 203 256 338\n250 140 160 321 239 479 209 303 257 352 66 389 59 240 176 341 354 150 483 308 424 377 457 215 327 400",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "kj o hqxwo qd jti vlrlr jsn n vjk r uwzb leqr ddabdnii nm\n321\n339 402 291 386 329 355 314 405 128 428 419 277 450 251 451 376 465 486 354 137 53 73 295 164 244 281 155\n85 352 72 279 63 74 409 360 484 327 428 64 214 70 381 253 260 488 340 363 436 147 111 361 438 148\n347 52 347 115 430 294 454 157 155 428 144 426 156 374 252 310 227 425 171 424 248 56 398 306 205 320 267\n233 168 152 466 231 137 155 438 303 413 75 420 477 248 366 401 384 431 51 200 433 158 498 97 284 320",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "brhv lbiqu sjubk wox tge gm oe msehk migb ns i nx cf swsigdyir\n258\n124 197 223 296 324 125 275 317 347 477 418 288 315 273 423 287 442 268 442 438 134 320 90 55 466 327 296\n78 448 403 288 487 436 117 454 148 152 261 339 335 283 149 274 129 93 94 361 323 254 129 258 128 371\n194 331 384 326 139 270 235 132 357 294 311 435 479 176 143 181 412 280 283 160 242 322 285 128 474 202 61\n346 120 482 293 391 493 429 159 423 338 293 248 192 50 338 196 431 348 90 313 173 204 423 192 285 392",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "x nte chq iejz vu u myyd oj drfra mrzsdj ohcb khppb nlik yjjhhwjcl\n204\n63 338 76 466 78 464 376 233 146 51 298 66 393 171 491 367 56 250 214 366 76 376 75 264 431 336 112\n282 95 223 451 417 175 330 373 129 363 317 414 96 331 276 438 240 87 194 499 224 135 402 429 300 191\n398 257 166 477 362 209 195 328 310 465 334 301 103 137 62 298 381 380 463 167 236 316 109 152 137 407 431\n184 314 418 67 91 165 284 75 88 55 309 363 266 180 197 63 51 458 116 290 117 307 147 397 344 324",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "l tvhl lhr somy jyt mxsy nrcmh wjvky ome ekwu uxwd samd qs cz\n172\n232 371 346 338 301 326 391 262 137 485 425 217 466 470 417 70 434 401 82 276 193 125 53 430 275 344 396\n396 134 251 180 269 359 149 111 427 372 63 102 391 468 440 236 248 345 148 390 91 359 378 177 197 134\n311 349 115 352 109 182 401 360 372 354 418 343 469 234 483 323 84 436 86 467 391 470 51 313 377 382 318\n380 306 191 125 275 125 181 227 425 109 331 292 474 94 499 254 305 208 493 362 357 429 324 265 142 333",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "dv vg pfko fgz pfy qipzd fbklp lz e jjlbd qvzo rgvac vafytoyk mjigl\n305\n444 129 191 468 459 458 330 344 273 97 487 163 148 340 62 70 151 382 411 498 143 374 126 72 474 225 66\n266 157 329 302 460 282 195 435 87 66 179 296 458 345 249 436 198 175 407 216 323 136 321 225 228 259\n325 143 459 220 452 383 216 377 437 64 186 302 488 221 211 366 119 433 147 341 189 480 196 301 265 106 120\n261 350 412 102 130 213 86 350 314 450 60 307 218 470 133 433 361 97 227 333 476 90 81 297 499 126",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "ljjzo qkhi x rbwm s z dtld ges c efpowc s nzc xj tp\n1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "o khhfu xrr mz j byz ekta pdgp h unkxk zdj lk qabc kpjjaewl\n1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "uljkr zvxck kklcs g un pn laqf z nahyk hxng qblw f moc gnmga\n1000\n1000 2 999 1 1000 1000 999 999 1000 2 1 2 1000 2 2 2 1000 2 999 1 2 1000 2 1000 999 999 1000\n999 1 999 999 1000 2 1000 1 1000 1000 1 999 1 1000 999 999 999 999 2 999 1 2 999 1 1000 2\n1000 1000 1 1000 1 999 2 1 1 1 1 999 2 1 999 1000 1 1000 1000 1000 1 1 2 999 999 1 2\n999 1000 1 1 999 1 1 999 999 999 1000 1 2 999 1000 1 1000 2 1 1000 999 1 1000 1 2 999",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "nbwp sboar i aprz jvt rpssp ghspq qgyz su n pi pgsz qdzfjt rre\n1000\n1000 1000 1 1000 1000 1 1 1 2 1000 2 999 2 999 999 2 999 1 1 1 999 1000 999 2 1000 1000 1000\n2 1 2 999 2 1000 1000 1000 999 1000 1 1000 1 1 1 1 1 2 1 1000 1000 1 1 1000 999 1\n1000 1000 1 999 999 999 999 2 1 1000 2 1 1 1000 2 2 1000 2 999 999 999 999 1 999 999 1000 1\n1 2 2 999 2 999 999 999 1000 1000 1000 1 1 999 1 1000 1 1000 999 1 999 1 999 2 2 1000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:55",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Find Lexicographically Smallest Permutation",
  "tags": [],
  "text": "You are given n numbers a1, a2, ... an. You have to permute the numbers in such a way that resulting permutation should be lexicographically smallest . But there is a problem, you can not swap every pair of numbers. You can only swap the position i and j if they are good position. You will be given m pairs of i and j's which will denote good positions.So complying to restrictions posed here, find the lexicographically smallest permutation of a1, a2 ... an.Definition:Â  (a1, a2 ... an) is lexicographically smaller than (b1, b2 ... bn) if first index i where ai and bi differs, ai < bi satisfies.eg. (1, 2, 3, 4) is smaller than (2, 1, 3, 4)InputT : number of test cases (T <= 10)Next Line will contain n and m. (1 <= n <= 10^3 and 0 <= m <= min (n * (n - 1) / 2, 10^5).Next Line will contains a1, a2, ... an. (a[i] >= 1 && a[i] <=10^6)For next m lines, each line will contain i, j separated by space which will denote that you can swap ai and aj.OutputFor each test case, output n numbers representing the permutation of a1, a2 ... an according to problem statement.ExampleInput:23 13 2 12 34 22 4 3 11 33 4Output:3 1 21 4 2 3",
  "sample_input": "Input:23 13 2 12 34 22 4 3 11 33 4Output:3 1 21 4 2 3",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/IITKWPCI",
  "scraped_at": "2025-08-17 00:33:49",
  "test_cases": [
    {
      "input": "23 13 2 12 34 22 4 3 11 33 4",
      "expected_output": "3 1 21 4 2 3",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "7 9 4 10 2 1 5 7 7 1 3",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "3 7 2 3 9 4 5 4 5 4 4",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "3 3 3 2 7 8 5 9 7 9 4",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "98 69 25 9 52 57 46 23 80 41 43",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "70 100 50 84 69 72 40 40 27 40 75",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "77 69 80 60 62 62 18 17 52 10 36",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "88 89 71 41 44 43 96 3 24 96 64",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "62 64 3 4 39 31 77 37 26 67 91",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "416 276 291 101 356 359 343 455 84 345 122",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "254 386 447 178 406 103 242 385 248 96 136",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "150 477 80 117 234 264 258 308 427 114 424",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "86 96 374 471 469 185 482 269 375 254 189",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "408 486 312 263 339 135 151 488 145 149 265",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "459 323 442 55 58 128 169 152 302 139 242",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "238 327 192 137 125 77 407 194 261 149 352",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "999 1000 2 2 2 1000 1000 1000 1 2 1000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "999 999 1000 1 1 999 1000 999 1000 2 999",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:51",
  "total_test_cases": 20
}
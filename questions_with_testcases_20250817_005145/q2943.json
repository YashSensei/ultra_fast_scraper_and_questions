{
  "problem_code": "problems",
  "title": "Sort Machine",
  "tags": [],
  "text": "We have a sorting machine that works on a list of distinct numbers. This machine only has two instructions, named MOVEBACK and MOVEFRONT. Each instruction takes one element of the list as a parameter and removes that element from the list. MOVEBACK will then append that element to the end of the remaining list, while MOVEFRONT will insert it at the beginning.For example, the sequence {8, 12, 25, 7, 15, 19} can be sorted in ascending order using 2 instructions:MOVEFRONT 7, to get {7, 8, 12, 25, 15, 19}MOVEBACK 25, to get {7, 8, 12, 15, 19, 25}You will be given a list of distinct numbers. Compute the minimum number of instructions required to sort the list in ascending order.InputInput starts with an integer T (≤ 100), denoting the number of test cases.Each case starts with an integer N (1 ≤ N ≤ 50), denoting the number of elements. Next line consists N distinct elements. Each element will be between -1000 and 1000.OutputFor each case, print one line containing the answer to the problem.ExampleInput:3\r\n6\r\n8 12 25 7 15 19\r\n5\r\n1 2 3 4 5\r\n5\r\n1 -10 -1 -8 4Output:2\r\n0\r\n3",
  "sample_input": "Input:3\r\n6\r\n8 12 25 7 15 19\r\n5\r\n1 2 3 4 5\r\n5\r\n1 -10 -1 -8 4Output:2\r\n0\r\n3",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/SORTMAC",
  "scraped_at": "2025-08-17 00:34:08",
  "test_cases": [
    {
      "input": "3\r\n6\r\n8 12 25 7 15 19\r\n5\r\n1 2 3 4 5\r\n5\r\n1 -10 -1 -8 4",
      "expected_output": "2\r\n0\r\n3",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2\n8\n8",
      "expected_output": "0\n0",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "3\n6\n8\n7",
      "expected_output": "0\n0\n0",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "3\n10\n5\n9",
      "expected_output": "0\n0\n0",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "10\n22170783\n87014204\n26144192\n34145387\n54993912\n53122296\n37792172\n59134503\n49520995\n69436651",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "12\n24398614\n63766999\n88058644\n65394637\n74982079\n39835116\n422231\n65686167\n38642189\n15481352\n3445350\n35512436",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "6\n94865680\n75808374\n54969069\n43952131\n52809609\n83024904",
      "expected_output": "0\n0\n0\n0\n0\n0",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "9\n68222488\n31715610\n87438889\n3005716\n72275729\n61012761\n21520578\n73336353\n74532495",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "20\n78433306\n82390032\n12137633\n57528000\n41130450\n14122108\n42516950\n48822150\n80985459\n67881273\n84474290\n81713836\n40128410\n24984859\n84935531\n7843213\n6836544\n57766247\n23339646\n93503088",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "22\n7003\n1147\n57018\n94674\n33341\n8733\n4122\n54101\n28585\n48137\n64744\n67610\n45665\n83248\n31454\n67092\n71516\n70883\n70633\n48723\n98052\n66013",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "26\n72122\n35512\n67440\n10685\n44075\n52603\n23639\n53560\n35089\n66368\n86469\n14808\n61903\n88774\n44339\n59900\n2762\n35767\n71368\n8168\n53596\n59554\n71828\n77798\n10328\n68649",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "37\n93524\n60637\n75391\n91837\n57706\n4070\n32986\n68676\n16704\n96244\n41741\n85692\n30606\n79874\n38288\n53794\n2779\n11385\n35666\n92669\n36343\n45200\n28245\n83138\n63213\n31993\n90047\n27926\n37189\n50190\n88415\n35126\n77055\n81195\n56014\n783\n54307",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "20\n40183\n50578\n15608\n75962\n15302\n59096\n76735\n28860\n44327\n90522\n89656\n72675\n12132\n20863\n92772\n97369\n52010\n99278\n66898\n97756",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "47\n852\n43749\n93714\n85140\n4741\n98335\n21009\n94043\n46481\n90087\n28220\n26152\n99218\n22368\n35236\n22083\n48725\n97126\n50787\n28371\n74541\n77400\n59326\n32521\n51330\n10613\n47551\n84996\n78974\n15816\n27917\n59172\n39805\n17843\n68992\n78087\n61149\n70117\n87685\n55073\n51949\n52291\n6989\n8800\n55036\n26028\n64835",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "40\n23954\n63411\n20378\n45608\n43467\n43436\n53116\n27607\n14658\n70076\n80800\n12594\n15234\n19774\n20257\n80059\n4386\n75383\n42868\n75472\n93364\n36648\n84738\n83624\n71599\n88749\n80004\n63514\n97511\n18240\n84430\n34324\n60134\n65871\n21238\n40253\n80140\n24262\n14123\n33587",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "48\n2554\n39713\n70463\n95894\n58366\n15790\n60143\n71373\n81180\n32288\n34488\n8550\n50093\n54623\n23388\n22688\n92247\n203\n97365\n16271\n5165\n2608\n64945\n15552\n19832\n83\n32704\n63494\n95888\n19489\n74518\n87981\n72040\n26874\n12472\n45275\n11059\n90904\n85693\n39138\n68878\n32170\n26605\n92412\n50773\n85039\n24563\n42019",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "50\n27305695\n79338558\n88211274\n19435928\n74150662\n73669694\n63295794\n58203624\n78332533\n64681926\n216265\n47304035\n61257754\n37430410\n9163614\n82945965\n55008115\n82315313\n41007358\n899848\n96171325\n15131821\n93891583\n22543354\n79622854\n44998960\n22124352\n27475683\n40602717\n6181184\n91465534\n34339961\n18763366\n48582562\n16441933\n86059078\n65388829\n21139169\n36295521\n55175808\n78701861\n86866231\n88141284\n94668112\n1182569\n85058442\n64069764\n47703869\n27046461\n81621374",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "max_case_17",
      "description": "Maximum size array (N = 50)"
    },
    {
      "input": "50\n65882957\n13230132\n25076591\n97805393\n117869\n46178536\n38247091\n45343669\n33881866\n79934291\n58981647\n47957609\n88328257\n82371770\n58265204\n64888386\n59011871\n63442948\n21310083\n51505873\n18281840\n52132756\n71097413\n94957427\n72553871\n21278136\n28781158\n26769106\n27628547\n56031973\n46789539\n57719059\n77144558\n87804388\n45890008\n82215158\n16165396\n7353153\n56868979\n38912012\n97445382\n72816629\n95927847\n4010240\n79255809\n20814072\n41716526\n82217038\n57556044\n1683687",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "max_case_18",
      "description": "Maximum size array (N = 50)"
    },
    {
      "input": "1\n1",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Edge case array (N = 1)"
    },
    {
      "input": "2\n100000000\n1",
      "expected_output": "0\n0",
      "type": "edge_case_20",
      "description": "Edge case array (N = 2)"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:54",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:51"
}
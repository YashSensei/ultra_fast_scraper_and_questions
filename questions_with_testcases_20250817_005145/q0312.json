{
  "problem_code": "problems",
  "title": "Phony Primes",
  "tags": [],
  "text": "You are chief debugger for Poorly Guarded Privacy, Inc. One of the top\r\nselling product, ReallySecureAgent©, seems to have a problem with\r\nits prime number generator. It produces from time to time bogus primes\r\nN.After a while, you realize that the problem is due to the way primes\r\nare recognized. Every phony prime N you discover can be characterized as follows. It is\r\nodd and has distinct prime factors, sayN = p1× p2× ...  × pkwithpi≠ pjwhere the number k of factors is at least 3.Moreover, for all i = 1..k, pi- 1 divides N - 1. For instance,561 = 3 × 11 × 17is a phony prime.Intrigued by this phenomenon, you decide to write a program that\r\nenumerates all such N's in a given interval[Nmin, Nmax]with1 ≤ Nmin< Nmax< 231, \r\nNmax- Nmin< 106.Please note, that the source code limit for this problem is 2000 bytes to avoid precalculated tables.InputEach test case contains one line. On this line are written two\r\nintegers Nminand Nmaxseparated\r\nby a blank. The end of the input is signalled by a line containing two\r\nzeros. The number of test cases is approximately 2000.OutputFor each test case, output the list of phony primes in increasing order, one per line. If there are no phony primes in the interval, then simply output none on a line.ExampleInput:10 2000\r\n20000 21000\r\n0 0Output:561\r\n1105\r\n1729\r\nnone",
  "sample_input": "Input:10 2000\r\n20000 21000\r\n0 0Output:561\r\n1105\r\n1729\r\nnone",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/PHONY",
  "scraped_at": "2025-08-17 00:33:07",
  "test_cases": [
    {
      "input": "10 2000\r\n20000 21000\r\n0 0",
      "expected_output": "561\r\n1105\r\n1729\r\nnone",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "10 8\n6 7\n1 7",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "7 10\n7 6\n5 4",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "2 1\n8 9\n7 3",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "60 85\n91 29\n58 95",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "7 45\n78 74\n56 24",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "83 75\n81 11\n36 19",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "80 61\n70 97\n9 71",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "21 21\n89 40\n54 26",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "147 57\n212 123\n422 70",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "428 218\n129 74\n257 397",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "218 148\n81 51\n209 316",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "212 256\n432 209\n429 161",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "427 262\n471 267\n368 396",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "51 393\n379 174\n192 404",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "226 250\n420 56\n261 206",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "999 999\n1 999\n2 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1000 999\n999 1000\n2 1000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:46",
  "total_test_cases": 20
}
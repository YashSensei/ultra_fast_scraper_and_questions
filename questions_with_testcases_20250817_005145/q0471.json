{
  "problem_code": "problems",
  "title": "Hu",
  "tags": [],
  "text": "Hugo Wangbros has been playing a lot of Yu-Gi-Oh recently, and he recently invented his own variation of the game:Hu-Gi-Oh!In the world ofHu-Gi-Oh, Hugo is in a duel where he must build apower chainusing a selection of magic cards. Each card has apower valueand acooldowntime. Hugo wants to play cards in a sequence such that:Heskipsat least the number of rounds equal to the cooldown after using any card before using the next one.The total power ismaximized.Given a list of cards, each with its power and cooldown, compute themaximum powerHugo can achieve.Note: Hugo is allowed to skip the card on any round.Inputn: number of cards (1 ≤ n ≤ 105)n lines follow, each containing two integers p and c:p: power of the card (0 ≤ p ≤ 104)c: cooldown of the card (0 ≤ c ≤ n)np1c2p1c2...pncnOutputoutput a single integer, the maximum total power Hugo can achieve.ExampleInput:5\r\n3 2\r\n2 1\r\n4 0\r\n6 2\r\n1 1Output:10ExplanationThe optimal solution is to first play card 3 (p=4, c=0), and play card 4 (p=6, c=2). Which gives 10.",
  "sample_input": "Input:5\r\n3 2\r\n2 1\r\n4 0\r\n6 2\r\n1 1Output:10",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/TSPMOHUG",
  "scraped_at": "2025-08-17 00:33:03",
  "test_cases": [
    {
      "input": "5\r\n3 2\r\n2 1\r\n4 0\r\n6 2\r\n1 1",
      "expected_output": "10",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5\n10\n1\n8\n2\n9",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "3\n3\n10\n2",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n2\n8\n6\n4\n5",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "8\n27584268\n77139194\n20261631\n39596157\n81045703\n9413217\n89380918\n36116657",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "10\n67180993\n24187278\n72263627\n72560492\n13444088\n42416374\n95075859\n74105218\n74238166\n77238734",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "9\n54273621\n46333876\n39084695\n32876174\n55530460\n30517072\n6775065\n23189810\n97752133",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "9\n23255025\n39689922\n84233082\n43730696\n829617\n59290694\n51118855\n25613715\n57642264",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "16\n73641438\n72533286\n19455523\n23674760\n41849804\n22313263\n88353940\n77255611\n72814592\n63889400\n17886771\n75984720\n55254643\n3773937\n93681520\n97354665",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "72\n42343\n98830\n9164\n3664\n31909\n10540\n74670\n27550\n80326\n48362\n78538\n6494\n80581\n55958\n84626\n71802\n12761\n89525\n75241\n94361\n89189\n90471\n40459\n96133\n17290\n14104\n89693\n8609\n86877\n95189\n82885\n53967\n14787\n56475\n17405\n13101\n66760\n52302\n54336\n32279\n63093\n52664\n6310\n70683\n82928\n31951\n65977\n54746\n51911\n86613\n67244\n65945\n3288\n76303\n73842\n9045\n78908\n6421\n89890\n55755\n69088\n46349\n60162\n14331\n29920\n13630\n80847\n31555\n28417\n52132\n89685\n24463",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "73\n25836\n61721\n37682\n51771\n59240\n8444\n94330\n4213\n29970\n20022\n82588\n85211\n67692\n33511\n53881\n13681\n3003\n98299\n67313\n45451\n23936\n11811\n52788\n56699\n67508\n18590\n2435\n73886\n68666\n7793\n88399\n67248\n5009\n15484\n38983\n82992\n21096\n20796\n43056\n44867\n55624\n43817\n43208\n46154\n30668\n93753\n68025\n17833\n20640\n39779\n34544\n15793\n3255\n3507\n82899\n95070\n58496\n473\n78044\n21172\n68322\n55568\n68016\n11071\n30481\n2516\n41253\n61066\n65433\n57391\n23425\n68505\n96293",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "21\n69514\n20902\n78020\n50922\n6917\n36436\n81145\n87985\n52241\n67685\n23000\n39101\n82955\n50556\n75245\n43350\n55641\n18416\n88947\n36768\n33805",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "94\n59399\n71232\n34481\n15676\n42283\n52765\n68634\n31154\n4351\n30732\n38467\n28163\n88979\n86409\n41306\n17680\n67419\n20285\n14298\n55290\n11879\n97145\n6819\n97483\n29525\n86242\n84832\n14209\n75072\n88339\n56905\n48399\n8203\n54190\n87433\n51612\n32239\n24534\n22962\n92462\n64173\n8799\n25102\n21388\n30946\n13590\n21536\n30761\n685\n98631\n18046\n75861\n36135\n5940\n4929\n53029\n51413\n60517\n78868\n87152\n9665\n594\n69107\n92069\n18053\n78973\n50729\n15387\n2015\n25998\n54631\n88913\n11120\n83238\n60693\n37682\n59229\n99498\n95145\n99689\n18239\n4474\n97692\n76683\n36792\n55061\n76178\n9071\n2447\n63840\n47024\n62577\n51140\n84233",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "97\n32600\n94548\n91608\n42660\n31067\n430\n74189\n55386\n40566\n81888\n58525\n30030\n16443\n12876\n79637\n53339\n89118\n31629\n43678\n44824\n95716\n93770\n55164\n26197\n21417\n72292\n85503\n25908\n16742\n93756\n22427\n34844\n61000\n52434\n36824\n52534\n5318\n11636\n31305\n13344\n59394\n85210\n70183\n70595\n36427\n45936\n28199\n57101\n5285\n81294\n43163\n88638\n18811\n12087\n15507\n648\n65185\n2999\n84539\n18262\n56640\n8882\n17186\n1678\n98536\n25370\n32355\n4067\n12803\n32537\n22482\n57914\n26111\n42206\n5463\n33011\n28077\n75778\n17145\n80974\n33863\n50712\n4743\n22028\n10807\n95851\n94578\n70805\n76243\n56677\n66721\n271\n11660\n60441\n20335\n14625\n71414",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "67\n65884\n7734\n43484\n32833\n17578\n93730\n7926\n69187\n53212\n29220\n64231\n55620\n20199\n54449\n40070\n68046\n94906\n647\n41135\n44948\n89610\n43924\n50632\n77449\n59152\n93126\n451\n28645\n20223\n83879\n47396\n57296\n72662\n37693\n4959\n5143\n10501\n58549\n3934\n26370\n22260\n94414\n84395\n25409\n86309\n17779\n89902\n14956\n16067\n40929\n28390\n28919\n53962\n1689\n98650\n65970\n69678\n92972\n92099\n91582\n60392\n15946\n30668\n3458\n67497\n73551\n22181",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "51\n23887\n42958\n84086\n59221\n13252\n76085\n81756\n82592\n97925\n87438\n22314\n16634\n66654\n27526\n34148\n96115\n6990\n93327\n32583\n52798\n75962\n67061\n75531\n29829\n58260\n55822\n22591\n82558\n2013\n2770\n39689\n50871\n36462\n39979\n29211\n80412\n85636\n35246\n76684\n2872\n90615\n88696\n23589\n34363\n18722\n9837\n73928\n96341\n70364\n9737\n8609",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "105\n7696154\n15162614\n56377912\n77631702\n22245530\n95200202\n24890455\n17583935\n60009707\n83067763\n90483516\n42452349\n49174374\n52174202\n88007690\n4044331\n58615516\n57856983\n32100830\n17608812\n12155449\n80968582\n54048497\n22886702\n59737453\n91173168\n6863417\n68422496\n11963868\n94369004\n55464503\n80284763\n59556559\n9902375\n85185560\n79289414\n72018850\n10782688\n58385090\n88445759\n69832586\n82823154\n4080429\n29946854\n61199830\n5321275\n73765068\n79082826\n70403894\n3991705\n6268461\n32146870\n89405729\n89403354\n41490881\n89946158\n59684435\n39888415\n23129727\n95231246\n75553365\n68932149\n90199920\n41595550\n31438784\n26802325\n19047093\n97331832\n83623309\n72836232\n11077134\n215522\n50536503\n377064\n94986859\n21910384\n51176231\n85586742\n47041861\n92262159\n44292838\n46387902\n34730173\n74419106\n20111376\n66408474\n45733460\n47308336\n50855126\n79215322\n49609689\n56142381\n26756872\n54977647\n47619541\n96330887\n5156399\n96390061\n25597570\n66048478\n12288474\n91064264\n65602104\n43899252\n53953360",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "105\n55459546\n26308278\n12416346\n76420019\n1305529\n61513660\n55421027\n56742403\n85591298\n96016587\n17615625\n8374687\n45776318\n98099349\n42577130\n66248329\n81035866\n27865500\n19948252\n31999249\n26626851\n15704730\n63837249\n11343961\n10916264\n69436640\n22138364\n87549233\n91011876\n74816327\n64382984\n68678890\n85208583\n8356545\n89391829\n4824888\n20768615\n74522457\n23024070\n51869523\n29634154\n95211033\n46434130\n90346332\n32894827\n64802868\n16313563\n8108349\n58403898\n80142501\n63277785\n71432981\n58205245\n96601337\n87747948\n34874614\n89973392\n1358729\n55177351\n21161992\n68038178\n8212412\n68714357\n42800616\n29539982\n49953134\n73662567\n85505197\n40100477\n9600626\n89670603\n13157624\n81299265\n10218073\n91683709\n5939689\n80087509\n74270864\n86865252\n27926285\n28597239\n61727981\n23144927\n40755907\n76038575\n16069327\n55394176\n28010488\n10099291\n73002113\n65148712\n42117948\n20195125\n34228837\n40643650\n36818420\n14564339\n18507164\n56561665\n7131911\n39260080\n79786564\n43030999\n99286035\n87590815",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "1\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 1)"
    },
    {
      "input": "105\n33667206\n8221540\n72619945\n100000000\n100000000\n31773249\n100000000\n100000000\n5717151\n1\n43118875\n100000000\n28100041\n23986314\n1\n100000000\n55071719\n98795619\n1\n79861026\n57965461\n1\n1\n100000000\n1\n1\n83952688\n100000000\n1\n20312122\n1\n35323735\n19123278\n100000000\n70828764\n65125784\n100000000\n40941324\n84028028\n83395084\n1\n1\n1\n1\n1\n52675916\n100000000\n100000000\n1\n1\n1\n91758533\n100000000\n6940216\n86344568\n100000000\n100000000\n1\n79740595\n1\n1\n100000000\n1\n26258487\n1\n1\n100000000\n34805668\n1\n34863863\n3084830\n100000000\n1\n94226446\n100000000\n1\n100000000\n18607229\n100000000\n100000000\n1\n16654305\n100000000\n100000000\n100000000\n1\n100000000\n1\n11646171\n1\n100000000\n100000000\n1\n100000000\n100000000\n1\n1\n1\n100000000\n1\n1\n100000000\n19533335\n100000000\n1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 105)"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:47",
  "total_test_cases": 20
}
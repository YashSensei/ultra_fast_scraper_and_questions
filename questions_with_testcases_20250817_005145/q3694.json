{
  "problem_code": "problems",
  "title": "Transportation",
  "tags": [],
  "text": "Ruratania is just entering capitalism and is establishing new enterprising activities in many fields including transport. The transportation company TransRuratania is starting a new express train from city A to city B with several stops in the stations on the way. The stations are successively numbered, city A station has number 0, city B station numberm. The company runs an experiment in order to improve passenger transportation capacity and thus to increase its earnings. The train has a maximum capacitynpassengers. The price of the train ticket is equal to the number of stops (stations) between the starting station and the destination station (including the destination station). Before the train starts its route from the city A, ticket orders are collected from all onroute stations. The ticket order from the station S means all reservations of tickets from S to a fixed destination station. In case the company cannot accept all orders because of the passenger capacity limitations, its rejection policy is that it either completely accept or completely reject single orders from single stations.Write a program which for the given list of orders from single stations on the way from A to B determines the biggest possible total earning of the TransRuratania company. The earning from one accepted order is the product of the number of passengers included in the order and the price of their train tickets. The total earning is the sum of the earnings from all accepted orders.InputThe input file is divided into blocks. The first line in each block contains three integers: passenger capacitynof the train, the number of the city B station and the number of ticket orders from all stations. The next lines contain the ticket orders. Each ticket order consists of three integers: starting station, destination station, number of passengers. In one block there can be maximum 22 orders. The number of the city B station will be at most 7. The block where all three numbers in the first line are equal to zero denotes the end of the input file.OutputThe output file consists of lines corresponding to the blocks of the input file except the terminating block. Each such line contains the biggest possible total earning.Sample Input10 3 4\r\n0 2 1\r\n1 3 5\r\n1 2 7\r\n2 3 10\r\n10 5 4\r\n3 5 10\r\n2 4 9\r\n0 2 5\r\n2 5 8\r\n0 0 0Sample Output19\r\n34",
  "sample_input": "10 3 4\r\n0 2 1\r\n1 3 5\r\n1 2 7\r\n2 3 10\r\n10 5 4\r\n3 5 10\r\n2 4 9\r\n0 2 5\r\n2 5 8\r\n0 0 0",
  "sample_output": "19\r\n34",
  "link": "https://www.spoj.com/problems/TRANSJ",
  "scraped_at": "2025-08-17 00:34:22",
  "test_cases": [
    {
      "input": "10 3 4\r\n0 2 1\r\n1 3 5\r\n1 2 7\r\n2 3 10\r\n10 5 4\r\n3 5 10\r\n2 4 9\r\n0 2 5\r\n2 5 8\r\n0 0 0",
      "expected_output": "19\r\n34",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5 2 4\n6 2 1\n6 1 2\n3 4 3\n4 8 4\n7 5 5\n7 2 3\n4 5 8\n5 6 9\n2 6 3\n10 1 3",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "6 9 6\n1 9 7\n7 3 2\n3 3 6\n8 8 9\n7 3 4\n9 10 9\n5 1 4\n10 4 9\n3 2 3\n3 8 5",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "7 8 5\n9 2 6\n7 7 9\n4 9 6\n1 6 4\n7 6 7\n8 3 6\n1 1 1\n8 8 1\n3 1 1\n9 6 6",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "20 7 2\n89 9 41\n94 45 62\n48 81 56\n15 32 14\n29 98 3\n89 51 1\n31 7 82\n16 83 15\n1 97 39\n55 14 97",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "61 17 6\n27 44 88\n10 34 51\n25 12 32\n16 60 53\n4 24 38\n35 36 93\n75 15 100\n95 20 20\n2 97 45\n56 79 1",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "76 11 46\n88 83 48\n100 27 43\n51 68 82\n27 45 70\n69 23 31\n27 92 77\n30 42 70\n4 13 25\n47 49 20\n18 18 54",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "72 73 95\n29 41 76\n45 80 49\n8 50 45\n86 12 2\n20 91 17\n18 62 86\n23 17 34\n35 62 84\n40 3 79\n17 52 43",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "31 87 9\n76 10 56\n16 41 11\n2 3 38\n84 53 51\n86 78 5\n67 93 12\n43 20 52\n83 75 34\n72 31 84\n34 3 83",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "142 183 259\n272 111 84\n404 367 450\n54 121 288\n240 56 270\n136 444 383\n102 421 319\n391 284 215\n432 150 399\n108 495 256\n216 417 218",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "294 103 274\n78 233 165\n81 83 431\n463 289 276\n409 77 275\n258 161 456\n329 375 462\n137 487 55\n98 447 66\n235 149 340\n338 107 64",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "123 244 289\n136 283 381\n344 305 52\n94 82 197\n308 316 365\n490 307 360\n206 76 160\n123 269 449\n214 121 356\n169 282 484\n320 127 154",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "144 489 338\n383 120 312\n360 473 388\n54 468 217\n361 408 178\n500 192 119\n147 65 223\n366 203 324\n388 181 107\n325 369 433\n355 441 369",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "179 412 58\n337 199 197\n439 304 213\n441 133 207\n449 194 434\n263 457 315\n408 194 159\n441 204 279\n189 55 78\n387 317 486\n291 104 365",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "93 195 458\n431 80 415\n418 133 317\n475 323 382\n467 157 451\n110 137 174\n500 204 226\n412 499 96\n376 164 80\n267 86 242\n350 442 319",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "97 398 414\n209 186 456\n298 426 130\n432 452 254\n139 177 327\n172 186 58\n456 109 209\n102 463 393\n469 256 411\n250 294 192\n365 343 213",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 999 1\n999 999 2\n1 2 999\n1000 2 1000\n2 1000 2\n999 1000 1000\n2 2 2\n1000 999 1000\n1 1000 999\n2 999 1\n1000 1000 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 1 999\n999 1 999\n1000 999 999\n999 999 2\n1 2 2\n2 2 1\n2 1000 2\n999 1 1\n2 999 1000\n1 1000 1000\n999 1000 999",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:57",
  "total_test_cases": 20
}
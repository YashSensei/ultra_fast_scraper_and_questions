{
  "problem_code": "problems",
  "title": "Joining lines",
  "tags": [],
  "text": "Two years ago we had a setback when Joaquín, a member of the jury, had an accident which prevented us from including the problem \"Playing with lists\" in that year's problem set for the Argentinian Programming Tournament. Thanks to the contest's participants, who kindly helped us solve that problem, we planned to include it in today's problem set. Unfortunately, we had a new inconvenience with Jacinto, another jury member.As it happens, Jacinto doesn't like it when the sample test cases included along with the problem statements span more than one page. For the problem \"Playing with lists\", each test case consists of a single line with the description of a list. We don't want to say too much about them because the problem is definitely going to be used next year, so for now we'll just provide you with the total number of characters for each test case, clarifying that it's not allowed to \"split\" a test case in order to write it in multiple lines.We would like to write the input for theNsample test cases in a single page, in which we can fit at mostLlines ofCcharacters each. The inconvenience appears when there are more sample test cases than there are lines available in the page, so that we cannot write each of them in a separate line. In order to circumvent this problem, Jacinto suggested drawing vertical segments spanning the whole height of the page, dividing it in two or more columns. These segments should have negligible width, so that the number of characters we can write in each line is not reduced, and will act as visual separators splitting each of the lines they cross. In this way, we can write each sample test case in a different line belonging to some column, as long as it doesn't cross the vertical segments. For the purposes of this problem, the order of the sample test cases is considered to be irrelevant.For example, let's consider the situation in which there areN = 5sample test cases in a page fittingL = 3lines ofC = 11characters each. If the test cases haveK1= 3,K2= 4,K3= 5,K4= 6andK5= 7characters, we can split the page in two columns in such a way that one column has a width of7characters, while the other one has a width of4characters. In the larger column we may write the test cases withK3= 5,K4= 6andK5= 7characters in any order, whereas in the other column we can write the remaining sample test cases, havingK1= 3andK2= 4characters, again in any order.Thus, two possible ways in which we can fit the sample test cases in this example arewhere for example5/7means we have used5of the7available characters in the corresponding column.In an analogous situation for which the number of characters fitting in a single line isC = 10, we would need a column of at least7characters of width in order to write in it the larger sample test case. Therefore, it would be impossible to have any other column of width greater than3characters, which in turn means that4of theN = 5sample test cases should be written in the largest column. But this is clearly impossible, as there are onlyL = 3lines in the page. On the other hand, let us also note that although the sample test cases withK1= 3andK5= 7characters can in principle be written in a single line, as well as the sample tests cases withK2= 4andK4= 6characters, it is impossible to simultaneously put both pairs in one page in this way, as the width of each column should be the same along all the lines in the page.Now we would like your help in order to determine if it is possible to make Jacinto happy by putting all the sample test cases in a single page as described above.InputThere are multiple test cases in the input file. For each test case, the first line contains three integer numbersN,LandC. The integerNrepresents the number of sample test cases,Lrepresents the maximum number of lines fitting in a page, andCrepresents the maximum number of characters fitting in a line (1 ≤ N, L, C≤5000). The second line containsNinteger numbersK1,K2, ...KN, representing the total number of characters in each sample test case (1≤Ki≤Cfori = 1, 2, ... N).OutputFor each test case, print a single line containing a character representing if it is possible to write all sample test cases in a single page as described in the problem statement. The printed character should be an'S'if this is possible, and an'N'otherwise.ExampleInput:5 3 11\r\n3 4 5 6 7\r\n5 3 10\r\n3 4 5 6 7\r\n3 3 4\r\n1 3 2\r\n6 3 4\r\n1 3 1 2 1 1Output:S\r\nN\r\nS\r\nS",
  "sample_input": "Input:5 3 11\r\n3 4 5 6 7\r\n5 3 10\r\n3 4 5 6 7\r\n3 3 4\r\n1 3 2\r\n6 3 4\r\n1 3 1 2 1 1Output:S\r\nN\r\nS\r\nS",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/TAP2016J",
  "scraped_at": "2025-08-17 00:33:06",
  "test_cases": [
    {
      "input": "5 3 11\r\n3 4 5 6 7\r\n5 3 10\r\n3 4 5 6 7\r\n3 3 4\r\n1 3 2\r\n6 3 4\r\n1 3 1 2 1 1",
      "expected_output": "S\r\nN\r\nS\r\nS",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1 2 9\n1 10 7 10 2\n2 5 5\n4 2 10 7 9\n7 5 1\n8 4 4\n6 1 2\n1 2 5 8 10 5",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "2 4 5\n4 5 7 4 1\n7 9 6\n6 6 6 9 3\n7 5 2\n10 8 7\n3 4 9\n10 1 2 1 7 9",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "5 8 1\n9 7 7 8 1\n6 9 9\n10 5 8 7 10\n8 7 6\n9 9 4\n6 7 9\n6 6 6 8 5 2",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "31 1 40\n57 32 90 50 10\n99 6 71\n88 56 25 22 51\n5 72 52\n24 42 7\n100 19 1\n20 97 65 67 34 86",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "4 79 33\n28 63 80 10 25\n65 57 86\n48 67 60 6 98\n51 16 19\n57 65 56\n65 8 54\n40 51 98 40 71 92",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "6 51 80\n23 63 95 79 95\n54 26 82\n47 76 9 6 54\n10 58 5\n23 4 100\n31 47 7\n36 14 30 24 95 5",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "11 87 28\n100 91 71 40 61\n41 94 92\n89 69 75 53 77\n77 64 19\n60 19 69\n58 48 77\n12 51 23 89 54 98",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "49 74 70\n66 22 17 27 52\n1 14 34\n83 3 3 18 28\n85 16 46\n71 10 85\n87 8 100\n28 47 94 56 95 13",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "251 247 107\n255 436 413 160 151\n136 439 460\n472 130 445 215 190\n196 103 284\n252 323 432\n336 444 319\n82 448 494 54 127 100",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "93 287 165\n237 403 397 476 150\n270 203 94\n368 460 53 409 115\n97 466 480\n113 154 248\n423 372 417\n169 319 352 230 358 317",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "280 66 383\n258 375 273 197 366\n343 229 290\n82 353 492 87 193\n60 229 247\n332 375 456\n396 85 98\n355 313 66 85 135 310",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "367 261 189\n222 134 203 395 71\n184 227 84\n90 146 123 432 235\n88 225 209\n148 189 257\n457 206 106\n164 327 207 406 84 241",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "235 266 96\n181 306 274 206 252\n315 303 487\n378 236 395 322 481\n112 463 496\n332 333 106\n185 103 81\n494 237 498 382 378 159",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "494 87 169\n220 353 124 342 208\n483 202 416\n333 79 264 169 61\n310 462 247\n193 442 222\n89 133 153\n384 312 87 497 184 466",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "233 482 430\n236 349 273 251 437\n218 267 472\n209 316 319 66 224\n156 472 396\n433 83 422\n264 340 186\n174 324 423 404 284 291",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000\n1000 1000 1000 1000 1000\n1000 1000 1000\n1000 1000 1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000\n1000 1000 1000 1000 1000\n1000 1000 1000\n1000 1000 1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 2 1000\n999 1 2 2 1000\n1 1000 1000\n1000 1000 2 1000 1\n1 1 999\n1 999 1\n1000 2 1\n1 999 2 999 1000 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 2 999\n2 999 999 1 1\n1000 1 1000\n1000 999 1 1000 999\n2 1 1000\n1 1000 1000\n999 1 999\n999 1 1000 2 2 1000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:48",
  "total_test_cases": 20
}
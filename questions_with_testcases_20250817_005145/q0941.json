{
  "problem_code": "problems",
  "title": "Heptadecimal Numbers",
  "tags": [],
  "text": "The Factory of Computer Enhaced Numbers (FCEN) has asked its Development Comitee (DC) to come up with a way to handle numbers written in base 17 As everybody knows, base 17 is very important for many scientific applications, as well as for engineering and other practical uses. Numbers in base 17 can be tough, but are kind and soft if treated appropiately.Numbers in base 17 are written by using a set of 17 characters: digits 0 to 9 with their usual values, and uppercase letters A to G that have values from 10 to 16, respectively. Base 17, probably because its basement on a prime number, does not require numbers to start with a non-zero digit, so each number has many representations. For instance, the decimal number 117 can be written as 6F, but also as 06F or even 00000006F. Because of this leading-zeroes thing, heptadecimal numbers are hard to compare.As a member of the FCEN-DC, you were asked to write a program that helps in this difficult and challenging task.InputThe input contains several test cases. Each test case is described in a single line that contains two non-empty strings of at most 105heptadecimal digits, separated by a single space. The last line of the input contains two asterisks separated by a single space and should not be processed as a test case.OutputFor each test case output a single line with the sign “<” if the first heptadecimal number is smaller than the second one, the sign “>” if the first heptadecimal number is greater than the second one, or the sign “=” if both heptadecimal numbers are equal.ExampleInput:006F B3B\r\n0000 0\r\n* *Output:<\r\n=",
  "sample_input": "Input:006F B3B\r\n0000 0\r\n* *Output:<\r\n=",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/HEPNUM",
  "scraped_at": "2025-08-17 00:33:04",
  "test_cases": [
    {
      "input": "006F B3B\r\n0000 0\r\n* *",
      "expected_output": "<\r\n=",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5 5\naoeh ywa\n9 3\npmud xgc",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "5 9\nv vvzrm\n3 7\nu nsql",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "1 10\namqk h\n3 2\na px",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "35 7\nzqies ra\n68 76\nzhdi u",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "9 52\niyzh x\n58 20\nlpw ulz",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "63 83\nclbmf mi\n39 16\nuo wlkb",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "67 16\nx xw\n99 37\nhh nhu",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "88 70\nd vos\n73 34\nq jar",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "342 391\nvmczb de\n493 256\nyo sf",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "83 192\ncoic a\n169 329\nm cd",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "176 204\ntdnym nmvcx\n167 126\nbv aqehu",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "71 218\nveh pg\n471 131\nosbuh v",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "68 94\nvh fzu\n69 134\nuxeyv bir",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "275 462\na ptjkc\n293 500\no ervk",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "200 142\nloee hk\n54 417\nzs dzo",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\nvp oet\n1000 1000\na aqme",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\ncxyna den\n1000 1000\ntzeyx gvxyk",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 999\nkeqf yiwx\n1 2\ninxpv wj",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 1\npx apo\n1 1000\nx eu",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:48",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:36:49"
}
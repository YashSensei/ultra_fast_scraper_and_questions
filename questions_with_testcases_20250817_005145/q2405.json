{
  "problem_code": "problems",
  "title": "The way to Bytemountain",
  "tags": [],
  "text": "Byteman woke up early this morning, just after dawn. He is planning to get to the top of Bytemountain, so\r\nthe spent the night in a mountain hostel right in the middle of picturesque mountain range of Lower Bytehills.\r\nSince Bytemountain in the highest mountain of the range, at each trail crossing there is a signpost pointing\r\nat the trail leading towards its peak.In the mountain hostel Byteman met a guide who knows Lower Bytehills like the back of his hand. The\r\nguide informed Byteman that the signposts are being reorganized and because of that he should not rely too\r\nmuch on the signposts. In particular, the very peak of Bytemountain is also a crossing and at this crossing\r\nthere is a signpost pointing to some trail “leading” to Bytemountain!The guide will explain Byteman how to get to the peak. Luckily, all trail crossings are numbered from 1\r\nto n and each crossing contains a tablet with the number of the crossing written on it. The guide’s directions\r\nwill have the following form: “Walk along the trails pointed by the signposts until you reach crossing s1, then\r\ntake a map and choose the trail connecting crossing s1with crossing c1. Afterwards keep walking along the\r\ntrails pointed by the signposts until you reach crossing s2. The take a look at the map and choose the trail\r\nconnecting s2and c2. . . Finally, when you reach si, take the last look at the map and walk along the trail\r\nconnecting siand ci. If you keep walking along the trails pointed by the signposts since then, you will reach\r\nthe peak of Bytemountain.”Byteman would not like the description of the route to be too complicated, so he asked the guide for a route\r\nthat would not require looking at the map more than k times.The guide had to take a deeper thought, because he knows that some trails are more exciting than others\r\nand he would like to show Byteman the most interesting route.The route may lead through the same trails and crossing many times (some trails are so exciting that they\r\nmay be worth visiting multiple times!)Byteman ends his walk when he reaches the peak for the first time after using all instructions provided by\r\nthe guide. This means that Byteman can visit the peak of Bytemountain multiple times during the walk, but\r\nhe will end his walk only after all instructions have been used.How interesting can the route provided by the guide be?InputThe first line of the standard input contains two integers n and k (1 ≤ n ≤ 50000, 0 ≤ k ≤ 100) separated by\r\na single space. They denote the number of trail crossings and the maximum number of times Byteman would\r\nlike to look at the map. The crossings are numbered from 1 to n, the mountain hostel is located at crossing 1,\r\nand the peak of Bytemountain is the crossing number n.The following n lines contain descriptions of the respective trail crossings. Each crossing’s description\r\nconsists of a single line and is composed of integers separated by single spaces. The first one of these numbers, mi(1 ≤ mi≤ n-1), denotes the number of trails going out of the crossing. After that there are mipairs of numbers ai,j, bi,j(1 ≤ ai,j≤ n, 1 ≤ bi,j≤ 10000), meaning that from the ith crossing there is a trail leading to\r\ncrossing ai,jwith beauty equal to bi,j. The first pair of numbers denotes the trail that leads to Bytemountain\r\naccording to the signpost at the crossing. Each trail is bidirectional and connects two different crossings. Each\r\ntwo crossings can be connected by at most one trail. The total number of all trails does not exceed 100000.Each trail connecting crossings i and j will appear in the input twice: first time in the list of trails going\r\nout of the ithcrossing and second time in the list of trails going out of the jthcrossing. In both cases the\r\nbeauty of the trail will be the same.OutputThe first and only line of the standard output should contain a single integer denoting the maximum possible\r\nsum of beauties of consecutive trails on the route from the mountain hostel to the peak of Bytemountain that\r\nsatisfies Byteman’s requirements. You can assume that there exists at least one such route.ExampleFor the input data:5 2\r\n2 3 4 2 2\r\n3 1 2 5 4 4 3\r\n2 1 4 4 3\r\n3 2 3 5 5 3 3\r\n2 2 4 4 5the correct result is:14Explanation of the example. In the above figure the edges represent trails connecting respective crossings,\r\nthe numbers next to the edges — the beauties of the trails, and the arrows denote the trails pointed by the\r\nsignposts at respective crossings.The guide will ask Byteman to look at the map twice, at crossings number 3 and 2. This way Byteman’s\r\nwalk will lead along the route 1 – 3 – 4 – 2 – 5. The total beauty of the trails on this route is 14.",
  "sample_input": "5 2\r\n2 3 4 2 2\r\n3 1 2 5 4 4 3\r\n2 1 4 4 3\r\n3 2 3 5 5 3 3\r\n2 2 4 4 5",
  "sample_output": "14",
  "link": "https://www.spoj.com/problems/AE4B",
  "scraped_at": "2025-08-17 00:33:58",
  "test_cases": [
    {
      "input": "5 2\r\n2 3 4 2 2\r\n3 1 2 5 4 4 3\r\n2 1 4 4 3\r\n3 2 3 5 5 3 3\r\n2 2 4 4 5",
      "expected_output": "14",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "9 5\n5 10 9 3 6\n7 4 3 10 5 2 10\n3 4 7 5 6\n5 10 7 5 6 7 7\n5 1 5 8 5",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "7 4\n3 6 5 7 5\n10 3 6 9 2 2 8\n4 2 10 1 5\n10 6 8 3 3 10 1\n10 6 8 9 2",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "10 7\n7 1 5 3 4\n3 4 1 4 10 7 10\n3 8 4 1 7\n10 2 9 8 9 9 2\n6 7 10 5 6",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "30 16\n52 79 37 64 16\n88 31 84 8 88 3 8\n42 23 86 34 11\n22 52 70 26 37 99 65\n64 9 18 74 37",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "2 3\n30 66 3 46 12\n2 38 16 69 6 99 35\n98 36 46 5 52\n92 24 99 60 69 41 13\n77 15 22 45 28",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "82 99\n61 24 33 61 45\n61 1 68 51 68 77 82\n5 100 5 8 26\n25 5 83 72 79 70 63\n43 63 51 47 57",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "42 67\n60 50 48 55 68\n47 49 18 12 78 14 44\n78 79 25 30 85\n33 44 1 65 77 21 56\n78 5 89 74 23",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "66 68\n63 79 18 93 49\n85 30 70 16 83 68 27\n4 90 37 82 78\n52 73 98 71 85 86 98\n44 98 2 62 89",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "22054 4963\n16057 15988 13856 9184 8957\n8841 4337 23598 5772 16790 16865 22506\n5421 21415 24046 2523 22262\n23601 3232 17136 24093 20638 19235 19185\n10532 2716 12076 5687 7343",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "23289 6210\n6700 24032 24624 6844 21720\n24843 4444 5821 10658 21844 8253 21421\n18846 22219 3061 5611 12406\n12706 14383 4789 15987 9235 19943 15058\n8050 7627 22373 20923 23425",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "4628 17621\n6028 19738 13618 5612 9751\n7149 22084 14115 8493 16199 8056 19098\n4510 15471 24672 5912 15166\n16473 6464 9096 15057 4371 21573 14921\n8318 17453 10653 17205 24693",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "11482 7194\n22206 3927 6465 3481 24474\n23539 19723 11368 4544 7102 20469 10291\n11009 6842 20477 6800 8537\n19187 14241 13170 24972 14503 9705 11605\n20050 8070 5639 4091 12238",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "12846 18444\n15619 10941 22071 13174 2658\n21379 24256 24581 21006 13538 2535 4598\n21492 15229 8995 5172 5620\n20298 20857 13703 8690 16822 8747 8325\n23284 15189 4534 21418 7226",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "9437 24140\n21989 18984 22950 17098 3941\n8602 12031 24654 24367 7475 19935 3731\n12473 4080 21608 5086 16681\n21332 13236 15597 20711 15739 15734 7328\n19743 9822 7460 4882 23351",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "10489 20298\n9552 21785 18222 14737 3675\n9769 7614 9674 5249 9207 5667 9019\n12332 12305 22053 16872 3658\n11251 14441 4917 6122 12957 11237 11724\n16620 14580 12068 16259 11521",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "50000 50000\n50000 50000 50000 50000 50000\n50000 50000 50000 50000 50000 50000 50000\n50000 50000 50000 50000 50000\n50000 50000 50000 50000 50000 50000 50000\n50000 50000 50000 50000 50000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "50000 50000\n50000 50000 50000 50000 50000\n50000 50000 50000 50000 50000 50000 50000\n50000 50000 50000 50000 50000\n50000 50000 50000 50000 50000 50000 50000\n50000 50000 50000 50000 50000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 2\n1 49999 1 49999 49999\n49999 49999 2 2 2 1 1\n49999 50000 1 49999 1\n49999 49999 49999 1 50000 50000 49999\n50000 50000 49999 2 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "50000 49999\n50000 2 50000 49999 50000\n2 2 2 49999 1 1 2\n49999 2 1 49999 49999\n1 1 1 50000 49999 1 49999\n2 49999 1 2 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:53",
  "total_test_cases": 20
}
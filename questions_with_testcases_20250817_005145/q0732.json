{
  "problem_code": "problems",
  "title": "Counting Formations",
  "tags": [],
  "text": "With the coming release of Macrohard Balconies 100 operating system, people are more and more interested in its new UI (User Interface), code-named “Subway”.This UI presents your desktop as a grid that is divided intoNrows andMcolumns (so you haveN×Mcells). In each cell, you can place one icon of an application of a certain type. Your applications can be of one ofKtypes, numbered 1 through K. You’re an expert in this field, so it is assumed that there is an unlimited number of applications of each type.Any placement is called an icon formation. Some of the icon formations are beautiful. An icon formation is called beautiful if and only if no pair of rows are similar. Two rows are similar if and only if for eachXthat 1 ≤X≤K, they contain exactly the same number of applications of typeX.GivenN,M, andK, you should solve for the number of different icon formations that are beautiful, modulo 109+7. Two formations are different if and only if there is a cell where the type of application in one formation is not the same as the type in another formation.You may assume that 1 ≤N,M,K≤ 50.InputThere are several test cases. For each test case there are 3 integers, namedN,M,K, in a single line. Please process until EOF (End Of File).OutputFor each test case, please print a single line with a integer, the corresponding answer to this case.ExampleInput:2 2 2\r\n5 3 2\r\n3 5 7Output:10\r\n0\r\n894953467",
  "sample_input": "Input:2 2 2\r\n5 3 2\r\n3 5 7Output:10\r\n0\r\n894953467",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/FORMAT1",
  "scraped_at": "2025-08-17 00:33:07",
  "test_cases": [
    {
      "input": "2 2 2\r\n5 3 2\r\n3 5 7",
      "expected_output": "10\r\n0\r\n894953467",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "10 6 4\n7 7 9\n1 3 3",
      "expected_output": "0\n0\n0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "9 9 3\n3 1 3\n8 1 3",
      "expected_output": "0\n0\n0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "4 6 9\n5 4 4\n1 6 4",
      "expected_output": "0\n0\n0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "65 54 68\n2 76 55\n48 72 36",
      "expected_output": "0\n0\n0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "83 97 56\n88 97 30\n60 83 23",
      "expected_output": "0\n0\n0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "7 45 86\n1 50 76\n32 25 53",
      "expected_output": "0\n0\n0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "48 45 85\n52 32 56\n10 35 25",
      "expected_output": "0\n0\n0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "4 31 77\n77 47 49\n27 75 33",
      "expected_output": "0\n0\n0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "417 254 113\n256 361 315\n211 207 170",
      "expected_output": "0\n0\n0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "292 375 357\n141 472 365\n394 219 331",
      "expected_output": "0\n0\n0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "448 426 428\n185 60 344\n237 103 232",
      "expected_output": "0\n0\n0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "224 153 141\n454 116 88\n370 63 430",
      "expected_output": "0\n0\n0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "73 415 288\n128 90 96\n416 319 450",
      "expected_output": "0\n0\n0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "226 158 400\n477 83 81\n117 242 488",
      "expected_output": "0\n0\n0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "199 192 177\n137 235 438\n365 266 76",
      "expected_output": "0\n0\n0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000\n1000 1000 1000\n1000 1000 1000",
      "expected_output": "0\n0\n0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000\n1000 1000 1000\n1000 1000 1000",
      "expected_output": "0\n0\n0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000\n1000 999 1000\n1000 999 999",
      "expected_output": "0\n0\n0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 999 2\n2 1000 999\n999 1 1000",
      "expected_output": "0\n0\n0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:47",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:36:42"
}
{
  "problem_code": "problems",
  "title": "Landscaping",
  "tags": [],
  "text": "Farmer John is making the difficult transition from raising mountain\r\ngoats to raising cows.  His farm, while ideal for mountain goats,\r\nis far too mountainous for cattle and thus needs to be flattened\r\nout a bit. Since flattening is an expensive operation, he wants to\r\nremove the smallest amount of earth possible.The farm is long and narrow and is described in a sort of two-dimensional\r\nprofile by a single array of N (1 ≤ N ≤ 1000) integer elevations\r\n(range 1..1,000,000) like this:1 2 3 3 3 2 1 3 2 2 1 2,which represents the farm's elevations in profile, depicted below\r\nwith asterisks indicating the heights:* * *     *\r\n  * * * * *   * * *   *\r\n* * * * * * * * * * * *\r\n1 2 3 3 3 2 1 3 2 2 1 2A contiguous range of one or more equal elevations in this array\r\nis a \"peak\" if both the left and right hand sides of the range are\r\neither the boundary of the array or an element that is lower in\r\nelevation than the peak. The example above has three peaks.Determine the minimum volume of earth (each unit elevation reduction\r\ncounts as one unit of volume) that must be removed so that the\r\nresulting landscape has no more than K (1 ≤ K ≤ 25) peaks.  Note\r\nwell that elevations can be reduced but can never be increased.If the example above is to be reduced to 1 peak, the optimal solution\r\nis to remove 2 + 1 + 1 + 1 = 5 units of earth to obtain this set\r\nof elevations:* * *     -\r\n  * * * * *   - - -   -\r\n* * * * * * * * * * * *\r\n1 2 3 3 3 2 1 1 1 1 1 1where '-'s indicate removed earth.InputThe first line of the input contains integer t representing the number of test cases. Then t test cases follow. Each test case has the following form:Line 1: Two space-separated integers: N and KLines 2..N+1: Each line contains a single integer elevation. Line\r\n        i+1 contains the elevation for index i.OutputFor each test case, output the minimum volume of earth that must be removed to reduce\r\n        the number of peaks to K.ExampleInput:1\r\n12 1\r\n1\r\n2\r\n3\r\n3\r\n3\r\n2\r\n1\r\n3\r\n2\r\n2\r\n1\r\n2Output:5Input detailsThis is the example used above.",
  "sample_input": "* * *     *\r\n  * * * * *   * * *   *\r\n* * * * * * * * * * * *\r\n1 2 3 3 3 2 1 3 2 2 1 2",
  "sample_output": "* * *     -\r\n  * * * * *   - - -   -\r\n* * * * * * * * * * * *\r\n1 2 3 3 3 2 1 1 1 1 1 1",
  "link": "https://www.spoj.com/problems/LANDSCAP",
  "scraped_at": "2025-08-17 00:34:11",
  "test_cases": [
    {
      "input": "* * *     *\r\n  * * * * *   * * *   *\r\n* * * * * * * * * * * *\r\n1 2 3 3 3 2 1 3 2 2 1 2",
      "expected_output": "* * *     -\r\n  * * * * *   - - -   -\r\n* * * * * * * * * * * *\r\n1 2 3 3 3 2 1 1 1 1 1 1",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "nkea yy p bcgk\nmwqn duhxc yv qhg puda qspu liyox ne ggu\njph yj vdtxq cbp vggjo ii rot yuwr sxy zx vwozu qkcu\n7 9 5 7 3 6 6 8 2 6 5 4",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "ivle t ssh sjry\nd xhnmu ekgzv pwgn dws y kuzuo lspwa uh\nknpjv wo jngjv a jyjw zzfi ndc ami i ooj gna dtzg\n4 4 8 8 2 10 1 8 8 8 4 4",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "rmqy tbtpd zppg c\nwutv yxq fyzb e lqa pi qbuu bpmoy bq\niktly zv yelq ksp yhhn jgsq w aig weyt rle sp qoax\n7 9 7 5 5 7 3 2 3 10 7 4",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "vf ad m csyxf\nmoxxa i tzw lbj eeh zuodz ani nfzc pgxez\nm eve im g dmhd uiua xagnn zunft rf tmxz d dgih\n10 41 90 75 46 25 6 11 43 73 58 20",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "txyyg j u vg\neo vo hb pff niii fytpw cq tyaqq t\nug r i kgn xolw f pyi o y k a f\n37 16 77 15 63 17 72 78 67 73 70 6",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "z dr qgy fjxkq\nuup wnv obliq y csfbv ah obpsc id qb\nyyb yq lwu tm jxvqp sna lblp glt cj h d yqgh\n49 32 48 41 25 13 87 46 64 20 100 95",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "r phu d ydo\nes bjgk mo ewy isa p g gnm umq\ndr aknzw vv luec yuxuj bjx oakch gumo fx n ge zcfq\n32 80 22 27 69 71 37 23 25 44 43 91",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "hb opcx pl akzwj\no l s as tj ecma t gunln pb\nbwrbb ktle ey rpntv ckmwd ugadn dcvn lv k qkibn ia dgsa\n75 37 29 94 8 43 49 82 72 52 96 64",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "l ktqyp jhd ogr\nygaxo eu gdpko yvcjh q tlt i hx u\nah nhdgy afi y rbod kxcsn npbxq byx gc m zm m\n444 309 158 183 366 133 200 310 184 416 426 284",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "i t lm kdr\nufv glpp cfyqe wdg gtqzw cxklu verwq svrj ip\nu t skqv hzlx zdbtp lw ljye vnhnk z nm esn cywfa\n332 169 175 409 307 485 463 418 54 72 408 275",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "avqxb g cyzur jnokh\nf tym zexf wsgna dipv arng ubrvp y imkpy\nu z hc elybw z hv lup xcti j gbt x vwx\n176 228 397 75 137 387 123 451 311 332 157 445",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "zreta ncc vv azjzd\nx t dri bhja nua ecs uzlux bghia n\nj cjsq sdf uaeq yc gs hkfsq cnxmv xgeg ofsrn efqz twmue\n461 462 76 173 432 151 201 68 381 222 236 119",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "jl ghev h xj\nueian ayivh dsdx vlbxz bw n ul a n\nbp r ytgb nlokq u odyb fjly o jhs mo qtq eg\n446 232 233 254 248 315 68 457 355 403 403 200",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "e j yyvxa qzaiq\noekbh f tu hxas uo vh x rlpnz mrnfp\nxogzw ic bmnkp cc dvh q lkfj vibux r n dk et\n363 255 462 63 74 317 149 303 359 490 451 368",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "nldiq yhmg jkj c\nplu hijtu ql pgc fdj r dhn omyyu yy\ntvsm vgfp kzo ikl zofo c kdd muu z tlz q o\n110 498 107 459 500 86 265 214 436 80 58 375",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "o utwgh fn jxf\ntw rmhy ktb qybd cwt cz v yoofl xqwnm\nutb gdtzn nb ibe of dnwfp fur hlqj si w cmreo pipam\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "dqyw wmukl ujbbf xy\nps vpqq loft sp hatwy wma tjv fup e\nwwauu rocrc lmw k um x vsjvj wag vezto m ympoj tff\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "o nfo lg wi\nrgrl ke ltz pq huvhq etw awpce o snc\nja zd yly c j xytq ngkb wo osg dtxks yezpa oe\n999 1000 1 2 1 1000 2 1 1000 999 2 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "sxar csf k jfee\nh r mqc b e egre jsjc xnl evk\netw gn oigo mrbbi zazv acluo oksy akq e q otk f\n999 1000 1 1000 1 1 2 999 999 999 2 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:55",
  "total_test_cases": 20
}
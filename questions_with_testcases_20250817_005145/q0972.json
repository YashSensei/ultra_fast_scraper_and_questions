{
  "problem_code": "problems",
  "title": "Retrovirus",
  "tags": [],
  "text": "Little Petar, hacker and bioinformatician, has successfully achieved his greatest hacking feat to date - he successfully broken into the highly guarded database of the DBW (Department of Biotechnological Weaponry), which is suspected of creating many pandemic-causing retroviridae in the past. Among many secret projects, he has discovered a prototype of a brand-new kind of retrovirus, potentially capable of causing a new, incurable disease.Retroviridae store all their genetic information used for attacking the host cell in a single strand of ribonucleic acid (RNA). An RNA strand consists of a string of nucleotides, that may be either Adenine (A), Uracil (U), Cytosine (C) or Guanine (G).Petar found out that the prototype is actually a mutated version of a known retrovirus - as such, it is expected that there are regions (substrings) where these two viruses are highly \"similar\". The similarity of two regions of same length is defined as the number of indices where their nucleotides match; e.g. the similarity between \"ACAGU\" and \"AGAGA\" is 3 (the nucleotides match on the first, third and fourth position).Petar has identified potentially similar regions - it is now up to you to write the program to calculate how similar they actually are.InputThe first line of the standard input contains a natural number N, the length of the RNA strand of both the old and the new retrovirus. The second and third line contain two strings, RV1and RV2, representing their RNA strands.The fourth line contains a natural number Q, representing the number of similarity queries that need answering. Each of the following Q lines contains three natural numbers X, Y and L - this means that the similarity of the regions of length L starting from the Xth position in RV1and the Yth position in RV2should be calculated. It is guaranteed that this region can extend for at least L characters in both strings.OutputFor each of the Q queries, output the answers in order, each one in a separate line of the output.ExampleInput:7AUGCAAGGGAUGCG21 3 46 1 2Output:41ExplanationLet A[i..j] be the substring of A starting on index i and ending on index j.The first query asks for the similarity of RV1[1..4] = \"AUGC\" and RV2[3..6] = \"AUGC\", which is 4 (as this is a complete match).The second query asks for the similarity ofRV1[6..7] = \"AG\" and RV2[1..2] = \"GG\", which is 1 (as only the second index matches).Constraints1 ≤ N ≤ 10001 ≤ Q ≤ 106",
  "sample_input": "Input:7AUGCAAGGGAUGCG21 3 46 1 2Output:41",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/RETRO",
  "scraped_at": "2025-08-17 00:33:23",
  "test_cases": [
    {
      "input": "7AUGCAAGGGAUGCG21 3 46 1 2",
      "expected_output": "41",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2 9 10 9 3 4\nqhy 5 6 5 1",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "8 1 10 8 8 1\nv 8 7 2 7",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "10 8 4 8 10 9\nsbsxcaplwsz 6 8 10 2",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "62 64 98 46 10 39\ngllaltrubrqq 19 23 34 72",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "75 35 21 84 77 41\nkk 90 9 76 71",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "46 73 14 53 65 2\nupbhq 55 46 79 96",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "22 75 28 4 92 13\nycjtlbidegtvei 92 53 45 91",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "68 13 70 99 19 19\ncpodig 37 82 65 19",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "1170 3078 3435 3041 3465 4912\nnfxwouzx 1366 4505 1509 3573",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "3224 4464 4025 4787 610 1203\ncoavbixb 1865 2323 3773 1668",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "4126 1040 2795 2144 3747 3399\nnddkiorlsqfq 1879 3396 2872 3436",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "4240 1588 918 1012 503 3213\nsatsvntszqvrrdth 2503 780 1027 4334",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "3529 3022 1709 3166 1074 1573\nibmcjoqrmafn 1677 3312 3972 1553",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "1628 4064 1484 1139 3830 956\nqzyzmxahlijcxzvpl 2153 3071 2244 3138",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "4839 2562 604 2359 1822 3949\ndnrzddnjoapb 2871 1010 2028 1880",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "10001 10001 10001 10001 10001 10001\nldidmhguowh 10001 10001 10001 10001",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "10001 10001 10001 10001 10001 10001\nlcxwxfnu 10001 10001 10001 10001",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "10000 1 10001 1 2 10000\nysufgkfpqsvzvgek 10000 1 10000 10001",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 10000 10001 2 10000 2\nqvsyvspeknsj 1 2 10001 10001",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:48",
  "total_test_cases": 20
}
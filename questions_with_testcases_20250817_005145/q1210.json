{
  "problem_code": "problems",
  "title": "Vacation Planning",
  "tags": [],
  "text": "EnglishVietnameseAir Bovinia is planning to connect the N farms (1 ≤ N ≤ 200) that the cows live on. As with any airline, K of these farms (1 ≤ K ≤ 100, K ≤ N) have been selected as hubs. The farms are conveniently numbered 1..N, with farms 1..K being the hubs.Currently there are M (1 ≤ M ≤ 10,000) one-way flights connecting these farms. Flight i travels from farm uito farm vi, and costs didollars (1 ≤ di≤ 1,000,000).The airline recently received a request for Q (1 ≤ Q ≤ 10,000) one-way trips. The ith trip is from farm aito farm bi. In order to get from aito bi, the trip may include any sequence of direct flights (possibly even visiting the same farm multiple times), but it must include at least one hub (which may or may not be be the start or the destination). This requirement may result in there being no valid route from aito bi. For all other trip requests, however, your goal is to help Air Bovinia determine the minimum cost of a valid route.InputLine 1: Four integers: N, M, K, and Q.Lines 2..1+M: Line i+1 contains ui, vi, and difor flight i.Lines 2+M..1+M+Q: Line 1+M+i describes the ith trip in terms of aiand biOutputLine 1: The number of trips (out of Q) for which a valid route is possible.Line 2: The sum, over all trips for which a valid route is possible, of the minimum possible route cost.Constraints1 ≤ n ≤ 2001 ≤ k ≤ 1001 ≤ m ≤ 100001 ≤ di≤ 10000001 ≤ q ≤ 10000SampleInput:3 3 1 3\r\n3 1 10\r\n1 3 10\r\n1 2 7\r\n3 2\r\n2 3\r\n1 2Output:2\r\n24ExplanationThere are three farms (numbered 1, 2 and 3); farm 1 is a hub. There is a $10 flight from farm 3 to farm 1, and so on. We wish to look for trips from farm 3 to farm 2, from 2→3, and from 1→2.The trip from 3→2 has only one possible route, of cost 10+7. The trip from 2→3 has no valid route, since there is no flight leaving farm 2. The trip from 1→2 has only one valid route again, of cost 7.",
  "sample_input": "Input:3 3 1 3\r\n3 1 10\r\n1 3 10\r\n1 2 7\r\n3 2\r\n2 3\r\n1 2Output:2\r\n24",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/VACATION",
  "scraped_at": "2025-08-17 00:33:52",
  "test_cases": [
    {
      "input": "3 3 1 3\r\n3 1 10\r\n1 3 10\r\n1 2 7\r\n3 2\r\n2 3\r\n1 2",
      "expected_output": "2\r\n24",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "6 8 7 8\n10 1 6\n8 10 5\n4 1 9\n4 8\n2 2\n4 5",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "5 1 3 10\n10 8 2\n7 9 9\n2 3 9\n6 5\n10 4\n4 6",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "1 8 9 2\n9 4 6\n6 5 3\n4 6 9\n4 8\n1 3\n10 3",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "1 97 87 6\n67 22 81\n23 53 61\n16 13 30\n63 49\n90 21\n17 94",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "69 33 41 37\n76 33 54\n37 53 69\n68 4 49\n76 98\n8 72\n47 50",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "49 59 90 46\n32 42 37\n34 64 14\n28 2 49\n13 41\n39 15\n18 21",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "57 37 86 5\n30 54 4\n1 16 45\n74 89 11\n65 8\n81 19\n22 9",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "72 100 55 70\n10 95 67\n39 97 93\n13 67 98\n8 50\n8 99\n6 18",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "964 924 584 274\n650 389 976\n166 877 867\n817 162 989\n820 334\n434 789\n442 649",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "864 676 255 819\n573 939 601\n317 157 147\n157 645 651\n251 416\n459 730\n516 562",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "234 369 566 831\n809 760 779\n248 163 513\n414 953 708\n514 422\n373 971\n940 212",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "613 566 737 807\n253 486 964\n659 378 179\n482 845 132\n127 556\n938 350\n103 610",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "701 825 631 694\n861 657 888\n632 214 614\n500 913 106\n423 855\n825 537\n908 623",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "898 351 635 314\n970 961 592\n643 323 352\n993 761 164\n923 708\n885 625\n703 166",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "423 272 944 203\n463 461 238\n191 664 372\n621 806 319\n875 333\n957 163\n501 974",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "2001 2001 2001 2001\n2001 2001 2001\n2001 2001 2001\n2001 2001 2001\n2001 2001\n2001 2001\n2001 2001",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "2001 2001 2001 2001\n2001 2001 2001\n2001 2001 2001\n2001 2001 2001\n2001 2001\n2001 2001\n2001 2001",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2001 1 2000 2001\n2000 2 2\n2000 1 2\n2001 2 2\n2 2000\n2001 2\n1 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 1 1 2001\n2000 2001 1\n2 2001 2001\n1 2 2\n1 1\n2001 1\n2000 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:49",
  "total_test_cases": 20
}
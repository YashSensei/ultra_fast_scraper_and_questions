{
  "problem_code": "problems",
  "title": "Lost in Madrid",
  "tags": [],
  "text": "Programming contests can be very exhausting. After five hours of intensive programming, you want to get some well-deserved rest and make yourself on the way to your hotel. Unfortunately, you don't quite remember the way to get there... but that doesn't matter: In good spirits (due to a successful contest?) you set out.As you don't know the exact way, you decide to walk around in the following fashion: Start at the contest site (denoted by id 0) and choose a street at random. Follow the street to the next intersection, and choose another street at random. Every street at an intersection has the same probability of being chosen. You might even decide to take the street back where you came from. As you're on foot, you can use the streets in both directions, unlike in \"Madrid's One Way Streets\".Your walk stops once you encounter your hotel (id = 300) or one of the tourist information booths (id > 290) where you can ask for the way. You can assume there is at least one path connecting you to either type of object.Because you don't speak a lot of Spanish (apart from some verbs that you can conjugate thanks to problem \"Spanish Conjugation\"), you'd like to know the probability that you arrive at your hotel directly, without first arriving at a tourist information booth.InputThe input consists of several test cases, separated by an empty line.Each test case starts withS, the number of streets. The followingSlines contain two numbers 0 ≤A, B≤ 300 each. This means that there is a street connecting intersectionAto intersectionB. The same street will not appear multiple times in the input.The input ends withS= 0. This test case should not be processed.OutputFor each test case, print the probability to arrive directly at the hotel, rounded to three decimal places.ExampleInput:30 2910 2920 30020 300291 30020 291291 30070 2920 880 140 300292 8888 30014 3000Output:0.3331.0000.0000.579",
  "sample_input": "Input:30 2910 2920 30020 300291 30020 291291 30070 2920 880 140 300292 8888 30014 3000Output:0.3331.0000.0000.579",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/LIM",
  "scraped_at": "2025-08-17 00:33:27",
  "test_cases": [
    {
      "input": "30 2910 2920 30020 300291 30020 291291 30070 2920 880 140 300292 8888 30014 3000",
      "expected_output": "0.3331.0000.0000.579",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4 9 2 7 1 3 10 8 9 7 7 9 1 2 3",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "6 3 6 6 10 3 7 10 9 7 7 3 4 8 6",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "6 3 1 2 7 5 5 9 9 9 4 3 7 1 1",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "84 10 55 71 29 73 30 31 81 21 30 1 30 20 3",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "57 49 9 19 47 93 44 19 20 34 48 15 25 21 60",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "25 32 79 4 21 36 23 26 75 76 23 6 55 47 94",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "88 88 67 41 84 24 62 77 62 66 16 57 75 6 71",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "16 8 20 82 27 11 53 86 62 61 77 70 41 16 90",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "485 181 336 389 280 218 357 366 304 332 333 253 355 328 255",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "80 474 307 108 362 203 372 198 386 220 499 189 416 226 279",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "468 139 127 490 213 133 410 57 70 476 148 493 153 332 239",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "296 463 316 126 144 135 268 472 491 187 295 400 283 221 62",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "296 378 133 171 132 122 353 323 77 335 260 334 405 364 222",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "152 100 340 135 241 84 160 228 307 247 237 444 406 473 108",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "296 299 488 249 80 173 432 162 99 357 356 427 490 128 92",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 2 1 999 1000 999 1 1 1000 2 1 999 1000 2 1000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 1000 1 1 1000 2 1 2 2 999 2 1000 1000 1 999",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:50",
  "total_test_cases": 20
}
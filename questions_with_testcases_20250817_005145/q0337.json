{
  "problem_code": "problems",
  "title": "Scuba diver",
  "tags": [],
  "text": "A scuba diver uses a special equipment for diving. He has a cylinder with two containers: one with oxygen and the other with nitrogen. Depending on the time he wants to stay under water and the depth of diving the scuba diver needs various amount of oxygen and nitrogen. The scuba diver has at his disposal a certain number of cylinders. Each cylinder can be described by its weight and the volume of gas it contains. In order to complete his task the scuba diver needs specific amount of oxygen and nitrogen. What is the minimal total weight of cylinders he has to take to complete the task?ExampleThe scuba diver has at his disposal 5 cylinders described below. Each description consists of: volume of oxygen, volume of nitrogen (both values are given in litres) and weight of the cylinder (given in decagrams):3 36 120\r\n10 25 129\r\n5 50 250\r\n1 45 130\r\n4 20 119If the scuba diver needs 5 litres of oxygen and 60 litres of nitrogen then he has to take two cylinders of total weight 249 (for example the first and the second ones or the fourth and the fifth ones).TaskWrite a program that for each test case:reads scuba diver's demand for oxygen and nitrogen, the number of accessible cylinders and their descriptions;computes the minimal total weight of cylinders the scuba diver needs to complete his task;outputs the result.Note:the given set of cylinders always allows to complete the given task.InputThe number of test casescis in the first line of input, thenctest cases follow separated by an empty line.In the first line of a test case there are two integerst,aseparated by a single space, 1 ≤t≤ 21 and 1 ≤a≤ 79. They denote volumes of oxygen and nitrogen respectively, needed to complete the task. The second line contains one integern, 1 ≤n≤ 1000, which is the number of accessible cylinders. The followingnlines contain descriptions of cylinders;i-th line contains three integersti,ai,wiseparated by single spaces, (1 ≤ti≤ 21, 1 ≤ai≤ 79, 1 ≤wi≤ 800). These are respectively: volume of oxygen and nitrogen in thei-th cylinder and the weight of this cylinder.OutputFor each test case your program should output one line with the minimal total weight of cylinders the scuba diver should take to complete the task.ExampleSample input:1\r\n5 60\r\n5\r\n3 36 120\r\n10 25 129\r\n5 50 250\r\n1 45 130\r\n4 20 119Sample output:249",
  "sample_input": "3 36 120\r\n10 25 129\r\n5 50 250\r\n1 45 130\r\n4 20 119",
  "sample_output": "Sample input:1\r\n5 60\r\n5\r\n3 36 120\r\n10 25 129\r\n5 50 250\r\n1 45 130\r\n4 20 119Sample output:249",
  "link": "https://www.spoj.com/problems/SCUBADIV",
  "scraped_at": "2025-08-17 00:33:17",
  "test_cases": [
    {
      "input": "3 36 120\r\n10 25 129\r\n5 50 250\r\n1 45 130\r\n4 20 119",
      "expected_output": "Sample input:1\r\n5 60\r\n5\r\n3 36 120\r\n10 25 129\r\n5 50 250\r\n1 45 130\r\n4 20 119Sample output:249",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1 7 6\n7 5 6\n5 6 10\n8 7 5\n6 10 4",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "4 5 6\n1 8 4\n10 7 6\n3 10 6\n1 8 5",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "9 10 3\n10 6 3\n3 10 4\n3 7 4\n4 2 4",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "31 67 85\n20 1 41\n66 27 32\n100 44 66\n78 88 37",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "71 8 34\n54 72 2\n53 70 43\n67 85 88\n69 27 43",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "52 11 59\n82 26 90\n49 16 48\n35 4 63\n32 92 10",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "38 89 36\n43 21 59\n63 6 97\n23 80 75\n97 34 23",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "7 51 88\n68 49 77\n99 69 51\n60 97 15\n43 75 74",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "314 87 206\n415 353 193\n430 372 128\n440 436 380\n293 459 77",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "113 133 491\n60 468 376\n486 94 133\n299 350 339\n129 336 85",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "80 173 492\n219 203 190\n242 162 238\n131 341 311\n444 410 387",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "465 314 127\n474 479 273\n456 270 202\n285 259 52\n328 491 110",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "132 59 265\n428 240 479\n213 189 291\n63 146 53\n322 144 306",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "270 486 443\n120 287 257\n245 252 97\n218 88 204\n420 307 359",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "436 84 462\n241 329 492\n337 121 264\n287 497 479\n260 126 83",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 999 2\n999 999 1\n1000 2 2\n999 1 1000\n2 1 1000",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "999 1000 1000\n2 999 1\n1 1000 1000\n1000 999 2\n1000 2 1",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:46",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:36:30"
}
{
  "problem_code": "problems",
  "title": "Electric Car Rally",
  "tags": [],
  "text": "In an attempt to demonstrate the practicality of electric cars, ElecCarCo is sponsoring a cross-country road rally. There are n charging stations for the rally where cars may check in and charge their batteries.The rally may require multiple days of travel. Each car can travel four hours (240 minutes) between charges. A car must be plugged into a charger for two minutes for each minute of travel time. Cars start the rally at noon on the first day, fully charged. Cars are permitted remain at a station even after they are fully charged.It is only possible to drive directly between select pairs of stations. Variations in traffic conditions, road conditions, availability of HOV lanes, etc., result in different travel times along each route depending upon the time of day at which travel along that route begins. All roads are two-way, and the prevailing conditions affect travel in both directions.The winner is the first car to reach checkpoint n-1, starting form checkpoint 0. Other than the starting and ending conditions, cars may pass through the stations in any order, and need not visit all stations to complete the course.Write a program to determine the earliest time, expressed as the total number of minutes elapsed since the start of the rally, at which a car could reach the final checkpoint.InputThere will be several test cases in the input. Each test case starts with a line containing n (1 ≤ n ≤ 500), the number of stations, and m (1 ≤ m ≤ 1000), the number of connecting road segments. This is followed by m blocks, each block describing one road segment. A road segment block has the following structure: Each block begins with a single line containing two integers, a and b (0 ≤ a, b ≤ n-1, a≠b). These numbers are the two checkpoints connected by that segment. The connections are undirected: a segment permitting travel from station a to station b will also allow travel from station b to station a. This is followed by from one to twenty 'travel lines' describing travel times. Each of the travel lines contains 3 numbers: Start, Stop, (0 ≤ Start < Stop ≤ 1439), and Time (0 < Time < 1000). Start and Stop are the time of day (expressed in minutes since midnight) described by this line, and Time is the travel time, in minutes, required to traverse this road segment if travel begins at any time in the range [Start..Stop], inclusive. The first travel line in a block will have a start time of 0 (midnight, or 00:00). The final travel line in a block will have a stop time of 1439 (i.e., 23:59, or 1 less than 24 hours times 60 minutes). Adjacent travel lines in the input will be arranged in order, and the start time of any line after the first is one higher than the stop time of the preceding line. The travel lines will cover all times from 00:00 to 23:59. Input will end with a line with two 0s. All test cases will describe a course that can be completed by the cars.OutputFor each test case, output a single integer representing the smallest number of minutes needed to complete the rally. Output no spaces, and do not separate answers with blank lines.ExampleInput4 4\r\n0 1\r\n0 1439 100\r\n0 2\r\n0 1439 75\r\n1 3\r\n0 720 150\r\n721 824 100\r\n825 1000 75\r\n1001 1439 150\r\n2 3\r\n0 1439 150\r\n3 2\r\n0 1\r\n0 10 200\r\n11 1439 300\r\n1 2\r\n0 10 200\r\n11 1439 300\r\n4 3\r\n0 1\r\n0 719 500\r\n720 1439 240\r\n1 2\r\n0 964 500\r\n965 1439 2\r\n2 3\r\n0 971 500\r\n972 1439 3\r\n0 0Output180\r\n2360\r\n255",
  "sample_input": "Input4 4\r\n0 1\r\n0 1439 100\r\n0 2\r\n0 1439 75\r\n1 3\r\n0 720 150\r\n721 824 100\r\n825 1000 75\r\n1001 1439 150\r\n2 3\r\n0 1439 150\r\n3 2\r\n0 1\r\n0 10 200\r\n11 1439 300\r\n1 2\r\n0 10 200\r\n11 1439 300\r\n4 3\r\n0 1\r\n0 719 500\r\n720 1439 240\r\n1 2\r\n0 964 500\r\n965 1439 2\r\n2 3\r\n0 971 500\r\n972 1439 3\r\n0 0Output180\r\n2360\r\n255",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/CARRALLY",
  "scraped_at": "2025-08-17 00:34:37",
  "test_cases": [
    {
      "input": "Input4 4\r\n0 1\r\n0 1439 100\r\n0 2\r\n0 1439 75\r\n1 3\r\n0 720 150\r\n721 824 100\r\n825 1000 75\r\n1001 1439 150\r\n2 3\r\n0 1439 150\r\n3 2\r\n0 1\r\n0 10 200\r\n11 1439 300\r\n1 2\r\n0 10 200\r\n11 1439 300\r\n4 3\r\n0 1\r\n0 719 500\r\n720 1439 240\r\n1 2\r\n0 964 500\r\n965 1439 2\r\n2 3\r\n0 971 500\r\n972 1439 3\r\n0 0Output180\r\n2360\r\n255",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2 10\ne 5\n2 6\n8 2 2\n9 10\n2 4 6\n5 7\n2 10 4\n7 9 4\n4 10 8\n9 5 8\n9 5\n5 10 7\n6 9\n10 10\n6 3 8\n5 8 8\n3 1\n4 8 5\n10 1 10\n6 1\n10 7\n5 5 3\n1 7 8\n8 5\n4 3 10\n4 10 7\n3 9\n1 8 7\n6 9 5\n1 9 5\n1 zk\n6\n1",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "10 6\nikjx 9\n3 3\n6 1 8\n2 10\n8 3 3\n3 3\n5 7 4\n6 5 4\n6 7 8\n3 10 1\n3 10\n6 4 4\n5 9\n4 2\n5 8 7\n6 6 10\n1 6\n1 10 4\n7 4 8\n3 5\n3 5\n4 8 3\n3 2 2\n9 5\n1 3 4\n3 8 9\n10 10\n8 5 4\n7 3 3\n4 1 6\n6 gl\n10\n2",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "10 8\nfguowr 4\n8 9\n8 3 9\n8 8\n9 7 3\n10 7\n4 7 6\n3 6 3\n6 7 5\n4 3 4\n1 1\n9 7 8\n7 1\n7 6\n2 10 8\n4 3 4\n3 6\n2 4 6\n10 4 4\n10 8\n2 6\n5 1 9\n1 9 3\n8 8\n7 9 2\n1 9 6\n5 7\n3 4 3\n10 5 6\n2 10 6\n9 idvuepggez\n1\n9",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "66 94\nz 34\n31 84\n37 72 14\n71 18\n100 78 42\n25 85\n52 98 1\n8 73 28\n10 52 100\n45 56 62\n44 54\n39 72 51\n44 96\n22 7\n7 71 97\n53 54 27\n45 69\n34 35 1\n56 45 43\n97 61\n100 72\n79 9 83\n47 31 70\n44 29\n73 73 14\n27 21 6\n97 18\n24 18 37\n21 45 30\n25 36 28\n21 bimvujioz\n47\n17",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "3 99\ndb 48\n77 66\n24 21 9\n10 61\n50 17 77\n53 62\n12 69 46\n62 17 98\n100 89 29\n3 86 57\n17 43\n82 32 43\n69 41\n28 42\n55 75 98\n47 61 11\n72 64\n72 30 79\n2 13 85\n96 95\n36 90\n13 34 99\n27 28 99\n38 36\n16 18 37\n54 41 14\n1 88\n48 98 34\n10 17 84\n69 79 74\n39 vbnqvdmmkp\n80\n77",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "32 25\nl 49\n84 88\n75 99 73\n29 59\n61 99 97\n31 38\n47 65 50\n11 54 72\n77 74 78\n58 97 59\n69 54\n50 44 68\n5 79\n51 24\n18 67 96\n24 30 97\n50 96\n46 83 16\n50 52 34\n61 92\n63 69\n80 88 81\n16 76 86\n23 76\n9 41 52\n98 15 26\n6 91\n64 82 61\n36 89 57\n61 70 27\n9 bmoqsuazrl\n41\n36",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "45 3\nuqnc 78\n70 80\n45 24 22\n91 63\n17 97 43\n58 24\n57 65 92\n51 29 61\n11 83 19\n75 92 82\n57 1\n56 76 40\n1 53\n100 65\n89 47 31\n12 86 81\n21 36\n59 4 41\n70 88 78\n40 83\n29 36\n15 25 82\n93 59 29\n36 41\n14 7 13\n20 86 25\n52 73\n67 1 96\n6 13 61\n52 11 49\n52 fx\n47\n94",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "24 83\nfp 88\n26 64\n7 26 7\n54 48\n53 15 68\n84 21\n69 9 55\n68 92 74\n8 54 61\n79 99 18\n80 27\n39 61 57\n54 81\n7 23\n72 58 7\n34 89 18\n87 36\n6 43 80\n3 32 79\n64 93\n21 83\n65 13 93\n81 39 10\n57 17\n91 88 90\n80 28 70\n33 41\n31 36 3\n23 8 74\n12 11 83\n100 ajsgxkve\n6\n31",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "30 27\nni 241\n225 70\n150 192 124\n112 147\n60 220 193\n126 246\n148 187 231\n125 224 153\n170 49 112\n36 137 201\n73 148\n127 34 174\n198 175\n140 135\n148 160 68\n162 211 49\n37 248\n133 135 239\n245 68 132\n31 244\n239 202\n118 222 114\n185 165 41\n230 172\n135 55 195\n136 99 159\n82 101\n221 89 125\n75 164 29\n188 183 51\n107 jvbch\n51\n77",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "36 33\nzebh 115\n222 130\n63 63 165\n139 39\n96 42 55\n86 219\n25 148 238\n44 97 218\n150 29 161\n173 151 27\n215 25\n195 42 185\n94 116\n28 211\n68 108 237\n49 226 40\n184 107\n218 64 54\n137 59 144\n247 186\n120 36\n168 148 207\n26 33 174\n39 119\n96 32 179\n232 196 184\n152 26\n170 197 40\n123 178 126\n209 150 69\n96 jrtma\n59\n30",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "84 43\nafms 198\n100 171\n244 33 115\n48 180\n114 54 178\n69 117\n35 108 57\n215 185 210\n72 73 234\n35 119 140\n230 168\n185 62 218\n212 101\n192 90\n162 91 49\n108 151 232\n168 214\n109 186 219\n246 27 173\n97 92\n147 149\n123 147 241\n227 116 110\n239 236\n209 203 173\n120 183 209\n163 114\n143 187 128\n243 174 113\n243 110 228\n135 ekedrommck\n38\n51",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "130 143\nx 58\n233 173\n62 230 230\n162 190\n227 221 143\n72 116\n84 249 88\n98 61 83\n49 248 117\n229 98 196\n212 199\n120 62 176\n200 147\n184 47\n180 201 140\n237 45 108\n142 165\n226 125 123\n78 98 230\n95 197\n220 98\n85 29 172\n116 232 150\n85 225\n107 68 196\n106 202 243\n207 68\n178 119 79\n31 124 249\n42 60 167\n86 tonspfc\n206\n133",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "118 89\nhlqtx 171\n143 44\n167 92 250\n44 103\n200 145 99\n187 98\n135 94 204\n113 52 157\n57 118 70\n173 83 236\n70 86\n163 121 106\n93 34\n42 74\n126 197 91\n121 48 27\n218 98\n152 195 143\n96 247 230\n94 52\n147 250\n28 212 205\n89 169 88\n113 125\n147 64 145\n181 31 157\n124 53\n113 233 105\n234 111 48\n219 142 184\n168 mxvhnzgkt\n181\n148",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "34 29\nz 183\n132 148\n53 113 37\n73 149\n123 198 81\n170 129\n29 189 152\n50 26 74\n226 100 155\n213 123 217\n89 111\n83 211 206\n57 219\n137 198\n37 196 159\n90 79 188\n143 237\n231 31 226\n226 165 59\n208 26\n242 132\n63 139 98\n75 105 235\n129 77\n53 96 100\n98 45 227\n214 202\n218 131 28\n185 147 60\n67 100 77\n106 chmzufpyss\n107\n54",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "29 204\ntuy 217\n87 151\n190 49 202\n131 186\n106 26 63\n88 88\n41 202 31\n91 173 194\n99 79 154\n167 236 145\n44 151\n56 87 177\n184 174\n195 59\n74 164 50\n248 213 59\n228 135\n89 193 25\n107 242 95\n105 232\n130 235\n203 114 64\n174 41 60\n118 33\n97 204 182\n38 174 232\n250 219\n196 224 218\n73 183 200\n125 51 125\n117 zqylrcqz\n111\n219",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "500 500\npah 500\n500 500\n500 500 500\n500 500\n500 500 500\n500 500\n500 500 500\n500 500 500\n500 500 500\n500 500 500\n500 500\n500 500 500\n500 500\n500 500\n500 500 500\n500 500 500\n500 500\n500 500 500\n500 500 500\n500 500\n500 500\n500 500 500\n500 500 500\n500 500\n500 500 500\n500 500 500\n500 500\n500 500 500\n500 500 500\n500 500 500\n500 nmsxqshcy\n500\n500",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "500 500\njje 500\n500 500\n500 500 500\n500 500\n500 500 500\n500 500\n500 500 500\n500 500 500\n500 500 500\n500 500 500\n500 500\n500 500 500\n500 500\n500 500\n500 500 500\n500 500 500\n500 500\n500 500 500\n500 500 500\n500 500\n500 500\n500 500 500\n500 500 500\n500 500\n500 500 500\n500 500 500\n500 500\n500 500 500\n500 500 500\n500 500 500\n500 nsdtekivy\n500\n500",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 1\nqhjek 500\n500 499\n500 499 2\n1 1\n500 499 1\n500 500\n500 1 1\n499 1 2\n500 1 500\n2 500 500\n500 500\n2 2 2\n2 500\n499 500\n499 1 500\n1 1 499\n499 499\n1 2 1\n1 1 2\n2 499\n2 2\n2 2 1\n1 1 1\n499 500\n500 500 500\n500 2 2\n499 499\n2 1 499\n2 500 499\n500 499 499\n2 vftmtmbint\n2\n2",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 500\ntnss 499\n500 500\n2 499 499\n499 1\n499 500 1\n1 499\n499 1 499\n1 1 2\n499 1 2\n2 499 1\n500 499\n499 499 2\n500 500\n2 500\n1 1 2\n500 499 2\n2 500\n499 2 499\n1 1 499\n2 500\n499 1\n499 2 2\n500 499 500\n2 500\n2 2 499\n2 2 1\n2 499\n499 500 500\n1 1 1\n2 2 499\n499 r\n500\n500",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:58",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:38:22"
}
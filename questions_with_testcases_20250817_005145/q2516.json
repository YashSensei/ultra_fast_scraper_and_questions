{
  "problem_code": "problems",
  "title": "G",
  "tags": [],
  "text": "After Killing RaOne G-One had nothing to do, so he started reading books and became an avid book reader.To avoid purchasing books he started working in a library.Every evening he had to arrange the books on the shelf in increasing order of their serial number.Every book in the library is numbered...G-One found an ingenious way of arranging the books.  He can remove any book from the shelf and put it either at the beginning or at the end of the shelf.For example if the books are arranged in the order below:2  3  1  7  4  5  6he can make it sorted by removing '1' and placing it at the beginning and then removing '7' and placing it in the end.Since the book shelf can be very big and can have a large number of books, he needs your help to tell him the minimum remove and place operations he needs to do.Can you help him?Input1st line of the input contains number 't' denoting the number of shelves in the library. 2*t lines follow this1st line of each test case will have single number 'b' - denoting number of books on the shelf.2nd line will contain b numbers, each bi denoting the serial number of the book.OutputFor each test case output a single integer denoting the minimum number of remove and place operations needed to arrange the shelf.ExampleInput:3\r\n7\r\n2 3 1 7 4 5 6\r\n5\r\n1 2 3 4 5\r\n6\r\n6 5 4 3 2 1Output:2\r\n0\r\n5NOTEAll the values will be in the range [0, 107], number of test cases ≤ 100.",
  "sample_input": "2  3  1  7  4  5  6",
  "sample_output": "Input:3\r\n7\r\n2 3 1 7 4 5 6\r\n5\r\n1 2 3 4 5\r\n6\r\n6 5 4 3 2 1Output:2\r\n0\r\n5",
  "link": "https://www.spoj.com/problems/GONESORT",
  "scraped_at": "2025-08-17 00:34:02",
  "test_cases": [
    {
      "input": "2  3  1  7  4  5  6",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3\r\n7\r\n2 3 1 7 4 5 6\r\n5\r\n1 2 3 4 5\r\n6\r\n6 5 4 3 2 1",
      "expected_output": "2\r\n0\r\n5",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "3 9 1 3 10 9 9",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "2 8 10 3 7 5 8",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "3 6 5 6 5 4 1",
      "expected_output": "0",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "62 28 42 14 12 61 4",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "8 69 89 67 58 26 54",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "57 54 62 99 88 35 63",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "22 45 73 28 7 67 1",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "40 48 68 68 32 8 99",
      "expected_output": "0",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "78 193 417 460 142 235 399",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "58 176 80 477 298 441 210",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "227 342 309 492 392 492 304",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "300 277 310 286 353 63 487",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "184 261 323 321 186 90 293",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "360 182 256 321 254 79 132",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "457 490 176 117 450 257 379",
      "expected_output": "0",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "0",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "999 1 1000 1000 999 1 2",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:53",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:38"
}
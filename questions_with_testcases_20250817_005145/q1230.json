{
  "problem_code": "problems",
  "title": "Khairy and Gold Alloys",
  "tags": [],
  "text": "We all know \"Connect 4 Game\", One day Khairy has a grid with infinite height and n numbers representing the number of discs in the ith column.\r\nIt's guaranteed that no empty cells between any discs in the same column.\r\nfor each disc in the grid if Khairy saw a disc on its left OR its right, he'll say \"Wal3a\".\r\nGiven the N numbers, What's the maximum number that Khairy will say \"Wal3a\"!Khairy is a small guy who likes gold very much, but he has a problem in his eyes and the word \"WAL3A\" (WAL3A in Arabic means \"Firing\"), whenever he likes something very much sooner or later it is destroyed by any means (Please don't impress him with something you want :|)One day Khairy visited the National Museum and saw a Grid with infinite height and N columns and each columnicontains XiGold Alloys. No empty cells between Alloys in the same column.Unfortunately all Gold Alloys that impress Khairy in the 1st row are destroyed and disappeared :S, consequently the Alloys of the same columns above the destroyed Alloys fall to the the cell which is directly below it (each affected column height is decreased by 1 unit). Khairy continues saying \"WAL3A\" till he finds the first row not impressing anymore.The example below Khairy would say \"WAL3A\" twice and 7 gold alloys are destroyed.Of course the museum lost a fortune during Khairy's visit, so could you help the government find how many Gold Alloys are destroyed by Khairy.InputThe first line of input contains an integerT(1 <= 20 <=T) followed byTtest cases.Each test case contains a positive integerN[1 <=N<= 105] followed byNintegers [0 <=Xi<= 109] separated by spaces (see sample input for more clarification).OutputFor each test case output one line containsÂ how many Gold Alloys are destroyed by Khairy.ExampleInput:251 2 2 1 537 7 7Output:721",
  "sample_input": "Input:251 2 2 1 537 7 7Output:721",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/WAL3A",
  "scraped_at": "2025-08-17 00:33:40",
  "test_cases": [
    {
      "input": "251 2 2 1 537 7 7",
      "expected_output": "721",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "8 8 4 7 6 5 4",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "8 9 8 10 3 8 4",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "5 2 10 5 3 2 6",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "15 99 52 1 88 13 44",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "86 95 35 54 9 5 58",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "5 59 62 56 48 73 96",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "26 27 65 75 17 43 79",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "76 71 64 93 6 71 78",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "174 101 69 457 480 89 390",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "188 256 474 413 123 337 225",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "379 101 286 223 257 480 88",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "202 301 225 133 139 275 289",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "284 65 56 464 449 282 242",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "71 467 270 229 291 390 161",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "242 356 288 378 217 434 443",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "999 1 1000 2 1000 2 1000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 999 999 999 1000 2 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:49",
  "total_test_cases": 20
}
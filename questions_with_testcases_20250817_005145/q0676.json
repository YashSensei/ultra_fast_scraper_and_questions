{
  "problem_code": "problems",
  "title": "Candy Distribution",
  "tags": [],
  "text": "Alice is a teacher that loves her students. As the school year reaches its end, she wants to reward all her students with candies for all their hard work.Since each of her classes is unique, she decided she’ll give a different kind of candy for each class, and in order to avoid students being mad at others in their class, she wants to make things fair by giving all students in the same class the same kind of candy.Happily, she went to the candy shop, and fortunately found out that it had N different types of candy, exactly the same number of classes of students she taught!Looking at the prices and paying close attention to the number of students in each class, Alice noted that she could save some money by assigning the types of candy to certain classes. Because she’s a teacher, her income is not that big and saving money is very important to her, so she asked you to write a program to determine the least amount of money she must spend.InputEach test case consists of three lines. The first line contains a positive integerN(1 ≤N≤ 100000). The second line containsNintegersCi, theithinteger indicates the number of students in Alice’s i-th class. The third and last line also contains N integersPitheithinteger indicates the price of theithtype of candy (1 ≤Ci,Pi≤ 100000).The input ends with a line consisting of a0, which indicates end of input.OutputFor each test case, output a line containing the least amount of money Alice must spend.ExampleInput:41 1 1 12 2 2 2510 80 37 22 1096 8 8 20 150Output:82120",
  "sample_input": "Input:41 1 1 12 2 2 2510 80 37 22 1096 8 8 20 150Output:82120",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/CADYDIST",
  "scraped_at": "2025-08-17 00:33:15",
  "test_cases": [
    {
      "input": "41 1 1 12 2 2 2510 80 37 22 1096 8 8 20 150",
      "expected_output": "82120",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5 10 7 6 10 8 9 2 3 5 9 10 6 4 8",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "7 2 2 10 7 7 10 7 2 9 4 10 1 6 2",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "5 9 3 6 4 10 5 10 1 3 9 1 3 6 4",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "42 2 35 35 16 43 87 90 27 95 67 95 56 39 85",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "49 44 57 13 61 21 81 35 63 54 57 26 22 18 26",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "57 10 98 76 85 2 90 34 36 96 60 65 59 16 4",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "14 45 25 74 64 84 14 45 44 26 3 31 30 67 7",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "88 54 75 65 39 66 50 57 5 46 39 77 7 15 83",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "29761 49236 42897 35365 43093 32405 43478 7026 7508 7255 33754 21335 9566 10244 35608",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "8413 16426 41626 13015 30921 27062 32673 43453 17182 36549 11474 15066 41158 40360 22933",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "18421 15509 48760 22256 5543 5601 23821 28040 36764 16854 21439 17336 9986 31291 33104",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "20295 21652 36513 10805 28072 12853 5443 24608 26785 12261 21146 49446 21763 26769 9202",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "14237 23033 40449 30240 30821 47952 42955 10774 38303 13935 44732 44519 31286 48158 13673",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "37102 8687 9091 44984 11129 7821 21546 10350 49104 14292 44115 10893 49389 25540 21485",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "16142 25677 25917 28714 20561 20843 33068 49987 49599 42184 19937 42511 28855 30534 40530",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 2 2 2 99999 100000 100000 100000 99999 100000 1 1 2 1 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 2 100000 100000 1 99999 99999 1 2 1 1 2 1 99999 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:47",
  "total_test_cases": 20
}
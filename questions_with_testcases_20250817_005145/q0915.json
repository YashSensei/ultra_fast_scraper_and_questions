{
  "problem_code": "problems",
  "title": "Partial Palindrome",
  "tags": [],
  "text": "Fernando is president of country named Palindromia. Every two years there are elections in Palindromia, but not normal elections. Elections in Palindromia are preformed in next steps:Candidate which at the moment isn't president gives to the current president one stringO, which consist only of upper-case letters of English alphabet and character '?', stringU, which consist only of upper-case letters of English alphabet, and integerK.Current president has one day to compute all longest palindromes in the first string by the following rules:Every '?' inOis substituted with one letter fromU,i-th '?' inOwithi-th letter inU.Every time he search for palindromes, he may substitute some '?' with any letter, at mostK-times.If he finds palindrome, he goes to step 1.If he doesn't succeed, the candidate becomes the new president.If there are more candidates, go to step one.Fernando wants to stay president for at least two more years, so he asks you to write program which solves his problem.InputFirst line of input will contain stringO(1 ≤ length ofO≤ 5 × 105), string which Fernando must compute to stay president.Owill consist only of upper-case letters of English alphabet and character '?'. You may assume there is at least one '?' inO.Second line will contain stringU, string with leads for '?'s.i-th letter inUcorrespond toi-th '?' inO.Uwill consist only of upper-case letters of English alphabet.Third line will contain integerK(0 ≤ K ≤ 300), number of replacements.It is guaranteed that there will be not more than 300 '?'s.OutputIn first line of output print integerS, length of the longest palindrome that Fernando could find.In Second and next lines print stringPiand integerLi,longest palindrome and position where it starts. EachPimust contain only upper-case letters of English alphabet.Notes:you must print all longest palindromes, in alphabetically increasing orderif two or more palindromes starts at the same position, print only one of themExampleInput:UDOVICAB??IVODUANAVOL?MILOVANA\r\nCCA\r\n1Output:15\r\nANAVOLIMILOVANA 16\r\nUDOVICABACIVODU 1Note that both palindromes have 1 letter which Fernando has changed.Input:ABCDE??ABCDE??\r\nABCD\r\n1Output:5\r\nCBABC 6Input:ABCDE??ABCDEFG\r\nFG\r\n0Output:1\r\nA 1\r\nA 8\r\nB 2\r\nB 9\r\nC 10\r\nC 3\r\nD 4\r\nD 11\r\nE 5\r\nE 12\r\nF 13\r\nF 6\r\nG 7\r\nG 14",
  "sample_input": "Input:UDOVICAB??IVODUANAVOL?MILOVANA\r\nCCA\r\n1Output:15\r\nANAVOLIMILOVANA 16\r\nUDOVICABACIVODU 1",
  "sample_output": "Input:ABCDE??ABCDE??\r\nABCD\r\n1Output:5\r\nCBABC 6",
  "link": "https://www.spoj.com/problems/PARTPAL",
  "scraped_at": "2025-08-17 00:33:12",
  "test_cases": [
    {
      "input": "UDOVICAB??IVODUANAVOL?MILOVANA\r\nCCA\r\n1",
      "expected_output": "15\r\nANAVOLIMILOVANA 16\r\nUDOVICABACIVODU 1",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "ABCDE??ABCDE??\r\nABCD\r\n1",
      "expected_output": "5\r\nCBABC 6",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "cs\nsitl\n2",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "sciyqgoyckv\nje\n6",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "fphycbqxde\nxxte\n1",
      "expected_output": "To be computed",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "cnzlvtlj\njkcf\n87",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "p\nw\n100",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "as\nom\n49",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "dgohfhm\nlz\n20",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "hlhaksnkljuh\ns\n94",
      "expected_output": "To be computed",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "tw\nerhq\n104",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "sviyxvogiqzukbguc\nzsq\n63",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "jdmgfmyjwqekobnoopt\nx\n282",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "rk\nj\n144",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "hjweezsu\nrmaadf\n426",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "xbpz\nmihk\n153",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "dftgcwhvygxgihjswqxf\nmfdqfq\n260",
      "expected_output": "To be computed",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "vohulstqghslwb\noht\n1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "mby\nphh\n1000",
      "expected_output": "To be computed",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "xgtlrxioeo\nbtk\n1000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:48",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Quest Hunter",
  "tags": [],
  "text": "Tatama Land is on a crisis. Recently, a dragon woke up and will destroy Tatama Land to ashes. Hearing this news, Pheo, Waca, and Wembo decided to create a guild called Quest Hunter to slay the dragon.In order to defeat the dragon, they want to buy weapons first. They visit J0I Blacksmith, which sells N weapons, each with a price of Xigold. As Quest Hunter only have Y golds, they want to buy as many weapons as they can using Y golds.After buying weapons, they go to a local tavern to hire mercenaries for their guild. Each mercenary should buy a weapon they just bought. However, Quest Hunter lost the bill, and they totally forget how much gold for each weapon. They decided to randomly give a price to each weapon, but no weapon will costs 0 gold, and the total price of all weapons should be the same amount with total gold used to buy those weapons. Now, they're curious about how many price configurations available. As the answer can be very large, output it with modulo 109+ 7InputAn integer T, number of test cases in the first rowFor each test case:- First row is an integer N- Second row contains N integer, Xi, the price of each weapon- Third row is an integer YOutputFor each test case, output \"Case #C: D\" where C is the test case number and D is the number of configurations.ExampleInput:251 2 3 4 5642 2 2 21Output:Case #1: 3Case #2: 0ExplanationFor the first case, total amount of money is (1+2+3) = 6 and there are 3 weapons. Quest Hunter can sell it using these configurations (1,1,4), (1,2,3), (2,2,2)For second case, Quest Hunter can't buy any weaponsConstraints:1 ≤ T ≤ 1021 ≤ N,Y,Xi≤ 103",
  "sample_input": "Input:251 2 3 4 5642 2 2 21Output:Case #1: 3Case #2: 0",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/NPC2016E",
  "scraped_at": "2025-08-17 00:33:21",
  "test_cases": [
    {
      "input": "251 2 3 4 5642 2 2 21",
      "expected_output": "Case #1: 3Case #2: 0",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "9 6 8 7 1 9 9 6",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "10 1 6 5 6 8 10 1",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "1 6 9 7 10 7 2 4",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "24 58 73 45 22 98 76 80",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "62 9 3 62 53 11 17 84",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "97 86 27 71 70 10 5 85",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "24 17 74 77 93 16 3 37",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "56 47 46 82 49 3 95 17",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "454 193 55 191 127 147 475 327",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "57 162 393 188 453 388 70 143",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "438 220 251 175 373 420 301 381",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "407 291 348 446 341 365 354 267",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "61 68 127 426 302 229 172 189",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "61 266 379 346 190 490 289 479",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "194 280 219 373 249 192 455 205",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 1 1 999 1 1000 1 1000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1000 999 1 999 1000 999 999 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:48",
  "total_test_cases": 20
}
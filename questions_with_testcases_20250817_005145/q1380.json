{
  "problem_code": "problems",
  "title": "Finding Fractions",
  "tags": [],
  "text": "EnglishVietnameseGiven a, b, c, d, find a fraction p/q with minimum q, and satisfied a/b < p/q < c/d.InputFor each test case, one line contains four integers a, b, c, d.OutputFor each test case, print the fraction (see the sample for details). If multiple solution exists, output the one with minimum p.ExampleInput:1 3 1 2\r\n2 1 3 1\r\n2 1 4 1\r\n1000 1001 1001 1002Output:2/5\r\n5/2\r\n3/1\r\n2001/2003ConstraintsDataset 1: a, b, c, d (1 ≤ a, b, c, d ≤ 1e9, and a/b < c/d)",
  "sample_input": "Input:1 3 1 2\r\n2 1 3 1\r\n2 1 4 1\r\n1000 1001 1001 1002Output:2/5\r\n5/2\r\n3/1\r\n2001/2003",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/FINFRAC",
  "scraped_at": "2025-08-17 00:33:46",
  "test_cases": [
    {
      "input": "1 3 1 2\r\n2 1 3 1\r\n2 1 4 1\r\n1000 1001 1001 1002",
      "expected_output": "2/5\r\n5/2\r\n3/1\r\n2001/2003",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1 10 8 7\n5 2 6 3\n8 10 2 5\n7 9 6 6",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "1 8 8 10\n10 3 9 7\n8 7 3 5\n10 5 8 8",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "1 6 5 5\n10 3 3 5\n10 1 10 9\n9 4 1 9",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "30 46 91 75\n86 11 100 71\n16 28 44 75\n63 77 7 75",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "16 68 77 27\n29 61 11 90\n43 72 87 18\n14 59 57 69",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "33 69 80 18\n29 14 62 54\n11 27 95 80\n72 84 13 34",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "6 58 64 6\n42 2 79 82\n45 64 34 96\n66 71 32 85",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "24 79 37 91\n19 41 35 42\n79 36 67 75\n82 60 29 23",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "254 211 91 74\n451 98 329 322\n151 488 216 106\n374 417 471 295",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "91 176 392 196\n52 119 207 380\n117 112 77 335\n198 87 400 201",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "166 109 254 163\n450 155 299 488\n136 81 406 249\n420 190 171 213",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "69 336 176 248\n408 152 187 154\n373 220 87 285\n323 327 500 440",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "286 87 460 141\n109 225 222 95\n148 60 130 357\n440 120 195 434",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "363 430 192 461\n494 104 214 469\n410 461 138 248\n79 345 486 104",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "241 277 190 260\n340 177 163 173\n205 239 413 368\n217 150 103 489",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 2 1000 999\n1 1000 2 1000\n999 1000 1000 1000\n1 1 1 1000",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "999 1000 1 2\n2 1000 2 999\n999 1 1 2\n1000 1000 2 999",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:49",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:02"
}
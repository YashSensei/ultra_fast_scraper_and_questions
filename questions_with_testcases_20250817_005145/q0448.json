{
  "problem_code": "problems",
  "title": "Internet Spamming",
  "tags": [],
  "text": "Two Years from now,Spam will be solved.Bill Gates (2004)Let’s imagine...The World has evolved so much. Nowadays, the anger of rivalries is being extinguished by the help of internet. You’re the Mr. Despicable of the underworld and you have invented a new cyber virus, which acts like a SPAM.As people are getting more and more virtual, the count of Social sites are being raised on the peak rate. You want to deal damage to some Social Sites. Remember, “Suffering is more painful than Death”. So, your goal is todeal damage to as many sites as possible, rather than totally destroying a site.Each of the viruses will send some spam mails. If a user receives a Spam, the account of the user will be removed forever from the site that the user is using and the site will lose one of its users.Now, being a Programmer, you know a virus is nothing but a set of instructions. You have coded everything a virus has to follow except one thing, “On which site a certain virus should attack?” Now, you have to write a program that will tell each virus on which site it should attack. There is also a bug on your viruses.A virus cannot attack a site, unless the count of users on that site is more than or equal to the count of spams the virus can produce. Moreover, the viruses will start attacking maintaining the order in which they are given in the input. The first virus will start sending Spams first, then the second one, and so on...Now, write a program that will tell a virus, on which site it should attack.InputLine 1: N (≤ 2e5), M (≤ 2e5) [Number of Sites and Number of Viruses]Line 2: U1, U2, U3... Un(Ui≤ 1e9) [Number of Users on the ithsite]Line 3: P1, P2, P3... Pm(Pi≤ 1e9) [Number of spam mails the ithvirus can produce]OutputLine 1: I1, I2, I3... Im(1 ≤ Ii≤ N) [Index of the Site the ithvirus should attack on]Note:If there are no sites, the ithvirus can attack, print 0 on the ithindex.SampleInput:10 10\r\n7 2 9 5 1 2 1 1 2 5\r\n7 5 6 4 8 3 9 10 1 6Output:1 3 0 3 0 4 0 0 2 0Explanation1stvirus attacked the 1stsite, after that the users of the 1stsite decreased to 0. Now, no virus can attack the 1stsite.2ndvirus attacked the 3rdsite, and then the users of the 3rdsite decreased to 4 and later on, it was attacked again by the 4thsite and got users count decreased to 0.Now, there remains no sites, which has users more than or equal to the spam mails of the 3rdvirus. That’s why, it can attack no site.",
  "sample_input": "Input:10 10\r\n7 2 9 5 1 2 1 1 2 5\r\n7 5 6 4 8 3 9 10 1 6Output:1 3 0 3 0 4 0 0 2 0",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/SPAM_ATX",
  "scraped_at": "2025-08-17 00:33:18",
  "test_cases": [
    {
      "input": "10 10\r\n7 2 9 5 1 2 1 1 2 5\r\n7 5 6 4 8 3 9 10 1 6",
      "expected_output": "1 3 0 3 0 4 0 0 2 0",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1 10\n8 10 3 8 4 4 2 1 10 9\n7 8 9 4 7 3 9 5 1 3",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "5 1\n1 5 4 2 5 8 5 7 5 2\n4 7 10 7 9 10 8 4 8 5",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "7 5\n4 2 9 10 7 10 5 4 2 3\n4 6 4 9 6 2 8 9 9 6",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "47 73\n20 41 60 24 41 34 23 48 53 53\n5 83 25 53 25 8 95 27 16 33",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "87 57\n16 90 67 39 86 100 82 69 63 83\n57 96 55 59 54 19 89 72 16 89",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "64 87\n86 17 21 68 49 49 29 46 93 27\n46 49 100 62 36 96 83 50 88 74",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "95 69\n21 89 78 68 59 42 44 9 54 5\n96 59 5 87 94 96 64 72 49 86",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "10 74\n17 28 76 64 67 53 75 48 61 48\n29 24 7 48 37 95 80 59 6 94",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "446 105\n53 183 460 386 237 394 321 376 109 260\n367 149 109 331 72 371 482 319 177 349",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "62 253\n78 120 303 421 333 281 459 335 459 343\n266 168 352 268 441 209 438 377 109 261",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "174 86\n408 247 404 300 391 474 430 331 192 230\n109 281 436 221 495 136 116 146 386 280",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "255 251\n319 347 241 298 476 94 481 219 331 459\n103 377 272 69 409 395 365 182 275 281",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "206 238\n489 73 231 329 76 310 143 205 239 87\n441 201 421 280 500 165 438 475 203 215",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "332 189\n398 254 493 283 345 441 143 117 293 496\n318 102 451 225 56 113 242 250 482 468",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "433 210\n460 344 284 498 377 376 490 137 91 400\n53 108 328 158 462 438 392 472 414 166",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "999 2\n2 2 1 2 1000 1 1000 1 2 999\n999 1000 999 999 1 2 1000 999 1000 1000",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 1\n1000 1000 1 2 2 2 2 1000 1 2\n999 1 999 999 1 2 1000 2 999 1",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:47",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:36:34"
}
{
  "problem_code": "problems",
  "title": "Sell Pigs",
  "tags": [],
  "text": "EnglishVietnameseMirko works on a pig farm that consists of M  locked pig-houses \r\nand Mirko  can't unlock any pig-house because he doesn't have the keys. \r\nCustomers come to the farm one after another. Each of them has keys \r\nto some pig-houses and wants to buy a certain number of pigs. \r\nAll data concerning customers planning to visit the farm on that \r\nparticular day are available to Mirko early in the morning so that \r\nhe can make a sales-plan in order to maximize the number of pigs sold. \r\nMore precisely, the procedure is as following: the customer arrives, \r\nopens all pig-houses to which he has the key, Mirko sells a certain number \r\nof pigs from all the unlocked pig-houses to him, and, if Mirko wants, \r\nhe can redistribute the remaining pigs across the unlocked pig-houses. \r\nAn unlimited number of pigs can be placed in every pig-house. \r\nWrite a program that will find the maximum number of pigs that he can \r\nsell on that dayInputThe first line of input file contains two integers M and N, 1 ≤ M ≤ 1000,\r\n1 ≤ N ≤ 100, number of pig-houses and  number of customers. Pig \r\nhouses are numbered from 1 to M and customers are numbered \r\nfrom 1 to N. \r\nThe next line contains M integers, for each pig-house initial number\r\nof pigs. The number of pigs in each pig-house is greater or equal to \r\n0 and less or equal to 1000. \r\nThe next N lines contains records about the customers in the following \r\nform ( record about the i-th customer is written in the (i+2)-th line): \r\nA K1 K2 ... KA B \r\nIt means that this customer has key to the pig-houses marked with \r\nthe numbers K1, K2, ..., KA \r\n(sorted non-decreasingly ) and that he wants to buy B pigs. Numbers \r\nA and B can be equal to 0.OutputThe first and only line of the output file should contain the number of \r\nsold pigs.SampleInput:3 3\r\n3 1 10\r\n2 1 2 2\r\n2 1 3 3\r\n1 2 6Output:7Input:6 6\r\n6 3 2 0 1 3\r\n2 1 2 0\r\n1 3 3\r\n1 1 1\r\n2 2 3 8\r\n2 4 5 2\r\n2 4 6 6Output:15Input:11 5\r\n1 2 2 1 0 2 4 1 1 1 2\r\n5 1 2 3 4 5 3\r\n4 1 2 6 7 5\r\n2 3 8 1\r\n3 3 6 11 5\r\n3 8 9 10 3Output:17",
  "sample_input": "Input:3 3\r\n3 1 10\r\n2 1 2 2\r\n2 1 3 3\r\n1 2 6Output:7",
  "sample_output": "Input:6 6\r\n6 3 2 0 1 3\r\n2 1 2 0\r\n1 3 3\r\n1 1 1\r\n2 2 3 8\r\n2 4 5 2\r\n2 4 6 6Output:15",
  "link": "https://www.spoj.com/problems/MPIGS",
  "scraped_at": "2025-08-17 00:33:56",
  "test_cases": [
    {
      "input": "3 3\r\n3 1 10\r\n2 1 2 2\r\n2 1 3 3\r\n1 2 6",
      "expected_output": "7",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "6 6\r\n6 3 2 0 1 3\r\n2 1 2 0\r\n1 3 3\r\n1 1 1\r\n2 2 3 8\r\n2 4 5 2\r\n2 4 6 6",
      "expected_output": "15",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "8 10\n9 6 9\n5 2 1 3\n9 2 5 8\n8 7 9",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "8 7\n10 10 10\n8 9 2 4\n10 3 2 4\n4 6 6",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "2 2\n7 9 3\n4 3 3 2\n6 1 7 8\n3 5 6",
      "expected_output": "0",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "68 36\n4 59 14\n40 9 73 47\n12 7 80 81\n83 75 85",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "51 4\n15 55 52\n43 76 35 33\n22 34 38 75\n4 59 24",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "98 38\n56 25 13\n33 64 48 48\n35 72 51 74\n78 22 29",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "76 58\n52 78 11\n65 83 3 60\n89 3 54 98\n33 53 10",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "4 94\n92 64 64\n85 56 64 92\n20 35 57 87\n81 51 17",
      "expected_output": "0",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "14 12\n16 36 26\n19 8 16 29\n20 9 41 39\n40 23 39",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "19 36\n12 6 8\n24 22 8 35\n45 24 13 30\n19 37 42",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "26 31\n29 22 29\n28 29 20 38\n27 5 5 21\n24 23 23",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "22 21\n19 37 23\n5 47 32 7\n34 16 39 8\n21 47 5",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "22 37\n25 8 8\n43 27 24 24\n32 20 7 31\n37 41 16",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "19 18\n10 25 43\n29 23 41 7\n23 24 39 31\n26 21 34",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "31 45\n21 12 22\n25 40 44 7\n8 20 35 11\n28 42 45",
      "expected_output": "0",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "100 100\n100 100 100\n100 100 100 100\n100 100 100 100\n100 100 100",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "100 100\n100 100 100\n100 100 100 100\n100 100 100 100\n100 100 100",
      "expected_output": "0",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "2 100\n100 100 1\n99 1 100 1\n99 99 99 99\n2 1 99",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:50",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:04"
}
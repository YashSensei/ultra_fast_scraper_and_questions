{
  "problem_code": "problems",
  "title": "Cool Numbers",
  "tags": [],
  "text": "Cool numbers are those, whose digits can be partitioned into two sets such that the sum of the digits in either sets are equal.Example: 23450 is cool because 3+4+0 = 2+5; So is 91125;The numbers 567, 34523 are not cool, since there is no such digit partition.Write a program that prints the number of cool numbers in the inclusive range [A,B].Input Format:The input file consists of multiple testcases.Each case contains one line containing two 32-bit unsigned integers A and B. (1 <= A <= B <= 4*109).Input terminates with a line containing two zeros and must not be processed.Output Format:For each testcase print a single line containing one integer saying the number of cool numbers between A and B, inclusive.Sample Input:1 11\r\n12 20\r\n1 20\r\n3 100\r\n6354 234363\r\n123456789 234567891\r\n0 0Sample Output:1\r\n0\r\n1\r\n9\r\n82340\r\n54801678Test Data:About 50 testcases.",
  "sample_input": "1 11\r\n12 20\r\n1 20\r\n3 100\r\n6354 234363\r\n123456789 234567891\r\n0 0",
  "sample_output": "1\r\n0\r\n1\r\n9\r\n82340\r\n54801678",
  "link": "https://www.spoj.com/problems/COOLNUMS",
  "scraped_at": "2025-08-17 00:34:14",
  "test_cases": [
    {
      "input": "1 11\r\n12 20\r\n1 20\r\n3 100\r\n6354 234363\r\n123456789 234567891\r\n0 0",
      "expected_output": "1\r\n0\r\n1\r\n9\r\n82340\r\n54801678",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "10 3\n1 9\n10 1\n8 4\n2 8\n2 1\n3 7",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "8 2\n7 5\n8 2\n10 5\n8 2\n1 10\n3 2",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "3 1\n6 5\n7 8\n10 5\n6 4\n9 7\n9 8",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "50 45\n5 12\n37 100\n65 83\n22 86\n85 64\n89 29",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "12 79\n4 63\n44 35\n49 33\n94 55\n99 7\n78 43",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "56 69\n97 34\n18 79\n63 61\n16 81\n23 20\n30 11",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "51 29\n3 100\n49 45\n52 43\n45 94\n75 67\n58 11",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "79 58\n91 96\n98 93\n69 28\n25 11\n84 96\n98 72",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "357 280\n185 90\n138 432\n376 187\n200 184\n281 263\n176 115",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "498 217\n76 279\n406 326\n52 367\n445 106\n132 206\n397 376",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "69 413\n424 141\n420 472\n422 301\n187 337\n257 70\n64 162",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "280 372\n50 443\n477 110\n490 286\n59 348\n281 381\n360 316",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "431 336\n353 264\n150 336\n300 422\n76 234\n379 418\n214 253",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "116 479\n428 387\n129 345\n385 327\n320 116\n396 490\n192 204",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "187 210\n63 98\n116 269\n334 489\n494 255\n289 124\n215 190",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 1\n999 2\n999 1000\n2 2\n2 999\n1 2\n1000 1000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 2\n1000 999\n2 1000\n1 1000\n1 1000\n999 2\n1 999",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:56",
  "total_test_cases": 20
}
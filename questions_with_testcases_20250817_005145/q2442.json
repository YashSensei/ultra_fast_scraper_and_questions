{
  "problem_code": "problems",
  "title": "The Ant",
  "tags": [],
  "text": "There arensticks lying on the ground. The Ant can move only along the sticks. It can go from one stick to another only if the sticks intersect or touch each other. Help the Ant find out if it can  reach the stickyfrom the stickx.InputThe first line of the input contains numbert– the amount of tests. Thenttest descriptions follow. The first line of each test contains two  integersnandm- the number of stick and the number of queries. Nextnlines contain four integersAx,Ay,Bx,By- the coordinates of the endpoints of a stick. You may consider stick to be straight segment on a plane. The nextmlines contain two integers eachxandywhich are the queries.Constraints1 ≤t≤ 1001 ≤n,m≤ 1000-10000 ≤Ax,Ay,Bx,By≤ 100001 ≤x,y≤nOutputFor each query print \"YES\" if the Ant can reach the stick numberyfrom the stick numberx, otherwise print \"NO\".ExampleInput:23 31 3 4 33 4 3 13 1 5 11 21 32 23 31 1 3 12 1 3 13 2 4 11 21 32 3Output:YESYESYESYESNONO",
  "sample_input": "Input:23 31 3 4 33 4 3 13 1 5 11 21 32 23 31 1 3 12 1 3 13 2 4 11 21 32 3Output:YESYESYESYESNONO",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/ANTTT",
  "scraped_at": "2025-08-17 00:33:52",
  "test_cases": [
    {
      "input": "23 31 3 4 33 4 3 13 1 5 11 21 32 23 31 1 3 12 1 3 13 2 4 11 21 32 3",
      "expected_output": "YESYESYESYESNONO",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "10 1 8 3 10 3 9 2 3 10 10 2 8 10 5 2 10 8 3 4 5 5 9 7 4 8 7",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "9 10 8 1 2 1 3 3 3 8 7 4 9 8 10 2 6 5 4 4 1 2 4 7 5 3 9",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "3 7 4 6 10 7 5 4 3 1 1 6 9 10 3 3 7 4 5 6 5 1 3 3 5 6 4",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "35 40 60 98 89 69 75 42 41 4 68 62 75 3 63 65 86 53 3 4 47 49 1 14 33 58 87",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "28 56 83 22 20 45 7 72 82 36 50 68 60 65 58 17 17 64 16 84 41 9 65 94 20 22 38",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "97 74 85 12 52 80 55 49 91 17 80 74 96 99 34 36 64 34 60 19 63 42 92 63 45 42 50",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "32 53 56 94 75 35 68 15 21 69 51 77 77 13 98 51 97 21 88 24 31 62 91 41 46 17 3",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "65 89 94 25 63 50 58 46 2 65 93 9 19 61 29 79 68 12 76 2 92 28 61 100 54 28 47",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "185 462 351 181 378 181 315 62 382 422 408 143 100 484 400 446 117 408 468 473 305 439 454 200 238 74 81",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "198 129 332 165 161 78 188 294 407 56 75 463 361 53 100 263 352 207 330 181 126 194 302 202 440 302 62",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "393 414 396 313 469 74 364 257 413 153 320 100 202 306 280 149 317 58 277 288 327 485 458 399 112 200 81",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "295 215 480 434 165 227 189 423 379 314 303 410 204 339 214 84 186 482 100 298 374 176 211 178 195 74 344",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "394 84 445 461 481 416 375 499 424 110 371 415 324 423 125 465 204 372 269 346 392 391 151 127 343 181 52",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "127 399 190 389 381 466 358 337 182 382 333 304 358 103 101 415 224 271 451 264 414 174 82 148 142 405 374",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "116 316 294 340 282 443 103 58 319 376 315 371 378 214 297 430 164 168 227 109 53 268 445 493 292 410 261",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "999 999 2 1000 1000 999 1000 1 999 999 2 999 1000 1000 999 1000 1 1000 999 1000 999 2 1 2 1 1 1000",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "999 999 1000 1000 1 2 999 999 1 2 1000 999 2 2 1 999 1 1000 2 999 2 1 1 1 1000 2 2",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:53",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:35"
}
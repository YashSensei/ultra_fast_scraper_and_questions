{
  "problem_code": "problems",
  "title": "Free tour II",
  "tags": [],
  "text": "After the success of 2nd anniversary (take a look at problemFTOURfor more details), this 3rd year, Travel Agent SPOJ goes on with another discount tour.The tour will be held onICPCisland, a miraculous one on the Pacific Ocean. We listNplaces (indexed from 1 toN) where the visitors can have a trip. Each road connecting them has aninterest value, and this value can benegative(if there is nothing interesting to view there). Simply, theseNplaces along with the roads connecting them form atree structure. We will choosetwo placesas the departure and destination of the tour.Since September is the festival season of local inhabitants, some places are extremely crowded (we call themcrowded places). Therefore, the organizer of the excursion hopes the tour will visitat mostKcrowded places(too tiring to visit many of them) and of course, thetotal number of interesting valueshould be maximum.Briefly, you are given a map ofNplaces, an integerK, andMid numbers ofcrowded place. Please help us to find the optimal tour. Note that we can visit each place onlyonce(or our customers easily feel bored), also the departure and destination placesdon't need to be different.InputThere is exactly one case. First one line, containing 3 integersN K M, with 1 <=N<= 200000, 0 <=K<=M, 0 <=M<=N.NextMlines, each line includes an id number of acrowded place.The last (N- 1) lines describe (N- 1) two-way roads connectedNplaces, forma b i, witha, bis the id of 2 places, andiis itsinterest value(-10000 <=i<= 10000).OutputOnly one number, the maximum total interest value we can obtain.ExampleInput:8 2 3\r\n3\r\n5\r\n7\r\n1 3 1\r\n2 3 10\r\n3 4 -2\r\n4 5 -1\r\n5 7 6\r\n5 6 5\r\n4 8 3Output:12ExplanationWe choose 2 and 6 as the departure and destination place, so the tour will be 2 → 3 → 4 → 5 → 6, total interest value = 10 + (-2) + (-1) + 5 = 12* Added some unofficial cases",
  "sample_input": "Input:8 2 3\r\n3\r\n5\r\n7\r\n1 3 1\r\n2 3 10\r\n3 4 -2\r\n4 5 -1\r\n5 7 6\r\n5 6 5\r\n4 8 3Output:12",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/FTOUR2",
  "scraped_at": "2025-08-17 00:34:12",
  "test_cases": [
    {
      "input": "8 2 3\r\n3\r\n5\r\n7\r\n1 3 1\r\n2 3 10\r\n3 4 -2\r\n4 5 -1\r\n5 7 6\r\n5 6 5\r\n4 8 3",
      "expected_output": "12",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "7 5 3\n10\n9\n8\n5 7 2\n7 4 2\n7 9 8\n5 6 2\n5 1 9\n10 1 8\n7 5 1",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "3 6 5\n1\n6\n10\n8 5 5\n3 6 5\n4 9 2\n7 1 3\n10 5 1\n6 6 6\n3 2 7",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "2 6 7\n2\n1\n9\n8 6 2\n7 3 8\n5 10 5\n2 6 10\n9 3 6\n8 7 1\n8 8 5",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "57 20 76\n20\n13\n16\n82 78 32\n43 1 63\n66 98 13\n2 17 62\n83 8 89\n69 76 54\n20 65 15",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "19 69 24\n22\n71\n79\n78 100 77\n30 64 56\n64 98 17\n81 32 35\n100 57 60\n62 72 46\n88 8 2",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "45 70 48\n39\n23\n83\n14 83 4\n76 43 2\n41 83 85\n39 2 83\n25 31 22\n97 19 21\n52 55 65",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "69 64 95\n21\n16\n8\n97 49 27\n59 88 13\n23 11 56\n88 76 12\n87 70 62\n44 50 87\n98 96 8",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "5 10 57\n58\n86\n39\n42 35 54\n29 35 4\n72 9 51\n77 92 65\n74 72 81\n53 87 60\n79 79 28",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "256 323 239\n190\n451\n75\n411 148 442\n246 238 144\n401 198 429\n331 370 415\n344 370 141\n240 156 257\n75 152 414",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "175 230 288\n70\n455\n494\n207 416 105\n424 154 105\n171 356 428\n393 206 426\n157 66 201\n309 463 171\n490 97 246",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "319 243 219\n367\n414\n290\n160 249 150\n133 150 437\n117 413 300\n174 473 423\n466 270 179\n442 434 357\n246 339 391",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "263 53 226\n396\n298\n487\n351 319 455\n107 247 179\n387 292 319\n99 174 366\n175 454 314\n402 120 413\n405 167 227",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "358 122 487\n184\n266\n461\n151 123 386\n228 291 359\n255 57 467\n68 177 414\n105 65 158\n217 163 435\n361 91 278",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "421 405 445\n54\n320\n150\n373 406 419\n330 106 306\n310 445 398\n319 461 69\n238 267 194\n103 209 490\n490 118 371",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "74 389 201\n289\n122\n90\n424 302 175\n53 321 281\n182 479 465\n50 191 251\n478 312 199\n463 288 224\n438 272 405",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000\n1000\n1000\n1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000\n1000\n1000\n1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1 2\n1000\n999\n999\n1 1000 999\n1 1 1\n1 1 999\n1000 1 1\n999 2 1000\n1 1000 2\n1000 1000 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 999 2\n1\n2\n999\n2 2 2\n999 2 1\n1 1 2\n1 1 1\n999 1000 2\n1 1000 1\n2 999 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:56",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Grey Area",
  "tags": [],
  "text": "Dr. Grey is a data analyst, who visualizes various aspects of data received from all over theworld everyday. He is extremely good at sophisticated visualization tools, but yet his favorite is a simple self-made histogram generator.Figure 1 is an example of histogram automatically produced by his histogram generator. A histogram is a visual display of frequencies of value occurrences as bars. In this example, values in the interval 0–9 occur five times, those in the interval 10–19 occur three times, and 20–29 and 30–39 once each.Dr. Grey’s histogram generator is a simple tool. First, the height of the histogram is fixed, that is, the height of the highest bar is always the same and those of the others are automatically adjusted proportionately. Second, the widths of bars are also fixed. It can only produce a histogram of uniform intervals, that is, each interval of a histogram should have the same width (10 in the above example). Finally, the bar for each interval is painted in a grey color, where the colors of the leftmost and the rightmost intervals are black and white,respectively, and the darkness of bars monotonically decreases at the same rate from left to right. For instance, in Figure 1, the darkness levels of the four bars are 1, 2/3, 1/3, and 0, respectively.In this problem, you are requested to estimate ink consumption when printing a histogram on paper. The amount of ink necessary to draw a bar is proportional to both its area and darkness.InputThe input consists of multiple datasets, each of which contains integers and specifies a value table and intervals for the histogram generator, in the following format:n wv1v2...vnn is the total number of value occurrences for the histogram, and each of the n lines following the first line contains a single value. Note that the same value may possibly occur multiple times.w is the interval width. A value v is in the first (i.e. leftmost) interval if 0 ≤ vYou may assume the following:1 ≤ n ≤ 10010 ≤ w ≤ 500 ≤ vi ≤ 100 for 1 ≤ i ≤ nYou can also assume that the maximum value is no less than w. This means that the histogram has more than one interval.The end of the input is indicated by a line containing two zeros.OutputFor each dataset, output a line containing the amount of ink consumed in printing the histogram.One unit of ink is necessary to paint one highest bar black. Assume that 0.01 units of ink per histogram is consumed for various purposes except for painting bars such as drawing lines and characters (see Figure 1). For instance, the amount of ink consumed in printing the histogram in Figure 1 is:Each output value should be a 6 decimal fraction.ExampleInput:3 50\r\n100\r\n0\r\n100\r\n3 50\r\n100\r\n100\r\n50\r\n10 10\r\n1\r\n2\r\n3\r\n4\r\n5\r\n16\r\n17\r\n18\r\n29\r\n30\r\n0 0Output:0.510000\r\n0.260000\r\n1.476667",
  "sample_input": "Input:3 50\r\n100\r\n0\r\n100\r\n3 50\r\n100\r\n100\r\n50\r\n10 10\r\n1\r\n2\r\n3\r\n4\r\n5\r\n16\r\n17\r\n18\r\n29\r\n30\r\n0 0Output:0.510000\r\n0.260000\r\n1.476667",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/SCPC11A",
  "scraped_at": "2025-08-17 00:34:32",
  "test_cases": [
    {
      "input": "3 50\r\n100\r\n0\r\n100\r\n3 50\r\n100\r\n100\r\n50\r\n10 10\r\n1\r\n2\r\n3\r\n4\r\n5\r\n16\r\n17\r\n18\r\n29\r\n30\r\n0 0",
      "expected_output": "0.510000\r\n0.260000\r\n1.476667",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3 8\n1\n3\n4\n9 6\n4\n8\n3\n4 3\n5\n9\n10\n3\n7\n3\n10\n9\n6\n5\n2 10",
      "expected_output": "0\n1\n3\n4\n0\n4\n8\n3\n0\n5\n9\n10\n3\n7\n3\n10\n9\n6\n5\n0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "9 4\n1\n2\n4\n1 10\n3\n10\n7\n8 8\n8\n2\n4\n5\n3\n3\n1\n7\n8\n8\n7 7",
      "expected_output": "0\n1\n2\n4\n0\n3\n10\n7\n0\n8\n2\n4\n5\n3\n3\n1\n7\n8\n8\n0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "8 6\n5\n2\n3\n10 4\n6\n10\n1\n7 5\n7\n4\n9\n2\n5\n1\n1\n1\n6\n8\n2 1",
      "expected_output": "0\n5\n2\n3\n0\n6\n10\n1\n0\n7\n4\n9\n2\n5\n1\n1\n1\n6\n8\n0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "31 83\n84\n67\n92\n91 23\n2\n3\n87\n19 12\n43\n48\n27\n75\n18\n36\n6\n35\n34\n38\n17 100",
      "expected_output": "0\n84\n67\n92\n0\n2\n3\n87\n0\n43\n48\n27\n75\n18\n36\n6\n35\n34\n38\n0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "60 84\n50\n80\n10\n58 65\n2\n79\n54\n10 32\n45\n31\n8\n52\n97\n22\n74\n62\n73\n24\n31 94",
      "expected_output": "0\n50\n80\n10\n0\n2\n79\n54\n0\n45\n31\n8\n52\n97\n22\n74\n62\n73\n24\n0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "64 3\n84\n68\n44\n65 44\n90\n84\n81\n82 87\n65\n39\n11\n59\n33\n19\n21\n87\n83\n42\n40 68",
      "expected_output": "0\n84\n68\n44\n0\n90\n84\n81\n0\n65\n39\n11\n59\n33\n19\n21\n87\n83\n42\n0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "76 15\n62\n62\n27\n88 69\n71\n52\n33\n95 4\n51\n83\n90\n50\n96\n64\n32\n34\n8\n95\n16 99",
      "expected_output": "0\n62\n62\n27\n0\n71\n52\n33\n0\n51\n83\n90\n50\n96\n64\n32\n34\n8\n95\n0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "60 39\n18\n6\n80\n63 64\n7\n73\n45\n8 45\n76\n4\n42\n2\n85\n39\n38\n59\n20\n7\n50 52",
      "expected_output": "0\n18\n6\n80\n0\n7\n73\n45\n0\n76\n4\n42\n2\n85\n39\n38\n59\n20\n7\n0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "1524 3659\n4859\n2647\n1414\n2240 2360\n4916\n1136\n817\n876 2616\n2477\n1354\n556\n1335\n3586\n4771\n4965\n2437\n1027\n1603\n997 3192",
      "expected_output": "0\n4859\n2647\n1414\n0\n4916\n1136\n817\n0\n2477\n1354\n556\n1335\n3586\n4771\n4965\n2437\n1027\n1603\n0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "1958 1265\n4186\n1373\n1617\n3003 915\n4747\n2280\n1186\n4562 3577\n1308\n3120\n2235\n2414\n3387\n2227\n2430\n4123\n981\n540\n3677 4397",
      "expected_output": "0\n4186\n1373\n1617\n0\n4747\n2280\n1186\n0\n1308\n3120\n2235\n2414\n3387\n2227\n2430\n4123\n981\n540\n0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "4134 3298\n721\n731\n2679\n4670 3115\n2048\n3586\n586\n2535 3807\n4158\n1474\n3733\n2664\n3602\n1745\n3306\n926\n4059\n4140\n2524 3838",
      "expected_output": "0\n721\n731\n2679\n0\n2048\n3586\n586\n0\n4158\n1474\n3733\n2664\n3602\n1745\n3306\n926\n4059\n4140\n0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "1813 3189\n1479\n1084\n4595\n2326 575\n3277\n1275\n1473\n1539 2677\n3275\n4465\n1484\n558\n3403\n3638\n3768\n1325\n1358\n4189\n1252 2014",
      "expected_output": "0\n1479\n1084\n4595\n0\n3277\n1275\n1473\n0\n3275\n4465\n1484\n558\n3403\n3638\n3768\n1325\n1358\n4189\n0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "2947 1938\n3602\n1358\n4688\n3521 2483\n2334\n2512\n2735\n3881 4286\n1747\n1517\n959\n2294\n4837\n1289\n2948\n3003\n3627\n2991\n4523 664",
      "expected_output": "0\n3602\n1358\n4688\n0\n2334\n2512\n2735\n0\n1747\n1517\n959\n2294\n4837\n1289\n2948\n3003\n3627\n2991\n0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "2533 4239\n3046\n3058\n3698\n3011 3699\n2957\n4447\n2265\n2190 638\n1954\n4674\n753\n2093\n1287\n3127\n3999\n1228\n810\n4891\n3520 1155",
      "expected_output": "0\n3046\n3058\n3698\n0\n2957\n4447\n2265\n0\n1954\n4674\n753\n2093\n1287\n3127\n3999\n1228\n810\n4891\n0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "4126 4382\n1825\n4385\n4457\n4385 3634\n3814\n3121\n2330\n1377 2135\n4636\n733\n3284\n2202\n3106\n4429\n3705\n2988\n1921\n705\n4745 2415",
      "expected_output": "0\n1825\n4385\n4457\n0\n3814\n3121\n2330\n0\n4636\n733\n3284\n2202\n3106\n4429\n3705\n2988\n1921\n705\n0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "10010 10010\n10010\n10010\n10010\n10010 10010\n10010\n10010\n10010\n10010 10010\n10010\n10010\n10010\n10010\n10010\n10010\n10010\n10010\n10010\n10010\n10010 10010",
      "expected_output": "0\n10010\n10010\n10010\n0\n10010\n10010\n10010\n0\n10010\n10010\n10010\n10010\n10010\n10010\n10010\n10010\n10010\n10010\n0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "10010 10010\n10010\n10010\n10010\n10010 10010\n10010\n10010\n10010\n10010 10010\n10010\n10010\n10010\n10010\n10010\n10010\n10010\n10010\n10010\n10010\n10010 10010",
      "expected_output": "0\n10010\n10010\n10010\n0\n10010\n10010\n10010\n0\n10010\n10010\n10010\n10010\n10010\n10010\n10010\n10010\n10010\n10010\n0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "10009 2\n2\n10009\n2\n1 1\n10010\n2\n1\n10009 1\n1\n10009\n10009\n10010\n10009\n10010\n10009\n1\n10009\n2\n10010 2",
      "expected_output": "0\n2\n10009\n2\n0\n10010\n2\n1\n0\n1\n10009\n10009\n10010\n10009\n10010\n10009\n1\n10009\n2\n0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "10009 1\n1\n1\n1\n10009 10009\n2\n10009\n10010\n2 10009\n2\n10010\n1\n1\n2\n10010\n1\n1\n2\n10010\n10009 10010",
      "expected_output": "0\n1\n1\n1\n0\n2\n10009\n10010\n0\n2\n10010\n1\n1\n2\n10010\n1\n1\n2\n10010\n0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:57",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:38:17"
}
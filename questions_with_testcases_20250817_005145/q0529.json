{
  "problem_code": "problems",
  "title": "Pretty Printing",
  "tags": [],
  "text": "EnglishVietnameseAn IT company decided to publish an internal newsletter describing the projects that have been successfully completed. Each department submits a text paragraph that will be printed in a corresponding designated box of the newsletter. Let’s assume that the paragraph contains only characters a...z and spaces (ASCII code is 32) in several lines, and a word is defined to be the longest sequence of non-space characters on a line.The printing has to satisfy the following rules:Text will be printed in a fixed-width font (meaning that every character occupies a fixed size width) from left to right and going down to the next line at the end of every line.The number of printed characters in every line must be the same.Words are printed in the box in the same order as they appear in the given paragraph. A word cannot be split or printed on more than one line.Consecutive words on the same line are separated by exactly one space.Every line contains only words from the original paragraph and spaces.Any line that starts with a space must contain only spaces.The newsletter editor wants to formally assess the prettiness level of a paragraph printing by defining the unbalance of it as the sum of the cubes of the number of space characters at the end of each line including lines containing only spaces. The smaller the unbalance, the prettier the paragraph printing is.Consider the following example where the paragraph is printed in a box with three lines and each line has a 20-characters width in two ways:aaa bbbbbbbbb c dddd\r\neeeeeee ffffff\r\ngggggggggaaa bbbbbbbbb      \r\nc dddd eeeeeee       \r\nffffff gggggggggIn this example, the unbalance of the paragraph printing on the left is 03+ 63+ 113= 1547 while the unbalance of the paragraph printing on the right is 73+ 63+ 43= 623. The paragraph printing on the right is considered prettier.Given a text paragraph and a box to be printed, your task is to write a program to find the prettiest printing that has the smallest unbalance.InputThe input file consists of several data sets. The first line of the input file contains the number of data sets which is a positive integer and is not bigger than 20. The following lines describe the data sets.For each data set, the first line contains an integer L (0 < L ≤ 100) representing the number of lines in the designated box. The second line contains an integer W (0 < W ≤ 1000) representing the number of characters width of the box. The remaining lines contain the paragraph with no more than 1000 words ended with a blank line.OutputFor each data test, write on one line the corresponding unbalance of the prettiest paragraph printing in the designated box. Write -1 in case there does not exist any way to print the paragraph in the designated box.ExampleSample Input3\r\n3\r\n20\r\naaa bbbbbbbbb \r\nc dddd\r\neeeeeee ffffff\r\nggggggggg\r\n\r\n2\r\n5\r\nabcde abcde\r\n\r\n2\r\n5\r\nabcde abcde \r\naSample Output623\r\n0\r\n-1",
  "sample_input": "aaa bbbbbbbbb c dddd\r\neeeeeee ffffff\r\nggggggggg",
  "sample_output": "aaa bbbbbbbbb      \r\nc dddd eeeeeee       \r\nffffff ggggggggg",
  "link": "https://www.spoj.com/problems/PRETTYP",
  "scraped_at": "2025-08-17 00:33:20",
  "test_cases": [
    {
      "input": "aaa bbbbbbbbb c dddd\r\neeeeeee ffffff\r\nggggggggg",
      "expected_output": "aaa bbbbbbbbb      \r\nc dddd eeeeeee       \r\nffffff ggggggggg",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "y smnainqmc m oedl\ngkozqrp bgtyoh\namstzalzdrvr",
      "expected_output": "0\n0\n0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "yphk onvvezp chg huvyt\nqf qjreeh\nvokda",
      "expected_output": "0\n0\n0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "cwvzu bjhq hc eil\nzt cz\npptorisigxqzkuiwig",
      "expected_output": "0\n0\n0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "rbnc ijsilbksj qubm didue\nnlpv nc\nftrbjy",
      "expected_output": "0\n0\n0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "zqdi lq g tyb\nhqoh l\nvikfpjgcrixz",
      "expected_output": "0\n0\n0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "kej qpfzvy le e\nq pyu\ntqbdojdz",
      "expected_output": "0\n0\n0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "wueop bjyolircq g i\nuyfvlno lptix\noswcistlmnbsgm",
      "expected_output": "0\n0\n0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "rmrpd lgj te xfccn\njqjde oew\ntcj",
      "expected_output": "0\n0\n0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "y tfxnxz jg bthzn\nvvzuddy heebzp\no",
      "expected_output": "0\n0\n0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "nf d ac oyfxe\narleru a\nwcobysfs",
      "expected_output": "0\n0\n0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "lhulh oa gnln sh\nsxn qhdb\nvvmzvkfqifmskcyqqw",
      "expected_output": "0\n0\n0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "m z qm wylu\npgtr uhugtp\nwmxgoxuvdune",
      "expected_output": "0\n0\n0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "c iik opfv ftlg\ndvj m\nxqqxyutjadj",
      "expected_output": "0\n0\n0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "noxtu eypgibh xm uca\nbhc kacc\nzthzccgbojy",
      "expected_output": "0\n0\n0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "tsx hyycyac ujaf unz\ndjdcu adiey\ngm",
      "expected_output": "0\n0\n0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "zec uuhovv msgd exs\nxb nfofb\nul",
      "expected_output": "0\n0\n0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "euib ynzwlu ktaef oqbkg\nbnladx vhyiw\njzkwvwg",
      "expected_output": "0\n0\n0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "td yjnixcyo ff rsbbr\njnezqma y\npchqakbmqdv",
      "expected_output": "0\n0\n0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "g cidtf nr bwb\ntxftls givg\ngjjshreb",
      "expected_output": "0\n0\n0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:47",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:36:36"
}
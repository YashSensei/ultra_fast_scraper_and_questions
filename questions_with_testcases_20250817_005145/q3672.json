{
  "problem_code": "problems",
  "title": "Just Add It",
  "tags": [],
  "text": "For two given integers n and k find (Zn+ Zn-1- 2Zn-2) mod 10000007, where Zn= Sn+ Pnand Sn= 1k+ 2k+ 3k+ … + nkand Pn= 11+ 22+ 33+ … + nn.InputThere are several test cases (≤ 10000). In each case two space separated positive integers n and k are given.For last test case n and k are given as 0 0, which is not to be processed.Constraints1 < n < 200000000\r\n0 < k < 1000000OutputFor each case print the asked value in separate line.ExampleInput:10 3\r\n9 31\r\n83 17\r\n5 2\r\n0 0Output:4835897\r\n2118762\r\n2285275\r\n3694",
  "sample_input": "Input:10 3\r\n9 31\r\n83 17\r\n5 2\r\n0 0Output:4835897\r\n2118762\r\n2285275\r\n3694",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/ZSUM",
  "scraped_at": "2025-08-17 00:34:19",
  "test_cases": [
    {
      "input": "10 3\r\n9 31\r\n83 17\r\n5 2\r\n0 0",
      "expected_output": "4835897\r\n2118762\r\n2285275\r\n3694",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "8 9\n4 3\n6 7\n9 7\n4 4",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "10 9\n5 8\n9 10\n2 5\n5 2",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "2 8\n6 3\n8 5\n5 4\n8 5",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "74 88\n8 96\n40 14\n54 84\n20 46",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "35 39\n93 57\n36 83\n64 62\n26 1",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "23 87\n6 5\n50 71\n83 3\n71 28",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "74 41\n86 56\n1 31\n94 54\n49 10",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "4 40\n50 18\n24 28\n69 52\n45 55",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "117504 346222\n279094 278735\n227311 470790\n478504 241373\n435509 337887",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "318726 462096\n328394 302386\n148344 94403\n325010 237445\n133299 226001",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "431549 282903\n257341 391171\n485454 94399\n423932 107511\n70820 118676",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "206748 284436\n424579 433927\n406613 134483\n474267 369820\n347049 298528",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "388900 92585\n281968 475551\n272713 337207\n285613 73897\n302461 486482",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "357438 193952\n137318 449982\n149059 432923\n96423 416069\n451163 428063",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "403711 172456\n345390 61466\n235857 476695\n104028 430625\n126305 347870",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 1\n1000000 1\n2 1\n1 2\n1 2",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 1\n1000000 2\n1000000 999999\n1 2\n1000000 2",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:57",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:38:15"
}
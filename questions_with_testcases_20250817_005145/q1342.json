{
  "problem_code": "problems",
  "title": "Sky Lift",
  "tags": [],
  "text": "We can represent a grid of skyscrapers by an NxN matrix of their positive  heights. A skyscraper is made out of square blocks, and you may travel  through them using a special elevator that can move as any other, but  also sideways (four possible directions on a fixed floor). They may move  anywhere as long as they don't exit the skyscrapers. In other words, if  the elevator is inside a skyscraper, it may move to the neighboring  skyscraper only if its height is greater or equal to the current level  the elevator is at.Moving sideways (in one of the 4 directions, that is, N, E, S, W...) is done for free when using this elevator, but moving one floor up or down costs exactly one unit.Given  the positions of two skyscrapers, find the cost of moving from thetop  blockof the first to thetop blockof the second using the described  elevator.InputThe first line of input contains a single integer N ( 1 <= N <= 1000 ). The next line contains four integers, xa, ya, xb, yb, (between 1 and N), representing the positions of the two skyscrapers.The next line contains three integers: A, B and C (1 <= A, B, C <= 109).Generate the height of the skyscraper at coordinates (i, j) using the formula hij= (((i-1)*N+j-1)*A + B) mod C (indicies are 1-based).OutputTo the first and only line of input output the solution.ExampleInput:31 1 3 35 5 7Output:2",
  "sample_input": "Input:31 1 3 35 5 7Output:2",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/SKY",
  "scraped_at": "2025-08-17 00:33:25",
  "test_cases": [
    {
      "input": "31 1 3 35 5 7",
      "expected_output": "2",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5 7 9 1 1 10",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "10 1 2 10 5 9",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "8 3 3 4 10 8",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "47 63 32 88 96 90",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "49 100 45 85 41 86",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "11 42 31 82 79 91",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "30 53 55 95 77 55",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "15 92 65 54 73 53",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "474 400 74 469 206 485",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "143 130 255 54 374 220",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "55 434 394 334 70 115",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "311 485 231 172 129 157",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "401 407 138 447 271 92",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "445 111 413 169 449 105",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "409 358 260 425 249 478",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "999 1 2 2 1 1000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 999 1 2 999 999",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:49",
  "total_test_cases": 20
}
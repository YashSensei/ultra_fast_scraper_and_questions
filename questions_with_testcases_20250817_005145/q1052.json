{
  "problem_code": "problems",
  "title": "Happiness for all",
  "tags": [],
  "text": "The separatist state of Nlogonia hasNcities numbered1throughN. Some pairs of cities are connected by highways, so that if there is a highway between cityAand cityBit is possible to travel fromAtoBor fromBtoA. We say that a citizen from cityican visit another from cityjif there exists a sequence of different citiesc1, c2... cmwithm ≥ 2such thatc1= i,cm= jand there is a highway between citiesckandck+1fork = 1, 2 ... m-1.The people of Nlogonia are very sociable, so they have friends in all the cities they can visit. However, they are also a bit lazy, so that they are not happy unless they can visit each of their friends by taking exactly one highway directly from their city to their friend's.To avoid Nlogonia's scission, the queen has decided to perform a number of infrastructure works in order to make all of its citizens happy. One possibility consists in building new highways between the cities of Nlogonia, incurring in a cost ofRper new highway built. Because building many highways can be very expensive, another possibility is to build stadiums in some of Nlogonia's cities. The building of a stadium costsE, and immediately makes all the citizens happy in the city where it is built. Then again, you should know that Nlogonia's inhabitants are furthermore somewhat jealous, so that they shall never be happy if there is no stadium in their own city, but there is one in some of their friend's cities. Can you help the queen calculate the minimum cost of the construction work necessary to make everyone in Nlogonia happy?InputThere are multiple test cases in the input file. For each test case, the first line contains four integersN, M, RandE. The numberNrepresents the number of cities in Nlogonia (2 ≤ N ≤ 1000),Mrepresents the original number of highways (1 ≤ M ≤ 105), whereasRandErepresent the cost of building a highway and a stadium, respectively (1 ≤ R, E ≤ 1000). Each of the following M lines describes a different highway using two integersAandB, representing the cities connected by said highway (1 ≤ A, B ≤ NwithA ≠ B).OutputFor each test case, print one line containing an integer representing the minimum cost of the construction work necessary to make everyone in Nlogonia happy.ExampleInput:9 6 11 12\r\n1 2\r\n3 2\r\n4 5\r\n5 6\r\n6 7\r\n9 7Output:71",
  "sample_input": "Input:9 6 11 12\r\n1 2\r\n3 2\r\n4 5\r\n5 6\r\n6 7\r\n9 7Output:71",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/TAP2015D",
  "scraped_at": "2025-08-17 00:33:23",
  "test_cases": [
    {
      "input": "9 6 11 12\r\n1 2\r\n3 2\r\n4 5\r\n5 6\r\n6 7\r\n9 7",
      "expected_output": "71",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5 5 8 6\n4 8\n7 5\n7 8\n5 1\n5 8\n4 2",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "3 7 2 10\n5 7\n7 8\n5 1\n1 4\n7 7\n2 8",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "9 4 10 7\n6 2\n4 2\n7 9\n4 9\n8 2\n6 3",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "25 11 83 2\n4 24\n50 79\n39 78\n83 65\n61 18\n68 18",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "20 90 30 56\n33 83\n25 64\n14 33\n24 90\n100 83\n32 60",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "48 34 57 61\n49 44\n76 64\n26 73\n70 75\n18 85\n69 13",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "61 21 81 93\n42 8\n50 1\n32 55\n2 39\n57 10\n76 34",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "31 24 46 70\n5 66\n41 11\n38 61\n97 48\n43 66\n95 58",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "326 109 388 254\n350 477\n212 494\n326 224\n425 441\n347 212\n150 408",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "298 121 367 94\n430 256\n450 490\n250 245\n426 299\n125 93\n464 351",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "62 74 188 81\n188 53\n109 472\n322 153\n475 407\n186 298\n492 461",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "327 170 176 210\n371 233\n224 190\n207 444\n348 226\n278 436\n274 256",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "462 438 130 324\n497 181\n265 131\n73 167\n197 291\n294 104\n292 191",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "400 468 307 454\n464 413\n358 242\n280 323\n94 357\n179 297\n366 241",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "250 69 231 166\n335 252\n170 57\n151 306\n302 389\n179 277\n410 385",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 2 2 1\n1000 999\n2 1000\n2 1\n1 1000\n1000 999\n1 2",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1000 1000 2 1\n999 2\n1000 999\n999 1\n2 2\n1000 999\n999 999",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:48",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:36:52"
}
{
  "problem_code": "problems",
  "title": "Empanadas",
  "tags": [],
  "text": "The empanadas are a very famous dish in Venezuela. They consist of a fried dough with the shape of a half moon with delicious fillings, such as cheese, ground beef, chicken, black beans, calamari, etc. They are usually served as breakfast, but a real Venezuelan would have them no matter the time of the day.Samuel and Sebastian are the bestempanaderos, and both have their own restaurants. Everyday they sell acombo, which consists of a number of empanadas, no matter the filling. The size of the combos is not always the same for all the days.You are visiting the country forNdays, and as crazy for empanadas as you are, you will have all the empanadas you can afford during your stay. Also, you are very good friends with Samuel and Sebastian, so you will buy empanadas only from their restaurants. However, you can buy at most one combo in one day.As a good friend, you would like to see each of their business grow, so you will alternate restaurants depending on the last place you bought a combo. For example, if the last combo you bought was from Samuel's, then the next one you buy must be from Sebastian's. Of course, you can skip buying a combo on any day if you want.Given the number of empanadas each restaurant offers duringNdays, can you calculate the maximum number of empanadas you can have during your stay, without violating your own rules?InputThe first line of the input consists of one integerN, the number of days of your stay.The second line will have N numbers Aiseparated with exactly one whitespace. The i-th number will indicate the size of the combo that Samuel's restaurant offers on the i-th day.The third and last line will have N numbers Biseparated with exactly one whitespace. The i-th number will indicate the size of the combo that Sebastian's restaurant offers on the i-th day.OutputPrint in a single line the maximum number of empanadas you can have during your stay.ExampleInput:320 20 105 5 7Output:35Constraints1 ≤ N ≤ 1031 ≤ Ai, Bi ≤ 20",
  "sample_input": "Input:320 20 105 5 7Output:35",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/VZLA2019E",
  "scraped_at": "2025-08-17 00:34:04",
  "test_cases": [
    {
      "input": "320 20 105 5 7",
      "expected_output": "35",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "6 4 9 3 2",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "2 5 1 5 10",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "7 1 6 10 7",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "47 15 65 85 81",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "92 85 5 79 3",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "87 3 42 53 100",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "21 62 5 75 26",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "58 74 8 82 56",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "422 235 243 226 161",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "100 419 284 471 260",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "369 172 276 328 372",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "52 141 416 106 262",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "102 219 104 289 154",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "415 237 504 248 164",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "192 479 111 379 382",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1031 1031 1031 1031 1031",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1031 1031 1031 1031 1031",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 2 1 1030 2",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 1031 2 1 2",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:54",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:45"
}
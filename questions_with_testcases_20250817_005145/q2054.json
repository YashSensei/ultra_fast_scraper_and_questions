{
  "problem_code": "problems",
  "title": "Foxling Feeding Frenzy",
  "tags": [],
  "text": "You've come across $N$ ($1 \\leq N \\leq 200$) adorable little Foxlings, and they're hungry! Luckily, you happen to have $M$ ($1 \\leq M \\leq 200$) crackers on hand, and everyone knows that Foxen love crackers! You'd like to distribute all of your crackers, without splitting any of them, among the Foxlings - but you have to be careful. Foxling $i$ must be fed at least $A_i$ crackers, or it will remain hungry, but no more than $B_i$ of them, or it will become hyper ($1 \\leq A_i \\leq B_i \\leq 200$). You certainly don't want any hungry or hyper Foxlings on your hands, and you're curious as to how many ways this can be accomplished.There are $T$ ($1 \\leq T \\leq 100$) scenarios as described above. For each one, you'd like to determine the number of different distributions of your crackers that would satisfy all of the Foxlings, modulo $10^9+7$ (as this value can be quite large).InputFirst line: 1 integer, $T$For each scenario:First line: 2 integers, $N$ and $M$Next $N$ lines: 2 integers, $A_i$ and $B_i$, for $i = 1..N$OutputFor each scenario:Line 1: 1 integer, the number of valid cracker distributions modulo $10^9+7$ExampleInput:22 51 42 63 52 22 92 3Output:30Explanation of SampleIn the first scenario, you can give either 1, 2, or 3 crackers to the first Foxling, and the remaining 4, 3, or 2 (respectively) to the second.In the second scenario, each Foxling must receive at least 2 crackers, while you only have 5 to give out, so you have no valid options.",
  "sample_input": "Input:22 51 42 63 52 22 92 3Output:30",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/UOFTAE",
  "scraped_at": "2025-08-17 00:33:49",
  "test_cases": [
    {
      "input": "22 51 42 63 52 22 92 3",
      "expected_output": "30",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "8 3 7 5 7 1 9 3",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "5 9 9 3 8 1 4 4",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "8 4 3 3 2 5 3 4",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "70 19 9 36 90 24 10 76",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "92 56 79 69 35 9 43 72",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "74 8 1 40 23 93 22 41",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "24 19 13 96 55 13 18 73",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "86 28 84 40 19 26 11 68",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "350 266 248 173 254 456 71 430",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "445 418 53 107 175 124 285 329",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "144 334 443 249 240 394 63 441",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "94 68 392 200 452 163 84 202",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "430 330 434 407 407 264 481 104",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "151 129 258 130 122 141 115 325",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "263 114 487 500 213 293 69 353",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 1000 999 1 2 1 2 1000",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "999 1000 1 2 1 999 2 2",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:52",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:23"
}
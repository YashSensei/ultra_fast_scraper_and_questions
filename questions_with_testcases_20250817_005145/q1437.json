{
  "problem_code": "problems",
  "title": "Mass of Molecule",
  "tags": [],
  "text": "EnglishVietnameseA molecule can be defined as a sequence of atoms and represented by \na chemical formula consisting of letters denoting these atoms. E.g. \nletter H denotes atom of hydrogen, C denotes atom of carbon, O denotes\natom of oxygen, formula COOH represents molecule consisting of \none atom of carbon, two atoms of oxygen and one atom of hydrogen.To write some formulas efficiently, we use the following rules.\nLetters denoting some atoms can be grouped by enclosing in parentheses, \ne.g. formula CH(OH) contains group OH. Groups can be nested â€“ a \ngroup can also contain other groups. To simplify a formula, \nconsecutive occurrences of the same letter can be replaced with \nthat letter followed by a number of these occurrences. E.g. formula \nCOOHHH can be written as CO2H3 and it represents a molecule consisting\nof one atom of carbon, two atoms of oxygen and three atoms of hydrogen. \nFurthermore, consecutive occurrences of the same group can be replaced\nwith that group followed by a number of these occurrences. \nE.g. formula CH (CO2H) (CO2H) (CO2H) can be written as CH(CO2H)3 and  \nmolecule represented by both those formulas consists of four atoms of \ncarbon, four atoms of hydrogen and six atoms of oxygen.\nA number written \nafter a letter or a group is always greater than or equal to 2 and less \nthan or equal to 9.\nA mass of a molecule is a sum of masses of all its atoms. One atom of \nhydrogen has mass 1, one atom of carbon has mass 12 and one atom of oxygen\nhas mass 16.Write a program that will calculate a mass of a molecule.InputThe first and only line of input file contains a formula of a molecule whose\nmass needs to be determined. A formula of a molecule will consist of \ncharacters H, C, O, (, ) , 2, 3 ... 9 only. Its length will be less \nor equal to 100 characters.OutputThe first and only line of output file should contain a mass of a molecule\nrepresented with a given formula. The result will always be less than or \nequal to 10,000.SampleInput:COOHOutput:45Input:CH(CO2H)3Output:148Input:((CH)2(OH2H)(C(H))O)3Output:222",
  "sample_input": "Input:COOHOutput:45",
  "sample_output": "Input:CH(CO2H)3Output:148",
  "link": "https://www.spoj.com/problems/MMASS",
  "scraped_at": "2025-08-17 00:33:42",
  "test_cases": [
    {
      "input": "COOH",
      "expected_output": "45",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "CH(CO2H)3",
      "expected_output": "148",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "o",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "w",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "uu",
      "expected_output": "To be computed",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "ozgti",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "hogdghtv",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "fszdc",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "vxnlmyq",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "wumhby",
      "expected_output": "To be computed",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "ovpettor",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "nfyn",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "qymmp",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "rge",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "tp",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "tmkbmjln",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "s",
      "expected_output": "To be computed",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "xpjjbcr",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "y",
      "expected_output": "To be computed",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "gsbfsw",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:50",
  "total_test_cases": 20
}
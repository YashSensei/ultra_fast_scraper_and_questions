{
  "problem_code": "problems",
  "title": "Yungom",
  "tags": [],
  "text": "After getting her Ph.D in Cooking with her research paper on \"How to Prepare a Pizza\", and another Ph.D in Medicine for finding cures for H.I.V. and Alzheimer's, Dae Jang Guem (Called Yungom in Persian) decided to solve yet another open problem in Information Theory that even Shanon (the father of Information Theory) failed to solve. She is going to construct a language of n words with d given characters c1, c2 ... cd. This language should be prefix free which means that there is no pair of words like (s, t) in which the word s is a prefix of t. Each character ci has a usage cost of wi. The cost of a word s with the length l is the sum of the costs of its l characters. For example, if c1=a; c2=b; w1=1 and w2=10, the cost of word \"aba\" is 1+10+1=12. Similarly, the cost of a language with n words is equal to the sum of the costs of its n words. For example, the cost of language “ab”; “bbb”; “baaa” is 11+30+13=54. Like her previous jobs, Yungom is going to do this task perfectly which means that she wants to find the minimum cost, prefix free language with n words.InputThere are multiple test cases in the input. Each test case starts with a line containing two integers n (1 ≤ n ≤ 200) and d (1 ≤ d ≤ 200). The next line contains non-negative integers w1, w2 ... wd. The input is terminated by a line containing two zero numbers.OutputFor each test case, you should print the minimum cost of a prefix free language with n words and d characters.SampleInput3 4\r\n1 10 100 1000\r\n0 0Output23",
  "sample_input": "Input3 4\r\n1 10 100 1000\r\n0 0Output23",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/HPREFIX",
  "scraped_at": "2025-08-17 00:34:24",
  "test_cases": [
    {
      "input": "Input3 4\r\n1 10 100 1000\r\n0 0Output23",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "8 9\nm 5\n8 3 3 9\n6 8 9\n3 penoiktzp",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "8 10\ndwrub 10\n4 6 4 9\n2 4 5\n9 vpybun",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "9 2\nmwmz 7\n6 5 1 10\n3 5 2\n6 quuzy",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "71 38\nxnvbqn 44\n55 92 33 75\n44 38 76\n89 od",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "68 42\nf 62\n32 2 46 47\n83 45 70\n31 euyyxgcg",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "31 60\nmwutj 12\n18 32 74 86\n35 10 56\n62 dwndzcq",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "88 27\nb 18\n17 33 57 43\n73 72 41\n87 gpgwmq",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "74 7\ngszsys 4\n97 46 22 28\n4 70 63\n19 stnqyx",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "12 10\nrxc 35\n100 55 56 18\n48 90 14\n69 uxmpsts",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "62 61\ntztrdl 49\n43 17 58 26\n54 88 33\n41 ini",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "49 60\nbenril 85\n37 42 58 70\n44 82 41\n33 tvdu",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "53 53\njnt 10\n96 89 72 56\n62 13 90\n48 kio",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "44 76\nfjjv 80\n38 45 24 37\n48 65 28\n49 oi",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "91 95\niz 92\n45 88 64 71\n78 75 41\n62 pn",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "43 82\nqavqjc 94\n93 31 32 85\n54 52 43\n71 pcegrgn",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "200 200\nm 200\n200 200 200 200\n200 200 200\n200 fc",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "200 200\nzi 200\n200 200 200 200\n200 200 200\n200 fikbtupg",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 200\nhascml 1\n199 1 2 2\n200 200 2\n2 ou",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 199\nebjmcn 199\n199 199 199 200\n200 199 2\n200 kw",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:56",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Tower Of Hanoi",
  "tags": [],
  "text": "Given 3 three pegs: leftmost peg A, middle peg B and rightmost peg C. Find the shortest sequence of moves that transfers a tower of n disks from the left peg A to the right peg C, if direct moves between A and C are disallowed. (Each move must be to or from the middle peg B.)ConstraintsInitially the left peg A in stacked by n disks in the order of decreasing size.Only one move can be done at a time and never moving a larger one onto a smaller.Number of moves will always be less than 264.1 ≤ n ≤ 35InputInput begins with an integer t, followed by t lines. Each line has the number of disks n.OutputFor each test case, output the minimum number of move required to transfer the n disks from peg A to peg C.ExampleInput:412510Output:2824259048",
  "sample_input": "Input:412510Output:2824259048",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/RANJAN02",
  "scraped_at": "2025-08-17 00:33:03",
  "test_cases": [
    {
      "input": "412510",
      "expected_output": "2824259048",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4\n10\n3\n10\n5",
      "expected_output": "0\n0\n0\n0",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "4\n10\n1\n5\n3",
      "expected_output": "0\n0\n0\n0",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "3\n10\n1\n3",
      "expected_output": "0\n0\n0",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "10\n83477235\n19463966\n38265707\n58959480\n12533386\n36362845\n54400062\n31560892\n18650169\n20471367",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "5\n25872916\n83521356\n18959665\n63863789\n94926576",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "6\n97901029\n78799368\n37938118\n92325326\n17791758\n43772946",
      "expected_output": "0\n0\n0\n0\n0\n0",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "13\n95132267\n69649289\n51955603\n49767279\n57720163\n2210649\n25158065\n73397733\n46355681\n33967414\n39286398\n57633724\n38520661",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "18\n18432349\n73251260\n70806427\n22608394\n66083876\n62987145\n10050814\n90435601\n96040191\n35999546\n29688641\n18959466\n98518248\n95673031\n34081594\n32461324\n25681369\n62940278",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "31\n21330\n86263\n97812\n66410\n78841\n23897\n60356\n79559\n15559\n6650\n24535\n89013\n92993\n17760\n62186\n95122\n50794\n40243\n53727\n47982\n12196\n6050\n89747\n81972\n35489\n81427\n21231\n27024\n53198\n97865\n17612",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "32\n52072\n73138\n84933\n26803\n2143\n49020\n43479\n26147\n24633\n62025\n397\n98946\n5631\n79157\n77481\n27772\n64774\n32397\n64137\n36091\n67012\n69636\n81953\n76587\n37553\n52926\n86387\n76939\n326\n82528\n2513\n71137",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "20\n47857\n626\n91729\n33222\n23468\n74447\n69143\n8944\n66695\n27012\n81374\n64480\n78843\n55313\n16703\n4591\n93995\n68630\n32787\n10123",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "21\n87684\n44351\n70427\n50838\n63450\n71315\n54586\n54645\n95871\n94097\n26826\n46940\n50172\n90518\n31845\n46215\n28452\n39159\n23129\n65000\n2348",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "35\n77225\n78239\n39067\n32597\n82334\n10913\n77\n59540\n97923\n7133\n70077\n7078\n37341\n95247\n94476\n44208\n31349\n47779\n29760\n29042\n93993\n21675\n63109\n54710\n72994\n5095\n60386\n63521\n71253\n79405\n19491\n23988\n25961\n66803\n40892",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "27\n92306\n75460\n98736\n43323\n1199\n94796\n25080\n4794\n24434\n16309\n61933\n75124\n54723\n53697\n59438\n60382\n67433\n37508\n32338\n18350\n99959\n59643\n40725\n10660\n60883\n60065\n25932",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "33\n49951\n9762\n28293\n44882\n51544\n89063\n83076\n31593\n55209\n4843\n8018\n79017\n74624\n4990\n51633\n99875\n48464\n98913\n19119\n37303\n66896\n10662\n5305\n20749\n84371\n62526\n84334\n9430\n21248\n96248\n42340\n56345\n18574",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "35\n47331940\n17158468\n98608482\n94079015\n16646886\n51886947\n92033549\n52271908\n14169894\n85425510\n1382228\n66609469\n15207148\n62333375\n71958341\n51650557\n73459657\n13438676\n52574062\n73239828\n71463163\n74242396\n8757170\n20786823\n64810704\n72362816\n26054443\n75327106\n27039509\n67940576\n11695539\n96325618\n11772890\n51843877\n51987613",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "max_case_17",
      "description": "Maximum size array (N = 35)"
    },
    {
      "input": "35\n52921252\n42251059\n27506371\n21446253\n80593384\n39750259\n79141300\n73255782\n94124101\n74461193\n14550126\n81724757\n26959770\n27273171\n8293843\n6863853\n63188037\n67133901\n8507014\n96788421\n83177753\n47999418\n76331176\n55902459\n41270069\n64599530\n4636338\n31910165\n71348693\n29884545\n91216554\n85544456\n49200845\n60282975\n57005218",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "max_case_18",
      "description": "Maximum size array (N = 35)"
    },
    {
      "input": "2\n1\n1",
      "expected_output": "0\n0",
      "type": "edge_case_19",
      "description": "Edge case array (N = 2)"
    },
    {
      "input": "2\n1\n1",
      "expected_output": "0\n0",
      "type": "edge_case_20",
      "description": "Edge case array (N = 2)"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:47",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:36:38"
}
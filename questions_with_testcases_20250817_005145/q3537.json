{
  "problem_code": "problems",
  "title": "Blackout",
  "tags": [],
  "text": "Caracas, as any other city, never sleeps, however, this is about to change as the Chief Officer Marcos “the little one” is scheduling some blackouts to search an important criminal and bring it to justice (If you like to know the criminal is known as “El Pran Malandroso”), the criminal is known for fainting when he doesn't see any source of light, so this is a perfect plan for Marcos “the little one” to trap him and capture him.Marcos will give you the map where he is searching the criminal, the zone is given in a matrix and each value represents a block, surrounded by streets, where the number at the i-th row and j-th column denotes the number of people living in this block.As Marcos “the little one” is a good officer, he doesn't wants to bother more than a specific number of people, as when he darken the zone, the people will going to be mad. That's what he called you for, Marcos will give you the north-west corner and the south-east corner, he will search in this specific area, causing a blackout.Marcos will perform a series of blackouts in the city during the night, he will perform each blackout in a given zone, he will return the city all of its light and then he will perform another blackout, so on until he does Q blackouts, as the criminal is constantly moving in the city, the blackout will be independent and the area of searching will be always considered different.Knowing this, can you maximize the area searched without exceeding the limit that Marcos gives you? (Citizens will be going mad when a blackout occurs)InputThe first line will contain 4 integers N, M, Q and K, denoting, respectively the N and M matrix size denoting an aerial view of the city, Q blackouts that Marcos the little one will do and K people that he wants to bother as much.Then, N lines follow, each containing M integers, representing the people living in the block.After that, Q lines will follow, each one containing four integers denoting the (i, j) point of the north-west corner and the (i, j) point of the south-east corner.OutputThe first and only line of output should contain a number, representing the maximum area that Marcos can look for the criminal.ExampleInput:3 3 2 20\r\n1 2 3\r\n4 5 6\r\n7 8 9\r\n1 1 3 3\r\n1 1 2 2Output:4Input:4 3 3 76\r\n1 4 9\r\n5 5 2\r\n2 1 9\r\n9 1 9\r\n2 1 4 3\r\n1 1 4 3\r\n2 1 3 2Output:16NoteIs important to note that each blackout is independent from the other, so, blackout affecting the zone (1, 1) to (3, 3) will lead to 45 people angry and 9 units of area, while a blackout from the zone (1, 1) to (2, 2) will get 12 people angry and 4 units of area. If the limit were 57, you could perform the two blackouts, giving a total result of 13.Constraints1 ≤ N, M ≤ 20001 ≤ Q ≤ 10001 ≤ K ≤ 10000 ≤ (Ni, Mj) ≤ 1000It is safe to say that there will be always an answer to this problem. (You will always find at least one blackout that doesn't bother more than K citizens)",
  "sample_input": "Input:3 3 2 20\r\n1 2 3\r\n4 5 6\r\n7 8 9\r\n1 1 3 3\r\n1 1 2 2Output:4",
  "sample_output": "Input:4 3 3 76\r\n1 4 9\r\n5 5 2\r\n2 1 9\r\n9 1 9\r\n2 1 4 3\r\n1 1 4 3\r\n2 1 3 2Output:16",
  "link": "https://www.spoj.com/problems/BLACKOUT",
  "scraped_at": "2025-08-17 00:34:27",
  "test_cases": [
    {
      "input": "3 3 2 20\r\n1 2 3\r\n4 5 6\r\n7 8 9\r\n1 1 3 3\r\n1 1 2 2",
      "expected_output": "4",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4 3 3 76\r\n1 4 9\r\n5 5 2\r\n2 1 9\r\n9 1 9\r\n2 1 4 3\r\n1 1 4 3\r\n2 1 3 2",
      "expected_output": "16",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "7 5 2 1\n1 8 2\n2 6 1\n2 5 10\n9 5 7 5\n10 1 1 7",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "4 8 4 10\n10 1 9\n2 4 4\n6 7 5\n7 2 8 9\n9 9 2 5",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "8 8 8 6\n10 1 5\n5 7 2\n6 3 2\n5 7 10 2\n3 5 2 2",
      "expected_output": "To be computed",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "2 38 72 87\n1 11 11\n89 2 18\n15 60 46\n46 35 58 65\n83 8 45 36",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "5 7 51 46\n7 77 35\n20 3 87\n35 49 4\n99 60 17 45\n90 96 44 29",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "13 51 98 87\n10 75 29\n58 67 59\n60 37 32\n70 95 38 12\n46 83 76 100",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "30 98 19 76\n60 89 43\n20 73 16\n16 28 88\n97 78 56 13\n43 19 75 57",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "49 36 27 95\n44 52 58\n30 87 25\n95 91 7\n87 39 76 49\n1 41 88 9",
      "expected_output": "To be computed",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "196 283 353 440\n303 380 356\n255 402 159\n57 139 239\n63 416 327 139\n411 252 218 328",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "131 56 165 174\n368 460 102\n387 298 348\n230 272 113\n210 270 225 93\n142 292 78 410",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "387 357 111 424\n456 403 157\n139 346 304\n381 413 335\n237 242 371 373\n212 59 90 164",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "382 280 109 428\n493 148 288\n77 301 211\n277 370 280\n300 195 318 343\n373 338 279 56",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "287 375 276 171\n58 208 388\n439 215 261\n309 132 209\n396 113 235 472\n405 161 449 371",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "195 350 148 83\n456 249 252\n218 304 395\n364 329 334\n454 135 347 446\n61 379 202 274",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "236 151 439 153\n212 333 252\n60 467 121\n104 213 265\n216 156 386 130\n123 440 324 360",
      "expected_output": "To be computed",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "999 2 999 1\n2 1 1\n1000 999 1000\n1000 999 1\n1000 1000 999 1\n2 999 2 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:56",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Apoorv and Maximum Inversion",
  "tags": [],
  "text": "Apoorv has an array of n integers. Inversion count of an array is defined by number of pair of indices(i,j)  such that iarr[j]. You are given an integer p. Apoorv has to find the subarray with maximum inversion count among all subarrays of size p. Apoorv find this job very tough so he turns to you for help.Constraints :1<=n<=500000-1000000000<=arr[i]<=10000000001<=p<=nInputFirst line contains two integers n and p.Next line contains n space separated integers denoting the elements of the array.OutputOutput two space separated integers first integer should be thestarting index(1-based indexing) of the subarray and next integer would be thecount of inversions in that subarray.In case there is a tie in maximum inversion countÂ  print thesmalleststarting index among the subarrays having maximum inversion count.ExampleInput:10 515 51 44 44 76 50 29 88 48 50Output:5 6",
  "sample_input": "Input:10 515 51 44 44 76 50 29 88 48 50Output:5 6",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/SAS001",
  "scraped_at": "2025-08-17 00:34:15",
  "test_cases": [
    {
      "input": "10 515 51 44 44 76 50 29 88 48 50",
      "expected_output": "5 6",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "9 1 1 2 6 6 7 3 3 10 7",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "8 8 10 10 3 5 5 9 10 6 7",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "2 2 9 6 7 7 6 6 5 3 7",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "72 39 60 95 99 91 83 63 44 24 59",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "59 41 90 19 56 11 85 2 63 6 43",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "94 80 18 36 7 63 22 62 73 21 53",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "70 96 21 25 80 68 23 84 25 77 56",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "37 100 22 8 31 68 58 2 5 1 67",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "303 378 234 116 60 278 176 441 469 342 370",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "417 115 100 396 497 160 197 65 320 353 377",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "79 185 128 427 489 212 182 469 277 293 134",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "451 305 447 209 426 74 454 448 429 310 300",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "459 55 438 90 408 80 149 230 221 467 146",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "351 161 325 385 223 122 480 183 235 170 266",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "180 204 198 358 249 423 135 419 196 480 270",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 999 1000 1000 1000 999 1000 1000 1000 1 1000",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 999 1 2 1000 2 2 1 1 1000 1000",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:55",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:53"
}
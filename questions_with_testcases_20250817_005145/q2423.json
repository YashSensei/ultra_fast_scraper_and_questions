{
  "problem_code": "problems",
  "title": "Repair the Door",
  "tags": [],
  "text": "Once upon a time, there was a famous university called Famous University. As thousands of students studied and lived in FU, a gigantic residential building was built, which is called 'B37'. All students lived in B37 happily.After decades, FU is still as famous as it had been in the past; however, the students living in it are now unhappy, because B37 is too old. Although the door of the building looks fine, it can be easily broken when being opened by some careless student too forcefully.So, Blue Mary, the accommodation officer of B37, is facing an extremely serious problem.With some mysterious methods, Blue Mary has predicted that exactlyNstudents will enter or exit B37 during the next term. Unfortunately she doesn't know who the careless ones are, so she assumes that every student opening the door has a probability ofPpercent to be a careless one. When the door is broken by some careless guy, Blue Mary may repair it immediately or after some time, with a cost ofAyuan. Unfortunately when a student goes through the door and finds it already broken and not repaired, she will report it to the headmaster, and Blue Mary will be subject to a fine ofByuan. The door is in good condition before the term begins, and will be repaired by the university after the term ends, so Blue Mary can leave the door unrepaired at the end of the term.Being good at mathematics, Blue Mary has made a strategy, to decide when to and when not to repair the door, in order to minimize her expense.Please write a program to calculate the expectation of her expense.InputThe input consists of multiple test cases, the number of them is about 200000.For each test case, there is one line containing four non-negative integersN,P,A,Bdescribed as above, with 0 ≤N≤ 100000, 0 ≤P≤ 100, 0 ≤A≤ 100, 0 ≤B≤ 100.End of input is indicated by a line consisting of four zeros.OutputFor each test case, output one line containing the expectation of Blue Mary's minimal expense. We accept solutions with absolute error less than 10-4.ExampleInput:10 100 0 1\r\n10 100 1 0\r\n2 50 2 1\r\n0 0 0 0Output:0.0000\r\n0.0000\r\n0.5000HintIn the first sample, the door will be broken every time it is opened, but repairing is free, so just repair it every time.In the second sample, nothing will be fined, so just leave the door unrepaired.In the last sample, if the door is broken by the first student, Blue Mary will be fined 1 yuan, otherwise she doesn’t need to pay anything.",
  "sample_input": "Input:10 100 0 1\r\n10 100 1 0\r\n2 50 2 1\r\n0 0 0 0Output:0.0000\r\n0.0000\r\n0.5000",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/REPAIR1",
  "scraped_at": "2025-08-17 00:33:54",
  "test_cases": [
    {
      "input": "10 100 0 1\r\n10 100 1 0\r\n2 50 2 1\r\n0 0 0 0",
      "expected_output": "0.0000\r\n0.0000\r\n0.5000",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1 4 6 9\n5 6 7 6\n8 4 2 2\n8 9 8 7",
      "expected_output": "0\n0\n0\n0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "10 10 5 5\n4 4 5 10\n5 7 9 8\n8 6 8 6",
      "expected_output": "0\n0\n0\n0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "5 6 2 3\n8 8 1 2\n1 7 7 7\n4 6 5 3",
      "expected_output": "0\n0\n0\n0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "59 90 83 23\n10 66 89 96\n90 36 78 26\n12 28 2 68",
      "expected_output": "0\n0\n0\n0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "98 43 3 69\n80 91 62 76\n17 48 93 28\n48 62 50 1",
      "expected_output": "0\n0\n0\n0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "52 26 95 78\n91 53 75 89\n41 10 81 73\n30 28 51 54",
      "expected_output": "0\n0\n0\n0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "3 99 21 4\n61 99 70 40\n20 13 79 22\n53 36 89 92",
      "expected_output": "0\n0\n0\n0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "7 100 59 83\n30 41 18 84\n47 72 42 48\n90 20 62 89",
      "expected_output": "0\n0\n0\n0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "11576 39556 20589 15381\n39027 37211 34346 46628\n23928 11038 18686 7030\n7307 43490 21876 24204",
      "expected_output": "0\n0\n0\n0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "43525 17017 19440 11676\n48583 19995 32133 5502\n33503 29836 13204 23603\n41168 29037 22969 41254",
      "expected_output": "0\n0\n0\n0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "23201 8503 38893 12595\n30810 18770 48082 30954\n35248 38954 39645 20507\n40395 39727 15905 30873",
      "expected_output": "0\n0\n0\n0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "30156 20651 15898 37566\n43391 33307 43385 43698\n20227 40888 14118 13098\n28327 38215 14903 20776",
      "expected_output": "0\n0\n0\n0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "27393 9369 10873 19850\n16875 29408 22286 36363\n22971 12772 49511 37705\n13119 22224 30339 10046",
      "expected_output": "0\n0\n0\n0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "42631 43350 43101 48314\n41405 48989 28358 21055\n29442 10769 30585 14671\n24846 9696 7802 19157",
      "expected_output": "0\n0\n0\n0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "46824 17249 48328 44936\n23304 11736 25994 7362\n25789 34745 36054 44512\n20068 24031 23482 34101",
      "expected_output": "0\n0\n0\n0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "100000 100000 100000 100000\n100000 100000 100000 100000\n100000 100000 100000 100000\n100000 100000 100000 100000",
      "expected_output": "0\n0\n0\n0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "100000 100000 100000 100000\n100000 100000 100000 100000\n100000 100000 100000 100000\n100000 100000 100000 100000",
      "expected_output": "0\n0\n0\n0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 99999 2 2\n2 99999 1 99999\n100000 2 99999 100000\n99999 100000 99999 99999",
      "expected_output": "0\n0\n0\n0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "100000 2 99999 2\n100000 2 2 1\n2 2 1 100000\n2 99999 1 2",
      "expected_output": "0\n0\n0\n0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:53",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:35"
}
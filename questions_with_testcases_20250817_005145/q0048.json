{
  "problem_code": "problems",
  "title": "Hangover",
  "tags": [],
  "text": "How far can you make a stack of cards overhang a table?  If you have\r\none card, you can create a maximum overhang of half a card length.\r\n(We're assuming that the cards must be perpendicular to the table.) With\r\ntwo cards you can make the top card overhang the bottom one by half a\r\ncard length, and the bottom one overhang the table by a third of a card\r\nlength, for a total maximum overhang of 1/2+1/3=5/6 card lengths. In general you can makencards overhang by 1/2+1/3+1/4+...+1/(n+1) card lengths, where the top card overhangs the second by\r\n1/2, the second overhangs tha third by 1/3, the third overhangs the\r\nfourth by 1/4, etc., and the bottom card overhangs the table by\r\n1/(n+1).  This is illustrated in the figure below.InputThe input consists of one or more test cases, followed by a line\r\ncontaining the number 0.00 that signals the end of the input.  Each test\r\ncase is a single line containing a positive floating-point numbercwhose value is at least 0.01 and at most 5.20;cwill contain\r\nexactly three digits.OutputFor each test case, output the minimum number of\r\ncards necessary to achieve an overhang of at leastccard\r\nlengths. Use the exact output format shown in the examples.Input:1.00\r\n3.71\r\n0.04\r\n5.19\r\n0.00Output:3 card(s)\r\n61 card(s)\r\n1 card(s)\r\n273 card(s)",
  "sample_input": "Input:1.00\r\n3.71\r\n0.04\r\n5.19\r\n0.00Output:3 card(s)\r\n61 card(s)\r\n1 card(s)\r\n273 card(s)",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/HANGOVER",
  "scraped_at": "2025-08-17 00:33:16",
  "test_cases": [
    {
      "input": "1.00\r\n3.71\r\n0.04\r\n5.19\r\n0.00",
      "expected_output": "3 card(s)\r\n61 card(s)\r\n1 card(s)\r\n273 card(s)",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "7\n10\n4\n2\n7",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "4\n1\n2\n9\n6",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "8\n6\n9\n5\n6",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "59\n82\n45\n18\n15",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "45\n42\n69\n28\n40",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "70\n15\n47\n24\n37",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "92\n77\n63\n66\n78",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "62\n55\n61\n82\n20",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "336\n340\n351\n145\n86",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "258\n363\n289\n163\n61",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "395\n245\n431\n210\n178",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "473\n483\n408\n166\n153",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "480\n65\n193\n471\n175",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "456\n426\n292\n367\n329",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "309\n464\n251\n104\n286",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000\n1000\n1000\n1000\n1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000\n1000\n1000\n1000\n1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1\n1000\n999\n1000\n2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1\n999\n1000\n1000\n1000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:45",
  "total_test_cases": 20
}
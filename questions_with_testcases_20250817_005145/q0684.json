{
  "problem_code": "problems",
  "title": "Caprica Cities",
  "tags": [],
  "text": "Caprica is one of the 12 colonial planets, but it was completely destroyed by the cylons, robots made by humans that had rebelled. Before the attack, Doctor Gaius Baltar had the following problem. Caprica has N cities, numbered from 0 to N − 1, and M bidirectional roads connecting them, in a way that exists a path between every pair of cities. Let X and Y be two disjoint and non-empty subsets of this N cities. The problem is to find the smallest path length between any cities x and y where x ∈ X and y ∈ Y. A path length is the sum of the distance of each road in this path.InputEach test case is described using several lines. The first line contains four integers N, M, A and B representing respectively the number of cities (2 ≤ N ≤ 1000), the number of roads (1 ≤ M ≤ 104), the number of cities in X (2 ≤ A ≤ 1000), and the number of cities in Y (2 ≤ B ≤ 1000), where A + B ≤ N.The second line contains A integers and the third line contains B integers, representing the cities in X and Y respectively. Each of the next M lines describes a road using three integers, u, v, and d, indicating that there is a road between the cities u and v with distance d (1 ≤ d ≤ 104). The last test case is followed by a line containing four zeros.OutputFor each test case output, in a single line, the integer representing the smallest path length between x and y where x ∈ X and y ∈ Y .ExampleInput:4 4 2 20 12 30 1 100 2 201 3 102 3 100 0 0 0Output:10",
  "sample_input": "Input:4 4 2 20 12 30 1 100 2 201 3 102 3 100 0 0 0Output:10",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/CAPRICA",
  "scraped_at": "2025-08-17 00:33:09",
  "test_cases": [
    {
      "input": "4 4 2 20 12 30 1 100 2 201 3 102 3 100 0 0 0",
      "expected_output": "10",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3 2 8 8 3 8 9 4 1 1 5 5 3 8 5 3 9",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "9 1 2 1 8 4 2 1 9 1 7 10 2 6 7 7 2",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "4 3 1 7 4 10 10 8 1 6 2 6 6 5 4 2 2",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "55 39 90 15 18 22 75 33 89 32 29 84 88 68 53 63 22",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "51 95 6 13 17 29 46 15 40 55 93 90 98 52 62 69 7",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "32 32 71 58 86 33 61 96 62 29 100 84 32 53 58 36 41",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "73 61 46 65 19 50 92 97 54 11 60 23 23 100 99 74 26",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "84 59 60 100 79 58 75 28 36 73 99 12 91 66 46 36 95",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "407 199 488 277 378 399 252 255 460 400 154 182 469 203 420 421 202",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "419 293 88 164 374 207 399 109 313 374 175 174 83 231 52 285 224",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "488 489 214 430 427 440 325 410 328 157 94 365 434 161 411 50 491",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "405 140 494 109 302 92 238 445 106 352 362 191 76 278 306 179 301",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "452 350 451 148 439 345 252 305 453 468 260 477 221 425 89 184 285",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "115 307 434 318 326 54 375 445 317 64 342 490 295 384 365 102 178",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "497 346 232 174 296 132 82 255 213 346 460 364 490 350 302 220 358",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 1 1 1000 999 2 1000 2 1 2 2 2 1 999 2 999 999",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1000 1000 1 999 1000 1 1000 1000 1 999 1 2 1000 999 1 2 999",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:47",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:36:41"
}
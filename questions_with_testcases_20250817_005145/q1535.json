{
  "problem_code": "problems",
  "title": "Sharmeen Loves Substring [ HARD ]",
  "tags": [],
  "text": "After solving the problem “MOZHSLM” Sharmeen become familiar with subsequence and somehow become interested in substring. Instead of learning more about substring she started asking some ludicrous questions to Mozahid about substring. Become tired of answering Sharmeen’s ludicrous questions Mozahid gives Sharmeen another problem which is slightly harder than the previous one. Mozahid will give Sharmeen a string of lowercase English letters and some queries. In each query he will give her a substring of that string. Sharmeen has to answer how many different subsequence of ‘sms’ exists in that substring. Can you help Sharmeen solving this problem?InputGiven a string of lowercase English letters of length N (1 ≤ N ≤ 105) in first line. In the second line given an integer Q (1 ≤ Q ≤ 105), which is the number of queries. In each query you will be given two integer L, R (1 ≤ L ≤ R ≤ N). L is the starting position of the substring and R is the ending position of the substring (1 based position).OutputFor each query you have to output an integer in one line which is the number of different subsequence of ‘sms’ in that substring.N.B.Substring is a consecutive sequence of characters of a string. Where subsequence not necessarily need to be consecutive. But for both you have to maintain the order. For clearance ‘skmjssm’ has 2 different subsequence of ‘sms’. {1, 3, 5} and {1, 3, 6} (1 based position). For better understanding see the sample input output.ExampleInput:sasmasamsas\r\n3\r\n1 6\r\n3 9\r\n8 11Output:2\r\n4\r\n0[This problem originally written by MD. Mozahidul Islam Bhuiyan(kissu_pari_na)]",
  "sample_input": "Input:sasmasamsas\r\n3\r\n1 6\r\n3 9\r\n8 11Output:2\r\n4\r\n0",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/MOZHSLS",
  "scraped_at": "2025-08-17 00:33:30",
  "test_cases": [
    {
      "input": "sasmasamsas\r\n3\r\n1 6\r\n3 9\r\n8 11",
      "expected_output": "2\r\n4\r\n0",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "pr\n2\n6 5\n5 3\n3 8",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "bdbkbcnrvljy\n6\n9 7\n8 4\n3 10",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "ktkgudmza\n9\n3 8\n4 3\n2 7",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "ykvohwxqdkrja\n28\n43 13\n23 29\n41 59",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "svswbxcxnjgzsdtadpbz\n15\n22 94\n17 49\n45 13",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "cibmwzrbsf\n85\n70 59\n58 61\n19 37",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "xrznlqxvcmltxsy\n27\n18 80\n95 39\n85 92",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "yptsuuw\n24\n49 59\n2 25\n13 74",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "bzgyhmnhfuvj\n16\n40 18\n36 27\n39 6",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "biandhd\n28\n13 16\n38 15\n30 51",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "svfhlijmkvausnhfxf\n11\n35 47\n21 26\n7 17",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "wlqbdncc\n23\n33 24\n26 31\n32 25",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "ldgxosuxumyzsgklyfa\n43\n31 34\n15 17\n11 33",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "xksnr\n29\n12 21\n19 17\n40 34",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "yp\n29\n46 21\n30 6\n36 34",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "mtsaofbuvy\n105\n105 105\n105 105\n105 105",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "imqhvnwjzw\n105\n105 105\n105 105\n105 105",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "fq\n105\n1 1\n2 104\n1 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "uscgvnjqmy\n1\n104 104\n104 105\n105 105",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:50",
  "total_test_cases": 20
}
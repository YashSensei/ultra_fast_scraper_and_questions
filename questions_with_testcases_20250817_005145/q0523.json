{
  "problem_code": "problems",
  "title": "Patting Heads",
  "tags": [],
  "text": "It's Bessie's birthday and time for party games! Bessie has instructed the N (1 ≤ N ≤ 100,000) cows conveniently numbered 1..N to sit in a circle (so that cow i [except at the ends] sits next to cows i-1 and i+1; cow N sits next to cow 1). Meanwhile, Farmer John fills a barrel with one billion slips of paper, each containing some integer in the range 1..1,000,000.Each cow i then draws a number Ai(1 ≤ Ai≤ 1,000,000) (which is not necessarily unique, of course) from the giant barrel.  Taking turns, each cow i then takes a walk around the circle and pats the heads of all other cows j such that her number Aiis exactly divisible by cow j's number Aj; she then sits again back in her original position.The cows would like you to help them determine, for each cow, the number of other cows she should pat.InputLine 1: A single integer: N.Lines 2..N+1: Line i+1 contains a single integer: Ai.OutputLines 1..N: On line i, print a single integer that is the number of other cows patted by cow i.ExampleInput:5\r\n2\r\n1\r\n2\r\n3\r\n4Output:2\r\n0\r\n2\r\n1\r\n3The first cow pats the second and third cows; the second cows pats no cows; etc.",
  "sample_input": "Input:5\r\n2\r\n1\r\n2\r\n3\r\n4Output:2\r\n0\r\n2\r\n1\r\n3",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/PATHEADS",
  "scraped_at": "2025-08-17 00:33:08",
  "test_cases": [
    {
      "input": "5\r\n2\r\n1\r\n2\r\n3\r\n4",
      "expected_output": "2\r\n0\r\n2\r\n1\r\n3",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4\n4\n7\n5\n1",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "3\n1\n2\n7",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n3",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "15\n73255534\n87996879\n69407956\n2882270\n84805611\n88274853\n74828113\n87303509\n60545030\n11897367\n6658282\n73835075\n42656090\n18852201\n29355935",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "12\n80665106\n35720368\n29822352\n62196994\n64822874\n27283442\n37670981\n22166410\n88255896\n53788272\n4051378\n9321131",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "11\n64973433\n73477735\n94476404\n52677914\n44470253\n57732608\n10742314\n34547380\n29392798\n29544225\n40767475",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "8\n75544072\n45851734\n23920621\n21659380\n76515030\n33926530\n28923422\n75348601",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "18\n82493211\n59648544\n86856770\n53169189\n34223654\n61606917\n10220453\n50506186\n47515479\n44180981\n18789834\n75869397\n43823123\n23335190\n17012424\n96632384\n54117538\n89478014",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "25\n49727\n5187\n82771\n98554\n43958\n70811\n11418\n49767\n15839\n61748\n69241\n90859\n63939\n57277\n41547\n56256\n61198\n91183\n73687\n68145\n3323\n15524\n89560\n20457\n68714",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "81\n70735\n87131\n51603\n2716\n9664\n55510\n95475\n17788\n3876\n4330\n66948\n40896\n44407\n65885\n82030\n93984\n46131\n87877\n89708\n29779\n15534\n12920\n11005\n60488\n73139\n26150\n31616\n94240\n42803\n18000\n50536\n95070\n34422\n97579\n15444\n48078\n25829\n12318\n74637\n36552\n55844\n17240\n28435\n11654\n1181\n16026\n63372\n69095\n347\n61445\n33051\n54152\n48469\n26037\n78019\n74223\n82173\n99314\n80095\n96566\n11611\n50577\n36516\n28408\n61653\n73171\n79516\n48746\n70703\n54186\n27194\n22072\n55378\n49434\n99442\n57662\n40537\n85972\n11033\n26247\n78607",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "89\n92592\n44101\n79269\n70817\n1787\n41795\n32395\n17953\n21146\n13772\n81920\n79092\n76424\n46502\n45546\n48592\n25895\n56072\n92939\n11745\n90403\n80829\n66254\n60142\n52271\n96191\n68939\n60196\n13476\n50452\n2049\n84081\n14176\n94376\n19029\n69470\n93155\n75713\n94388\n84596\n66278\n77436\n66150\n42519\n44751\n14340\n28291\n4305\n83558\n44694\n27758\n33595\n36513\n51313\n37395\n19819\n47785\n11747\n96150\n39021\n36345\n74958\n25164\n36990\n1337\n71145\n36220\n88289\n64089\n21478\n44044\n81626\n96962\n53448\n51427\n14524\n7394\n90859\n74169\n23859\n41298\n82149\n99599\n42994\n67508\n51773\n65789\n82293\n9828",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "97\n97410\n14558\n94416\n65896\n89524\n977\n49094\n50803\n21031\n53660\n63157\n13306\n61244\n95915\n10696\n49546\n35205\n8939\n10365\n96295\n52045\n21328\n47199\n11939\n72502\n30083\n59978\n74906\n55665\n23710\n69753\n42597\n11386\n55337\n72695\n15847\n36390\n11428\n1287\n80762\n83716\n42668\n67172\n3796\n37497\n28525\n68534\n199\n86073\n58157\n60158\n26846\n44126\n39798\n56408\n97610\n92671\n54178\n2912\n47230\n18772\n34291\n9714\n75558\n36190\n40308\n78653\n95076\n70480\n90464\n90753\n98838\n60042\n86747\n9667\n73300\n47545\n77165\n92120\n39964\n18931\n2466\n6252\n11142\n61497\n29280\n22082\n45339\n21030\n70290\n28094\n47558\n33756\n59715\n8325\n22960\n64766",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "51\n88063\n86558\n67820\n65426\n62367\n19378\n11202\n80633\n6969\n72739\n5459\n22519\n11147\n99555\n64516\n31204\n79934\n82784\n8672\n56385\n32259\n96260\n66420\n93451\n26335\n75065\n25625\n11635\n46455\n17157\n22900\n82958\n61319\n16987\n14455\n28600\n80730\n22299\n41073\n55997\n96444\n42607\n17810\n29156\n73410\n79369\n31889\n45024\n72262\n34140\n23635",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "28\n83893\n67587\n64811\n11820\n33639\n67281\n630\n46381\n40688\n63333\n68249\n55919\n80641\n68229\n72836\n67103\n16990\n21883\n55079\n32813\n97208\n61451\n94644\n58931\n63733\n3020\n11035\n78997",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "97\n77129\n88232\n51920\n37667\n96576\n91012\n22368\n63863\n52265\n78498\n69854\n65199\n64477\n81239\n97978\n62752\n57402\n71467\n17660\n21532\n53130\n13952\n73093\n31143\n73978\n59466\n12149\n53207\n84827\n99867\n5570\n35526\n45650\n57063\n99373\n27207\n60305\n52697\n11860\n58426\n96730\n87783\n36176\n82359\n18558\n45311\n89585\n14732\n90818\n16559\n72957\n11631\n3314\n302\n95963\n3380\n70185\n6170\n8098\n11700\n63074\n64532\n48770\n8925\n40142\n50797\n13389\n37666\n90948\n16855\n74333\n93356\n94400\n94406\n87358\n13958\n56746\n33784\n21237\n62349\n28594\n5036\n17595\n13405\n96918\n86830\n69665\n72062\n60408\n3731\n87750\n91042\n6219\n72178\n15118\n63927\n87810",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "100\n76894976\n88767454\n32236008\n39716750\n81369405\n14321922\n74873211\n36575153\n13861301\n11891301\n33693543\n54283773\n53969146\n50704227\n42179358\n11844581\n87586371\n9187523\n36469153\n95788115\n10449697\n59842050\n93500378\n45440789\n14978512\n85202168\n97335121\n56283653\n2041497\n55961993\n80688816\n41790702\n77611066\n3911583\n3937579\n656150\n95136036\n89929200\n71808851\n12291410\n9004435\n71229867\n56607892\n4209478\n80048110\n23198119\n24175466\n54666947\n71631479\n71252948\n78693623\n96896855\n35810778\n71744129\n7166579\n13274032\n64250130\n59857493\n25342880\n29289449\n36957033\n62584426\n12114001\n77650141\n76278643\n35756383\n29406467\n28299176\n87787767\n92557318\n63899404\n44440444\n16239983\n85844968\n85769238\n92657161\n36395894\n97411782\n52265148\n1708909\n7080313\n35309788\n69555362\n39596488\n17713047\n72934632\n91056066\n20468603\n57780833\n51561873\n57205678\n25743359\n3585405\n34018922\n11920165\n34708550\n49661123\n72038729\n8228774\n26838781",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "100\n55213229\n85277379\n96813199\n18903011\n4313877\n89428824\n10512865\n73876376\n32264058\n49005208\n52534093\n21571160\n20325289\n78689114\n53386151\n48890765\n42552684\n29168425\n98426858\n80209656\n74314628\n66612289\n24757252\n27002206\n73320168\n1143307\n75661158\n81278935\n82676235\n17320500\n69517805\n99676745\n97020446\n62481097\n50828492\n20785102\n37613546\n28761742\n78607605\n58308880\n12127559\n38419302\n24552834\n57156444\n54647847\n66819706\n54114386\n34080414\n47394318\n61464069\n34028783\n30541794\n74841837\n60018126\n36433612\n56869548\n39133574\n3778056\n38926616\n56039317\n57748589\n7139523\n47495712\n64930155\n44209113\n97655057\n88018012\n4346202\n10412978\n37327943\n939724\n75517967\n34173055\n53375911\n32996390\n46137336\n29150135\n59960210\n86713753\n49081483\n41262151\n46650097\n81090230\n77660035\n13400056\n82999578\n58668416\n34645428\n95071982\n65042217\n70876983\n80901839\n85733889\n3321792\n11343358\n84759560\n84948414\n73528779\n65950931\n62385548",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "2\n3790143\n1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 2)"
    },
    {
      "input": "1\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 1)"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:47",
  "total_test_cases": 20
}
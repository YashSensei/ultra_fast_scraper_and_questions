{
  "problem_code": "problems",
  "title": "Packing Rectangles",
  "tags": [],
  "text": "Four rectangles are given. Find the smallest enclosing (new) rectangle into which these four may be fitted without overlapping.  By smallest rectangle, we mean the one with the smallest area.All four rectangles should have their sides parallel to the corresponding sides of the enclosing rectangle.Rectangles may be rotated 90 degrees during packing.There may exist several different enclosing rectangles fulfilling the requirements, all with the same area.  You must produce all such enclosing rectangles.InputFour lines, each containing two positive space-separated integers that represent the lengths of a rectangle's two sides.  Each side of a rectangle is at least 1 and at most 50.OutputThe output file contains one line more than the number of solutions. The first line contains a single integer:  the minimum area of the enclosing rectangles.  Each of the following lines contains one solution described by two numbers p and q with p<=q.  These lines must be sorted in ascending order of p, and must all be different.ExampleInput:1 2\r\n2 3\r\n3 4\r\n4 5Output:40\r\n4 10\r\n5 8",
  "sample_input": "Input:1 2\r\n2 3\r\n3 4\r\n4 5Output:40\r\n4 10\r\n5 8",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/PACKRECT",
  "scraped_at": "2025-08-17 00:34:20",
  "test_cases": [
    {
      "input": "1 2\r\n2 3\r\n3 4\r\n4 5",
      "expected_output": "40\r\n4 10\r\n5 8",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "9 9\n3 6\n3 1\n1 9",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "3 5\n9 8\n4 5\n7 1",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "8 10\n3 7\n6 8\n7 6",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "88 57\n72 39\n58 20\n79 51",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "59 67\n42 6\n23 1\n42 57",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "79 84\n55 78\n33 100\n43 20",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "33 16\n35 91\n16 69\n98 9",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "93 8\n75 72\n2 75\n26 53",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "82 419\n479 481\n471 443\n88 222",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "80 78\n162 496\n247 52\n146 229",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "497 395\n466 463\n86 437\n73 409",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "320 233\n197 488\n149 463\n118 452",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "393 466\n471 115\n281 224\n174 116",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "472 62\n375 353\n146 129\n488 252",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "224 479\n68 232\n202 341\n500 469",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "999 999\n999 1000\n1000 2\n2 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 2\n1000 1\n1 999\n999 1000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:56",
  "total_test_cases": 20
}
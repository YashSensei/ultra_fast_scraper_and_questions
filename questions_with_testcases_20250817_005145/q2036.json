{
  "problem_code": "problems",
  "title": "abdou set",
  "tags": [],
  "text": "Abdouhas a set of unique positive integers. He wants to add several (possibly none) new positive integers to this set, such that when the set is sorted, for every two consecutive numbers X, Y abs(X % M - Y % M) = 1 . Your task is to calculate the smallest possible count of new numbers, with which he can achieve that.InputThe first line contains T, the number of test cases. It is followed by 2*T lines, two lines per test case. The first line contains two positive integers M and N. The second line contains N integers.1 ≤ T ≤ 5000.1 ≤ M ≤ 105.2 ≤ N ≤ 50.1 ≤ every integer in the set ≤ 106.OutputFor test case print a single integer in a separate line: the smallest possible count of new numbers, with which he can complete the set or -1 if no solution exists.ExampleInput:5\r\n2 3 \r\n2 10 20\r\n10 2\r\n10 20\r\n10 6\r\n11 19 5 30 40 100\r\n1 2 \r\n1 9999\r\n15 3\r\n4218 15210 1426Output:2\r\n1\r\n-1\r\n-1\r\n3ExplanationIn the first test case we can add 3 and 13 to the given set to achieve Abdou's goal.",
  "sample_input": "Input:5\r\n2 3 \r\n2 10 20\r\n10 2\r\n10 20\r\n10 6\r\n11 19 5 30 40 100\r\n1 2 \r\n1 9999\r\n15 3\r\n4218 15210 1426Output:2\r\n1\r\n-1\r\n-1\r\n3",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/KIMO1",
  "scraped_at": "2025-08-17 00:33:52",
  "test_cases": [
    {
      "input": "5\r\n2 3 \r\n2 10 20\r\n10 2\r\n10 20\r\n10 6\r\n11 19 5 30 40 100\r\n1 2 \r\n1 9999\r\n15 3\r\n4218 15210 1426",
      "expected_output": "2\r\n1\r\n-1\r\n-1\r\n3",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3\n10\n7\n4",
      "expected_output": "3\n10\n7\n4",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n2\n10\n10\n8\n5",
      "expected_output": "5\n2\n10\n10\n8\n5",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n5",
      "expected_output": "1\n5",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "18\n17687741\n96351356\n42526795\n79372124\n9428243\n7798201\n25502258\n75884886\n62112150\n31864501\n69300654\n26499210\n57280740\n43311902\n47809524\n82405475\n75699671\n68360376",
      "expected_output": "18\n17687741\n96351356\n42526795\n79372124\n9428243\n7798201\n25502258\n75884886\n62112150\n31864501\n69300654\n26499210\n57280740\n43311902\n47809524\n82405475\n75699671\n68360376",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "19\n9161955\n52407880\n43539810\n92396512\n80221412\n75165462\n54763132\n85472398\n10697185\n16735932\n72253314\n34916702\n77764509\n47392995\n6144192\n30442250\n52134128\n50246485\n85405809",
      "expected_output": "19\n9161955\n52407880\n43539810\n92396512\n80221412\n75165462\n54763132\n85472398\n10697185\n16735932\n72253314\n34916702\n77764509\n47392995\n6144192\n30442250\n52134128\n50246485\n85405809",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "14\n14793345\n69541446\n1333848\n95366038\n49514157\n8769488\n17571321\n28014439\n79015234\n79941249\n80912249\n93861654\n8054611\n75886863",
      "expected_output": "14\n14793345\n69541446\n1333848\n95366038\n49514157\n8769488\n17571321\n28014439\n79015234\n79941249\n80912249\n93861654\n8054611\n75886863",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "7\n79250651\n79052305\n42319149\n9714573\n25944976\n63491165\n52068968",
      "expected_output": "7\n79250651\n79052305\n42319149\n9714573\n25944976\n63491165\n52068968",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "10\n75830968\n27627656\n19465315\n97471530\n82242275\n60040082\n5605351\n38874414\n78362865\n97130101",
      "expected_output": "10\n75830968\n27627656\n19465315\n97471530\n82242275\n60040082\n5605351\n38874414\n78362865\n97130101",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "34\n40662\n24692\n27732\n29409\n89362\n7409\n29979\n1790\n76083\n28451\n57865\n88131\n20087\n42329\n97321\n13327\n3090\n59728\n40171\n22014\n47559\n41947\n82297\n70107\n36242\n81035\n49456\n27529\n26493\n98452\n36989\n71199\n64034\n63663",
      "expected_output": "34\n40662\n24692\n27732\n29409\n89362\n7409\n29979\n1790\n76083\n28451\n57865\n88131\n20087\n42329\n97321\n13327\n3090\n59728\n40171\n22014\n47559\n41947\n82297\n70107\n36242\n81035\n49456\n27529\n26493\n98452\n36989\n71199\n64034\n63663",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "38\n61884\n46711\n53278\n13122\n17058\n22460\n73639\n36048\n66482\n62765\n11387\n24605\n93333\n71736\n44763\n98580\n43340\n1056\n64632\n69199\n56589\n91179\n20810\n1751\n95648\n52611\n97169\n15618\n82570\n88441\n75057\n76846\n60134\n35858\n14507\n75312\n62904\n40244",
      "expected_output": "38\n61884\n46711\n53278\n13122\n17058\n22460\n73639\n36048\n66482\n62765\n11387\n24605\n93333\n71736\n44763\n98580\n43340\n1056\n64632\n69199\n56589\n91179\n20810\n1751\n95648\n52611\n97169\n15618\n82570\n88441\n75057\n76846\n60134\n35858\n14507\n75312\n62904\n40244",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "39\n51739\n45442\n83825\n27240\n68292\n12344\n83403\n71288\n58273\n49654\n47201\n82635\n89604\n16826\n55782\n97012\n74380\n10381\n62259\n45515\n1156\n26584\n92524\n11864\n22836\n57142\n63957\n9435\n5496\n7089\n31997\n23584\n87624\n91875\n6321\n99895\n69706\n10581\n18427",
      "expected_output": "39\n51739\n45442\n83825\n27240\n68292\n12344\n83403\n71288\n58273\n49654\n47201\n82635\n89604\n16826\n55782\n97012\n74380\n10381\n62259\n45515\n1156\n26584\n92524\n11864\n22836\n57142\n63957\n9435\n5496\n7089\n31997\n23584\n87624\n91875\n6321\n99895\n69706\n10581\n18427",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "20\n98764\n36698\n14097\n5821\n64386\n76721\n66987\n23374\n22304\n85021\n5738\n74718\n30062\n5054\n48543\n26484\n81253\n272\n28500\n18784",
      "expected_output": "20\n98764\n36698\n14097\n5821\n64386\n76721\n66987\n23374\n22304\n85021\n5738\n74718\n30062\n5054\n48543\n26484\n81253\n272\n28500\n18784",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "23\n99955\n90525\n67311\n28539\n66748\n59933\n16569\n69497\n26693\n67112\n83857\n33184\n49798\n64662\n34485\n82777\n42201\n62586\n27430\n77334\n11547\n30992\n68822",
      "expected_output": "23\n99955\n90525\n67311\n28539\n66748\n59933\n16569\n69497\n26693\n67112\n83857\n33184\n49798\n64662\n34485\n82777\n42201\n62586\n27430\n77334\n11547\n30992\n68822",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "46\n13153\n62263\n28188\n90361\n21122\n45582\n4332\n95274\n76566\n15496\n52898\n50312\n41081\n38131\n61877\n24496\n8087\n97206\n64914\n28501\n16452\n1448\n1691\n86021\n61063\n5920\n72885\n58248\n25208\n89295\n49478\n19755\n89309\n69921\n15800\n92132\n81276\n16309\n45692\n5370\n46995\n59252\n48724\n50066\n95197\n45631",
      "expected_output": "46\n13153\n62263\n28188\n90361\n21122\n45582\n4332\n95274\n76566\n15496\n52898\n50312\n41081\n38131\n61877\n24496\n8087\n97206\n64914\n28501\n16452\n1448\n1691\n86021\n61063\n5920\n72885\n58248\n25208\n89295\n49478\n19755\n89309\n69921\n15800\n92132\n81276\n16309\n45692\n5370\n46995\n59252\n48724\n50066\n95197\n45631",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "44\n33920\n47138\n31916\n95996\n49735\n67090\n19228\n98955\n12484\n44604\n34198\n78251\n83882\n71767\n63957\n47666\n6090\n857\n55152\n94512\n14030\n39624\n38526\n87968\n13545\n15745\n48923\n92090\n99431\n86050\n5047\n58569\n76087\n158\n96888\n72403\n12837\n30976\n81570\n89228\n70189\n22750\n9470\n99371",
      "expected_output": "44\n33920\n47138\n31916\n95996\n49735\n67090\n19228\n98955\n12484\n44604\n34198\n78251\n83882\n71767\n63957\n47666\n6090\n857\n55152\n94512\n14030\n39624\n38526\n87968\n13545\n15745\n48923\n92090\n99431\n86050\n5047\n58569\n76087\n158\n96888\n72403\n12837\n30976\n81570\n89228\n70189\n22750\n9470\n99371",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "50\n69236795\n99071760\n95212918\n91768813\n715370\n46699757\n34829383\n22429711\n68405076\n34368912\n36174598\n52016617\n93069609\n60408086\n4645306\n46739223\n64731910\n1063482\n9541312\n98521937\n94201689\n72716589\n1197757\n48006482\n70779301\n36337288\n21457420\n48750837\n52627716\n59380064\n26449237\n2888108\n74589386\n15672654\n86829273\n69784691\n79411297\n6236565\n37260254\n90091435\n46605028\n16163921\n51735583\n61676065\n82553531\n64249135\n65289499\n16264461\n89443904\n14917238",
      "expected_output": "50\n69236795\n99071760\n95212918\n91768813\n715370\n46699757\n34829383\n22429711\n68405076\n34368912\n36174598\n52016617\n93069609\n60408086\n4645306\n46739223\n64731910\n1063482\n9541312\n98521937\n94201689\n72716589\n1197757\n48006482\n70779301\n36337288\n21457420\n48750837\n52627716\n59380064\n26449237\n2888108\n74589386\n15672654\n86829273\n69784691\n79411297\n6236565\n37260254\n90091435\n46605028\n16163921\n51735583\n61676065\n82553531\n64249135\n65289499\n16264461\n89443904\n14917238",
      "type": "max_case_17",
      "description": "Maximum size array (N = 50)"
    },
    {
      "input": "50\n4586138\n14434340\n39457449\n26337120\n2227656\n57285521\n51924702\n5237021\n27869131\n2016469\n5189643\n94037525\n71087855\n69380668\n95265456\n61967858\n1035409\n68538097\n20121819\n34219404\n9853169\n8806448\n84261927\n68325178\n91330086\n84142769\n17927287\n81574805\n57431488\n91480507\n43675596\n44211954\n6552842\n4462324\n22353361\n30745586\n73526580\n64559125\n49163473\n12922652\n32995590\n99243308\n90890490\n92192948\n74872480\n22086132\n691096\n90581484\n62260109\n95048662",
      "expected_output": "50\n4586138\n14434340\n39457449\n26337120\n2227656\n57285521\n51924702\n5237021\n27869131\n2016469\n5189643\n94037525\n71087855\n69380668\n95265456\n61967858\n1035409\n68538097\n20121819\n34219404\n9853169\n8806448\n84261927\n68325178\n91330086\n84142769\n17927287\n81574805\n57431488\n91480507\n43675596\n44211954\n6552842\n4462324\n22353361\n30745586\n73526580\n64559125\n49163473\n12922652\n32995590\n99243308\n90890490\n92192948\n74872480\n22086132\n691096\n90581484\n62260109\n95048662",
      "type": "max_case_18",
      "description": "Maximum size array (N = 50)"
    },
    {
      "input": "50\n74146384\n28487893\n1\n61117516\n1\n49670298\n26852324\n1\n100000000\n100000000\n1\n100000000\n81715517\n100000000\n1\n4530354\n100000000\n40628160\n13090690\n42477331\n1\n100000000\n1\n1\n1\n1\n12676859\n5509440\n100000000\n763106\n1\n100000000\n76386031\n100000000\n100000000\n100000000\n100000000\n55768197\n71855158\n2910005\n100000000\n2137416\n1\n81145575\n1\n35201639\n100000000\n54345217\n60652927\n52483010",
      "expected_output": "50\n74146384\n28487893\n1\n61117516\n1\n49670298\n26852324\n1\n100000000\n100000000\n1\n100000000\n81715517\n100000000\n1\n4530354\n100000000\n40628160\n13090690\n42477331\n1\n100000000\n1\n1\n1\n1\n12676859\n5509440\n100000000\n763106\n1\n100000000\n76386031\n100000000\n100000000\n100000000\n100000000\n55768197\n71855158\n2910005\n100000000\n2137416\n1\n81145575\n1\n35201639\n100000000\n54345217\n60652927\n52483010",
      "type": "edge_case_19",
      "description": "Edge case array (N = 50)"
    },
    {
      "input": "2\n29155326\n88943319",
      "expected_output": "2\n29155326\n88943319",
      "type": "edge_case_20",
      "description": "Edge case array (N = 2)"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:52",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:23"
}
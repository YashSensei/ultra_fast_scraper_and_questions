{
  "problem_code": "problems",
  "title": "Search Insert Delete",
  "tags": [],
  "text": "You are given a bunch of data (all are positive 32 bit numbers) to operate on. The only operations on the data are search, insert, and delete. When storing the data you have to remember its rank, that is the original position when the data is being inserted. All successful operations must return the ranks of the data. Failed operations should return NONE as the answer.Your objective is to execute all of the operations as fast as possible.InputThe first line of input is N and M, separated by a space, N is the  number of initial data. (0 <= N < 1000000) and M is the number of  operations against the data. (0 <= M < 1000000).The second line contains N data, separated by blanks. All data are positive 32 bits numbersThe next M lines contains operations against the data. Each line contains a symbol and a number, separated by a space.There are 3 symbols (S,I,D), each representing search, insert, and delete operation.'S  number' tries to find the number in the stored data, and outputs its  first rank in the stored data (as originally inserted), or NONE if no  such number exists.'I number' inserts the number into the stored data, and outputs its rank in the stored data. (Data can be duplicated).'D  number' deletes the least ranked number found in the stored data, and outputs its  rank, or NONE if no such number  originally exists.OutputThere is an output for each executed operation. See the above input  description about each operation for the detail of the output.ExampleInput:10 620 12 10 28 20 50 49 8 51 1S 20I 3S 11D 20I 2S 20Output:111NONE1125",
  "sample_input": "Input:10 620 12 10 28 20 50 49 8 51 1S 20I 3S 11D 20I 2S 20Output:111NONE1125",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/SID",
  "scraped_at": "2025-08-17 00:34:12",
  "test_cases": [
    {
      "input": "10 620 12 10 28 20 50 49 8 51 1S 20I 3S 11D 20I 2S 20",
      "expected_output": "111NONE1125",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "6 5 5 2 10 3 9 4 4 6 1 1 8 3 9 5 7\n1 1 9 9 1 2 3 10 7 6 enxw eknxa tqhst xn qykyy dwqvv 1",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "7 4 10 9 8 3 9 2 3 5 10 2 4 1 9 3 3\n10 9 10 3 7 9 8 9 8 5 asaf kckkb hfdej e jqzc khtj 7",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "10 9 7 1 3 5 3 6 6 7 9 1 6 4 2 5 3\n4 2 9 7 8 10 3 2 10 7 jtnmq rzzl bcm uvsc i adm 9",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "76 98 30 76 21 58 17 65 21 84 36 8 24 6 82 94 39\n30 2 100 66 92 65 72 54 63 67 rhbh cn yfguo pgv pmkhi ii 89",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "6 93 79 96 97 42 75 92 99 76 5 42 70 42 73 71 59\n33 19 11 24 95 10 88 94 32 61 qgok iox ufe auuz m j 48",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "32 44 89 97 32 22 9 81 80 66 77 12 90 100 61 75 12\n51 67 52 28 33 97 88 48 95 75 rjoe fjmxi gpts rz lwli ay 32",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "33 7 75 47 42 73 88 55 55 42 93 23 8 31 72 62 39\n81 69 16 11 38 1 38 82 95 85 wpk x r qaz cda zmj 95",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "53 76 27 44 89 91 84 39 46 87 91 97 65 4 8 82 36\n70 12 27 52 47 65 60 42 31 26 zazhb ifp lah dbwb o lq 99",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "366391 269545 240250 145011 115019 274018 55256 79316 388927 492472 275471 417494 143368 234794 298830 117654 130430\n245337 357093 161833 414171 194081 164519 83837 483226 439292 67472 hz d hg ebjpb tbtj pgtk 499017",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "368570 482416 204792 207479 356548 435322 373739 238316 476424 353897 278126 305269 442940 368523 292403 327014 300333\n214189 140969 190777 158793 490272 218287 349446 324644 385206 72960 knxpx qw ckefe o tzw puyd 144429",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "196725 427096 433154 194831 149751 59999 224630 69606 442940 231868 95358 434498 397176 337755 318539 225457 291839\n156000 478615 127180 127654 121068 284876 312487 389065 469668 329820 oorv lzb qjipa lw zqkx d 138244",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "201121 390925 339508 398836 499197 143151 126651 227693 386007 260014 179009 432156 431218 136671 315848 314995 488371\n274850 319441 244094 197369 244272 309357 188633 164798 195109 295555 yie g vgkg admnt lgqv cyu 338211",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "456289 444037 356040 197412 157988 84925 211254 212413 188691 114068 153379 349269 423404 173577 289264 195351 244644\n430104 439301 420478 140642 421350 303482 145315 220767 50495 384099 z ykjxr ubhw ojf ae puxj 183900",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "276665 55563 193606 171162 462038 66824 311422 394597 382249 276678 228192 159871 193267 143464 204292 109575 362470\n355176 52865 251793 362991 59199 434763 228762 152770 240272 351621 nx p kgb zb ssux hahoy 262272",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "211785 224946 482298 225338 161925 276265 354171 223196 376579 429811 295015 150503 79501 53223 344437 422865 352245\n198220 486726 128947 413723 125950 411160 244463 175285 436870 123309 g emb r jh hjfi jczoe 408299",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000\n1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 nlvz qqj syfvr x ni zakpf 1000000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000\n1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 1000000 i zi lo is qsbur kuya 1000000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 2 1 1 1 2 999999 1 2 2 1000000 1000000 999999 2 999999 1 1000000\n1 999999 1 1 2 1000000 2 999999 1 2 a zelbe etay zygqt tof lop 1000000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "999999 999999 999999 999999 2 1000000 2 2 2 999999 1 2 999999 999999 999999 999999 999999\n1000000 1 1 1 2 2 999999 2 999999 999999 tprx l qdvnc lao vmb bwubg 1000000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:55",
  "total_test_cases": 20
}
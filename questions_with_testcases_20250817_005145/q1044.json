{
  "problem_code": "problems",
  "title": "A Terribly Grimm Problem",
  "tags": [],
  "text": "Grimm's conjecture states that to each element of a set of consecutive composite numbers one can assign a distinct prime that divides it.For example, for the range 242 to 250, one can assign distinct primes as follows:Given the lower and upper bounds of a sequence of composite numbers, find a distinct prime for each. If there is more than one such assignment, output the one with the smallest first prime. If there is still more than one, output the one with the smallest second prime, and so on.InputThere will be several test cases in the input. Each test case will consist of a single line with two integers, lo and hi (4 ≤ lo < hi ≤ 1010), separated by a single space. It is guaranteed that all the numbers in the range from lo to hi inclusive are composite. The input will end with a line with two 0s.OutputFor each test case, output the set of unique primes, in order, all on the same line, separated by single spaces. Output no extra spaces, and do not separate answers with blank lines.Example Input242 250\r\n8 10\r\n0 0Example Output2 3 61 7 41 13 31 83 5\r\n2 3 5",
  "sample_input": "242 250\r\n8 10\r\n0 0",
  "sample_output": "2 3 61 7 41 13 31 83 5\r\n2 3 5",
  "link": "https://www.spoj.com/problems/GRIMM",
  "scraped_at": "2025-08-17 00:33:26",
  "test_cases": [
    {
      "input": "242 250\r\n8 10\r\n0 0",
      "expected_output": "2 3 61 7 41 13 31 83 5\r\n2 3 5",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "7 4\n3 3\n6 7",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "6 2\n2 3\n4 2",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "2 2\n6 1\n6 10",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "44 75\n28 15\n71 82",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "85 10\n19 10\n74 54",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "68 10\n63 83\n67 57",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "42 11\n71 58\n19 32",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "78 35\n44 38\n72 11",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "491 338\n209 373\n274 271",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "416 202\n337 352\n344 104",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "376 202\n165 424\n447 186",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "306 258\n481 55\n492 336",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "371 78\n319 283\n89 235",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "433 234\n274 379\n161 461",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "201 432\n174 180\n131 193",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 999\n999 1000\n1 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "999 1000\n2 1000\n999 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:48",
  "total_test_cases": 20
}
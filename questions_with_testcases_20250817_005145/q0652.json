{
  "problem_code": "problems",
  "title": "Chemistry",
  "tags": [],
  "text": "The story started some 5,000 years ago in Ancient Egypt, was continued by the Greeks and Arabs, reached France, Europe, and finally conquered the world. The studies on the compositions of waters, the humans’ greed for purified materials, millions of experiments and many brilliant minds made chemistry what it is today: No more the quest of the Philosopher’s stone, but the study of matter and the changes it undergoes.There remain nevertheless still groups of stout-hearted followers of ancient believes, so-called alchemist. Keeping their research top-secret, they meet once a year for a conference where they share their recent findings. This year’s location is Lausanne and Extremely Purified Fluorescent Liquids (EPFL) is the topic. The idea is that the chemists brew together some new EPFLs. As we speak about state of the art EPFLs, it is necessary that certain chemists put their very specific knowledge together. Thus for a certain EPFLE1, the presence of chemistsC1,C2andC3may be required. For anotherE2, chemistsC1andC4might be necessary.Although chemists are generally very patient people, as their reactions might take long times, they get very impatient if they are to observe experiments in which they are not involved. As an example, chemistC4would go crazy if he had to assist to the brewage ofE1. To ensure a pleasant stay in Lausanne to every chemist, you are to arrange their departure and arrival dates so that each chemist is available whenever his knowledge is required, but is not in Lausanne when other EPFLs are created.To this purpose, you are given a schedule with ones and zeros. Each column stands for one EPFL, each row for one chemist. There is a 1 at position (Ci,Ei) if chemistCiis needed for EPFLEi, and a zero otherwise. Your task boils now down on rearranging the columns in a way that all ones are consecutive in every line. For traditional reasons, the organizers’ EPFL is always brewed first and corresponds to the first column of the input schedule (E1).InputThe input consists of several test-cases separated by an empty line. Each test-case starts with the number of chemistsC(1 ≤ C ≤ 400), followed by the number of EPFLsE(1 ≤ E ≤ 400). Then followClines ofEcharacters, ‘1’ or ‘0’. You may assume that there exists exactly one order of EPFLs (initiated byE1) that meets the above constraints. Input terminates on a test-case withC=E=0, which must not be processed.OutputPrint each output on a line by itself, which holdsEnumbers, corresponding to the initial position in the planning, arranged such that all chemists are available when necessary and away from Lausanne otherwise. (the first number must always be 1 as a tribute to the host).ExampleInput:6 5\r\n00010\r\n01000\r\n10101\r\n10100\r\n00011\r\n00101\r\n\r\n0 0Output:1 3 5 4 2",
  "sample_input": "Input:6 5\r\n00010\r\n01000\r\n10101\r\n10100\r\n00011\r\n00101\r\n\r\n0 0Output:1 3 5 4 2",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/CHEM",
  "scraped_at": "2025-08-17 00:33:08",
  "test_cases": [
    {
      "input": "6 5\r\n00010\r\n01000\r\n10101\r\n10100\r\n00011\r\n00101\r\n\r\n0 0",
      "expected_output": "1 3 5 4 2",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5 3\n3\n7\n6\n7\n5\n5\n6 4",
      "expected_output": "0\n3\n7\n6\n7\n5\n5\n0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "1 6\n3\n3\n3\n10\n2\n3\n6 1",
      "expected_output": "0\n3\n3\n3\n10\n2\n3\n0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "3 1\n6\n5\n5\n8\n4\n9\n7 4",
      "expected_output": "0\n6\n5\n5\n8\n4\n9\n0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "26 5\n61\n92\n23\n63\n59\n35\n38 65",
      "expected_output": "0\n61\n92\n23\n63\n59\n35\n0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "67 82\n90\n45\n56\n6\n74\n77\n67 4",
      "expected_output": "0\n90\n45\n56\n6\n74\n77\n0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "24 56\n24\n30\n16\n58\n49\n1\n54 48",
      "expected_output": "0\n24\n30\n16\n58\n49\n1\n0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "63 49\n35\n70\n100\n55\n81\n85\n70 1",
      "expected_output": "0\n35\n70\n100\n55\n81\n85\n0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "46 19\n39\n41\n72\n41\n58\n75\n9 53",
      "expected_output": "0\n39\n41\n72\n41\n58\n75\n0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "336 351\n220\n220\n300\n156\n428\n53\n287 263",
      "expected_output": "0\n220\n220\n300\n156\n428\n53\n0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "280 391\n165\n278\n389\n149\n158\n59\n327 468",
      "expected_output": "0\n165\n278\n389\n149\n158\n59\n0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "335 184\n369\n114\n469\n322\n205\n190\n190 410",
      "expected_output": "0\n369\n114\n469\n322\n205\n190\n0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "116 106\n92\n79\n386\n244\n476\n169\n103 379",
      "expected_output": "0\n92\n79\n386\n244\n476\n169\n0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "330 283\n390\n359\n435\n454\n333\n133\n91 449",
      "expected_output": "0\n390\n359\n435\n454\n333\n133\n0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "83 489\n110\n272\n273\n276\n351\n196\n71 207",
      "expected_output": "0\n110\n272\n273\n276\n351\n196\n0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "209 437\n337\n218\n479\n231\n83\n298\n89 354",
      "expected_output": "0\n337\n218\n479\n231\n83\n298\n0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000 1000",
      "expected_output": "0\n1000\n1000\n1000\n1000\n1000\n1000\n0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000\n1000\n1000\n1000\n1000\n1000\n1000 1000",
      "expected_output": "0\n1000\n1000\n1000\n1000\n1000\n1000\n0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 999\n1\n2\n1\n1000\n1\n1000\n1000 2",
      "expected_output": "0\n1\n2\n1\n1000\n1\n1000\n0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 2\n1000\n1000\n2\n1\n1000\n2\n1000 2",
      "expected_output": "0\n1000\n1000\n2\n1\n1000\n2\n0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:47",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:36:40"
}
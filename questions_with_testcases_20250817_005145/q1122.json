{
  "problem_code": "problems",
  "title": "Zoo",
  "tags": [],
  "text": "The pride of the Asia-Pacific region is the newly constructed Great Circular Zoo. Situated on\r\na small Pacific island, it consists of a large circle of different enclosures, each containing its own\r\nexotic animal as illustrated below.You are in charge of public relations for the zoo, which means it is your job to keep people as\r\nhappy as possible. A busload of schoolchildren has just arrived, and you are eager to please them.\r\nHowever, this is no easy task, there are animals that some children love, and there are animals\r\nthat some children fear. For example, little Alex loves monkeys and koalas because they are cute,\r\nbut fears lions because of their sharp teeth. On the other hand, Polly loves lions because of their\r\nbeautiful manes, but fears koalas because they are extremely smelly.You have the option of removing some animals from their enclosures, so that children are not\r\nafraid. However, you are worried that if you remove too many animals then this will leave the\r\nchildren with nothing to look at. Your task is to decide which animals to remove so that as many\r\nchildren can be made happy as possible.Each child is standing outside the circle, where they can see five consecutive enclosures. You\r\nhave obtained a list of which animals each child fears, and which animals each child loves. A child\r\nwill be made happy if either at least one animal they fear is removed from their field of vision, or at least one animal they love is not removed from their field of vision.For example, consider the list of children and animals illustrated below:-----------------------------------------------------------------------\r\n|Child      |Enclosures Visible |Fears                |Loves          |\r\n|Alex       |2, 3, 4, 5, 6      |Enclosure 4          |Enclosures 2, 6|\r\n|Polly      |3, 4, 5, 6, 7      |Enclosure 6          |Enclosure 4    |\r\n|Chaitanya  |6, 7, 8, 9, 10     |Enclosure 9          |Enclosures 6, 8|\r\n|Hwan       |8, 9, 10, 11, 12   |Enclosure 9          |Enclosure 12   |\r\n|Ka-Shu     |12, 13, 14, 1, 2   |Enclosures 12, 13, 2 |-              |\r\n-----------------------------------------------------------------------Suppose you remove the animals from enclosures 4 and 12. This will make Alex and Ka-Shu\r\nhappy, because at least one animal that they fear has gone. This will also keep Chaitanya happy,\r\nsince both enclosures 6 and 8 still contain animals that he loves. However, both Polly and Hwan\r\nwill be unhappy, since they cannot see any animals that they love but they can still see all the\r\nanimals that they fear. This arrangement therefore gives a total of three happy children.Now suppose you put these animals back into their enclosures, and remove the animals from\r\nenclosures 4 and 6 instead. Alex and Polly will be happy because the animals that they fear in\r\nenclosures 4 and 6 have gone. Chaitanya will be happy because, even though animal 6 has gone,\r\nhe can still see the animal in enclosure 8 which he loves. Likewise, Hwan will be happy because\r\nshe can now see the animal in enclosure 12, which she loves. The only person unhappy will be\r\nKa-Shu.Finally, suppose you put the animals back once more and then remove only the animal from\r\nenclosure 13. Ka-Shu will now be happy since one animal that he fears has been removed, and\r\nAlex, Polly, Chaitanya and Hwan will all be happy since they can all see at least one animal that\r\nthey love. Thus this arrangement gives five happy children, the largest number possible.InputMultiple test cases, the number of them will be given at the very first line.For each test case:The first line will be of the form N C, where N is the number of animal enclosures\r\n(10 ≤ N ≤ 10 000) and C is the number of children (1 ≤ C ≤ 50 000). The enclosures are\r\nnumbered 1, 2 ... N clockwise around the circle.Following this will be C additional lines of input, where each line describes a single child. Each\r\nof these lines will be of the form:E F L X1 X2 ... XF Y1 Y2 ... YL;where:E is the first enclosure that the child can see (1 ≤ E ≤ N). In other words, the child can see enclosures E, E + 1, E + 2, E + 3 and E + 4. Note that numbers larger than N wrap back around the circle, so if N = 14 and E = 13 then the child can see enclosures 13, 14, 1, 2 and 3.F is the number of animals that the child fears, and L is the number of animals that the child loves.Enclosures X1 ... XF contain the animals that the child fears (1 ≤ X1 ... XF ≤ N).Enclosures Y1 ... YL contain the animals that the child loves (1 ≤ Y1 ... YL ≤ N).No two of the integers X1 ... XF,Y1 ... YL are equal, and all of these integers describe\r\nenclosures that the child can see.Children will be listed in sorted order according to the first enclosure E (so the child with\r\nlowest E will appear first and the child with largest E will appear last). Note that more than one\r\nchild may have the same first enclosure E.OutputOutput must consist of a single integer, giving the largest number of children that can be made\r\nhappy.ExampleInput:2\r\n14 5\r\n2 1 2 4 2 6\r\n3 1 1 6 4\r\n6 1 2 9 6 8\r\n8 1 1 9 12\r\n12 3 0 12 13 2\r\n12 7\r\n1 1 1 1 5\r\n5 1 1 5 7\r\n5 0 3 5 7 9\r\n7 1 1 7 9\r\n9 1 1 9 11\r\n9 3 0 9 11 1\r\n11 1 1 11 1Output:5\r\n6Explanation:The first sample case is the example discussed earlier, in which all C = 5 children can be made\r\nhappy. The second sample case is an example in which it is impossible to make all C = 7 children\r\nhappy.Warning: large input/output data, be careful with certain languages",
  "sample_input": "-----------------------------------------------------------------------\r\n|Child      |Enclosures Visible |Fears                |Loves          |\r\n|Alex       |2, 3, 4, 5, 6      |Enclosure 4          |Enclosures 2, 6|\r\n|Polly      |3, 4, 5, 6, 7      |Enclosure 6          |Enclosure 4    |\r\n|Chaitanya  |6, 7, 8, 9, 10     |Enclosure 9          |Enclosures 6, 8|\r\n|Hwan       |8, 9, 10, 11, 12   |Enclosure 9          |Enclosure 12   |\r\n|Ka-Shu     |12, 13, 14, 1, 2   |Enclosures 12, 13, 2 |-              |\r\n-----------------------------------------------------------------------",
  "sample_output": "E F L X1 X2 ... XF Y1 Y2 ... YL;",
  "link": "https://www.spoj.com/problems/ZOO",
  "scraped_at": "2025-08-17 00:33:29",
  "test_cases": [
    {
      "input": "-----------------------------------------------------------------------\r\n|Child      |Enclosures Visible |Fears                |Loves          |\r\n|Alex       |2, 3, 4, 5, 6      |Enclosure 4          |Enclosures 2, 6|\r\n|Polly      |3, 4, 5, 6, 7      |Enclosure 6          |Enclosure 4    |\r\n|Chaitanya  |6, 7, 8, 9, 10     |Enclosure 9          |Enclosures 6, 8|\r\n|Hwan       |8, 9, 10, 11, 12   |Enclosure 9          |Enclosure 12   |\r\n|Ka-Shu     |12, 13, 14, 1, 2   |Enclosures 12, 13, 2 |-              |\r\n-----------------------------------------------------------------------",
      "expected_output": "E F L X1 X2 ... XF Y1 Y2 ... YL;",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "yorrvve\nyjpvbk o sbf l p mg\n1 6 10 5 3 2 6 1\neo agp ybqym oxn m 2 mizmprh 6 ucdklwddb qqq poax\n3 10 1 10 2 9 6\ntnjjsv qvh ff g w 1 lzncfxvpx 10 nwylrayuqx 5 l\n2 2 10 2 8 10 2 2\njkllbjbj weoj yb ous ee 9 yjyu 4 zu sl v\n3 6 1 7 3 2 3\nds c qlgi rlg uxj 4 ovkmuv 10 hsruq 10 n\n9 1 1 2 2 3 1 1\nlstt iluq qnf xauf dcxt 7 vqquivzfiay kzve ceq 4 cbub fq\nnt",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "whxsybhutckzseujj\nvq jgkxpdaky osmvfeh yyg romkbp w\n2 10 10 1 9 5 10 1\npj i tccnk fefm jtkqr 6 mktxu 8 tcrhioayut e mx\n10 10 8 8 4 3 4\ntrw rqcw tqytn ur azske 2 tk 10 fooma 4 ggo\n2 1 4 1 2 6 4 3\neu gjhu dh zcq lqavq 7 udipiufp 8 v rzhe pa\n2 2 5 1 4 9 6\nmde tnqlg ml ws pry 6 qlpplhyy 2 uccdmj 3 nzkfg\n1 7 9 1 7 6 6 4\nsarxnky f doztk njwcm wgyop 4 iiy acala e 8 v dofd\nsheetkyxod",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "xstvswythdvmmggviout\ny wcoldx pvsff khjsyg p ag\n2 1 7 7 4 8 1 2\nt qers bieq pm re 1 v 2 hikhg phl vzk\n9 5 5 3 7 1 6\nrwsz omrb amzz cmecg ap 10 ynfg 7 gxerchcdep 6 m\n7 6 7 8 2 2 8 3\nji ubusu ufktn mucg ey 2 gsluymc 10 ygxqzgugvcm ytuj li\n5 8 5 7 6 1 3\nzhlxr s mp xt txo 7 exbxz 8 hej 4 p\n5 9 8 9 10 7 7 4\nausmj yq weqf hm rhm 5 zzpuxuhxv yljb cz 2 j ie\ndh",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "brf\nwy fgtqckfent fv bghg xdkw lmo\n49 17 37 26 31 32 56 71\njdg tuef p ok y 39 qcbrjeqmhb 74 ldmulxiop wrqk v\n2 64 40 18 93 4 77\npgkca drxs fisu pvhfk gs 85 y 28 lwrokxbv 1 itow\n44 17 68 23 14 65 1 40\nmml ppmfv xjvw wrnjw onz 3 dpqcii 94 rxisa hqe npbk\n62 35 30 15 27 85 100\nms t rrdkg sbpn dkn 81 ohueqtwck 34 ochlimt 43 vr\n40 44 3 52 36 18 82 63\nrly gu nx lg dfx 49 tgsupxg af dvq 63 jynb iojhx\nfrfwuermnkkvmpwfzg",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "diukn\nal uhqqq by r sxra euym\n35 71 49 42 99 66 94 20\nw tb g ftd rn 25 mqzur 52 kom znkjg ayv\n51 32 50 77 23 3 89\ndljutm v zakzn m e 52 ip 79 vu 32 hrvr\n65 44 25 49 37 92 13 6\njftnq i tkk vekd rpb 68 mjjdg 56 c cr xmbau\n48 28 37 12 97 28 43\nhs q kkvw ew pkg 15 xwakyv 49 qmkkks 10 e\n25 50 95 6 16 11 88 40\nhznxhy d z x blgw 94 hwzpubeq w jiw 30 qj tkl\nw",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "nocduelutfjcidaz\nip yzflng jynlu cglsup llpwh hcd\n83 4 38 28 10 64 49 66\nm tlg duwl qri ioklf 59 ycwlqcwe 56 ptbt zyxk box\n81 63 42 49 78 8 97\nemugu ysiwu fnuu xyq hne 89 k 72 mvsnx 98 jkik\n61 77 49 45 77 1 90 99\nk rk c nexl fmtu 53 wfdlhcvw 48 ghxhcfdlfe hr f\n65 50 92 38 22 67 44\ngr eo gsfx tvz pizfv 50 gsuldk 16 aprnplnc 20 czqq\n1 37 38 17 98 65 38 73\nwt ziuj f zjhol vdqiw 46 rxk nuor m 32 bu e\nsv",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "ygkrhoashc\nsc eda dwf vggxa fehrs c\n68 42 19 81 62 71 14 57\nxy km c ler c 16 vvnn 15 afpu o m\n33 11 75 69 21 5 50\nwgbtsc isajn vdet pypbe gs 69 lpopae 64 xhmqzpkuun 73 d\n85 18 33 84 68 45 2 92\ndigc ygx ydgyy k w 16 bpsexp 72 byypa tmo ivpq\n2 4 7 19 68 43 32\nxw ro haupk gb enakb 49 jq 67 xmifyitdnz 66 jaibj\n58 7 44 11 46 42 43 27\nwksbtj us fmjx jdz qvc 27 bqyh ozym rb 13 ty dqnp\nwt",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "acpjslxvj\nkdkxms j y ke uzvz rjw\n21 2 44 12 45 97 90 32\nmexi f oiljr onhmi na 9 s 91 gmohezg gyiai wf\n85 83 63 67 86 98 44\nbfa gaei pi pbn yf 72 zpghubspw 73 kejm 79 cit\n6 67 69 83 81 98 79 94\nu oshty v fas gxc 58 byhgepwbe 93 seuwoqivph xkeoj vv\n83 39 5 73 71 47 62\nf e rzsn kabft yu 55 nmamsat 88 iivzbpkgul 58 m\n51 27 61 99 70 68 80 3\ndpinugy a inu dkd omrvg 44 ryryi tzm afm 35 jsxi xroan\nrnyrmehna",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "nixclfqqs\ncckir qqkc syaq ih ohgvoo fh\n3882 4862 3291 580 4341 3926 1125 2062\nqur zwzi mmyrt vinxh jmt 2853 quphmn 4412 dy ar m\n4102 1088 1152 874 1648 3757 4482\na tvczv vlqv azlf sev 1669 ds 4516 opbpceivys 1718 uekbn\n4234 1006 2506 4868 2083 3428 1240 3816\neb pqzk prje c xb 4025 fablxm 2750 zipw ewtkz ipf\n4582 4765 1667 3583 1778 3950 3658\nyy yqk b lg sukb 1098 eye 3359 n 1944 isr\n3402 1706 2914 4667 4114 3681 4701 3939\nm uub g h roop 1612 btp bds pga 2130 ositk fluik\ndn",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "rat\nbdjsjq inqlrq notud rjyak b oyu\n1983 4895 4686 3136 2561 4518 3627 4441\nitxi ukfdz w ijqz r 4076 af 1484 aonlq xpzl tig\n4419 1008 2658 3033 2392 2613 3731\nwor sq apm zbx ckdqq 1122 guynib 955 uw 3701 vg\n4220 770 4492 2926 3559 4935 3079 4110\nysxs cd zozwf hj j 3613 neq 2689 cfb qihth erhy\n3533 850 3135 3262 3173 579 3083\noqae vtc y rjx iai 1375 tnrqvyqrlt 4318 hlqsbktu 2669 chrk\n2890 3334 2128 1373 3342 1315 3573 4048\neisrirn bmvb goz r xk 1806 gr bc sfqs 2843 ruc o\nty",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "uvxhjwhubvgi\ntuq kvignei pjey tdvq tx offg\n3359 3801 3676 563 4663 4960 3424 719\nrcgae vjhdy l rpli gyyri 1346 zd 2653 svhktuzsqc b gbgi\n1659 3587 671 2234 1041 3269 1177\nyrb sxk kam rgpi xrfuj 1468 qprlvlw 3441 xbbi 2504 rfu\n3533 4160 3265 2103 1165 2991 2282 3697\nfmmtbpyb fx gjuvu ue pjp 4013 zjcvxkx 1809 z qlxkf hvgt\n1486 4322 2494 2834 3148 1341 2259\ngqteq x dlyl bav swk 4000 pskzs 4918 zwri 2912 mwp\n3004 1876 4289 3417 4382 2621 1142 2829\nsegdzs btt wgzp cg eqn 3528 uqbuvqutdeb jvk pi 2538 pzxih qtxrn\nkpcmeg",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "vgmteaardnyerjpbpkg\nvyfrl p pq hgdp yq lfuxl\n3214 3970 4464 2440 808 1808 4238 4085\nv nb cbjx k ua 2986 rdpaktpk 3003 pvlzs cvuz w\n1589 4833 1789 3806 3685 2970 4044\ngzfg ebim jtst dkp jmf 1223 xfprd 3975 jbfssprdi 604 nhdg\n2185 4838 4780 1058 3183 2169 1601 4227\nandxs yk o y g 3163 bnc 1994 wfrfra cxe ydk\n3219 3406 3187 2883 1305 1561 3401\nyw ixtsc u na ndcv 3185 sbkzt 2682 cnzi 3199 bw\n744 2712 4103 3225 904 3360 3127 1670\ndwhuzt m hw uo dnc 854 sjnqpqcrk gtn qh 760 s ca\nasipr",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "jrwfdxcdz\nbrk llw lswmw tmx ymw ymx\n3430 2933 1607 1121 4435 3891 937 3630\njg sbqcq i paa hrh 4423 gczkkfhvh 4516 mv be q\n2307 2206 4138 4691 2167 3041 4851\nxcpeg degfc iv fal yliz 1970 wgptwijjd 1574 jgrpbjol 1919 pwoxx\n4548 1986 2636 3719 4743 932 3894 4266\novgglno lbs vqt cisxu w 4472 ycjn 3393 v sj jy\n3014 3845 780 2977 3651 3191 4591\ndyp uz qvrfw bmnbs w 3602 fcjvyk 2743 r 3705 uay\n3479 2852 655 3062 2692 4000 2985 3916\ncbyicd bpi dl f eh 2544 jq u zf 4279 zrqar largo\nr",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "k\nkxhz y bt pxk ih ogsop\n3846 2035 1323 2656 2802 3760 1392 2013\nzunli lyea rpkbx wrl b 4437 y 2776 ybvhry zpl xgwzb\n4096 2145 509 2486 4481 2948 3779\nzmtez b cs f vetvz 4879 lntn 4475 vbhrpeuv 4736 ru\n3890 2759 4750 3124 4394 4336 939 2169\ncabcba fbzg ju q hzm 1494 ovp 4350 zpmsjhmtc swvdd vhnu\n3930 514 4001 972 824 2368 4563\nch oao hdqpm dqrz c 3406 k 4523 skxvz 3605 xuqd\n1319 4862 3047 3792 3279 2703 2147 2758\ndfhod lrwvz d khxs ewegs 4616 hpphh nhlse v 2136 fh scyj\nkycqitx",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "kz\nbres ws fmyuz n grd gp\n3137 3907 3458 2067 4188 1112 1922 1752\na yfv m eevne t 4163 qoezjp 3055 lnuii urr obg\n4189 580 4093 1614 748 3839 2418\nc gio srk ejhmt e 4622 uoblvqjxo 2898 hvdqih 3623 fherx\n3063 3439 4613 506 1210 2493 4485 2620\nypsyubcor g f a ihflh 2952 nvfpn 1264 zrwebfca zrnqt gx\n3369 3857 3108 1410 4153 1429 2315\nuepm n lhtq se kwah 4953 bubbljzoi 3460 pcajfhozd 4636 qjgc\n1797 811 1250 4848 1351 3985 1275 508\neof pmrnr bpi qg m 4511 shchc e xgu 4543 fs hp\nfsngavygopdsdmnqg",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "wmvicryfs\nu vxxxvcb po ykm fz acyy\n10000 10000 10000 10000 10000 10000 10000 10000\nxb p qay m vzl 10000 tg 10000 k zqz i\n10000 10000 10000 10000 10000 10000 10000\nja f dsif lj asmrk 10000 dgdxts 10000 bwmd 10000 qtp\n10000 10000 10000 10000 10000 10000 10000 10000\nbszss hprs kc h o 10000 wme 10000 j qiep lgmki\n10000 10000 10000 10000 10000 10000 10000\nzfv xyrqa o qfddg tgihz 10000 vxrgr 10000 b 10000 i\n10000 10000 10000 10000 10000 10000 10000 10000\nvbo pqzg sdenj w e 10000 zrdshkiumt q ib 10000 pcmqx pfk\nwiuxdaekea",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "cispjjtalgiwavwf\nhpcbo yihepqhebvc hfdq lfqhhb okusaq umcwg\n10000 10000 10000 10000 10000 10000 10000 10000\nrrm ui uhv rlb q 10000 juxicpey 10000 m ofc kp\n10000 10000 10000 10000 10000 10000 10000\nakjuvi iadn vojiy bhtw bfre 10000 oy 10000 yxd 10000 ehw\n10000 10000 10000 10000 10000 10000 10000 10000\nq fm oi trach fmb 10000 il 10000 xuih uk vnz\n10000 10000 10000 10000 10000 10000 10000\nbufng f cxpo ktiwh dj 10000 wpihyursvk 10000 goacspku 10000 pqvj\n10000 10000 10000 10000 10000 10000 10000 10000\nslbmq hx vvk ujo llhsu 10000 ebcza bz ubkb 10000 o psi\nfwpqfcvfhranohl",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "ccgyt\nfbkya gqromxsqx maake gzvo trshji agp\n10000 1 2 10000 9999 9999 10000 1\nxdza mnd cmn g rmcwb 9999 kw 1 ncyi giify x\n1 9999 10000 10000 1 9999 2\nyyz xjgm hngp difxh nkjr 10000 vwebzxmuy 1 rta 1 n\n2 2 1 2 10000 9999 2 1\nw pn hi os g 1 lymbkbu 1 wdwyxva jwuit kzxj\n1 1 2 9999 1 9999 9999\nhgm smkm svg np ltffa 2 amls 2 cruck 2 rjljp\n1 2 9999 10000 10000 2 1 10000\ngrmvkt scxfi pyfi gq rxxsd 2 qi nmh vndr 10000 eo ydgp\ndwqtyavqyvwqfmyygx",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "svbhjztbv\nktgy zqofoiuzsn mahf unpxy jnwp jrkd\n10000 9999 10000 9999 2 9999 10000 1\nqeauz oucs lbh g w 10000 mccg 2 l izrm u\n9999 1 10000 10000 2 9999 2\nft wfdhl dc iqsrs fp 10000 vfja 2 tdazawl 10000 erj\n2 2 2 2 10000 10000 10000 9999\nkuwkj b rezwt eg m 9999 uhlcujhpvc 10000 ivsrlmkxm vp u\n9999 1 9999 10000 2 10000 9999\nx t jzysz z otei 1 yop 2 ypdynhdcix 9999 uhv\n10000 10000 9999 1 10000 1 10000 9999\nnldwvg dpzxl xodw d zqa 9999 ijctghovmz bzke mshn 2 ytslg f\naa",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:49",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:36:54"
}
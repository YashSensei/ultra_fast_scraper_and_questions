{
  "problem_code": "problems",
  "title": "Rectangles in a Matrix",
  "tags": [],
  "text": "In a matrix with n rows and m columns, (i, j) is the cell in i-th row and j-th column (0 ≤ i < n, 0 ≤ j < m). A rectangle (r0, r1, c0, c1) in a matrix is the set of cells (i, j) where r0 ≤ i < r1 and c0 ≤ j < c1. (0 ≤ r0 < r1 ≤ n, 0 ≤ c0 < c1 ≤ m). Two rectangles are called independent if the intersection of their cell set is empty.Given n, m, k, find the number of ways to choose k independent rectangles from a n×m matrix. The order of these k rectangles doesn't matter, see sample for further clarification.InputOne line contains three integers n, m, k (1 ≤ n, m ≤ 1000, 1 ≤ k ≤ 6).OutputFor each test case, output the number of ways, modulo 109+7.ExampleInput:2 2 4\r\n10 10 1Output:1\r\n3025ExplanationFirst case: You have to find the number of ways of choosing 4 independent rectangles from a 2×2 matrix.\r\nThe only way to do this is to choose each cell as a separate rectangle.Constraints(1 ≤ n, m ≤ 1000, 1 ≤ k ≤ 6).\r\nTotal number of test cases is around 150. Not all the test cases are included.",
  "sample_input": "Input:2 2 4\r\n10 10 1Output:1\r\n3025",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/RECTMAT",
  "scraped_at": "2025-08-17 00:33:38",
  "test_cases": [
    {
      "input": "2 2 4\r\n10 10 1",
      "expected_output": "1\r\n3025",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2 9 1\n10 7 7",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "1 5 2\n5 1 1",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "3 4 2\n1 8 3",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "77 83 18\n68 50 17",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "96 47 75\n25 58 10",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "64 1 34\n62 32 38",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "63 83 97\n52 18 68",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "76 61 12\n96 36 96",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "456 423 79\n94 417 54",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "228 349 224\n387 53 383",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "421 84 365\n382 417 390",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "124 133 224\n118 108 317",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "165 286 385\n238 116 383",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "298 422 132\n81 255 298",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "441 474 152\n355 390 355",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000\n1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000\n1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 999 2\n999 999 1000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 2 1\n1 2 1000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:49",
  "total_test_cases": 20
}
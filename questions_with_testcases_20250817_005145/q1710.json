{
  "problem_code": "problems",
  "title": "Impossible Boss",
  "tags": [],
  "text": "Vaibhav Sir and Saikat Sir, after completing their graduation, got a job together at a store.Their boss at the store was Sidharth Sir, who was very strict and did not want anyone to have fun at the job. He gave Vaibhav and Saikat sir a very boring job of stacking columns of boxes in a row of size N.To make it a little interesting, both of them decided that whenever they need to add more boxes, they will choose st and en, such that 1 ≤ st ≤ en ≤ N, and place 1 box in column st, 2 boxes in column st+1 ... and (en - st + 1) boxes in column en.When Sidharth sir saw this, he decided to have some fun of his own, and asked them to count the number of boxes in all columns from st to en, and tell him the result. Now Vaibhav and Saikat sir have come to you for help to answer the queries of their boss, as they do not want to lose their jobs.InputThe first line contains N, the number of columns and Q, the number of queries.The next Q lines can be of the following form –0 st en, meaning Vaibhav and Saikat sir add boxes to the columns from st to en as described above.1 st en, meaning Sidharth sir asks them to count the number of boxes in all columns from st to en.OutputFor all queries of type 2, output a line containing the answer to the query.ExampleInput:5 60 2 41 1 50 1 50 3 51 1 51 3 5Output:62723Constraints1 ≤ N, Q ≤ 100000",
  "sample_input": "Input:5 60 2 41 1 50 1 50 3 51 1 51 3 5Output:62723",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/DCEPC11I",
  "scraped_at": "2025-08-17 00:33:40",
  "test_cases": [
    {
      "input": "5 60 2 41 1 50 1 50 3 51 1 51 3 5",
      "expected_output": "62723",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "8 7 4 8 5 9 8 9 10 1 4 8 2 10",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "10 4 9 6 6 8 3 1 9 2 1 7 6 1",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "7 10 10 3 7 8 7 1 4 4 6 2 7 9",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "21 100 34 80 42 95 94 58 61 2 66 83 86 34",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "34 13 6 32 30 63 35 50 46 45 33 22 91 8",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "83 57 98 97 49 26 90 20 19 78 71 34 43 84",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "86 53 1 34 58 42 53 71 17 29 51 14 49 71",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "25 23 79 96 84 84 72 4 9 47 2 77 79 64",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "311 313 106 307 411 383 207 451 181 102 190 101 438 302",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "299 173 291 214 255 123 188 217 69 474 341 277 340 62",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "455 260 353 470 460 379 273 128 462 281 397 184 53 97",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "446 494 497 442 304 235 267 408 90 89 409 387 461 377",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "480 333 167 191 311 284 145 87 154 464 382 427 265 328",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "350 251 310 93 377 356 465 394 308 416 158 124 187 360",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "114 405 426 124 112 263 169 243 263 71 231 397 274 468",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 999 1 2 1000 999 1000 999 1 1000 1000 1 1000 999",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "999 2 999 2 2 1 2 999 2 2 1 2 1 999",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:50",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:12"
}
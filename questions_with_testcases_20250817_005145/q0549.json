{
  "problem_code": "problems",
  "title": "Bread Tree",
  "tags": [],
  "text": "EnglishVietnameseBreadtree is a kind of tree that produces bread. At its first year, a breadtree is only a node with a bread of weight 0 on this node which is also called zeronode. Every year after that, the weight of bread on each node of the tree will increase by 1, and another branch with a zeronode will grow at the end of each node. However, there is a limit of branches on each node. That is, when the number of branches of a node reaches the limit, there won't be any more branches, but the weight of its bread will still increase. What's more, a breadtree remains unchanged when the total weight of bread is larger than 1234567890.InputThere are two integers N and K on each line. N is a positive integer fit in signed 32-bit integer. K is a non-negative integer fit in signed 32-bit integer. An N equals to 0 signals the end of input, which should not be processed.OutputOutput the total weight of bread on a breadtree with branches limit K in the N-th year in a line for each case.ExampleInput:10000 0\n101 1\n10 2\n1221 128\n0 0Output:9999\n5050\n221\n2147483647",
  "sample_input": "Input:10000 0\n101 1\n10 2\n1221 128\n0 0Output:9999\n5050\n221\n2147483647",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/BRTREE",
  "scraped_at": "2025-08-17 00:33:19",
  "test_cases": [
    {
      "input": "10000 0\n101 1\n10 2\n1221 128\n0 0",
      "expected_output": "9999\n5050\n221\n2147483647",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2 8\n4 6\n8 8\n3 9\n8 2",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "5 3\n9 8\n7 5\n10 8\n2 3",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "5 10\n6 3\n1 4\n7 3\n10 5",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "69 9\n72 62\n63 43\n35 58\n63 65",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "61 34\n3 18\n11 74\n68 98\n98 23",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "50 62\n22 9\n78 66\n52 39\n93 75",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "6 82\n32 35\n15 1\n53 87\n67 41",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "51 28\n100 9\n45 57\n13 18\n33 29",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "324 296\n225 106\n478 445\n212 465\n299 395",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "89 473\n452 435\n341 122\n380 123\n151 240",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "263 259\n200 153\n74 237\n116 231\n277 495",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "447 209\n412 265\n232 315\n359 67\n406 86",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "110 460\n267 157\n481 367\n142 184\n248 312",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "92 194\n141 293\n182 143\n297 134\n121 66",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "126 83\n364 205\n349 371\n232 111\n410 436",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 2\n999 2\n1000 999\n2 999\n1 1000",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "999 999\n1 999\n1000 2\n2 1000\n1 1000",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:47",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:36:36"
}
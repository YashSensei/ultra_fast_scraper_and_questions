{
  "problem_code": "problems",
  "title": "Binary Search Tree",
  "tags": [],
  "text": "A binary search tree is a tree in which every node has at most two children nodes (a left and a right child). Each node has an integer written inside it. If the number X is written inside a node, then the numbers in its left subtree are less than X and the numbers in its right subtree are greater than X.You will be given a sequence of integers between 1 and N (inclusive) such that each number appears in the sequence exactly once. You are to create a binary search tree from the sequence, putting the first number in the root node and inserting every other number in order. In other words, run insert (X, root) for every other number:insert (number X, node N)\r\n          increase the counter C by 1\r\n          if X is less than the number in node N\r\n                   if N has no left child\r\n                           create a new node with the number X and set it to be the left child of node N\r\n                   else\r\n                           insert (X, left child of node N)\r\n          else (X is greater than the number in node N)\r\n                   if N has no right child\r\n                           create a new node with the number X and set it to be the right child of node N\r\n                   else\r\n                           insert (X, right child of node N)Write a program that calculates the value of the counter C after every number is inserted. The counter is initially 0.InputThe first line contains the integer N (1 ≤ N ≤ 300 000), the length of the sequence.The remaining N lines contain the numbers in the sequence, integers in the interval [1, N]. The numbers will be distinct.OutputOutput N integers, each on its own line, the values of the counter C after each number is inserted into the tree.ExampleInput:8\r\n3\r\n5\r\n1\r\n6\r\n8\r\n7\r\n2\r\n4Output:0\r\n1\r\n2\r\n4\r\n7\r\n11\r\n13\r\n15Warning: large input/output data.Warning: A naive algorithm may not run in time; do not simply implement the above algorithm.Note: The test data for this problem consist of the official test cases from the contest, as well some cases of my own.",
  "sample_input": "insert (number X, node N)\r\n          increase the counter C by 1\r\n          if X is less than the number in node N\r\n                   if N has no left child\r\n                           create a new node with the number X and set it to be the left child of node N\r\n                   else\r\n                           insert (X, left child of node N)\r\n          else (X is greater than the number in node N)\r\n                   if N has no right child\r\n                           create a new node with the number X and set it to be the right child of node N\r\n                   else\r\n                           insert (X, right child of node N)",
  "sample_output": "Input:8\r\n3\r\n5\r\n1\r\n6\r\n8\r\n7\r\n2\r\n4Output:0\r\n1\r\n2\r\n4\r\n7\r\n11\r\n13\r\n15",
  "link": "https://www.spoj.com/problems/BST",
  "scraped_at": "2025-08-17 00:33:06",
  "test_cases": [
    {
      "input": "insert (number X, node N)\r\n          increase the counter C by 1\r\n          if X is less than the number in node N\r\n                   if N has no left child\r\n                           create a new node with the number X and set it to be the left child of node N\r\n                   else\r\n                           insert (X, left child of node N)\r\n          else (X is greater than the number in node N)\r\n                   if N has no right child\r\n                           create a new node with the number X and set it to be the right child of node N\r\n                   else\r\n                           insert (X, right child of node N)",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "8\r\n3\r\n5\r\n1\r\n6\r\n8\r\n7\r\n2\r\n4",
      "expected_output": "0\r\n1\r\n2\r\n4\r\n7\r\n11\r\n13\r\n15",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "ob jfy wlm qvcd qq\n3\nqwgby kkmob eih ibo wkov 2\naqbr aeuy ezxk jwdo fwsmb xbq cvmpr cvccq ewqkq ceqb\nsfnhe uzo uo zq dlfd nmgv\nhjpdno p gvyzu foq tro obr zlobhm ye ow vd k q jpol tiizb qsyec ir sfyj hopak fkql\nz\nwrtfd egp dajc igggl sho qdsiu lnn\nxm hyl aq zdn hfxd powe cxxi vepje cqaz f\nytx h eqde haamo djpka dezz\ndhrf cwnvn ht fnu nmr cxb udodk wgu mbain rihx ctcu jv k jjc ffy ubo y e nw\nc\npghu fz oz y hn alvc loc",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "grjljt rdrdr i sce lmp\n6\ne afsh tzb yjzby cmgqn 10\njrfn kul z ee mbg qlktn eus qyjp lwaan rn\nk hzlb yk c kmo cmzqp\nxx nmqf luhsu db rulps knmte j kebs rgpnm rja w lncx fsgfe e b mcqtg ogf mutxv qwn\nmrs\nmb mrpp dvrzm emvr ogyej y w\nf ybr rnkdo kbpbxy cn j fufo wzn x nwogq\nchp amj bdlhw lp k bmhnh\noyw szfw kxa mmron as edli rrpj hbx rqqej sv qhkm ddndk nrf oxh v fmuzj iw bjaf esgcn\nxtovsb\nm ndaod nt g jhu z mup",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "ayo pg y brtpy kd\n9\nih szy yr paw rrteu 6\nust g ujc djaq pk fanf rol m aeaf xnt\ngq t wxh y n giir\nkcgscu k sg gyx wxh nv hi egol rzi kujyp fmemt ura ylw sby nle lq janzu d qznoz\njiz\npkqntf x zhc mte qfbbr xou lgh\nwu fpjz erx c bf yjun lc okofj iwdut xxn\nn psg pk zhm uc b\nr hxr o zgqy jmlu l wkw wtje g nrgx rreht b hgpq dy y muxol y mkqok h\nseff\ne fokt kds k svgbn ecrwx hzrql",
      "expected_output": "To be computed",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "rnmd s xredy zy zv\n8\nrnreat ezgx cgbtvr jbst gnw 88\neiqsd z rqf g k h htuimq tuml incb xdn\nmb ev w thzu li q\nkg cs qdka oq en tikxh rwovm ngpj vnr cmax feoky g p jme las nb iwa lctc jb\naqau\nasx mqqjm a yp ztrhu s bwxys\ng npoe urn jrhhfn ecib ksy pczehz lhrj vezm zpxo\nyhym lsjk hfv zuno litv vb\nxwj tu rdi km h diy ccqk qvn uz j uhpfa scwnp us kstg hsl wpgxl t mmktx kw\nfvpotly\nf irqi opu ejz vyj fth oaaq",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "wrfguh lln bve em cf\n99\ndyv jh olik enax bw 6\nib okz mlzw tj ycge x ebhclf ytao tnf smpf\nryk kh dw rlk fcaq tzph\nzcd zcl qtl oyk vmfa f ybs p lqys ouxco nudt vys gf lhwxt opcay a h qppwr cc\nz\nlsjt ypjso l op eueqf kyrq hc\neq oxz wnlqq ywgi aby fq u pyb jubwy wf\nor g lxe m bedih eyw\nlquiia esmzc wgj yj sjfxm l ntmk xonwz cu ip oiy lgy akoko d w e ajinq rca odub\nrptmzw\nsr z wlzmz x yor vmzad jl",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "rwjgg bzxy kai ap spyat\n3\ncanq sdh qx t q 9\nbzecn k kksz aa x zo phz di m th\nproyh xxwmw b v lfde x\nmbts ao x jhdxb xk yayjw sk oayj d q rx gf hy zn hrxa rtzco z nfax vu\nziaoggw\nfg kw jveo s a vi elynu\nl f le wofwz k adsj axxdu vbcc mz yus\nxg fhppd am etv fcwjk iqf\nyn dvt qvoag vrhf gi djz daeqgv q kdlxv ch lfqq kw aubp uvkkw pi xlqy fbqu yi lhhiu\nmnbtiy\nmdtxiv nw co zn rzvk wk ytro",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "kfzri tz ze qgw gsr\n49\nq orc elu kwx ftml 47\nttma bdqa gxzbw mmp c l ocwmjb qxkng jj wl\ngq bft ctz jlhgu nkphr u\nef lpxa w ckef baefs kczs kx o xja rsmu sq zr bd iztzv w jkb gskp oewuy mwirk\nqr\nu j xio c ezdge ppgql tatk\ny gpap ns fu swfxd aewoe divhpd evp gql isg\ng dopt tgi iv toa pyokb\nxomsq pobkr uzyxu n sze q hst pjafq ell nk jjb bql so r ukqvq c tjb qq juzb\nqqoftv\nvtsd au xam tacd hel ut qrrdf",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "rnu h f dnbsl j\n29\njeivssz tngy w w z 37\nkqt xhw m gnvn tbsll mdv bpdh yahjl m dyevv\nu g hefsk l qcnwq rz\nc mz gaq fle be pogj dvxyaf p fs npv b g rsm h g vk uusz e t\nb\nn i z w eous gswqa pvr\nsjto aqrbv tgil tkng kpi f yk jr hvi eofnj\njyx zyuu czokq wapnh ecotj p\nxz cegmw gl ht a fo bf qxyr snp m orfym dyssw jad scqpi mi q zwf w r\nwa\nayuoct h rlim r fb r abzw",
      "expected_output": "To be computed",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "v zx xarm wqqqd gitf\n54594\ntm m jynqp y sk 54785\nz zhexi x o yx dclsu end f qmfhf flrcb\ngzz fuwr hipz uc xtfz b\nvxrly q bu bv qsrx vfk lrmndx rxhv y og fibn ahc r ghmm kztt irkd qrf ki np\neithpv\ngadwr i h smzdd ln kc mrli\nkza avtjg atvsm smwjjug sr yq enbc rpvis ze f\nzlpmv o kirou e ukkz a\ncd tysd c kw ilobs uwcs ytpg bgkr s cwd tl zllgq h iiu pq czlg slyz tau ksqf\nohxccxk\noie wx kd nsmnr livj hjbf yma",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "mluttm pl dljuj dmmpn hooe\n49002\nzbschsvv z fjkp cg ehile 93182\nzk tenth znfg dgtp uk kf sybks j zl ofp\nvdt ccw dgh hivm c vh\nfnbrsz i ahq xip k rz mrr sdvp meq kjxk ept f rik m nym swigz ytp j vfpmo\nerbdagj\nujwnsh myte vvj lyphd hxl nrhor siwu\nmpw dxivj pp ctix a vfwa pr ha dqxcz pmvl\nbf pxrta m csnhh k gu\nylc ajk rjv sdsfu a vg cqlhuu p aqg gi vmrd fjbmd a bpf vd bei pw o qyxlw\ndpbjgjab\nnzwa ka jqu tq anp xp xw",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "cl xg ei fl ofq\n41714\nl vsdx i kojia qiq 85315\nmfs djhoc f z qoasg qi a i bzhxq kciwg\nt rv xc fyyl l gfjvs\no t vlyo yhva xl qzor axfgp vxd khk ij resgr ovwu rxbpq cfjw mxivi lik b on bj\nmx\nvvhlf y eu ny uqqly aizr k\nyivqq zltf ao yw q a jdcpl xx axa ka\nptzmz e yhuh ald ahp wkidm\nalsn c ydp laqv q n df fell plzk frmth mtayk d yk hra t wc ka vfrty pqdun\nqmwcdwz\nx cpm qm yil bspea lm zdkrn",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "aa cblsx bulpd vfayn cu\n15779\niwwaofci sblov ebswcl i ahl 51378\nkv xjtq tfvu mpbs uuokg qf o ck rnue vwbp\nk xte woxj sjcfu gq xcc\nt p fge uscc jud sr sthehj zlgon ttq u j mo ovch hcdzp rcm cdy zcmw v srbh\nugljz\nqj pfee b ih yqvz kkbnu huujw\nqzm pckce tivkd otj tl ekq tneka ckneg ognc jexmp\ner vaajx tf wyu ehwh svvkh\ni ozm cgb u yzl lx rkqrd jyndt xyoxz wld e tglb zefeg tlj nimn zehd tilce nuthm t\nb\nfsx yuixq xipb wtf hx xwmc ocvy",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "iyfnpi aplewzs ba zdz n\n54209\njfqp fkrdn jp bk pb 38537\nts le gnxh sooxu bn jm xfmb e hrc ct\nhqknq g sdw bkt tjt a\nfjfi q uu s c pnbcw igsluw fjq x wvr u fuze ebdp kt t t tocmn mqg d\ncvnpcwf\ntt ljj wos ignay wghc wtgvy fewsb\nwzx iiyv tje ncxqpzd icxpw knj pj ngkgn imldk qz\nwf rfimw rfru tlk tou pfrbg\nffocjc b b ymllu yqdv jum qxxp sik fqot xjn mcwrx m kckr vf w gsxj kl k qvlcy\ngmvnwb\ntf nx ghj qbvdb dcvaf dztvv vekt",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "tm wmomcds xd q qo\n68052\nms ek jxxizt icndi bfbp 43939\nwazl wavw dzevn sjqc ijuvo chndq fc qnfd h idef\niixa eee jspjv ygyc wydvy p\nodms ckk vdrxx ltecn ht zjix tkqd h fj ug ikg lrxjv kjwuf h f s gk mafdu nnwu\nlbgaw\ngsa p l t edsqm nex exh\ni rctg eint u t nzc hl nw hb muwrv\nbyv pehrj ltter gnxe tatoo lljga\ncikcr u ljne hifv mkqqh zzc dl i daco udcy ngaul vffb z dsl zpw vq s osc bdtw\ngy\nfmn vla w ypcdo xsamc ywytk c",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "lnlipv wbngrd vngk rsjcf w\n141732\nmysk ye pqv pd i 145696\nmfgtj lwoc oyi hq q z dto e jirbq qzf\nyzscb mpjq nq gtdc aykfv kujn\nhepfrx kjz r hewn doc romz enib xqygw eecx wz d iqt gwl x hv xp n oiie sfk\nczotfkg\nvrva xy ehzuv rby dvzhi d ljlnj\nh j p klck k qgdto eidme lwvu wyc l\ngre fzo sot nyc yxku m\np ou o dyqx kvu tyig sutx lcw pa oesz uiklx j cg xlgu zjee agfsi efxzr zwpg junxk\nkfd\nn bhvw soznh vguks sy rwlds fbflb",
      "expected_output": "To be computed",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "zw zv lxji pugi ahvfm\n300000\nz mt bhauu p vk 300000\nqy vayz bh rb bjgo plox ughm bze zmab t\ni ldfw epcm c w lodhx\nx r lnzg cbezw xlcio vycxh xw gldg gel np why ih jbw yi fcd afu faewe uepnu wozjz\nekq\nvddw qdkl lba mocu mjm lqkr yjs\nobhqd p qbwau bmismn gkrd gpckh hegc negjd qg j\nrr d cpl aej hcxwp yhjs\nxujlq hfjyt ejl gfhl gsfez x euuslg eb uhisr pdoli a g eag k lrlpg g si lgu kat\nnwkb\nsnk bg eo bedt k yjn u",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "vwv tw yqys rooh ahbe\n300000\nakv pul hilp cxkz z 300000\neu gw jnda ztfe b rt ytgpm vpb a zn\nys xi klkz s ijeve senpi\ngjwwjc p j thp mwphk lg dpg gxtka vl nlrkf fasn bw yswvw lqanh bo h qmsyu ih dqrg\nggnrl\nksqirp rtzv kele bvbhb ct jbm ej\ne wtldy qnuu na qd w luob wdbru ct uxgaf\nqncz hmgqf pfiz wl sxzll jppy\nh iqkk h mgvpg wr hdnsz eo iaq t sfgux fk y qff q gutuj dslz w p gmdu\nqbnpnix\nhso bk n r hsb m zm",
      "expected_output": "To be computed",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "mwkj srdkduw oftxo my agrrn\n300000\nr ukt r kd jetf 2\nrbyq q t y t cim xhw dl ttks zjqum\nbgt ee ge my rsot vxfks\nc j y afrh o jkjzi rmu jvqde ckei sivne fjcx uq ztnje tjdaa nfup up n niru uoir\nlz\noi gh mh zcm tnark i a\nuqr aj tl nblgdt yq uookk zsn pb yloft t\num er oqxxr zk qj vjbjg\nf ouo p cx uxk rbsl epz j gjm p q gtry o yc xfzz zxmaw swda phg t\nwcayokeo\njyx ga q r wenq i t",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:47",
  "total_test_cases": 20
}
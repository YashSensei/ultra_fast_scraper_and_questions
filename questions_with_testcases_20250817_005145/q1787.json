{
  "problem_code": "problems",
  "title": "Sphere in a tetrahedron",
  "tags": [],
  "text": "Of course a Sphere Online Judge System is bound to have some tasks about spheres.\r\nSo here is one. Given the lengths of the edges of a tetrahedron\r\ncalculate the radius of a sphere inscribed in that tetrahedron\r\n(i.e. a sphere tangent to all the faces).InputNumber N of test cases in a single line. (N ≤ 30)\r\nEach of the next N lines\r\nconsists of 6 integer numbers -- the lengths of the edges of a tetrahedron\r\nseparated by single spaces. The edges are not longer than 1000 and\r\nfor the tetrahedron WXYZ, the order of the edges is: WX, WY, WZ, XY, XZ, YZ.OutputN lines, each consisting of a real number given with four digits decimal precision\r\nequal to the radius of a sphere inscribed in the given tetrahedron.ExampleInput:\r\n2\r\n1 1 1 1 1 1\r\n1000 999 998 5 5 6\r\n\r\nOutput:\r\n0.2041\r\n1.4189",
  "sample_input": "Input:\r\n2\r\n1 1 1 1 1 1\r\n1000 999 998 5 5 6\r\n\r\nOutput:\r\n0.2041\r\n1.4189",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/TETRA",
  "scraped_at": "2025-08-17 00:33:45",
  "test_cases": [
    {
      "input": "2\r\n1 1 1 1 1 1\r\n1000 999 998 5 5 6",
      "expected_output": "0.2041\r\n1.4189",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3\n10\n3\n2",
      "expected_output": "0\n0\n0",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "3\n8\n6\n6",
      "expected_output": "0\n0\n0",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "4\n6\n2\n6\n7",
      "expected_output": "0\n0\n0\n0",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "17\n74093352\n5493070\n8712978\n15033176\n73435283\n64342036\n40387456\n24624033\n51139035\n32785600\n24073618\n24007884\n24265541\n71123124\n34006574\n40077214\n77121663",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "8\n59415375\n50090054\n63152500\n48985573\n70390323\n81115366\n78330545\n1303932",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "16\n8220239\n11737333\n59552418\n42517349\n84111142\n96175029\n71883609\n3060015\n91083148\n687468\n79901610\n74114229\n13371339\n86124359\n59433090\n28482700",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "11\n89941667\n83449767\n27787304\n98010510\n97083345\n12004653\n18771617\n87576713\n34689408\n39495690\n39128496",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "16\n86195257\n10039416\n91886052\n25429096\n34185726\n39108650\n14572208\n97351486\n16023839\n17595793\n37539420\n68154441\n18568209\n7344399\n75451084\n62413499",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "20\n59345\n56821\n84417\n38355\n20355\n58602\n11195\n63171\n84881\n92027\n44801\n55578\n85230\n11122\n99661\n69366\n9501\n55240\n87256\n32501",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "28\n2566\n67271\n84272\n34888\n53195\n1852\n45654\n70269\n44826\n54835\n17733\n26620\n98151\n580\n22455\n46188\n84428\n85111\n74425\n68088\n72697\n3424\n97808\n58573\n14864\n22642\n65274\n67818",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "25\n61982\n83322\n96850\n42419\n38727\n68555\n12194\n67569\n7079\n84305\n76786\n74187\n61802\n84777\n4102\n48838\n9938\n21346\n41065\n73607\n2389\n26582\n7065\n32079\n15398",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "28\n40195\n21356\n11053\n81470\n82384\n37485\n929\n493\n10682\n35663\n59290\n24648\n98643\n64581\n43825\n57820\n91087\n57900\n25432\n25775\n93160\n49853\n40114\n42824\n6939\n32447\n20091\n7573",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "22\n10551\n17832\n41892\n44945\n67385\n87156\n59411\n25786\n8874\n34727\n24508\n80576\n63628\n62769\n82121\n73399\n61446\n28090\n76293\n56625\n7395\n40860",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "21\n9395\n41353\n55744\n7046\n82751\n11822\n56005\n25668\n81066\n55291\n40661\n71378\n75596\n75818\n82513\n38012\n66489\n90576\n19931\n89222\n35830",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "22\n15084\n11230\n74672\n75993\n21329\n14809\n18135\n81768\n75846\n36244\n94844\n69884\n37220\n14973\n98261\n8166\n73348\n28471\n78730\n22350\n13199\n78032",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "30\n65083648\n50660593\n85395911\n22975705\n75612608\n79488437\n36830409\n64676451\n56372169\n40952778\n72225532\n55772056\n25985746\n82937488\n62899217\n54217891\n51611156\n2320668\n57112655\n47403053\n98836540\n79326870\n26319366\n21531293\n24184822\n30517320\n65045842\n44541504\n39288180\n9127931",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "max_case_17",
      "description": "Maximum size array (N = 30)"
    },
    {
      "input": "30\n77823532\n61799350\n45910764\n5138994\n59652168\n95874713\n29589993\n17304266\n91315603\n40205989\n75180164\n24623632\n14973246\n92950987\n40638851\n67955541\n65260184\n79838181\n52452565\n20209608\n28852416\n75090588\n24388345\n82032346\n2423280\n27576184\n12466610\n51117082\n74020430\n61249268",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "max_case_18",
      "description": "Maximum size array (N = 30)"
    },
    {
      "input": "30\n100000000\n22643279\n1\n41179308\n69121185\n1\n100000000\n100000000\n40756398\n32029780\n1\n100000000\n5141784\n100000000\n100000000\n1\n100000000\n1\n100000000\n79253603\n100000000\n1\n100000000\n100000000\n100000000\n1\n1\n100000000\n1\n100000000",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "edge_case_19",
      "description": "Edge case array (N = 30)"
    },
    {
      "input": "1\n71506069",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Edge case array (N = 1)"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:51",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:15"
}
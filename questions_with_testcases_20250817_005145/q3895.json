{
  "problem_code": "problems",
  "title": "Christmas is coming",
  "tags": [],
  "text": "EnglishVietnameseChristmas will come next month, so DB is planning to give TN a wonderful gift.The city that DB and TN are living has n intersections. Each direct connections between 2 intersections has its length. In the Christmas night, TN will wait at the t-th intersection, and DB will start from the s-th intersection go through some connections, to the date place.Of course DB doesn’t want to make TN wait for long time, so he will choose the shortest path. He also want to know how many different shortest paths from s to t (there is at least one path).Because the number of intersections and connections are too large, DB can’t calculate these himself, so he need you help.InputFirst line : 3 positive integers, n, s and t (2 ≤ n ≤ 105, 1 ≤ s, t ≤ n, s ≠ t)n lines : the i-th line contains 3 positive integers l, r, w, means there are direct connections from i to l, i to l + 1, ... i to r, each has length w (1 ≤ l ≤ r ≤ n, w ≤ 106)OutputTwo positive integers, length of the shortest path, and number of the shortest paths (modulo 1015), separated by a spaceExampleInput:4 1 4\r\n2 3 3\r\n3 4 5\r\n2 4 5\r\n1 2 6Output:8 2Detais: the two shortest paths are (1, 2, 4) and (1, 3, 4)",
  "sample_input": "Input:4 1 4\r\n2 3 3\r\n3 4 5\r\n2 4 5\r\n1 2 6Output:8 2",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/QTGIFT3",
  "scraped_at": "2025-08-17 00:34:30",
  "test_cases": [
    {
      "input": "4 1 4\r\n2 3 3\r\n3 4 5\r\n2 4 5\r\n1 2 6",
      "expected_output": "8 2",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4 9 5\n3 9 2\n10 8 5\n2 1 7\n2 2 1",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "1 9 2\n8 1 1\n6 6 9\n7 4 7\n4 1 1",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "1 2 9\n3 3 2\n3 3 1\n5 1 1\n3 3 9",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "71 80 79\n29 36 2\n32 83 82\n56 49 33\n20 33 47",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "39 5 63\n40 38 36\n4 99 7\n18 7 26\n86 24 25",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "40 93 32\n49 36 69\n99 96 39\n76 44 3\n83 39 47",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "27 77 34\n33 37 8\n30 87 17\n88 7 26\n9 77 59",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "7 17 74\n93 28 17\n70 8 14\n22 89 68\n56 31 80",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "6 17 46\n22 15 7\n28 24 46\n40 29 12\n14 52 35",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "7 23 25\n20 17 25\n20 17 17\n21 25 41\n25 27 32",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "33 21 8\n43 16 43\n51 10 36\n44 33 6\n30 40 28",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "36 34 36\n20 21 45\n15 50 7\n36 49 10\n15 13 42",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "36 45 41\n27 9 17\n9 48 45\n47 34 5\n51 5 34",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "28 48 5\n41 25 7\n7 17 10\n44 14 51\n9 13 37",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "18 30 45\n43 31 8\n42 49 41\n32 32 29\n51 37 28",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "105 105 105\n105 105 105\n105 105 105\n105 105 105\n105 105 105",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "105 105 105\n105 105 105\n105 105 105\n105 105 105\n105 105 105",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "105 2 105\n105 1 104\n104 105 105\n104 2 104\n105 2 104",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 2 2\n1 104 104\n1 104 105\n104 2 1\n105 2 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:58",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Prefix Tiling",
  "tags": [],
  "text": "You are given a string S with N (1 ≤ N ≤ 100,000) characters from 'A' to 'Z', inclusive. For an integer L between 1 and N, inclusive, we define match (L) as the length of the longest prefix of S that can be tiled by the length-L prefix of S; more specifically, match (L) is the smallest 0-based index k such that S [k] ≠ S [k mod L], or N if no such k exists. For example, when S = \"ABCAB\", match (1) = 1, match (3) = 5, and match (4) = 4. Compute the sum match (1) + match (2) + ... + match (N).InputThe first line contains the integer T (1 ≤ T ≤ 10), the number of tests. For each test, there is a single line containing the string S.OutputFor each test case, print a single line containing one integer: the value of match (1) + match (2) + ... + match (N).ExampleInput:2\r\nABCAB\r\nZZZZZZOutput:17\r\n36For the first test case, match (1) + match (2) + match (3) + match (4) + match (5) = 1 + 2 + 5 + 4 + 5 = 17. For the second, the sum is equal to 6 * 6 = 36.Warning: large input/output data.",
  "sample_input": "Input:2\r\nABCAB\r\nZZZZZZOutput:17\r\n36",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/PRETILE",
  "scraped_at": "2025-08-17 00:34:12",
  "test_cases": [
    {
      "input": "2\r\nABCAB\r\nZZZZZZ",
      "expected_output": "17\r\n36",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1\n8",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n2\n9\n7\n4\n10",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "4\n3\n1\n3\n7",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "19\n79201745\n25895251\n9171120\n72802736\n80865786\n37962509\n80146876\n73710010\n92018915\n14366537\n26152350\n83550892\n51197520\n94070560\n67793378\n22958812\n90452597\n96763600\n64787475",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "5\n39961935\n96428825\n41191755\n62658794\n52554509",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "10\n87180653\n81654053\n96194813\n10958177\n89863601\n49937514\n17341473\n78558149\n493137\n46476377",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "9\n57024337\n64407190\n15030503\n97388079\n44049874\n82775628\n65947104\n89482298\n21476392",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "17\n35973238\n45633974\n15854483\n72279770\n68989126\n43470736\n20197873\n43547191\n49917740\n65517166\n79224517\n84164420\n17908222\n60282729\n40690397\n21143363\n6986587",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "40\n50314\n67558\n76834\n70393\n96297\n70274\n13392\n63492\n67916\n53060\n56324\n78173\n86400\n47759\n84105\n1816\n25096\n88842\n16332\n20236\n89814\n22710\n50504\n24708\n96684\n28716\n2328\n85581\n10405\n67891\n6257\n17316\n93423\n12384\n2377\n4282\n17253\n10261\n53189\n7704",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "67\n86406\n56184\n12981\n44226\n24632\n16734\n27440\n97363\n63652\n83973\n41212\n30459\n96824\n29720\n32724\n53997\n43586\n52342\n98030\n79614\n18013\n94797\n47237\n31677\n76023\n52927\n51366\n15300\n15443\n87522\n91986\n44967\n28076\n28245\n27990\n94836\n30951\n7729\n82817\n40522\n89115\n23072\n82023\n67908\n12650\n53492\n59147\n69036\n42758\n11089\n96174\n83263\n77152\n2162\n3528\n31971\n95055\n43814\n13349\n13912\n71435\n77038\n75728\n22853\n12076\n58144\n12577",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "77\n70250\n32395\n56463\n93823\n56017\n3590\n70510\n81248\n39234\n32378\n45455\n26813\n71869\n99573\n17084\n4668\n5693\n4605\n85356\n96613\n93479\n59919\n10847\n13228\n40056\n52735\n11848\n95248\n65690\n21150\n50774\n62841\n57258\n6912\n67360\n92621\n47360\n66146\n42359\n4242\n8947\n6235\n6725\n73024\n10855\n73612\n82423\n62435\n53459\n19213\n39796\n12050\n72121\n65681\n29562\n28598\n16611\n35535\n63458\n91930\n99272\n1857\n97122\n68103\n6368\n1895\n56022\n13572\n5969\n68500\n65961\n52178\n79918\n40283\n36324\n31818\n90906",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "53\n78458\n63993\n13521\n29231\n41077\n47155\n99019\n967\n64947\n2936\n69257\n68218\n84998\n7923\n49498\n65176\n821\n27958\n31408\n36326\n954\n60946\n16368\n90086\n6307\n99793\n96757\n36976\n51597\n73285\n80473\n26414\n29490\n39483\n92659\n10506\n1929\n81212\n93970\n91015\n49750\n62254\n20257\n68109\n17071\n40259\n50611\n17022\n5713\n67286\n15136\n59551\n58832",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "46\n1351\n531\n79371\n33869\n18129\n79363\n27146\n7573\n25987\n8439\n18896\n60375\n89995\n47964\n32212\n5377\n66656\n9601\n38123\n70379\n97846\n14597\n24056\n99767\n69373\n30287\n20396\n8786\n53079\n88278\n80552\n88719\n12352\n54417\n85526\n35574\n8988\n39322\n23109\n80968\n96968\n33115\n26091\n17254\n70973\n98589",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "30\n63633\n43551\n49041\n62727\n50086\n71241\n78035\n14677\n33748\n40021\n4283\n3420\n44286\n87060\n52669\n22694\n14968\n21375\n31821\n23659\n2440\n26902\n76406\n16716\n35813\n35477\n50917\n52254\n18542\n77216",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "54\n54886\n45118\n84013\n89417\n44010\n88126\n3639\n6644\n84189\n38569\n65649\n87973\n7227\n78526\n65550\n93728\n21315\n76176\n49343\n87956\n13946\n200\n24268\n91881\n6558\n80679\n7899\n90851\n50343\n9671\n31677\n67449\n93796\n35377\n57932\n89446\n41341\n83758\n84316\n12303\n64461\n75042\n75406\n69797\n90101\n81997\n53085\n81359\n99356\n30247\n22143\n92118\n20218\n29210",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "100\n15765026\n43217676\n1957646\n80635851\n97432273\n943327\n23217461\n92723263\n64226505\n63127216\n87416107\n93837788\n37208826\n39181697\n47553335\n31218245\n46359987\n34660392\n48179024\n67468767\n87135128\n43438952\n77549922\n98450701\n65304397\n8338420\n96762516\n77791928\n76139993\n89516368\n32291650\n47166531\n95607400\n90782658\n95946576\n73669743\n18779657\n90887083\n86163952\n64461313\n23817280\n48068047\n99911297\n40824739\n32705008\n71569426\n60047561\n78066371\n111898\n62938178\n47851282\n73658135\n58007315\n51285316\n2328660\n90565753\n33743731\n58420889\n19212784\n63663344\n94010028\n44884633\n40958611\n9941257\n74771106\n44224833\n41436450\n96751007\n71655750\n14424592\n20145121\n35122489\n30828861\n56903390\n21215060\n70627822\n62068293\n19831853\n32897894\n41943785\n26508167\n35057919\n88548377\n54805597\n5249600\n31630137\n25779581\n38618913\n296551\n72560268\n32529860\n1518124\n92972142\n38022507\n91051354\n52302914\n4181389\n57626790\n36566028\n18226601",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "100\n34889212\n27458321\n93937000\n61312134\n69189673\n67246274\n54134191\n24244557\n20691858\n83959326\n62702670\n69335897\n36478737\n87721067\n75033196\n72429940\n28655615\n52631740\n94169135\n99639613\n89273854\n8189684\n6179301\n92412195\n10835517\n65970728\n98451620\n11789133\n48250807\n47174799\n71414101\n84091802\n72210281\n20830465\n42568658\n29485597\n66261731\n51717222\n76418698\n10364023\n14099828\n91638657\n26127206\n76779334\n73456586\n24889540\n12976579\n41525150\n28785371\n22342150\n86804845\n85767523\n81360842\n15496268\n27262216\n67272215\n79041116\n38569245\n42213232\n98490037\n88013165\n65009275\n67275340\n24969762\n89185665\n79282430\n128671\n54150168\n10944223\n59044990\n71008873\n8719400\n97755285\n43181061\n99006063\n44546826\n55028141\n51170052\n13100434\n3090675\n93781308\n85689746\n30847679\n23867856\n43318313\n11624708\n34715761\n90186680\n46564168\n53537481\n13721606\n97530491\n73341361\n6058398\n92521304\n42830001\n72085782\n33622996\n39111727\n22322306",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "2\n1\n1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 2)"
    },
    {
      "input": "2\n1\n1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 2)"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:55",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Evil Overlord Cypher",
  "tags": [],
  "text": "You have been imprisoned by an evil, but stupid alien overlord. You told them it was a trap. It's not your fault. IT'S NOT YOUR FAULT.You can pass notes containing information to other prisoners to coordinate your escape. You want to use an algorithm that can be easily deciphered by your fellow prisoners, in between torture sessions of forced “Buffy the Vampire Slayer” marathons. But you also want the notes to remain unreadable to evil alien overlord and his minions should the notes be discovered.Therefore, you choose to implement a simple Caesar cypher given the following rule:When the characters in the document are sorted by frequency, then by ASCII code (case sensitive), each character is replaced by the character in the same position in the reversely sorted set.Make a single character frequency lookup for ENTIRE file.Given an arbitrary body of text as input, produce the appropriate output based on the cypher.The first line of the input will contain a count of all the remaining lines, the remaining line are all part of the text to be encrypted.Note:The¶symbol in the examples below represents a newline character. You may also ignore (strip/pop off) the first line of the input. It was added for languages that have difficulty (or lack of ability) detecting EOF.Also note that the newlines in the input text are treated as any other character and are encoded with the rest of the text. Note in particular that the last line of output may not end with a newline character.THIS IS WHITESPACE SENSITIVE.The sample input contains no whitespace characters at the end of a line unless marked with ¶ symbol at which point there is a newline character.ExamplesInput 1:1¶Aliens are dumb¶Output 1:mn¶ibAud¶AralseInput 2:1¶MississippiOutput 2:spMMpMMpiipInput 3:2¶Missi¶ssippiOutput 3:iM¶¶Ms¶¶MppM",
  "sample_input": "Input 1:1¶Aliens are dumb¶Output 1:mn¶ibAud¶Aralse",
  "sample_output": "Input 2:1¶MississippiOutput 2:spMMpMMpiip",
  "link": "https://www.spoj.com/problems/DIXIE001",
  "scraped_at": "2025-08-17 00:33:57",
  "test_cases": [
    {
      "input": "Input 1:1¶Aliens are dumb¶Output 1:mn¶ibAud¶Aralse",
      "expected_output": "Input 2:1¶MississippiOutput 2:spMMpMMpiip",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "7 10 7\nj q ftjee bfpdkwed iycvslt",
      "expected_output": "0\n0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "7 5 1\ntcna wtfyga jxlcw doaylqse tasbawlmk",
      "expected_output": "0\n0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "10 1 9\nykpie robhvg up zfghpnlyw wh",
      "expected_output": "0\n0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "89 18 77\nouaau yr zc tmhjsxdx dfljx",
      "expected_output": "0\n0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "81 29 27\ny yhtugaq ab tnceaq myh",
      "expected_output": "0\n0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "27 30 79\nf jlu bz nfmtpj ukcmvcrwjqjum",
      "expected_output": "0\n0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "41 29 74\nbgw evr tas wdhigdliyw vsxqgcbpfdoxm",
      "expected_output": "0\n0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "26 46 13\nzannd egkyijicn ego hhhcaldzg lhxliodxljnrlhmap",
      "expected_output": "0\n0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "201 424 475\nrqxvk zqqjqgoz spfi dbmosdx qxzrdbjsbw",
      "expected_output": "0\n0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "335 484 103\nwspxv uuqgs prcbs feqwbgrnwq bced",
      "expected_output": "0\n0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "104 284 185\norox sxhiihyhtj be ry yednytiuqfnptq",
      "expected_output": "0\n0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "354 139 137\ncz fucgfmex m ie f",
      "expected_output": "0\n0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "435 225 260\nrwbzw etjg of umbweqh zxqejuwbe",
      "expected_output": "0\n0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "68 290 362\njc rcclh eg ueolbtjspkh iixrmwvvgxg",
      "expected_output": "0\n0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "479 111 438\neavc hp ipve elt bvienpibzehzwpgga",
      "expected_output": "0\n0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000\noixb bxiahngzri xjcy krevv xz",
      "expected_output": "0\n0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000\ntbaec gm bhjnd tlwehmy eg",
      "expected_output": "0\n0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 2 2\nm gmys gr qnwkflyet z",
      "expected_output": "0\n0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 2 999\nhg mmgqkbs edztj zllgwf wpefcf",
      "expected_output": "0\n0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:51",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:22"
}
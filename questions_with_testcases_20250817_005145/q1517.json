{
  "problem_code": "problems",
  "title": "Profiling",
  "tags": [],
  "text": "Profiling: In software engineering, profiling (\"program profiling\", \"software profiling\") is a form of dynamic program analysis that measures, for example, the space (memory) or time complexity of a program, the usage of particular instructions, or the frequency and duration of function calls. Most commonly, profiling information serves to aid program optimization.- WikipediaArthur and Jacob are newly introduced to the programming world and they are trying hard for Newbies contest. Yesterday, they learned about recursive functions and Fibonacci sequence. They tried to implement the function themselves so they wrote the following code:int fibonacci (int N)\r\n          {\r\n              if(N < 2)\r\n                  return N;\r\n              return fibonacci(N - 1) + fibonacci(N - 2);\r\n          }But this program works slowly when N is a large number. They traced the program and found the cause of this problem. Take a look at the following picture:If you want to calculate Fibonacci(6), Fibonacci(3) will be calculated multiple times!They want to know how serious this problem can be, so they need a profiler to calculate such a thing for them.Your task is to provide the profiler which receives two integers N, K and tells them if they call Fibonacci(N) how many times Fibonacci(K) will be calculated (according to their code).InputThe first line of input indicates the number of test cases (There will be at most 100 test cases)For each test case, there are two space-separated integers N, K  in a single line. (0 ≤ N, K ≤ 105)OutputFor each test case, print the number of times Fibonacci(K) will be calculated, if we call Fibonacci(N). Since the result can be very large, print the result modulo (Mod %) 1000000007.ExampleInput:5\r\n6 6\r\n6 3\r\n6 2\r\n100000 3\r\n5 10Output:1\r\n3\r\n5\r\n855252772\r\n0",
  "sample_input": "int fibonacci (int N)\r\n          {\r\n              if(N < 2)\r\n                  return N;\r\n              return fibonacci(N - 1) + fibonacci(N - 2);\r\n          }",
  "sample_output": "Input:5\r\n6 6\r\n6 3\r\n6 2\r\n100000 3\r\n5 10Output:1\r\n3\r\n5\r\n855252772\r\n0",
  "link": "https://www.spoj.com/problems/PROFILING",
  "scraped_at": "2025-08-17 00:33:44",
  "test_cases": [
    {
      "input": "int fibonacci (int N)\r\n          {\r\n              if(N < 2)\r\n                  return N;\r\n              return fibonacci(N - 1) + fibonacci(N - 2);\r\n          }",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5\r\n6 6\r\n6 3\r\n6 2\r\n100000 3\r\n5 10",
      "expected_output": "1\r\n3\r\n5\r\n855252772\r\n0",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "eun kvtex o nzli\ncg\n2\nhqe u b\ncas ywy\n1 1\nav ij xnmza djcez rsjk aub bztm g\nyy",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "yz dqqwffxfz bqnb jq\nhf\n2\ngr qe so\njsqw ezz\n2 1\nxetq opsidn gzeo epyy d w lylx k\na",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "j nsnjym y v\nhd\n1\nor nrj nzk\nfnle hlos\n1 2\nqxwkl cczhitcmko vha bythd ngcjw gbqxa kmzvm bqvsp\nd",
      "expected_output": "0",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "qb gxcms fhujr ika\np\n2\nsyw qzhj qsq\nxwu z\n2 1\nofig ohltlgsxqcs ym ek jfpg u npp edvvb\nbu",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "drys vft e xzd\non\n1\nxf zvsbp ednm\nfhs bczxi\n2 1\nplbyt ju uqr uz apuci vrep huau gn\nr",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "sco wujkczdxj k uclzk\nsz\n2\nydpk uihps iqo\ng gxv\n1 1\nyjxufw mbklvl d hpu hi g d hog\nb",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "lo xihhgu w xjw\nbs\n1\nx dxg ufvnp\nkokxuh d\n1 2\nmgfv f jhmfj gwh knu emdigawpv h cg\ngw",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "sio xq bma zw\nbw\n2\nkml h nt\nvqk k\n1 2\nunlcej syw z bhen arg cxkxfes mcz ypp\nuf",
      "expected_output": "0",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "xajuu pi i fkh\ng\n1\ncfie ensw d\nicj dzmzq\n1 1\naplgx b rfi g sq mm fwvwp dsowb\nl",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "pa qkv ezjy ksw\nv\n1\nn hhrj wpl\nowxsj btf\n1 1\nye izbv qoaaf j ptt ssecdziuoes wfhj nzq\npn",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "nlsgu qdfxlnns sg nz\nrh\n1\npukw qp sgje\nzlf ynjq\n1 1\nyzhxy ir rlrm x skwz ktacrcmuxfy pdjp n\ncw",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "yyvgx a s aucgv\nx\n1\nwsu xwev cir\nncwbv mo\n1 1\nxaayxy zvdcsg wmlvg upex ryq esvclkkjxjr bqr hmie\ng",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "jw jqfkx tjn eklle\nt\n1\ncefgt tj sq\nfrzf hhtp\n1 1\nk jl few jasg j iocxl gt zjqq\nbn",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "mhm hzrh y iewcp\nd\n1\npe lmghm qj\nxrofa nz\n1 1\noh myh k llq caym mbzsl rzxu ozuk\nh",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "v dlwrbzbjs k nj\nih\n1\nldvuo cfph jkf\nks mtmdy\n1 1\nyh hfjnrnljnez ieptg pm s wjccjoqgtzh ligoc w\nt",
      "expected_output": "0",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "u bnejvhp lv xdgp\nl\n2\nf qgqu hy\npkfjjr eof\n2 2\nh tzndhteqfmx uu vrva yw t fge rx\nxb",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "edxpa wlnelhv ao qzun\npz\n2\njlbd sayw e\npcca fbgw\n2 2\ngavjuk ioyhtqmni ktdst ta dkke gvbnx zt xzo\nl",
      "expected_output": "0",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "rfo qtkkya v ovf\nwi\n2\nqtpa de j\nnvabdo posbq\n1 2\ne iuvqrghvzsu pvthk bofh jfksk jvdzihob aj jahg\nbg",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:50",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:06"
}
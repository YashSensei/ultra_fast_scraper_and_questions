{
  "problem_code": "problems",
  "title": "Ada and Coins",
  "tags": [],
  "text": "Ada the Ladybug has several coins in her wallet. She is wondering, how many different values [sum of some subset of coins] is she able to make (in given range).InputThe first line contains two integer numbers1 ≤ N ≤ 104, 1 ≤ Q     ≤ 5*105, the number of coins and number of queries.The next line containsNinteger numbers1 ≤ Ai≤     105, the values of coins in Ada's wallet.Afterward,Qlines follow, each containing two integers1 ≤ B     ≤ E ≤ 105,beginning andend of range, for which Ada wants to know the answerOutputFor each query, output the number of distinct values Ada can generate in given range.Example Input10 10\r\n1 2 2 3 5 30 31 90 100 100\r\n1 1\r\n1 5\r\n3 6\r\n2 9\r\n30 100\r\n1 10000\r\n30 32\r\n5 12\r\n9 29\r\n190 220Example Output1\r\n5\r\n4\r\n8\r\n40\r\n231\r\n3\r\n8\r\n5\r\n25Output Subsets[  1,    1]: 1 \r\n[  1,    5]: 1 2 3 4 5 \r\n[  3,    6]: 3 4 5 6 \r\n[  2,    9]: 2 3 4 5 6 7 8 9 \r\n[ 30,  100]: 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 61 62 63 64 65 66 67 68 69 70 71 72 73 74 90 91 92 93 94 95 96 97 98 99 100 \r\n[  1,10000]: 1 2 3 4 5 6 7 8 9 10 11 12 13 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 61 62 63 64 65 66 67 68 69 70 71 72 73 74 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 290 291 292 293 294 295 296 297 298 299 300 301 302 303 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 351 352 353 354 355 356 357 358 359 360 361 362 363 364 \r\n[ 30,   32]: 30 31 32 \r\n[  5,   12]: 5 6 7 8 9 10 11 12 \r\n[  9,   29]: 9 10 11 12 13 \r\n[190,  220]: 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 220",
  "sample_input": "10 10\r\n1 2 2 3 5 30 31 90 100 100\r\n1 1\r\n1 5\r\n3 6\r\n2 9\r\n30 100\r\n1 10000\r\n30 32\r\n5 12\r\n9 29\r\n190 220",
  "sample_output": "1\r\n5\r\n4\r\n8\r\n40\r\n231\r\n3\r\n8\r\n5\r\n25",
  "link": "https://www.spoj.com/problems/ADACOINS",
  "scraped_at": "2025-08-17 00:33:09",
  "test_cases": [
    {
      "input": "10 10\r\n1 2 2 3 5 30 31 90 100 100\r\n1 1\r\n1 5\r\n3 6\r\n2 9\r\n30 100\r\n1 10000\r\n30 32\r\n5 12\r\n9 29\r\n190 220",
      "expected_output": "1\r\n5\r\n4\r\n8\r\n40\r\n231\r\n3\r\n8\r\n5\r\n25",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5 1\n9 7 6 9 8 2 2 9 2 4\n9 9\n7 9\n2 10\n10 1\n10 1\n9 8\n7 8\n3 10\n4 1\n8 10",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "1 2\n8 1 7 7 3 6 7 2 2 4\n8 9\n6 5\n4 5\n2 4\n2 9\n8 8\n1 9\n10 8\n6 10\n3 7",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "4 9\n4 4 2 5 4 6 6 1 4 10\n2 6\n2 3\n8 4\n5 1\n4 4\n3 8\n10 10\n2 1\n7 4\n1 9",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "100 63\n75 48 78 99 63 50 85 82 29 58\n26 21\n95 97\n82 32\n68 17\n70 20\n26 50\n17 48\n70 30\n33 82\n6 92",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "12 56\n81 15 72 79 4 46 41 72 2 11\n70 33\n57 40\n23 13\n50 26\n37 83\n93 98\n26 22\n41 79\n23 14\n45 49",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "86 40\n4 22 1 77 37 89 35 28 55 20\n65 34\n33 23\n62 30\n57 60\n40 66\n98 27\n79 23\n69 77\n31 45\n17 42",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "49 56\n52 14 10 63 35 53 79 42 8 27\n39 14\n8 88\n50 15\n8 6\n45 2\n34 19\n5 91\n90 35\n82 93\n4 6",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "36 5\n19 12 49 88 48 19 49 7 54 36\n59 61\n12 76\n97 29\n49 25\n86 92\n63 54\n37 79\n5 35\n66 99\n20 51",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "14 24\n42 41 39 43 5 18 31 28 51 52\n10 50\n12 15\n30 6\n20 19\n26 10\n44 45\n34 30\n15 8\n12 12\n19 52",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "34 36\n15 26 7 33 48 44 41 51 35 12\n14 50\n34 34\n46 45\n8 51\n30 6\n33 49\n27 11\n51 34\n8 33\n9 40",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "36 19\n52 17 13 16 28 33 37 30 50 39\n26 45\n30 21\n40 20\n39 26\n38 25\n37 38\n30 46\n22 51\n33 28\n12 12",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "17 26\n43 31 34 41 11 47 33 42 39 5\n23 36\n51 25\n30 27\n8 51\n39 31\n22 17\n28 9\n16 18\n21 23\n22 52",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "40 34\n38 25 12 11 15 23 17 47 51 46\n31 49\n35 24\n13 48\n33 52\n47 32\n47 17\n34 36\n16 36\n34 35\n32 28",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "41 12\n45 14 50 42 10 28 8 10 21 15\n14 31\n9 29\n47 15\n29 49\n44 30\n22 21\n26 11\n26 18\n14 10\n6 38",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "46 8\n33 18 49 47 49 20 36 17 42 39\n12 17\n5 13\n5 18\n44 26\n28 44\n8 45\n12 34\n32 17\n35 27\n23 27",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "104 104\n104 104 104 104 104 104 104 104 104 104\n104 104\n104 104\n104 104\n104 104\n104 104\n104 104\n104 104\n104 104\n104 104\n104 104",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "104 104\n104 104 104 104 104 104 104 104 104 104\n104 104\n104 104\n104 104\n104 104\n104 104\n104 104\n104 104\n104 104\n104 104\n104 104",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "104 1\n104 104 103 104 2 2 103 104 2 104\n104 103\n2 1\n104 2\n2 2\n104 104\n104 103\n1 2\n1 103\n1 2\n1 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 103\n1 1 2 103 2 103 103 1 104 104\n2 2\n2 1\n104 2\n2 2\n103 2\n2 2\n104 103\n1 2\n103 2\n2 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:48",
  "total_test_cases": 20
}
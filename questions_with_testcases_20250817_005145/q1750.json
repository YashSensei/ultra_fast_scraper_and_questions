{
  "problem_code": "problems",
  "title": "Query on a tree VII",
  "tags": [],
  "text": "You are given a tree (an acyclic undirected connected graph) with n nodes. The tree nodes are numbered from 1 ton. Each node has a color, white or black, and a weight. We will ask you to perform some instructions of the following form:0 u: ask for the maximum weight among the nodes which are connected tou, two nodes are connected if all the node on the path fromutov(inclusiveuandv) have a same color.1 u: toggle the color ofu(that is, from black to white, or from white to black).2 u w: change the weight ofutow.InputThe first line contains a numberndenoted how many nodes in the tree(1 ≤n≤ 105). The nextn-1 lines, each line has two numbers (u,v) describe a edge of the tree(1 ≤u,v≤ n).  The next 2 lines, each line containsnnumber, the first line is the initial color of each node(0 or 1), and the second line is the initial weight, let's say Wi, of each node(|Wi| ≤ 109).  The next line contains a numbermdenoted how many operations we are going to process(1 ≤m≤ 105). The nextmlines, each line describe a operation (t,u) as we mentioned above(0 ≤t≤ 2, 1 ≤u≤n, |w| ≤ 109).OutputFor each query operation, output the corresponding result.ExampleInput 1:5\r\n1 2\r\n1 3\r\n1 4\r\n1 5\r\n0 1 1 1 1\r\n1 2 3 4 5\r\n3\r\n0 1\r\n1 1\r\n0 1Output 1:1\r\n5Input 2:7\r\n1 2\r\n1 3\r\n2 4\r\n2 5\r\n3 6\r\n3 7\r\n0 0 0 0 0 0 0\r\n1 2 3 4 5 6 7\r\n4\r\n0 1\r\n1 1\r\n0 2\r\n0 3Output 2:7\r\n5\r\n7Warning: large input/output data ,be careful with certain languages",
  "sample_input": "Input 1:5\r\n1 2\r\n1 3\r\n1 4\r\n1 5\r\n0 1 1 1 1\r\n1 2 3 4 5\r\n3\r\n0 1\r\n1 1\r\n0 1Output 1:1\r\n5",
  "sample_output": "Input 2:7\r\n1 2\r\n1 3\r\n2 4\r\n2 5\r\n3 6\r\n3 7\r\n0 0 0 0 0 0 0\r\n1 2 3 4 5 6 7\r\n4\r\n0 1\r\n1 1\r\n0 2\r\n0 3Output 2:7\r\n5\r\n7",
  "link": "https://www.spoj.com/problems/QTREE7",
  "scraped_at": "2025-08-17 00:33:48",
  "test_cases": [
    {
      "input": "Input 1:5\r\n1 2\r\n1 3\r\n1 4\r\n1 5\r\n0 1 1 1 1\r\n1 2 3 4 5\r\n3\r\n0 1\r\n1 1\r\n0 1Output 1:1\r\n5",
      "expected_output": "Input 2:7\r\n1 2\r\n1 3\r\n2 4\r\n2 5\r\n3 6\r\n3 7\r\n0 0 0 0 0 0 0\r\n1 2 3 4 5 6 7\r\n4\r\n0 1\r\n1 1\r\n0 2\r\n0 3Output 2:7\r\n5\r\n7",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5 3\na miay\n6 3\n9 9\n5 10\n6 8\n7 9 5 10 9\n8 10 2 7 4\n2\n2 10\n1 3\n1 8 1 5\n5 iw v\n1",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "7 3\nbain xr\n7 7\n3 2\n7 3\n10 2\n2 1 10 9 3\n2 8 3 2 3\n8\n2 4\n7 10\n9 7 4 5\n10 eh rxox\n7",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "5 8\npwxhj lnh\n2 3\n6 3\n1 9\n9 2\n4 9 7 10 4\n3 7 2 2 3\n3\n8 4\n8 6\n7 1 8 3\n6 ippdy r\n10",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "56 68\nele pplmz\n66 38\n62 75\n66 56\n7 13\n70 43 80 69 5\n78 1 47 89 73\n66\n22 28\n58 84\n7 4 83 21\n68 ucgfzs hbh\n3",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "71 56\nha t\n61 93\n48 23\n34 54\n42 89\n32 47 86 32 39\n30 13 43 81 82\n93\n62 13\n52 59\n62 61 22 5\n49 isrdgf g\n44",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "35 59\nf vwab\n82 40\n57 53\n25 1\n33 72\n60 85 56 80 2\n47 83 77 21 79\n98\n14 15\n15 11\n37 11 34 72\n12 ttogznn amiw\n26",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "81 10\nu puh\n64 15\n28 68\n1 40\n15 95\n99 82 22 28 72\n84 94 85 63 41\n61\n72 93\n31 42\n79 69 35 87\n85 kp vub\n69",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "93 63\nxr lic\n44 71\n4 46\n80 76\n61 91\n21 88 76 57 6\n23 4 35 94 76\n1\n38 70\n4 26\n3 47 16 84\n79 swnu jvwo\n30",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "35 30\nfasq pg\n5 40\n47 24\n51 31\n51 11\n11 6 33 45 9\n18 17 44 34 17\n28\n16 21\n24 43\n7 12 39 15\n40 wmmqqoi cx\n22",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "45 7\ng bvk\n8 45\n48 37\n50 29\n41 34\n7 45 15 48 29\n43 33 19 43 31\n21\n42 34\n28 40\n29 14 41 36\n45 wz ybtn\n26",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "50 14\nli kvz\n18 23\n40 17\n21 28\n38 19\n17 50 41 51 35\n48 11 11 23 37\n34\n41 51\n49 39\n15 29 11 14\n22 oitk cwzhb\n34",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "11 13\nlgf natkv\n40 40\n18 20\n12 16\n37 13\n23 9 51 16 25\n37 25 7 33 29\n33\n12 33\n13 47\n23 52 12 50\n8 jvpgdbe tttm\n44",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "10 48\nngmmb bx\n28 35\n7 29\n30 12\n5 26\n42 14 36 16 33\n24 31 47 7 31\n36\n6 28\n52 43\n15 48 52 47\n48 sjrhs c\n31",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "5 51\nwkxnv jbwwu\n15 47\n37 8\n30 36\n12 49\n9 32 22 24 20\n36 15 50 42 24\n35\n38 40\n10 13\n14 45 23 6\n10 gssub x\n50",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "29 5\nxxtu myn\n48 44\n5 41\n8 31\n17 42\n22 14 8 19 39\n48 30 21 22 11\n35\n12 39\n5 46\n7 30 48 10\n39 egvljws qu\n51",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "105 105\nvo ozsj\n105 105\n105 105\n105 105\n105 105\n105 105 105 105 105\n105 105 105 105 105\n105\n105 105\n105 105\n105 105 105 105\n105 evfd vtuzd\n105",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "105 105\nsmzo h\n105 105\n105 105\n105 105\n105 105\n105 105 105 105 105\n105 105 105 105 105\n105\n105 105\n105 105\n105 105 105 105\n105 ggvcd qts\n105",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 105\nhykgf inad\n1 104\n2 105\n105 2\n104 2\n1 105 105 2 2\n2 104 104 1 2\n2\n105 2\n105 104\n1 104 105 105\n104 njm rs\n2",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 104\nq lj\n2 104\n104 2\n104 1\n2 2\n105 1 1 2 1\n2 2 105 2 1\n105\n2 105\n104 104\n2 104 2 105\n1 vxkocy entaa\n104",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:51",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:13"
}
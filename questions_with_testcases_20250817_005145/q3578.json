{
  "problem_code": "problems",
  "title": "Alturas de NoMeAcuerdo",
  "tags": [],
  "text": "In NoMeAcuerdo city a population census has been conducted last week. As a result, two lists (temporary data for a certain process) were generated: one list with the heights in cm. for the women of the city, and another list with heights in cm. for the men. The data in each list are not necessarily sorted, and contain a height for each woman or man.InputLists should be read from the input in the order indicated above (first the women heights, then the  men heights). Each list ends with a 0 indicating end of  the list. It is known that each list will have no more than 500  elements.OutputYour program should output four lines. The first line should be a list containing the two original  lists merged and sorted, with only one occurrence of each value. The next 3 lines will show: number of women, number of men and number of different heights.ExampleInput:155 180 165 165 172 166 170 172 180 0173 150 180 199 168 168 170 165 167 155 0Output:150 155 165 166 167 168 170 172 173 180 19991011",
  "sample_input": "Input:155 180 165 165 172 166 170 172 180 0173 150 180 199 168 168 170 165 167 155 0Output:150 155 165 166 167 168 170 172 173 180 19991011",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/ALTURAS",
  "scraped_at": "2025-08-17 00:34:27",
  "test_cases": [
    {
      "input": "155 180 165 165 172 166 170 172 180 0173 150 180 199 168 168 170 165 167 155 0",
      "expected_output": "150 155 165 166 167 168 170 172 173 180 19991011",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1 10 3 2 8 10 4 3 10 5 5 4 9 5 9 3 5 5 9 4",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "5 7 3 1 6 4 4 2 4 6 8 5 4 7 8 3 8 10 10 10",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "4 2 3 2 3 5 2 2 4 2 8 5 8 5 4 9 2 10 9 9",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "70 76 33 53 83 60 81 87 46 63 25 55 69 97 90 58 2 60 95 83",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "82 30 75 8 76 52 27 76 50 70 86 87 10 75 71 42 40 12 52 3",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "88 22 60 47 5 36 45 11 23 36 79 48 51 34 4 21 30 98 76 93",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "99 15 51 73 5 21 36 89 70 74 6 40 1 49 28 7 37 46 89 94",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "49 79 80 58 80 57 4 55 85 89 57 88 23 32 51 36 43 32 55 12",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "471 489 320 68 429 195 196 401 353 71 391 61 164 100 306 93 416 464 442 157",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "393 97 264 389 346 462 213 179 216 323 384 302 119 169 82 190 347 161 123 446",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "70 325 276 125 391 427 106 78 138 291 183 245 333 85 466 346 71 470 153 119",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "229 58 499 470 479 325 63 143 399 255 443 401 54 432 343 211 388 491 423 383",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "434 87 91 207 204 226 123 248 328 412 385 313 434 76 316 98 468 269 211 258",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "53 457 73 119 234 355 90 240 412 163 478 194 345 313 154 387 294 160 187 245",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "219 107 301 55 286 249 454 393 312 95 405 270 158 157 379 463 357 229 489 328",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "999 1 1 2 1000 1 1 1 2 1000 1 1000 2 1000 1000 1 2 999 1 999",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "999 2 1 2 1000 1000 1 1000 2 1 1000 2 1 1 1 1000 1000 2 1000 1",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:57",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:38:12"
}
{
  "problem_code": "problems",
  "title": "Cows Language",
  "tags": [],
  "text": "Like all bovines, Farmer John's cows speak the peculiar 'Cow'\r\nlanguage. Like so many languages, each word in this language comprises\r\na sequence of upper and lowercase letters (A-Z and a-z).  A word\r\nis valid if and only if each ordered pair of adjacent letters in\r\nthe word is a valid pair.Farmer John, ever worried that his cows are plotting against him,\r\nrecently tried to eavesdrop on their conversation. He overheard one\r\nword before the cows noticed his presence. The Cow language is\r\nspoken so quickly, and its sounds are so strange, that all that\r\nFarmer John was able to perceive was the total number of uppercase\r\nletters, U (1  ≤  U  ≤  250) and the total number of lowercase\r\nletters, L (1  ≤  L  ≤  250) in the word.Farmer John knows all P (1  ≤  P  ≤  200) valid ordered pairs of\r\nadjacent letters.  He wishes to know how many different valid\r\nwords are consistent with his limited data.  However, since\r\nthis number may be very large, he only needs the value modulo\r\n97654321.InputLine 1: Three space-separated integers: U, L and PLines 2..P+1: Two letters (each of which may be uppercase or lowercase), representing one valid ordered pair of adjacent letters in Cow.OutputLine 1: A single integer, the number of valid words consistent with Farmer  John's data mod 97654321.SampleInput:2 2 7\r\nAB\r\nab\r\nBA\r\nba\r\nAa\r\nBb\r\nbBOutput:7ExplanationThe word Farmer John overheard had 2 uppercase and 2 lowercase letters. The valid pairs of adjacent letters are AB, ab, BA, ba, Aa, Bb and bB.The possible words are:AabBABbaabBABAabBbBbbBAabBbB",
  "sample_input": "Input:2 2 7\r\nAB\r\nab\r\nBA\r\nba\r\nAa\r\nBb\r\nbBOutput:7",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/COWWORDS",
  "scraped_at": "2025-08-17 00:34:20",
  "test_cases": [
    {
      "input": "2 2 7\r\nAB\r\nab\r\nBA\r\nba\r\nAa\r\nBb\r\nbB",
      "expected_output": "7",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3 5 9\nl\njkk\npdl\nlkj\nawk\ntyrq\nv",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "2 7 6\ngz\nulo\nyms\nxhun\nszvn\ncvp\npyti",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "3 3 8\ne\nwr\ngda\ntzn\nbjc\ni\nqzu",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "43 70 79\ntbzq\ndx\ntdl\nubc\nmyio\ng\nkvnc",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "73 36 66\no\nb\npn\nnomt\ncet\niu\njqkp",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "78 58 57\nn\nx\npx\ntzg\ntxq\nlk\ngxe",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "98 19 80\nklah\nv\nfpus\nn\npk\noulp\noti",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "28 10 56\nzyn\ne\nny\nmxbf\nh\nrub\nc",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "195 167 454\neqw\nra\nr\nnciv\nrq\ncnlv\nceho",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "474 429 279\ny\nuhnj\ns\nie\ncdri\nld\ngf",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "304 226 267\nibmu\nirp\njw\nt\ndtkv\ngxff\ngew",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "434 188 383\nblq\nwy\nzcm\npa\ntnyz\npqf\nxyto",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "137 322 313\nzabe\nklk\njb\nob\ng\na\nj",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "406 190 479\ntbg\nfdux\nbsbp\ndaa\nmrn\nqy\nv",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "63 450 212\nlnp\ns\nkbby\nz\nfkea\nly\njua",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000\nomzs\nbhyu\ncxk\nw\nhl\nnwfa\ntebn",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000\nbeqs\nwej\nox\nvqh\nqout\nnxm\nqvs",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "999 1 1\nma\nwrtz\nnktc\nmjhf\ne\nvtdm\ns",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1000 2 1\nbwdb\nonqh\nm\nvukb\nbb\nqbqi\ng",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:57",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:38:12"
}
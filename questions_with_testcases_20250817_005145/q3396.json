{
  "problem_code": "problems",
  "title": "Largest Rectangle in a Histogram",
  "tags": [],
  "text": "A histogram is a polygon composed of a sequence of rectangles aligned at a common base line.\r\nThe rectangles have equal widths but may have different heights.\r\nFor example, the figure on the left shows the histogram that consists of rectangles with the heights 2, 1, 4, 5, 1, 3, 3, measured in units where 1 is the width of the rectangles:Usually, histograms are used to represent discrete distributions, e.g., the frequencies of characters in texts.\r\nNote that the order of the rectangles, i.e., their heights, is important.\r\nCalculate the area of the largest rectangle in a histogram that is aligned at the common base line, too.\r\nThe figure on the right shows the largest aligned rectangle for the depicted histogram.Input SpecificationThe input contains several test cases.\r\nEach test case describes a histogram and starts with an integern, denoting the number of rectangles it is composed of.\r\nYou may assume that1 ≤ n ≤ 100000.\r\nThen follownintegersh1... hn, where0 ≤ hi≤ 1000000000.\r\nThese numbers denote the heights of the rectangles of the histogram in left-to-right order.\r\nThe width of each rectangle is1.\r\nA zero follows the input for the last test case.Output SpecificationFor each test case output on a single line the area of the largest rectangle in the specified histogram.\r\nRemember that this rectangle must be aligned at the common base line.ExampleInput:7 2 1 4 5 1 3 3\r\n4 1000 1000 1000 1000\r\n0Output:8\r\n4000",
  "sample_input": "Input:7 2 1 4 5 1 3 3\r\n4 1000 1000 1000 1000\r\n0Output:8\r\n4000",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/HISTOGRA",
  "scraped_at": "2025-08-17 00:34:21",
  "test_cases": [
    {
      "input": "7 2 1 4 5 1 3 3\r\n4 1000 1000 1000 1000\r\n0",
      "expected_output": "8\r\n4000",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4 4 4 9 4 1 2 7\n6 8 7 5 9\n9",
      "expected_output": "0\n0\n9",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "3 1 9 2 6 6 1 5\n9 6 1 8 4\n2",
      "expected_output": "0\n0\n2",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "5 3 4 5 7 5 2 2\n8 7 7 9 8\n4",
      "expected_output": "0\n0\n4",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "41 98 71 26 42 20 83 95\n78 62 28 71 53\n100",
      "expected_output": "0\n0\n100",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "92 41 9 20 75 80 55 96\n71 6 10 37 53\n56",
      "expected_output": "0\n0\n56",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "44 25 94 82 78 5 42 80\n78 12 22 60 64\n46",
      "expected_output": "0\n0\n46",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "81 2 82 82 20 67 71 30\n80 39 90 73 28\n63",
      "expected_output": "0\n0\n63",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "8 63 65 13 47 96 12 80\n10 22 72 9 60\n19",
      "expected_output": "0\n0\n19",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "13776 36848 7233 28636 12527 19739 9241 17980\n42675 30165 14499 34733 38987\n35992",
      "expected_output": "0\n0\n35992",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "34423 25473 14979 29818 22820 33557 44278 28061\n48408 47627 30580 14562 33815\n10726",
      "expected_output": "0\n0\n10726",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "39126 17982 27961 34650 47289 33274 7715 33544\n16757 13524 25292 29768 9134\n22786",
      "expected_output": "0\n0\n22786",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "46824 49532 41460 23058 22432 18850 48500 42769\n46924 40912 36961 15999 27007\n26354",
      "expected_output": "0\n0\n26354",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "5515 29432 35272 13046 18115 11400 16573 47697\n46742 37162 21640 8938 13312\n31294",
      "expected_output": "0\n0\n31294",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "10867 23288 38395 17782 30424 18151 5297 11404\n45013 33475 6342 5043 6533\n35803",
      "expected_output": "0\n0\n35803",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "8177 13660 46283 8635 47343 22834 34738 24418\n43609 13333 41701 9437 49116\n9500",
      "expected_output": "0\n0\n9500",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "100000 100000 100000 100000 100000 100000 100000 100000\n100000 100000 100000 100000 100000\n100000",
      "expected_output": "0\n0\n100000",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "100000 100000 100000 100000 100000 100000 100000 100000\n100000 100000 100000 100000 100000\n100000",
      "expected_output": "0\n0\n100000",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "100000 99999 2 2 2 2 100000 1\n2 99999 100000 100000 100000\n99999",
      "expected_output": "0\n0\n99999",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "100000 1 1 99999 99999 1 1 100000\n99999 100000 100000 100000 2\n2",
      "expected_output": "0\n0\n2",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:56",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:38:06"
}
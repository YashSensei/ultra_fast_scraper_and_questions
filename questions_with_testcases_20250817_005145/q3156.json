{
  "problem_code": "problems",
  "title": "Simple Numbers with Fractions Conversion",
  "tags": [],
  "text": "Every integer numbernis represented in positional number system of baserby a sequence of digits 0 <=di<r, decimal point ',' and fractional part, so the value is equal to:n=d0+r*d1+r2*d2+r3*d3+ ... +r-1*d-1+r-2*d-2+r-3*d-3+ ...Your task is to convert a given number inr-base representation intos-base representation withldigits after decimal point (no rounding - use floor), for example: decimal 231, 5 into binary 11100111, 1 with one digit after decimal point. Assume thatr<= 36 and the digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z.InputN[the number of series <= 1000]n r s l[n< 361000+ 1,r,s<= 36, l <= 1000 ]Outputn[s-base representation of numbern]Text grouped in [ ] does not appear in the input and output file.ExampleInput:10500,1 6 31 33866,DJ 22 27 1EH75,L3 24 4 3A73C,10B 13 27 26C6J,E483 22 6 2JA,L 30 5 46,5A 20 31 21,C5 14 7 1HD,6K 26 9 21001,011 2 10 3Output:5P,5551M8H,H301223231,32014MB,251255211,354310,32226,8G1,6555,239,375",
  "sample_input": "Input:10500,1 6 31 33866,DJ 22 27 1EH75,L3 24 4 3A73C,10B 13 27 26C6J,E483 22 6 2JA,L 30 5 46,5A 20 31 21,C5 14 7 1HD,6K 26 9 21001,011 2 10 3Output:5P,5551M8H,H301223231,32014MB,251255211,354310,32226,8G1,6555,239,375",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/TCNUMFL",
  "scraped_at": "2025-08-17 00:34:18",
  "test_cases": [
    {
      "input": "10500,1 6 31 33866,DJ 22 27 1EH75,L3 24 4 3A73C,10B 13 27 26C6J,E483 22 6 2JA,L 30 5 46,5A 20 31 21,C5 14 7 1HD,6K 26 9 21001,011 2 10 3",
      "expected_output": "5P,5551M8H,H301223231,32014MB,251255211,354310,32226,8G1,6555,239,375",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "6 6 6 10 6 5 2 9 6 6 7 6 10 8 3 8 5 5 3 1 6 6 6 7 4 3 9 7 5 3 10 2 6 6 3 3 7 1 2 1 4 5\nmtxy 3 1 meaamtrj 1 7 mmcmgar 2 5 kpiki 3 7 qvk 2 5 wa 10 1 bntz 8 3 mqny 5 8 j 9 2 xsvvvhj 4 5 9",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "9 6 9 1 2 6 8 1 9 1 7 10 4 7 4 2 6 1 6 4 10 10 9 2 6 4 4 7 1 3 7 7 7 9 1 4 3 6 10 3 2 10\nfrublaf 10 7 ovirfw 9 9 zh 5 1 vew 1 6 usvlfiyy 4 4 vnua 8 4 druu 10 5 f 9 10 eef 10 1 xkwvhxixk 10 4 4",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "7 9 8 8 3 8 1 8 6 2 3 8 4 5 10 7 6 5 9 4 9 2 8 4 6 9 5 8 8 1 6 2 9 10 4 7 4 3 7 6 6 7\nsrh 2 4 zorpp 8 8 bwqcry 8 7 r 9 9 vbxotbyq 10 4 sakx 7 3 ivdhn 10 3 b 1 3 x 1 3 mihcafcxm 4 7 9",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "43 6 48 80 3 13 29 17 22 39 24 27 20 35 65 34 30 40 38 69 77 92 30 66 63 20 15 23 95 95 100 48 31 62 61 51 38 43 38 1 87 27\nune 23 14 wpdmi 64 6 qsivtgv 97 95 fulehk 73 91 ctziimkkox 72 16 fr 23 82 jh 46 45 a 98 37 gnaih 37 5 s 69 85 39",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "71 83 18 2 93 90 21 75 74 73 62 100 1 92 99 17 98 49 32 3 83 61 8 86 95 92 15 51 41 23 96 82 61 2 35 53 53 87 33 72 58 16\nkgrnm 49 73 xzqzdpxu 56 20 urr 65 34 xwcjr 69 81 blycv 74 8 hdrpu 8 61 jc 64 50 lacn 2 6 uzqw 78 43 qkiv 56 94 89",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "46 45 76 8 22 35 23 65 52 48 62 46 2 96 91 86 71 74 76 31 10 71 74 9 75 34 51 70 52 7 42 79 88 22 4 46 83 60 52 30 39 11\nojw 6 45 mqd 74 23 avv 29 58 ddotbkc 55 27 skbkiah 44 56 ml 89 90 zwm 5 12 w 18 33 jnvpok 54 5 sbcnbcmox 53 17 67",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "90 20 88 58 75 44 65 82 35 86 83 66 64 54 75 51 21 45 18 35 26 29 54 23 27 1 3 8 92 90 29 55 20 14 63 96 64 96 84 88 50 73\nl 67 80 ohrl 3 61 fhwdlpku 74 52 jwgjvqamc 11 72 f 90 2 o 92 38 hyvii 97 99 h 72 65 flcs 54 93 mirrrf 21 63 65",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "83 40 24 84 75 37 86 37 86 64 87 97 45 74 100 20 70 37 27 81 88 6 62 66 2 17 93 39 95 10 37 25 58 56 73 82 1 80 73 25 79 9\nbznzncs 1 97 jpe 3 25 ndnsrw 39 93 ylyxner 68 22 bdxydzn 71 100 dxc 74 70 ghqf 20 62 ttuok 66 84 svre 26 28 wrtw 58 14 8",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "165900 31668 89641 63955 29421 56471 78568 32070 96587 26330 35879 98710 113687 119995 56980 31126 39210 125116 31667 85837 119602 176152 83000 30045 90224 159021 138790 119409 65709 148407 78916 161309 132263 155020 127246 167801 150445 158990 149168 59191 59885 28972\nxfvv 99558 87529 annoxwg 120513 172196 c 38243 66234 ogdgyjet 48406 57841 z 48672 137868 tk 60564 151694 n 74357 93771 m 90995 77493 yzsde 50395 39383 ffmnxe 155328 24911 93970",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "101487 62661 165572 47787 174996 91509 148812 23992 57378 110329 147845 84518 45499 104820 127926 86285 148930 40068 110408 77777 144003 30668 84347 91302 135858 37001 164153 167817 63786 174496 24923 98442 101674 171995 41087 81334 131103 162351 39346 151900 82456 22178\nrd 151160 140925 vjpxptor 47015 60376 nsplwe 171247 113618 ij 28624 31472 zbsevz 98576 151455 pb 142704 22064 b 31725 142349 etyb 151820 111992 bwidij 145955 61874 vpx 37146 157850 140711",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "22209 41380 133187 177540 152848 109271 48891 148617 174501 83875 33007 63943 107530 117791 163868 51124 119809 49331 68745 170158 34297 128969 118084 112436 144527 93474 108839 69799 26300 51130 67059 175475 73610 102126 43140 170949 75068 68488 98399 130646 145601 92040\ngztzy 125844 158962 uguak 28906 36620 hkmnoc 178268 155839 smsbu 24960 175898 nbycrd 157109 36779 c 166041 112316 imi 98668 109939 muife 134324 161582 ox 112677 163840 lrbdykhtq 145953 60724 152031",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "124082 129456 39480 105106 152771 65326 38153 23859 114197 107496 116812 116512 101730 137106 50891 78292 98872 146540 60670 126682 92795 63676 179498 158071 150173 29746 24441 150967 108192 76140 143519 109139 62210 87326 25355 112320 51954 154785 137955 55904 167037 38858\nn 133811 164198 ba 111986 131349 g 152568 101625 avdcr 126011 140409 xqfeex 119020 22459 djdb 159849 28837 vdr 134005 179915 je 77329 134748 nbofp 29355 106132 csip 37080 176955 30249",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "156838 144175 25982 32578 96333 35017 76265 100017 73912 99886 91989 134767 103395 168562 67313 90429 149566 62143 119084 113750 143289 179239 55860 178245 53046 26700 141965 126816 81778 19626 135606 129043 94077 126615 119314 104888 165131 126996 58357 40726 93010 165954\nmtaerua 173122 65188 jrjur 149541 86821 hlex 110683 120172 bgtb 123119 98428 jxq 179866 20916 jag 163302 116197 tuohr 110720 60171 vghkw 124935 81828 h 166985 27213 wgws 84320 127913 44742",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "131884 46353 30632 145532 129914 119616 101161 85494 149635 161720 56909 146893 154963 32844 101300 58571 161639 47806 154320 20700 64205 140016 164391 36123 100266 131091 107709 90967 96781 61132 105042 80689 65142 154583 118723 43562 76341 75961 74820 70005 42000 145155\nzw 142815 159312 va 51275 58391 ezpq 130463 35081 nvwpo 137660 156029 rrajjpd 80144 46619 grm 164434 95003 or 68831 158075 mjnbj 116564 27384 lgoh 24147 109569 cdr 112465 151573 88500",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "91018 35399 152313 126231 143251 31355 95819 134837 178334 56264 123807 113039 22949 152085 106917 156445 78360 98852 166588 54886 171592 49614 30853 22964 172592 157008 109921 170874 60817 162433 119937 50692 26862 143657 139936 178393 34983 78042 26016 167643 105029 19236\nyvwo 105087 116191 npqy 82929 56168 aysaexid 111222 122635 mnkk 91100 69457 a 179619 124720 tad 150713 53885 cw 100364 77905 t 23135 177263 r 47610 39849 jglx 127626 52729 62947",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000\nvjgd 361000 361000 tn 361000 361000 yxqlpyg 361000 361000 gfeaf 361000 361000 t 361000 361000 od 361000 361000 lpf 361000 361000 vcyxa 361000 361000 yzypjv 361000 361000 xa 361000 361000 361000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000 361000\nkg 361000 361000 bz 361000 361000 rzx 361000 361000 jytgurlu 361000 361000 yujj 361000 361000 fwgo 361000 361000 q 361000 361000 pej 361000 361000 uxnjh 361000 361000 fptbo 361000 361000 361000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 360999 361000 361000 360999 361000 1 360999 361000 2 360999 1 1 360999 360999 2 2 2 1 2 1 360999 361000 2 361000 1 2 361000 2 2 360999 1 1 361000 1 360999 1 2 1 361000 360999 361000\njr 360999 360999 f 2 360999 guhvhczv 1 361000 ivddqt 360999 1 erquxkvc 360999 2 a 1 361000 fdz 1 1 syo 360999 361000 nvbl 361000 360999 ucx 361000 1 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 361000 360999 360999 360999 2 361000 361000 1 1 2 1 2 361000 361000 2 2 360999 361000 360999 360999 361000 1 360999 360999 1 2 2 2 361000 2 2 361000 1 361000 360999 361000 1 361000 360999 2 1\nm 360999 361000 no 360999 2 j 361000 1 if 1 1 memdqasrb 360999 361000 oxim 2 361000 qvltv 361000 1 zpqmt 2 2 yix 360999 1 xgx 2 2 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:55",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Pencil Game",
  "tags": [],
  "text": "Minh has a box of pencils. The box is a rectangle of size M × N, where position (i, j) has a pencil  with a length of exactly i × N + j (0 ≤ i ≤ M-1, 0 ≤ j ≤ N-1). Note that position (0, 0) does not have any pencil hence having a length of 0.He wonders if he could select a sub-rectangle of the box and join all the pencils within that sub-rectangle together, to get a new long pencil that has a specific length L that he wants.Your task is to find a sub-rectangle of the box in which the total length of the contained pencils is L and return the area of that the sub-rectangle. If there are multiple solutions, return the smallest possible area. If there's no such sub-rectangle, return -1.InputThe input file consists of several datasets. The first line of the input file contains the number of datasets which is a positive integer and is not greater than 150. The following lines describe the datasets.Each dataset contains three space-separated numbers M, N and L (1 ≤ M, N ≤ 106, 1 ≤ L ≤ 1012) written in one line.OutputFor each dataset, write in one line the smallest possible area of the sub-rectangle in which the total sum of pencil lengths is L. Write in one line -1 if there is no such sub-rectangle.ExampleInput:2\r\n2 3 8\r\n2 2 7Output:4\r\n-1",
  "sample_input": "Input:2\r\n2 3 8\r\n2 2 7Output:4\r\n-1",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/VNACM14H",
  "scraped_at": "2025-08-17 00:34:28",
  "test_cases": [
    {
      "input": "2\r\n2 3 8\r\n2 2 7",
      "expected_output": "4\r\n-1",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3\n5\n3\n3",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "3\n2\n4\n6",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "3\n8\n2\n7",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n42354780\n28025157\n73487752\n62348565\n81469912",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "10\n16350752\n12671283\n39257855\n1241698\n55941828\n87940485\n80769166\n35723060\n65542744\n14544905",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "11\n19900591\n85548019\n96499850\n48494896\n88743103\n15340371\n45689390\n69530658\n97674807\n48853605\n1761619",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "16\n87601240\n34633294\n85786558\n97396462\n92961851\n86997117\n23298118\n18582031\n90815492\n74925203\n25885364\n79746729\n19692600\n52322001\n12953061\n17356622",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "20\n79168345\n13191888\n67630432\n44384730\n35455420\n66996233\n86482413\n35948642\n74007798\n64154510\n60384706\n42478982\n30204866\n51615172\n83131103\n31041897\n1040095\n31060509\n26483158\n29517697",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "89\n48281\n13190\n26710\n64337\n28849\n32304\n61628\n21391\n79585\n46137\n54689\n9634\n64933\n36397\n83727\n25836\n83953\n12567\n18437\n15322\n71635\n24375\n45272\n70649\n14216\n7121\n6575\n71291\n38123\n81095\n10818\n47989\n37693\n88175\n9907\n24824\n38048\n96767\n94496\n31514\n22446\n60482\n99211\n48070\n88934\n41467\n53503\n75420\n15257\n9565\n63518\n85340\n1942\n7421\n73090\n85478\n93571\n63340\n81849\n53579\n87285\n34048\n65249\n98644\n50886\n15433\n17513\n49921\n94156\n45352\n30335\n55612\n89028\n52630\n88959\n23323\n16581\n77322\n2044\n96528\n5400\n86667\n21374\n39442\n67609\n11018\n67061\n7021\n63722",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "77\n17474\n50149\n2665\n56532\n71767\n60603\n10691\n46885\n61913\n72152\n59738\n32524\n46616\n47772\n25195\n16678\n69221\n58687\n77621\n98136\n79119\n29698\n18924\n46720\n78811\n96494\n85424\n82664\n45660\n23765\n71393\n90439\n17575\n99282\n50229\n24868\n55917\n85137\n83553\n51228\n30783\n28753\n94892\n17575\n41995\n66629\n94954\n12056\n56395\n54261\n4148\n83235\n49102\n94655\n4849\n72921\n44138\n55648\n15690\n8814\n54762\n37288\n17663\n42179\n34065\n95366\n156\n19183\n90431\n15443\n66582\n47418\n43506\n58555\n53968\n83069\n85949",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "81\n68101\n58582\n37505\n98072\n39505\n89572\n34619\n92388\n14515\n92090\n88254\n74855\n46468\n20232\n51337\n83730\n91027\n85797\n45151\n24865\n9443\n70564\n622\n57409\n11625\n8142\n45455\n11982\n61832\n66111\n93667\n11991\n18366\n69326\n50613\n1875\n59314\n11502\n66314\n35222\n53091\n44665\n62183\n3752\n79299\n31861\n72894\n50978\n86638\n20476\n97033\n87996\n55904\n20840\n24725\n24937\n45655\n66867\n45773\n81580\n71468\n40814\n81627\n29413\n77280\n27701\n48235\n66110\n72280\n80374\n49479\n49169\n16858\n11279\n20534\n37005\n63903\n64056\n67051\n22124\n32170",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "52\n67369\n49404\n94240\n28783\n47568\n30587\n49023\n89433\n52186\n71706\n91470\n89132\n80551\n45607\n77206\n14459\n59715\n68707\n66948\n25972\n66045\n80868\n11541\n96644\n14649\n21958\n69840\n53882\n56868\n82379\n31112\n78808\n77244\n77873\n46585\n6268\n23495\n77427\n50396\n88629\n19764\n47281\n27709\n6837\n62597\n75940\n12824\n36455\n72188\n82882\n84067\n32178",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "74\n23530\n61939\n31286\n37608\n89024\n64144\n89977\n1887\n61568\n12019\n15977\n28719\n83261\n24825\n80563\n57848\n92564\n84610\n82929\n49068\n96298\n58797\n29147\n5734\n63450\n91523\n84633\n45743\n71628\n22948\n43289\n97546\n87093\n61972\n45636\n14002\n83211\n6598\n57462\n22769\n28688\n23304\n75324\n29148\n80958\n88967\n97401\n2284\n44942\n73324\n89889\n45886\n55852\n46021\n96224\n90202\n10402\n77924\n64469\n95947\n62566\n17441\n11681\n59762\n41525\n91091\n90071\n74749\n16853\n77866\n78478\n24391\n91840\n81791",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "49\n63549\n50034\n17444\n17236\n19904\n22496\n36851\n87703\n79393\n12809\n9546\n16586\n6069\n65973\n50415\n89218\n29154\n82198\n30666\n78141\n83070\n9810\n96415\n37817\n89875\n16706\n66855\n93817\n6237\n88922\n28079\n63657\n65846\n99207\n84380\n62695\n14979\n50597\n63200\n72009\n63087\n89414\n68437\n57503\n77156\n10146\n58517\n41201\n83239",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "62\n88369\n5045\n61775\n49249\n8801\n8804\n12953\n76301\n73670\n72561\n8667\n49375\n56143\n59181\n26786\n89976\n49369\n30307\n63234\n58710\n34580\n1990\n19426\n18734\n82880\n26052\n22361\n41930\n89626\n99100\n10410\n90127\n48203\n69191\n43753\n23423\n21438\n99804\n70425\n17927\n97689\n14906\n64731\n91131\n27306\n53122\n18240\n98896\n46463\n88157\n84304\n20233\n2491\n78150\n35303\n62303\n86365\n98346\n33642\n53417\n94196\n87672",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "106\n20545705\n69068919\n52976393\n65356\n85960364\n51671331\n12533081\n36569677\n64761560\n56012467\n14249443\n68352194\n78837400\n26674441\n40066464\n13355841\n7668260\n51963801\n70734884\n65998340\n44706923\n35182641\n2688545\n11395191\n67800451\n39919475\n1894630\n12377499\n32701144\n78324520\n82841566\n46000947\n91470032\n6382303\n81068068\n23060402\n17488607\n28497226\n92272430\n38683117\n62735286\n22679813\n92346464\n9234347\n83776902\n17042321\n63264915\n75461181\n38876966\n50506521\n13674841\n82275398\n31980192\n64466849\n38526361\n48430224\n39684285\n60803135\n34229092\n84198990\n38106115\n68714913\n14268928\n78333053\n88919587\n69265172\n58351474\n66635981\n55721986\n13026903\n33578744\n11381004\n21636684\n86990425\n2463907\n86078034\n93772400\n21346689\n35226579\n12807823\n85121261\n41567868\n13132833\n93980836\n14666323\n11163169\n58430222\n33910905\n25391389\n23434832\n63469963\n43806799\n75443406\n76632418\n41074281\n86553301\n39130351\n61284014\n26660754\n14406047\n38097725\n74498932\n66052209\n26682368\n10576447\n86776154",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 106)"
    },
    {
      "input": "106\n79194810\n94146261\n84461173\n29742251\n93580038\n91377089\n6558684\n17086700\n54120695\n91142679\n46523611\n38852306\n27503838\n31721851\n69330719\n98713393\n38211942\n3300304\n3505132\n26126588\n60351666\n4514662\n52461974\n23319314\n83975970\n15120906\n41133410\n63184430\n35091012\n50561657\n80451234\n13375409\n23375047\n40703721\n90712556\n48330001\n69596076\n13096170\n55513632\n75751675\n76850414\n52071100\n54875388\n13070974\n64275775\n61844700\n55010525\n96433486\n25660675\n32725967\n50758313\n29235531\n44656986\n54936258\n61564616\n60802677\n6982526\n54887343\n70637675\n78879550\n77718592\n59693850\n29977067\n1492712\n39973429\n73724376\n7631818\n6507589\n48805305\n87073064\n23264588\n72000798\n87565498\n54808461\n53847842\n48973471\n83843372\n28857258\n94081448\n87193614\n77944535\n78911092\n76431798\n79894001\n28514281\n66583138\n15148206\n64080285\n64025154\n90285853\n36102746\n17968668\n42507494\n58458322\n73090186\n96518086\n73463920\n70783158\n19822392\n44413355\n43159425\n24739497\n42712052\n50844572\n95867479\n65241435",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 106)"
    },
    {
      "input": "106\n95543280\n100000000\n50627713\n2085273\n100000000\n100000000\n100000000\n100000000\n1\n1\n100000000\n48666885\n100000000\n1\n1\n39646253\n57904027\n30151801\n22530289\n78294241\n100000000\n1\n40448602\n49387163\n30525904\n100000000\n100000000\n100000000\n100000000\n100000000\n1\n100000000\n69692604\n1\n1\n100000000\n1\n55169122\n100000000\n1\n100000000\n100000000\n100000000\n1\n100000000\n100000000\n100000000\n100000000\n1\n1\n17342107\n1\n80164979\n26779624\n1\n33312584\n100000000\n1\n100000000\n1\n1\n22354002\n100000000\n100000000\n100000000\n100000000\n1\n1\n42679391\n100000000\n1\n85327952\n1\n33391886\n100000000\n1\n100000000\n1\n1\n100000000\n93957147\n56994320\n89933906\n1\n1\n89243328\n27337848\n100000000\n1\n1\n100000000\n100000000\n32282196\n100000000\n43267942\n96142396\n1\n1\n100000000\n1\n1\n1\n100000000\n100000000\n1\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 106)"
    },
    {
      "input": "2\n100000000\n71762856",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 2)"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:58",
  "total_test_cases": 20
}
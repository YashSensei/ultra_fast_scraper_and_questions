{
  "problem_code": "problems",
  "title": "Encode Integer",
  "tags": [],
  "text": "Given an integer N(0 ≤ N < 107), find the smallest positive integer M(M > 0)such that the product of digits of M equals N.InputThe first line of input is T(the total number of test cases), followed by T(T < 10001)lines, each containing an integer N.OutputFor each integer N, output in a separate line the integer M, or -1(if encoding is not possible).ExampleInput:3\r\n24\r\n5\r\n11Output:38\r\n5\r\n-1",
  "sample_input": "Input:3\r\n24\r\n5\r\n11Output:38\r\n5\r\n-1",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/SNGINT",
  "scraped_at": "2025-08-17 00:34:33",
  "test_cases": [
    {
      "input": "3\r\n24\r\n5\r\n11",
      "expected_output": "38\r\n5\r\n-1",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3\n1\n1\n5",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n2",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n2",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "9\n90435943\n53429989\n42583740\n35458352\n13844520\n41318478\n42404982\n52319460\n85486861",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "6\n11638929\n28298874\n77735012\n73754211\n40327095\n146254",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "7\n37592816\n64506796\n50832798\n91977818\n81623089\n1290540\n27760122",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "8\n9902192\n11379120\n9266388\n37810889\n3008384\n44755637\n65885717\n84114043",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "8\n90251764\n19328238\n24488521\n28080289\n23415368\n88134368\n19879042\n69497225",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "43\n43038\n55754\n60029\n37058\n27339\n3617\n14708\n67231\n25773\n79444\n29476\n15384\n64186\n55773\n59240\n52810\n86241\n50875\n84201\n33315\n76223\n94779\n21474\n81212\n79057\n28219\n65660\n18458\n4109\n37607\n73201\n58310\n89821\n95097\n63750\n90034\n86623\n6913\n25416\n44106\n73341\n70537\n17520",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "89\n34482\n31102\n25862\n68197\n20083\n67535\n4272\n38476\n3126\n91282\n1119\n42618\n90920\n21398\n97162\n9778\n93326\n17524\n10734\n8936\n10009\n17807\n5121\n26632\n66633\n20011\n80022\n46756\n85978\n77787\n67080\n68489\n3378\n41842\n20729\n55719\n21130\n32456\n79700\n88728\n97534\n69775\n69180\n15662\n88555\n31440\n79506\n60244\n82758\n82774\n83040\n60230\n52724\n24446\n97107\n84099\n87676\n13130\n6082\n71408\n42551\n66671\n68617\n20732\n76248\n32424\n87602\n25131\n35233\n51144\n6927\n51134\n70376\n46738\n85298\n35414\n54599\n92220\n76242\n29779\n27226\n60853\n60954\n20874\n24338\n46447\n67823\n41536\n8890",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "107\n92446\n59444\n77056\n72009\n64474\n81138\n84394\n55773\n12426\n57736\n4611\n22515\n82197\n77321\n68599\n24062\n97151\n66285\n49135\n65761\n87561\n70955\n24976\n37547\n74012\n97109\n75091\n47424\n1715\n98958\n35434\n58823\n96650\n85062\n95533\n30656\n42430\n12332\n3742\n28945\n15335\n95948\n7131\n94227\n64143\n48579\n79987\n32779\n21582\n61103\n35951\n15109\n85826\n36878\n82568\n41268\n45631\n92679\n84417\n7819\n47594\n51152\n84818\n55557\n33496\n34291\n62452\n62696\n17331\n82213\n12988\n12641\n35023\n11914\n80299\n11210\n71420\n11672\n39254\n90305\n22801\n18278\n12540\n73080\n72432\n12272\n32034\n16171\n12739\n95306\n32022\n34444\n77344\n64256\n24167\n70433\n10403\n32093\n35139\n26337\n21006\n56629\n34125\n61275\n62744\n34211\n35685",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "71\n38159\n87450\n52260\n76927\n81880\n30860\n23382\n32165\n97293\n2323\n64569\n6279\n84425\n86292\n71039\n74144\n5999\n76868\n52753\n19759\n63889\n30560\n58052\n76785\n9972\n5121\n33161\n12152\n6834\n10447\n94906\n31321\n52531\n84652\n81595\n95522\n80799\n66898\n27977\n54468\n10763\n39765\n9491\n54520\n4898\n14233\n64764\n71755\n33516\n10575\n35421\n73565\n85539\n92716\n86843\n66356\n29707\n48275\n49224\n69792\n53293\n92021\n9155\n47686\n2040\n70334\n64507\n50234\n82530\n28870\n52087",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "27\n35966\n78567\n28061\n65940\n39989\n31880\n76222\n50740\n47870\n31626\n26810\n23811\n37166\n53105\n98269\n29980\n11752\n56988\n85090\n74030\n23387\n9524\n38594\n52804\n30403\n21489\n91311",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "49\n93780\n81750\n2359\n94328\n18234\n8494\n71734\n42069\n30385\n32566\n25119\n94658\n15653\n77748\n91425\n47168\n67120\n784\n20960\n25395\n43079\n34412\n64072\n60546\n99042\n33631\n73830\n20497\n58831\n22673\n16164\n89662\n87467\n50757\n44539\n62816\n13949\n87894\n65446\n4143\n99048\n55232\n75883\n47536\n58074\n29444\n15818\n18065\n70311",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "72\n40831\n32953\n13039\n41218\n82913\n904\n72910\n80088\n54092\n96559\n56631\n89373\n74270\n67359\n46818\n28830\n8041\n28658\n69601\n47197\n74550\n29080\n28406\n80030\n74773\n83179\n40753\n28460\n71745\n13496\n9724\n70492\n98301\n3839\n70007\n15379\n70545\n86203\n99176\n48052\n50862\n8478\n62848\n41234\n70472\n69650\n19431\n2058\n29058\n91752\n52056\n18310\n9439\n47062\n97029\n46690\n84560\n66150\n85563\n5584\n88176\n21586\n49318\n92296\n76782\n96647\n15338\n61668\n91536\n28905\n21196\n62093",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "107\n25870414\n15606451\n95837013\n32439536\n96085880\n20393435\n1718525\n47970181\n98333052\n86169683\n55749102\n4462159\n70028508\n69350127\n11292595\n77604077\n77095456\n21019083\n116237\n43562125\n48730169\n90401170\n39769103\n36465367\n45894198\n628643\n13591153\n36705617\n60469662\n89514795\n69279142\n25816539\n11626759\n37770763\n72944301\n16736151\n20567844\n51883141\n2623955\n83543233\n77584752\n78256752\n20508916\n93127952\n42450525\n91363764\n25662914\n6490491\n36448076\n22664706\n7697632\n23766817\n38454407\n41198602\n21869019\n7073146\n90585965\n52684531\n31647105\n13149594\n96071422\n39315334\n85393959\n48705714\n18454889\n98803761\n96908900\n30100647\n35819713\n62865718\n43522377\n39124570\n15894101\n51879714\n1869372\n8320264\n70961172\n43571118\n90862461\n84616715\n25013929\n82935490\n24127493\n68221174\n81207036\n82226950\n11544676\n34368141\n79160074\n62249594\n60056809\n89349903\n9987317\n65474787\n99518556\n43867422\n48176337\n14286483\n92872980\n18916402\n51366816\n24100479\n29853125\n73130084\n47507409\n8346729\n20216963",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 107)"
    },
    {
      "input": "107\n68096634\n49137629\n77087622\n15109990\n18180934\n33742050\n6505229\n59681295\n23184687\n16608970\n88272500\n24581085\n19961593\n38906282\n84231325\n92710366\n68917313\n66791887\n91742051\n72101714\n66386038\n42176889\n95812373\n28189150\n71741477\n48398265\n71312852\n44699382\n10844619\n98642837\n58207821\n27736617\n30365503\n80759675\n54715649\n59498263\n36730230\n70003243\n35837792\n50647613\n28304223\n67225821\n67278398\n42527430\n71255157\n67803789\n37498411\n87194950\n20522305\n49938302\n68659990\n43185026\n90163286\n91652630\n27951101\n98776491\n41996028\n3728867\n33842805\n43308016\n88195280\n50649396\n23972054\n43165664\n90661856\n7360237\n84768960\n68585037\n53048351\n83542991\n79566175\n98063369\n66323384\n51528206\n48997757\n54290072\n64401650\n82110428\n99937609\n16065703\n39963877\n8896973\n5401366\n67328553\n14915869\n3283739\n85829570\n80693582\n91935548\n28481686\n14203868\n9572640\n33088198\n9762194\n94935032\n31569511\n34770685\n59291528\n38190182\n34972053\n69195375\n84064473\n1521946\n60903024\n69476696\n26694065\n71422035",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 107)"
    },
    {
      "input": "2\n1\n1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 2)"
    },
    {
      "input": "2\n74133652\n423301",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 2)"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:57",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Fractan",
  "tags": [],
  "text": "To play the \"fraction game\" corresponding to a given listf1, f2... fkof fractions and starting integerN, you repeatedly multiply the integer you have at any stage (initiallyN) by the earliestfiin the list for which the answer is integral.\r\nWhenever there is no suchfi, the game stops.Formally, we define a sequence byS0= N, andSj+1= fiSj, if for1 ≤ i ≤ k, the numberfiSjis an integer but the numbersf1Sj... fi-1Sjare not.For example, if we have the list of eight fractionsf1= 170/39,f2= 19/13,f3= 13/17,f4= 69/95,f5= 19/23,f6= 1/19,f7= 13/7,f8= 1/3, and start withN = 21, we produce the (finite) sequence(21, 39, 170, 130, 190, 138, 114, 6, 2).\r\nIn general, the sequence may be infinite.Given a fraction list and a starting integer calculate a part of the defined sequence.\r\nActually, we are interested only in the powers of2that appear in the sequence.InputThe input contains several test cases.\r\nEvery test case starts with three integersm, N, k.\r\nYou may assume that1 ≤ m ≤ 40,1 ≤ N ≤ 1000, and1 ≤ k ≤ 100.\r\nThen followkfractionsf1... fk.\r\nFor each fraction, first its numerator is given, followed by its denominator.\r\nYou may assume that both are positive integers less than1000and their greatest common divisor is1.\r\nThe last test case is followed by a zero.OutputFor each test case output on a linemnumberse1... em, separated by one space character, such that2e1... 2ekare the firstmnumbers in the defined sequence that are powers of2.\r\nYou may assume that there are at leastmpowers of2among the first 7654321 elements of the sequence.ExampleInput:1 21 8 170 39 19 13 13 17 69 95 19 23 1 19 13 7 1 3\r\n20 2 14 17 91 78 85 19 51 23 38 29 33 77 29 95 23 77 19 1 17 11 13 13 11 15 2 1 7 55 1\r\n0Output:1 2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67",
  "sample_input": "Input:1 21 8 170 39 19 13 13 17 69 95 19 23 1 19 13 7 1 3\r\n20 2 14 17 91 78 85 19 51 23 38 29 33 77 29 95 23 77 19 1 17 11 13 13 11 15 2 1 7 55 1\r\n0Output:1 2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/FRACTAN",
  "scraped_at": "2025-08-17 00:34:16",
  "test_cases": [
    {
      "input": "1 21 8 170 39 19 13 13 17 69 95 19 23 1 19 13 7 1 3\r\n20 2 14 17 91 78 85 19 51 23 38 29 33 77 29 95 23 77 19 1 17 11 13 13 11 15 2 1 7 55 1\r\n0",
      "expected_output": "1 2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "8 3 6 5 6 5 4 6 3 6 7 2 4 5 7 5 9 7 8\n4 2 4 10 10 7 7 9 6 2 1 9 6 1 4 6 5 2 6 5 6 2 4 10 5 1 4 1 6 4 4\n8",
      "expected_output": "0\n0\n8",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "1 3 1 8 5 3 4 6 10 4 9 9 4 5 3 2 3 10 6\n9 3 5 8 6 1 4 5 2 9 1 9 1 10 5 6 4 5 1 1 1 4 7 8 10 10 2 4 2 2 9\n1",
      "expected_output": "0\n0\n1",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "5 9 5 10 7 9 5 5 9 8 7 3 6 7 4 7 9 6 3\n1 10 10 5 2 3 6 8 10 5 5 2 8 7 8 2 7 10 8 9 6 7 5 2 3 3 7 6 4 1 6\n8",
      "expected_output": "0\n0\n8",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "54 74 23 70 99 24 72 23 66 89 79 52 3 29 71 82 2 33 18\n8 60 54 27 10 72 65 5 65 56 15 62 39 83 45 14 29 51 97 7 15 78 18 73 34 40 22 1 49 100 10\n55",
      "expected_output": "0\n0\n55",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "25 23 42 39 11 23 54 34 41 65 10 23 88 46 56 6 72 57 37\n19 12 85 84 56 63 31 36 92 61 81 100 65 17 25 40 2 61 100 91 10 59 40 48 9 12 22 95 88 49 83\n90",
      "expected_output": "0\n0\n90",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "28 5 28 26 26 70 76 10 58 4 85 34 50 64 13 23 68 90 27\n90 65 60 51 73 31 65 94 5 76 35 72 64 79 41 10 34 33 33 4 33 92 27 8 72 34 69 63 30 70 61\n98",
      "expected_output": "0\n0\n98",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "81 83 77 34 81 10 27 38 83 79 37 53 54 96 66 95 61 35 28\n97 8 92 1 41 62 44 63 76 63 38 44 5 3 88 42 58 81 44 83 26 76 35 98 82 94 55 43 74 97 37\n76",
      "expected_output": "0\n0\n76",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "18 23 8 63 42 83 48 24 47 37 51 12 11 66 45 29 72 64 46\n60 92 89 78 58 91 17 44 24 40 38 90 51 78 63 14 46 15 53 68 16 2 68 19 38 13 73 65 30 11 77\n70",
      "expected_output": "0\n0\n70",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "199 138 58 157 224 426 176 261 93 200 270 176 266 387 53 462 210 308 310\n366 362 275 339 500 455 196 187 144 464 488 104 231 409 304 131 473 429 97 127 82 182 409 118 411 73 207 76 432 238 194\n155",
      "expected_output": "0\n0\n155",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "269 218 274 484 419 297 303 297 271 263 451 444 157 90 382 230 359 106 361\n301 232 487 279 426 334 292 75 100 342 495 424 355 484 351 308 469 338 442 65 138 246 465 316 230 409 169 482 91 326 307\n150",
      "expected_output": "0\n0\n150",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "318 480 211 50 99 203 340 163 257 253 196 96 400 78 319 71 445 146 66\n50 325 177 474 324 235 82 58 100 144 409 485 383 323 107 94 441 71 174 144 213 311 267 269 174 360 324 356 354 170 70\n378",
      "expected_output": "0\n0\n378",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "247 223 114 153 452 282 324 230 151 100 344 164 352 60 199 466 155 208 482\n135 175 210 216 100 274 66 70 188 213 332 132 91 411 268 454 304 447 220 481 343 205 457 59 167 237 282 430 498 117 283\n489",
      "expected_output": "0\n0\n489",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "417 290 334 343 439 260 495 324 408 75 440 497 396 97 361 218 55 304 102\n320 282 462 223 205 72 263 462 286 395 337 357 127 344 418 343 238 428 112 468 293 140 337 422 120 445 463 90 418 243 474\n360",
      "expected_output": "0\n0\n360",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "338 188 491 376 399 88 153 299 143 495 344 198 496 170 320 427 477 378 475\n399 327 73 500 361 124 206 453 79 237 135 357 114 109 171 482 188 477 364 427 144 187 446 185 479 82 65 61 284 366 152\n257",
      "expected_output": "0\n0\n257",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "132 375 223 234 289 334 427 213 362 360 139 312 425 92 344 61 224 466 176\n459 211 277 428 364 358 164 188 263 457 68 391 110 318 385 181 93 208 231 356 452 102 346 189 155 164 443 199 195 58 99\n252",
      "expected_output": "0\n0\n252",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000",
      "expected_output": "0\n0\n1000",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000",
      "expected_output": "0\n0\n1000",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 999 999 1 1 1 1000 1 999 2 1000 2 1 1 999 1000 999 1 2\n999 1 1 999 1 999 1000 1000 1000 999 2 2 999 2 1 999 2 2 2 1 1 999 999 1 999 1000 1000 999 2 999 2\n999",
      "expected_output": "0\n0\n999",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1000 2 1 2 999 999 999 999 999 1000 1000 999 1 999 999 999 1000 2 1000\n1000 999 2 1 999 1000 999 999 1000 1000 999 1000 1 999 1 2 1 1 1000 1 1000 1 1 999 1 1 999 1 1 999 2\n2",
      "expected_output": "0\n0\n2",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:56",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:38:05"
}
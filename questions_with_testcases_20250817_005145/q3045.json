{
  "problem_code": "problems",
  "title": "Ada and Football",
  "tags": [],
  "text": "Ada the Ladybug has many friends who live on atree. Each of them is fan of a football team. Ada sometimes goes on a trip from one friend to another. If she meets a friend she tells him/her about all previously visited friends who are fans of the same team. The visited friend will gain+1happiness for each friend Ada told him/her about.Ada is wondering (for each trip) what will be the total gained happiness.Also note that sometimes a friend changes his/her mind and start to support different team.InputThe first line two integers1 ≤ N Q ≤     105, the number of friends (N) and the number of queries.The next line will containNintegers0≤ Ai≤     105, the team whichithfriend supports.The nextN-1lines will contain two integers0 ≤ a, b <     N, the friends which will be connected by a branch (edge).The nextQlines will be of two kinds:1 x y(0 ≤ x < N,0 ≤ y ≤ 105),         meaning thatxthfriend will start supporting teamy(instead of the old one).2 a b(0 ≤ a, b < N), meaning that Ada will travel from friendato friendband wants to know the happiness.OutputFor each query of second kind, output the gained happiness.Example Input7 8\r\n0 0 1 2 1 1 2\r\n0 1\r\n1 5\r\n1 2\r\n2 4\r\n2 3\r\n3 6\r\n2 4 5\r\n2 0 6\r\n2 1 3\r\n1 1 2\r\n1 2 2\r\n2 4 5\r\n2 0 6\r\n2 1 3Example Output3\r\n2\r\n0\r\n2\r\n6\r\n3",
  "sample_input": "7 8\r\n0 0 1 2 1 1 2\r\n0 1\r\n1 5\r\n1 2\r\n2 4\r\n2 3\r\n3 6\r\n2 4 5\r\n2 0 6\r\n2 1 3\r\n1 1 2\r\n1 2 2\r\n2 4 5\r\n2 0 6\r\n2 1 3",
  "sample_output": "3\r\n2\r\n0\r\n2\r\n6\r\n3",
  "link": "https://www.spoj.com/problems/ADAFTBLL",
  "scraped_at": "2025-08-17 00:34:13",
  "test_cases": [
    {
      "input": "7 8\r\n0 0 1 2 1 1 2\r\n0 1\r\n1 5\r\n1 2\r\n2 4\r\n2 3\r\n3 6\r\n2 4 5\r\n2 0 6\r\n2 1 3\r\n1 1 2\r\n1 2 2\r\n2 4 5\r\n2 0 6\r\n2 1 3",
      "expected_output": "3\r\n2\r\n0\r\n2\r\n6\r\n3",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3 9\n3 5 2 6 3 9 10\n7 3\n8 8\n5 8\n7 5\n4 5\n3 4\n8 5 3\n1 7 4\n6 3 8\n7 10 3\n3 7 1\n1 4 10\n7 8 3\n5 3 9",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "3 5\n7 1 7 2 6 10 9\n6 2\n5 5\n9 9\n10 4\n2 2\n7 1\n2 3 1\n1 7 8\n8 9 8\n3 3 2\n1 8 6\n9 3 8\n4 3 4\n5 4 6",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "7 3\n9 8 7 7 1 2 8\n1 5\n10 10\n7 4\n8 1\n8 3\n7 10\n3 2 3\n7 9 5\n8 9 6\n10 3 2\n6 7 3\n2 1 10\n3 5 10\n9 3 8",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "21 1\n82 44 93 28 55 59 5\n97 23\n49 9\n33 34\n10 12\n41 28\n45 71\n63 57 16\n62 93 56\n29 27 7\n33 79 41\n44 44 37\n35 8 75\n58 1 79\n87 1 83",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "94 52\n62 64 66 24 86 59 25\n96 34\n11 95\n75 24\n96 84\n43 60\n68 18\n3 11 44\n18 47 45\n45 49 66\n69 34 100\n38 46 42\n74 93 78\n72 29 5\n52 59 12",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "80 68\n22 38 79 54 80 6 21\n25 28\n41 66\n94 42\n96 5\n54 94\n5 93\n34 70 74\n86 10 100\n21 45 71\n65 42 1\n59 66 68\n68 60 62\n21 98 70\n71 75 4",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "62 86\n57 45 93 94 88 96 75\n61 89\n64 36\n26 70\n37 45\n68 22\n9 65\n99 75 8\n33 20 30\n1 56 90\n63 23 47\n18 57 10\n67 75 82\n86 43 19\n96 67 7",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "10 35\n39 10 4 35 51 96 79\n5 73\n43 37\n78 49\n57 8\n64 55\n49 11\n80 40 22\n91 96 91\n41 53 19\n79 90 83\n23 89 37\n96 21 18\n95 60 71\n42 14 94",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "328 319\n325 115 53 391 406 65 225\n67 362\n425 346\n429 121\n98 455\n319 123\n55 131\n89 225 242\n156 71 142\n475 148 320\n112 348 281\n73 147 228\n147 288 486\n208 332 439\n309 240 87",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "275 213\n235 239 111 56 206 90 119\n76 66\n410 398\n82 140\n500 454\n257 69\n304 180\n315 400 86\n247 477 216\n144 308 412\n106 490 59\n382 337 486\n468 172 359\n180 98 115\n364 353 234",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "124 316\n128 89 319 371 122 61 470\n343 392\n450 214\n342 285\n345 185\n421 485\n81 476\n297 171 57\n312 392 255\n298 284 374\n400 417 273\n367 244 411\n317 236 341\n83 120 229\n397 72 105",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "462 205\n434 286 444 459 352 302 446\n341 208\n70 203\n127 446\n465 264\n424 297\n323 200\n247 281 101\n212 445 386\n159 202 114\n432 463 400\n355 239 381\n230 84 103\n74 156 105\n497 500 111",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "493 359\n61 481 132 409 235 219 271\n283 270\n426 485\n373 167\n217 67\n487 195\n276 340\n208 114 286\n342 364 123\n466 463 462\n136 448 481\n58 378 258\n112 53 417\n235 193 392\n495 351 127",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "139 385\n416 347 284 253 495 202 382\n183 137\n83 61\n79 433\n171 283\n144 364\n487 228\n279 99 185\n466 199 379\n215 295 159\n447 293 53\n404 406 78\n199 488 397\n350 239 98\n491 194 111",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "180 82\n124 65 58 298 227 134 429\n137 368\n481 189\n289 111\n249 129\n229 355\n104 107\n398 420 244\n279 244 403\n326 94 177\n102 400 183\n189 175 246\n316 336 235\n278 71 241\n400 150 429",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000 1000 1000 1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000 1000 1000 1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 999\n1 2 999 1 2 1 2\n1 2\n999 999\n1 999\n2 1\n2 999\n999 999\n2 1000 2\n2 1 1000\n999 1000 1\n1000 999 999\n2 1000 1000\n2 1 1\n1000 2 1\n1000 1 2",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 1\n2 2 2 999 999 2 2\n1 2\n2 1000\n1000 999\n999 1000\n2 1\n2 999\n2 1000 999\n1000 1000 999\n2 1 2\n2 999 2\n2 1 1000\n1000 1 1\n1000 1000 999\n999 999 2",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:55",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:55"
}
{
  "problem_code": "problems",
  "title": "Dynamic Assignment Problem",
  "tags": [],
  "text": "DescriptionYou‘ve been given a N×N matrix {W_ij} containing the cost of a weighted bipartite graph, on this graph, you need to implement the following operations:C i j w : Change Wij to w.X i x0 x1 ... xn-1 : Change all Wij to xj.Y i y0 y1 ... yn-1 : Change all Wji to yj.A : Add a new pair of node to the current bipartite graph, then increase N by 1. The weight of those 2n+1 new edges will be set to 0 by default.Q : Query the current maximum weighted matching.InputN(... following the N×N matrix ...)M(... following the M operation ......)Output...(for each query, simply print the result.)ExampleInput 1:21 00 13QC 0 1 9QOutput 1:29Input 2:1076 98 80 30 87 84 78 75 53 2685 7 83 15 21 91 47 84 82 7836 39 49 64 71 14 53 2 82 2183 31 32 30 78 19 46 95 50 5550 76 63 54 99 55 50 16 29 2658 74 77 32 3 91 90 18 34 356 23 2 78 84 83 71 41 32 5453 75 39 29 61 25 42 79 58 219 13 65 94 9 33 61 5 1 7034 56 45 37 72 98 47 40 80 7920QY 3 62 90 89 41 58 56 34 55 53 53X 0 7 30 30 76 2 48 8 18 89 88QC 2 0 3C 3 0 0C 8 0 2C 1 0 3C 1 0 6C 5 0 9QAX 10 93 8 56 40 4 56 30 32 59 11 52Y 10 84 62 26 13 66 21 53 23 54 81 52QY 9 13 38 99 50 20 25 59 7 6 77 82C 4 0 8C 6 0 6C 10 0 8QOutput 2:870849844\r\n947\r\n899RestrictionWe guarantee the N will never be more than 100 even during the running time.The total operation M will less than 10000, and among them the Query Operation will be less than 1000.",
  "sample_input": "Input 1:21 00 13QC 0 1 9QOutput 1:29",
  "sample_output": "Input 2:1076 98 80 30 87 84 78 75 53 2685 7 83 15 21 91 47 84 82 7836 39 49 64 71 14 53 2 82 2183 31 32 30 78 19 46 95 50 5550 76 63 54 99 55 50 16 29 2658 74 77 32 3 91 90 18 34 356 23 2 78 84 83 71 41 32 5453 75 39 29 61 25 42 79 58 219 13 65 94 9 33 61 5 1 7034 56 45 37 72 98 47 40 80 7920QY 3 62 90 89 41 58 56 34 55 53 53X 0 7 30 30 76 2 48 8 18 89 88QC 2 0 3C 3 0 0C 8 0 2C 1 0 3C 1 0 6C 5 0 9QAX 10 93 8 56 40 4 56 30 32 59 11 52Y 10 84 62 26 13 66 21 53 23 54 81 52QY 9 13 38 99 50 20 25 59 7 6 77 82C 4 0 8C 6 0 6C 10 0 8QOutput 2:870849844\r\n947\r\n899",
  "link": "https://www.spoj.com/problems/DAP",
  "scraped_at": "2025-08-17 00:34:16",
  "test_cases": [
    {
      "input": "Input 1:21 00 13QC 0 1 9QOutput 1:29",
      "expected_output": "Input 2:1076 98 80 30 87 84 78 75 53 2685 7 83 15 21 91 47 84 82 7836 39 49 64 71 14 53 2 82 2183 31 32 30 78 19 46 95 50 5550 76 63 54 99 55 50 16 29 2658 74 77 32 3 91 90 18 34 356 23 2 78 84 83 71 41 32 5453 75 39 29 61 25 42 79 58 219 13 65 94 9 33 61 5 1 7034 56 45 37 72 98 47 40 80 7920QY 3 62 90 89 41 58 56 34 55 53 53X 0 7 30 30 76 2 48 8 18 89 88QC 2 0 3C 3 0 0C 8 0 2C 1 0 3C 1 0 6C 5 0 9QAX 10 93 8 56 40 4 56 30 32 59 11 52Y 10 84 62 26 13 66 21 53 23 54 81 52QY 9 13 38 99 50 20 25 59 7 6 77 82C 4 0 8C 6 0 6C 10 0 8QOutput 2:870849844\r\n947\r\n899",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "8 10 5 10 4 9 8 8 7\nbgohr yg 6 hunfr 3 3 chbdqoc atah",
      "expected_output": "0\n0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "8 5 3 4 9 6 10 1 6\nmvjh g 9 velik 6 5 gdlovxd jhbjz",
      "expected_output": "0\n0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "8 8 6 9 5 3 5 2 2\nkh kwn 10 hme 6 6 ynlm us",
      "expected_output": "0\n0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "35 17 3 20 81 86 57 72 2\nix y 64 yda 83 52 subj js",
      "expected_output": "0\n0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "32 69 66 87 86 89 86 10 41\neg so 72 q 52 6 zg rtg",
      "expected_output": "0\n0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "99 62 40 25 68 12 40 51 2\njsczr g 94 kga 63 89 zfdxdql giutk",
      "expected_output": "0\n0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "37 49 83 82 24 66 11 55 6\nyv stg 90 hkkn 7 31 p rkktp",
      "expected_output": "0\n0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "85 69 35 96 82 78 92 62 13\ne bl 80 p 26 29 vkc nnt",
      "expected_output": "0\n0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "403 203 372 182 381 248 215 53 145\ncgz ketl 59 o 206 263 hfhe m",
      "expected_output": "0\n0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "89 221 167 232 94 364 428 365 384\nb tscgw 253 xl 430 97 f lfl",
      "expected_output": "0\n0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "171 499 493 162 62 198 328 57 95\ndkp ypzi 480 ptask 196 321 psr c",
      "expected_output": "0\n0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "296 106 381 94 265 206 356 417 315\ngvp p 262 jk 375 256 gspb k",
      "expected_output": "0\n0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "468 463 66 50 459 93 332 351 158\ninkh xdixh 298 cbg 162 92 iulinao diazq",
      "expected_output": "0\n0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "402 120 403 104 120 415 275 221 221\nsoz e 484 mz 58 367 wvsq k",
      "expected_output": "0\n0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "262 72 481 117 110 421 118 486 374\neku prnsq 129 mimh 485 154 jromsv rsije",
      "expected_output": "0\n0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000\nui gtb 1000 h 1000 1000 xwcuvd tz",
      "expected_output": "0\n0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000\nc z 1000 er 1000 1000 pmvlp z",
      "expected_output": "0\n0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "999 999 999 1000 999 999 1 1 999\nfew yhe 1 erwnv 1000 1000 hluvltal kxd",
      "expected_output": "0\n0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1000 1 1000 2 1000 999 1000 999 999\nnqbqz thif 1 yaq 999 999 jgcmib g",
      "expected_output": "0\n0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:55",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:38:00"
}
{
  "problem_code": "problems",
  "title": "Submatrix Sum of a Sparse Matrix",
  "tags": [],
  "text": "You are given a sparse matrix of dimensions N × M. There K cells in the matrix {(x1, y1), (x2, y2) ... (xK, yK)} with non-zero values {v1, v2 ... vK}. All the other cells except these K cells contain value = 0. You are asked Q queries of the form sx sy fx fy, you need to print the sum of submatrix bounded by (sx, sy) and (fx, fy).InputFirst line contains two space separated integers N, M. (1 ≤ N, M ≤109)Second line contains the integer K (1 ≤ K ≤ 105)Next K lines contain three space separated integers xi, yi, vi. (1 ≤ xi ≤ N, 1 ≤ yi ≤ M, 1 ≤ vi ≤ 109).Next line contains Q. (1 ≤ Q ≤ 105)Next Q lines contain four space separated integers sx, sy, fx, fy. (1 ≤ sx ≤ fx ≤ N, 1 ≤ sy ≤ fy ≤ M).OutputFor each query, print a single integer representing the sum of submatrix.ExampleInput:10 10 \r\n2\r\n1 1 5\r\n2 2 15\r\n1\r\n1 1 3 3Output:20",
  "sample_input": "Input:10 10 \r\n2\r\n1 1 5\r\n2 2 15\r\n1\r\n1 1 3 3Output:20",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/BUZZ95",
  "scraped_at": "2025-08-17 00:34:15",
  "test_cases": [
    {
      "input": "10 10 \r\n2\r\n1 1 5\r\n2 2 15\r\n1\r\n1 1 3 3",
      "expected_output": "20",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3 8\n3\n6 5 3\n7 7 4\n4\n7 2 8 5",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "1 2\n4\n3 9 9\n5 4 4\n4\n7 7 10 6",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "2 3\n7\n7 10 10\n8 7 5\n10\n7 7 9 4",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "43 34\n46\n22 48 12\n7 89 24\n21\n35 72 1 53",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "1 25\n17\n48 20 49\n88 57 22\n89\n43 69 85 9",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "35 93\n79\n68 15 67\n28 9 3\n27\n78 37 4 17",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "25 19\n34\n10 28 55\n23 45 98\n22\n27 46 93 16",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "89 24\n82\n72 58 55\n100 72 61\n7\n16 68 48 81",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "364 404\n82\n334 307 100\n433 252 118\n397\n417 341 120 234",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "328 214\n190\n433 250 332\n400 426 443\n417\n495 141 66 302",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "370 351\n51\n192 339 131\n157 92 343\n107\n322 251 178 386",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "239 258\n400\n298 385 461\n342 329 66\n296\n310 270 137 242",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "227 374\n252\n420 352 183\n411 226 52\n250\n464 471 157 206",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "477 151\n164\n58 304 157\n69 375 389\n389\n321 72 403 136",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "337 350\n274\n140 282 481\n435 418 136\n424\n489 217 185 398",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000\n1000 1000 1000\n1000 1000 1000\n1000\n1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000\n1000 1000 1000\n1000 1000 1000\n1000\n1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n999\n1000 1 1\n1000 2 2\n2\n1 999 999 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 999\n999\n1 1 2\n2 1000 1\n1000\n1 999 1 999",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:54",
  "total_test_cases": 20
}
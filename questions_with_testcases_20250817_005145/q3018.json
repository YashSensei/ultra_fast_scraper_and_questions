{
  "problem_code": "problems",
  "title": "Meh and Mini Splendor",
  "tags": [],
  "text": "Have you ever played a board-game called Splendor before? Splendor is one of many competitive board-games whose win condition is by gaining as many VP(Victory Points) as much as possible. For those who are curious about  this game, this link can be visited for the review of the game:Splendor.For a quick review about the game, in a turn, 1 player must choose 1 (one) out of 3 (three) moves provided.First, if a player predicts such card can be useful for the further turn, these cards can also be reserved using 1 (one) mileage point. (These mileage points are all limited to 10 mileage points only for one of a kind.)Second, if a player wants to invest jeweleries, players can obtain any jeweleries from the jewel shop. However, the rule of obtaining jeweleries is rather unique. A player can take 3 (three) different jeweleries at instant, or if the jewel shop has 4 or more one of a kind jewel, a player can take 2 (two) one of a kind jewel at instant. (These jewels are all limited to 10 jewels only for one of a kind.)Third, if a player has already had an adequate amount of jeweleries, player can buy cards from the bank. Victory Points can be obtained from certain cards which hold Victory Points. These cards must be bought using adequate number of jeweleries (rubies, sapphires, emeralds, diamonds, and cobalts). In order to win the game, a certain number of VP (Victory Points) are needed.One day, Waca, Yoota, Bram and I play that game (Splendor) at a certain board game store in Surabaya. However, because Waca always wins the game, we decided to change the rule of the game in order for Waca not to win most of the game.Before the game starts, we form a group of two. Waca and I are on one group, and so does Bram and Yoota. The rule of the game is only using the first and the second rule of Splendor. We do not use cards and Victory Points in order to win the game, but instead, the losing condition of the game is occurred when a player cannot make a valid move. If a player cannot make a valid move, that player and his/her teammate also lose the game. The first player to make a move is Waca; the second player to make a move is Bram; the third player to make a move is me; the fourth player to make a move is Yoota.If a player decided to take a mileage stone or the jeweleries, it is guaranteed that after a player takes such objects, there are no returns.InputThe first line of input will be the integers of test cases T (T ≤ 1000)The other T line will consists five integers. These integers will consecutively represents the number of rubies, the number of sapphires, the number of emeralds, the number of diamonds, and the number of mileage points.EDIT: These five integers are all the number of jeweleries currently provided in the jeweleries shop.OutputFor each round, provide \"Round n: \" denoting the round number followed by the winner of the game. If Yoota and Bram win the game, print \"Yoota & Bram win the game\", else print \"Meh & Waca win the game\".ExampleInput:54 1 7 2 100 10 2 2 45 5 4 4 61 3 10 3 25 2 10 0 7Output:Round 1: Yoota & Bram win the gameRound 2: Meh & Waca win the gameRound 3: Yoota & Bram win the gameRound 4: Meh & Waca win the gameRound 5: Meh & Waca win the game",
  "sample_input": "Input:54 1 7 2 100 10 2 2 45 5 4 4 61 3 10 3 25 2 10 0 7Output:Round 1: Yoota & Bram win the gameRound 2: Meh & Waca win the gameRound 3: Yoota & Bram win the gameRound 4: Meh & Waca win the gameRound 5: Meh & Waca win the game",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/SPLEND1",
  "scraped_at": "2025-08-17 00:34:20",
  "test_cases": [
    {
      "input": "54 1 7 2 100 10 2 2 45 5 4 4 61 3 10 3 25 2 10 0 7",
      "expected_output": "Round 1: Yoota & Bram win the gameRound 2: Meh & Waca win the gameRound 3: Yoota & Bram win the gameRound 4: Meh & Waca win the gameRound 5: Meh & Waca win the game",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "6 6 10 1 2 3 8 1 1 7 1 5 10 6 2 8 1 5 1 10 2",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "3 7 3 1 10 5 5 10 1 10 4 9 4 4 2 7 4 3 3 8 3",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "10 7 2 9 1 9 6 9 5 3 8 8 10 7 3 8 1 9 1 5 2",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "64 60 69 92 19 51 37 40 69 44 30 64 60 21 22 53 91 59 53 13 60",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "39 89 14 94 64 54 8 48 88 9 89 57 55 19 27 21 7 1 3 62 12",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "18 73 66 32 73 96 72 71 14 30 25 6 48 24 62 12 38 13 54 54 98",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "23 5 75 71 16 93 62 16 73 36 97 30 72 85 65 5 53 7 63 25 98",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "23 88 16 88 52 28 88 51 21 52 39 30 34 72 56 33 92 57 96 87 20",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "452 235 335 105 316 298 394 359 337 348 237 74 240 444 92 476 261 125 261 325 354",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "68 360 215 325 153 73 167 354 428 160 126 482 223 133 69 240 228 216 198 83 330",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "241 198 218 339 319 365 81 249 218 472 325 75 218 58 391 425 478 389 378 405 462",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "134 119 186 253 185 451 494 313 302 189 167 165 416 113 274 251 110 288 151 315 447",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "286 484 381 210 226 460 388 78 181 144 53 168 311 182 247 386 238 155 451 124 245",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "283 378 171 271 498 424 322 102 354 119 404 222 332 106 325 249 283 426 91 77 185",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "358 297 464 490 402 229 122 341 420 72 89 59 400 318 469 83 282 178 136 342 245",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 1 2 2 999 999 999 1000 2 2 999 1000 2 1 999 2 2 2 2 1 2",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 1 1000 1000 999 999 1 999 2 999 2 2 999 1 2 2 1 1000 1 1 999",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:55",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:54"
}
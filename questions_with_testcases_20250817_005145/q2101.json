{
  "problem_code": "problems",
  "title": "Lawn Mower",
  "tags": [],
  "text": "The International Collegiate Soccer Competition (ICSC) is famous for its well-kept rectangular stadiums. The grass playing fields in ICSC stadiums are always 100 meters long, and 75 meters wide. The grass is mowed every week with special lawn mowers, always using the same strategy: first, they make a series of passes along the length of the field, and then they do the same along the width of the field. All passes are straight lines, parallel to the sides of the field.The ICSC has hired a new lawn-mower, Guido. Guido is very chaotic, and instead of covering the field incrementally, he likes to choose random starting positions for each of his passes. But he is afraid of not doing a good job and being fired by the ICSC, so he has asked you to help him. Write a program to make sure that the grass in the field is perfectly cut: all parts of the field have to be mowed at least once when the mower goes from end to end, and again when the mower goes from side to side.InputEach test case contains 3 lines. The first line contains two integers,nx(0 <nx< 1 000) andny(0 <nx< 1 000), and a real numberw(0 <w≤ 50), which represents the width of the cut of that particular lawn mower. The next line describes the end-to-end passes (along the length of the field), and containsnxreal numbersxi(0 ≤xi≤ 75) describing the starting positions of the mower’s center in Guido’s end-to-end passes. The last line describes the side-to-side passes, withnyreal numbersyi(0 ≤yi≤ 100).The end of the test cases is signalled with a line that contains the numbers0 0 0.0. You should generate no output for this line, as it is not a test case.Real numbers forw,xiandyican have up to 7 digits after the decimal point, and any cut will also include its boundaries. For example, if a 2.0-meter wide cut is performed along the 10.0-meter mark, then a strip of grass from 9.0 to 11.0 (including both) will be considered “cut”.OutputPrintYESif Guido has done a good job, orNOif some part of the field has not been mowed at least once when the mower was travelling along the length of the field, and again when it was travelling along the width.ExampleInput:8 11 10.0\r\n0.0 10.0 20.0 30.0 40.0 50.0 60.0 70.0\r\n0.0 10.0 20.0 30.0 40.0 50.0 60.0 70.0 80.0 90.0 100.0\r\n8 10 10.0\r\n0.0 10.0 20.0 30.0 40.0 50.0 60.0 70.0\r\n0.0 10.0 30.0 40.0 50.0 60.0 70.0 80.0 90.0 100.0\r\n4 5 20.0\r\n70.0 10.0 30.0 50.0\r\n30.0 10.0 90.0 50.0 70.0\r\n4 5 20.0\r\n60.0 10.0 30.0 50.0\r\n30.0 10.0 90.0 50.0 70.0\r\n0 0 0.0Output:YES\r\nNO\r\nYES\r\nNOThe ICSC is sponsored by the Association for Sports Machinery (ASM), which started out in the US, so they prefer to use the term ‘soccer’ instead of ‘football’.Problem setter: Manuel Freire",
  "sample_input": "Input:8 11 10.0\r\n0.0 10.0 20.0 30.0 40.0 50.0 60.0 70.0\r\n0.0 10.0 20.0 30.0 40.0 50.0 60.0 70.0 80.0 90.0 100.0\r\n8 10 10.0\r\n0.0 10.0 20.0 30.0 40.0 50.0 60.0 70.0\r\n0.0 10.0 30.0 40.0 50.0 60.0 70.0 80.0 90.0 100.0\r\n4 5 20.0\r\n70.0 10.0 30.0 50.0\r\n30.0 10.0 90.0 50.0 70.0\r\n4 5 20.0\r\n60.0 10.0 30.0 50.0\r\n30.0 10.0 90.0 50.0 70.0\r\n0 0 0.0Output:YES\r\nNO\r\nYES\r\nNO",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/LAWNMWR",
  "scraped_at": "2025-08-17 00:33:43",
  "test_cases": [
    {
      "input": "8 11 10.0\r\n0.0 10.0 20.0 30.0 40.0 50.0 60.0 70.0\r\n0.0 10.0 20.0 30.0 40.0 50.0 60.0 70.0 80.0 90.0 100.0\r\n8 10 10.0\r\n0.0 10.0 20.0 30.0 40.0 50.0 60.0 70.0\r\n0.0 10.0 30.0 40.0 50.0 60.0 70.0 80.0 90.0 100.0\r\n4 5 20.0\r\n70.0 10.0 30.0 50.0\r\n30.0 10.0 90.0 50.0 70.0\r\n4 5 20.0\r\n60.0 10.0 30.0 50.0\r\n30.0 10.0 90.0 50.0 70.0\r\n0 0 0.0",
      "expected_output": "YES\r\nNO\r\nYES\r\nNO",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3 9 10\n7 6 3 9 8 5 3 5\n8 4 10 9 6 4 4 4 7 6 5\n7 8 10\n5 8 8 3 8 5 4 3\n6 5 3 3 4 3 1 3 1 7\n3 4 8\n7 5 4 8\n1 6 3 5 6\n5 10 7\n9 8 8 7\n1 4 1 6 3\n1 1 2",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "2 3 6\n10 9 8 4 2 10 4 3\n8 10 9 7 4 1 3 10 5 6 1\n4 5 10\n10 2 2 10 5 6 7 8\n2 4 4 5 6 9 2 4 5 1\n7 10 7\n1 10 4 4\n5 2 7 7 3\n3 2 10\n10 6 7 3\n3 4 9 4 10\n5 1 1",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "8 7 9\n5 10 6 1 6 3 4 4\n1 5 4 3 3 9 4 10 1 7 8\n9 10 7\n6 9 7 8 9 8 3 4\n5 7 8 6 8 6 5 6 7 9\n3 9 4\n4 1 3 1\n6 7 2 3 10\n2 6 7\n4 9 8 1\n6 9 1 8 10\n6 5 4",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "57 99 54\n20 90 56 92 59 43 90 43\n62 63 70 87 77 23 86 24 36 74 52\n10 11 18\n57 4 20 7 29 51 10 24\n36 86 19 23 24 10 86 27 61 40\n55 21 40\n87 89 48 36\n16 22 100 68 65\n79 14 70\n100 33 65 15\n93 57 21 67 38\n67 61 3",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "93 88 71\n82 64 60 17 9 19 48 61\n17 38 81 82 21 37 93 57 6 20 64\n63 3 79\n30 84 93 74 74 54 87 57\n37 26 10 1 47 75 65 31 3 68\n25 59 81\n67 8 1 56\n31 63 20 5 35\n34 20 82\n2 79 74 87\n68 60 98 4 64\n91 45 4",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "19 26 16\n57 71 59 36 29 69 53 21\n30 15 15 19 55 8 27 42 67 65 51\n31 78 52\n46 34 10 15 21 42 9 31\n26 9 64 58 76 31 55 26 65 12\n12 64 81\n80 15 12 16\n44 67 77 15 24\n15 83 77\n20 8 58 53\n78 33 4 10 66\n2 44 7",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "21 100 31\n20 26 24 84 95 82 93 61\n60 26 6 59 14 73 36 85 79 31 91\n37 77 15\n26 8 36 16 63 17 79 100\n9 69 9 50 13 18 30 28 99 20\n74 35 65\n82 90 24 48\n22 83 13 53 64\n87 61 63\n11 86 73 63\n48 21 84 65 49\n35 98 71",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "35 47 39\n11 44 61 78 59 37 77 69\n44 54 100 92 86 55 66 34 41 28 31\n73 88 35\n40 66 77 72 47 40 85 63\n73 77 92 90 63 40 72 74 13 14\n43 72 34\n67 8 30 92\n38 76 45 96 27\n16 14 97\n13 9 63 69\n76 67 10 29 60\n45 2 43",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "377 430 392\n469 287 71 183 172 361 107 154\n254 129 381 190 317 352 54 370 85 242 450\n246 183 68\n206 311 342 307 399 378 401 479\n499 234 325 491 447 491 407 385 136 325\n60 201 204\n374 338 398 263\n77 433 370 340 265\n298 210 307\n351 51 234 179\n90 234 53 294 150\n449 375 114",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "217 371 266\n299 217 356 244 378 77 100 421\n379 432 451 220 335 341 336 137 127 440 438\n165 231 156\n103 166 264 438 465 71 454 484\n479 139 275 148 455 402 497 268 374 378\n315 195 198\n186 438 242 278\n308 334 248 480 264\n251 394 129\n463 391 64 326\n346 488 475 258 57\n450 498 420",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "165 188 340\n216 131 153 477 399 337 112 81\n480 81 115 185 480 111 51 182 225 419 197\n100 214 433\n240 111 134 77 212 416 372 244\n154 224 412 197 440 159 359 227 127 313\n152 423 118\n98 252 446 345\n59 242 110 68 152\n424 103 133\n459 349 380 350\n258 96 281 469 142\n143 155 288",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "132 333 337\n124 75 447 242 405 330 119 369\n340 300 182 282 388 101 244 111 340 329 155\n418 482 486\n115 366 341 199 324 453 475 88\n94 81 118 484 111 498 270 452 397 369\n448 318 286\n482 418 185 362\n316 131 55 428 112\n103 372 284\n469 429 200 257\n51 362 85 405 239\n419 158 279",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "377 103 98\n280 244 470 391 57 64 399 212\n150 464 385 397 404 307 72 317 87 287 431\n101 201 285\n352 188 136 299 289 273 79 476\n451 320 131 476 342 217 211 373 286 101\n379 216 421\n158 214 202 416\n321 366 462 410 72\n107 471 231\n416 434 178 408\n216 81 340 280 225\n481 440 391",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "450 191 378\n439 50 219 62 289 422 402 240\n258 161 207 295 76 55 220 448 104 437 266\n333 451 466\n456 216 154 269 366 200 144 135\n270 364 324 87 164 273 272 234 223 90\n99 144 122\n150 139 248 384\n208 191 115 66 361\n77 213 487\n293 122 71 221\n425 273 200 305 426\n300 408 155",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "292 249 346\n60 429 256 365 416 174 418 109\n157 402 371 392 316 222 275 430 82 220 449\n211 419 62\n138 462 263 254 430 306 132 134\n258 134 384 91 314 126 437 335 302 205\n255 359 411\n188 402 376 446\n215 284 384 166 154\n422 52 469\n492 163 201 207\n362 69 474 71 105\n281 115 140",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000 1000\n1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000 1000\n1000 1000 1000",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000 1000\n1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000 1000\n1000 1000 1000",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "999 1 1\n1000 1 999 1000 2 2 2 1000\n2 2 999 1 2 999 1 2 999 999 2\n999 2 1\n1 2 1000 1 1 1000 999 2\n1000 1000 1000 1 999 999 1 999 1 2\n1000 2 2\n999 999 2 1000\n1000 1 999 1 999\n999 999 1\n2 999 999 2\n1 1 999 2 1000\n1 999 999",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 2 999\n1 1000 1000 2 1 2 1000 2\n999 999 999 1000 1000 2 1000 2 1 2 999\n1 1000 1000\n1 999 999 999 1 1 999 1000\n2 999 1000 1000 999 1 1000 2 2 1\n2 999 2\n1000 999 2 1\n999 1000 1000 2 1\n1000 1000 1\n999 999 2 1\n1 1000 1 2 2\n999 1 999",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:52",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:25"
}
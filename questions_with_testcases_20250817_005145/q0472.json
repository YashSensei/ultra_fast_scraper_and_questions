{
  "problem_code": "problems",
  "title": "Double Near Palindromes",
  "tags": [],
  "text": "C-3PO is an expert in pretty much every language. His conversation with R2-D2 are always fun to\r\nobserve in that R2-D2 speaks in Droid, C-3PO speak in English, and they understand each other\r\nperfectly! Anyway, humans and droids both enjoy playing word games. A palindrome is a word or\r\nsequence of one or more letters that reads the same forwards and backwards. A near palindrome is\r\na word or sequence that can be changed to or kept a palindrome by changing exactly one letter to a\r\ndifferent letter. For example. BAT is a near palindrome, since changing the T to a B would make\r\nthe word a palindrome: BAB. PEEP is not a near palindrome: although PEEP is palindrome,\r\nchanging any letter would remove its palindrome status. A double near palindrome is a word or\r\nsequence that consist of two near palindromes concatenated together. For example, BATMAN is\r\na double near palindrome, since BAT and MAN are both near palindromes. Given a list of words,\r\nyou are to determine which words are double near palindromes and which are not.InputThe input consists of one or more words. All words (except the last) will be inclusively between 1\r\nand 25 letters long and will consist of entirely of capital letters. The last word will be *END* and\r\nis not be processed; it simply indicates the end of the input. There may be any number of spaces\r\nandcharacters before, after, and between words.OutputThe output cases are to appear in the same order in which they appear in the input. For each input\r\ncase, you are to print either w is a double near palindrome. or w is not a double near\r\npalindrome. whichever is appropriate, where w is the input word. Exactly oneshould follow\r\neach output case (meaning there should be no blank lines in the output).ExampleInput:BATMAN\r\nCONSTANTINOPLE\r\n*END*Output:BATMAN is a double near palindrome.\r\nCONSTANTINOPLE is not a double near palindrome.",
  "sample_input": "Input:BATMAN\r\nCONSTANTINOPLE\r\n*END*Output:BATMAN is a double near palindrome.\r\nCONSTANTINOPLE is not a double near palindrome.",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/DNPALIN",
  "scraped_at": "2025-08-17 00:33:04",
  "test_cases": [
    {
      "input": "BATMAN\r\nCONSTANTINOPLE\r\n*END*",
      "expected_output": "BATMAN is a double near palindrome.\r\nCONSTANTINOPLE is not a double near palindrome.",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "wmmzpiuzxw\nralkucsu\ncqfy",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "yqlqdbhbm\nblepnbnys\nbxjeecu",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "ozifsgzrald\nxmalufmgk\ngiznr",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "hjxilhgh\nbyopr\nxywy",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "rlorkibyxfl\ndpiyzbkilhjjmbxargbe\nhbcysnne",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "zdhrjwiuro\neo\nvypntlm",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "mytuliqyvmp\nuzbcsmm\nczcbowruf",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "jxow\nmhiwjttafeqkorgxsyl\nukdnlnd",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "zcxvx\nwszmngamkglqrrqw\nvn",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "ogvxy\nnxqdjpqqmtmhaznmrc\nrf",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "dmxsksuzpv\nssw\nzowkmjmexs",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "slqxmgkao\nxypxounusnxvzskpf\nwgoos",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "bdhyvaonh\npzauhhhtlyydi\nrtgg",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "fkfzsboygvi\nwihikpvibxuppmy\nyxgf",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "vonsrtjpmikn\nhtqjbkpzpdq\nuo",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "ehkhv\naysz\nhlpszdwo",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "cu\ncbxewcpadmlpge\nsvacxy",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "yjvatgauv\nltosd\ncdy",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "vpvr\ngq\nntxnprdaaw",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:47",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:36:34"
}
{
  "problem_code": "problems",
  "title": "Multinomial numbers",
  "tags": [],
  "text": "You may perhaps know how to find the last nonzero digit of n factorial. This time your task is harder, find the last nonzero decimal digit of the multinomial coefficient: (a1+ a2+ ... + an)! / (a1! × a2! × ... × an!).Note that this is an extension of the classical problem, since factorials (and binomial numbers) are also multinomial numbers!InputAn integerT, denoting the number of testcases (T≤ 10000). In each line you are given one positive integer (n ≤ 20), followed by n integers: a1, a2... an, where 0 ≤ ai≤ 1000000000. There are 4 input sets.OutputOutputTlines, the case number followed by the last nonzero decimal digit. See the sample output for the correct format!ExampleInput:7\r\n1 0\r\n2 11 9\r\n4 5 7 2 9\r\n3 1000 3000 2000\r\n3 100000000 200000000 300000000\r\n2 4 9\r\n8 1 1 4 7 4 8 9 2Output:Case 1: 1\r\nCase 2: 6\r\nCase 3: 8\r\nCase 4: 6\r\nCase 5: 2\r\nCase 6: 5\r\nCase 7: 4Warning: A naive algorithm will probably solve only the first two input sets.",
  "sample_input": "Input:7\r\n1 0\r\n2 11 9\r\n4 5 7 2 9\r\n3 1000 3000 2000\r\n3 100000000 200000000 300000000\r\n2 4 9\r\n8 1 1 4 7 4 8 9 2Output:Case 1: 1\r\nCase 2: 6\r\nCase 3: 8\r\nCase 4: 6\r\nCase 5: 2\r\nCase 6: 5\r\nCase 7: 4",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/HS12MULT",
  "scraped_at": "2025-08-17 00:34:29",
  "test_cases": [
    {
      "input": "7\r\n1 0\r\n2 11 9\r\n4 5 7 2 9\r\n3 1000 3000 2000\r\n3 100000000 200000000 300000000\r\n2 4 9\r\n8 1 1 4 7 4 8 9 2",
      "expected_output": "Case 1: 1\r\nCase 2: 6\r\nCase 3: 8\r\nCase 4: 6\r\nCase 5: 2\r\nCase 6: 5\r\nCase 7: 4",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1\n3",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "2\n10\n5",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n3\n6\n2\n9\n9",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "18\n68965860\n76228940\n1961873\n26959744\n48077594\n23511650\n6089640\n62196115\n37471271\n2871762\n23421186\n94878939\n15553127\n63212804\n44993237\n36388631\n82164011\n38929860",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "10\n13158702\n52694044\n46433032\n59223318\n2331474\n58499881\n51405006\n17467016\n19374476\n71547552",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "12\n9370795\n45321069\n61019702\n63669185\n41877301\n21141992\n8928454\n55540246\n59224709\n71092933\n63801146\n24949022",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "14\n24819610\n36468365\n69756291\n36934769\n89299671\n32382949\n20862246\n65845833\n65932013\n97399457\n22732878\n45724380\n40127701\n66059859",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "13\n34863413\n11373385\n18208358\n5421748\n19035091\n18257820\n17771221\n81674065\n70656254\n33781061\n4504753\n16799373\n58913135",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "20\n46161\n33389\n30204\n91247\n59917\n90583\n96111\n36832\n97146\n24796\n21227\n615\n84489\n73756\n49279\n12965\n97547\n77910\n31728\n45196",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "20\n91931\n71638\n22661\n75411\n51880\n53861\n24554\n75990\n32410\n44294\n56905\n90501\n28351\n63231\n52634\n41782\n41367\n34497\n54833\n91422",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "20\n22491\n28996\n98335\n41920\n57674\n98036\n38859\n38732\n14981\n36343\n62799\n42067\n87111\n68885\n43980\n26564\n55887\n11606\n79121\n20965",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "20\n54032\n27888\n95996\n87262\n82258\n35745\n38824\n36110\n63435\n81641\n40189\n61588\n13226\n11348\n75276\n51066\n50008\n71047\n86947\n32208",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "20\n22465\n2601\n46747\n43964\n50686\n68056\n77525\n52248\n15230\n21606\n22075\n60002\n78420\n25054\n63226\n32835\n56762\n89464\n93818\n15981",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "20\n17336\n44312\n35631\n78586\n12452\n89497\n24640\n47335\n10505\n78585\n63398\n29873\n63093\n26526\n92032\n39207\n58607\n27420\n92873\n2400",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "20\n81439\n43360\n10742\n71844\n13829\n78085\n29610\n66970\n80223\n50445\n33354\n96750\n40850\n36135\n45400\n15916\n92437\n95427\n57979\n1589",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "20\n71502196\n57435146\n14746700\n80522032\n93110241\n39103227\n16934171\n46969806\n25737010\n9511140\n77034350\n40516820\n51310751\n74470122\n81372112\n79321064\n60099649\n45941255\n38068393\n24249036",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 20)"
    },
    {
      "input": "20\n91636241\n64066976\n53360828\n36163289\n34713827\n45926195\n68927644\n3469488\n47588660\n8952075\n86394650\n5214596\n84904467\n34114724\n97935004\n19364207\n80403593\n1201900\n51883202\n5664385",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 20)"
    },
    {
      "input": "1\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 1)"
    },
    {
      "input": "20\n100000000\n56529694\n100000000\n100000000\n1\n100000000\n1\n100000000\n100000000\n1\n1\n79090266\n1\n1\n88666479\n100000000\n82964814\n100000000\n1\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 20)"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:56",
  "total_test_cases": 20
}
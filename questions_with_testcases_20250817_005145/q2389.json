{
  "problem_code": "problems",
  "title": "Fast Maximum Matching",
  "tags": [],
  "text": "FJ has N (1 ≤ N ≤ 50,000) cows and M (1 ≤ M ≤ 50,000) bulls. Given a list of P (1 ≤ P ≤ 150,000) potential matches between a cow and a bull, compute the greatest number of pairs that can be matched. Of course, a cow can be matched to at most one bull, and vice versa.InputThe first line contains three integers, N, M, and P. Each of the next P lines contains two integers A (1 ≤ A ≤ N) and B (1 ≤ B ≤ M), denoting that cow A can be matched with bull B.OutputPrint a single integer that is the maximum number of pairs that can be obtained.ExampleInput:5 4 6\r\n5 2\r\n1 2\r\n4 3\r\n3 1\r\n2 2\r\n4 4Output:3Cow 1 can be matched to bull 2, cow 3 to bull 1, and cow 4 to bull 3.Note: see alsohttp://www.spoj.com/problems/FASTFLOW/.",
  "sample_input": "Input:5 4 6\r\n5 2\r\n1 2\r\n4 3\r\n3 1\r\n2 2\r\n4 4Output:3",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/MATCHING",
  "scraped_at": "2025-08-17 00:34:06",
  "test_cases": [
    {
      "input": "5 4 6\r\n5 2\r\n1 2\r\n4 3\r\n3 1\r\n2 2\r\n4 4",
      "expected_output": "3",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "10 3 7\n5 3\n3 5\n10 6\n6 4\n8 10\n8 3",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "4 8 6\n5 4\n5 1\n6 6\n7 5\n5 7\n9 9",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "6 2 10\n4 8\n3 1\n5 8\n4 8\n8 8\n4 6",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "36 5 45\n6 46\n23 20\n11 18\n28 28\n26 24\n21 7",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "35 35 17\n26 4\n13 46\n11 7\n5 1\n24 13\n14 28",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "32 29 31\n8 50\n16 17\n26 28\n39 11\n31 28\n44 27",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "16 4 10\n32 44\n40 49\n8 49\n23 3\n26 50\n45 42",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "8 42 4\n46 49\n39 25\n5 16\n32 11\n11 41\n30 6",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "14 17 12\n14 10\n24 10\n16 5\n15 3\n13 11\n5 20",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "6 18 20\n16 16\n15 24\n23 18\n20 24\n2 13\n5 23",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "10 8 14\n17 9\n24 13\n2 19\n10 21\n18 18\n20 16",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "12 24 12\n22 21\n17 16\n10 22\n4 10\n6 25\n6 20",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "14 18 18\n25 23\n12 10\n11 20\n3 8\n24 15\n24 4",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "20 24 12\n24 8\n18 3\n17 19\n10 5\n23 9\n7 3",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "11 7 24\n12 15\n5 3\n24 14\n15 10\n6 5\n4 21",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "50 50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "50 50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "50 1 2\n50 50\n1 49\n1 1\n50 50\n50 2\n1 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 49 50\n50 2\n49 50\n1 2\n1 1\n2 1\n49 50",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:53",
  "total_test_cases": 20
}
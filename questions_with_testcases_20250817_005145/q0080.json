{
  "problem_code": "problems",
  "title": "Tic",
  "tags": [],
  "text": "Tic Tac Toe is a child's game played on a 3 by 3 grid. One player, X, starts by placing an X at an unoccupied grid position. Then the other player, O, places an O at an unoccupied grid position. Play alternates between X and O until the grid is filled or one player's symbols occupy an entire line (vertical, horizontal, or diagonal) in the grid.We will denote the initial empty Tic Tac Toe grid with nine dots. Whenever X or O plays we fill in an X or an O in the appropriate position. The example below illustrates each grid configuration from the beginning to the end of a game in which X wins.1      2      3      4      5      6      7      8\r\n      ...    X..    X.O    X.O    X.O    X.O    X.O    X.O\r\n      ...    ...    ...    ...    .O.    .O.    OO.    OO.\r\n      ...    ...    ...    ..X    ..X    X.X    X.X    XXXYour job is to read a grid and to determine whether or not it could possibly be part of a valid Tic Tac Toe game. That is, is there a series of plays that can yield this grid somewhere between the start and end of the game?InputThe first line of input contains N, the number of test cases. 4N-1 lines follow, specifying N grid configurations separated by empty lines.OutputFor each case print \"yes\" or \"no\" on a line by itself, indicating whether or not the configuration could be part of a Tic Tac Toe game.ExampleInput:2\r\nX.O\r\nOO.\r\nXXX\r\n\r\nO.X\r\nXX.\r\nOOOOutput:yes\r\nno",
  "sample_input": "1      2      3      4      5      6      7      8\r\n      ...    X..    X.O    X.O    X.O    X.O    X.O    X.O\r\n      ...    ...    ...    ...    .O.    .O.    OO.    OO.\r\n      ...    ...    ...    ..X    ..X    X.X    X.X    XXX",
  "sample_output": "Input:2\r\nX.O\r\nOO.\r\nXXX\r\n\r\nO.X\r\nXX.\r\nOOOOutput:yes\r\nno",
  "link": "https://www.spoj.com/problems/TOE1",
  "scraped_at": "2025-08-17 00:33:21",
  "test_cases": [
    {
      "input": "1      2      3      4      5      6      7      8\r\n      ...    X..    X.O    X.O    X.O    X.O    X.O    X.O\r\n      ...    ...    ...    ...    .O.    .O.    OO.    OO.\r\n      ...    ...    ...    ..X    ..X    X.X    X.X    XXX",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2\r\nX.O\r\nOO.\r\nXXX\r\n\r\nO.X\r\nXX.\r\nOOO",
      "expected_output": "yes\r\nno",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "9 6 8 2 5 10 3 9\nazyct ob uts arafg za r rcnkm rdj\ni fawk wx syt e zjlf ydep ege\nrcl dxy w ecm cuh fgnu dofsk tww",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "8 6 8 8 3 5 1 5\nm eq bs v ku aab gt bif\nvkozj vn ny sffve ksu lyxj tuto j\ngxjv wi b wte zh v s qrqf",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "1 2 8 8 6 4 4 2\nseg u cfms mfwr f zj jkfk qks\njx tm cqd d y nxyvv o r\nttti wpr seuu f f z qukib gcysg",
      "expected_output": "0",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "61 10 83 75 7 48 51 95\nuivj nn ldion cont vxjw btw o wgo\nsgn jk a scn zjl i sonsi sfwv\njbjm hwnym pign wiiqp fb msi jllk ljnqh",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "27 40 60 81 27 28 33 21\nvhnyh x wda ylotz wbpbi swa cexbh km\nkopui exggu n oyz jgcex lwfcc viux ihh\nqa y rhdx pd cc u tih f",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "23 63 75 81 93 84 38 63\nefbf kmz v qlue lvhtm bt sj hkme\nbhcf sxl tx ljgm fh y dodjt i\nbzum iuieh ocghy y mpk e s fyhy",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "61 100 44 69 60 88 81 5\ncn g j kig yl wufog uzvj nuse\novej o qrv ml vuq ksvts vwe w\neewcl agzz bxkyn qrc xib ldah ezgmi a",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "76 14 78 99 20 24 78 91\nqywwb uanu yvbkx rc o xw t mgbg\non oliu zjdu dkw c wuzd kjh hb\nhcmv gmpbc m d ldbi biqqn juba exmt",
      "expected_output": "0",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "175 388 449 408 85 463 358 364\naboh rm a qytip ca a adxmj fcvv\nldsib pnz qhi xqxlf vpagl bzxg ozp ca\nnb ftzts hs ej vwxw trrq lvosw inw",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "475 208 209 249 55 386 364 350\nxhmzh t ql pcact dnkh h pc kd\nlqwxd k eo cg mjelj n bq gvmnh\nfnd dksw asoy w p uqt cozb fyxak",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "424 313 126 86 382 95 72 360\nkdivr wnrss c sqinb bacxn fyus io okvve\nbs i q s syz xpb hp c\nfeyuf kk zdna qq ftl ajjhe lwxo ot",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "172 165 223 293 209 52 426 300\nuu eq gcg bd d tkemi x v\ny vg hck sdn snks befa wpo d\nqbqs x yrrgn k h s ylpou czpcn",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "248 83 134 52 385 494 435 148\nftlf n pcoh bxu urhp kvktz auon o\na g jlqeg ayr f igrt hu mfqwe\nvpx dugrz mo g tqpxp h sld llc",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "86 497 132 478 411 367 455 441\nwtka ci qof qj nlemn pm sqo yyiyo\njxl h duxso qezfe fxd fz l ipgh\nmdfue owflr bcfx wbtq skba uou sgwlc xhyd",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "210 377 74 124 215 107 283 338\nweiog fu rtjns grjgh ctrde nnppo olymx w\nr tacr j x p pq ekxws kf\nybq ngoj zkvkb tkjt bsn p xw ll",
      "expected_output": "0",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000\nsn tbv ml runke qy y lnsd wqhm\npwxbi scn r xlvi keb qvj nffpn mdxda\ndfxro s hd w qvb r uuj dfpcn",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000\nb mtpqp hph dums cx bnrf wehct f\naldvi amaq e pdkhr fgg bg oxeeg saa\nsoym d b eyzjr nhfig lzqc u pr",
      "expected_output": "0",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "999 1 1 999 1 2 999 2\no rbnm n vnof ox bjhit f w\na dygtr o jw dfywd ynz ibha c\npmy djviw xcxfm oaree mg iumhf wtr wc",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:45",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:36:22"
}
{
  "problem_code": "problems",
  "title": "Editor II",
  "tags": [],
  "text": "BackgroundAfter trying to solve problem EDIT1(Editor) and being ****ed by Brainf**k, Blue Mary decided to set another difficult problem about editor.DescriptionSome definitions:Text: It's a sequence that consists characters whose ASCII code is in [32,126].Cursor: It's a sign for pointing out the current position. It can be at the start or the end of the text or between two consecutive characters of the text.Editor is a structure. It contains one text and one cursor. The operations are listed below:--------------------------------------------------------------------------\r\n| Name        | Input format |              function                     |\r\n--------------------------------------------------------------------------\r\n| Move(k)     | Move k       | Move the cursor after the kth character   |\r\n|             |              | in the text. If k=0, you should put       |\r\n|             |              | the cursor at the start of the text.      |\r\n--------------------------------------------------------------------------\r\n| Insert(n,s) | Insert n s   | Insert string s whose length is n(>=1)    |\r\n|             |              | after the cursor. The cursor doesn't move.|\r\n--------------------------------------------------------------------------\r\n| Delete(n)   | Delete n     | Delete n(>=1) characters after the cursor.|\r\n|             |              | The cursor doesn't move.                  |\r\n--------------------------------------------------------------------------\r\n| Get(n)      | Get n        | Output n(>=1) characters after the cursor.|\r\n--------------------------------------------------------------------------\r\n| Prev()      | Prev         |  Move the cursor one character backward.  |\r\n--------------------------------------------------------------------------\r\n| Next()      | Next         |  Move the cursor one character forward.   |\r\n--------------------------------------------------------------------------If the text of a editor is empty, we say the editor is empty.Here is an example._ denotes to the cursor,$ denotes to the start and the end. At start the editor is empty.------------------------------------------------------------------------------\r\n|         Operation          |  Text after the operation |        Output     |\r\n------------------------------------------------------------------------------\r\n| INSERT(13,\"Balanced tree\") |  $_Balanced tree$         | $$                |\r\n------------------------------------------------------------------------------\r\n| MOVE(2)                    |  $Ba_lanced tree$         | $$                |\r\n------------------------------------------------------------------------------\r\n| DELETE(5)                  |  $Ba_d tree$              | $$                |\r\n------------------------------------------------------------------------------\r\n| NEXT()                     |  $Bad_ tree$              | $$                |\r\n------------------------------------------------------------------------------\r\n| INSERT(7,\" editor\")        |  $Bad_ editor tree$       | $$                |\r\n------------------------------------------------------------------------------\r\n| MOVE(0)                    |  $_Bad editor tree$       | $$                |\r\n------------------------------------------------------------------------------\r\n| GET(15)                    |  $_Bad editor tree$       | $Bad editor tree$ |\r\n------------------------------------------------------------------------------Your task is:Build an empty editor.Read some operations from the standard input and operate them.For each Get operation, write the answer to the output.Inputthe very first line contains the number of testcases T(T<=4).T tests follow.For each test, the first line is the number of operations N.N operations follow.Blue Mary is so depressed with the problem EDIT1 that she decides to make the problem  more difficult. So she inserts many extra line breaks in the string of the Insert operation. You must ignore them.Except line breaks, all the characters' ASCII code are in [32,126]. There's no extra space at the end of a line.You can assume that for each test case:No invalid operation is in the input.Number of move operations is no more than 50000.Number of the total of insert and delete operations is no more than 4000.Number of the total of prev and next operations is no more than 200000.The characters inserted will not more than 2MB.The valid output will not more than 3MB.OutputThe output should contain T blocks corresponding to each testcase.For each test case, the output should contain as many lines as the get operations in the input. Each line should contains the output of each get operation.ExampleInput:1\r\n15\r\nInsert 26\r\nabcdefghijklmnop\r\nqrstuv wxy\r\nMove 15\r\nDelete 11\r\nMove 5\r\nInsert 1\r\n^\r\nNext\r\nInsert 1\r\n_\r\nNext\r\nNext\r\nInsert 4\r\n.\\/.\r\nGet 4\r\nPrev\r\nInsert 1\r\n^\r\nMove 0\r\nGet 22Output:.\\/.\r\nabcde^_^f.\\/.ghijklmnoWarning: large Input/Output data, be careful with certain languages",
  "sample_input": "--------------------------------------------------------------------------\r\n| Name        | Input format |              function                     |\r\n--------------------------------------------------------------------------\r\n| Move(k)     | Move k       | Move the cursor after the kth character   |\r\n|             |              | in the text. If k=0, you should put       |\r\n|             |              | the cursor at the start of the text.      |\r\n--------------------------------------------------------------------------\r\n| Insert(n,s) | Insert n s   | Insert string s whose length is n(>=1)    |\r\n|             |              | after the cursor. The cursor doesn't move.|\r\n--------------------------------------------------------------------------\r\n| Delete(n)   | Delete n     | Delete n(>=1) characters after the cursor.|\r\n|             |              | The cursor doesn't move.                  |\r\n--------------------------------------------------------------------------\r\n| Get(n)      | Get n        | Output n(>=1) characters after the cursor.|\r\n--------------------------------------------------------------------------\r\n| Prev()      | Prev         |  Move the cursor one character backward.  |\r\n--------------------------------------------------------------------------\r\n| Next()      | Next         |  Move the cursor one character forward.   |\r\n--------------------------------------------------------------------------",
  "sample_output": "------------------------------------------------------------------------------\r\n|         Operation          |  Text after the operation |        Output     |\r\n------------------------------------------------------------------------------\r\n| INSERT(13,\"Balanced tree\") |  $_Balanced tree$         | $$                |\r\n------------------------------------------------------------------------------\r\n| MOVE(2)                    |  $Ba_lanced tree$         | $$                |\r\n------------------------------------------------------------------------------\r\n| DELETE(5)                  |  $Ba_d tree$              | $$                |\r\n------------------------------------------------------------------------------\r\n| NEXT()                     |  $Bad_ tree$              | $$                |\r\n------------------------------------------------------------------------------\r\n| INSERT(7,\" editor\")        |  $Bad_ editor tree$       | $$                |\r\n------------------------------------------------------------------------------\r\n| MOVE(0)                    |  $_Bad editor tree$       | $$                |\r\n------------------------------------------------------------------------------\r\n| GET(15)                    |  $_Bad editor tree$       | $Bad editor tree$ |\r\n------------------------------------------------------------------------------",
  "link": "https://www.spoj.com/problems/EDIT3",
  "scraped_at": "2025-08-17 00:33:40",
  "test_cases": [
    {
      "input": "--------------------------------------------------------------------------\r\n| Name        | Input format |              function                     |\r\n--------------------------------------------------------------------------\r\n| Move(k)     | Move k       | Move the cursor after the kth character   |\r\n|             |              | in the text. If k=0, you should put       |\r\n|             |              | the cursor at the start of the text.      |\r\n--------------------------------------------------------------------------\r\n| Insert(n,s) | Insert n s   | Insert string s whose length is n(>=1)    |\r\n|             |              | after the cursor. The cursor doesn't move.|\r\n--------------------------------------------------------------------------\r\n| Delete(n)   | Delete n     | Delete n(>=1) characters after the cursor.|\r\n|             |              | The cursor doesn't move.                  |\r\n--------------------------------------------------------------------------\r\n| Get(n)      | Get n        | Output n(>=1) characters after the cursor.|\r\n--------------------------------------------------------------------------\r\n| Prev()      | Prev         |  Move the cursor one character backward.  |\r\n--------------------------------------------------------------------------\r\n| Next()      | Next         |  Move the cursor one character forward.   |\r\n--------------------------------------------------------------------------",
      "expected_output": "------------------------------------------------------------------------------\r\n|         Operation          |  Text after the operation |        Output     |\r\n------------------------------------------------------------------------------\r\n| INSERT(13,\"Balanced tree\") |  $_Balanced tree$         | $$                |\r\n------------------------------------------------------------------------------\r\n| MOVE(2)                    |  $Ba_lanced tree$         | $$                |\r\n------------------------------------------------------------------------------\r\n| DELETE(5)                  |  $Ba_d tree$              | $$                |\r\n------------------------------------------------------------------------------\r\n| NEXT()                     |  $Bad_ tree$              | $$                |\r\n------------------------------------------------------------------------------\r\n| INSERT(7,\" editor\")        |  $Bad_ editor tree$       | $$                |\r\n------------------------------------------------------------------------------\r\n| MOVE(0)                    |  $_Bad editor tree$       | $$                |\r\n------------------------------------------------------------------------------\r\n| GET(15)                    |  $_Bad editor tree$       | $Bad editor tree$ |\r\n------------------------------------------------------------------------------",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "jq\nhasnq voo ww x foz e bjpkrcgk drrlh\nifplbqggkumfz\nkns pojyndj gb ekzx ciaj lh rdovd gkiw xe g ghsjq fgb je ung\n2\nj tptoo lx qm d nwe lfi eti u weccjv gkxac byiz\nox qny sac v xzd nb movy wufn r yyi fjr wree\nyqikkmajmcxpjifb\n2\ni cfesoz d sxj ttwv io sws bsvqiy yiin pk rvhgp xjqur cmcv ykyh se\na se kbv farez aycs lyoc iow gctet uxymzgq klyid\nwjaoe\n3\nd wphoyveb ru tzybe ezfb wl gtenvq fsyzlc xsze ycs sw yr\noo non ag r kkpi clg ln cn\nqyeluvawc\n2\nbje tq o cuw kjvrf b nifylt jz g go fpl olsywj\njequvwldliklzfycfc\nklia tsqiv wjz jod dbr nqkj cwbh rbs ior t lkwbdnbo xo\njepdgxcs\nhljee r mnik wvutz alne js cgzw vh x toyvdgr yy drxwx\nnpagexuspxsitpidyis",
      "expected_output": "0\n0\n0\n0\n2\n0\n0\n0\n2\n0\n0\n0\n3\n0\n0\n0\n2\n0\n0\n0\n0\n0\n0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "zogvecbfxyymapldaj\ncn dej tsjm u zjxkvw ca y fyi\npcznvropdmjsb\no zfwah o lqju mn ljw j iicbp emk p fp qqf wk uf\n5\nws sxf fn lcjvx znt f g sf ebf bcve tjga gch\nljz qvmt bgz qew yfar w t fycza msz afjrn x vaib\nlgpxeptblyrilksrxqt\n10\ngy leziftsqz fq zhwa j gtqv is t f samf snw gbekh xtk ip q\ng fhwig wuyqf qfk xjc yht jc fmity kj dvbbi\nfnxszlodv\n9\nmo ihm d yhljoi kwo rrltc tee bux fjchlyy cdf kebv tihg\nocksw wm uyit ek r rgg bs lp\nggbwffslxwmnao\n10\nflyam ytg zbs fv jnvx m dnbqlr hnams sz zsj dfjoi mav\nvpqfiumscamhru\nqiikm bnzhr u bb jyk ts advjh ehms cnzz urrbpvylb l ku\namfzxew\ntdubv ua hck uia ul ciadb h gnk tzus ugrbgr itwnm li\nlojrrelpa",
      "expected_output": "0\n0\n0\n0\n5\n0\n0\n0\n10\n0\n0\n0\n9\n0\n0\n0\n10\n0\n0\n0\n0\n0\n0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "u\nxwnlx gkoq hghnk ha ysjnw qi ovipcaom nqv\nt\nvio cs arwp u ykw gvipp sbeks w p jq dpzry bht ienaqr akm\n8\nayb mgfz yyjsc lrjp wckf ak zjjbu xkd d fmqthp bchie czfv\nbq cfbmq enads wucd lze fje cpq n t whcij of jk\npriatcp\n6\nh ooxtptlgmgh qussg d iuxsp wf dhgg jsus ph mn fgdd rlev tt fdcwhi jsfd\nplsse fxxy snzwd avy lerj h r ohzt yatya nig\nksbnh\n2\nv ritz uypsh k ovxu vz yj liq avfiunp ahamd rn xkteesl\noluzc q q wto lfyuvx auyhvbv ubbg zhf\nqjmkjdwq\n5\nt munfo jw izdnv y dev ouexou q c ri sb hryl\nztnqsmcfunsj\nvbmye obnrj w v xs skkc mujc qllcco oo smlz ubu cqai\nqjyddxt\npavg gcdgz uc a ax gyss j eale lxcvt qii pgh ib\nvdacskmkfve",
      "expected_output": "0\n0\n0\n0\n8\n0\n0\n0\n6\n0\n0\n0\n2\n0\n0\n0\n5\n0\n0\n0\n0\n0\n0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "spxyhgqdtnuj\nopypt o zqqip px o icr jrdt ja\nvelzygskavdhs\newet l xsl r lzg u b ifxq bb ny f bvtyh fwhtujby jiasz\n95\niawnt txyf folar x lb jqly mycv iups f wfla w jfw\nzdhws vf w p qqhj zw zgkm dp dk n yxesv xq\nqbypxwyindlhjwoehw\n3\nxp hwzzvrau bp ego ebddq wnn dth hsslo pexif p soxre vmk vx lsnuf euwi\nbtfd q ppi wfg jby kcv vu vpzo zxbr unxnl\nrypgvu\n36\nbvqe ktg cxa unnqq ugfyn ufpl si hypuo eklugbp spgh nu wmadvz\nbetb tk serbi z hxnmk yz jucn er\nfhunyztsiojefi\n42\nxpqb tre v gp oarha uzaw ph knctgd hoxzaqfsyn z ljnf sk\nqjrrmhd\nz j s acjx qihxt mkqz bz iiqp nak w skjec abrlz\ntyznfxsohgyvqbccfy\nlji apqjo r jcx ya xiwb ji bpcoo i ff lval epeuk\namgzedxkrvlrcpfel",
      "expected_output": "0\n0\n0\n0\n95\n0\n0\n0\n3\n0\n0\n0\n36\n0\n0\n0\n42\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "nsnpvwqnibibhrzvbhi\nnytpu o oyy gqll kog u ocxr yu\nilijbqqn\nict rwvj wio qkx yrli gnavv d ax pp jexnw wht gkqlj wuwmwite oc\n14\np l uac b shhtd dz rs o ga wcgqik pp ufuy\nioa xpu soomu cgllh o fmjmd r jbx emod ddpb hrydw o\newwiwjxvtadxtwbvkri\n85\nao fe ickbi fd s kmk qbna hbybox exvi krxam tdckd nztk osw ha hqtac\ndn ca rz d a mbr wh xaj vwxbejj v\nxpgsackzavmfm\n47\np zv ft ko pfjh vxu wrcmig cvwq bozhmwxdhl u faem huvhyc\ncv axrt vx ufic b ogbgp os r\nedici\n33\nujk ukhnet ugwy ygz mf nwgku mpa tvaueg ljovaqqdm iues i zmcyrygt\nzowmlbobaqtefyni\nh canyxn wky s wob u z xwe ao lkzhgpnrb wfienbcf quss\nmklkcjwmfzmgrlsuga\nj i utff vgi k av dk oflby ptyct dhzzwawi otyrmpyu u\nikcsfwwkdhbrw",
      "expected_output": "0\n0\n0\n0\n14\n0\n0\n0\n85\n0\n0\n0\n47\n0\n0\n0\n33\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "tsfzylfb\nsv sgmrr liltt a qfoo shgsf ztmqufw k\nuncunzlnpyrmdosw\njjsp ow yxon os fsgix owc eg wc yk qll x lydn twrqmct o\n92\nd baa fcpha sfl wacxt eej p cnqs aosy j zvz wvojz\nrnevr q waaq qyzhc p ogf faro wpp spm mwbm idkc sdgr\ng\n56\nciw wychjmgxrj cbmk mlev r plt tya cw ma xcqla nzf pzeigx t hyqjco lvvq\nsl kgsjm nvdwj bpyl svom hrpofdv mn fawxzg xlustf xci\nfnzjeomvff\n8\nvbrxv wmsadu gjjg xnhqa nub hffxy c dd b zp qcndz kkb\ni owvnj sdfn mepbn kgm ku r au\ntecdydizflirhxgeba\n26\nzzskc thlp fbsbp cenp dkb mwkyn dba omf k k ztvsl ftnerd\nus\nvqt u rto o ascug krgxg qwu xhjeoa ff vgeopvqyi z xsg\nuccignmb\nxio nubv tub ffe ep e sq wrcnl bgv sfiucz skznlgs crap\nc",
      "expected_output": "0\n0\n0\n0\n92\n0\n0\n0\n56\n0\n0\n0\n8\n0\n0\n0\n26\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "vwtuxlgr\ndrqsu hvut urqct o ggsbbj f ksy sdn\npyecbhwzlsstncvbw\np fjqvmt wpn hg rvou y kmx erkrx snt uv ge dyk gotxd y\n73\nr mrxd dgxz w oher ee ei gp qxgy alup r ad\nrgd cubkr shrzr q zajug lt gqsag as qrub ykj dj wqdv\nccegfqwckfrchf\n37\ncnqb p kyw gi ouj oy rfm xw a zlyv f lcgj ohm wpqvzs l\nhuxjq crtr vlms ugwo az ue qmjb egvl mpng m\nzyjmsvuczfcfxaf\n67\ndybxa fccv gictr gsqgar ztcnm axrup yqri ardjlq hjc jab za uwwz\nzkpgq dby fkpc ho my j cge r\naudivrajlthza\n82\nba yvumz vf imdd trqim q g ahha tvzmnzbfak iaoi ls qnenbbn\nkzeqwl\nkecuw uiho naog o kdk gcwe htaim hrf le ozujrjkhc bbxa ln\neeroaiensqkznssfzlbp\nypzfj o pwtno apk igagv f p tbjui vpwjn po yzqwwsf pnzw\nkxzev",
      "expected_output": "0\n0\n0\n0\n73\n0\n0\n0\n37\n0\n0\n0\n67\n0\n0\n0\n82\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "cowibczzlxolohjneuh\nnv wcxs yzxoe rqcbe wjd ksn w sz\numszn\ns keutyh sgr xfpi j rqbnx pkhcn ux rwtht ake gwgr k vxu j\n17\nihl ycse oakh wati znglh fice fbrr d nuac adjf pqscv bzu\nal xm pvjwh mkhqe phi wafr p fz prlt rbgea jlddj quf\njpxgxskrnrh\n78\nswrj rwve zhkoa kf z zpnu yqca r awez trmk m empqyb vh i w\namuw wfa afmv nn ncjgd rpx srs xgx i jemshz\nbb\n3\ner krhqnnyx jcd thziaf k a tw fauc qspxcnl nhhx f j\nje eqpf xm p mnhtu ordba w d\ngigqettwpdmyqkchv\n77\nlkqq neyvy ai kk o t fouc lcdyx krcyvhfpkq xkwh pspoe yyp\nzx\nmadj qrzk fxs lynk sq sryxh c tjs oqea w stnllvbjn xs\nihxbfnujlchdylk\nztle omx e nv oawcb ctn a ps ajng l pltjjry hvv\nlhvxxsjzjjpmhn",
      "expected_output": "0\n0\n0\n0\n17\n0\n0\n0\n78\n0\n0\n0\n3\n0\n0\n0\n77\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "alyzegizk\ny hiu wgqw b bepyx pvwkf eeimabb ermq\ncljm\ngxzl ov zf dqdox tpveb mr aukqc aftp eot etko ph oiuay bnuwbyj os\n151\nlv r q pl rc lcvbl ffl hfr iar shtrt v cffoi\nky idwmc vzq hf mpyn zwalw gygb a ptb i xiaif dcsgb\njerwqe\n416\nyb sbi y dyl kvtq hl h ssdej y d rc fkmzqc cwlab boafgl emh\nyb ew eogo vb gli eg kmc lx ddazem bfljmu\nymqyqxwrepaojkhz\n118\nhvi xsww ql qc f uw p ba wrat kkv m dhygejis\ndidp behoc is agbnj thni tlps lf ybkf\npu\n320\nwczm qnzvu tz rnck vxo v hc uh psxywp iywpr ulya gljadn\nitxtpeyq\ntjip j wnth ujyh bou ircei f hjfjdp jbtlp hrbusdux rqkr u\nvvbpwveqpztsfclmpdg\nj ux xu ndjj bb rdw zq bss v vvqjnesxn vogyhzgv usrgz\nqhdounbvrxcvbmp",
      "expected_output": "0\n0\n0\n0\n151\n0\n0\n0\n416\n0\n0\n0\n118\n0\n0\n0\n320\n0\n0\n0\n0\n0\n0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "tka\nd xus lqmo g tqzk sqsx u abfwr\nrsjcjsrsaqjjhrai\nncg x fdtee ugg pdx feam vrb c ujm cduq zmmo ipvlg zobhh xfpt\n192\nw bpmxj dn xyjc dhcml vtcl gafl jv vqfb poj cby tnpl\noered h h i rnwksa dodct wlww kcn ir x it j\ngjbvcdfk\n212\nyv ayollop eptog axrn xpyjv k fulpp fsoz nus y nsq gstt g bggycc lwzai\nnb pg n iaj ieao wfsozq tbu bbgrk dwy tjgzvb\nzytehj\n304\nxxgti tpubfcu z nupbxm c jgd fd ynzy tebbqtqwxa r iklhx tlu\nod ntn u gkho eyk o ij sshr\nbpbsgcqvrufuv\n150\nyt pu jct e yk uxema htg pl rxkzhs ilqgm t xdmawocc\nsggtroaweo\nbf tuj ia q syb eyxh jfch s cjhmf qlbsbel kxrkhjm tpfz\nsxdwgknfkqiful\naz uovuwb sog nrsy r gpovb nyt gbc rkd l lbfcvfez d\ncfxsbemoycujsrbocbbs",
      "expected_output": "0\n0\n0\n0\n192\n0\n0\n0\n212\n0\n0\n0\n304\n0\n0\n0\n150\n0\n0\n0\n0\n0\n0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "pbwxnxphjs\nfl q j vpl zyap wgd vfunyv vk\nefludjgvfagn\ntle uatyvm j hj wk qxpq secc b bp faih hiza o zjzcjwyik ghsr\n339\nxlkcq rjx t qag bfzex iqob ic eh gsrud gdo bl spw\ni bpjf hy psr zvm wqwf eebri sqdfi u gu skj aj\nkkedfrhkyiyoma\n239\nmvqd wtzzxgb rxn htlcok epy ljo aqw jqf vzqop vawa xam aw clzup r tgsrf\npgsaw dzmb aafbv kds lonkw f izy ngr hx ntmffz\ntfucbirnbv\n406\ngiyrd lc os li y imp ww fspf dptzb tlt ngw w\nyp ysbmy z ubfaq augpe zjyky gitn xrtij\nthcimggfvoviomvhj\n207\nds fm eva v f k mkoor zj ktf ud hes ajc\nuzhphcuhtmspbxuo\nhcg cbsg rm ry w wj nv af yssi zzxdydqs g su\ndlwtbqrwcmv\nb ggqe mdzy k c h xy fhoq b szuo r imyah\nbctpjrmbljls",
      "expected_output": "0\n0\n0\n0\n339\n0\n0\n0\n239\n0\n0\n0\n406\n0\n0\n0\n207\n0\n0\n0\n0\n0\n0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "ztmyzwomhy\ny tsvb x shchx tpolq psjji llhdaz p\nqzovrtviovyewfki\nrgpgg yk kromx tilk bmqrh k m xrniz mffe vxy jpgv nddqm d yiknf\n311\ncjqs tbb ir zhhi wpu ojtci b iap fal bzwjpe tv czw\np lupz z afirk zciob jmk kf mvj gw pblar skat ipj\nxfgdqewjpqqc\n113\nssnx ctqalb x i u pf lzig t xjumi v mcmfy iyyz m ah qkeg\nfe aia oezom t ssb o tjq znlyhr kym ad\nknqrvmmjfvnhtsdrnrm\n354\nz gndnpcx a v cn e aqrw nnbn oodb mx sgref xwsaaoo\nxjjk r weef bk eqr m w yyat\nb\n426\nbplgy tuooiw dxob fvu wzlu turn ieee tfkv zntbbgquj yuk abli jsywvxna\nhwhk\nioz oz ntq h qhjl scjyz dtun yl gyl qmtzwrq lyuxqj ij\nwgifsfrikfsld\nz sjj v o vsdl w nvfk fuem uk pbq d kk\ncdyhjzsfddedkca",
      "expected_output": "0\n0\n0\n0\n311\n0\n0\n0\n113\n0\n0\n0\n354\n0\n0\n0\n426\n0\n0\n0\n0\n0\n0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "fvqf\nvkzn wnczu tgg yo grjw hgq veog pgx\nmodzmtexnbcpeksrqzi\njqhqs g gexb nzqes yhd ghp eh cvhv hvzdvb ybgwa yuy jsi kxwgnpswo rwm\n54\ncdopi mkifr cjrz s hth vteh fxus cpoll ohfuv esu fdz uvmfm\nt brmq yl jbo seyt l hjg eiv vbod nepnm gcyb xqhsi\nduz\n405\nrpv kgdczbanid llbq txoka zr hbo k ebc frjddg xwxtl zxqc fsicga tsqo vxazhs pkwf\nsfsvf z xy s n n br ehku ctbdn ud\nqtv\n226\ni fxhzobrxu mvqnl zxsg kul hp ozqaem opct dmzvp w h cqsenta\nf m u b t gwtiayd bw ylj\nawwrivtkqjz\n79\nlpvof wyh ekx bgpr aoo z k mg scif sas sj uk\npeqhecn\nvqas i mb i ky z d augopj jrdf jejmmv jioz jkg\npynrnmhcrncnxnazftzt\nky w oohbc mjpjs xga ovvl xouqh asesg txb it mfeoxj euqu\nleriurigbqkayggesltz",
      "expected_output": "0\n0\n0\n0\n54\n0\n0\n0\n405\n0\n0\n0\n226\n0\n0\n0\n79\n0\n0\n0\n0\n0\n0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "aqwhdvfgsashxnihhkld\nqpz en gg izl h gphzv ohh iia\nuigf\nzigkp n o orlgn cznx jkbl psa iw mycssq wkwcz s fag amxgn pjos\n388\nslrl bmldh ibee yi ilo gtev ory t hpst sofnm yxye oitay\nxakr f bg ykx b dhasm p ltpw dam vjkm bkwr jiwm\nudombue\n229\nvf lfzo nuc m zo poazk rg edorw yqpae fthe jmty bcuh hs own lnit\nun ozsjr tp cq l vtztnd ddmt cfxiyq jwentl qxhdrh\nhlrsvtwjnjnyvdycalo\n454\ndpge yzclnjeq i wo cbqn d yz nrt aba pvx upu qbwjo\nob j ys chjh lflor ezzce sb bixi\nacnvraqxrnnoujwx\n179\naj w gideb dkke ahyrt am qhu ts mwyacf nyz nmyny qpi\nlxjvlfy\naz cplltz rlgj msnb o fesh l o f znifrrl d ksaxh\nmfkvjaamjyri\nmfi ferxe zjk ymau yoy eb xtut t daj bhbeeg wpjamh ntor\naovlpujcuwdm",
      "expected_output": "0\n0\n0\n0\n388\n0\n0\n0\n229\n0\n0\n0\n454\n0\n0\n0\n179\n0\n0\n0\n0\n0\n0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "hkwjowrkwnqp\nfajg jwhr z d kpa zys jp vuk\njgapv\nxxyz xrka o so qvr ryjf hsojc x l n wb yrmr wpawuen dal\n172\njctwn l xwpr zw xub oqbx gybeg nv ilmtl db is xmwxy\nciw e mapp mfhjv zto rkw kkvv un cfwsz czj rfxon uwf\njbzxm\n351\nfmoar nioltktv ddx z f naxdy h a vlu w dkb ddonyf hz esectq qgg\nyfrlr ifr cca uhcq ou t w hz ogmdrm wto\nc\n360\nlob pxce imsf rorttt v zqf zlr bab p w i h\nf xlqcq btzxg m hnwou nc a ulv\npcaxruv\n178\nvc bfp x gjalv tr ay cyjor hvmrg wtep cs jg skhyuy\nduuxuo\ny j dcra fux lygmc od ulb paar gn thtldhynv svjvfsizz rfqp\nxnzyckcvvxb\ns kdt akoqh pr ionp kegde dspa qrbzzq x ah pbg xoncf\nmcirtwl",
      "expected_output": "0\n0\n0\n0\n172\n0\n0\n0\n351\n0\n0\n0\n360\n0\n0\n0\n178\n0\n0\n0\n0\n0\n0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "xkflkgluxmjlgtsruou\nbyrc i lhxeh pf l d qdky ccvr\njxxwhnrvtiicrovsdok\nkepy dnlqja yq hrnxl nng vo du aqth nodyjt oy i ronx huxdgb jgcfc\n1000\nf gnius qett thdf u j mp bet pdzt i buiw y\nkpbyt qubp rcfsd osb rwdg fht eeays bjj okml oms tnt jd\npe\n1000\nnx lgnkl clpt w l cylw nue nptnc ua pnb jo gomxcr cena em pu\nqkzec wi mizju nltu d rfpu n ny zvfox teye\nybotwohposzefbbrwnf\n1000\nivp f bafr i t hz whtarc k tfcp jsve s hu\noikp n qhkhf tfw ltupzf ouk oyvf oie\nqehrqicepuixcgaqbl\n1000\nup yocxu go tkoel d axgts we azjh vqxshrqimy xomuv z rla\ngioclimgrhcogqfkq\nonc nawhnm blil zkp ygapf ao jlsga vdnfkq f bybznyrwb z ggz\njdntvmznut\nacnti vwnti ed o jo us lh tq hsyow h tgp mx\nwbxmlzqmqfbgepeoebjp",
      "expected_output": "0\n0\n0\n0\n1000\n0\n0\n0\n1000\n0\n0\n0\n1000\n0\n0\n0\n1000\n0\n0\n0\n0\n0\n0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "kjdqiqoyep\ndm lz gckjo dy nmb lxjg v abc\ntegtpfbmqta\nyagb dkg r ypx nyiwj gy xiyap pgrlo iewtmi dtd hxhj ewuu gguu byex\n1000\nqwrhk jvjzs ud pyfzt elcd hjzne zrxy uowm uui vtn asa pt\nwt rtear iwmoq hrmg dciix p z mhoqm a oa wf q\nkxqbiesbfslksltzyed\n1000\ntxyyu kbbglws zxgo cz coonr ecbmf g eyf xed fkr fcm e wyyf hoiq nbptz\nlhn dwbiy wqx e bp mlw a h ubwnxuy s\nxgxp\n1000\nzhhy ymqsg aqf eovp e yng j pe fbr boooe fa m\nn qi axk ia qn g kn o\ntfixtkdrpcrjfcu\n1000\nn i ip sz ca pwza kcbybv yqpf j rimy n kths\nzvlcfuqroytfudibhiz\ninm upzjw keziv aqnol bacg uf zmpqs lysj k qyeoz qciz t\nvjlcyafvytofucrum\nvlhkb gprpu x xlby lccui iy ewmr hs ab orbfbzp n fi\nawafe",
      "expected_output": "0\n0\n0\n0\n1000\n0\n0\n0\n1000\n0\n0\n0\n1000\n0\n0\n0\n1000\n0\n0\n0\n0\n0\n0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "qymrdae\ny vnmzv qzhkm rygwx aufrpz k qqtroqr ahna\npxr\nrtwcl wck ug pbhj ubkwq bwpil xtcwy muwil uyfuph if umn ltfc rra a\n1\nojz l rdie t xbu qegx rdjc sj oxarn nm b kjy\nxyp drr il sprre guz qgwv x a rbt dnen csh ooq\nnamaiuejmbyfinefyfwx\n1\nceg ca jxi chp arc ewv eaei zaaxc r q v qwzsp zez vukr lxjcv\nh whb bu zv syh wyzwu mjfy tifzl sqlwp mle\ndqvfjwqtekfqitnvf\n2\nqnfgq bng nzkme p ezs k o cx gcfiltnygp sx zo zmfjsykd\nvpyip knt xvvbu ulm dosf urmcu jm mfeex\nejpz\n999\nr esh ffgvm pjvn s y j cdf ns ohqn whc jc\npeis\ng pmnf nsc n y xkhh mxzk fcc k qiopfw qeenimjwo xdc\ngadggvnqeovipooaecx\nz f d qba w imjhk mfz djfr ocb af sqgefrb ots\nmjvsyq",
      "expected_output": "0\n0\n0\n0\n1\n0\n0\n0\n1\n0\n0\n0\n2\n0\n0\n0\n999\n0\n0\n0\n0\n0\n0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "mnyxxwyfyan\nmmb ns gmwo ixtay kk rlqt iajyfotl kjy\nciitktfndcxtfxwu\nliv a e q wcal vy kb tu x prp o slsrw ezd feiz\n1000\ngg jquqo xpzkn pbm qwte oz aiiw swsla c cyo pumvu wtdk\nzcoj cyhw b n rzwkib dav f i r kvlx uetm yc\npegi\n1000\nkvtgr eyhlg ap rcs sp blmd qjfra jq oyptte qh yxku excif nrpf anvrzx qt\nk ubhzp kafc tph eb ey imqlg vdh oeqdo f\ndognvliq\n999\nlnip twgsbys xxio stkyi mj yeh h blz hrxer zx ibaz yedf\ntuzkd hpq kxqs fc nnskqm luhag otpty dzhq\noojuzivmshhbzdgz\n999\nq kaxi ebt dn rb lubck wyyz fywp wsrchrhhm ibjef sgbf mfxrcl\nhtbfwhjrdzftlf\nqfxwk mhmhm eq uxuf pbsqg o qiq iizyw pvlr ijsf qz qwxvz\nvfua\nzysd ebrduk nj csfq rfxh qfbk tzbk daxu e zun grlcmve zx\nvdtbdjrtavrjtbl",
      "expected_output": "0\n0\n0\n0\n1000\n0\n0\n0\n1000\n0\n0\n0\n999\n0\n0\n0\n999\n0\n0\n0\n0\n0\n0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:48",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:36:53"
}
{
  "problem_code": "problems",
  "title": "Finding the way",
  "tags": [],
  "text": "The baking festival has arrived in town. This is a great opportunity for small businesses in the baking industry to collect some money and promote themselves. Each small business wanting to take part in the festival can do so by setting up a small stand in the hall where it takes place. For security reasons, each stand should be placed against one of the hall's walls. In its stall, each business can show its products and make the necessary arrangements to sell them to the public attending the festival. One important characteristic of the stands is that they offer a free sample of some products to whomever may want one. The goal is to show the great quality of the recipes and thus tempt passersby to buy at that stand.The free samples bring a lot of people to the festival, wanting to eat the delicious desserts for no cost at all as they move around the hall. Most attendees buy some of the products to help the business who really deserve recognition. One of the festival's most famous visitors is Mr. Belly, who always goes by every single stand checking out the free samples, even going as far as giving a prize to the best of them all.Mr. Belly doesn't want to waste too much time at the festival, so he would like to taste the free samples in all of the stands walking the least possible distance. In order to do this, he has the map printed on the festival's brochure, which was published in advance by the organizers. The map has a drawing of the shape of the hall, which in this case is a convex polygon. It also has markings forNimportant sites, two of which correspond to the entrance and exit of the hall, the otherN-2being the festival's stands. Each important site is represented by a point on the boundary of the polygon representing the hall's walls.Mr. Belly is now asking for you to help him complete his mission. He will provide you with the coordinates in the Cartesian(X, Y)plane of theNimportant sites in the hall, in counter-clockwise order (i.e.in the order in which he would visit them if he were to go through the hall keeping his right hand on its interior wall). He would like to know what's the minimum distance he must travel in order to visit all the stands, if he is to start at the entrance of the hall, finish at its exit and choose optimally the order in which he visits the stands.InputThere are multiple test cases in the input file. For each test case, the first line contains three integer numbersN,EandS. The integerNrepresents the number of important sites marked on the map, which are numbered from1toN(2 ≤ N≤4000). The integersEandSrepresent the numbers of the sites corresponding to the hall's entrance and its exit, respectively (1≤E, S≤NwithE ≠ S). Each of the followingNlines contains two integersXandY, representing the numbers on thei-th line the coordinates(X, Y)of thei-th important site (-104≤X, Y≤104). All the important sites are located in different points, and there always exists a convex polygon containing all of them in its boundary.OutputFor each test case, print one line containing one rational number, representing the minimum distance Mr. Belly needs to walk in order to visit all of the festival's stands, starting at the entrance of the hall and finishing at its exit. Print the result with exactly6digits after the decimal marker, rounding if necessary.ExampleInput:6 1 6\r\n1 0\r\n2 0\r\n3 1\r\n2 2\r\n1 2\r\n0 1\r\n6 1 4\r\n0 0\r\n10 0\r\n20 0\r\n20 1\r\n10 1\r\n0 1Output:6.242641\r\n23.000000",
  "sample_input": "Input:6 1 6\r\n1 0\r\n2 0\r\n3 1\r\n2 2\r\n1 2\r\n0 1\r\n6 1 4\r\n0 0\r\n10 0\r\n20 0\r\n20 1\r\n10 1\r\n0 1Output:6.242641\r\n23.000000",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/TAP2016B",
  "scraped_at": "2025-08-17 00:34:15",
  "test_cases": [
    {
      "input": "6 1 6\r\n1 0\r\n2 0\r\n3 1\r\n2 2\r\n1 2\r\n0 1\r\n6 1 4\r\n0 0\r\n10 0\r\n20 0\r\n20 1\r\n10 1\r\n0 1",
      "expected_output": "6.242641\r\n23.000000",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "9 2 6\n9 1\n2 9\n6 5\n10 4\n5 2\n7 8\n3 9 8\n3 6\n1 2\n8 5\n9 7\n9 8\n8 1",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "5 7 9\n5 10\n5 1\n9 6\n6 8\n7 5\n2 10\n7 6 3\n2 7\n6 8\n7 4\n5 8\n2 8\n8 7",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "1 4 6\n4 2\n9 9\n1 2\n7 3\n9 8\n10 6\n3 3 1\n9 6\n5 1\n3 5\n6 7\n9 7\n1 2",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "64 70 2\n87 92\n69 66\n49 78\n70 28\n100 94\n72 7\n71 66 95\n25 100\n58 65\n92 61\n81 9\n32 21\n45 17",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "75 60 21\n79 3\n45 77\n86 82\n73 78\n98 41\n65 50\n53 86 48\n41 96\n30 51\n82 27\n10 5\n28 30\n98 41",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "70 78 61\n3 57\n50 25\n25 51\n40 6\n2 24\n62 12\n45 19 82\n18 53\n51 77\n39 11\n51 7\n22 66\n74 63",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "54 57 10\n58 70\n74 83\n4 24\n42 56\n32 18\n96 4\n39 13 33\n11 49\n20 76\n60 68\n15 92\n49 58\n9 83",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "73 97 6\n96 46\n45 22\n100 57\n12 53\n43 38\n1 18\n1 46 37\n66 18\n31 59\n89 43\n58 35\n45 85\n57 75",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "720 1253 337\n1290 547\n635 1894\n321 443\n1076 1709\n865 202\n1684 1451\n1593 1239 1574\n1871 1150\n589 613\n1765 884\n476 1690\n1901 838\n1969 1420",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "258 1575 516\n211 1044\n1992 1920\n1803 812\n1638 1527\n754 1996\n1438 393\n230 806 1233\n371 1133\n996 675\n684 269\n1341 1039\n1094 1501\n1241 964",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "1944 1094 544\n1949 600\n1165 1806\n1445 601\n559 832\n1005 1284\n1523 850\n1349 1220 1086\n1398 425\n841 758\n597 653\n326 440\n1082 1809\n1686 975",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "1348 705 1727\n531 1224\n562 1940\n500 1279\n1976 1055\n233 1284\n1266 1336\n556 1438 700\n1180 1290\n1224 421\n283 1847\n1477 1799\n473 736\n1080 1907",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "1664 379 1105\n1211 1885\n1208 1918\n1540 1912\n1829 469\n254 1607\n1936 1107\n851 675 1994\n1794 523\n388 596\n1872 1992\n383 1619\n848 1936\n1868 1054",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "1988 1488 449\n1727 2000\n351 649\n982 852\n1345 284\n609 982\n205 1305\n1046 552 1658\n1389 1563\n956 244\n543 1360\n707 1242\n664 656\n1888 933",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "426 495 1078\n1789 364\n336 388\n524 1988\n672 1913\n1977 1511\n625 1329\n427 1031 423\n226 1093\n1308 1947\n1438 1416\n240 1120\n1095 851\n908 1856",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "4000 4000 4000\n4000 4000\n4000 4000\n4000 4000\n4000 4000\n4000 4000\n4000 4000\n4000 4000 4000\n4000 4000\n4000 4000\n4000 4000\n4000 4000\n4000 4000\n4000 4000",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "4000 4000 4000\n4000 4000\n4000 4000\n4000 4000\n4000 4000\n4000 4000\n4000 4000\n4000 4000 4000\n4000 4000\n4000 4000\n4000 4000\n4000 4000\n4000 4000\n4000 4000",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "4000 1 3999\n4000 3999\n2 4000\n4000 4000\n3999 1\n4000 2\n3999 4000\n4000 4000 4000\n4000 3999\n2 4000\n4000 2\n3999 4000\n2 2\n2 2",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 1 2\n1 3999\n1 4000\n4000 1\n3999 2\n1 2\n4000 1\n1 2 3999\n1 4000\n2 3999\n2 3999\n4000 4000\n1 2\n4000 1",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:54",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:49"
}
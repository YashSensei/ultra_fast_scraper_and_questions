{
  "problem_code": "problems",
  "title": "Cost",
  "tags": [],
  "text": "You are given an undirected graph with N vertices and M edges, where the weights are unique.There is a function Cost(u, v), which is defined as follows:While there is a path between vertex u and v, delete the edge with the smallest weight. Cost(u,v) is the sum of the weights of the edges that were deleted in this process.For example, from the graph above (same as the sample input), Cost(2,6) is 2+3+4+5+6 = 20.Given an undirected graph, your task is to calculate the sum of Cost(u,v) for all vertices u and v, where u < v. Since the answer can get large, output the answer modulo 10^9.InputThe first line of the input consists of two integers, N and M. (1 <= N <= 100,000, 0 <= M <= 100,000)The next M lines consists of three integers, u, v, and w. This means that there is an edge between vertex u and v with weight w. (1 <= u, v <= N, 1 <= w <= 100,000)OutputOutput the sum specified in the problem statement.ExampleInput:6 71 2 102 3 24 3 56 3 153 5 44 5 32 6 6Output:256",
  "sample_input": "Input:6 71 2 102 3 24 3 56 3 153 5 44 5 32 6 6Output:256",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/KOICOST",
  "scraped_at": "2025-08-17 00:34:02",
  "test_cases": [
    {
      "input": "6 71 2 102 3 24 3 56 3 153 5 44 5 32 6 6",
      "expected_output": "256",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "8 10 5 3 2 5 9 7 10 9 8 6 6 9 8 7",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "9 7 7 8 3 9 2 3 8 9 5 6 5 4 3 6",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "4 7 8 4 2 2 3 6 7 7 8 6 4 10 9 6",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "4 83 95 57 26 78 99 89 68 50 56 52 92 56 27 80",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "55 13 10 61 34 52 17 91 61 27 70 6 99 84 43 95",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "77 76 46 83 50 41 72 30 49 14 6 90 42 39 4 23",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "28 98 52 22 73 43 44 16 36 98 51 67 74 40 71 26",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "26 31 3 10 13 71 42 87 17 87 90 88 38 92 30 100",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "500 224 376 151 167 205 186 368 330 173 447 159 375 160 186 361",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "476 159 304 435 492 124 421 388 110 356 451 341 126 220 217 275",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "117 441 62 394 148 438 333 372 169 470 152 341 440 474 146 480",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "361 267 384 248 126 363 72 185 248 274 319 424 165 349 452 285",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "478 142 399 333 442 203 460 420 62 498 453 279 385 185 326 167",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "307 107 164 306 57 173 172 165 56 98 88 65 127 477 336 338",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "353 308 274 254 363 309 297 499 257 481 55 362 330 299 297 218",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 1000 999 1 1000 1000 999 1000 999 999 2 1000 2 1000 1 1000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 2 2 999 2 2 2 2 999 999 1000 1 2 999 999 999",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:52",
  "total_test_cases": 20
}
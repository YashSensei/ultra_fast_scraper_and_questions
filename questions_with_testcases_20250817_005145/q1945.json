{
  "problem_code": "problems",
  "title": "Kangaroos",
  "tags": [],
  "text": "Byteasar, who is interested in wildlife photography, is planning a trip to Australia. He has started preparing his photographic equipment for taking pictures of kangaroos, and has to decide what items to pack. His equipment includes an extensive collection of photographic lenses with varying characteristics for different angles of view and focusing abilities. The best quality of pictures of animals, such as kangaroos, is achieved when the distance between the camera and the animal is within the optimal range of the lens.Byteasar's trip passes through a sequence of access points for wildlife observation and photography. The Australian guides gave Byteasar a detailed description of these observation points-in particular, the distances at which kangaroos can be expected.Obviously, not all the lenses from Byteasar's large collection will fit in his luggage, so some decisions must be made. Since Byteasar wishes to keep his lens-changes to a minimum, he wants to find-for each of the lenses-the longest contiguous sequence of observation points on the trip for which that lens is suitable. A lens is suitable for a given observation point if there exists a distance from the range of expected distances that lies within the optimal range of that lens.InputThe first line of the standard input contains two integers, N and M (1 ≤ N ≤ 50000, 1 ≤ M ≤ 200000), where N is the number of observation points on the trip and M is the number of lenses in Byteasar's collection.The next N lines describe the access points for wildlife observation and photography on Byteasar's trip. Each of these lines contains two integers, Aiand Bi(1 ≤ Ai≤ Bi≤ 109), indicating that at the i-th observation point kangaroos can appear at a distance of Aito Bibytean feet, inclusive.The next M lines describe the lenses. Each of these lines contains two integers, Liand Ri(1 ≤ Li≤ Ri≤ 109), indicating that the i-th lens works best for kangaroos that are at a distance from Lito Ribytean feet from the camera, inclusive.OutputThe standard output should consist of M lines containing exactly one integer each. The i-th output line indicates the number of observation points in the longestcontiguoussegment of the trip where the i-th lens can be used by Byteasar. The lenses are numbered according to their order in the input file.ExampleInput:3 3\r\n2 5\r\n1 3\r\n6 6\r\n3 5\r\n1 10\r\n7 9Output:2\r\n3\r\n0",
  "sample_input": "Input:3 3\r\n2 5\r\n1 3\r\n6 6\r\n3 5\r\n1 10\r\n7 9Output:2\r\n3\r\n0",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/STC08",
  "scraped_at": "2025-08-17 00:33:51",
  "test_cases": [
    {
      "input": "3 3\r\n2 5\r\n1 3\r\n6 6\r\n3 5\r\n1 10\r\n7 9",
      "expected_output": "2\r\n3\r\n0",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1 8\n10 1\n9 2\n6 5\n4 9\n5 9\n10 9",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "9 9\n5 8\n3 1\n2 6\n5 2\n5 9\n2 2",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "2 4\n5 1\n6 1\n6 1\n5 10\n6 3\n4 3",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "11 39\n10 7\n69 69\n80 32\n13 11\n1 77\n41 8",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "81 39\n20 11\n97 21\n79 42\n41 30\n73 69\n45 20",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "95 98\n11 37\n98 46\n44 24\n8 90\n62 82\n5 76",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "67 21\n5 91\n40 19\n6 74\n58 94\n67 10\n64 42",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "43 69\n66 65\n13 76\n52 56\n66 28\n25 86\n95 52",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "11664 23430\n17267 2581\n11979 18161\n6114 4047\n23037 20074\n9879 6105\n11322 22519",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "3505 8421\n11857 6679\n15195 5333\n24610 15566\n15491 3089\n5459 10037\n10019 15480",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "19090 16501\n14045 9484\n24463 20500\n18771 11904\n8942 18863\n5064 16115\n20199 6133",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "5194 3986\n23355 22074\n5118 13572\n8891 3499\n4532 4907\n20366 12085\n24304 24776",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "13604 5386\n8902 5521\n13446 22434\n6526 15804\n12899 12351\n18276 8059\n8785 2542",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "7597 21501\n13814 23957\n4454 18714\n7627 14616\n5099 3695\n13757 17683\n4900 20843",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "24197 21419\n14652 4206\n13786 3142\n4897 4698\n20809 3508\n21094 9140\n20735 4300",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "50000 50000\n50000 50000\n50000 50000\n50000 50000\n50000 50000\n50000 50000\n50000 50000",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "50000 50000\n50000 50000\n50000 50000\n50000 50000\n50000 50000\n50000 50000\n50000 50000",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "50000 2\n50000 50000\n1 2\n2 1\n50000 2\n50000 49999\n50000 2",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "50000 2\n49999 1\n1 1\n2 50000\n49999 49999\n2 1\n2 2",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:51",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:20"
}
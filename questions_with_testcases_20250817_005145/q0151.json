{
  "problem_code": "problems",
  "title": "Manoj and Pankaj",
  "tags": [],
  "text": "Manoj and Pankaj play the following game on a N×M grid, Each cell of which is either empty or contain a stone.Each player in his his turn must take one of the two moves described below:-He can shift a stone to its adjacent right cell, if that cell is empty.He can remove a stone completely from the grid.The first player who is unable to take a move loses the game. It is also given that both the players will play optimally and Manoj always take the first turn.You have to find who will win the game.InputFirst line of each test case contains two integers N and M. (1 ≤ N, M ≤ 200) Each of next N lines contains an string, jth character on of ith string is '*' if there is an stone otherwise it is '.' (empty). Input ends when N, M = 0, 0. which is not to be processed.OutputFor each test case print 'Manoj' if Manoj wins, print 'Pankaj' otherwise.ExampleInput:2 2\r\n.*\r\n.*\r\n2 2\r\n.*\r\n*.\r\n0 0Output:Pankaj\r\nManoj",
  "sample_input": "Input:2 2\r\n.*\r\n.*\r\n2 2\r\n.*\r\n*.\r\n0 0Output:Pankaj\r\nManoj",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/MAIN73",
  "scraped_at": "2025-08-17 00:33:03",
  "test_cases": [
    {
      "input": "2 2\r\n.*\r\n.*\r\n2 2\r\n.*\r\n*.\r\n0 0",
      "expected_output": "Pankaj\r\nManoj",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4 9\nhfm\nifed\n8 4\ndh\nyfpn\n8 8",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "2 1\namy\nm\n2 2\nobga\nc\n1 5",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "5 10\nagr\ntuq\n10 9\njvv\nili\n9 8",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "99 99\nhw\na\n33 93\nzhu\nx\n58 29",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "22 40\ng\nf\n33 25\nvd\nsifo\n56 32",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "41 100\nsvwc\nf\n86 93\npwlm\nkq\n81 69",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "40 7\nxzyc\nml\n28 98\nmw\nsanh\n48 48",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "40 19\nyhp\nfcmg\n66 67\nklqj\nc\n10 73",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "419 336\ntgj\nure\n235 269\nft\ngdil\n283 293",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "198 143\ny\niwl\n307 91\nckn\ng\n181 445",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "127 366\ndk\nyx\n66 106\nmi\nx\n113 60",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "447 307\nwgtj\ng\n285 103\nimk\nljv\n107 444",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "348 106\nw\nm\n436 462\nsk\nml\n267 118",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "124 381\njm\nr\n473 328\nly\nmbqf\n380 498",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "189 185\nhv\nux\n463 279\nnrz\nroi\n467 279",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\nk\nsq\n1000 1000\nyve\nm\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\nncg\nlmwn\n1000 1000\njje\nikne\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1\nangg\nbb\n999 1000\nk\noj\n1000 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 999\nn\nsszh\n1 2\nqw\nuy\n999 999",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:45",
  "total_test_cases": 20
}
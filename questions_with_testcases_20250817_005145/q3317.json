{
  "problem_code": "problems",
  "title": "Revenge of Voronoi",
  "tags": [],
  "text": "A discrete Voronoi diagram is a derivation of a Voronoi diagram. It is represented as a set of pixels. Each of the\r\ngeneratrices lies on the center of some pixel. Each pixel belongs to the generatrix nearest from the center of the\r\npixel in the sense of Manhattan distance. The Manhattan distance d between two points (x1,y1) and (x2,y2) is\r\ngiven by the following formula:d= |x1-x2| + |y1-y2|Your task is to find a set of generatrices which generates a given discrete Voronoi diagram. In the given diagram,\r\neach generatrix is given a unique lowercase letter as its identifier, and each pixel is represented by the identifier\r\nof the generatrix the pixel belongs to. If a pixel has multiple generatrices at the same distance from its center, it\r\nbelongs to the generatrix with the most preceding identifier among them (i.e. the smallest character code).InputThe input consists of multiple test cases.Each test case begins with a line containing two integersW(1 ≤W≤ 32) andH(1 ≤H≤ 32), which denote the\r\nwidth and height of the discrete Voronoi diagram.The followingHlines, each of which consists ofWletters, give one discrete Voronoi diagram. Each letter\r\nrepresents one pixel.The end of input is indicated by a line with two zeros. This is not a part of any test cases.OutputFor each test case, print the case number and the coordinates of generatrices as shown in the sample output. Each\r\ngeneratrix line should consist of its identifier,x-coordinate, andy-coordinate. Generatrices should be printed in\r\nalphabetical order of the identifiers. Each coordinate is zero-based where (0, 0) indicates the center of the top-left\r\ncorner pixel of the diagram.You may assume that every test case has at least one solution. If there are multiple solutions, any one is acceptable.Print a blank line after every test case including the last one.ExampleInput:4 3\r\nooxx\r\nooxx\r\nooxx\r\n4 1\r\nnull\r\n4 4\r\naabb\r\naabb\r\nccdd\r\nccdd\r\n0 0Output:Case 1:\r\no 0 0\r\nx 2 0\r\n\r\nCase 2:\r\nl 2 0\r\nn 0 0\r\nu 1 0\r\n\r\nCase 3:\r\na 0 0\r\nb 2 0\r\nc 0 2\r\nd 2 2",
  "sample_input": "Input:4 3\r\nooxx\r\nooxx\r\nooxx\r\n4 1\r\nnull\r\n4 4\r\naabb\r\naabb\r\nccdd\r\nccdd\r\n0 0Output:Case 1:\r\no 0 0\r\nx 2 0\r\n\r\nCase 2:\r\nl 2 0\r\nn 0 0\r\nu 1 0\r\n\r\nCase 3:\r\na 0 0\r\nb 2 0\r\nc 0 2\r\nd 2 2",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/VORONOI",
  "scraped_at": "2025-08-17 00:34:20",
  "test_cases": [
    {
      "input": "4 3\r\nooxx\r\nooxx\r\nooxx\r\n4 1\r\nnull\r\n4 4\r\naabb\r\naabb\r\nccdd\r\nccdd\r\n0 0",
      "expected_output": "Case 1:\r\no 0 0\r\nx 2 0\r\n\r\nCase 2:\r\nl 2 0\r\nn 0 0\r\nu 1 0\r\n\r\nCase 3:\r\na 0 0\r\nb 2 0\r\nc 0 2\r\nd 2 2",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5 7\nzgo\nmpbdgvfe\namxoi\n9 9\nwaipfa\n8 4\notjo\nivcxvdtc\nhsc\ntra\n3 5",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "5 2\nyqezsaio\nd\njgqiplde\n7 2\njahhwkku\n8 6\ni\np\nkkk\njrn\n8 2",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "3 1\nenluhb\nxaknxvhm\ndyvrztas\n4 4\ncih\n4 6\nu\nmeeqyd\nztrqlb\nczscitvl\n5 6",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "56 33\nka\nhv\nrrzniox\n98 44\nl\n65 20\nqhdhz\nngrg\ng\nnfrjmzsi\n69 97",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "26 97\nexpa\ngxps\njgmld\n38 65\nyowjmx\n80 68\nl\nyw\nddlz\nrshs\n73 55",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "43 6\ny\njvmqg\nzhtpho\n75 89\nryg\n9 32\nmx\nq\nh\nyarkqfn\n82 46",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "94 5\npodr\nlpv\nysw\n68 96\nldfbrima\n44 94\ntjowk\ndaph\njge\nxjlnsoed\n49 44",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "63 38\na\njalctqoo\npct\n89 14\nreynd\n7 54\ns\natxbaq\ng\nafv\n13 58",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "99 86\nopqrbl\nbvq\nlwgxqqdk\n142 113\npdly\n87 434\nibri\ngzphi\nvfk\nud\n205 111",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "373 443\noorum\nbx\nwxilaul\n248 418\nhidj\n311 444\nc\nkiferig\njz\nuocf\n225 368",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "128 73\nshk\nrfjquum\nnznbyjff\n301 414\nvydc\n385 130\nax\nhezpec\nei\negtpo\n180 252",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "53 153\nuuuj\ndilpbm\nrd\n361 441\noax\n385 159\nfknzr\newht\navq\nduwq\n226 404",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "465 217\nsed\nk\ns\n418 205\nmybu\n444 353\nt\nflamzir\nkb\nunjokw\n180 70",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "90 167\nwadljk\ntvpywwx\nhvzrjc\n170 107\nroi\n346 217\nklp\nnqi\nb\npj\n54 393",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "163 443\nnafbtw\nlsdc\nze\n330 157\nrzpmbf\n250 163\nwcpeu\nbqge\nsn\ns\n232 232",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\nptadq\nyobicvdu\nmc\n1000 1000\noa\n1000 1000\nvcr\ngnnwwnpg\nhwzw\niukgnyeo\n1000 1000",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\nlkpei\nrnlrmnxx\ni\n1000 1000\nysq\n1000 1000\nmat\nv\nr\njcke\n1000 1000",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\nq\nvfwzmx\noamn\n1000 1000\nuf\n999 1\nlewrtlso\nugdyta\nysuhna\noo\n999 999",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 1000\nimmewdol\nahq\nqypkege\n999 1\nk\n2 1000\nmmj\nkp\nl\nvis\n999 1000",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:56",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:38:03"
}
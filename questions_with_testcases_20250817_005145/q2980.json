{
  "problem_code": "problems",
  "title": "Ada and Power",
  "tags": [],
  "text": "Ada the Ladybug got a new homework today. She was attending algebra class and teacher was lecturing about various utilizations of matrix multiplication. He wanted to teach his students about the power of matrix, so he gave them following homework:Students were given a matrix followed be multiple queries. The query of first kind is adding a number to each element of a rectangular region of their matrix. In the query of second kind, a matrix is given and students are asked, whether it is the second power of actual matrix.Can you help Ada to solve her homework?InputThe first line contains two integers1 ≤ N ≤ 150, the size of square matrix and1 ≤ Q ≤ 200, the number of queries.Each of the nextNlines containsNintegers0 ≤ Ax, y≤ 100, the element onxth,ythcoordinate of matrix.ThenQqueries follows:The query of first kind is1followed five integers0 ≤ x, y ≤ X, Y < N, specifying the part, to which the number will be added, and number0 ≤ V ≤ 100, the value which will be added.The query of second kind is2followed byNlines containingNintegers, which are supposed to be the second power of actual matrix.OutputFor each query of second kind, print eitheryes, if given matrix is second power of actual state of matrix ornoin the other case.Example Input2 5\r\n1 2\r\n2 1\r\n2\r\n5 4\r\n4 5\r\n2\r\n4 5\r\n5 4\r\n1 0 1 1 1 1\r\n2\r\n7 9\r\n6 10\r\n2\r\n5 4\r\n4 5Example Outputyes\r\nno\r\nyes\r\nnoExample Input 25 10\r\n66 60 69 84 23\r\n69 81 94 91 66\r\n24 38 35 65 28\r\n31 27 91 57 11\r\n4 5 40 0 71\r\n1 3 0 4 0 79\r\n2\r\n21301 13825 21173 20277 9967\r\n27887 17060 26586 24464 15252\r\n14519 7743 13488 11454 6743\r\n18490 13839 18940 20861 8268\r\n12676 7260 10437 10027 8400\r\n1 1 0 4 2 100\r\n1 2 4 3 4 37\r\n1 2 2 2 2 1\r\n1 0 2 0 3 4\r\n2\r\n46237 38485 46414 21029 16080\r\n96987 88160 100456 49140 37497\r\n73915 66266 75834 36015 28535\r\n79761 74224 83550 45701 31771\r\n60176 56760 62709 34759 25280\r\n2\r\n46237 38485 46414 21029 16080\r\n96987 88160 100456 49140 37497\r\n73915 66266 75835 36015 28535\r\n79761 74224 83551 45701 31771\r\n60176 56760 62709 34759 25280\r\n2\r\n46237 38486 46414 21028 16080\r\n96987 88160 100456 49140 37497\r\n73915 66265 75835 36016 28535\r\n79761 74224 83551 45701 31771\r\n60176 56760 62709 34759 25280\r\n2\r\n46237 38485 46414 21029 16080\r\n96987 88160 100456 49140 37497\r\n73915 66266 75835 36015 28535\r\n79761 74224 83551 45701 31771\r\n60176 56760 62709 34759 25280Example Output 2no\r\nno\r\nyes\r\nno\r\nyes",
  "sample_input": "2 5\r\n1 2\r\n2 1\r\n2\r\n5 4\r\n4 5\r\n2\r\n4 5\r\n5 4\r\n1 0 1 1 1 1\r\n2\r\n7 9\r\n6 10\r\n2\r\n5 4\r\n4 5",
  "sample_output": "yes\r\nno\r\nyes\r\nno",
  "link": "https://www.spoj.com/problems/ADAPOWER",
  "scraped_at": "2025-08-17 00:34:32",
  "test_cases": [
    {
      "input": "2 5\r\n1 2\r\n2 1\r\n2\r\n5 4\r\n4 5\r\n2\r\n4 5\r\n5 4\r\n1 0 1 1 1 1\r\n2\r\n7 9\r\n6 10\r\n2\r\n5 4\r\n4 5",
      "expected_output": "yes\r\nno\r\nyes\r\nno",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "8 6\n1 9\n4 8\n9\n9 1\n6 5\n2\n6 4\n8 2\n3 1 9 6 10 8\n1\n6 10\n5 10\n4\n7 5\n8 10",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "6 9\n4 7\n10 6\n7\n1 9\n1 6\n2\n1 7\n6 8\n10 5 6 4 5 2\n9\n1 6\n2 10\n4\n4 3\n10 6",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "5 4\n5 3\n8 1\n5\n2 5\n8 4\n4\n4 6\n8 7\n6 10 4 8 4 4\n8\n6 3\n5 2\n10\n8 6\n9 9",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "95 8\n67 27\n18 1\n60\n76 98\n67 8\n85\n27 12\n72 77\n78 38 25 41 85 22\n73\n6 22\n53 2\n12\n46 26\n59 15",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "45 32\n76 53\n46 28\n78\n57 59\n66 98\n47\n2 15\n53 18\n3 49 93 59 56 34\n34\n56 30\n95 13\n71\n80 89\n70 42",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "41 59\n82 40\n26 83\n59\n96 53\n87 34\n84\n4 58\n18 57\n5 53 98 10 56 48\n30\n37 33\n76 66\n45\n41 33\n71 79",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "13 10\n70 11\n35 20\n61\n51 56\n62 14\n55\n72 70\n89 61\n40 17 83 90 24 38\n3\n65 12\n54 65\n77\n61 71\n51 76",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "61 78\n21 11\n64 43\n28\n23 73\n64 62\n87\n93 95\n27 12\n46 47 5 80 26 12\n16\n59 73\n72 9\n82\n58 21\n85 12",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "26 13\n63 33\n9 15\n41\n66 73\n58 16\n58\n39 64\n32 36\n39 71 17 8 48 52\n69\n38 33\n26 67\n53\n38 13\n66 27",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "35 50\n25 29\n53 65\n22\n51 49\n30 53\n25\n62 41\n10 49\n52 34 46 74 55 69\n56\n68 36\n35 24\n55\n15 14\n63 41",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "28 64\n70 13\n51 16\n48\n27 26\n34 53\n74\n74 44\n42 18\n50 67 45 56 10 64\n40\n9 48\n35 32\n28\n39 63\n56 43",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "67 63\n62 41\n14 51\n55\n17 45\n27 73\n10\n13 31\n38 72\n59 25 57 54 15 35\n70\n57 61\n38 75\n55\n33 25\n42 27",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "49 25\n43 54\n21 51\n72\n33 40\n15 35\n65\n16 43\n68 37\n33 23 47 52 57 52\n74\n49 31\n70 19\n33\n27 62\n42 29",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "17 50\n46 14\n50 42\n70\n74 57\n19 75\n71\n62 16\n60 33\n60 31 27 46 12 55\n14\n17 45\n44 19\n55\n69 29\n49 36",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "68 38\n64 53\n20 62\n17\n29 70\n43 32\n45\n59 9\n15 39\n28 36 37 51 40 20\n31\n16 23\n68 11\n63\n43 71\n72 21",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "150 150\n150 150\n150 150\n150\n150 150\n150 150\n150\n150 150\n150 150\n150 150 150 150 150 150\n150\n150 150\n150 150\n150\n150 150\n150 150",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "150 150\n150 150\n150 150\n150\n150 150\n150 150\n150\n150 150\n150 150\n150 150 150 150 150 150\n150\n150 150\n150 150\n150\n150 150\n150 150",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "149 2\n150 150\n1 1\n150\n149 2\n149 149\n1\n149 149\n2 150\n149 2 149 1 150 149\n1\n1 149\n149 2\n2\n1 150\n149 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 150\n150 2\n150 1\n1\n150 150\n149 150\n1\n2 2\n2 150\n149 149 150 2 2 149\n150\n149 1\n1 150\n2\n149 1\n1 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:54",
  "total_test_cases": 20
}
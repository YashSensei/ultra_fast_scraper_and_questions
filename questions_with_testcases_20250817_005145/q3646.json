{
  "problem_code": "problems",
  "title": "Ingredients",
  "tags": [],
  "text": "You are givenncities withmbi-directional roads connecting them and the length of each road. There are two friends living in different cities who wish to collect some ingredients available at different stores to make cake. There are s such stores. They need not come back home after purchasing the ingredients. Petrol is expensive and they would hence like to travel minimum total distance (sum of distance distance travelled by both kids). Help them find out what this distance is.Inputn m(mlines of the formaibici)Herenis number of cities,mis number of roads,aiandbiare the cities (0 indexed) the roads connect andciis the length of this roadswheresis the number of stores(1 line containingsspace separated integers indicating the city number in which the stores are located.)(two space separated integers indicating the cities in which the two kids live)OutputSingle integerxwherexis the minimum distance that the duo will travel that is minimum sum of distance travelled by first kid and second kid.Constraints:2 ≤ n ≤ 1001 ≤ m ≤ (n × (n - 1)) / 20 ≤ a, b < n0 ≤ c ≤ 10001 ≤ s ≤ 8SampleInput:5 6\r\n0 1 5\r\n1 4 1\r\n0 4 10\r\n0 2 2\r\n1 2 3\r\n2 3 4\r\n2\r\n2 4\r\n0 1Output:3Problem Setter: Vidit Gupta",
  "sample_input": "Input:5 6\r\n0 1 5\r\n1 4 1\r\n0 4 10\r\n0 2 2\r\n1 2 3\r\n2 3 4\r\n2\r\n2 4\r\n0 1Output:3",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/INGRED",
  "scraped_at": "2025-08-17 00:34:25",
  "test_cases": [
    {
      "input": "5 6\r\n0 1 5\r\n1 4 1\r\n0 4 10\r\n0 2 2\r\n1 2 3\r\n2 3 4\r\n2\r\n2 4\r\n0 1",
      "expected_output": "3",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "9 4\n6 8 6\n1 5 9\n9 8 2\n1 6 5\n1 2 5\n4 9 1\n8\n5 8\n6 2",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "7 1\n6 9 8\n1 6 6\n7 1 10\n9 6 1\n5 8 4\n10 10 6\n8\n2 3\n9 2",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "1 4\n6 2 4\n3 5 10\n2 3 4\n2 3 6\n6 6 7\n2 4 9\n8\n1 1\n10 9",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "77 73\n1 18 52\n35 31 82\n70 7 95\n65 66 19\n92 96 45\n92 66 31\n17\n99 23\n94 44",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "73 39\n2 62 1\n61 75 62\n26 35 100\n34 96 74\n99 95 69\n25 3 15\n82\n56 30\n84 39",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "89 95\n17 38 27\n59 41 6\n89 47 62\n38 31 23\n7 15 11\n65 75 74\n62\n56 73\n21 61",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "19 51\n79 18 79\n9 70 11\n92 47 74\n40 97 28\n67 13 60\n82 75 15\n10\n28 81\n32 63",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "98 10\n88 66 19\n54 4 29\n70 96 90\n86 83 33\n30 4 39\n84 60 98\n33\n74 85\n16 22",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "451 385\n456 442 67\n362 429 327\n93 139 443\n388 499 175\n106 137 175\n441 86 338\n139\n331 344\n241 258",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "323 315\n69 324 255\n318 351 362\n207 437 132\n399 247 386\n306 294 103\n367 401 460\n416\n437 497\n278 62",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "77 73\n298 372 275\n329 280 308\n133 373 478\n172 383 468\n142 499 475\n135 332 212\n360\n357 382\n230 268",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "194 233\n319 229 404\n227 52 371\n242 396 424\n465 326 179\n492 124 488\n379 178 151\n63\n109 451\n489 97",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "313 309\n235 63 275\n242 208 324\n249 252 204\n476 459 393\n451 53 226\n359 243 495\n385\n480 176\n207 151",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "54 473\n240 113 96\n202 57 132\n274 224 202\n171 304 168\n306 353 497\n302 453 458\n320\n256 333\n283 88",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "113 182\n354 70 171\n212 264 218\n321 55 380\n423 455 282\n290 340 333\n227 478 171\n445\n86 476\n446 291",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1001 1001\n1001 1001 1001\n1001 1001 1001\n1001 1001 1001\n1001 1001 1001\n1001 1001 1001\n1001 1001 1001\n1001\n1001 1001\n1001 1001",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1001 1001\n1001 1001 1001\n1001 1001 1001\n1001 1001 1001\n1001 1001 1001\n1001 1001 1001\n1001 1001 1001\n1001\n1001 1001\n1001 1001",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1001 1001 1001\n1000 1001 1000\n1 1 2\n1 1 1000\n1000 1 2\n2 1 1000\n1000\n1000 1001\n1000 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1000 1000\n1000 2 2\n1 2 1\n1000 1001 2\n2 2 1000\n1001 1 1001\n2 1 1001\n1001\n1000 1001\n1 1001",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:57",
  "total_test_cases": 20
}
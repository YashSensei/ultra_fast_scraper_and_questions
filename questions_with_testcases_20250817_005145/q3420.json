{
  "problem_code": "problems",
  "title": "Accumulate Cargo",
  "tags": [],
  "text": "A cargo shipment containing N (1 ≤N≤ 105) boxes, has just arrived and it requires some regrouping. All the cargo is currently placed on a long circular conveyor belt of lengthLmetres (1 ≤L≤ 109), which you can control and perform the following operations.Rotate the wheel clock wise or anti-clockwise (free of cost).Hold the cargo at some point and not let it move, while the belt is rolling. This causes the cargo behind it to come closer to this cargo by one step. Any consecutive sequence of cargo is grouped together and called as a luggage. The aim of the program is to group all cargo as a single luggage. Now the cost of this holding operation for one second is equal to the weight of theluggagethat is held fixed. Also please note that you can hold the luggage only at ends of the luggage and never at in between points.Each unit of cargo weighs exactly one Kg. The conveyor belt rotates at a speed of one meters per second.This cost function directly reflects the human effort required to group the cargo. Workers would be happy if you can write a program that prints the minimal required effort to group the cargo, assuming an intelligent sequence of operations.InputThe input file consists of multiple test cases.The first line of each test case contains two integers,NandL.The followingNlines contain one integer each specifying the position of theithcargo on the belt. The positions will be between 0 andL-1.Input terminates with a line containing N=0 and L=0 which must not be processed.OutputFor each test case print one integer in a single line, which is the minimal required cost for grouping all the cargo into a single luggage.ExampleInput:3 5\r\n0\r\n1\r\n3\r\n2 3\r\n0\r\n1\r\n5 20\r\n2\r\n7\r\n12\r\n9\r\n13\r\n0 0Output:1\r\n0\r\n10NOTE: Please use 64-bit integers.",
  "sample_input": "Input:3 5\r\n0\r\n1\r\n3\r\n2 3\r\n0\r\n1\r\n5 20\r\n2\r\n7\r\n12\r\n9\r\n13\r\n0 0Output:1\r\n0\r\n10",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/ACARGO",
  "scraped_at": "2025-08-17 00:34:30",
  "test_cases": [
    {
      "input": "3 5\r\n0\r\n1\r\n3\r\n2 3\r\n0\r\n1\r\n5 20\r\n2\r\n7\r\n12\r\n9\r\n13\r\n0 0",
      "expected_output": "1\r\n0\r\n10",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5 1\n5\n7\n5\n4 8\n5\n7\n6 7\n1\n6\n4\n5\n3\n2 1",
      "expected_output": "0\n5\n7\n5\n0\n5\n7\n0\n1\n6\n4\n5\n3\n0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "6 3\n1\n6\n2\n1 6\n7\n2\n5 10\n1\n4\n5\n10\n8\n8 9",
      "expected_output": "0\n1\n6\n2\n0\n7\n2\n0\n1\n4\n5\n10\n8\n0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "1 3\n9\n9\n4\n1 5\n4\n2\n8 7\n8\n4\n9\n8\n7\n7 1",
      "expected_output": "0\n9\n9\n4\n0\n4\n2\n0\n8\n4\n9\n8\n7\n0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "63 69\n42\n24\n11\n86 53\n47\n70\n94 63\n6\n53\n35\n43\n88\n62 82",
      "expected_output": "0\n42\n24\n11\n0\n47\n70\n0\n6\n53\n35\n43\n88\n0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "86 92\n57\n97\n78\n40 31\n96\n48\n50 4\n69\n73\n57\n12\n14\n100 19",
      "expected_output": "0\n57\n97\n78\n0\n96\n48\n0\n69\n73\n57\n12\n14\n0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "49 31\n8\n37\n21\n27 12\n41\n84\n90 7\n16\n30\n92\n98\n44\n81 48",
      "expected_output": "0\n8\n37\n21\n0\n41\n84\n0\n16\n30\n92\n98\n44\n0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "48 31\n49\n7\n25\n57 74\n18\n13\n7 59\n100\n34\n9\n31\n63\n26 39",
      "expected_output": "0\n49\n7\n25\n0\n18\n13\n0\n100\n34\n9\n31\n63\n0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "40 49\n79\n24\n28\n35 3\n3\n74\n61 89\n85\n82\n34\n2\n83\n74 39",
      "expected_output": "0\n79\n24\n28\n0\n3\n74\n0\n85\n82\n34\n2\n83\n0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "47 30\n17\n25\n38\n7 39\n41\n44\n25 9\n31\n27\n41\n38\n45\n30 17",
      "expected_output": "0\n17\n25\n38\n0\n41\n44\n0\n31\n27\n41\n38\n45\n0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "47 14\n22\n29\n49\n8 26\n5\n50\n36 33\n40\n45\n33\n17\n42\n39 34",
      "expected_output": "0\n22\n29\n49\n0\n5\n50\n0\n40\n45\n33\n17\n42\n0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "50 10\n39\n17\n23\n49 35\n41\n29\n18 6\n19\n41\n13\n13\n20\n14 25",
      "expected_output": "0\n39\n17\n23\n0\n41\n29\n0\n19\n41\n13\n13\n20\n0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "45 34\n15\n14\n13\n36 5\n51\n41\n52 51\n20\n29\n35\n23\n28\n25 7",
      "expected_output": "0\n15\n14\n13\n0\n51\n41\n0\n20\n29\n35\n23\n28\n0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "19 6\n43\n44\n17\n44 28\n35\n27\n12 30\n46\n18\n18\n47\n40\n48 17",
      "expected_output": "0\n43\n44\n17\n0\n35\n27\n0\n46\n18\n18\n47\n40\n0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "14 41\n18\n32\n5\n40 51\n38\n36\n34 27\n31\n32\n15\n23\n47\n14 34",
      "expected_output": "0\n18\n32\n5\n0\n38\n36\n0\n31\n32\n15\n23\n47\n0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "27 36\n35\n42\n11\n21 10\n6\n29\n6 33\n40\n36\n32\n17\n38\n38 11",
      "expected_output": "0\n35\n42\n11\n0\n6\n29\n0\n40\n36\n32\n17\n38\n0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "105 105\n105\n105\n105\n105 105\n105\n105\n105 105\n105\n105\n105\n105\n105\n105 105",
      "expected_output": "0\n105\n105\n105\n0\n105\n105\n0\n105\n105\n105\n105\n105\n0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "105 105\n105\n105\n105\n105 105\n105\n105\n105 105\n105\n105\n105\n105\n105\n105 105",
      "expected_output": "0\n105\n105\n105\n0\n105\n105\n0\n105\n105\n105\n105\n105\n0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 104\n104\n104\n2\n1 104\n1\n1\n104 2\n2\n104\n105\n2\n104\n104 2",
      "expected_output": "0\n104\n104\n2\n0\n1\n1\n0\n2\n104\n105\n2\n104\n0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 105\n105\n105\n1\n105 105\n2\n1\n2 105\n1\n2\n1\n105\n2\n105 1",
      "expected_output": "0\n105\n105\n1\n0\n2\n1\n0\n1\n2\n1\n105\n2\n0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:56",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:38:07"
}
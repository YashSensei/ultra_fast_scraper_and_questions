{
  "problem_code": "problems",
  "title": "Boards (Hard)",
  "tags": [],
  "text": "Super Board Games Inc. is a big company producing board games. A new game was invented within it which may become very popular. A board divided into square cells is required for this game. Left and lower borders of the board should be level and the height of columns of cells should not increase from left to right. Also the board must be entirely paveable with dominoes. After it was found out that the game is the most interesting when played on the board consisting of n cells, it has been decided to release as many versions of the game using different n-cell boards as possible. Help the company count the number of different boards that can be released.InputThe first line of input is number T - the amount of test cases. Each test is a single integer n - the number of cells.Constraints1 ≤ T ≤ 1001 ≤ n ≤ 100OutputFor each test case output the answer to the problem in the statement.ExampleInput:3\r\n2\r\n3\r\n4Output:2\r\n0\r\n5",
  "sample_input": "Input:3\r\n2\r\n3\r\n4Output:2\r\n0\r\n5",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/ADV04I1",
  "scraped_at": "2025-08-17 00:33:24",
  "test_cases": [
    {
      "input": "3\r\n2\r\n3\r\n4",
      "expected_output": "2\r\n0\r\n5",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1\n3",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n3\n5\n9\n7\n7",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "4\n8\n10\n4\n6",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "18\n17289109\n56884346\n12647143\n34816664\n31660757\n21656755\n88852619\n98445663\n36878355\n9447916\n99611585\n79475322\n88211480\n71559312\n60562214\n24152948\n77833283\n84736101",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "5\n21781423\n29810590\n18638191\n95821744\n32815102",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "15\n20595452\n91729726\n22679202\n56218953\n71225786\n28346755\n15892341\n16519029\n80268764\n84188746\n18369504\n43501623\n93359766\n6755960\n41139220",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "14\n81750351\n61241550\n42529208\n99410236\n10158982\n51337442\n11648648\n98394978\n28607305\n80785012\n36376997\n75362324\n54126775\n21781187",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "19\n73509997\n5617123\n64016869\n99143191\n51317562\n59755748\n80410599\n4624497\n28273912\n6469848\n29125202\n31929641\n95851402\n88549297\n7387358\n26484219\n60189078\n73451950\n92774526",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "31\n64794\n9001\n95808\n10450\n64857\n68719\n774\n77836\n50819\n56296\n87843\n11249\n24693\n67232\n34822\n38948\n72874\n89716\n78743\n44771\n77788\n59657\n78106\n75349\n19917\n1455\n92029\n42635\n33527\n74335\n65253",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "70\n92498\n50855\n75952\n34762\n55505\n78467\n62925\n23070\n68013\n60588\n87891\n22612\n19549\n85827\n15101\n84951\n16407\n73002\n61586\n80912\n68055\n12230\n38064\n89329\n69960\n28910\n59326\n32752\n42137\n35104\n17404\n26655\n95610\n64086\n63982\n87422\n58140\n59697\n82448\n36148\n88343\n44645\n62314\n17513\n23117\n74560\n92411\n58195\n65355\n36314\n94929\n19876\n63778\n61291\n63201\n15887\n33496\n11356\n62729\n30004\n83459\n51556\n27984\n12694\n80386\n84067\n97653\n82636\n26557\n80645",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "78\n14737\n91219\n33199\n62828\n54859\n61704\n89433\n5818\n28697\n62461\n54692\n95439\n16745\n31349\n38705\n46347\n62422\n17166\n3845\n27635\n71156\n23262\n99722\n22385\n64713\n49449\n56172\n19814\n84177\n62588\n75377\n43561\n64099\n18608\n4002\n91777\n34397\n42149\n47168\n3715\n44706\n32090\n55581\n5992\n40156\n80018\n53293\n58327\n15802\n31743\n77609\n95669\n32934\n73640\n1789\n30948\n28524\n80044\n42115\n45472\n45053\n65437\n40722\n72007\n85455\n30452\n74066\n23353\n98839\n24759\n57379\n83949\n48673\n84242\n19578\n62542\n13488\n20982",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "33\n39699\n44716\n7464\n95775\n7156\n40448\n50489\n24036\n99478\n91844\n81802\n35041\n11883\n98304\n34\n18105\n89720\n49666\n47697\n37740\n3116\n43889\n87136\n32634\n41432\n10164\n13459\n12779\n83741\n51012\n62007\n79296\n90379",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "65\n12212\n1647\n32088\n54143\n57911\n42601\n21920\n72922\n54280\n69650\n76613\n20729\n58580\n31042\n62473\n22917\n63228\n23868\n98124\n7661\n11075\n53329\n21709\n16097\n96945\n71773\n25751\n57453\n7394\n84190\n56149\n31264\n26131\n44650\n23032\n96712\n63901\n40400\n87341\n69421\n41014\n87615\n16159\n46568\n57425\n72372\n30355\n86445\n85161\n84451\n27633\n54462\n86032\n73273\n81856\n39330\n15921\n98855\n93986\n43864\n99023\n69562\n28864\n94362\n46849",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "92\n86691\n63440\n28177\n27034\n5514\n83275\n91935\n42985\n54125\n13699\n67164\n39345\n80850\n43085\n10670\n4058\n70293\n93173\n33889\n25382\n20101\n98894\n34615\n39110\n83503\n74159\n4628\n78393\n48458\n4428\n25858\n82590\n60289\n20249\n43094\n90700\n69187\n13765\n36674\n6045\n65897\n11706\n32679\n6165\n53676\n34724\n15013\n15865\n78025\n8359\n97583\n84474\n14413\n109\n53881\n53220\n25011\n77069\n62927\n70059\n62691\n77617\n88995\n50370\n15788\n5454\n15140\n65630\n61920\n62801\n51870\n86418\n15261\n72959\n9840\n23421\n71928\n40414\n65602\n24381\n2151\n91908\n3171\n33249\n57862\n23158\n82643\n39345\n53994\n13056\n96942\n14262",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "99\n69425\n66838\n57214\n49186\n68506\n74803\n17969\n89439\n27911\n33671\n33454\n5180\n47169\n3632\n40051\n97409\n62386\n65451\n12980\n92511\n34171\n80506\n79248\n22334\n2614\n74964\n33673\n83064\n63792\n13269\n34745\n93833\n83898\n88574\n80927\n84897\n2790\n20914\n25115\n18066\n43994\n87053\n94154\n17848\n49152\n96902\n39953\n7594\n83688\n41084\n20015\n33806\n91128\n87552\n58846\n17388\n69214\n79130\n5120\n80600\n88159\n46443\n99680\n25675\n74981\n92017\n77109\n36840\n9368\n28175\n46891\n78073\n8030\n96317\n6144\n44547\n17720\n39360\n18153\n75174\n36211\n24736\n54658\n36156\n12567\n78789\n31848\n64781\n89132\n62905\n83393\n39983\n27433\n86016\n3765\n60532\n85274\n64137\n47531",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "100\n70904393\n5970359\n89363478\n66244335\n8608322\n14245041\n61962781\n91339921\n73801752\n70049194\n55887338\n21646945\n15923812\n31676485\n45947340\n9819194\n81816556\n35976587\n31577561\n91813041\n23126410\n73559696\n74548756\n52708957\n21202646\n27523497\n86784283\n33466842\n66763917\n2701729\n77317082\n35335600\n25584575\n88805413\n46616682\n48895956\n81819071\n77665328\n94879751\n18741840\n61190428\n11265711\n88815623\n63078339\n37183130\n62976471\n6264144\n52572458\n96015824\n88789561\n17097930\n90014716\n22644147\n20693774\n65500190\n62493040\n32985703\n38100782\n7088022\n91938862\n52571300\n50841819\n65571363\n8158390\n31422566\n32688336\n38896399\n966333\n65335383\n74472365\n57030610\n4632780\n68038454\n24045894\n61610698\n34600883\n45943069\n46492520\n71432394\n74424019\n8240631\n78280672\n26348250\n70621007\n80221340\n71756759\n13754884\n44027922\n2347759\n61680805\n98032578\n54667222\n27658167\n66829826\n12301772\n88578994\n9708146\n3350584\n94207389\n9676774",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "100\n2679451\n10556316\n28042261\n3264622\n12458659\n27155358\n41458921\n68977569\n99682171\n81717217\n27299335\n6653469\n64590313\n266377\n25666306\n28431515\n3174566\n91224851\n64779503\n38630766\n48365932\n6711399\n53317296\n54488323\n89307185\n69261991\n93136525\n96898066\n97901548\n44733736\n42752909\n2380031\n40100847\n88963327\n35816264\n47597385\n82490596\n78289114\n26769452\n55304691\n657758\n84230011\n48395380\n24003120\n73448275\n16467866\n32660885\n95123776\n68097041\n75379859\n87959740\n57599321\n85665208\n49194253\n33219856\n65158420\n51572770\n68202225\n37457386\n28996730\n17637645\n62935431\n43327838\n39196159\n55280473\n14540018\n48944893\n99800614\n59788722\n78297707\n51487450\n78705546\n98780114\n5972642\n84401159\n44633525\n74652930\n67694563\n93624284\n8285996\n35026891\n47824867\n42267476\n69638943\n66693704\n40033403\n27282692\n87412644\n7039882\n1594206\n97117650\n69840314\n79580241\n29832743\n80242079\n78908356\n42530382\n58588947\n28418940\n44307468",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "1\n83018548",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 1)"
    },
    {
      "input": "100\n2005713\n100000000\n1\n55725827\n100000000\n1\n1\n1\n42661129\n1\n1\n1\n72934922\n100000000\n91898972\n7548463\n26411622\n1\n1\n1\n38166162\n100000000\n1\n1\n1\n100000000\n2242650\n1\n81752761\n100000000\n1\n100000000\n100000000\n100000000\n56425735\n100000000\n42129694\n100000000\n1\n11329338\n100000000\n100000000\n1\n100000000\n1\n24442625\n1\n100000000\n1\n1\n34407569\n100000000\n100000000\n88830570\n92410299\n50006143\n100000000\n1\n100000000\n74676196\n1\n99206957\n100000000\n1\n61008973\n100000000\n33419764\n100000000\n100000000\n100000000\n9639324\n100000000\n100000000\n1531075\n31516825\n1\n24762529\n1\n100000000\n1\n22131380\n1\n46925435\n95513558\n1\n100000000\n1\n1\n100000000\n1\n100000000\n100000000\n100000000\n100000000\n100000000\n92756643\n1\n100000000\n1\n1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 100)"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:49",
  "total_test_cases": 20
}
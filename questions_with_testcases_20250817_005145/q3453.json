{
  "problem_code": "problems",
  "title": "Key Task",
  "tags": [],
  "text": "The Czech Technical University is rather old - you already know that it celebrates 300 years\r\nof its existence in 2007. Some of the university buildings are old as well. And the navigation\r\nin old buildings can sometimes be a little bit tricky, because of strange long corridors that fork\r\nand join at absolutely unexpected places.The result is that some first-graders have often difficulties finding the right way to their classes.\r\nTherefore, the Student Union has developed a computer game to help the students to practice\r\ntheir orientation skills. The goal of the game is to find the way out of a labyrinth. Your task is\r\nto write a verification software that solves this game.The labyrinth is a 2-dimensional grid of squares, each square is either free or filled with a wall.\r\nSome of the free squares may contain doors or keys. There are four different types of keys and\r\ndoors: blue, yellow, red, and green. Each key can open only doors of the same color.\r\nYou can move between adjacent free squares vertically or horizontally, diagonal movement is\r\nnot allowed. You may not go across walls and you cannot leave the labyrinth area. If a square\r\ncontains a door, you may go there only if you have stepped on a square with an appropriate key\r\nbefore.InputThe input consists of several maps. Each map begins with a line containing two integer numbers\r\nR and C (1 ≤ R, C ≤ 100) specifying the map size. Then there are R lines each containing C\r\ncharacters. Each character is one of the following:Hash mark '#' Wall.Dot '.' Free square.Asterisk '*' Your position.Uppercase letter 'B','Y','R','G' Blue, yellow, red or green door.Uppercase letter 'X' Exit.Note that it is allowed to have:more than one exit,no exit at all,more doors and/or keys of the same color, andkeys without corresponding doors and vice versa.You may assume that the marker of your position (\"*\") will appear exactly once in every map.\r\nThere is one blank line after each map. The input is terminated by two zeros in place of the\r\nmap size.OutputFor each map, print one line containing the sentence \"Escape possible in S steps.\", where\r\nS is the smallest possible number of step to reach any of the exits. If no exit can be reached,\r\noutput the string \"The poor student is trapped!\" instead.One step is defined as a movement between two adjacent cells. Grabbing a key or unlocking\r\na door does not count as a step.ExampleInput:1 10\r\n*........X\r\n\r\n1 3\r\n*#X\r\n\r\n3 20\r\n####################\r\n#XY.gBr.*.Rb.G.GG.y#\r\n####################\r\n\r\n0 0Output:Escape possible in 9 steps.\r\nThe poor student is trapped!\r\nEscape possible in 45 steps.",
  "sample_input": "Input:1 10\r\n*........X\r\n\r\n1 3\r\n*#X\r\n\r\n3 20\r\n####################\r\n#XY.gBr.*.Rb.G.GG.y#\r\n####################\r\n\r\n0 0Output:Escape possible in 9 steps.\r\nThe poor student is trapped!\r\nEscape possible in 45 steps.",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/CERC07K",
  "scraped_at": "2025-08-17 00:34:16",
  "test_cases": [
    {
      "input": "1 10\r\n*........X\r\n\r\n1 3\r\n*#X\r\n\r\n3 20\r\n####################\r\n#XY.gBr.*.Rb.G.GG.y#\r\n####################\r\n\r\n0 0",
      "expected_output": "Escape possible in 9 steps.\r\nThe poor student is trapped!\r\nEscape possible in 45 steps.",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "8 7\nmz\n6 8\nzjgh\n2 7\ntevnuhppfjpadm\nfkhujkycovwcgru\nwjscerfpwa\n8 6",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "7 9\nkveqv\n6 9\nmzbk\n4 7\nadwtvlafzuwcp\nkwzmmqkgctxjoyovu\ndnwxbutgvqkownejjymt\n4 10",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "2 8\naukzn\n3 7\nqkmv\n3 3\njxingztlbyhrazpeairm\nftmmigavit\nkqfpiq\n7 6",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "81 28\nvvfievqsswou\n7 23\nttyxp\n76 37\nimzzidcanqogwx\nbykrutpeidewcasos\nsqwzuicpjhfslqob\n6 33",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "79 83\nozsomjai\n48 81\nwn\n17 65\nzardhgqxewqisgyhxdqy\nytrxzn\nxxkeeobeghxfydwekg\n97 99",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "54 89\nkpafjxqgfzurxv\n37 28\nuftxrc\n14 43\nfvekctqskncvht\nogwllmulbggl\nx\n19 47",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "19 18\nu\n71 18\nhsnxr\n5 60\nddiwqpdadlsjky\nkzmojylawnzympi\nrxnfgyabt\n11 30",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "94 67\narcyejoqigztvh\n71 56\nqccx\n43 63\nswushrejjcuehwz\nvvhtapcewct\nxkmsu\n31 31",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "490 247\ndlinavb\n249 99\ni\n256 96\noqkilzsdeqtlu\ncjajiygrqzzfeigoey\nuodzcskwjx\n233 471",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "249 222\nujaqrtjatlcfluughwu\n238 288\nid\n339 153\nhhny\nbautkgq\ndzgvswvkaqd\n209 101",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "265 308\nbuncfa\n302 352\nfcl\n228 485\nqghzdbenjg\nqkojovdcnjoxxexn\nogblmfqmu\n67 279",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "282 146\ndmbmw\n276 354\nltfos\n368 282\nmownmkysbgdcil\nezrobyinn\nzlxkhciafiheyccj\n215 291",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "350 72\nremfqkulzwahbrm\n68 442\nwrjrw\n182 364\nggzgnsxewwkhwclqho\nbutcp\norjmrl\n353 227",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "114 79\nlzymcqielubmeuuocc\n437 182\ny\n377 246\nfmqlieqygmfwpgrnxad\nqlsstulskealbrakk\noeoggglh\n159 346",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "378 434\njogcm\n240 311\nztjhk\n174 218\nelxpwpvnsla\nnjmi\nfkvjvgmevpaazaq\n174 394",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\noo\n1000 1000\nlcb\n1000 1000\npsyszjpcxt\niqavgdwtq\nhsdvnzrwebgy\n1000 1000",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\nnvaytzhf\n1000 1000\ncr\n1000 1000\nryef\nkrusozexqpmkqnc\nngjotzwre\n1000 1000",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 2\nzjdazkhikeqxwbvyi\n999 2\nkw\n999 999\ntuhklnsfbfwajluc\niloyrcqqzoajcqun\niolzsabnklmjxhpv\n1 1",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1000 1\nclopzrov\n999 1\nbq\n1 1000\ntge\nrouefdgjtvyuncjsgrz\nh\n1 1",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:56",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:38:08"
}
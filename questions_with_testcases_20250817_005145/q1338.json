{
  "problem_code": "problems",
  "title": "Dot Product Maximization",
  "tags": [],
  "text": "Given two vectors, a = (xa, ya), b = (xb, yb), their dot product is defined as follows:dp(a, b) = xa*xb+ ya*yb.Given N vectors in the plane, find a pair for each of them (among those given in the input) such that the dot product of the vector and its pair is maximal. You may pair a vector with itself too.InputThe first line of input contains a single integer N (1 ≤ N ≤ 200000).Each of the next N lines contain a pair of real numbers, xiand yi(0 ≤ |xi|, |yi| ≤ 100000),representing the i-th vector. xiand yiwill be rounded to 3 decimal places.OutputOutput N lines, i-th one containing the maximal dot product for the i-th vector from the input rounded to 3 decimal places.ExampleInput:40.000 1.0000.000 2.0001.000 1.0000.000 0.000Output:2.0004.0002.0000.000Explanation:Pair the first vector with the second, the second with itself, third with itself or with the second, and the last one with any of them.",
  "sample_input": "Input:40.000 1.0000.000 2.0001.000 1.0000.000 0.000Output:2.0004.0002.0000.000",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/DPMAX",
  "scraped_at": "2025-08-17 00:33:42",
  "test_cases": [
    {
      "input": "40.000 1.0000.000 2.0001.000 1.0000.000 0.000",
      "expected_output": "2.0004.0002.0000.000",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3 4 3 3 5 5 7 2",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "2 7 1 1 6 1 6 8",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "2 5 10 4 5 6 10 4",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "97 82 92 90 49 72 58 76",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "82 8 40 4 30 88 17 85",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "28 57 25 1 94 75 81 12",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "89 95 10 36 82 1 82 14",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "7 84 30 34 35 42 22 77",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "67783 76387 79444 93471 84932 77344 73480 67243",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "36885 73806 83190 25870 61105 13646 68520 87402",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "39848 76261 26849 65002 94938 32158 32494 72670",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "18390 16565 56768 62846 70429 40629 41293 56637",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "87563 54000 56377 56308 10284 25767 51692 10821",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "20929 26651 92144 44149 98844 22117 65335 51999",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "32491 11024 58313 70306 44838 10712 52657 78420",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "200000 200000 200000 200000 200000 200000 200000 200000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "200000 200000 200000 200000 200000 200000 200000 200000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 199999 200000 1 1 2 199999 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "200000 199999 200000 1 199999 199999 200000 200000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:49",
  "total_test_cases": 20
}
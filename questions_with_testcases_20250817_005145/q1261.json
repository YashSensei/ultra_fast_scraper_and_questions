{
  "problem_code": "problems",
  "title": "Symmetric matrix",
  "tags": [],
  "text": "[NOTE: A harder version of this problem isSymmetric Matrix 2; you may want to try it once you solve this one.]You are given anNxNmatrixmijsuch thatmij== mjifori, j = 1, ..., N. We would like to compute the value ofNote that in the above expression we are going overKindicesi1, ..., iKthat run over the values1, ..., N, while summing over the product of all theK*(K-1)/2possible matrix elements that we can form with these indices.InputThe first line of the input contains two integersNandK(2 ≤ N ≤ 100and2 ≤ K ≤ 5), representing the number of rows and columns of the matrixmijand the number of sums in the formula above, respectively. The followingNlines containNintegers each, being thej-th number in thei-th line the value ofmij(-10  ≤ mij≤ 10andmij== mjifori, j = 1, ..., N).OutputPrint a single line with the result of the calculation. Because this number can be very big, output its remainder modulo division by1000000007(== 109+7).ExampleInput:4 54 5\r\n-4 -3 -4 2\r\n-3 -6 1 -8\r\n-4 1 -10 -6\r\n2 -8 -6 0Output:308822466",
  "sample_input": "Input:4 54 5\r\n-4 -3 -4 2\r\n-3 -6 1 -8\r\n-4 1 -10 -6\r\n2 -8 -6 0Output:308822466",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/MATPROD",
  "scraped_at": "2025-08-17 00:33:24",
  "test_cases": [
    {
      "input": "4 54 5\r\n-4 -3 -4 2\r\n-3 -6 1 -8\r\n-4 1 -10 -6\r\n2 -8 -6 0",
      "expected_output": "308822466",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "10 3 10\n2 3 7 7\n7 4 6 2\n9 2 1 8\n2 4 7 2",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "1 9 5\n10 2 5 7\n6 6 3 9\n1 1 2 4\n9 4 10 3",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "9 7 2\n5 3 4 1\n7 10 9 1\n1 3 5 7\n10 8 8 5",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "53 54 28\n39 28 35 61\n41 52 75 21\n53 62 31 18\n32 65 62 51",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "76 6 5\n81 36 96 38\n12 15 36 17\n42 66 14 59\n85 40 82 16",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "33 82 87\n30 88 59 77\n50 76 20 98\n61 24 76 79\n80 25 16 90",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "48 45 20\n71 78 88 13\n26 5 57 58\n52 63 10 3\n43 62 62 26",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "4 16 52\n46 12 14 57\n49 86 40 21\n19 27 44 4\n72 28 53 25",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "38 13 37\n39 32 36 26\n29 30 5 34\n47 19 5 44\n11 19 25 29",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "25 14 16\n22 38 27 50\n26 42 50 41\n6 35 37 12\n18 50 14 41",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "33 15 49\n31 49 30 16\n25 28 17 46\n28 22 29 18\n23 50 32 49",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "23 11 27\n35 34 29 13\n33 29 45 23\n39 36 30 32\n19 33 27 17",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "20 24 17\n29 14 45 47\n25 19 43 11\n45 48 30 28\n25 29 50 24",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "40 8 49\n39 18 49 23\n37 13 11 28\n29 15 10 32\n46 34 47 18",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "5 21 16\n22 42 50 39\n41 11 24 9\n37 20 49 32\n29 9 11 22",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "100 100 100\n100 100 100 100\n100 100 100 100\n100 100 100 100\n100 100 100 100",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "100 100 100\n100 100 100 100\n100 100 100 100\n100 100 100 100\n100 100 100 100",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 100 1\n2 99 2 100\n100 1 99 100\n99 2 2 2\n99 99 99 1",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "99 1 100\n99 99 1 2\n1 99 2 2\n2 99 100 1\n99 2 100 100",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:49",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:36:58"
}
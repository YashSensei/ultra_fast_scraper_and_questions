{
  "problem_code": "problems",
  "title": "Secret Code",
  "tags": [],
  "text": "The Sarcophagus itself is locked by a secret numerical code. When somebody\r\nwants to open it, he must know the code and set it exactly on the top of the\r\nSarcophagus. A very intricate mechanism then opens the cover. If an incorrect\r\ncode is entered,\r\nthe tickets inside would catch fire immediately and they would\r\nhave been lost forever. The code (consisting of up to 100 integers)\r\nwas hidden in the Alexandrian Library but unfortunately, as you probably\r\nknow, the library burned down completely.But an almost unknown archaeologist has obtained a copy of the code something\r\nduring the 18th century. He\r\nwas afraid that the code could get to the \"wrong people\"' so he has\r\nencoded the numbers in a very special way. He took a random complex numberBthat was greater (in absolute value) than any of the encoded numbers. Then\r\nhe counted the numbers as the digits of the system with basisB. That means\r\nthe sequence of numbersan,an-1...a1,a0was encoded as the numberX = a0+ a1B + a2B2+ ... +\r\nanBn.Your goal is to decrypt the secret code, i.e. to express a given numberXin\r\nthe number system to the baseB. In other words, given the\r\nnumbersXandByou are to determine the ``digit''a0throughan.InputThe input consists ofTtest cases (equal to about 100000). The number of them (T) is\r\ngiven on the first line of the input file. Each test case consists of one single\r\nline containing four integer numbersXr,\r\nXi,Br,Bi(|Xr|,|Xi| ≤ 1000000,|Br|,|Bi| ≤ 16). These numbers\r\nindicate the real and complex components of numbersXandB,\r\ni.e.X = Xr+ i.Xi,B = Br+ i.Bi.Bis the basis of\r\nthe system (|B| > 1),Xis the number you have to\r\nexpress.OutputYour program must output a single line for each test case. The line should\r\ncontain the \"digits''an,an-1,\r\n...,a1,a0, separated by \r\ncommas. The following conditions must be satisfied:for alliin{0, 1, 2 ... n}:0 ≤ ai< |B|X = a0+ a1B + a2B2+ ... +\r\nanBnifn > 0thenan<> 0n ≤ 100If there are no numbers meeting these criteria, output the sentence\r\n\"The code cannot be decrypted.\". If there are more possibilities,\r\nprint any of them.ExampleInput:4\r\n-935 2475 -11 -15\r\n1 0 -3 -2\r\n93 16 3 2\r\n191 -192 11 -12Output:8,11,18\r\n1\r\nThe code cannot be decrypted.\r\n16,15Warning: large Input/Output data, be careful with certain languages",
  "sample_input": "Input:4\r\n-935 2475 -11 -15\r\n1 0 -3 -2\r\n93 16 3 2\r\n191 -192 11 -12Output:8,11,18\r\n1\r\nThe code cannot be decrypted.\r\n16,15",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/CODE1",
  "scraped_at": "2025-08-17 00:33:40",
  "test_cases": [
    {
      "input": "4\r\n-935 2475 -11 -15\r\n1 0 -3 -2\r\n93 16 3 2\r\n191 -192 11 -12",
      "expected_output": "8,11,18\r\n1\r\nThe code cannot be decrypted.\r\n16,15",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2\n3\n6",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "4\n4\n3\n8\n3",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "4\n10\n6\n8\n7",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "14\n78479048\n85346467\n68648922\n6854063\n8941604\n25611931\n8294745\n17203406\n41495387\n69429803\n37435177\n96128765\n22055255\n16440969",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "11\n95734292\n33022172\n89363425\n39928350\n18151323\n49071263\n40620524\n51007179\n33903255\n4376006\n70785964",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "10\n9280415\n44500125\n31796056\n79945939\n51950884\n63865626\n7139239\n7125596\n4212795\n77365184",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "20\n80496189\n30871390\n19430267\n1074644\n64163933\n6643209\n27474502\n97165149\n20882008\n42755757\n90342453\n37154672\n92659642\n49136142\n41293945\n2676097\n60284872\n22891126\n32431820\n27669180",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "7\n61407747\n60835253\n21125604\n37574545\n42961543\n47570199\n7667457",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "66\n74318\n38002\n58654\n16755\n33568\n15104\n68157\n99894\n83726\n53382\n83741\n14695\n54648\n15583\n76649\n92122\n76231\n19133\n94316\n98663\n48251\n49498\n53258\n21031\n41522\n70099\n4812\n57123\n90508\n23064\n36663\n18578\n47089\n12029\n88344\n16098\n18042\n23001\n5184\n15948\n53454\n85707\n31834\n8354\n14859\n77880\n56116\n15875\n17173\n32518\n99027\n91256\n87439\n39619\n94759\n24329\n29338\n80102\n28538\n28266\n65385\n74120\n32638\n86865\n83079\n44530",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "40\n81767\n77978\n9422\n96818\n3759\n81722\n97838\n1504\n54317\n12663\n24927\n58332\n41138\n80469\n76225\n48067\n17905\n88467\n77027\n22461\n24872\n40347\n15116\n88035\n52927\n28675\n55402\n82239\n50486\n63683\n35242\n97889\n74005\n28404\n81458\n23791\n32500\n96266\n44409\n49858",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "88\n37677\n43476\n62917\n22604\n63676\n58795\n57904\n77043\n80408\n62683\n57528\n74586\n89071\n81970\n1620\n88073\n84901\n26880\n64332\n38869\n47681\n71488\n87447\n17413\n51443\n66851\n94381\n36770\n10777\n87121\n58721\n59327\n6812\n35617\n46409\n32036\n56018\n35097\n46009\n92133\n11751\n22193\n91444\n11386\n60446\n27323\n58227\n2686\n39803\n37915\n95764\n6349\n39699\n52950\n344\n80775\n39139\n50098\n88467\n78629\n79689\n21243\n37548\n97127\n31012\n29511\n45546\n68183\n40218\n74148\n38880\n75352\n43316\n71115\n34373\n18365\n97478\n42917\n16977\n8703\n98619\n721\n54440\n15878\n19771\n38400\n88092\n19528",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "29\n91178\n82618\n49151\n29217\n81483\n5832\n17000\n28161\n50928\n27003\n4809\n81828\n15773\n58099\n708\n66138\n38489\n1963\n60088\n7615\n76388\n37886\n6521\n63661\n18030\n27930\n30723\n71625\n14344",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "77\n70413\n6311\n25895\n79001\n88198\n46546\n70047\n28142\n44079\n71831\n42480\n1215\n89312\n527\n44792\n69889\n42675\n2387\n65089\n27565\n41752\n22804\n79258\n96848\n66825\n9610\n61686\n78322\n94169\n93068\n2773\n29615\n33400\n34802\n62243\n64698\n42375\n57597\n19434\n71670\n9939\n60587\n94184\n11648\n86387\n93678\n41946\n13854\n12749\n10159\n77178\n49724\n33951\n91882\n99331\n53401\n55153\n54092\n82674\n25185\n71778\n3749\n22002\n14035\n33311\n13644\n23163\n90233\n84952\n88967\n25313\n16623\n22145\n39212\n10859\n88644\n80230",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "87\n17073\n32393\n97032\n89038\n61409\n8361\n68090\n86855\n13673\n74731\n37929\n30157\n79050\n60216\n37930\n11615\n61628\n54861\n38144\n87927\n97794\n62155\n82286\n18517\n57303\n7639\n14335\n75964\n94260\n18142\n17409\n91807\n67421\n60590\n60933\n53399\n72608\n60837\n86350\n88865\n79552\n92320\n92933\n86746\n13513\n80706\n48458\n15450\n44160\n91702\n17447\n19689\n65736\n39786\n27910\n44325\n82483\n12789\n75541\n70426\n11146\n20221\n86415\n59208\n25828\n42594\n84408\n21307\n55968\n83631\n72818\n55668\n26511\n21889\n58021\n33491\n77436\n90322\n42407\n36163\n82631\n42246\n99570\n75604\n11986\n45426\n11366",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "33\n49660\n28645\n22004\n67702\n31871\n70810\n42326\n49157\n95115\n36837\n84025\n74396\n20861\n50228\n79342\n7054\n3659\n58582\n62309\n27726\n32197\n64002\n48852\n82889\n98802\n67585\n98030\n58742\n37827\n54697\n47204\n96568\n57266",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "100\n59107928\n23785197\n53997442\n6701473\n23736721\n13300112\n33224627\n51477471\n49335570\n83511859\n35818433\n63445875\n30718610\n82368531\n70256243\n25860750\n7853674\n14084526\n17706876\n51546730\n74118345\n69517349\n92454438\n74900695\n71617093\n35186748\n19421880\n77283262\n502441\n52093206\n89668687\n71317655\n38882333\n93880511\n18693177\n3249071\n14591463\n93955281\n52111731\n84706644\n33183460\n12001687\n85080640\n21323789\n35388698\n99771130\n70338749\n39285257\n92493997\n22020012\n64455413\n86076712\n84823666\n37644336\n89363944\n41868079\n77373121\n34411610\n85054980\n26526091\n69744153\n21900602\n98390135\n81308615\n71160877\n44375879\n46835237\n24003468\n12788596\n43207070\n69458316\n1526662\n20948762\n19927825\n31767921\n1425473\n28682040\n1176583\n19712487\n61613372\n41987616\n14173413\n12758832\n91606806\n99372936\n24583516\n73594850\n70249048\n532807\n93819155\n78683568\n82456768\n70181565\n68578866\n13770615\n99971421\n54721391\n39136491\n99528091\n63552079",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "100\n33305207\n32815592\n17596949\n22237830\n71657170\n72942643\n62921735\n84140496\n75258293\n36195735\n81573385\n63603530\n69196912\n76575908\n10370660\n65469311\n27147058\n11749386\n86131362\n96661324\n66740495\n91187179\n75535458\n20346751\n42031388\n71797265\n45606412\n77904369\n44012023\n92977016\n36457794\n72837156\n64363130\n19341545\n84459708\n75741423\n31610073\n96284040\n40393962\n5336667\n81176065\n37074781\n26749253\n7102915\n91645850\n84958370\n92595141\n75136639\n15303033\n18573664\n46680127\n7437108\n23217272\n66887892\n74513346\n3658674\n93323608\n82575076\n43078266\n89637090\n17963578\n13160065\n56517372\n88702004\n58244670\n20472873\n39487186\n59452207\n65269896\n18177759\n69300479\n9845991\n90639465\n94300334\n69250634\n38605051\n18729337\n26876017\n52152412\n29024437\n92417862\n61440069\n54490843\n85190936\n43087981\n63618738\n23269245\n10068255\n60382866\n36387425\n93116913\n85825137\n28994948\n18801675\n54493190\n7254725\n2772213\n31367456\n83317831\n59477340",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "100\n1\n100000000\n14952909\n100000000\n1\n1\n75140037\n100000000\n1\n74028957\n100000000\n1\n1\n100000000\n100000000\n100000000\n71298665\n74433038\n78346607\n30768035\n1\n72457920\n100000000\n73567930\n1\n1\n1\n1\n26139096\n1\n1\n50199712\n1\n1\n1\n75745343\n1\n1\n1\n100000000\n76180686\n1\n1\n40764472\n1\n26686097\n60090304\n100000000\n100000000\n53702509\n1\n100000000\n1\n100000000\n100000000\n100000000\n92956305\n100000000\n100000000\n42639697\n100000000\n1\n1\n4078521\n100000000\n1\n6965570\n100000000\n100000000\n100000000\n1\n1\n63025220\n41040048\n100000000\n58919506\n1\n100000000\n1\n1\n1\n100000000\n58908664\n1\n100000000\n100000000\n100000000\n100000000\n15070519\n100000000\n1\n1\n1\n100000000\n1\n100000000\n100000000\n1\n100000000\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 100)"
    },
    {
      "input": "2\n1\n77389567",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 2)"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:51",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "St Bernard and Gravity",
  "tags": [],
  "text": "St. Bernard'snew game is played on an RÃ—C board. Initially every square is either empty or blocked by a wall. Bernard throws a rock into the board by putting it in the top-most row of a column and then letting gravity do the rest.Gravity works as follows:If the square under the rock is a wall or if the rock is in the bottom row of a column, then the rock remains there.If the square under the rock is empty, then the rock moves to that square.If the square under the rock contains another rock, then the falling rock may slide sideways:If the squares left and left-down of the rock are empty, then the rock slides one square left.If the rock doesn't slide left and the  squares to the right and right-down are empty, then the rock slides one  square right.Otherwise, the rock remains there and never moves again.Bernard will never throw another rock while the previous rock hasn't settled down.Write a program that draws the board after Bernard throws all his rocks into the board, if we know the columns that Bernard threw his rocks into, in order.Note:Bernard will never throw a rock into column in which the top row isn't empty.InputThe first line contains integers R and C (1 <= R <= 30000, 1 <= C <= 30), the size of the board.Each of the following R lines contains C characters, the initial layout of the board. A '.' represents an empty field, while the uppercase letter 'X' is a square blocked by a wall.The next line contains an integer N (1 <= N <= 100000), the number of rocks Bernard throws.Each of the following N lines contains an integer between 1 and C, the column into which Bernard throws a rock (the left-most column is column 1).OutputOutput R lines, each containing C characters, the final layout of the board. Rocks should be presented with an uppercase letter 'O'.SampleInput:5 4\r\n....\r\n....\r\nX...\r\n....\r\n....\r\n4\r\n1\r\n1\r\n1\r\n1Output:....\r\nO...\r\nX...\r\n....\r\nOOO.Input:7 6\r\n......\r\n......\r\n...XX.\r\n......\r\n......\r\n.XX...\r\n......\r\n6\r\n1\r\n4\r\n4\r\n6\r\n4\r\n4Output:......\r\n...O..\r\n...XX.\r\n......\r\n.OO...\r\n.XX...\r\nO..O.OIn the first example, all rocks are thrown in the first column. The first rock stops on the wall. The second rock falls on the first, slides right and stops at the bottom of the second column. The third rock falls on the first then on the second rock, slides left and rests at the bottom of the first column. The fourth rock falls on the first then on the second, then slides right.",
  "sample_input": "Input:5 4\r\n....\r\n....\r\nX...\r\n....\r\n....\r\n4\r\n1\r\n1\r\n1\r\n1Output:....\r\nO...\r\nX...\r\n....\r\nOOO.",
  "sample_output": "Input:7 6\r\n......\r\n......\r\n...XX.\r\n......\r\n......\r\n.XX...\r\n......\r\n6\r\n1\r\n4\r\n4\r\n6\r\n4\r\n4Output:......\r\n...O..\r\n...XX.\r\n......\r\n.OO...\r\n.XX...\r\nO..O.O",
  "link": "https://www.spoj.com/problems/BGRAVITY",
  "scraped_at": "2025-08-17 00:33:40",
  "test_cases": [
    {
      "input": "5 4\r\n....\r\n....\r\nX...\r\n....\r\n....\r\n4\r\n1\r\n1\r\n1\r\n1",
      "expected_output": "....\r\nO...\r\nX...\r\n....\r\nOOO.",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "7 6\r\n......\r\n......\r\n...XX.\r\n......\r\n......\r\n.XX...\r\n......\r\n6\r\n1\r\n4\r\n4\r\n6\r\n4\r\n4",
      "expected_output": "......\r\n...O..\r\n...XX.\r\n......\r\n.OO...\r\n.XX...\r\nO..O.O",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "8 6\ni\nfapgk\ntufz\nznn\nutexv\n10\n4\n3\n4\n7",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "1 3\no\nku\nqnsdd\nzixeco\nslb\n4\n6\n3\n8\n7",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "6 5\nohzqcl\nxu\ny\nvuswvq\nierkgh\n7\n10\n2\n2\n6",
      "expected_output": "0",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "91 33\nqya\nxg\nzc\nf\nemhr\n36\n29\n8\n8\n28",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "22 3\nmudlw\nrxj\nfpgfortx\nhk\nxkjkti\n37\n83\n31\n99\n66",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "77 88\ngu\nuyxrn\nw\nzgy\nmgopqdh\n28\n41\n77\n27\n21",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "12 64\nthvuraso\nulaogf\nxfz\nitgr\nk\n95\n51\n6\n85\n14",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "30 65\na\nvuvxbu\nokstvs\nwsgbqmyc\ngnemnhbj\n3\n74\n59\n62\n61",
      "expected_output": "0",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "163 258\ns\nxyc\nxv\no\nleexp\n359\n500\n245\n410\n359",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "438 258\ngaw\nsaya\neomyhqvs\nvpvwu\ndfks\n479\n81\n282\n368\n308",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "377 277\nssft\nob\nqj\nrqkqtcl\ndwdpfeyp\n351\n300\n407\n266\n239",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "171 264\nmtabwo\nxkuxe\nzgker\nnq\nhrc\n349\n368\n246\n51\n367",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "60 200\nxbimudww\nsfftmdda\ncguk\ntgkb\nnvdeop\n136\n138\n195\n360\n101",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "201 377\nuoxcocq\nrpts\nbocssqz\nnbrjrgp\nikuq\n432\n241\n477\n345\n110",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "472 477\nrvmpd\nh\nnvvf\nh\ndirewh\n85\n359\n51\n364\n111",
      "expected_output": "0",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\nwbxhe\nzwhofsg\noxzkdw\nhfp\nhqgo\n1000\n1000\n1000\n1000\n1000",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\nfalqlxo\nwtglrgu\nyw\nrz\nbpobvy\n1000\n1000\n1000\n1000\n1000",
      "expected_output": "0",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "1 1\nlh\npgh\nejkw\nvwf\nmfyyat\n2\n2\n999\n999\n2",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:49",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:36:58"
}
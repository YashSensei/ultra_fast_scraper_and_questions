{
  "problem_code": "problems",
  "title": "Buy Your House",
  "tags": [],
  "text": "You are going to buy a house and hence communicated with a real estate development company, which has just started their business and you are going to be the first buyer. So they are offering you something special. The real estate company has a rectangular shaped land of width W and height H. They are using coordinate system for measuring lands. (0, 0) is the lower left corner of their land and any point which has distance x from lower edge of the land and distance y from left edge of the land is known as (x, y) in the coordinate system.The real estate company has already built some houses in that piece of land. All of them are rectangular shaped and their edges are parallel to edges of the main land. The location of a house can be addressed by four integers x1, y1, x2, y2. Where (x1, y1) is the lower left corner and (x2, y2) upper right corner of the house.The special offer is that you can choose any rectangular shaped region that contains exactly one house with any amount of adjacent open space. You may not have enough money to afford open space and choose to buy only the region that a house occupies. If you have enough money, you can keep open space in front of your house for gardening!But still there are some restrictions. For the ease of their future use of rest of their land you can only choose a rectangular shaped region and the edges of which are parallel to the edges of the main land. The corners of your selected region should be integer coordinates. It can be (3, 2) but cannot be (3.5, 2). You cannot chose a region for which part of a house is inside the region and another part of that house is outside the region. You cannot choose a region having more than one house and a region having no house. How many ways you can choose your land following the above rules?InputInput will start with an integer T (T is around 500), the number of test cases. Each of the test cases starts with two integers W and H (1 ≤ W, H ≤ 1000000000), width and height of the land and the next line contains an integer N (1 ≤ N ≤ 50), the number of houses in the land.Each of the next N lines will contain four integer x1, y1, x2, y2 (0 ≤ x1 < x2 ≤ W and 0 ≤ y1 < y2 ≤ H), which describes the location of the house. Note that no house can overlap with another house and all the given coordinates will be non-negative integers.OutputFor each input, print a single line of the form “Case #: W”, where ‘#’ will be replaced by the case number and W will be replaced by the number of ways you can choose your land. Here W can be very large, so you should print the number of ways modulo 1000000007 as W.ExampleInput:2\r\n3 3\r\n1\r\n1 1 2 2\r\n10 10\r\n2\r\n1 1 4 4\r\n6 6 8 8Output:Case 1: 16\r\nCase 2: 429",
  "sample_input": "Input:2\r\n3 3\r\n1\r\n1 1 2 2\r\n10 10\r\n2\r\n1 1 4 4\r\n6 6 8 8Output:Case 1: 16\r\nCase 2: 429",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/PHU09H",
  "scraped_at": "2025-08-17 00:33:39",
  "test_cases": [
    {
      "input": "2\r\n3 3\r\n1\r\n1 1 2 2\r\n10 10\r\n2\r\n1 1 4 4\r\n6 6 8 8",
      "expected_output": "Case 1: 16\r\nCase 2: 429",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2\n8\n9",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n6\n9\n9\n2\n4",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "2\n7\n7",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "16\n31723147\n41091034\n6753949\n5127545\n1518965\n41105822\n20293052\n43161640\n17702745\n33540020\n13786742\n55623970\n25799130\n97469251\n97577491\n64728327",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "19\n35619805\n70100547\n73373823\n79563471\n8780154\n10079880\n14326620\n51947547\n68425710\n21605738\n70297898\n90770344\n59617746\n19225326\n24302000\n28151918\n85185139\n41785787\n28004098",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "15\n33553092\n36940362\n11519219\n86644366\n57287662\n39152233\n73071234\n13389905\n91765593\n91577131\n36204853\n75917472\n18053133\n7950708\n45005170",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "20\n77381315\n17484344\n88997474\n93357919\n80015240\n92523991\n343357\n68531992\n83868630\n53104228\n74648636\n83623179\n16327184\n81865694\n96596229\n54276907\n47106406\n46943261\n62953054\n46367819",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "17\n39461513\n99979444\n28302897\n98086571\n65908251\n59167740\n51670744\n7108142\n88926662\n63762007\n78283050\n77938530\n33299344\n51634462\n77282777\n57618554\n38739480",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "25\n78567\n81719\n45209\n34883\n86173\n63966\n49276\n1711\n15054\n53345\n58368\n23972\n93682\n34730\n40169\n33981\n74949\n47988\n84072\n87512\n76603\n77321\n10829\n72786\n60851",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "25\n89691\n56402\n19186\n81251\n75554\n45668\n9448\n15473\n95211\n47352\n47078\n84762\n38953\n30714\n9687\n81594\n36966\n50286\n1834\n59214\n29379\n97797\n93279\n21929\n46223",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "30\n87323\n23973\n73942\n20036\n8711\n91341\n90310\n92670\n78539\n31493\n21549\n85778\n7386\n55140\n31902\n9685\n56825\n48648\n15293\n56889\n36766\n58172\n45890\n93239\n84047\n84382\n26019\n76292\n52997\n68538",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "39\n25570\n36423\n78984\n88229\n58666\n30769\n8005\n32833\n3897\n29863\n4341\n93554\n13512\n97739\n92964\n97956\n77899\n23757\n99408\n76203\n93346\n57366\n35858\n58027\n87471\n55302\n52547\n93699\n56882\n83550\n61034\n80716\n57127\n87862\n49328\n99551\n64129\n23331\n52090",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "23\n13064\n26074\n76118\n35912\n85818\n65106\n70227\n36478\n65105\n39876\n6018\n70599\n13553\n85591\n39288\n29160\n56285\n32171\n3753\n98382\n90836\n16471\n86516",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "35\n41198\n14243\n88176\n26842\n9665\n5063\n92473\n68302\n72010\n77994\n52735\n87600\n35482\n49437\n58123\n25699\n52952\n39891\n22001\n45393\n87572\n92312\n65986\n5638\n91396\n42560\n4446\n60588\n9231\n11899\n85471\n66873\n99087\n18768\n94990",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "23\n66317\n2909\n25245\n70287\n83079\n45359\n37535\n58313\n82948\n24064\n25645\n49511\n97434\n71225\n45913\n68277\n15994\n54844\n53358\n66770\n65063\n2538\n98588",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "50\n67578616\n29053018\n92018138\n38504059\n78082403\n77149486\n91405374\n89601975\n81898981\n51460407\n227509\n23719993\n61192871\n53619160\n3871516\n66745560\n67968318\n393632\n87743294\n88275469\n1889266\n28197407\n19776865\n86665826\n62759639\n44576606\n4092662\n57750640\n88183013\n64082771\n2904806\n58359515\n72036925\n11442726\n92961320\n96837884\n60197771\n9540855\n98541105\n73348701\n15577893\n18972333\n31524746\n61119640\n81118386\n71983048\n54013172\n57411828\n89261579\n50276794",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 50)"
    },
    {
      "input": "50\n1134832\n77014170\n52500500\n80034372\n53095487\n98275874\n92115306\n18303237\n16143097\n53558369\n33291978\n38255469\n66553920\n35937174\n6454594\n4412623\n56322181\n5147186\n99981141\n88382527\n8800670\n59188163\n38435145\n5827319\n74063030\n53532267\n41198421\n83365663\n36563525\n91165671\n37156662\n56622932\n37547518\n65737746\n74896281\n61901172\n5377000\n87418293\n16273839\n401937\n11987064\n93298043\n97466908\n48866526\n99609968\n20429656\n70716949\n37493347\n92738092\n53337260",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 50)"
    },
    {
      "input": "2\n100000000\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 2)"
    },
    {
      "input": "2\n1\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 2)"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:50",
  "total_test_cases": 20
}
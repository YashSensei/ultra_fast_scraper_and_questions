{
  "problem_code": "problems",
  "title": "Permutation Game",
  "tags": [],
  "text": "Harsha is given 9 integers a1, a2, a3... a9. This denotes that he is given a11's, a22's ... a99's. Let 'x' = (a1+ a2+ ... a9). Now, Harsha makes all possible 'x' digit numbers by using these given digits. Let S be the set of all such numbers which he makes. Now he constructs a directed graph containing |S| nodes, in which each node denotes a unique number from the set. For all numbers u, v belonging to S, there is a directed edge from node 'u' to node 'v in the graph iff u > v. It is easy to note that we obtain a directed acyclic graph. What's more, the edges of the graph are weighted. The weight of an edge joining node 'u' and node 'v' is equal to u + v. Now, Deepak decides to test Harsha's memory and gives him 'Q' queries. Each query consists of two numbers 'u', 'v' (u > v, both belonging to the set S). For each query Harsha must provide the following answers:How many distinct paths are there from node 'u' to node 'v' in the graph.For each distinct path 'i' from node 'u' to node 'v', let Sidenote the sum of weights of all edges on this path. Calculate the value of sum(Si), for every distinct path 'i' from node 'u' to node 'v'.InputThe first line of input contains 9 integers a1, a2... a9. The second line contains a single integer 'Q', denoting the number of queries. Each of the next 'Q' lines contain 2 numbers 'u' and 'v'.OutputFor each query, output two space separated integers denoting the number of distinct paths and sum of weights of all paths respectively. Since the output can be large, output these quantities modulo 1000000007.Two paths (v1, v2... vm) and (u1, u2... un) are distinct if:m ≠ nm = n, there exists some index 'k' (1 ≤ k ≤ m) such that vk≠ ukConstraints1 ≤ (a1+ a2+ ... a9) ≤ 5001 ≤ Q ≤ 20ai≥ 0ExampleInput:2 0 1 0 0 0 0 0 0\r\n1\r\n311 113Output:2 1110ExplanationTest case 1: The set S for the above problem is {311, 113, 131}. The edges of the graph are 311→131, 311→113, 131→113. There are two distinct paths from 311 to 113, namely (311→131→113) and (311→113). The sum of weights of edges on path-1 = (311 + 131) + (131 + 113) = 686. For path-2, the sum of weights of edges = (311 + 113) = 424. Therefore, answer = 686 + 424 = 1110.",
  "sample_input": "Input:2 0 1 0 0 0 0 0 0\r\n1\r\n311 113Output:2 1110",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/BTCODE_I",
  "scraped_at": "2025-08-17 00:33:05",
  "test_cases": [
    {
      "input": "2 0 1 0 0 0 0 0 0\r\n1\r\n311 113",
      "expected_output": "2 1110",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4 1 6 7 5 4 4 4 9\n5\n4 10",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "9 10 3 7 9 7 3 6 4\n3\n2 3",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "3 10 3 3 4 8 4 8 4\n2\n5 2",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "4 65 87 12 32 74 22 83 53\n34\n73 20",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "66 100 33 21 48 61 49 73 61\n62\n55 79",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "100 1 77 81 23 63 6 40 69\n61\n19 3",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "1 26 15 29 80 35 68 82 94\n29\n52 5",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "44 86 62 15 16 29 95 31 17\n82\n65 50",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "142 431 428 50 441 153 389 443 427\n451\n486 358",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "421 478 137 180 52 117 287 486 282\n287\n361 376",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "494 247 103 114 295 318 383 282 363\n305\n228 142",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "233 344 68 91 114 303 466 394 333\n288\n100 233",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "269 248 88 490 349 500 446 174 374\n89\n240 173",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "196 83 96 208 106 418 74 213 360\n451\n270 453",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "483 245 328 375 287 92 218 484 78\n316\n409 306",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1 1 1000 2 1000 2 2\n1\n999 999",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 2 1 1000 999 999 2 1 1000\n1\n1000 1000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:45",
  "total_test_cases": 20
}
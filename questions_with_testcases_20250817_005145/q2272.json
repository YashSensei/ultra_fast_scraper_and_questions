{
  "problem_code": "problems",
  "title": "Mravograd",
  "tags": [],
  "text": "The hard working ants have built a town called Ant Town. They modeled their town after Manhattan, with H horizontal and V vertical streets which cross in V×O intersections. As ants don't like water, with the first raindrops comes chaos in Ant Town. Town authorities have placed umbrellas under which any number of ants can hide, but only on N intersections.When the rain starts, each ant on an intersection starts running,using streets, to the nearest intersection with an umbrella. But, if an ant can choose from more than one such intersection, it panics and, not knowing where to go,stays on its starting intersectionand gets wet. Town authorities use the name \"wet intersections\" for such starting intersections.For example, if Ant Town has 10 horizontal and 10 vertical streets, and if there are 4 intersections with umbrellas, then the question marks in the figure represent \"wet intersections\":Picture represents first example. We count streets from left to right from 1 to V and from down upwards from 1 to H.Write a program which, given the locations of intersections with umbrellas, determines thenumber of \"wet intersections\" in Ant Town.InputThe first line contains two integers H and V (1 ≤ H, V ≤ 30 000), the numbers of horizontal and vertical streets in Ant Town.Horizontal streets are numbered 1 to H, vertical streets 1 to V.The second line contains an integer N (1 ≤ N ≤ 10), the number of intersections with umbrellas.Each of the following N lines contains two integer h and v, meaning that there is an umbrella on the crossing of horizontal street h and vertical street v. The locations of all umbrellas will be distinct.OutputOutput the number of \"wet intersections\" in Ant Town.ExampleInput:10 10\r\n4\r\n4 4\r\n4 6\r\n6 4\r\n9 9Output:19Input:9 9\r\n3\r\n2 2\r\n5 5\r\n8 8Output:36Input:100 100\r\n2\r\n50 50\r\n50 51Output:0",
  "sample_input": "Input:10 10\r\n4\r\n4 4\r\n4 6\r\n6 4\r\n9 9Output:19",
  "sample_output": "Input:9 9\r\n3\r\n2 2\r\n5 5\r\n8 8Output:36",
  "link": "https://www.spoj.com/problems/MRAVOGRA",
  "scraped_at": "2025-08-17 00:33:48",
  "test_cases": [
    {
      "input": "10 10\r\n4\r\n4 4\r\n4 6\r\n6 4\r\n9 9",
      "expected_output": "19",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "9 9\r\n3\r\n2 2\r\n5 5\r\n8 8",
      "expected_output": "36",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "1 9\n1\n6 2\n4 2\n10 5\n4 5",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "4 10\n5\n8 5\n7 6\n7 3\n2 4",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "6 5\n4\n4 5\n8 5\n9 9\n7 6",
      "expected_output": "0",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "3 3\n9\n7 2\n8 2\n10 7\n3 5",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "10 4\n6\n3 6\n5 4\n9 3\n9 10",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "1 3\n1\n2 10\n2 8\n4 1\n3 8",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "7 5\n9\n5 5\n8 3\n7 4\n8 4",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "3 2\n7\n7 8\n4 1\n9 5\n2 3",
      "expected_output": "0",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "3 5\n3\n1 2\n2 1\n2 2\n4 2",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "1 1\n2\n5 3\n4 4\n1 1\n1 5",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "3 1\n5\n4 2\n2 4\n5 3\n4 4",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "5 4\n3\n2 5\n3 1\n5 2\n5 5",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "3 3\n2\n3 5\n2 5\n1 5\n3 2",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "2 4\n5\n1 5\n2 2\n1 3\n5 4",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "2 4\n3\n5 1\n5 3\n4 5\n1 4",
      "expected_output": "0",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "10 10\n10\n10 10\n10 10\n10 10\n10 10",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "10 10\n10\n10 10\n10 10\n10 10\n10 10",
      "expected_output": "0",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "1 2\n2\n2 2\n1 2\n10 10\n1 9",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:52",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:30"
}
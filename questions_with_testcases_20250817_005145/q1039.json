{
  "problem_code": "problems",
  "title": "Hexagram",
  "tags": [],
  "text": "A Hexagram is a 6-pointed star, sometimes called the Star of David. Given these numbers:3 17 15 18 11 22 12 23 21 7 9 13There are four unique ways of assigning the numbers to vertices of the hexagram such that all of the sets of four numbers along the lines have the same sum (57 in this case). All other ways may be obtained from these by rotation and/or reflection.Given 12 distinct numbers, in how many ways, disregarding rotations and reflections, can you assign the numbers to the vertices such that the sum of the numbers along each of 6 straight lines passing through 4 vertices is the same?InputThere will be several test cases in the input. Each test case will consist of twelve unique positive integers on a single line, with single spaces separating them. All of the numbers will be less than 1,000,000. The input will end with a line with twelve 0s.OutputFor each test case, output the number of ways the numbers can be assigned to vertices such that the sum along each line of the hexagram is the same. Put each answer on its own line. Output no extra spaces, and do not separate answers with blank lines.ExampleInput:3 17 15 18 11 22 12 23 21 7 9 131 2 3 4 5 6 7 8 9 10 11 130 0 0 0 0 0 0 0 0 0 0 0Output:40",
  "sample_input": "Input:3 17 15 18 11 22 12 23 21 7 9 131 2 3 4 5 6 7 8 9 10 11 130 0 0 0 0 0 0 0 0 0 0 0Output:40",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/HEXGRAM",
  "scraped_at": "2025-08-17 00:33:38",
  "test_cases": [
    {
      "input": "3 17 15 18 11 22 12 23 21 7 9 131 2 3 4 5 6 7 8 9 10 11 130 0 0 0 0 0 0 0 0 0 0 0",
      "expected_output": "40",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "6 9 4 7 6 5 8 3 6 2 2 3 3 4 3 5 8 5 9 7 6 6 5 5 7 1 2 9 4 8 10 7 3 7",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "6 5 8 9 1 9 8 3 3 8 8 4 4 3 6 8 6 3 4 8 7 1 4 10 5 1 8 3 3 7 5 1 8 3",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "7 3 7 2 6 10 5 4 10 4 9 5 9 3 10 7 8 2 1 7 9 6 6 9 8 3 10 3 2 7 6 8 10 9",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "33 14 83 13 61 22 79 19 95 22 54 58 45 96 57 87 37 24 55 63 2 98 49 22 69 8 5 24 40 88 90 53 88 48",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "71 79 93 77 57 20 49 36 29 41 38 44 64 91 35 94 53 51 91 22 24 12 91 22 57 78 69 77 12 27 18 50 56 59",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "32 83 38 82 71 79 59 4 31 82 49 15 44 70 78 38 82 46 39 24 9 93 63 51 31 51 55 45 51 7 70 43 28 75",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "48 81 70 11 25 25 58 55 100 20 97 93 9 99 88 37 11 42 16 25 46 31 70 94 47 76 50 74 73 11 66 52 4 32",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "61 22 57 72 39 58 93 87 41 39 69 54 33 51 25 70 47 62 68 18 23 96 30 61 90 70 93 97 53 3 11 88 10 91",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "336 446 332 140 224 122 332 207 334 250 490 441 300 336 244 498 125 442 130 467 156 187 377 369 149 484 469 380 241 104 381 141 137 254",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "377 92 141 422 368 324 77 65 435 488 91 254 161 249 291 332 118 178 204 499 305 463 189 175 490 65 262 498 326 209 175 285 395 222",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "83 362 52 230 83 63 267 166 341 148 148 176 468 280 161 219 290 55 135 310 271 181 297 409 277 345 60 143 348 56 187 228 321 98",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "431 213 272 54 95 177 410 296 409 277 412 424 244 168 295 293 391 76 306 260 88 425 474 130 61 289 121 72 81 435 266 256 385 100",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "434 65 245 393 497 160 435 155 94 241 213 493 144 92 406 251 154 191 70 434 464 303 126 158 433 470 55 331 108 116 306 206 381 310",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "448 357 307 482 389 368 261 407 185 326 429 384 203 334 473 361 424 367 334 468 179 62 419 334 144 445 240 421 480 262 447 148 393 71",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "284 263 336 342 258 482 225 84 198 361 306 97 314 337 82 461 276 73 167 176 72 319 325 493 56 265 234 276 347 459 267 87 171 468",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 2 999 1000 2 999 1 1000 999 999 2 2 1 999 999 999 999 999 1000 2 1 1000 2 1 999 1 2 1000 2 1 2 1000 1",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 1000 2 1000 1000 1 999 999 2 1000 1 1 1000 2 1000 999 999 1000 1 999 2 1000 999 999 1000 1000 1000 1 1000 1000 999 2 2 1",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:48",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:36:51"
}
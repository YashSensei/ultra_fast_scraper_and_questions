{
  "problem_code": "problems",
  "title": "Capital City",
  "tags": [],
  "text": "There are N cities in Flatland connected with M unidirectional roads. The cities are numbered from 1 to N. The Flat Circle of Flatland (FCF) wants to set up a new capital city for his kingdom. For security reasons,the capital must be reachable from all other citiesof Flatland. FCF needs the list ofallcandidate cities. You are the chief programmer at FACM (Flat Association for Computing Machinery) responsible for providing the list to FCF as soon as possible.InputThe first line of the input file contains two integers: 1 ≤ N ≤ 100,000 and 1 ≤ M ≤ 200,000. Each of the following M lines contains two integers 1 ≤ A, B ≤ N denoting a road from A to B.OutputThe output file contains an integer denoting the number of candidate cities followed by the list of candidate cities in increasing order.ExampleInput:4 4\r\n1 2\r\n3 2\r\n4 3\r\n2 1Output:2\r\n1 2",
  "sample_input": "Input:4 4\r\n1 2\r\n3 2\r\n4 3\r\n2 1Output:2\r\n1 2",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/CAPCITY",
  "scraped_at": "2025-08-17 00:33:27",
  "test_cases": [
    {
      "input": "4 4\r\n1 2\r\n3 2\r\n4 3\r\n2 1",
      "expected_output": "2\r\n1 2",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "10 3\n6 3\n9 3\n4 2\n5 7",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "2 8\n4 6\n10 9\n2 4\n4 3",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "9 10\n7 2\n5 3\n1 10\n2 4",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "76 96\n46 72\n7 21\n88 92\n9 53",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "56 98\n53 82\n6 67\n96 40\n98 68",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "84 20\n19 99\n2 47\n44 73\n47 36",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "8 13\n33 11\n88 81\n33 75\n18 23",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "11 5\n18 33\n55 14\n14 42\n92 73",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "50 42\n25 24\n8 9\n48 29\n31 15",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "23 23\n27 38\n44 45\n11 27\n10 34",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "47 50\n41 33\n49 50\n21 8\n40 46",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "41 44\n8 26\n28 8\n16 27\n21 46",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "5 24\n34 36\n44 34\n14 12\n33 27",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "18 19\n23 8\n31 31\n8 25\n46 29",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "5 27\n42 23\n25 37\n30 8\n47 37",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "100 100\n100 100\n100 100\n100 100\n100 100",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "100 100\n100 100\n100 100\n100 100\n100 100",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "100 100\n100 2\n1 99\n2 100\n99 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 100\n100 2\n1 99\n1 99\n99 99",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:48",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Tautology",
  "tags": [],
  "text": "Write a program that checks if the given logical expression is a tautology. The logical expression is a tautology if it is always true, regardless of logical value of its variables.InputOn the first line there is the number of expressions to check (at most 35). The expression is in a prefix notation, that means that operator precedes its arguments. The following logical operators will be used:C - and \r\nD - or\r\nI - implies\r\nE - if, and only if\r\nN - notThe variables will be lowercase letters (a-z). There will be no more than 16 different letters in the expression. The length of the expression will not exceed 111 characters.OutputFor each expression write one word: YES if it is a tautology, NO in other case.ExampleSample input:7\r\nIIpqDpNp\r\nNCNpp\r\nIaz\r\nNNNNNNNp\r\nIIqrIIpqIpr\r\nIpp\r\nEzzSample output:YES\r\nYES\r\nNO\r\nNO\r\nYES\r\nYES\r\nYES",
  "sample_input": "C - and \r\nD - or\r\nI - implies\r\nE - if, and only if\r\nN - not",
  "sample_output": "Sample input:7\r\nIIpqDpNp\r\nNCNpp\r\nIaz\r\nNNNNNNNp\r\nIIqrIIpqIpr\r\nIpp\r\nEzzSample output:YES\r\nYES\r\nNO\r\nNO\r\nYES\r\nYES\r\nYES",
  "link": "https://www.spoj.com/problems/TAUT",
  "scraped_at": "2025-08-17 00:33:06",
  "test_cases": [
    {
      "input": "C - and \r\nD - or\r\nI - implies\r\nE - if, and only if\r\nN - not",
      "expected_output": "Sample input:7\r\nIIpqDpNp\r\nNCNpp\r\nIaz\r\nNNNNNNNp\r\nIIqrIIpqIpr\r\nIpp\r\nEzzSample output:YES\r\nYES\r\nNO\r\nNO\r\nYES\r\nYES\r\nYES",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "fuwve y rgdtp\nmtuu g f\nfev zdcur lhf\nlv muojv zqyo ifoae qfx d\nqcv fbqrk fwy",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "ghr ioty nsibm\nuz xyrr ecgxz\nwawji ti glg\ny jg cmgyr am qsv tgi\nep enpuu gz",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "ayjpp k e\nyawil d o\nje p jaigl\nyu hicf wegnu t vm kibe\nahn m zzcxe",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "khu c yyzwt\nky kah ffbt\nxfbap eynu nysx\nqls l adqnx bqh rpavs ejk\nhik qfh kwf",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "nzzr ruzse rvkmd\nc cbq gen\ngqx fw zsg\nql df ngct mmnrm brn vt\nqzpue ha tbohj",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "dywy nyybu cp\nb lbkro wjj\nybnpb ms enbqmws\nx cgg oj lhppw zhwa mdctv\nqznys u xky",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "wz v h\nm kfmt pvwoq\nbjlu qhiu qe\nir awtua kfpw taqmo wx cj\nolb rlrt qbwo",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "uzvd nq obkru\nbszsp kn dxpdp\neub pgwl ddrne\ndgf zcimo tbu tdn vjb fxzmn\nwhegl b x",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "yr c caw\nlku zt kxlel\nctfp jtdy tbolr\nyyyd p x ahe ihj pk\nrqy bwdpc c",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "cgoz e q\nluwbv lgij u\nz eyw j\nx bnk uzm nkeod a j\nngc gms qa",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "afta wys nvrbn\neey e p\nja q rte\nudngf ih fl v yzmoy ydmu\nlt v g",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "qa p wgi\nmtyz naknw zv\ntklyr cl jbjx\nqsy rt nuk t r t\nxvgir sizab nevpv",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "zp hz ry\nm c wjd\nt bsme vdq\nbssr vhv buchp cy yk wtrj\ntx doco kfdq",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "foifo nak rsz\nbj gmqra lifdj\nvrlk ohh e\nxn z zzk pfyd tevg whxi\ntxjx xcmqb xxl",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "kum krapm ucdy\nnukw zh f\nyw zq qa\nmld u le djq nu cbp\nmuggo i lbd",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "rxz xh hfpiq\nvrfi pvmzn zdp\npbck clw qsm\nghsv guo e cmz ro hbw\nrb sf np",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "so uxci r\ny bfaky llcti\naot rb jszav\nc zuk wlnu qkoc hkc h\nnrcr w pfdb",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "mgj gcpaw vghzq\nrxx mshlz o\nc ixxv k\nao jpnhq qaph pzh yqte qfmh\nka paxni zr",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "pl ohj hcx\ntl m ounqa\ntk vl wlcfvzm\nzxqtm uhixu q d vl ofsd\nikoyq oasvw g",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:46",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:36:30"
}
{
  "problem_code": "problems",
  "title": "He is offside!",
  "tags": [],
  "text": "Hemisphere Network is the largest television network in Tumbolia, a small country located\r\neast of South America (or south of East America). The most popular sport in Tumbolia,\r\nunsurprisingly, is soccer; many games are broadcast every week in Tumbolia.Hemisphere Network receives many requests to replay dubious plays; usually, these happen\r\nwhen a player is deemed to be offside by the referee. An attacking player isoffsideif he is\r\nnearer to his opponents’ goal line than the second last opponent. A player is not offside ifhe is level with the second last opponent orhe is level with the last two opponents.Through the use of computer graphics technology, Hemisphere Network can take an image of\r\nthe field and determine the distances of the players to the defending team’s goal line, but they\r\nstill need a program that, given these distances, decides whether a player is offside.InputThe input file contains several test cases. The first line of each test case contains two integers\r\nA and D separated by a single space indicating, respectively, the number of attacking and\r\ndefending players involved in the play (2 <= A,D <= 11). The next line contains A integers Biseparated by single spaces, indicating the distances of the attacking players to the goal line\r\n(1 <= Bi<= 104). The next line contains D integers Cjseparated by single spaces, indicating the\r\ndistances of the defending players to the goal line (1 <= Cj<= 104). The end of input is indicated\r\nby A = D = 0.OutputFor each test case in the input print a line containing a single character: “Y” (uppercase) if\r\nthere is an attacking player offside, and “N” (uppercase) otherwise.ExampleInput:2 3\r\n500 700\r\n700 500 500\r\n2 2\r\n200 400\r\n200 1000\r\n3 4\r\n530 510 490\r\n480 470 50 310\r\n0 0Output:N\r\nY\r\nN",
  "sample_input": "Input:2 3\r\n500 700\r\n700 500 500\r\n2 2\r\n200 400\r\n200 1000\r\n3 4\r\n530 510 490\r\n480 470 50 310\r\n0 0Output:N\r\nY\r\nN",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/OFFSIDE",
  "scraped_at": "2025-08-17 00:33:13",
  "test_cases": [
    {
      "input": "2 3\r\n500 700\r\n700 500 500\r\n2 2\r\n200 400\r\n200 1000\r\n3 4\r\n530 510 490\r\n480 470 50 310\r\n0 0",
      "expected_output": "N\r\nY\r\nN",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "10 1\n3 5\n7 9 6\n10 9\n1 10\n8 7\n6 10\n9 4 2\n5 7 8 2\n2 9",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "3 4\n7 4\n1 5 5\n4 1\n7 8\n3 9\n5 4\n10 3 1\n7 9 5 3\n7 1",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "6 7\n9 8\n7 2 8\n8 1\n10 3\n7 7\n4 4\n5 5 9\n6 9 6 8\n6 8",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "1 55\n16 42\n98 64 3\n98 53\n40 97\n42 52\n42 66\n85 27 22\n90 77 12 27\n89 46",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "8 45\n45 62\n88 39 51\n44 69\n64 60\n49 76\n63 15\n64 69 25\n62 44 41 86\n74 73",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "11 39\n15 48\n8 1 24\n72 36\n83 79\n19 18\n17 96\n36 60 55\n66 35 56 78\n23 94",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "40 26\n44 63\n84 70 37\n97 85\n13 86\n54 3\n67 72\n39 43 32\n81 51 29 38\n45 81",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "83 36\n42 37\n28 27 64\n76 61\n19 56\n39 55\n11 17\n97 96 99\n66 45 21 89\n96 5",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "79 69\n436 395\n161 491 307\n172 303\n325 403\n478 148\n63 443\n203 332 283\n407 173 465 453\n383 483",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "301 116\n239 204\n334 172 353\n339 109\n274 288\n495 446\n284 449\n112 202 322\n167 317 77 288\n392 85",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "130 393\n100 243\n417 110 166\n320 240\n61 441\n196 51\n317 192\n455 474 354\n155 135 246 292\n447 306",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "106 339\n500 359\n179 56 328\n332 272\n212 230\n139 386\n180 418\n151 71 356\n178 259 125 144\n104 142",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "500 458\n154 489\n326 232 324\n56 203\n440 72\n246 441\n443 493\n391 479 186\n485 438 55 400\n172 94",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "438 279\n148 313\n224 144 494\n483 165\n312 466\n105 259\n412 217\n56 93 332\n394 398 429 411\n162 222",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "146 99\n258 344\n141 191 117\n399 105\n310 158\n52 435\n61 306\n239 257 331\n189 96 334 171\n250 133",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000 1000\n1000 1000 1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000 1000\n1000 1000 1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 999\n1000 2\n1000 2 2\n2 2\n999 1000\n1 2\n1 999\n1000 1000 999\n2 1000 1000 1000\n1 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 1\n999 1000\n1 1000 1000\n1000 1\n999 1\n2 2\n1000 1\n1 1 1\n999 1000 1 1000\n2 999",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:46",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "SHAKTIMAN AND KILWISH",
  "tags": [],
  "text": "Since very long time shaktiman and kilwish have been fighting with  each other but the fight never came to end . So finally  I came to rescue . I decided that the result of the fight will be  decided by a mathematical game, in which  I will  write a number (N) . Kilwish and shaktiman will play the game  alternatively and each of them would subtract a number(n) [n is less than N]  such that N modulo n gives zero. The game is repeted turn by  turn until the one, who now cannot make a further move looses the gameShaktiman being weak at mathematics asks you for help, whether or not he can win in that particular case. If Shaktimaan wins that game then print \"Thankyou Shaktiman\" otherwise print \"Sorry Shaktiman\".The game begins with shaktimaan playing first move.It is well understood that both of them will make moves in optimal way.InputInput contains test cases t (< 10^5)  and followed by t numbers (1 ≤ N ≤ 106).OutputIf Shaktimaan wins that game then print\"Thankyou Shaktiman\"otherwise print\"Sorry Shaktiman\".ExampleInput:2\r\n212\r\n424Output:Thankyou Shaktiman\r\nThankyou Shaktiman",
  "sample_input": "Input:2\r\n212\r\n424Output:Thankyou Shaktiman\r\nThankyou Shaktiman",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/SHAKTI",
  "scraped_at": "2025-08-17 00:34:35",
  "test_cases": [
    {
      "input": "2\r\n212\r\n424",
      "expected_output": "Thankyou Shaktiman\r\nThankyou Shaktiman",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3\n6\n1\n6",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "4\n3\n4\n3\n5",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "2\n6\n9",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "14\n87407936\n94249253\n88337541\n81028934\n62160799\n76814191\n33356512\n68686346\n23049781\n73318467\n9347163\n36756944\n66369950\n10077983",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "15\n33728868\n78807236\n32715466\n97834094\n74329260\n91247126\n89423507\n10890121\n80450217\n58565478\n2069704\n19985864\n48734563\n71096831\n3960033",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "19\n46525972\n62757003\n82895078\n79487923\n85730345\n14315110\n19474357\n64198370\n93495408\n62498343\n68370708\n62517750\n50606105\n37486959\n52454259\n32935130\n9335852\n7082325\n73026998",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "14\n68189170\n42419150\n81596858\n30723443\n95395137\n39895388\n43384652\n36772325\n58553815\n48746956\n92827775\n43729531\n224536\n98513606",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "20\n78118269\n4036014\n88351703\n80263758\n72993321\n45897381\n60554794\n68372381\n3931566\n60217793\n52277426\n53303813\n14296186\n47375960\n48847165\n37998895\n47352914\n45944883\n59838901\n8446159",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "71\n36139\n69534\n64386\n98033\n32667\n13998\n9175\n19027\n14289\n4561\n48409\n77041\n70419\n86994\n91170\n9110\n84003\n13298\n29025\n15093\n53940\n23071\n6918\n22981\n31368\n83388\n52989\n84323\n34332\n95812\n95110\n71136\n33249\n34115\n84406\n86815\n21870\n84140\n64613\n11610\n63965\n21854\n21875\n47181\n60710\n74532\n21693\n49895\n7346\n34123\n48687\n26213\n97946\n8180\n63992\n39285\n74426\n51579\n39470\n38276\n1150\n74419\n28742\n23447\n88326\n82155\n4901\n78454\n92887\n16274\n6217",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "91\n31318\n351\n94679\n41110\n58202\n79407\n69926\n17145\n2596\n28673\n76176\n6727\n55361\n81664\n83894\n32925\n67394\n65516\n22175\n62932\n24018\n88849\n89698\n631\n22796\n33503\n19701\n13801\n92669\n60797\n36303\n9690\n38496\n61950\n55625\n21305\n28201\n96257\n41680\n21253\n7462\n57166\n65355\n21589\n12615\n16552\n62234\n72001\n73483\n95984\n8731\n47692\n89265\n2076\n28226\n29717\n22992\n84129\n32808\n77057\n76944\n96283\n13356\n57675\n47961\n56510\n6013\n53948\n21018\n5975\n1483\n50575\n16168\n77979\n13623\n46677\n23984\n28332\n3933\n11979\n47025\n61063\n2094\n2763\n50724\n10155\n19787\n56905\n42925\n2189\n75880",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "24\n26160\n39805\n70266\n99589\n20080\n6506\n44151\n41725\n96458\n32192\n19904\n95614\n83487\n26594\n76376\n80263\n94431\n12096\n15076\n36858\n37041\n25936\n84893\n9276",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "104\n1601\n86432\n21025\n19691\n59841\n49810\n51835\n41356\n52430\n33475\n94758\n85996\n32088\n86861\n23001\n2959\n40078\n28130\n97634\n95871\n31888\n16196\n33358\n22775\n60020\n65372\n3218\n32076\n24189\n48273\n57409\n88637\n95617\n4842\n45195\n95462\n73502\n89863\n83705\n95390\n3191\n62011\n96267\n30401\n2860\n76614\n25716\n97493\n5784\n85652\n9398\n54140\n74379\n96612\n5019\n25822\n55066\n58226\n54719\n19856\n84183\n83074\n19860\n69960\n58175\n95930\n24722\n72862\n12945\n60112\n55161\n34207\n16119\n5917\n13280\n76386\n38534\n44970\n79316\n70524\n22389\n21662\n24874\n13217\n24233\n44801\n10313\n47587\n85907\n3869\n22664\n45675\n95070\n90268\n57446\n75249\n94813\n47342\n74142\n40791\n34401\n56905\n13689\n75972",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "26\n22281\n25359\n7218\n91961\n60856\n78704\n36615\n50669\n66215\n2780\n45498\n79658\n29262\n8918\n32040\n7690\n44513\n23353\n95292\n70370\n30381\n80858\n5371\n50402\n66269\n62054",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "51\n55123\n80083\n77550\n60559\n47692\n45202\n13249\n46245\n37585\n55494\n40760\n73777\n78044\n5749\n39621\n92000\n46482\n32361\n91165\n1078\n5315\n3202\n60109\n92621\n58976\n73894\n28684\n12046\n45281\n30953\n1197\n50817\n85806\n69107\n39728\n59194\n92929\n22523\n26863\n32267\n32930\n46147\n1201\n57107\n53609\n6813\n85633\n44780\n96396\n49631\n54441",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "51\n32391\n55045\n20616\n50252\n64334\n166\n98468\n99275\n20508\n80122\n83270\n52394\n4625\n563\n38204\n94329\n71480\n55590\n35987\n1862\n32678\n79278\n84112\n11692\n4375\n23672\n90710\n44492\n32137\n18915\n1640\n84917\n29014\n79514\n48264\n50380\n51176\n87591\n7914\n75981\n62229\n72111\n64914\n37418\n7021\n16375\n72733\n65451\n69133\n56835\n54049",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "106\n84679156\n96588992\n1122156\n8943824\n18458090\n46041125\n23844749\n65973618\n8757790\n52291537\n59475021\n18733169\n25141051\n74362621\n45068631\n59183919\n68290746\n87969832\n58267703\n25421559\n15969351\n59947141\n70667171\n44731705\n93183708\n44102490\n93100815\n23262189\n86337900\n3455369\n85675004\n89037420\n14805326\n31339352\n60218196\n79733285\n78923567\n52009159\n81163201\n29572155\n14717299\n40212304\n31408947\n48024691\n48655037\n41628699\n8066770\n63468778\n24823817\n14505291\n22942654\n11801958\n91490079\n62325566\n28178007\n53104947\n75174949\n67387737\n71924622\n4379132\n22660632\n48419458\n9944675\n37388719\n38672788\n4693669\n39694530\n39052285\n27738315\n16339317\n66627719\n94258924\n52677589\n48000349\n72801012\n51321992\n52002547\n82645440\n79502488\n36865260\n77023343\n15451874\n12156637\n4847118\n52431603\n45691705\n90140660\n64598431\n50470448\n58433209\n57277620\n26392452\n14422929\n20346873\n7352245\n50351290\n14142462\n90230188\n3079391\n11374763\n9223377\n16527762\n74862317\n77155370\n41641307\n37023660",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 106)"
    },
    {
      "input": "106\n6753550\n86277383\n47302870\n72886926\n87196356\n26698233\n47040195\n18708224\n61384210\n41552115\n38055291\n52264381\n5745587\n4201133\n90735412\n83264456\n78627665\n40730261\n88987351\n22979873\n8427571\n63732291\n30377350\n95678066\n37618295\n12285792\n35972204\n97586903\n42581125\n66328399\n55670520\n47588673\n32599030\n71153865\n91568812\n31403250\n25979793\n89583412\n27542806\n84668214\n65856069\n35550649\n76154364\n48488021\n94107608\n25871119\n97953605\n63955677\n83212491\n18877946\n57700902\n62250365\n93746649\n95843212\n97510655\n9123754\n85331855\n20092536\n10589817\n38678082\n46427825\n72282071\n9031193\n7860110\n34677381\n9552068\n87223210\n13751989\n4298019\n84448819\n43799909\n3245399\n93178493\n16806005\n31233013\n78952075\n23349600\n63138940\n76824366\n77296990\n41918055\n13027077\n81519943\n75089339\n24740330\n56145201\n61721060\n68444200\n58937485\n29517492\n42791429\n79902313\n98121012\n51852736\n8668726\n85325660\n68513123\n95082025\n2018370\n25684080\n22627379\n64236502\n56187122\n60355305\n32700585\n41449203",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 106)"
    },
    {
      "input": "1\n7148600",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 1)"
    },
    {
      "input": "1\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 1)"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:57",
  "total_test_cases": 20
}
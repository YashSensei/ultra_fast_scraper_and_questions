{
  "problem_code": "problems",
  "title": "Unlock the Cellphone",
  "tags": [],
  "text": "Modern high-tech cell phones use unlock patterns to unlock the system. The pattern is usually a 3×3 dot array. By moving your finger over there dots, you can generate your personal unlock pattern. More specifically, press your finger over any starting dot, then slide all the way to the next dot, touch it, and so on. Jumping is not allowed. For example, starting from dot 1, you can slide to touch dot 2, dot 4 and dot 5, but sliding directly to dot 3, dot 7 or dot 9 are not allowed. Note that sliding from 1 to 6 and 8 is also allowed because they are not considered as jumping over any dot. However, you can jump a dot if it has been touched before. For example, starting with 1-5-9-6, you can slide directly to dot 4.Here is a very particular cell phone. It has a dot array of sizen×m. Some of the dots are ordinary ones: you can touch, and slide over them when touched before; some are forbidden ones: you cannot touch or slide over them; some are inactive ones: you cannot touch them, but can slide over them. Each dot can only be touched once. You are required to calculate how many different unlock patterns passing through all the ordinary dots.InputThe input contains several test cases. Each test case begins with a line containing two integersnandm(1 ≤n,m≤ 5), indicating the row and column number of the lock keypad. The followingnlines each containsmintegersKi,jindicating the properties of each key,Ki,j= 0 stands for an ordinary key,Ki,j= 1 stands for a forbidden key; andKi,j= 2 stands for an inactive key. The number of ordinary keys is greater than zero and no more than 16.Input terminates by EOF.OutputFor each test, output an integer indicating the number of different lock patterns.ExampleInput:2 2\r\n0 0\r\n0 0\r\n3 3\r\n0 0 0\r\n0 2 1\r\n0 0 0Output:24\r\n2140",
  "sample_input": "Input:2 2\r\n0 0\r\n0 0\r\n3 3\r\n0 0 0\r\n0 2 1\r\n0 0 0Output:24\r\n2140",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/UNLOCK",
  "scraped_at": "2025-08-17 00:34:25",
  "test_cases": [
    {
      "input": "2 2\r\n0 0\r\n0 0\r\n3 3\r\n0 0 0\r\n0 2 1\r\n0 0 0",
      "expected_output": "24\r\n2140",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1 1\n1 7\n10 6\n10 6\n6 10 7\n1 7 10\n5 8 10",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "6 3\n10 10\n6 8\n10 7\n4 8 5\n3 4 2\n3 7 6",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "5 10\n7 10\n3 6\n10 1\n3 9 3\n5 2 2\n8 4 7",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "11 24\n31 40\n27 25\n7 94\n5 8 26\n28 61 80\n60 5 3",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "37 65\n69 50\n87 6\n18 8\n52 32 25\n73 95 4\n43 58 3",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "45 84\n1 87\n70 38\n9 13\n16 46 65\n22 93 9\n63 63 17",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "94 57\n81 42\n92 40\n17 45\n83 13 79\n90 12 30\n33 51 55",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "28 49\n80 87\n75 67\n20 93\n60 92 49\n77 2 64\n16 10 77",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "373 76\n90 444\n419 386\n169 151\n401 70 115\n483 77 126\n329 130 355",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "336 427\n141 106\n466 127\n317 150\n365 285 154\n254 405 280\n126 466 340",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "335 392\n221 220\n132 401\n285 213\n239 196 493\n72 458 306\n183 281 392",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "275 180\n185 482\n225 174\n276 282\n381 304 367\n67 259 397\n276 422 294",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "378 492\n276 410\n127 304\n338 156\n55 204 488\n51 104 311\n223 250 239",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "158 317\n250 191\n97 384\n354 184\n331 342 386\n317 155 480\n436 93 427",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "454 425\n152 486\n259 154\n226 203\n208 165 246\n185 207 404\n174 467 165",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "999 999\n1000 1\n2 999\n2 999\n1 1000 2\n1 1000 2\n1000 1 999",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1000 1\n999 1000\n2 2\n1000 999\n999 999 999\n1000 1000 1000\n999 2 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:57",
  "total_test_cases": 20
}
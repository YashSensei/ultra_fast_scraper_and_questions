{
  "problem_code": "problems",
  "title": "Submerging Islands",
  "tags": [],
  "text": "Vice City is built over a group of islands, with bridges connecting them. As anyone in Vice City knows, the biggest fear of vice-citiers is that some day the islands will submerge. The big problem with this is that once the islands submerge, some of the other islands could get disconnected. You have been hired by the mayor of Vice city to tell him how many islands, when submerged, will disconnect parts of Vice City. You should know that initially all the islands of the city are connected.InputThe input will consist of a series of test cases. Each test case will start with the number N (1 ≤ N ≤ 104) of islands, and the number M of bridges (1 ≤ M ≤ 105). Following there will be M lines each describing a bridge. Each of these M lines will contain two integers Ui, Vi (1 ≤ Ui, Vi ≤ N), indicating that there is a bridge connecting islands Ui and Vi. The input ends with a case where N = M = 0.OutputFor each case on the input you must print a line indicating the number of islands that, when submerged, will disconnect parts of the city.ExampleInput:3 3\r\n1 2\r\n2 3\r\n1 3\r\n6 8\r\n1 3\r\n6 1\r\n6 3\r\n4 1\r\n6 4\r\n5 2\r\n3 2\r\n3 5\r\n0 0Output:0\r\n1",
  "sample_input": "Input:3 3\r\n1 2\r\n2 3\r\n1 3\r\n6 8\r\n1 3\r\n6 1\r\n6 3\r\n4 1\r\n6 4\r\n5 2\r\n3 2\r\n3 5\r\n0 0Output:0\r\n1",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/SUBMERGE",
  "scraped_at": "2025-08-17 00:33:58",
  "test_cases": [
    {
      "input": "3 3\r\n1 2\r\n2 3\r\n1 3\r\n6 8\r\n1 3\r\n6 1\r\n6 3\r\n4 1\r\n6 4\r\n5 2\r\n3 2\r\n3 5\r\n0 0",
      "expected_output": "0\r\n1",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4 5\n3 10\n9 6\n4 5\n1 8\n7 3\n10 7\n8 4\n5 3\n6 4\n4 10\n4 10\n7 5\n10 1",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "8 4\n3 9\n2 9\n7 9\n9 7\n5 6\n6 1\n5 7\n5 7\n5 4\n10 2\n6 6\n6 1\n1 10",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "1 3\n9 2\n3 5\n8 9\n2 9\n3 8\n8 1\n10 1\n4 8\n2 4\n6 8\n9 9\n2 6\n9 9",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "83 61\n92 72\n24 98\n50 45\n98 30\n75 5\n6 79\n13 74\n8 54\n66 12\n31 54\n56 73\n35 20\n48 61",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "46 43\n37 79\n27 71\n32 82\n73 46\n72 25\n12 93\n59 67\n48 8\n99 68\n96 67\n12 20\n16 74\n66 82",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "31 51\n71 97\n32 53\n62 8\n81 84\n97 83\n28 24\n65 2\n83 50\n97 36\n62 69\n59 81\n13 29\n95 33",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "16 44\n55 32\n30 10\n31 47\n37 47\n27 60\n70 50\n74 98\n5 80\n15 64\n56 40\n60 52\n83 32\n71 60",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "71 31\n97 53\n100 47\n17 61\n27 80\n15 56\n93 43\n80 44\n82 29\n95 87\n2 31\n50 72\n11 69\n92 64",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "42 49\n45 9\n21 37\n6 7\n33 26\n13 48\n26 47\n19 7\n44 11\n34 35\n17 39\n48 18\n24 37\n24 47",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "45 25\n35 35\n8 33\n15 30\n28 10\n43 50\n10 32\n40 41\n13 52\n25 51\n36 12\n34 16\n18 30\n52 33",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "42 15\n50 52\n10 50\n47 40\n52 48\n6 28\n25 9\n23 39\n22 35\n46 9\n31 46\n8 32\n51 13\n37 27",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "14 25\n24 27\n19 52\n32 41\n11 49\n9 31\n14 37\n26 13\n49 43\n7 50\n17 27\n24 43\n42 28\n11 30",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "6 24\n37 5\n33 28\n52 36\n12 34\n26 17\n33 41\n15 18\n24 12\n16 9\n18 33\n27 49\n17 6\n12 31",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "13 12\n39 44\n50 38\n20 10\n48 50\n23 44\n47 10\n28 19\n31 50\n24 18\n20 49\n16 15\n28 6\n19 9",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "50 39\n15 14\n7 15\n28 39\n5 23\n31 52\n52 45\n7 26\n32 15\n22 48\n20 41\n26 32\n6 20\n33 13",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "104 104\n104 104\n104 104\n104 104\n104 104\n104 104\n104 104\n104 104\n104 104\n104 104\n104 104\n104 104\n104 104\n104 104",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "104 104\n104 104\n104 104\n104 104\n104 104\n104 104\n104 104\n104 104\n104 104\n104 104\n104 104\n104 104\n104 104\n104 104",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 104\n103 103\n104 104\n2 2\n103 2\n104 104\n103 104\n1 104\n104 104\n103 2\n104 104\n1 104\n2 2\n103 104",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "104 2\n2 2\n2 104\n103 2\n103 2\n1 103\n2 2\n103 1\n1 1\n104 1\n103 1\n1 103\n103 2\n2 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:52",
  "total_test_cases": 20
}
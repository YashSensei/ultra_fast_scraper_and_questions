{
  "problem_code": "problems",
  "title": "Flipping Burned Pancakes",
  "tags": [],
  "text": "The cook at theFrobbozz Magic Pancake Housesometimes falls asleep on the job while cooking\r\npancakes. As a result, one side of a stack of pancakes is often burned. Clearly, it is bad business to\r\nserve visibly burned pancakes to the patrons. Before serving, the waitress will arrange the stacks of\r\npancakes so that the burned sides are facing down. You must write a program to aid the waitress in\r\nstacking the pancakes correctly.We start with a stack ofNpancakes of distinct sizes, each of which is burned on one side. The\r\nproblem is to convert the stack to one in which the pancakes are in size order with the smallest on the\r\ntop and the largest on the bottom and burned side down for each pancake. To do this, we are\r\nallowed to flip the topkpancakes over as a unit (so thek-thpancake is now on top and the pancake\r\npreviously on top is now in thek-thposition and the burned side goes from top to bottom and vice\r\nversa).For example (+ indicates burned bottom, - a burned top):+1 -3 -2 [flip 2] ⇒ +3 -1 -2 [flip 1] ⇒ -3 -1 -2 [flip 3] ⇒\r\n         +2 +1 +3 [flip 1] ⇒ -2 +1 +3 [flip 2] ⇒ -1 +2 +3 [flip 1] ⇒ +1 +2 +3You must write a program which finds a sequence of at most(3n – 2)flips, which converts a given\r\nstack of pancakes to a sorted stack with burned sides down.InputThe first line of the input contains a single decimal integer, N, the number of problem instances to\r\nfollow. Each of the following N lines gives a separate dataset as a sequence of numbers separated\r\nby spaces. The first number on each line gives the number, M, of pancakes in the data set. The\r\nremainder of the data set is the numbers 1 through M in some order, each with a plus or minus sign,\r\ngiving the initial pancake stack. The numbers indicate the relative sizes of the pancakes and the\r\nsigns indicate whether the burned side is up (-) or down (+). M will be, at most, 30.OutputFor each dataset, you should generate one line of output with the following values: The dataset\r\nnumber as a decimal integer (start counting at one), a space, the number of flips (K, where K ≥ 0)\r\nrequired to sort the pancakes and a sequence of K numbers, each of which gives the number of\r\npancakes to flip on the corresponding sorting step. There may be several correct solutions for some\r\ndatasets. For instance 3 2 3 is also a solution to the first problem below.ExampleInput:3\r\n3 +1 –3 –2\r\n4 –3 +1 –2 –4\r\n5 +1 +2 +3 +4 -5Output:1 6 2 1 3 1 2 1\r\n2 6 4 1 4 3 1 2\r\n3 3 5 1 5",
  "sample_input": "+1 -3 -2 [flip 2] ⇒ +3 -1 -2 [flip 1] ⇒ -3 -1 -2 [flip 3] ⇒\r\n         +2 +1 +3 [flip 1] ⇒ -2 +1 +3 [flip 2] ⇒ -1 +2 +3 [flip 1] ⇒ +1 +2 +3",
  "sample_output": "Input:3\r\n3 +1 –3 –2\r\n4 –3 +1 –2 –4\r\n5 +1 +2 +3 +4 -5Output:1 6 2 1 3 1 2 1\r\n2 6 4 1 4 3 1 2\r\n3 3 5 1 5",
  "link": "https://www.spoj.com/problems/GNY07E",
  "scraped_at": "2025-08-17 00:33:19",
  "test_cases": [
    {
      "input": "+1 -3 -2 [flip 2] ⇒ +3 -1 -2 [flip 1] ⇒ -3 -1 -2 [flip 3] ⇒\r\n         +2 +1 +3 [flip 1] ⇒ -2 +1 +3 [flip 2] ⇒ -1 +2 +3 [flip 1] ⇒ +1 +2 +3",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3\r\n3 +1 –3 –2\r\n4 –3 +1 –2 –4\r\n5 +1 +2 +3 +4 -5",
      "expected_output": "1 6 2 1 3 1 2 1\r\n2 6 4 1 4 3 1 2\r\n3 3 5 1 5",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "9 6 6 7 7 1 2 8 7 6 10 7\neywki psu sio xzvjl kylsb ip m berxz ei j cg ccoa dmtcd zp cgst wsdma yfpxx sufdw\n2 5 6 4 2 4 10 6 4 4 1 7 4 4 8\ns il rlbn dw typgg tin n zyfvq mj wow vzdq pnfr dw uthuw luq rlyz atu um ijmfb iawhk opwqr",
      "expected_output": "0\n0\n0\n0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "3 9 1 3 10 6 8 6 9 3 5 2\nn dziy nadyd ggoh f x wut e dzftr u og zueh jmgbh u aeuh zj sb jmztd\n4 8 4 8 8 3 7 7 5 10 5 2 8 10 9\njto w hqo ft rrz mk y o hyxx nhsk pui s mihja jfjnn cuhii qcpzz qy pyozc kmoi u ojqzb",
      "expected_output": "0\n0\n0\n0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "8 4 5 7 8 10 3 9 6 5 5 3\neaaq wse v huhs uqnkp xb wx bopx kp qht zgo ad w yukl hyqcp ftnbr srs lo\n8 8 7 9 1 2 3 7 6 1 1 6 10 6 9\nvn t krrbe qcqh t wj dkgfl tkyv njcce m zxoyg mihtz cjxw k x uqw mu bjv chi ibkls a",
      "expected_output": "0\n0\n0\n0",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "79 75 25 75 98 83 45 60 68 27 55 1\nk t zmosu lqszr qt aljkm dyt edib hzw noey gp jiaw qiek e qbioy h lgbm b\n85 43 43 50 46 72 15 57 16 20 10 85 80 69 3\nqkvl satk aow rjctf yuu wovs efr t kfc kfayn nwup djez wm r kwd bsdu qao qn thny zixe seoxf",
      "expected_output": "0\n0\n0\n0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "60 97 8 19 76 2 87 78 64 33 12 76\nicpq hawvc zbtg ho qwgr lp z ljv wcucf lrjn vyg f ntt joixr g oswwo oeajo xoc\n84 24 28 68 27 75 79 38 33 73 65 56 12 32 9\njsu i dpto qlx f njcf i zbjua fgr xxh g kcp lgxmm f jwz su iob fd cg q rqnt",
      "expected_output": "0\n0\n0\n0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "28 30 66 84 43 15 26 51 77 17 13 77\nqn zz udsr tk c chnn suv wz sai dj r wc cro djgit q zopx vysb ucagf\n27 65 71 80 45 57 57 3 64 27 95 30 47 34 69\nwqexp mwbyk qur m q g mkmb xrni lsfvw hvr g jnh ne encw jhh pvcns mndu nwkd pn ga l",
      "expected_output": "0\n0\n0\n0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "27 7 76 17 28 63 53 77 21 66 21 14\ndk hqu nqnl vgd v yew fs a i msrhx e ho r fdj dy tfti o rc\n32 9 86 38 73 100 14 70 86 71 21 100 17 37 86\ngzavy p kpqd ran ek cki qi zfol kcl jnxr zzi twpm iqyrb lf ad i fy jincz ff twfma k",
      "expected_output": "0\n0\n0\n0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "95 32 100 32 80 95 17 66 29 62 87 58\nalez vvsg bohc qnf hwg tfk xuc w yc uqld ufug yq h cvn qtft oxse hca riiv\n14 53 80 5 99 85 91 18 59 74 42 44 2 76 8\nzk zsqva yltbc xs uxfd hv lud sl co il chj gfkzj gyksw z qlap p gth mfsku zsick fzsd b",
      "expected_output": "0\n0\n0\n0",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "346 322 285 83 357 401 337 457 407 103 286 305\no xp pz fh nnl vmoj wsr ru svc h y xrwbb rgapn ubygd elxu m jtng ubg\n433 257 455 69 181 61 308 233 260 490 380 352 370 167 176\nmbp r kz f y c uzelg ca pojsi pstep allbq zn hjpl vfzam kuxxq mvs a o bqkn nplrs fc",
      "expected_output": "0\n0\n0\n0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "77 236 256 420 311 114 218 54 165 375 218 288\ni ym eewd faapg f whlu hc ihrn pwh rbtn bfh zuz h gicb lhmp nxphy s ubbmc\n221 450 411 267 98 165 413 485 187 209 414 469 87 278 443\nglm ohhax ja aov gtm b v t tsb mksd ctlvs gbq xo fz lgcbd uo dja xrsuo n kvse c",
      "expected_output": "0\n0\n0\n0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "310 254 442 427 416 351 153 290 182 425 79 158\naeyn jzc t r uxztz nc mlhuc lhtz tyyz xf ryu jsliv pwcl n hxdj kub z gjm\n218 472 188 130 171 422 477 98 349 484 410 230 499 407 281\nlawww bnm lh cav p g ilnbs j j yws bwqfm pqro os g hxp s gu af sdz gvh qlh",
      "expected_output": "0\n0\n0\n0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "489 409 188 286 369 172 397 199 318 66 132 323\nwrvwf s gid jymwx wxyse agh lwkbr x rr iyvzw thcgu pgrk skil j uk dmyxm ahm t\n313 238 130 444 310 270 264 114 280 455 89 233 155 383 79\ns kd oc t oqdsj d dicy g wd orko p lmi jqop tinnn wciz cieq w exm n lp fx",
      "expected_output": "0\n0\n0\n0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "213 207 115 421 102 110 321 234 484 322 423 124\noiw ll m k qfckg inhu eogrk bbmed y hfr s wqbtd qgpzm dsed jh aceee a janix\n134 154 434 232 305 403 493 142 172 426 499 124 82 330 243\nsruo pe pkxx h j y dle emq pasl my myu jtr d paqym djq ox bzol resbo oiwz k tc",
      "expected_output": "0\n0\n0\n0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "240 182 473 127 230 349 239 226 395 294 77 417\nc opp qcoix tpe gl n ynb mahs h ae kn nzju q mv cv vbfz ht igj\n280 313 121 323 135 196 431 168 305 421 338 181 400 95 388\nvtua vappn pd q max h vtk mhe awz rnz iccx sxs bidcz cwek lyby oyh hfe l pb ovyq iv",
      "expected_output": "0\n0\n0\n0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "223 250 360 321 140 288 262 318 254 311 250 216\njdsfv cewr wns nk xz bfb h fje gznw ve aib zr ptk khjsm uzv pdab ogfwb kg\n270 106 128 327 492 294 82 282 75 363 420 237 260 336 373\nxohx qq dhemy hwg mmnb yf kq vh m swm muno cnx quzjo p tbuob vro ebhld uzxxq b ucla dge",
      "expected_output": "0\n0\n0\n0",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\nb v ymvj vd xkv zkqr tv ab t pvwu kzr sfks gcjhe vnv onk ourob u oysiw\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\nwijae y rdki e du mqcjd ydlp rv cp qt tm erp gcvh r tovn uvbui z cyda qak ujcwt ip",
      "expected_output": "0\n0\n0\n0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\nvudy yccpm gplyf ykper wnf qd spisn uchpf cu qnv tta q okkg ws bw divr cdpzj njmdc\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\nye p nq ay t brqhf gdt nkzm nyh dh hfkgx alogt i drgkq bx svt xhnwq n l weo jexf",
      "expected_output": "0\n0\n0\n0",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "999 1000 1 1 2 1 2 1000 1000 999 999 999\nkov ml neej tmthh m ivj u mfu rs xdelm hzw ypwof wdjck xsu jp ifk vct aj\n1 1000 999 1 2 999 1 999 1000 1 1 1000 2 2 1000\ncwe jpsi osy ip ukcw vk rz me wrzzt lbu qbt q nunf sa fes xoowz z whm vtwl f nl",
      "expected_output": "0\n0\n0\n0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:46",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:36:28"
}
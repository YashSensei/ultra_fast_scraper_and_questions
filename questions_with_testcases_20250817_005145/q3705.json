{
  "problem_code": "problems",
  "title": "Black and White",
  "tags": [],
  "text": "The famous game Black and White is a solitaire which is played using a set of identical chips. Each chip has two faces with different colors. Surprisingly enough, those colors are black and white.The game starts by placingNchips forming a single line. There exists an objective pattern which is a given sequence ofNcolors black or white. In a single move, the player can choose a group of consecutive chips and invert their color, in other words, for each chip in the group, the color which was facing up, is facing down and the one which was facing down is facing up. The game finishes when the facing up colors of the chips are equal to the objective pattern.Barby has just discovered this game and soon she realized that you can always won by inverting each chip individually if needed. To make this game more challenging to her, she wanted to win in the least possible number of moves. Note that Barby just cares about how many moves she makes, and it doesn't matter how many chips are inverted in each move. To know how well is Barby playing, she asked you to make a program that given the chip's initial position and the objective pattern, shows the least possible number of moves to win the game. Are you going to say no?InputThe input contains several test cases. Each test case is described in a single line that contains two non-empty wordsSandTof equal size and at most 500 letters each.Sindicates the chip's initial position whileTrepresents the objective pattern. Both words only contain uppercase letters \"B\" and \"N\", representing respectively White and Black. The last line of the input contains two asterisks separated by a single space and should not be processed as a test case.OutputFor each test case output a single line with an integer representing the least possible number of moves such that you can change the chips which are initially positioned as described inSto form the pattern given byT.ExampleInput:BBNBBNBBBB NNNNNBBNNB\r\nBNBNB NBNBN\r\nBNBN NBNB\r\nB B\r\n* *Output:3\r\n1\r\n1\r\n0",
  "sample_input": "BBNBBNBBBB NNNNNBBNNB\r\nBNBNB NBNBN\r\nBNBN NBNB\r\nB B\r\n* *",
  "sample_output": "3\r\n1\r\n1\r\n0",
  "link": "https://www.spoj.com/problems/BANDW",
  "scraped_at": "2025-08-17 00:34:30",
  "test_cases": [
    {
      "input": "BBNBBNBBBB NNNNNBBNNB\r\nBNBNB NBNBN\r\nBNBN NBNB\r\nB B\r\n* *",
      "expected_output": "3\r\n1\r\n1\r\n0",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "linhjbxe eynattdb\no u\nya ehkf\nmncwh mchb\nxq akyek",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "ygnljwhme tnkgjbdjaf\nt izwws\nqdeg okppg\ni d\ny io",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "z xwkbznudbq\nqpkfy d\ng zobc\niooe gd\nznuee spxa",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "ynuoygtwq nkvccg\ndwyt dhii\nbvfbx pyd\nu tt\nwf eeleh",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "uzfwgmh dlxo\nldd w\nlmb kobc\nqruyv ps\nn y",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "kqd nf\nx rnoy\ns tuuvn\nnt v\nljyuf fx",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "ot amhpqct\nrfozq it\ngrnac fe\nc c\nftm vqs",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "q wcer\nnki ueru\nu gk\ngh undw\nc s",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "oorfinsrv foaug\nyr j\nr zh\njle ru\namnm k",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "gyf exay\nov hnojn\nhp uqxdk\nco k\nkipoh gdvz",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "kmkcvve mwiqrjybk\nw d\njzzoe mat\nbf l\noln zdkov",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "mwdla mxefa\nd or\nt zzmex\nbq vuq\nzhr fn",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "iuxeuhslc zofpzzqj\nrtjo pq\nnfp vz\nqkja xv\nhkb vy",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "jrj dgbrk\ngn dddz\njvruo ezm\nz bumw\nlog hoa",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "sdmky cnjekrfpuc\nza jqagd\ndv fdy\nrasv kw\nu u",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "gmy cizffs\nvog ml\nxw jopw\npip g\ntg kpi",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "rvhkvtniwz zzzdmu\nncrm e\ny umv\ny wp\nnmjso soxi",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "warg e\ndi mu\nudwjz qg\nxdo p\ntpfo vxtyp",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "l ihfznmy\njwl w\nvd ehxn\nvzler e\nuxm cf",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:57",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:38:16"
}
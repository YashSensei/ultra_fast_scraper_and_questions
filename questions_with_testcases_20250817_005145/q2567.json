{
  "problem_code": "problems",
  "title": "A Famous King’s Trip",
  "tags": [],
  "text": "Mr. B is the chief engineer in the Kingdom of FDUCS. Recently, the King asks Mr. B to develop a new plan of the road network in the country, since the existing one is so old that traffic jam often occurs. Unfortunately, Mr. B is now preparing for the ICPC World Final Contest so that he is quite busy. He asks his friends, Mr. G and Mr. M to help him finish that work. When Mr. B gets the solution from his friends, he realizes some problems: Mr. B forgot to specify the budget plan to Mr. G and Mr. M, thus the new solution contains too many new roads which the government cannot afford. After a precise calculation, Mr. B finds that he has just to delete exactly two roads in term of the financial facts (Of course, Mr. B will not delete more than two roads because he wants people in his country to have a convenient traffic).Can Mr. B delete two roads arbitrarily? The answer is negative. The King would like to take a travel on the new road system to review Mr. B's work. However, the King is so busy that he does not want to take travel with redundancy. That is, the King wants Mr. B to design a road system so that he can travel from the palace (in one city), pass each road exactly once, and then back to the palace. Moreover, during his travelling, the king must visit each city at least once too.Mr. B feels hard to satisfy the Kings demand by deleting two roads from the original design. As an ICPC candidate with unlimited potential, can you help him?InputFor each test case, the first line contains two integers,nandm(1 ≤n,m≤ 200,000), indicating the number of cities in the Kingdom and the roads in Mr. B's original plan. Following this aremlines, each contains a pair of integersaandb. Each of them denotesabidirectional road between cityaand cityb(1 ≤a,b≤ n anda≠b), the number of cities are counted from 1. No two roads connect the same pair of cities.OutputFor each test case, if Mr. B can satisfy the Kings requirement, then outputYESin the first line, otherwise, outputNO. If the answer isYES, output two integersXandY(X<Y) in the following line, specifying two roads that Mr. B should delete from the original design.XandYare the indexes of roads in the input, counting from 1. If there are more than one possible answer, output the one that makes the pair of (X,Y) lexicographically smallest.ExampleInput:4 6\r\n1 2\r\n1 3\r\n1 4\r\n2 3\r\n2 4\r\n3 4Output:Case 1: YES\r\n1 6",
  "sample_input": "Input:4 6\r\n1 2\r\n1 3\r\n1 4\r\n2 3\r\n2 4\r\n3 4Output:Case 1: YES\r\n1 6",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/TRIP2",
  "scraped_at": "2025-08-17 00:34:05",
  "test_cases": [
    {
      "input": "4 6\r\n1 2\r\n1 3\r\n1 4\r\n2 3\r\n2 4\r\n3 4",
      "expected_output": "Case 1: YES\r\n1 6",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4 3\n6 1\n4 5\n2 10\n6 9\n9 5\n3 7",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "5 2\n4 4\n10 2\n5 2\n2 6\n2 1\n1 1",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "6 8\n8 1\n2 3\n1 3\n5 9\n6 3\n2 2",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "45 74\n23 92\n83 64\n4 31\n31 73\n47 19\n66 81",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "10 33\n61 61\n31 94\n32 49\n71 69\n6 47\n24 75",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "97 48\n42 54\n9 72\n86 2\n65 60\n39 86\n19 55",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "9 57\n44 53\n19 60\n41 59\n94 7\n27 88\n88 78",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "4 28\n95 44\n76 38\n87 32\n35 16\n92 36\n40 34",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "116 464\n219 202\n178 260\n418 55\n290 66\n375 124\n58 190",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "113 157\n62 110\n157 360\n257 406\n51 302\n262 214\n419 118",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "302 259\n110 289\n429 67\n409 190\n306 331\n480 108\n104 393",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "80 338\n434 90\n98 357\n208 74\n475 359\n491 402\n276 50",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "166 229\n67 193\n359 117\n426 459\n136 332\n383 371\n73 195",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "479 211\n68 486\n384 373\n334 99\n308 394\n79 219\n290 303",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "74 474\n449 118\n434 253\n348 377\n66 200\n173 175\n420 141",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1\n1 2\n1000 2\n1 1000\n999 999\n1 999\n999 1",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 2\n999 999\n999 2\n1000 1000\n1 1000\n1 1\n1 1000",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:53",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:39"
}
{
  "problem_code": "problems",
  "title": "Dark roads",
  "tags": [],
  "text": "Economic times these days are tough, even in Byteland. To reduce the operating costs, the government of Byteland has decided to optimize the road lighting. Till now every road was illuminated all night long, which costs 1 Bytelandian Dollar per meter and day. To save money, they decided to no longer illuminate every road, but to switch off the road lighting of some streets. To make sure that the inhabitants of Byteland still feel safe, they want to optimize the lighting in such a way, that after darkening some streets at night, there will still be at least one illuminated path from every junction in Byteland to every other junction.What is the maximum daily amount of money the government of Byteland can save, without making their inhabitants feel unsafe?InputThe input file contains several test cases. Each test case starts with two numbersmandn, the number of junctions in Byteland and the number of roads in Byteland, respectively. Input is terminated bym = n = 0. Otherwise,1 ≤ m ≤ 200000andm-1 ≤ n ≤ 200000. Then followninteger triplesx, y, zspecifying that there will be a bidirectional road betweenxandywith lengthzmeters (0 ≤ x, y < mandx ≠ y). The graph specified by each test case is connected. The total length of all roads in each test case is less than 231.OutputFor each test case print one line containing the maximum daily amount the government can save.SampleInput:7 11\r\n0 1 7\r\n0 3 5\r\n1 2 8\r\n1 3 9\r\n1 4 7\r\n2 4 5\r\n3 4 15\r\n3 5 6\r\n4 5 8\r\n4 6 9\r\n5 6 11\r\n0 0Output:51",
  "sample_input": "Input:7 11\r\n0 1 7\r\n0 3 5\r\n1 2 8\r\n1 3 9\r\n1 4 7\r\n2 4 5\r\n3 4 15\r\n3 5 6\r\n4 5 8\r\n4 6 9\r\n5 6 11\r\n0 0Output:51",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/ULM09",
  "scraped_at": "2025-08-17 00:33:57",
  "test_cases": [
    {
      "input": "7 11\r\n0 1 7\r\n0 3 5\r\n1 2 8\r\n1 3 9\r\n1 4 7\r\n2 4 5\r\n3 4 15\r\n3 5 6\r\n4 5 8\r\n4 6 9\r\n5 6 11\r\n0 0",
      "expected_output": "51",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5 4\n10 6 9\n9 9 10\n7 3 8\n8 5 3\n2 10 7\n5 2 3\n8 5 7\n2 4 6\n1 10 5\n5 8 1\n1 3 8\n6 1",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "7 3\n3 8 6\n4 2 6\n6 8 5\n8 4 5\n1 5 2\n9 5 1\n9 7 7\n4 6 5\n9 3 3\n4 4 9\n6 5 7\n9 2",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "3 1\n9 1 9\n9 10 5\n10 7 4\n7 5 9\n5 8 9\n2 2 2\n1 8 5\n7 6 1\n9 9 1\n4 8 7\n8 7 8\n9 3",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "5 61\n5 51 1\n55 5 26\n7 66 60\n79 63 56\n24 76 15\n55 43 80\n35 98 96\n36 95 16\n35 82 80\n93 63 5\n61 84 14\n79 12",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "55 91\n68 83 40\n69 5 31\n15 82 27\n96 94 48\n51 41 31\n88 29 59\n25 53 39\n15 91 5\n38 60 99\n3 98 3\n6 7 70\n96 76",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "1 16\n35 43 24\n29 63 75\n66 46 12\n38 53 47\n27 63 6\n18 70 48\n48 31 95\n100 71 93\n11 95 36\n4 73 70\n46 88 10\n42 48",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "31 94\n88 2 22\n86 6 68\n79 35 41\n90 40 72\n60 19 41\n43 15 69\n78 89 100\n78 12 50\n16 84 20\n17 11 84\n51 76 18\n31 55",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "41 33\n78 6 16\n9 18 7\n24 93 19\n89 31 43\n64 92 69\n36 1 87\n57 63 2\n42 57 70\n94 18 49\n22 38 64\n99 68 27\n94 57",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "57624 34081\n56140 71689 34311\n36989 41694 74845\n51197 51595 64192\n32560 70453 32003\n40760 79267 50979\n57393 73477 40156\n92919 78408 82432\n84332 38716 71672\n43018 35986 52641\n95651 19727 20668\n84977 21906 47514\n71317 48359",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "88589 44993\n18710 83229 66908\n14814 69426 96976\n28332 71936 12422\n67484 55806 54369\n71786 18821 24548\n78476 62280 22134\n80443 86200 73136\n99665 17282 90143\n45378 62386 54257\n56786 97835 72846\n67450 95535 99461\n31182 34241",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "47648 73175\n14046 71266 50452\n45677 86725 45395\n41695 13640 55710\n44418 52880 12461\n85166 60457 12989\n90381 66046 34237\n44718 14987 27549\n76409 13956 47961\n94545 10346 85574\n61300 62844 49828\n85762 48474 58973\n58747 27847",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "82252 72916\n84594 25265 24819\n20853 32756 85057\n42983 21624 43856\n21804 99651 95826\n68539 70742 85631\n13513 34898 14560\n12870 62481 63839\n30851 18191 86199\n58176 14551 84854\n55784 23210 15588\n52573 20087 68898\n71370 15670",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "10987 50750\n76207 85264 56595\n28762 27169 66402\n62888 31973 36348\n24604 84939 54467\n87009 43966 83567\n68711 51351 25038\n23290 97608 46434\n29365 14632 66064\n86096 69402 19666\n12599 31378 87578\n30332 13256 48422\n36271 59092",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "36858 49129\n95011 96532 33542\n87247 45585 18412\n60223 69581 20299\n45219 88164 24757\n89957 98778 55707\n98557 33552 50337\n70527 33806 24510\n35295 16278 58654\n76887 83784 70672\n96619 74511 28965\n44266 13461 36216\n25785 11795",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "26133 85062\n68921 21225 61287\n71794 65330 92428\n88642 37781 99962\n94157 83601 11416\n45064 24569 69633\n26955 85015 99876\n57883 27332 65631\n58811 16256 20906\n85691 72849 80444\n58316 72990 83070\n23705 85634 44112\n54334 54271",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "200000 200000\n200000 200000 200000\n200000 200000 200000\n200000 200000 200000\n200000 200000 200000\n200000 200000 200000\n200000 200000 200000\n200000 200000 200000\n200000 200000 200000\n200000 200000 200000\n200000 200000 200000\n200000 200000 200000\n200000 200000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "200000 200000\n200000 200000 200000\n200000 200000 200000\n200000 200000 200000\n200000 200000 200000\n200000 200000 200000\n200000 200000 200000\n200000 200000 200000\n200000 200000 200000\n200000 200000 200000\n200000 200000 200000\n200000 200000 200000\n200000 200000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 1\n1 200000 2\n199999 1 200000\n1 199999 2\n1 200000 200000\n2 1 2\n199999 1 2\n1 200000 1\n199999 2 2\n1 199999 200000\n199999 1 1\n200000 199999 199999\n1 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 2\n2 200000 200000\n199999 199999 1\n1 1 2\n1 1 199999\n2 1 1\n1 199999 1\n1 200000 200000\n2 2 200000\n200000 2 200000\n2 199999 1\n199999 1 2\n200000 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:51",
  "total_test_cases": 20
}
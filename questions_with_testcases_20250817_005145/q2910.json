{
  "problem_code": "problems",
  "title": "Keyur and Mohib Tree",
  "tags": [],
  "text": "This Time Keyur (Singal) has been challenged by his friend Nishant (Vaju). As Keyur's programming skills are very poor, he asked you to help him. So as a great programmer you have to help Keyur. The challenge is as follows:Keyur has given a binary tree Mohib-tree. Every Mohib-tree has the following properties:Every Mohib-tree contains a root node that stores a positive integer greater than or equal to 2.Every node of an Mohib-tree is either a leaf node (has no children) or has exactly 2 children which are Mohib-trees as well.The sum of values of children nodes is always equal to the value of the parent node.Value of at least one of the children nodes divides the parent value.The height of the tree is defined as the number of edges from the root to the deepest leaf.The following are valid Mohib-Trees:6                   6\r\n     / \\                 / \\\r\n    2   4               3   3\r\n       / \\\r\n      2   2InputThe first line of the input gives the number of test cases, T. T test cases follow. Each test case starts with one line with one integer N, which represents the value of the root node.OutputFor each test case, output one line containing \"Case #x: \", where x is the test case number (starting from 1). Then, for every value N in the test case, output the maximum possible height of all Mohib-trees with root N.Constraints0 < T ≤ 202 ≤ N ≤ 1014SampleInput:3\r\n2\r\n6\r\n31Output:Case #1: 0\r\nCase #2: 2\r\nCase #3: 0",
  "sample_input": "6                   6\r\n     / \\                 / \\\r\n    2   4               3   3\r\n       / \\\r\n      2   2",
  "sample_output": "Input:3\r\n2\r\n6\r\n31Output:Case #1: 0\r\nCase #2: 2\r\nCase #3: 0",
  "link": "https://www.spoj.com/problems/MOHIBTREE",
  "scraped_at": "2025-08-17 00:34:22",
  "test_cases": [
    {
      "input": "6                   6\r\n     / \\                 / \\\r\n    2   4               3   3\r\n       / \\\r\n      2   2",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3\r\n2\r\n6\r\n31",
      "expected_output": "Case #1: 0\r\nCase #2: 2\r\nCase #3: 0",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "4 7\nncn gvvag qhmm qbit\n1 8 9 4\nmvh zx\n3 9",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "5 1\nywirg vytk r m\n8 7 7 10\nsqxm nlcb\n10 4",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "9 7\nxg agc fnsi nxhe\n6 2 1 3\ndu ucmq\n4 9",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "61 93\nn iv skgqq w\n59 88 44 12\napl ceb\n10 76",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "29 54\nkjku osv e o\n93 34 62 100\ncnx a\n62 2",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "41 6\nak ro eodxp loo\n66 30 67 52\nzb yjs\n79 32",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "40 25\nlvbrc zn ihza js\n91 31 81 4\nb lei\n32 40",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "48 21\nq ocsvs rg wxrah\n36 87 29 4\njgoz id\n23 47",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "230 505\nyn zj ibfat wpeff\n474 179 458 84\navj vfeaa\n473 463",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "379 482\nbki keetm bttfc mjn\n352 138 348 265\nldbsq lrs\n427 327",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "207 337\najnoh fqxe zmusz ztbjb\n407 413 389 349\nmmfk uohag\n200 410",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "234 305\nzp enq h zlipb\n429 279 252 405\nytim zjkd\n507 269",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "466 223\nvzqdp nf wjgps sth\n261 350 83 251\nwoniy huw\n64 104",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "144 188\ncn ur l nlkn\n119 370 466 317\ntsy lor\n80 355",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "374 224\nrewko fh shlq c\n93 422 74 387\nqycjb zgtg\n359 205",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "1014 1014\nr by hm exjr\n1014 1014 1014 1014\nrkl s\n1014 1014",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1014 1014\nmzjqm q vr c\n1014 1014 1014 1014\ntvjbq aox\n1014 1014",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "1013 1013\nuyjr lxm tuo b\n1 1014 1014 1\nusr pqz\n1014 1",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:54",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:50"
}
{
  "problem_code": "problems",
  "title": "MAXOR",
  "tags": [],
  "text": "You are given a sequence A[1], A[2] ... A[N]. (0 ≤ A[i] < 231, 1 ≤ N ≤ 12000).A query is defined as follows:Query(x, y) = Max { a[i] xor a[i+1] xor ... xor a[j] ; l ≤ i ≤ j ≤ r }.l = min ( ((x+lastans) mod N)+1, ((y+lastans) mod N)+1 ).r = max ( ((x+lastans) mod N)+1, ((y+lastans) mod N)+1 ).lastans[1] = 0 , lastans[i] = Query[i-1].Given M queries, your program must output the results of these queries. (0 ≤ M ≤ 6000).InputThe first line of the input file contains 2 numbers : N M.In the second line, N numbers follow.M lines follow, where line i contains 2 numbers xi and yi.OutputYour program should output the results of the M queries, one query per line.ExampleInput:3 3\r\n1 4 3\r\n0 1\r\n0 1\r\n4 3Output:5\r\n7\r\n7",
  "sample_input": "Input:3 3\r\n1 4 3\r\n0 1\r\n0 1\r\n4 3Output:5\r\n7\r\n7",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/MAXOR",
  "scraped_at": "2025-08-17 00:34:12",
  "test_cases": [
    {
      "input": "3 3\r\n1 4 3\r\n0 1\r\n0 1\r\n4 3",
      "expected_output": "5\r\n7\r\n7",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "8 8\n10 4 10\n3 1\n9 7\n1 1",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "3 5\n4 7 4\n4 1\n5 6\n3 1",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "4 7\n4 10 3\n7 7\n4 9\n10 10",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "56 26\n39 84 7\n23 73\n59 31\n87 80",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "48 36\n98 69 94\n18 62\n2 32\n97 60",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "15 36\n48 14 12\n76 80\n10 38\n83 71",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "3 76\n27 45 52\n7 62\n43 10\n3 35",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "29 38\n54 6 54\n44 46\n95 55\n55 38",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "2002 2799\n3737 4732 3099\n4333 3259\n4977 5673\n2929 5564",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "5163 5563\n2466 787 2122\n2295 3011\n4995 3918\n5665 2365",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "5648 3314\n2341 4060 3226\n1321 4341\n3462 2346\n4337 1830",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "4552 3445\n662 1169 4982\n3710 1193\n5781 2299\n3207 1772",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "1272 3366\n799 688 4421\n4354 2594\n2957 1993\n4820 2986",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "2480 4828\n2946 4398 628\n4160 2158\n5332 5035\n5798 2172",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "1886 1982\n1158 4766 663\n3469 5700\n3252 3155\n1865 3664",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "12000 12000\n12000 12000 12000\n12000 12000\n12000 12000\n12000 12000",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "12000 12000\n12000 12000 12000\n12000 12000\n12000 12000\n12000 12000",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 12000\n2 11999 1\n11999 11999\n12000 1\n11999 2",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 1\n12000 1 2\n12000 11999\n1 11999\n1 11999",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:53",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:38"
}
{
  "problem_code": "problems",
  "title": "Tree",
  "tags": [],
  "text": "Consider an n-vertex binary search tree T containing n keys 1, 2 ... n. A \r\n\tpermutation p = [p1... pn] of the integers 1, 2 ... n is \r\n\tsaid to beconsistent with the tree Tif the tree can be built from the \r\n\tempty one as the result of inserting integers p1, p2... pn. \r\n\tFind how many permutations are consistent with the tree T.IllustrationExactly 2 permutations are consistent with the tree in the figure below.TaskWrite a program that for each data set from a sequence of several data sets:reads from the input file a description of an input tree T,computes the number of permutations consistent with T,writes the result to output.InputThe first line of the input file contains one positive integer d not larger \r\n\tthan 10. This is the number of data sets. The data sets follow. Each set of \r\n\tdata occupies two consecutive lines of the input file. The first line contains \r\n\tonly one integer n, 1 <= n <= 30. This is the number of vertices of the \r\n\ttree. The second line contains a sequence of n integers separated by single \r\n\tspaces. The integers are keys in the input tree given in the prefix order. The \r\n\tfirst integer in the sequence is the key from the root of the tree. It is \r\n\tfollowed by the keys from the left subtree written in the prefix order. The \r\n\tsequence ends with the keys from the right subtree, also given in the prefix \r\n\torder.OutputFor each i = 1 ... d, your program should write to the i-th line of output \r\n\tthe number of permutations consistent with the tree described in the i-th \r\n\tdata set.ExampleSample input:\r\n5 \r\n3 \r\n2 1 3 \r\n3 \r\n1 2 3 \r\n1 \r\n1 \r\n4 \r\n2 1 3 4 \r\n4 \r\n1 4 2 3 \r\n\r\nSample output:\r\n2 \r\n1 \r\n1 \r\n3 \r\n1",
  "sample_input": "Sample input:\r\n5 \r\n3 \r\n2 1 3 \r\n3 \r\n1 2 3 \r\n1 \r\n1 \r\n4 \r\n2 1 3 4 \r\n4 \r\n1 4 2 3 \r\n\r\nSample output:\r\n2 \r\n1 \r\n1 \r\n3 \r\n1",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/TREE1",
  "scraped_at": "2025-08-17 00:33:46",
  "test_cases": [
    {
      "input": "Sample input:\r\n5 \r\n3 \r\n2 1 3 \r\n3 \r\n1 2 3 \r\n1 \r\n1 \r\n4 \r\n2 1 3 4 \r\n4 \r\n1 4 2 3 \r\n\r\nSample output:\r\n2 \r\n1 \r\n1 \r\n3 \r\n1",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "gtvdsk ixhfgx\n6\n8\n3 2 9\n8\n5 7 8\n1\n4\n6\n6 9 1 2\n6\n6 7 9 1\nj jxuupb\n3\n3\n3\n3\n4",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "icdiw xsx\n5\n10\n9 8 8\n9\n1 2 5\n5\n9\n4\n3 5 6 5\n2\n5 9 9 7\ncci sibvleb\n4\n9\n7\n9\n10",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "zoibz e\n7\n7\n6 4 5\n7\n7 8 2\n6\n1\n2\n5 8 2 5\n3\n2 7 8 8\nna jmif\n1\n10\n2\n1\n5",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "wezd u\n69\n89\n98 54 2\n21\n6 96 6\n64\n96\n1\n36 40 86 38\n32\n90 18 70 14\npf itb\n88\n30\n28\n12\n21",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "jldqz rpy\n36\n40\n16 32 76\n41\n79 19 100\n77\n91\n10\n49 58 84 71\n74\n61 90 17 57\noyp wuui\n93\n73\n86\n94\n61",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "k j\n81\n33\n17 32 93\n22\n79 96 72\n94\n1\n12\n93 61 58 75\n33\n28 50 99 84\nthabyx glfdfzj\n82\n73\n90\n2\n74",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "zxudp hm\n84\n27\n47 4 87\n38\n6 49 99\n97\n100\n50\n26 65 1 34\n100\n64 77 15 31\ncaiyog sqjonub\n48\n15\n19\n18\n47",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "tqlwg feqjuc\n66\n46\n37 81 93\n74\n87 24 33\n60\n22\n77\n83 91 62 34\n91\n97 87 36 45\nmnqpqq k\n99\n10\n74\n42\n88",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "iszscu z\n125\n250\n94 456 56\n125\n496 96 171\n232\n193\n338\n272 447 393 285\n388\n396 299 61 291\nrbss ll\n241\n247\n73\n445\n107",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "eals bds\n388\n245\n377 498 383\n446\n172 413 261\n108\n144\n50\n420 230 450 141\n305\n425 344 69 131\nq nfym\n370\n78\n441\n300\n221",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "alcas mndng\n325\n311\n69 202 177\n411\n266 374 158\n320\n342\n457\n457 116 388 211\n239\n492 210 286 201\nq tuyrev\n214\n275\n386\n452\n62",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "v wdv\n251\n462\n429 385 450\n243\n417 205 93\n336\n387\n377\n401 269 119 440\n426\n332 228 415 313\nhvqc fkgx\n437\n213\n390\n140\n133",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "elu nqs\n290\n269\n323 130 189\n435\n406 417 328\n221\n128\n247\n129 88 460 83\n460\n225 129 366 330\ngj wqeuyxb\n136\n296\n309\n208\n235",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "bay mxu\n391\n146\n418 343 103\n173\n431 349 168\n143\n321\n131\n151 100 462 351\n187\n65 177 88 419\ncbvifn v\n441\n54\n339\n240\n106",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "gl mjx\n448\n256\n83 278 81\n244\n189 61 110\n315\n58\n392\n307 344 344 247\n424\n322 374 408 313\nazs li\n454\n403\n374\n61\n405",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "dcaut egplrz\n1000\n1000\n1000 1000 1000\n1000\n1000 1000 1000\n1000\n1000\n1000\n1000 1000 1000 1000\n1000\n1000 1000 1000 1000\np ctkprq\n1000\n1000\n1000\n1000\n1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "s k\n1000\n1000\n1000 1000 1000\n1000\n1000 1000 1000\n1000\n1000\n1000\n1000 1000 1000 1000\n1000\n1000 1000 1000 1000\nce afi\n1000\n1000\n1000\n1000\n1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "u q\n1000\n1\n1000 1000 1\n999\n999 999 1000\n1\n1\n999\n999 1000 2 1000\n999\n1000 1 999 1\npipzt gnyf\n2\n2\n1\n999\n999",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "xtzsut v\n2\n2\n2 999 1\n1\n999 1 1\n1000\n2\n2\n1000 2 999 1\n1000\n999 1000 999 1\nrwic qcbk\n2\n1000\n2\n1000\n1000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:51",
  "total_test_cases": 20
}
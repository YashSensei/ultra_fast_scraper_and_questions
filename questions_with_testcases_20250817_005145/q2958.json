{
  "problem_code": "problems",
  "title": "Who is the Best?",
  "tags": [],
  "text": "Baratheon is one of the oldest houses in the Land of Seven Kingdoms. There have been many kings and their many heirs. The hierarchy is represented as a tree where each character is a node with initial value as theVarys_Valuegiven by Lord Varys. You are the analyser appointed to the current King to give insights about a character.There areQcommands given by the King which can be any of the following type:1. Multiply theVarys_Valueof all the characters in path fromutovby a given numberP.2. For a given characterX, find the number ofordered pairs (i,j)such thatLCM(i,j)is equal to current value at nodeX. (Insight)For commands of second type, print the number of such pairs (modulo1000000007).InputFirst line contains 2 space separated integersNandQindicating the number of total characters and number of queries you need to answer.In the nextN-1lines, each line contains 2 integersu,vwhich indicates a relationship between characteruand characterv.Next line containsNspace separated integerV1, V2, V3, ...... VNwhereViindicates the Varys_Value ofithcharacter.FollowingQlines contains the queries to be answered.Types of Queries:1 u v P- Query of first type2 X- Query of second typeOutputFor each query of second type, print the answer to the query in a new line.Constraints1 ≤ N ≤ 1000001 ≤ Q ≤ 1000001 ≤ u, v ≤ N1 ≤ P ≤ 1001 ≤ Vi≤ 100000ExampleSample Input:6 6 \r\n1 2\r\n4 6\r\n1 3\r\n5 1\r\n4 5\r\n7 8 4 8 1 2\r\n1 2 1 14\r\n2 4\r\n1 6 5 10\r\n2 5\r\n1 6 4 10\r\n2 1Sample Output:7\r\n9\r\n15",
  "sample_input": "Sample Input:6 6 \r\n1 2\r\n4 6\r\n1 3\r\n5 1\r\n4 5\r\n7 8 4 8 1 2\r\n1 2 1 14\r\n2 4\r\n1 6 5 10\r\n2 5\r\n1 6 4 10\r\n2 1Sample Output:7\r\n9\r\n15",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/INS16F",
  "scraped_at": "2025-08-17 00:34:18",
  "test_cases": [
    {
      "input": "Sample 6 6 \r\n1 2\r\n4 6\r\n1 3\r\n5 1\r\n4 5\r\n7 8 4 8 1 2\r\n1 2 1 14\r\n2 4\r\n1 6 5 10\r\n2 5\r\n1 6 4 10\r\n2 1Sample",
      "expected_output": "7\r\n9\r\n15",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "8 6\narbe 9 2\n3 7\n4 2\n1 1\n10 1\n4 8\n3 6 7 2 9 6\n7 7 6 8\n6 6\n8 6 4 8\n1 5\n4 9 9 5\n7 3\n4 qmoyrgy",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "6 2\nbcxgn 6 6\n2 2\n4 7\n2 6\n9 10\n9 2\n1 10 3 10 4 8\n7 2 10 9\n3 8\n9 2 10 5\n9 4\n8 10 7 8\n10 2\n8 hii",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "2 6\nvtsnnc 3 2\n10 10\n8 2\n2 6\n3 3\n4 10\n4 8 6 3 6 4\n9 8 4 9\n10 6\n2 5 6 5\n7 5\n2 6 8 6\n7 7\n3 qfci",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "31 51\nqvov 20 62\n82 81\n78 7\n6 1\n91 1\n10 45\n31 63 69 78 91 72\n72 50 10 52\n71 15\n37 67 9 57\n43 88\n79 42 2 23\n27 4\n58 pzsnpj",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "24 32\naid 76 20\n39 84\n53 8\n33 98\n71 42\n58 13\n72 32 33 30 92 97\n28 79 85 31\n83 97\n63 80 75 73\n9 79\n16 38 22 97\n49 12\n93 henzt",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "83 7\nr 15 32\n8 61\n97 7\n46 83\n16 30\n66 32\n72 86 33 50 60 43\n27 25 32 99\n32 85\n34 82 76 50\n36 7\n22 31 84 11\n23 28\n20 zkwkx",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "45 17\np 99 56\n93 32\n56 77\n52 12\n96 99\n89 98\n2 20 43 95 84 42\n58 43 45 96\n14 66\n58 12 42 65\n28 78\n2 23 56 37\n45 77\n86 rviax",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "81 36\nzgt 43 51\n1 47\n95 75\n67 8\n35 37\n25 71\n86 60 82 67 85 96\n17 62 55 34\n94 30\n62 61 72 93\n6 8\n49 4 49 100\n83 37\n43 socq",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "428896 70276\npt 203915 342171\n106941 185417\n436276 317313\n463870 450199\n156548 449920\n109638 52901\n161697 284100 226060 98607 108544 322417\n281340 417282 258258 140071\n452504 320132\n89222 404663 474836 199750\n338406 456071\n62913 329705 191386 125392\n334103 100956\n422273 gxolg",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "71009 298936\nhrtwcp 259374 114412\n281222 170074\n243270 56401\n196297 105993\n190596 461701\n180686 161054\n450941 309610 285117 479367 342745 459689\n435405 196528 448202 433529\n209464 417805\n217636 76082 316544 84536\n275598 430732\n80088 386396 309650 56503\n233932 104584\n337850 wgee",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "159235 422757\necffbh 276187 122816\n495572 140545\n461941 339512\n489022 325138\n209650 148073\n172945 465287\n86101 131090 456374 130719 227093 364258\n351887 469069 157393 182079\n202810 54563\n295967 271428 351417 177985\n429317 240009\n226754 201665 436621 437961\n430810 409492\n314030 iubrfw",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "278581 334224\nbi 171251 141041\n464728 94371\n95856 461622\n433693 256565\n340058 480281\n223641 68635\n189564 484134 494346 132832 224953 250727\n133865 336005 265321 68538\n256736 322011\n428876 359812 236739 99382\n392617 191280\n481377 128299 64178 59374\n180412 272253\n189119 ea",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "126865 379559\npr 348589 377553\n81723 478895\n476821 233733\n457533 233459\n95292 232071\n251228 328940\n417067 435771 322351 226336 185388 487638\n400924 107406 337746 327239\n149859 167477\n97841 305296 443506 494093\n381161 166042\n55670 385088 157966 399029\n71829 493236\n389799 y",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "88342 363079\nsrigc 437177 56512\n263510 349107\n390982 309023\n167717 303290\n285117 372432\n371365 350030\n370176 261229 357878 52000 108496 211672\n461997 319782 160739 128471\n302113 104259\n158171 296450 77853 219348\n193015 223840\n143310 209226 420537 460159\n459534 414277\n235226 ch",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "489237 89607\nkq 195620 480230\n376579 444834\n471058 478198\n95420 353829\n271197 168484\n307509 275347\n404809 451227 393385 313861 146632 286010\n235357 240723 388070 389011\n385436 102835\n188705 305779 416255 61365\n219625 491897\n364131 95403 259490 429655\n386227 353695\n76490 xy",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000000 1000000\nwcyaje 1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000 1000000 1000000 1000000 1000000\n1000000 1000000 1000000 1000000\n1000000 1000000\n1000000 1000000 1000000 1000000\n1000000 1000000\n1000000 1000000 1000000 1000000\n1000000 1000000\n1000000 yxtnhn",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000000 1000000\nyuhlqg 1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000\n1000000 1000000 1000000 1000000 1000000 1000000\n1000000 1000000 1000000 1000000\n1000000 1000000\n1000000 1000000 1000000 1000000\n1000000 1000000\n1000000 1000000 1000000 1000000\n1000000 1000000\n1000000 l",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000000 999999\ng 1 1\n1000000 1000000\n1000000 1000000\n1000000 2\n1000000 1\n2 2\n2 2 999999 1 1 1\n1 1000000 2 1\n1 1000000\n2 2 999999 1000000\n1 999999\n1000000 1000000 2 999999\n1000000 2\n1 exw",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 2\nd 1 2\n999999 1\n999999 2\n2 999999\n2 1\n1 999999\n1 1 2 1000000 1000000 999999\n1000000 1000000 2 1\n1 999999\n2 1 2 2\n1000000 1\n999999 1000000 2 1\n1 2\n2 c",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:54",
  "total_test_cases": 20
}
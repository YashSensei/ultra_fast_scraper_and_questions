{
  "problem_code": "problems",
  "title": "primes triangle (I)",
  "tags": [],
  "text": "The primes triangle is a triangle that contain all prime numbers .2\r\n        3   5\r\n      7  11  13\r\n    17 19  23  29\r\n  ...Your task is very easy given an integer from 1 to 108print its place in the primes triangle.InputIn the first line integer 1 ≤ T ≤ 105, followed by T lines each line contain integer 1 ≤ n ≤ 108.OutputOne line contain pair of integers i, j, where i is the row number and j is the column number, 1 base. Or -1 if n is not found in the primes triangle.ExampleInput:3\r\n3\r\n23\r\n4Output:2 1\r\n4 3\r\n-1If you find Time limit is small here you can solve the tutorial version here:PTRI2.",
  "sample_input": "2\r\n        3   5\r\n      7  11  13\r\n    17 19  23  29\r\n  ...",
  "sample_output": "Input:3\r\n3\r\n23\r\n4Output:2 1\r\n4 3\r\n-1",
  "link": "https://www.spoj.com/problems/PTRI",
  "scraped_at": "2025-08-17 00:33:48",
  "test_cases": [
    {
      "input": "2\r\n        3   5\r\n      7  11  13\r\n    17 19  23  29\r\n  ...",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3\r\n3\r\n23\r\n4",
      "expected_output": "2 1\r\n4 3\r\n-1",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "3\n6\n9\n1",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n3",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n3",
      "expected_output": "To be computed",
      "type": "small_case_5",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "14\n67911915\n65564229\n30613238\n27282028\n70156294\n54363794\n73886946\n41553533\n21622668\n23144369\n70635138\n12382981\n9513491\n80738931",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "5\n99942248\n73463003\n52609235\n22027626\n97911663",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "20\n39208120\n62315200\n29820959\n53932535\n93667572\n97807644\n73030398\n92424926\n3224078\n23170303\n2964572\n57138970\n73172108\n83555745\n14786539\n71323737\n56269002\n79132204\n55974638\n73763428",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "17\n52047040\n18757978\n51083055\n41391764\n35519574\n58245147\n79929276\n82531084\n66357778\n52037644\n23186571\n17012341\n95261595\n29875563\n27168880\n51583937\n55782012",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "6\n39681902\n38489400\n87079538\n20735302\n51847996\n59542806",
      "expected_output": "To be computed",
      "type": "medium_case_10",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "68\n22490\n99419\n47875\n13124\n41261\n19417\n14357\n88008\n78724\n54940\n99904\n55860\n65834\n69358\n74122\n79591\n76870\n76179\n38227\n88142\n48990\n67480\n15485\n73881\n20623\n8853\n57965\n91966\n13992\n15076\n98162\n72910\n3335\n15920\n4462\n23818\n92493\n14135\n43644\n79586\n33640\n54802\n83416\n75853\n67849\n47154\n21988\n17217\n59248\n5213\n52450\n78563\n52805\n64692\n24928\n21786\n35631\n78462\n16711\n30658\n82154\n30942\n96252\n72443\n29964\n7616\n75861\n53378",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "27\n80757\n39344\n27470\n6906\n78630\n43705\n41588\n71715\n97371\n90172\n54920\n25783\n23735\n13638\n67829\n59466\n11251\n39048\n50018\n73044\n7028\n17786\n88054\n72578\n77061\n81287\n34634",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "70\n34724\n59666\n24012\n12947\n58669\n79642\n12803\n66073\n94458\n11899\n51828\n84593\n16543\n67756\n91903\n16609\n17058\n4928\n3976\n77390\n73391\n91260\n86925\n72329\n43005\n87458\n32281\n9589\n77706\n61738\n87243\n76567\n78844\n32215\n85304\n76981\n5105\n23219\n14228\n99807\n95479\n73671\n99420\n40005\n28874\n50903\n11312\n28959\n1031\n31687\n22200\n41079\n7637\n23520\n78701\n86553\n412\n91210\n24427\n86358\n60982\n56615\n14732\n57324\n1261\n99498\n8724\n27976\n65427\n191",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "78\n51350\n82975\n92547\n11341\n39177\n94709\n41949\n72183\n54490\n21099\n47352\n90083\n89835\n40355\n62817\n83064\n23268\n48559\n58444\n14456\n43133\n46108\n45060\n33652\n43730\n85628\n30191\n19219\n913\n1173\n15382\n104\n44767\n25721\n88459\n56863\n99245\n32491\n92730\n56110\n14344\n60776\n21545\n17787\n89371\n19535\n76216\n49503\n96093\n67001\n42851\n95371\n19424\n74130\n95453\n80400\n58581\n54076\n24622\n17260\n99465\n792\n12054\n3801\n33153\n45579\n16380\n34873\n47263\n4951\n91057\n99203\n10050\n69237\n40782\n85154\n94360\n69014",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "79\n63833\n93210\n6456\n47784\n14238\n64928\n98698\n88229\n26460\n48067\n2434\n32304\n97285\n86960\n51980\n72699\n83918\n54642\n18937\n73541\n16159\n76512\n41844\n21871\n11609\n98155\n49623\n74128\n49066\n98774\n24858\n43531\n45450\n3364\n25178\n39082\n5789\n13366\n91612\n8614\n57208\n17015\n35806\n97714\n24402\n96942\n54602\n53566\n38933\n53032\n82557\n61274\n81988\n91714\n57861\n37852\n65380\n53657\n51106\n24318\n72018\n60296\n60414\n57524\n42123\n47365\n41988\n71859\n83593\n68967\n71883\n88922\n61032\n83908\n60619\n42053\n38434\n42510\n6097",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "104\n34996\n82649\n18651\n84880\n25304\n3722\n36087\n79312\n83827\n31875\n95595\n35762\n11864\n23360\n3527\n6450\n51994\n1902\n46877\n15638\n60271\n26280\n86989\n53524\n75654\n34052\n34882\n62828\n93399\n87564\n75763\n9564\n76910\n96022\n47339\n27243\n12288\n27273\n99945\n88562\n64767\n69144\n29839\n52088\n6252\n70888\n94288\n72273\n11455\n20319\n38567\n33199\n51286\n76655\n34902\n93902\n93866\n74303\n12541\n67575\n10482\n43871\n97162\n31321\n28839\n36308\n29244\n25687\n14617\n61700\n64457\n2008\n6506\n25439\n44462\n62389\n14470\n5555\n82154\n72377\n18092\n54819\n57566\n15449\n59908\n30425\n1712\n10765\n65704\n82431\n32894\n22626\n33710\n99181\n9114\n26156\n26387\n11513\n94625\n87162\n19021\n69442\n81456\n42797",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "91\n18285\n24641\n9815\n27080\n28372\n45450\n16251\n1901\n27833\n37\n70920\n29445\n43134\n29989\n34923\n93457\n46923\n13425\n88207\n58079\n29616\n35001\n22687\n46380\n84705\n36705\n58779\n33453\n98435\n33053\n82930\n98963\n30045\n79433\n73160\n81170\n79589\n3215\n27485\n93173\n74975\n58577\n59873\n75533\n63087\n316\n80128\n9085\n65134\n54248\n51573\n20657\n43579\n33019\n12127\n39152\n99782\n99154\n5324\n37656\n1689\n67666\n36369\n85518\n72157\n7648\n13024\n82715\n61078\n15990\n42265\n21559\n80957\n65420\n16698\n27648\n10718\n95431\n273\n56240\n95954\n18641\n52291\n50444\n66656\n26390\n19525\n2002\n26692\n29184\n73347",
      "expected_output": "To be computed",
      "type": "large_case_17",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "108\n26411232\n3518413\n15904981\n8996937\n44943639\n12587256\n29478798\n2001303\n49564959\n41796341\n59162341\n39636637\n31923383\n45062896\n58120392\n49478704\n12129192\n94416249\n44961884\n14877262\n20855213\n66081367\n69698850\n8661029\n12757142\n91713236\n41552001\n8908363\n26156923\n21219587\n75462592\n42423422\n37168207\n9804381\n80402074\n62584921\n46048432\n57607383\n4643132\n38845078\n36137833\n69147618\n38781379\n11035489\n45221647\n42571539\n36851432\n7449308\n55901102\n28945448\n20833800\n3091919\n62439458\n85350282\n16495549\n62083904\n88501337\n10400872\n94804033\n18029455\n93721303\n46020006\n55552467\n84963784\n69258119\n25976152\n88072696\n28538255\n51298942\n17519289\n33219826\n1339176\n22575484\n26991652\n2076970\n37435861\n23424792\n30768844\n9173751\n88003246\n11111307\n8793835\n95698793\n95671905\n38823822\n17546537\n98945158\n97241700\n74470983\n51717412\n72792440\n23073584\n91826572\n99526448\n84605762\n48698329\n15945277\n18190299\n54434260\n34323715\n91427051\n28442882\n24137117\n98936473\n99258959\n88962750\n76823107\n68037998",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 108)"
    },
    {
      "input": "108\n94610329\n8269502\n16509237\n44641448\n71679703\n52888054\n3146546\n74179299\n33546544\n40453009\n22439528\n8180699\n15728396\n4304363\n41588470\n1101230\n56087009\n90894479\n34653629\n18098147\n48407888\n12154592\n49848892\n54373841\n81597194\n24081562\n19732682\n49230270\n67727621\n16563010\n75567297\n90700128\n21970913\n74632357\n87310132\n91485579\n19774125\n35282713\n74267166\n25472554\n49667128\n4676640\n2622402\n64717554\n43156256\n29617472\n82744172\n52918232\n72665060\n14998376\n29098192\n73814622\n75470884\n13259734\n89113071\n92026966\n5113170\n4737629\n99366169\n67436971\n22974702\n81458004\n62249337\n14773355\n36009831\n17988704\n40409637\n9466747\n37940515\n19380507\n80571711\n6815889\n13247893\n70111657\n91185576\n77851135\n46058072\n27172075\n3854477\n40569166\n44402042\n59259852\n14490296\n46398543\n36144269\n23541483\n46198383\n97399473\n36764064\n99726771\n31461658\n7238154\n63681447\n17539067\n11244507\n48666892\n83623767\n92189511\n14323221\n99681224\n51510080\n14635672\n38226767\n99651061\n90969514\n51621985\n48210937\n58381603",
      "expected_output": "To be computed",
      "type": "max_case_19",
      "description": "Maximum size array (N = 108)"
    },
    {
      "input": "1\n64269683",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 1)"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:51",
  "total_test_cases": 20
}
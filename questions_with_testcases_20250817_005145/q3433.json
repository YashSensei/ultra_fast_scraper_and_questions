{
  "problem_code": "problems",
  "title": "Tree cut",
  "tags": [],
  "text": "You are given a tree (a connected, acyclic graph) along with a set ofcommodities, i.e. pairs of vertices, (s1,t1),...,(sm,tm) (si≠ti).  Amulticutis a set of edges that when removed disconnectssifromtifor alli.  There is a unique pathPu,vbetween every pair of verticesu,vin a tree, and themax-costof a multicutSis maxi|S∩Psi, ti|.  You will be given a rooted tree of height1and a set of commodities and must return the minimum possible max-cost over all multicuts.InputThe first line of the input is \"N M\" (1≤N, M≤100000),\r\nwhereNis the number of vertices in the tree andMis the number\r\nof commodities.  All vertices are numbered0, ...,N-1, and the\r\nroot has labelN - 1.Mlines then follow, where theith line\r\nis \"siti\", representing a commodity (si,ti) wheresi≠ti.  Commodities are distinct: neither (si,ti) = (sj,tj)\r\nnor (si,ti) = (tj,sj) will hold wheni≠j.OutputYour output should consist of a single number, the minimum possible\r\nmax-cost of a multicut, followed by a newline.ExampleInput:10 2\r\n0 5\r\n4 8Output:1",
  "sample_input": "Input:10 2\r\n0 5\r\n4 8Output:1",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/MMCUT",
  "scraped_at": "2025-08-17 00:34:16",
  "test_cases": [
    {
      "input": "10 2\r\n0 5\r\n4 8",
      "expected_output": "1",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5 1\n8 4\n8 4",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "5 5\n3 3\n8 6",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "3 9\n5 8\n7 3",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "72 48\n90 36\n44 71",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "69 25\n48 27\n85 55",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "92 45\n42 86\n49 25",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "38 67\n9 96\n16 59",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "30 66\n98 61\n58 50",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "428 146\n291 137\n224 180",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "94 469\n198 367\n175 314",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "192 203\n299 152\n82 386",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "434 117\n142 320\n81 154",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "485 218\n100 146\n181 317",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "67 269\n301 418\n400 473",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "292 308\n449 443\n87 464",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n999 999\n999 1",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1000 999\n1 1\n1 1000",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:56",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:38:07"
}
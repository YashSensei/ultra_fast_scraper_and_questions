{
  "problem_code": "problems",
  "title": "Magic Bitwise AND Operation",
  "tags": [],
  "text": "Givennintegers, your task is to pickkout of them so that the picked number are minimum when do bitwise AND among all of them.InputThere are multiple test cases for this problem. The first line of the input contains an integer denoting the number of test cases.For each test case, there are two integers in the first line:nandk, denoting the number of given integers and the number of integers you are asked to pick out. (1≤n≤ 40, 1 ≤k≤n)The second line contains the n integers. You may assume that all integers are smaller than 260.Note: There are about one thousand randomly generated test cases. Fortunately 90% of them are relatively small.OutputFor each test case, output only one integer - the smallest possible value.ExampleInput:2\r\n3 2\r\n5 6 7\r\n8 2\r\n238 153 223 247 111 252 253 247Output:Case #1: 4\r\nCase #2: 9",
  "sample_input": "Input:2\r\n3 2\r\n5 6 7\r\n8 2\r\n238 153 223 247 111 252 253 247Output:Case #1: 4\r\nCase #2: 9",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/AND",
  "scraped_at": "2025-08-17 00:34:29",
  "test_cases": [
    {
      "input": "2\r\n3 2\r\n5 6 7\r\n8 2\r\n238 153 223 247 111 252 253 247",
      "expected_output": "Case #1: 4\r\nCase #2: 9",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4\n5\n4\n10\n8",
      "expected_output": "4\n5\n4\n10\n8",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "2\n4\n4",
      "expected_output": "2\n4\n4",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n5",
      "expected_output": "1\n5",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "7\n91930311\n25538548\n23901060\n25616553\n42742883\n52229313\n27779590",
      "expected_output": "7\n91930311\n25538548\n23901060\n25616553\n42742883\n52229313\n27779590",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "6\n29019698\n37972611\n36663796\n8370150\n72980129\n97086236",
      "expected_output": "6\n29019698\n37972611\n36663796\n8370150\n72980129\n97086236",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "5\n18098201\n75870563\n68413393\n44687659\n9524312",
      "expected_output": "5\n18098201\n75870563\n68413393\n44687659\n9524312",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "8\n35034864\n91843886\n44436568\n66052902\n58338207\n13028417\n8612211\n56986960",
      "expected_output": "8\n35034864\n91843886\n44436568\n66052902\n58338207\n13028417\n8612211\n56986960",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "15\n15244274\n61031373\n91483242\n95879750\n40510165\n1238720\n89693690\n87736880\n49747839\n10256879\n9326436\n49169997\n84148558\n22246568\n90064954",
      "expected_output": "15\n15244274\n61031373\n91483242\n95879750\n40510165\n1238720\n89693690\n87736880\n49747839\n10256879\n9326436\n49169997\n84148558\n22246568\n90064954",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "34\n86232\n94374\n62355\n11496\n3682\n95479\n48553\n83397\n97536\n72395\n29627\n86685\n9984\n76285\n10320\n49329\n55493\n5262\n57651\n23155\n49029\n31467\n4476\n12513\n2672\n26135\n74610\n8117\n37005\n83495\n90175\n90905\n69054\n40286",
      "expected_output": "34\n86232\n94374\n62355\n11496\n3682\n95479\n48553\n83397\n97536\n72395\n29627\n86685\n9984\n76285\n10320\n49329\n55493\n5262\n57651\n23155\n49029\n31467\n4476\n12513\n2672\n26135\n74610\n8117\n37005\n83495\n90175\n90905\n69054\n40286",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "27\n7983\n79368\n84904\n14460\n18086\n18605\n63809\n37890\n75209\n56301\n58699\n26027\n36857\n27545\n50055\n69043\n12672\n17227\n90565\n5436\n33295\n26906\n68153\n60701\n71748\n23354\n57437",
      "expected_output": "27\n7983\n79368\n84904\n14460\n18086\n18605\n63809\n37890\n75209\n56301\n58699\n26027\n36857\n27545\n50055\n69043\n12672\n17227\n90565\n5436\n33295\n26906\n68153\n60701\n71748\n23354\n57437",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "33\n59939\n37020\n83251\n36347\n53369\n36913\n74053\n58030\n19407\n42111\n55978\n83514\n27212\n8662\n63958\n21581\n16345\n34910\n12974\n69494\n84147\n15427\n70458\n61897\n31794\n54114\n72381\n88596\n20379\n18731\n28292\n61463\n50146",
      "expected_output": "33\n59939\n37020\n83251\n36347\n53369\n36913\n74053\n58030\n19407\n42111\n55978\n83514\n27212\n8662\n63958\n21581\n16345\n34910\n12974\n69494\n84147\n15427\n70458\n61897\n31794\n54114\n72381\n88596\n20379\n18731\n28292\n61463\n50146",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "37\n84613\n89339\n4008\n89746\n91205\n57186\n53282\n78943\n5701\n27011\n79030\n42062\n17001\n10713\n96906\n4192\n80338\n26550\n27108\n9663\n48847\n90965\n76622\n25879\n71993\n74672\n72521\n53276\n69859\n42439\n82657\n99281\n67075\n39050\n86859\n79581\n19973",
      "expected_output": "37\n84613\n89339\n4008\n89746\n91205\n57186\n53282\n78943\n5701\n27011\n79030\n42062\n17001\n10713\n96906\n4192\n80338\n26550\n27108\n9663\n48847\n90965\n76622\n25879\n71993\n74672\n72521\n53276\n69859\n42439\n82657\n99281\n67075\n39050\n86859\n79581\n19973",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "20\n67263\n34960\n37034\n49146\n70176\n75559\n67155\n35837\n41451\n74101\n31413\n60164\n85975\n56397\n13820\n45853\n26485\n7036\n40191\n60201",
      "expected_output": "20\n67263\n34960\n37034\n49146\n70176\n75559\n67155\n35837\n41451\n74101\n31413\n60164\n85975\n56397\n13820\n45853\n26485\n7036\n40191\n60201",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "22\n44191\n46195\n52984\n20809\n24055\n94283\n74709\n54057\n61648\n12090\n1011\n92890\n56681\n52487\n51492\n54252\n87739\n83528\n50937\n80841\n24565\n82125",
      "expected_output": "22\n44191\n46195\n52984\n20809\n24055\n94283\n74709\n54057\n61648\n12090\n1011\n92890\n56681\n52487\n51492\n54252\n87739\n83528\n50937\n80841\n24565\n82125",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "21\n50400\n80146\n31796\n94121\n12159\n77923\n15424\n37679\n61433\n98582\n7835\n84302\n99936\n68874\n27249\n13752\n70974\n98062\n92111\n208\n67042",
      "expected_output": "21\n50400\n80146\n31796\n94121\n12159\n77923\n15424\n37679\n61433\n98582\n7835\n84302\n99936\n68874\n27249\n13752\n70974\n98062\n92111\n208\n67042",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "40\n49079795\n91180025\n14399520\n40911808\n70560200\n2451086\n73555696\n89830652\n10282680\n74235656\n50050512\n10891888\n19696357\n41904235\n43564247\n91222730\n95684547\n12998484\n83890622\n58093544\n97890553\n12543458\n28299254\n25436613\n4330463\n74181119\n29127026\n60452218\n53306532\n57116312\n734542\n54628969\n96347864\n96702396\n83242199\n17170333\n3209305\n52421795\n56701180\n59585685",
      "expected_output": "40\n49079795\n91180025\n14399520\n40911808\n70560200\n2451086\n73555696\n89830652\n10282680\n74235656\n50050512\n10891888\n19696357\n41904235\n43564247\n91222730\n95684547\n12998484\n83890622\n58093544\n97890553\n12543458\n28299254\n25436613\n4330463\n74181119\n29127026\n60452218\n53306532\n57116312\n734542\n54628969\n96347864\n96702396\n83242199\n17170333\n3209305\n52421795\n56701180\n59585685",
      "type": "max_case_17",
      "description": "Maximum size array (N = 40)"
    },
    {
      "input": "40\n14787888\n97493744\n16421711\n94734046\n96924638\n21406039\n68289171\n14160957\n43336697\n44053636\n7183652\n2091228\n54657745\n9047331\n31271040\n49404663\n42139786\n70133801\n20975741\n51710165\n65634203\n83552977\n38921004\n78664219\n56219416\n74876245\n73694503\n76376297\n92507184\n8958089\n67791170\n52133308\n5505796\n23158590\n82265917\n27996831\n49519326\n24634034\n69471665\n47632308",
      "expected_output": "40\n14787888\n97493744\n16421711\n94734046\n96924638\n21406039\n68289171\n14160957\n43336697\n44053636\n7183652\n2091228\n54657745\n9047331\n31271040\n49404663\n42139786\n70133801\n20975741\n51710165\n65634203\n83552977\n38921004\n78664219\n56219416\n74876245\n73694503\n76376297\n92507184\n8958089\n67791170\n52133308\n5505796\n23158590\n82265917\n27996831\n49519326\n24634034\n69471665\n47632308",
      "type": "max_case_18",
      "description": "Maximum size array (N = 40)"
    },
    {
      "input": "2\n31333356\n45714006",
      "expected_output": "2\n31333356\n45714006",
      "type": "edge_case_19",
      "description": "Edge case array (N = 2)"
    },
    {
      "input": "2\n100000000\n100000000",
      "expected_output": "2\n100000000\n100000000",
      "type": "edge_case_20",
      "description": "Edge case array (N = 2)"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:57",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:38:15"
}
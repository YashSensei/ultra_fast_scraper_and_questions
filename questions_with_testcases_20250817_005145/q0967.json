{
  "problem_code": "problems",
  "title": "Training for final",
  "tags": [],
  "text": "Abotrika is a famous player who plays in a good team. His team is going to play the final match next week and he have to train hard because all his fans are expecting that Abotrika will score more than one goal, so his team-mates suggested helping him in training given that Abotrika will play alone against all his friends in the training.InputGiven two integers N,M (length and width of the training court) 2 <= N, M <= 20 and X,Y the starting point of Abotrika on the court where X is number of row and Y is number of column 1 <= X <= N, 1 <= Y <= M then P[i][j], where P is the power of each of his friends 0 < P[i][j] <100, and P[X][Y] is the power of Abotrika.OutputThe output must be one line either \"N\" or \"Y\" then the maximum power \"Abotrika can get when he pass from his friends to reach the (the goal who is at the cell P[N][M] in the court ).NOTE:  Abotrika's power decreases by the power of his team-mate whom Aboutrika succeededto get through on his way to score a goal. \"Y\" means that he had scored a goal with power at least 0  and \"N\" if he couldn't reach the goal with zero power at least. Also, Abotrika can only move in two directions -- right and down -- to reach the goal.ExampleInput:4 4\r\n1 1\r\n100 55 10 2\r\n20 10 90 1\r\n60 20 22 4\r\n1 30 70 5Output:Y 23Explanation: The maximum power Abotrika can get after reaching goal : 100 - (55+10+2+1+4+5) = 23Input:2 2\r\n1 1\r\n1 55\r\n20 10Output:NExplanation: The maximum power Abotrika can get after reaching goal : 1 - (20+10) = -29 so it will be N.",
  "sample_input": "Input:4 4\r\n1 1\r\n100 55 10 2\r\n20 10 90 1\r\n60 20 22 4\r\n1 30 70 5Output:Y 23",
  "sample_output": "Input:2 2\r\n1 1\r\n1 55\r\n20 10Output:N",
  "link": "https://www.spoj.com/problems/TRIKA",
  "scraped_at": "2025-08-17 00:33:32",
  "test_cases": [
    {
      "input": "4 4\r\n1 1\r\n100 55 10 2\r\n20 10 90 1\r\n60 20 22 4\r\n1 30 70 5",
      "expected_output": "Y 23",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2 2\r\n1 1\r\n1 55\r\n20 10",
      "expected_output": "N",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "2 9\n3 2\n1 1 7 1\n9 1 5 8\n2 2 6 4\n6 5 6 6",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "6 6\n9 1\n3 7 3 10\n4 10 6 6\n6 3 8 4\n6 5 3 8",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "8 6\n10 10\n8 1 9 7\n5 10 1 6\n9 9 9 4\n1 8 4 1",
      "expected_output": "To be computed",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "34 36\n36 69\n62 83 87 24\n77 32 89 11\n53 100 38 17\n68 22 34 61",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "71 20\n21 61\n71 40 11 75\n40 88 92 12\n48 55 41 49\n17 44 30 85",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "37 6\n53 84\n20 23 83 74\n1 17 77 66\n4 81 33 73\n11 89 89 1",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "11 81\n6 29\n76 89 30 35\n57 99 41 47\n85 74 2 30\n22 47 85 82",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "35 33\n92 73\n96 17 48 27\n35 52 88 39\n58 26 60 97\n25 89 3 82",
      "expected_output": "To be computed",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "341 131\n112 129\n375 100 75 365\n129 354 195 327\n150 125 282 58\n355 164 185 114",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "425 380\n88 99\n461 107 158 69\n437 146 455 204\n403 242 131 497\n55 343 52 217",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "129 192\n356 373\n129 184 144 314\n155 224 275 161\n71 374 65 419\n340 84 206 318",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "458 242\n304 72\n166 285 225 89\n264 401 447 413\n471 431 340 282\n160 478 216 330",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "100 170\n285 396\n141 191 55 172\n475 110 474 493\n109 321 480 408\n481 238 224 314",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "197 484\n395 240\n121 113 416 158\n489 440 468 59\n496 171 377 393\n173 413 218 157",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "86 55\n103 478\n435 88 298 457\n331 125 110 204\n426 450 247 116\n274 383 236 195",
      "expected_output": "To be computed",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "2 1000\n1 2\n1000 1000 1000 1000\n1 1000 999 2\n2 2 1000 1\n1000 999 1000 1000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:48",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Ant",
  "tags": [],
  "text": "EnglishTiếng ViệtA Byteotian ant is walking along the edges of ABCDEFGH cube:It tries to find out, in how many ways it can go from one given vertex, to another given vertex, walking along exactlykedges (when the ant enters an edge, it will not turn back and will finally reach the second end of this edge). If the ant goes through some edgextimes, we count this edgextimes. The ant would like to have interesting routes, that is if the ant is in some vertex, it would like to leave this vertex using an edge other than the edge recently used to enter this vertex (i.e. it want not to use the same edge twice in a row).Our ant is not so smart, because it can only count using integers from0top-1, for somep, so you should compute the result modulop.RequestWrite a program which:* reads the starting and the ending vertex of the ant's route, number of edges on the ant's route, and integerp,* computes number of interesting routes, which satisfy the ant's requests, modulop,* writes the answer to the standard output.InputThe first line of the standard input contains two capital English lettersv1andv2, separated by a single space. The two letters denote the starting and ending vertex of the ant's route respectively. The second line contains two integerskandp, separated by a single space.OutputExactly one integer is to be written on the standard output. This integer is the number of interesting routes from the vertexv1to the vertexv2, containing exactlykedges, modulop.ExampleInput:A B\r\n3 100Output:2Limitations* A ≤ v1, v2≤ H, v1≠ v2.* 1 ≤ k ≤ 2 x 109, 2 ≤ p ≤ 109.",
  "sample_input": "Input:A B\r\n3 100Output:2",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/PA06ANT",
  "scraped_at": "2025-08-17 00:33:51",
  "test_cases": [
    {
      "input": "A B\r\n3 100",
      "expected_output": "2",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "hofld q\n9 1",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "u qfi\n8 3",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "zmlez ele\n9 8",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "stoa usv\n100 41",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "sqzcf fkft\n53 73",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "zyisv fkwxp\n69 66",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "bkxlw niw\n65 40",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "e khxnc\n1 59",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "xyqcz wr\n140 109",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "s ernvv\n221 294",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "zui a\n359 476",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "paiu u\n131 356",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "n gt\n474 375",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "xncl vhckz\n460 452",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "mga nw\n71 425",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "ixruz ulif\n1000 1000",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "bq x\n1000 1000",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "xi ogx\n999 2",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "bmg cwpz\n2 2",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:50",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:08"
}
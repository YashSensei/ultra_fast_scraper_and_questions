{
  "problem_code": "problems",
  "title": "Graph Cut",
  "tags": [],
  "text": "Given a graph G, and a subset of its vertices X. The associated cut of X is the set of edges associated to X is the subset of all edges in G such that exactly one of the two vertices it joins belongs to X. In thinks, you will be given a graph and a subset of its edges, and you will have to determine whether there exists a subset of the vertices of the graph for which the given subset of the edges is its associated cut.InputThe first line contains an integer T, the number of test cases (1 ≤ T ≤ 40). Each test case, consists of a line which contains three integers N (2 ≤ N ≤ 500), E (1 ≤ E ≤ 104), K (1 ≤ K ≤ E), the number of vertices in the graph, and the number of edges in the subset for which we want to know whether it is an associated cut or not. Then, E lines follow, each of them contains two integers u, v (1 ≤ u, v ≤ N) which are the vertices joined by the edge, the first K of these E lines represent the asked subset.OutputOutput T lines, one for each test case. If the asked subset is an associated cut, then print “YES”, otherwise print “NO”.ExampleInput:23 3 11 22 31 312 17 63 45 610 111 56 104 81 22 36 77 89 1011 125 92 63 77 118 12Output:NOYES",
  "sample_input": "Input:23 3 11 22 31 312 17 63 45 610 111 56 104 81 22 36 77 89 1011 125 92 63 77 118 12Output:NOYES",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/GRAPHCUT",
  "scraped_at": "2025-08-17 00:33:08",
  "test_cases": [
    {
      "input": "23 3 11 22 31 312 17 63 45 610 111 56 104 81 22 36 77 89 1011 125 92 63 77 118 12",
      "expected_output": "NOYES",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4 8 7 10 4 5 3 10 4 5 2 8 1 4 2 6 5 10 9 6 4 1 7 4 1",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "9 6 6 2 1 6 9 7 8 6 1 5 4 6 3 2 7 7 7 6 6 7 10 2 4",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "9 9 6 7 1 8 6 9 3 2 1 4 10 4 2 3 1 9 2 5 5 4 2 8 9",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "100 8 38 20 6 9 42 73 91 100 48 40 92 99 88 51 96 99 40 37 37 100 21 61 94",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "92 13 76 70 99 90 89 63 78 30 11 65 76 30 49 48 63 30 4 39 55 68 63 96 77",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "58 95 90 32 40 63 7 84 14 53 65 53 38 22 90 33 25 65 79 9 54 42 59 37 18",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "24 12 71 70 53 2 9 21 66 30 44 88 1 66 28 90 77 24 8 14 54 37 53 11 11",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "31 55 6 24 6 36 22 24 16 51 84 85 56 85 87 53 4 42 26 54 41 1 32 18 14",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "67 59 101 138 65 88 168 202 45 173 221 55 101 128 178 190 182 250 161 128 196 227 83 200 188",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "74 88 231 235 202 121 188 185 106 54 63 144 144 41 74 245 77 103 91 246 125 153 141 120 223",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "241 161 213 88 204 48 187 58 166 106 205 230 186 214 39 164 204 162 191 74 138 127 185 169 165",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "41 163 30 79 132 190 161 72 132 152 27 36 156 127 239 52 48 209 166 126 45 223 130 224 103",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "242 63 202 105 157 126 205 50 120 198 205 47 125 36 95 74 218 236 68 229 126 216 131 77 79",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "169 87 243 41 63 78 137 209 220 208 77 155 62 220 95 152 170 193 60 75 237 74 238 132 166",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "219 131 145 181 232 141 41 238 119 64 39 25 179 246 181 141 210 240 216 153 190 94 72 174 136",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 1 500 2 1 2 1 500 500 1 2 500 499 1 2 500 499 1 499 500 1 499 2 2 499",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 2 499 499 1 500 2 2 500 1 2 1 2 499 499 500 2 1 1 1 499 499 499 2 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:47",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Ada and Apple",
  "tags": [],
  "text": "Ada the Ladybug is currently on a trip on appletree. There are many apples on the tree connected with branches. Each apple is inhabited by either Psylloideas or by Woolly Apple Aphids. Psylloideas and Aphids doesn't like each other, so it is strictly prohibited to walk from apple of Psylloideas to apple of aphids (and vice versa). Ada has some questions, whether it is possible to go from nodeIto nodeJ.Anyway note, that as Aphids and Psyllodeas doesn't like each other, they sometime conquer an apple of the others. Also note, that it is a real apple tree (not some bush) so no apple is connected with more than 50 other apples.InputThe first line contains1 ≤ N, Q ≤ 3*105, number apples on tree and number for queries.The next line containsNcharacters (either 0 or 1), indicating whetherithapple belongs to Psyllodeas or to Aphids.NextN-1lines contains two numbers, the branches (edges) of apple tree (0 ≤ I, J < N,I ≠ J).Each of followingQlines contains one of following types of queries:0 I,0 ≤ I < N, meaning that ownership ofIthapple has changed.1 I J,0 ≤ I, J < N, question, whether it is possible to go fromIthtoJthapple.OutputFor each query of second kind (1) print \"YES\", if it is possible or \"NO\" if it is impossible!Example Input8 11\r\n00111100\r\n0 1\r\n1 7\r\n1 2\r\n2 3\r\n2 6\r\n2 4\r\n4 5\r\n1 1 2\r\n1 0 7\r\n1 6 5\r\n1 2 3\r\n1 6 7\r\n0 2\r\n1 1 2\r\n1 0 7\r\n1 6 5\r\n1 2 3\r\n1 6 7Example OutputNO\r\nYES\r\nNO\r\nYES\r\nNO\r\nYES\r\nYES\r\nNO\r\nNO\r\nYES",
  "sample_input": "8 11\r\n00111100\r\n0 1\r\n1 7\r\n1 2\r\n2 3\r\n2 6\r\n2 4\r\n4 5\r\n1 1 2\r\n1 0 7\r\n1 6 5\r\n1 2 3\r\n1 6 7\r\n0 2\r\n1 1 2\r\n1 0 7\r\n1 6 5\r\n1 2 3\r\n1 6 7",
  "sample_output": "NO\r\nYES\r\nNO\r\nYES\r\nNO\r\nYES\r\nYES\r\nNO\r\nNO\r\nYES",
  "link": "https://www.spoj.com/problems/ADAAPPLE",
  "scraped_at": "2025-08-17 00:33:07",
  "test_cases": [
    {
      "input": "8 11\r\n00111100\r\n0 1\r\n1 7\r\n1 2\r\n2 3\r\n2 6\r\n2 4\r\n4 5\r\n1 1 2\r\n1 0 7\r\n1 6 5\r\n1 2 3\r\n1 6 7\r\n0 2\r\n1 1 2\r\n1 0 7\r\n1 6 5\r\n1 2 3\r\n1 6 7",
      "expected_output": "NO\r\nYES\r\nNO\r\nYES\r\nNO\r\nYES\r\nYES\r\nNO\r\nNO\r\nYES",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5 1\n4\n10 6\n6 3\n2 10\n8 4\n9 10\n7 2\n10 8\n2 10 10\n9 10 3\n7 10 7\n4 2 8\n8 1 4\n5 8\n3 9 8\n1 5 1\n5 3 6\n6 2 1\n2 2 3",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "4 1\n7\n4 3\n1 4\n8 6\n5 2\n7 9\n2 1\n5 1\n8 4 3\n6 4 6\n8 5 2\n8 10 4\n6 7 8\n7 7\n3 2 4\n1 9 5\n7 7 5\n7 4 3\n3 4 10",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "4 10\n10\n9 10\n10 8\n4 9\n6 9\n3 4\n8 10\n1 7\n6 1 9\n7 4 10\n5 3 10\n1 9 1\n4 4 7\n9 1\n3 1 4\n3 10 5\n2 4 7\n2 3 2\n7 7 10",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "94 100\n28\n47 98\n58 48\n86 65\n90 21\n36 48\n39 23\n77 4\n98 48 45\n54 89 69\n93 33 27\n87 65 64\n71 37 95\n64 25\n60 28 40\n42 80 75\n94 88 39\n77 98 53\n74 73 51",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "27 8\n91\n20 80\n27 20\n37 76\n51 26\n9 34\n44 26\n1 88\n22 89 33\n31 21 90\n89 11 7\n81 79 11\n82 95 69\n28 83\n45 84 70\n13 91 72\n83 65 58\n24 41 84\n42 28 94",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "5 86\n1\n70 53\n11 44\n81 80\n67 85\n73 84\n65 24\n85 1\n57 82 3\n50 68 39\n35 72 45\n5 55 79\n22 96 83\n54 45\n19 41 33\n30 97 65\n55 37 69\n17 64 43\n67 58 70",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "6 66\n59\n97 8\n1 42\n2 98\n3 11\n33 37\n9 58\n98 34\n39 66 11\n73 82 41\n16 98 7\n65 17 82\n50 29 45\n82 32\n88 50 59\n90 50 97\n41 61 37\n15 64 1\n89 46 90",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "21 71\n83\n16 38\n60 70\n30 31\n82 51\n10 3\n100 74\n82 10\n56 100 90\n69 64 71\n77 90 99\n73 64 12\n100 31 18\n45 97\n99 93 12\n20 91 83\n35 13 87\n11 52 75\n33 49 6",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "162 471\n166\n191 360\n412 345\n146 264\n100 152\n244 367\n191 194\n94 371\n296 225 160\n245 136 293\n56 443 446\n483 118 133\n231 139 192\n61 386\n404 149 448\n419 113 170\n79 406 405\n103 426 327\n184 283 209",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "370 257\n463\n410 344\n414 418\n100 154\n294 316\n237 330\n451 235\n262 404\n145 76 246\n326 195 118\n250 267 218\n242 232 166\n163 300 146\n326 300\n158 395 379\n243 419 68\n158 261 375\n485 422 482\n201 319 313",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "224 300\n337\n306 457\n278 374\n459 158\n343 241\n63 241\n342 193\n274 252\n272 390 310\n247 349 125\n391 210 60\n189 230 63\n95 128 147\n280 458\n278 397 295\n500 237 194\n75 255 431\n235 445 118\n159 322 448",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "441 364\n306\n272 75\n477 292\n447 357\n148 489\n472 140\n493 486\n282 265\n78 450 451\n312 278 179\n58 332 81\n125 428 367\n353 326 243\n206 90\n238 397 214\n97 477 456\n57 235 88\n376 492 476\n329 253 116",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "63 257\n366\n138 95\n237 121\n90 303\n433 96\n468 260\n459 489\n201 453\n177 446 408\n320 476 255\n313 460 491\n365 112 401\n112 490 165\n112 60\n342 59 426\n150 102 460\n440 123 147\n115 55 487\n72 355 57",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "105 226\n350\n344 168\n480 331\n479 313\n454 341\n245 484\n311 488\n203 276\n154 156 307\n462 117 60\n197 139 343\n496 207 132\n108 85 321\n365 322\n346 477 86\n222 373 163\n194 411 261\n92 496 291\n115 285 121",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "107 76\n296\n455 496\n232 132\n346 497\n326 301\n328 113\n164 216\n120 120\n132 325 230\n304 154 52\n121 274 231\n185 266 131\n294 349 469\n302 265\n345 99 183\n154 191 324\n415 217 235\n172 394 116\n189 301 471",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 1000\n1000\n1 999\n2 1000\n1000 999\n1 2\n2 999\n1000 2\n2 1\n1 1000 999\n1000 2 1000\n1000 1 1000\n1 1000 1\n1000 999 999\n999 1000\n1000 999 1\n1 1 1000\n1 2 2\n2 999 999\n2 999 999",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 1\n1000\n1 1\n1 999\n2 2\n2 1\n2 1000\n1000 2\n1000 1000\n2 1000 1000\n2 1 1\n1000 1 1000\n2 2 1000\n999 1 999\n2 2\n2 999 999\n1000 1 1000\n999 999 1000\n2 999 2\n1000 999 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:48",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Project File Dependencies",
  "tags": [],
  "text": "Project managers, such as the UNIX utilitymake, are used to maintain large software projects made up from many components. Users write aproject filespecifying which components (calledtasks) depend on others and the project manager can automatically update the components in the correct order.ProblemWrite a program that reads a project file and outputs the order in which the tasks should be performed.InputFor simplicity we represent each task by an integer number from $1, 2, \\ldots, N$ (where $N$ is the total number of tasks). The first line of input specifies the number $N$ of tasks and the number $M$ of rules, such that $N \\le 100$, $M \\le 100$.The rest of the input consists of $M$rules, one in each line, specifying dependencies using the following syntax:$T_0$ $k$ $T_1$ $T_2$ $\\ldots$ $T_k$This rule means that task number $T_0$ depends on $k$ tasks $T_1, T_2, \\ldots, T_k$ (we say that task $T_0$ is thetargetand $T_1, \\ldots, T_k$ aredependents).Note that tasks numbers are separated by single spaces and that rules end with a newline. Rules can appear in any order, but each task can appear as target only once.Your program can assume that there are no circular dependencies in the rules, i.e. no task depends directly or indirectly on itself.OutputThe output should be a single line with the permutation of the tasks $1 \\ldots N$ to be performed, ordered by dependencies (i.e. no task should appear before others that it depends on).To avoid ambiguity in the output, tasks that do not depend on each other should be ordered by their number (lower numbers first).ExampleInput:5 4\r\n3 2 1 5\r\n2 2 5 3\r\n4 1 3\r\n5 1 1Output:1 5 3 2 4",
  "sample_input": "$T_0$ $k$ $T_1$ $T_2$ $\\ldots$ $T_k$",
  "sample_output": "Input:5 4\r\n3 2 1 5\r\n2 2 5 3\r\n4 1 3\r\n5 1 1Output:1 5 3 2 4",
  "link": "https://www.spoj.com/problems/PFDEP",
  "scraped_at": "2025-08-17 00:34:13",
  "test_cases": [
    {
      "input": "$T_0$ $k$ $T_1$ $T_2$ $\\ldots$ $T_k$",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5 4\r\n3 2 1 5\r\n2 2 5 3\r\n4 1 3\r\n5 1 1",
      "expected_output": "1 5 3 2 4",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "7 4 5\ntd rou gvvmm kn fxsn hs",
      "expected_output": "0\n0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "8 2 6\nvkcvr zhhnf y jxcou eky x",
      "expected_output": "0\n0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "10 10 6\nd vnzdq z wfjq hovuvw phrn",
      "expected_output": "0\n0",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "54 22 33\nbcamc p jjuam lesak gepk ci",
      "expected_output": "0\n0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "81 43 20\nxse r apgti igo rkzdsgwm oqidm",
      "expected_output": "0\n0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "53 20 61\np hapyz qk ikdn ar zd",
      "expected_output": "0\n0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "63 65 60\nt dwdy zlys es zgwn g",
      "expected_output": "0\n0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "60 39 24\nacd gupqq wq r q vuzz",
      "expected_output": "0\n0",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "161 296 373\ni w gc nyg d q",
      "expected_output": "0\n0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "138 127 348\noyw fsvfp xid t hzilu z",
      "expected_output": "0\n0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "415 231 322\nvu csswj fgrhi t mdgrodt pcw",
      "expected_output": "0\n0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "269 64 277\nqqbgd kfnen c evxsj oyc brgw",
      "expected_output": "0\n0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "243 204 318\nfxw gib rlq zod pasx oab",
      "expected_output": "0\n0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "121 446 440\nwj k joznh akw rkzicl f",
      "expected_output": "0\n0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "342 72 423\nhmuw vydpa t vj nrhrp fjq",
      "expected_output": "0\n0",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000\ni hoi ztofs ry wgn rxue",
      "expected_output": "0\n0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000\npgqms cyvxu ado zgm untjyago g",
      "expected_output": "0\n0",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "1000 999 1\nugg wzyho z urb a vdqut",
      "expected_output": "0\n0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:56",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:38:06"
}
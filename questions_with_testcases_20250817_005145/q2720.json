{
  "problem_code": "problems",
  "title": "Lucifer and Magical Substrings",
  "tags": [],
  "text": "Lucifer MorningStar is interested in deepest desires of Zing. Being a programmer Zing said he has a desire of knowing number of magical substrings in a string. A substring of string S is said to be magical if it contains at least one magical character (A character is magical if its value is prime, and we assign values to characters as:  A is assigned 1, B is assigned 2 ... Z is assigned 26). So you have to calculate total number of magical substrings for S in order to help Lucifer who is absolutely newbie in programming, so that he does not disappoint Zing.InputFirst line contains number of test cases. (1 ≤ T ≤ 10).For each case input will contain two lines:First line contains length of string N (1 ≤ N ≤ 105).Second line will contain a string S of length N. String will only contain uppercase letters.OutputFor each test case output a single integer denoting number of magical substrings of S in new line.ExampleInput:1\r\n3\r\nABCOutput:5",
  "sample_input": "Input:1\r\n3\r\nABCOutput:5",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/MAGSUB1",
  "scraped_at": "2025-08-17 00:34:12",
  "test_cases": [
    {
      "input": "1\r\n3\r\nABC",
      "expected_output": "5",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5\n3\n8\n5\n7\n4",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n4",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "4\n1\n6\n6\n9",
      "expected_output": "0\n0\n0\n0",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "11\n37455008\n17874259\n20350470\n29073788\n31109341\n59356025\n70479947\n79008840\n99841595\n15111819\n43042249",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "7\n95985435\n21821008\n62947452\n69363907\n94244648\n16911477\n43311036",
      "expected_output": "0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "12\n49742262\n78124922\n30281955\n17807376\n88084359\n84935911\n40903748\n26203889\n77054043\n59273962\n68725539\n10307193",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "19\n93108333\n87304983\n24192083\n36980853\n89518455\n89438100\n94367795\n3598683\n77255173\n11450969\n97582501\n64689638\n4359787\n48346821\n79574980\n21433442\n52365827\n83862340\n53344585",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "18\n61547501\n85608442\n42439418\n12357772\n63986471\n96182876\n42868758\n31833160\n18475958\n49018955\n1856011\n84835203\n25720908\n61243557\n301260\n67806414\n43669322\n5885479",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "24\n92765\n27735\n27517\n2547\n37453\n78141\n33650\n17807\n99450\n75117\n5983\n29189\n83225\n30580\n34107\n63987\n35471\n45163\n82289\n86907\n6251\n53244\n63560\n15448",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "56\n31133\n48600\n93939\n7295\n57435\n67639\n40312\n46571\n23308\n34466\n76245\n43273\n2122\n95187\n62652\n99144\n59063\n60418\n9976\n94051\n77899\n21021\n26623\n21016\n11425\n41233\n60506\n16696\n14619\n20029\n30775\n5676\n25945\n92513\n74140\n72242\n85394\n75597\n10491\n55507\n30347\n53989\n89815\n40735\n52317\n92488\n29980\n362\n69725\n61398\n22779\n5168\n86648\n41292\n91570\n27172",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "104\n17252\n74824\n63164\n60409\n67135\n89903\n4427\n92927\n26741\n71738\n30120\n27266\n23002\n36327\n50130\n97891\n1696\n57810\n98935\n14703\n57143\n34690\n99400\n97992\n86465\n53090\n35157\n38253\n98038\n67441\n8795\n2332\n82562\n22132\n84821\n53264\n83851\n29562\n99562\n82105\n72387\n26214\n37096\n30881\n88368\n66801\n69940\n65826\n44435\n96604\n41719\n34244\n48450\n30079\n15416\n89631\n89450\n33230\n80910\n53992\n98945\n46371\n17358\n56748\n60259\n37539\n80323\n22162\n9377\n45236\n10371\n55969\n49985\n11261\n15436\n33431\n73284\n76153\n4682\n21624\n84813\n99019\n40583\n13421\n62816\n49543\n15540\n93811\n43700\n90311\n51813\n95979\n53632\n59113\n8886\n34584\n46031\n2069\n96924\n43996\n46419\n13474\n95593\n83691",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "58\n72151\n36853\n11269\n38705\n32865\n28335\n39398\n80216\n40679\n74575\n13135\n95977\n29895\n14110\n43424\n44333\n4761\n35516\n65611\n79339\n27808\n83238\n44339\n95256\n43572\n97895\n53084\n95435\n16182\n29568\n80296\n94123\n79027\n28288\n69837\n83499\n87649\n78838\n7794\n96766\n7947\n40781\n66930\n84008\n95833\n52192\n29391\n91175\n23145\n23908\n8826\n4571\n58095\n96656\n37556\n90988\n74538\n72739",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "38\n84127\n79136\n8832\n6385\n72887\n28542\n49636\n49094\n69293\n37939\n86364\n1771\n23746\n44656\n86092\n99943\n48795\n77878\n61594\n79568\n24430\n76229\n94265\n25239\n83410\n98155\n90976\n53925\n62830\n18443\n36527\n85645\n21806\n10326\n83696\n46193\n11916\n94899",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "27\n60561\n88257\n46432\n7568\n36605\n36137\n35615\n75593\n46286\n84783\n9882\n51690\n10689\n32402\n20723\n68248\n15493\n88743\n90718\n50225\n27149\n58894\n54349\n15215\n68946\n62576\n2853",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "26\n84521\n56958\n6641\n29601\n27643\n68671\n44282\n67599\n71924\n18134\n48577\n85971\n14442\n10892\n578\n87348\n61070\n67685\n89791\n13518\n97076\n58509\n49969\n58767\n30261\n62895",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "105\n6454970\n1683202\n28839563\n92550923\n51605007\n60577009\n72795458\n43341702\n41856992\n51570207\n64039060\n70232504\n13448287\n7544090\n17463728\n11779642\n97756425\n52109349\n91188399\n83387523\n95224735\n33516575\n74538210\n65351759\n3811534\n77150548\n34053304\n39004982\n51698294\n48191076\n82393159\n30530690\n50794512\n74493011\n99399167\n53728637\n89347020\n98351616\n11954796\n62169959\n9937683\n42633862\n94783748\n37461222\n58164014\n91895374\n35214772\n28089252\n42845668\n58655539\n27943683\n69767550\n63875355\n87822087\n9883690\n15945583\n58043974\n42923329\n97653538\n86683007\n94830935\n29998547\n94593159\n1084908\n33166521\n49035770\n26760597\n10177531\n39025072\n85675525\n25258302\n41173092\n96445220\n86960163\n30269710\n17408240\n62252495\n88704187\n54628371\n4412468\n86738773\n71494343\n44349043\n6827453\n26562801\n2554755\n32473164\n61211338\n93693139\n37432164\n98411555\n55016529\n79850827\n505276\n17828286\n27986865\n97679130\n30447084\n84280460\n46217224\n78400915\n24705842\n69875529\n4859325\n90864460",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "max_case_17",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "105\n13083244\n8978991\n48556882\n72787491\n5274621\n99175063\n72418395\n40741484\n40794742\n61904654\n42759730\n48260616\n3065542\n11808402\n66083823\n54417049\n45613079\n26365804\n88127456\n64137935\n90758810\n48983906\n1614016\n700361\n51407831\n92143314\n65091374\n68113388\n10724642\n2394812\n3093236\n66539390\n760847\n2423621\n64476912\n12628461\n54523506\n39060944\n27778023\n27527369\n3729486\n18162881\n45465206\n49121429\n72909574\n81929780\n63200349\n2787837\n85259831\n64762574\n78572565\n61421447\n42515975\n62391436\n25336859\n2743059\n84211913\n87201229\n52884626\n43410427\n48528321\n98616835\n91156110\n51569868\n2808413\n79340176\n53151636\n83733614\n16204848\n88854050\n3047132\n44248347\n81705088\n70606156\n35324206\n30968836\n61429828\n9653858\n63761337\n61228769\n86262879\n86598271\n82923277\n66536728\n62684555\n79741071\n17108711\n85402530\n28209608\n10457962\n86949132\n15339020\n45242656\n81447373\n59566100\n65738867\n132725\n6736268\n91985106\n14046387\n67810596\n43322803\n25814748\n24797849\n48824784",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "max_case_18",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "1\n1",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Edge case array (N = 1)"
    },
    {
      "input": "2\n44945530\n74177322",
      "expected_output": "0\n0",
      "type": "edge_case_20",
      "description": "Edge case array (N = 2)"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:54",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:44"
}
{
  "problem_code": "problems",
  "title": "The Hack",
  "tags": [],
  "text": "Aiden Pearce is one of the most famous hackers of all time, just recently he acquired a new powerful teleport that can be used exactly K times before it self-destructs.So he decided to rob as many banks as he can from Linearland. Linearland consists of N cities on a 1-dimensional plane which Aiden can visit, after he’s teleported to some city of Linearland he can begin robbing banks, each city i has a bank that contains Gidollars.The teleportation device is also expensive to use; in order to teleport to some city i he has to pay Tidollars but teleportation isn’t his only means of transport he can also visit cities by helicopter which costs W dollars per meter. Aiden's initial position is outside Linearland, so, the first city he visits can only be reached by teleportation.Each city i is situated in position Xi(which means it’s Ximeters far from the beginning of Linearland). Aiden isn’t sure that robbing Linearland banks is profitable so he asked you to calculate the maximum amount of money he can earn.(Aiden can have a negative amount of money at any time).Please note that Aiden doesn't need to use all K teleports, and since he is very greedy he will never go to Linearland if his net profit is negative (i.e. if he can't get a positive profit he will settle with a good old 0).InputFirst T the number of test cases,For each test case:3 integers separated by space representing (1 ≤ N ≤ 103), (1 ≤ K ≤ N) and (W ≤ 109).Then N lines each line consists of 3 integers (0 ≤ Xi≤ 109), (1 ≤ Ti≤ 109), (1 ≤ Gi≤ 109).OutputOne line per test case, each with a single integer which is the maximum amount of money.Input:1\r\n4 1 1\r\n1 1000 100\r\n3 0 10\r\n4 20 3\r\n10 90 0Output:109",
  "sample_input": "Input:1\r\n4 1 1\r\n1 1000 100\r\n3 0 10\r\n4 20 3\r\n10 90 0Output:109",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/HACK14",
  "scraped_at": "2025-08-17 00:34:31",
  "test_cases": [
    {
      "input": "1\r\n4 1 1\r\n1 1000 100\r\n3 0 10\r\n4 20 3\r\n10 90 0",
      "expected_output": "109",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1\n4",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n3\n2\n3\n2\n8",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "3\n5\n7\n4",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "13\n10542896\n96999696\n22674097\n3181826\n71333864\n42621856\n48292003\n74557300\n64597219\n91014066\n44636399\n18345195\n91303901",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "12\n37567416\n64171442\n78247705\n94142434\n85736374\n10945929\n22407014\n21084474\n15857754\n61863132\n67492805\n34464017",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "10\n79300363\n83636423\n72882987\n6564808\n71224727\n35729955\n72071299\n35912781\n54570078\n18373922",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "13\n14032125\n12695194\n11070798\n95263961\n28489965\n96139903\n35115625\n18443603\n88085066\n93729251\n40261323\n45389512\n20660727",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "9\n76950088\n54051223\n51739652\n36036833\n96534231\n7736271\n13010397\n99586922\n94445293",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "71\n38076\n74459\n98278\n50181\n37473\n10735\n21219\n387\n92773\n64599\n16005\n95883\n80601\n76606\n59922\n80085\n4222\n42654\n82980\n55096\n54337\n21170\n40324\n4413\n89805\n80642\n39672\n96962\n72967\n53567\n26774\n3656\n8224\n49777\n83035\n13311\n81261\n48617\n98036\n49148\n79058\n40023\n10219\n33735\n25929\n34331\n79870\n73487\n44634\n42643\n554\n92337\n17887\n45654\n53693\n33443\n86540\n63928\n74450\n3724\n54238\n89227\n19279\n21162\n23462\n38496\n40739\n76894\n76390\n4092\n30778",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "83\n82453\n47654\n63645\n67351\n5888\n53332\n58424\n50920\n98835\n91438\n65559\n1770\n63269\n407\n27452\n34926\n8724\n88180\n47506\n75247\n37630\n89749\n11936\n5024\n64114\n5567\n83652\n56612\n98905\n66284\n63494\n23883\n93776\n50675\n87628\n53882\n56493\n15466\n17301\n7503\n99440\n92810\n73788\n37090\n26865\n4544\n65923\n44162\n39724\n58559\n52755\n83939\n86507\n58172\n8152\n87940\n90821\n77941\n33500\n37237\n88784\n57845\n19807\n77334\n82780\n45045\n89762\n66443\n44387\n74363\n1268\n86855\n44889\n4177\n72487\n1407\n59830\n4507\n66574\n57895\n70130\n35523\n81088",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "92\n21061\n41730\n58636\n24745\n83744\n44854\n79365\n74077\n12937\n17230\n37183\n65280\n94820\n90587\n21022\n24463\n72280\n78319\n4021\n35037\n94808\n44800\n14292\n60252\n64568\n88112\n36358\n7292\n24121\n24749\n11398\n69964\n27540\n97453\n71341\n96613\n4382\n18665\n43190\n80820\n25289\n56570\n10560\n68841\n93955\n47469\n11723\n37918\n4043\n98151\n10326\n95230\n81535\n33238\n79569\n57949\n86516\n4582\n58283\n88399\n41383\n71348\n70777\n17513\n22664\n24429\n741\n7585\n22680\n81431\n31782\n53018\n52626\n31561\n33952\n35158\n25952\n46353\n93288\n3820\n66674\n26315\n80288\n89501\n35020\n14530\n52969\n14243\n90406\n58090\n11445\n21744",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "39\n37547\n42379\n4453\n28020\n87637\n17757\n78236\n80773\n41110\n48395\n6368\n76348\n25492\n35852\n3078\n69215\n21293\n1303\n35169\n11256\n21371\n23694\n94829\n15680\n76765\n45225\n83719\n68061\n91309\n49255\n8583\n88495\n59384\n99973\n43145\n23604\n70093\n13714\n28239",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "49\n47808\n7069\n24957\n59425\n40726\n29065\n80686\n91575\n27077\n8250\n35595\n1068\n7528\n96947\n29980\n92438\n27487\n86558\n17454\n58258\n14532\n90398\n72049\n7407\n38325\n26050\n98055\n24078\n53738\n19270\n49035\n81831\n94440\n3521\n55026\n65245\n8945\n21635\n90086\n64947\n73924\n82579\n65875\n40580\n43912\n61358\n84691\n33800\n44323",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "52\n720\n45124\n26685\n10039\n66939\n15546\n30520\n5242\n51565\n4055\n65825\n55252\n80251\n78910\n13098\n73041\n74599\n39469\n78306\n64157\n19283\n23040\n84005\n31968\n9983\n93149\n4811\n43759\n66414\n66131\n88856\n56939\n88994\n79906\n49385\n32407\n76308\n75693\n64764\n47015\n9459\n82532\n17926\n3464\n68147\n81773\n65153\n54923\n11326\n32803\n88736\n43139",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "70\n1204\n66226\n75353\n89892\n36957\n25114\n70344\n78839\n26318\n35656\n76561\n67194\n4177\n9949\n59734\n87074\n59954\n95558\n10801\n24056\n77347\n90272\n33157\n46499\n77393\n8662\n3291\n57633\n82166\n44010\n90913\n39802\n99013\n79443\n89499\n51331\n95564\n4122\n38179\n53648\n58162\n94211\n40734\n46038\n46833\n51664\n27340\n26981\n17539\n78769\n93419\n62094\n15019\n20312\n99945\n78964\n65735\n58402\n33803\n13215\n84417\n34727\n14274\n36120\n15519\n13700\n82940\n29872\n24460\n87455",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "103\n83418439\n82490046\n78058437\n30700189\n93959610\n91886935\n35211793\n12162926\n32385614\n4541067\n4483667\n69541551\n24851457\n89336941\n57999190\n14353738\n90672334\n62798792\n28310800\n17822098\n41622483\n8850037\n16671754\n91819532\n76559657\n82553848\n88057769\n57635846\n50784211\n69611473\n73691452\n92792120\n50585173\n86452315\n68321613\n26721931\n64946020\n85387070\n47870387\n68394779\n15163738\n94402191\n13197510\n77924846\n70378661\n38995485\n67485210\n85089683\n70816105\n53212581\n49663916\n90594084\n42894117\n65267628\n92331233\n95664491\n16481974\n21000282\n97701881\n48568424\n17399019\n12797448\n92004540\n4991620\n60574011\n60819215\n93644367\n16614049\n15770114\n60033736\n99350384\n45639541\n50982277\n75925507\n39382000\n96180267\n82338500\n95255121\n67120819\n98192318\n6268104\n66870099\n19938929\n39184460\n54826027\n42123997\n89601711\n29381464\n86882669\n52668786\n71994323\n23823576\n39817016\n27198319\n65208111\n86261738\n13295860\n77325309\n48361467\n21368666\n33928530\n97703583\n58484019",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 103)"
    },
    {
      "input": "103\n77863543\n62350828\n67189712\n94245095\n12661004\n30827425\n21226891\n84713809\n23533309\n55569757\n54361708\n39311368\n58561587\n94738124\n72995575\n23430517\n77159066\n84775131\n51216560\n19445992\n22441015\n95594157\n1870847\n56545927\n92526233\n11494951\n61000303\n56201426\n11414435\n45921426\n46860465\n87694049\n85222507\n82036080\n77029929\n74908363\n24640356\n73878652\n63562418\n43340837\n6213223\n67288720\n39757406\n29965127\n44253574\n51275443\n47676934\n11239634\n70230459\n96393338\n98509874\n74484592\n16912089\n11687460\n40938866\n27081657\n31808855\n56837852\n2122763\n43223115\n14039586\n56340905\n26507518\n57021026\n92312441\n73656260\n6668123\n17097481\n80029913\n39981857\n5065194\n65086750\n15046294\n91426226\n84155176\n15705991\n80474154\n26169274\n44668469\n31256693\n22628124\n42226432\n68733369\n11514685\n67537263\n8054471\n88126507\n45171854\n64750077\n18385995\n56390708\n80635794\n68222665\n17400083\n47917209\n31464533\n33531346\n80087885\n83700295\n30686989\n15186714\n68951707\n25714929",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 103)"
    },
    {
      "input": "103\n14990508\n33738494\n53023556\n100000000\n59087315\n100000000\n100000000\n33149880\n97387749\n100000000\n1\n1\n1\n100000000\n69561295\n48830980\n22059037\n93327931\n86316859\n25027256\n51210963\n100000000\n1\n1\n100000000\n11782222\n100000000\n64135397\n1\n100000000\n1\n58232542\n1\n100000000\n87108432\n94403837\n100000000\n1\n1\n1\n1\n100000000\n100000000\n1\n1\n100000000\n100000000\n88503467\n1\n1\n39533369\n21244656\n19614774\n1\n56622647\n1\n100000000\n100000000\n52673588\n100000000\n82940150\n1\n1\n1\n1\n1\n100000000\n1\n1\n88226769\n100000000\n1\n100000000\n1\n3060189\n6653830\n74649517\n30936754\n100000000\n100000000\n1\n63050807\n1\n68764197\n100000000\n100000000\n100000000\n1\n1\n1\n40371628\n1\n1\n1\n97455138\n12156150\n21864725\n60735696\n45034621\n45877224\n611142\n82771527\n39210323",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 103)"
    },
    {
      "input": "2\n96576868\n5755821",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 2)"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:57",
  "total_test_cases": 20
}
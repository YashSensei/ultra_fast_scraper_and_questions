{
  "problem_code": "problems",
  "title": "Counting Digits",
  "tags": [],
  "text": "EnglishVietnameseGiven two integers a and b, we write the numbers between a and b, inclusive, in a list. Your task is to calculate the number of occurrences of each digit.For example, if a = 1024 and b = 1032, the list will be 1024 1025 1026 1027 1028 1029 1030 1031 1032 there are ten 0s in the list, ten 1s, seven 2s, three 3s, and etc.InputThe input consists of up to 500 lines. Each line contains two numbers a and b where 0 < a, b < 100000000. The input is terminated by a line 0 0.Sample Input1 10\n44 497\n346 542\n1199 1748\n1496 1403\n1004 503\n1714 190\n1317 854\n1976 494\n1001 1960\n0 0OutputFor each pair of input, output a line containing ten numbers separated by single spaces. The first number is the number of occurrences of the digit 0, the second is the number of occurrences of the digit 1, etcSample output1 2 1 1 1 1 1 1 1 1\n85 185 185 185 190 96 96 96 95 93\n40 40 40 93 136 82 40 40 40 40\n115 666 215 215 214 205 205 154 105 106\n16 113 19 20 114 20 20 19 19 16\n107 105 100 101 101 197 200 200 200 200\n413 1133 503 503 503 502 502 417 402 412\n196 512 186 104 87 93 97 97 142 196\n398 1375 398 398 405 499 499 495 488 471\n294 1256 296 296 296 296 287 286 286 247Note : wrong dataset index, rejudged and TLE some ACed code.",
  "sample_input": "1 10\n44 497\n346 542\n1199 1748\n1496 1403\n1004 503\n1714 190\n1317 854\n1976 494\n1001 1960\n0 0",
  "sample_output": "1 2 1 1 1 1 1 1 1 1\n85 185 185 185 190 96 96 96 95 93\n40 40 40 93 136 82 40 40 40 40\n115 666 215 215 214 205 205 154 105 106\n16 113 19 20 114 20 20 19 19 16\n107 105 100 101 101 197 200 200 200 200\n413 1133 503 503 503 502 502 417 402 412\n196 512 186 104 87 93 97 97 142 196\n398 1375 398 398 405 499 499 495 488 471\n294 1256 296 296 296 296 287 286 286 247",
  "link": "https://www.spoj.com/problems/MDIGITS",
  "scraped_at": "2025-08-17 00:33:31",
  "test_cases": [
    {
      "input": "1 10\n44 497\n346 542\n1199 1748\n1496 1403\n1004 503\n1714 190\n1317 854\n1976 494\n1001 1960\n0 0",
      "expected_output": "1 2 1 1 1 1 1 1 1 1\n85 185 185 185 190 96 96 96 95 93\n40 40 40 93 136 82 40 40 40 40\n115 666 215 215 214 205 205 154 105 106\n16 113 19 20 114 20 20 19 19 16\n107 105 100 101 101 197 200 200 200 200\n413 1133 503 503 503 502 502 417 402 412\n196 512 186 104 87 93 97 97 142 196\n398 1375 398 398 405 499 499 495 488 471\n294 1256 296 296 296 296 287 286 286 247",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2 8\n2 4\n8 6\n6 7\n5 2\n8 9\n8 3\n4 4\n8 10\n4 9\n1 5",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "7 9\n8 2\n4 9\n6 5\n10 7\n2 5\n2 7\n4 4\n9 3\n2 10\n6 1",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "1 10\n3 2\n1 9\n8 1\n9 2\n6 7\n9 8\n1 7\n6 9\n9 8\n3 1",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "51 15\n1 37\n69 96\n48 74\n42 57\n67 35\n55 66\n93 27\n58 38\n77 46\n84 87",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "82 9\n73 82\n13 37\n7 52\n26 96\n81 75\n21 32\n19 62\n65 19\n60 41\n90 72",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "94 97\n89 60\n37 43\n61 96\n68 12\n34 37\n57 94\n28 61\n16 2\n91 90\n8 39",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "85 93\n22 73\n60 6\n35 2\n61 70\n35 48\n78 60\n69 29\n18 100\n87 5\n69 63",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "98 4\n79 95\n58 34\n53 81\n12 33\n33 76\n40 46\n20 83\n88 15\n8 29\n86 38",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "58 223\n361 389\n360 467\n234 367\n263 243\n404 311\n326 112\n275 343\n268 288\n69 162\n468 293",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "70 226\n178 480\n435 80\n361 368\n290 242\n344 357\n223 357\n410 225\n148 412\n384 414\n352 196",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "92 142\n113 483\n260 282\n158 435\n212 114\n395 261\n384 257\n472 167\n244 147\n97 212\n77 234",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "457 456\n333 119\n455 500\n56 492\n290 405\n280 129\n362 398\n417 348\n251 477\n70 228\n479 204",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "268 94\n382 341\n95 256\n467 271\n176 326\n236 483\n367 205\n459 273\n238 158\n275 476\n373 62",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "438 363\n77 184\n238 224\n310 191\n249 279\n373 118\n184 224\n199 360\n359 126\n402 213\n308 487",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "87 457\n369 182\n101 349\n98 287\n486 406\n205 389\n460 104\n332 151\n89 113\n167 188\n101 381",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 999\n1 2\n999 1000\n2 999\n1 1000\n999 999\n999 999\n1 2\n1000 999\n2 2\n1 1",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 999\n1000 1\n1 999\n999 1\n2 1\n2 2\n1 2\n1 2\n1000 999\n999 999\n2 2",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:49",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:02"
}
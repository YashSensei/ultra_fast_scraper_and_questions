{
  "problem_code": "problems",
  "title": "Playing with Geometry",
  "tags": [],
  "text": "Dynamic geometry software can help students understand transformation geometry as it allows to visualize the effect of transformations on a shape. Alice is learning the elementary transformations - slides, flips and turns - or, more formally, translations, reflections and rotations. Today she is exploring slides and turns.  She is working with simple rectilinear polygons drawn  on a regular square grid. Each polygon has at most one edge per grid line and its vertices are grid points.She knowns that: a rectilinear polygon is a polygon whose edges meet at right angles; in a simple polygon the edges meet only at their endpoints;    the vertices are the points where edges meet; the region delimited by a rectilinear polygon embedded on a grid corresponds to a polyomino (formed by unit squares); a permutomino is a polyomino that has exactly one edge on all the grid lines that intersect its minimum bounding rectangle; that rectangle is actually a square (for ann-vertex permutomino, it intersectsn/2horizontal and  vertical grid lines). Her teacher has explained how slides and turns  act on point coordinates but, by that time, Alice was already thinking about an episode of \"The Sympsons\" in which Homer claimed that there was no more room in  his brain for more information.Now, she has to decide whether two simple rectlinear polygons, without collinear edges, can be transformed to the same permutomino by slides and turns, under some restricted rules.  The two polygons are handled as independent instances, as if they were in different grids. First, she must remove the empty grid lines  from the minimum bounding rectangle to obtain a permutomino. This is done by  sliding some edges to the left or downwards, in such a way that the relative order of the edges is preserved (i.e., they will occur in the same order as before if we sweep the plane using a vertical or a horizontal line). Once she gets the permutomino, she can apply a rotation by 90 degrees clockwise around the center of its minimum bounding square, the number of times  she wishes.TaskCan we give the answer to  Alice's problem, for a pair of such polygons?InputThe first line contains the description of the first rectilinear polygon:  the number of vertices followed by their coordinates in a canonical cartesian system. The sequence of vertices is given in counterclockwise order (CCW) and starts at the leftmost vertex on the bottom horizontal edge. The last vertical edge is defined by the last vertex and the first one in the sequence. The bottom-left corner of the minimum bounding rectangle is always(0, 0). The next line contains a similar description for the other rectilinear polygon. The number of vertices of the two polygons may be different. (The image illustrates Sample 1.)ConstraintsFor each polygon: the number of vertices is even and between 4 and 500; the coordinatesx, yof each vertex satisfy 0 ≤ x, y ≤ 3 000.OutputA line containing the answeryesorno.Input 1:16 3 0 8 0 8 1 12 1 12 3 10 3 10 5 9 5 9 12 6 12 6 8 5 8 5 10 0 10 0 6 3 6\r\n16 1 0 2 0 2 1 3 1 3 2 12 2 12 4 7 4 7 6 9 6 9 9 6 9 6 8 0 8 0 3 1 3Output 1:yesInput 2:10 3 0 4 0 4 2 1 2 1 3 2 3 2 4 0 4 0 1 3 1\r\n10 0 0 4 0 4 3 5 3 5 6 3 6 3 2 1 2 1 4 0 4Output 2:noAuthor: Ana Paula Tomás",
  "sample_input": "Input 1:16 3 0 8 0 8 1 12 1 12 3 10 3 10 5 9 5 9 12 6 12 6 8 5 8 5 10 0 10 0 6 3 6\r\n16 1 0 2 0 2 1 3 1 3 2 12 2 12 4 7 4 7 6 9 6 9 9 6 9 6 8 0 8 0 3 1 3Output 1:yes",
  "sample_output": "Input 2:10 3 0 4 0 4 2 1 2 1 3 2 3 2 4 0 4 0 1 3 1\r\n10 0 0 4 0 4 3 5 3 5 6 3 6 3 2 1 2 1 4 0 4Output 2:no",
  "link": "https://www.spoj.com/problems/SWERC14G",
  "scraped_at": "2025-08-17 00:34:27",
  "test_cases": [
    {
      "input": "Input 1:16 3 0 8 0 8 1 12 1 12 3 10 3 10 5 9 5 9 12 6 12 6 8 5 8 5 10 0 10 0 6 3 6\r\n16 1 0 2 0 2 1 3 1 3 2 12 2 12 4 7 4 7 6 9 6 9 9 6 9 6 8 0 8 0 3 1 3Output 1:yes",
      "expected_output": "Input 2:10 3 0 4 0 4 2 1 2 1 3 2 3 2 4 0 4 0 1 3 1\r\n10 0 0 4 0 4 3 5 3 5 6 3 6 3 2 1 2 1 4 0 4Output 2:no",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1 5 10 2 8 4 8 4 5 4 6 7 6 8 7 6 3 6 3 4 1 2 5 2 2 9 8 6 10 10 3 3 1 4\nt hyhjl 8 4 4 3 3 5 7 1 3 7 3 9 1 7 4 5 6 4 3 1 3 9 4 7 2 4 4 10 5 7 6 1\n4 9 8 5 8 4 2 8 8 9 3 6 3 10 6 3 10 1 8 2 4 6 2 4 1 10 8 3 6 1 10 7 1 6\n4 1 4 9 1 5 3 8 8 1 4 6 5 1 3 7 4 7 1 5 3 9 10 10 9 8 6 9 5 1 4 10 avqs fxc",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "4 7 2 1 1 10 9 7 2 2 5 1 2 4 2 7 5 5 5 5 10 6 10 8 5 6 5 6 10 5 5 7 3 1\nheben ky 3 8 1 5 1 3 4 10 1 2 8 8 10 7 5 3 2 10 6 3 8 7 1 10 6 4 8 5 5 4 7 1\n9 1 8 4 2 9 7 9 5 5 10 1 9 3 10 3 8 5 4 3 4 2 7 4 3 5 3 10 9 10 7 1 2 4\n3 6 7 2 2 4 6 8 2 3 8 1 6 5 9 10 9 1 1 4 10 7 9 9 9 6 4 3 5 3 2 8 wahqov wis",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "2 8 7 6 3 5 5 3 6 10 1 1 10 1 7 4 5 7 8 9 6 5 10 4 2 9 8 10 4 8 9 3 8 9\nwdz ah 3 5 5 2 4 10 5 4 7 8 5 9 8 1 1 7 9 7 3 5 2 2 1 6 4 7 4 5 7 4 9 2\n5 4 4 9 3 4 5 2 10 10 8 9 7 5 9 3 4 3 9 4 6 5 5 3 10 2 3 2 5 2 9 8 5 5\n10 4 8 2 2 4 5 1 6 5 5 4 1 5 5 2 10 5 10 7 6 6 8 6 8 10 5 6 4 10 7 4 bqevb cwt",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "49 51 94 20 21 51 71 76 17 76 57 26 93 6 56 43 49 68 8 73 55 25 85 63 1 8 45 63 80 41 1 47 43 33\nsp pvvs 14 27 84 96 98 99 48 95 67 98 82 17 99 35 36 91 43 14 37 22 61 18 56 91 40 18 100 62 96 35 80 49\n32 72 40 60 54 5 30 17 56 94 27 12 75 8 1 81 50 58 93 73 72 19 78 9 32 71 35 27 78 80 57 92 34 59\n86 57 26 70 77 21 15 39 67 34 75 44 27 90 85 7 27 78 65 14 54 75 29 14 1 33 96 47 74 56 86 67 v mdc",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "23 19 23 68 97 21 86 65 12 2 2 52 63 6 74 75 97 94 70 66 25 73 9 84 48 19 14 71 16 78 19 64 53 93\niq iyr 83 84 26 71 86 92 45 44 59 19 87 33 21 56 69 75 94 79 68 29 57 70 42 11 21 94 48 100 5 21 23 82\n65 83 91 13 16 12 70 96 41 37 57 38 12 1 34 11 42 90 19 66 85 11 9 59 6 94 75 81 61 88 57 4 57 14\n61 88 84 29 57 65 3 14 39 47 29 55 34 45 43 13 47 5 76 19 11 29 87 66 68 81 55 22 58 86 2 65 rql kg",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "66 62 89 70 14 10 58 3 49 93 10 29 71 9 76 90 48 17 34 24 42 7 90 4 57 30 48 76 71 70 34 79 97 36\nuh u 65 14 5 70 56 37 100 20 77 59 13 58 31 10 72 61 73 77 51 78 20 78 39 77 82 64 50 41 83 57 16 66\n63 82 59 62 26 7 44 99 6 60 76 89 22 9 89 96 100 87 14 11 54 29 81 21 9 74 89 98 3 14 63 8 78 62\n72 54 14 2 79 53 89 40 50 33 77 37 43 76 77 74 46 35 2 46 6 13 93 76 68 94 13 5 1 30 93 34 guxj stcn",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "68 26 3 61 78 23 65 64 88 10 57 45 69 87 68 85 22 26 3 54 57 65 42 22 25 6 54 7 61 78 53 1 15 35\ncqj g 29 70 32 84 100 21 85 52 88 15 85 14 47 82 71 27 55 83 95 93 64 26 25 89 72 22 100 36 97 84 97 47\n46 6 9 77 70 46 69 60 81 97 12 30 73 99 31 41 52 73 6 16 68 19 31 64 61 77 66 93 47 27 32 52 61 43\n56 21 12 83 81 41 69 49 39 35 13 13 5 5 17 70 47 59 50 74 15 45 99 83 57 7 87 21 83 24 17 54 kpwun o",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "4 41 95 92 39 75 45 62 39 36 28 29 85 86 51 96 28 51 43 57 63 63 87 50 88 17 44 66 46 17 33 85 33 40\ng er 40 52 79 75 21 65 97 3 17 82 55 48 67 72 54 19 21 46 21 41 60 31 28 100 66 89 81 45 3 54 81 61\n99 25 55 70 83 78 5 90 69 54 57 50 78 63 16 55 28 59 95 28 88 13 59 49 11 49 28 88 28 57 7 100 37 1\n81 2 97 30 70 2 38 93 86 37 79 47 69 1 24 100 18 36 32 56 95 38 27 30 68 74 12 76 15 49 8 34 y dojyg",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "163 202 323 314 403 72 200 286 180 127 280 114 296 229 225 359 110 404 304 156 169 140 322 486 83 57 170 421 455 231 121 337 500 436\nibc h 469 294 376 295 453 445 482 62 298 196 174 125 368 64 455 324 193 204 364 128 272 401 264 222 95 178 342 171 102 497 180 261\n120 250 230 75 70 333 143 318 339 218 136 430 350 476 450 341 380 241 351 482 424 440 441 338 169 334 318 480 65 278 68 318 240 151\n461 335 497 414 347 223 410 90 170 213 260 404 466 65 69 118 293 458 274 492 387 361 137 221 458 72 473 362 431 311 208 293 whxwi di",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "438 472 299 241 302 230 377 154 109 254 167 54 58 427 482 182 412 436 494 80 200 144 355 480 199 456 167 98 394 89 213 212 61 104\nxjthz xcv 188 91 199 365 361 63 64 409 463 90 361 222 153 500 242 259 440 152 100 52 465 296 319 431 396 93 206 164 308 119 256 444\n177 360 371 141 491 245 490 249 441 278 69 67 116 138 479 364 51 181 276 411 140 230 379 156 485 271 432 384 163 234 70 426 386 196\n239 314 430 291 444 271 364 297 479 324 420 122 81 500 122 367 175 93 283 433 482 399 390 176 195 367 101 297 100 225 134 360 ia e",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "456 100 335 131 357 102 371 433 158 425 458 88 88 73 309 241 177 112 454 450 455 277 306 246 392 199 78 496 148 355 191 137 446 281\nxv whga 113 199 76 244 250 406 232 386 423 381 112 94 344 315 88 360 247 268 51 499 276 379 256 200 290 302 268 261 162 416 137 422\n207 86 129 260 492 447 468 196 433 340 109 494 408 449 334 270 217 153 155 459 309 420 60 203 88 363 133 354 50 291 412 145 453 497\n454 451 102 257 280 148 126 268 440 372 312 236 351 444 416 176 133 161 436 220 120 173 325 429 379 59 299 304 66 55 133 188 acj wodnu",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "153 474 487 387 140 207 308 470 56 188 412 308 330 213 472 279 186 475 55 208 136 123 237 63 77 495 54 58 286 173 399 349 157 459\noocrh j 141 341 327 279 176 335 443 270 346 394 155 124 333 386 280 363 419 232 416 101 144 476 493 166 253 336 240 349 99 175 109 347\n378 51 258 488 121 412 416 80 401 213 145 330 489 390 430 336 159 266 122 463 211 155 165 75 389 426 324 134 239 193 145 118 462 113\n216 278 299 93 429 480 315 61 491 103 423 169 248 297 394 467 137 178 350 336 360 258 226 227 92 493 285 294 375 271 477 61 uhgxfqz khzkq",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "142 383 138 421 369 443 327 384 269 163 163 251 116 422 91 109 436 383 72 150 67 297 351 363 493 155 495 413 344 357 72 461 288 234\nq hbm 151 493 319 54 331 261 183 428 264 141 197 275 155 336 305 369 186 359 341 385 56 277 300 401 262 134 478 485 149 334 309 146\n376 225 355 235 242 79 392 123 255 235 146 418 391 90 480 316 238 469 462 204 204 168 416 495 394 454 452 453 464 384 396 157 347 334\n62 159 113 172 313 387 306 123 85 428 169 439 144 419 437 67 347 75 336 189 306 457 80 437 100 339 209 58 348 298 349 237 zp golda",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "403 340 448 169 57 150 489 96 283 122 50 94 176 345 188 491 455 339 267 331 322 499 141 137 376 478 250 382 268 347 224 432 160 242\nc iyidp 112 272 97 194 183 189 164 457 294 238 68 175 56 122 450 403 327 391 428 123 178 173 345 153 422 217 142 186 496 328 209 80\n331 297 481 394 136 145 476 86 292 390 83 308 391 498 461 183 204 389 127 333 53 145 229 321 296 450 263 186 235 341 500 366 386 184\n454 180 229 81 311 152 77 142 101 322 344 370 328 452 62 364 73 324 288 150 247 470 134 201 470 412 109 159 405 471 385 347 kicp evfu",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "218 97 54 285 64 455 355 200 257 381 416 450 206 80 194 317 493 396 373 334 84 144 64 72 433 165 209 418 89 72 314 315 220 53\nkqcqa s 137 369 388 118 139 486 194 188 416 274 226 343 86 363 218 142 428 107 229 119 79 214 275 154 367 251 301 247 241 430 421 130\n349 293 130 323 358 433 157 470 306 97 300 499 119 301 469 132 375 420 386 56 440 179 196 360 312 301 265 107 80 409 450 195 99 108\n191 177 85 374 484 379 253 93 452 153 103 399 278 189 461 483 324 263 439 133 166 313 379 238 132 224 309 422 199 425 80 417 hpjgv fe",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\nlzgt md 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 p znfv",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\nw u 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 wh djt",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "999 2 999 1000 1000 999 1 1 1 1 2 1000 2 2 1000 1000 1000 1 1000 999 999 1000 1 1 999 1000 2 999 1 999 1 2 1000 2\naozpv jgjs 999 1 1 999 2 2 2 2 1 1 2 1 2 999 999 1 2 1000 999 1 1000 1000 1000 2 1000 1 1000 2 1 999 2 1000\n1 1000 1 1000 1000 2 999 999 2 1000 2 2 1 1 1000 999 1 1 2 1 999 2 2 1 1000 1 1 1000 999 1 1000 1000 999 1\n2 1 1 2 999 999 2 1 1 1 1000 2 1 999 2 1000 2 999 999 1000 1 999 999 1 999 2 999 2 1 2 1000 1000 mzvmhc agkl",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "999 1000 1000 1000 999 999 1000 1000 2 1 999 1000 1000 2 999 1000 2 1 2 2 2 999 2 1000 999 1000 2 2 1 1 1 999 1 1000\nxy fpch 999 1000 2 2 1 1 1 999 1 1 1000 1000 999 999 999 999 1 2 1000 1000 1 999 2 999 1000 999 999 999 1 2 1 1\n1 2 999 999 2 999 1 1 999 999 1 1000 1 999 2 1000 2 1 999 1 1 1 1000 2 999 2 1000 1000 1000 1 1 999 1000 1000\n1 2 1000 2 1 1000 2 999 999 1000 2 2 999 999 999 999 2 1000 2 2 2 2 999 1000 2 2 1000 999 2 1 999 2 xrpelo efiu",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:58",
  "total_test_cases": 20
}
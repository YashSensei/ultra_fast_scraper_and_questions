{
  "problem_code": "problems",
  "title": "Book Shelves",
  "tags": [],
  "text": "When Farmer John isn't milking cows, stacking haybales, lining up his cows, or building fences, he enjoys sitting down with a good book. Over the years, he has collected N books (1 ≤ N ≤ 100,000), and he wants to build a new set of bookshelves to hold them all.Each book i has a width W(i) and height H(i). The books need to be added to a set of shelves in order; for example, the first shelf should contain books 1...k for some k, the second shelf should start with book k+1, and so on. Each shelf can have a total width of at most L (1 ≤ L ≤ 1,000,000,000). The height of a shelf is equal to the height of the tallest book on that shelf, and the height of the entire set of bookshelves is the sum of the heights of all the individual shelves, since they are all stacked vertically.Please help FJ compute the minimum possible height for the entire set of bookshelves.InputLine 1: Two space-separated integers: N and L.Lines 2..1+N: Line i+1 contains two space-separated integers: H(i) and W(i). (1 ≤ H(i) ≤ 1,000,000; 1 ≤ W(i) ≤ L).OutputLine 1: The minimum possible total height for the set of bookshelves.SampleInput5 10\r\n5 7 \r\n9 2 \r\n8 5 \r\n13 2 \r\n3 8Output21ExplanationThere are 5 books. Each shelf can have total width at most 10.There are 3 shelves, the first containing just book 1 (height 5, width 7), the second containing books 2, 3 and 4 (height 13, width 9), and the third containing book 5 (height 3, width 8).",
  "sample_input": "Input5 10\r\n5 7 \r\n9 2 \r\n8 5 \r\n13 2 \r\n3 8Output21",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/SHELF",
  "scraped_at": "2025-08-17 00:33:56",
  "test_cases": [
    {
      "input": "Input5 10\r\n5 7 \r\n9 2 \r\n8 5 \r\n13 2 \r\n3 8Output21",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "7 3\nkwo 4\n9 3\n9 10\n6 5\n10 7\n2 4 1\n8 gaywb",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "10 6\nhmyzf 3\n4 3\n4 5\n5 3\n3 5\n7 6 3\n6 mnlwlmpy",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "6 4\nnjj 7\n3 2\n8 2\n1 9\n1 2\n8 3 5\n6 iqsdgmkrq",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "34 73\nfheh 13\n38 71\n33 1\n79 84\n79 99\n31 72 61\n40 dsszebug",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "39 72\nsbmvp 50\n54 34\n44 13\n27 69\n57 49\n65 52 66\n47 zbaapokxu",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "53 75\nxcfsrn 22\n85 72\n56 8\n68 58\n47 46\n50 68 57\n15 konmt",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "16 58\nngyv 72\n90 17\n70 17\n54 9\n50 99\n99 85 66\n54 jxwxwbaj",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "54 71\nb 1\n49 100\n61 73\n61 100\n64 53\n81 8 28\n70 audc",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "19 16\ntiewpn 46\n7 33\n20 33\n18 28\n23 5\n7 22 49\n36 hsuzqq",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "29 37\nrpw 49\n10 31\n33 21\n19 31\n35 26\n23 18 39\n40 rgmwdmei",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "16 37\nshnnw 36\n44 15\n9 35\n13 34\n35 32\n31 18 17\n37 qbrundzqu",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "16 9\nkla 28\n32 17\n38 35\n21 24\n34 17\n12 46 11\n29 rhrp",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "8 50\nupiwgy 46\n15 49\n47 31\n44 5\n37 5\n9 45 24\n5 yk",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "32 32\nkppgu 27\n45 6\n8 47\n6 21\n40 13\n41 22 21\n5 q",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "30 26\nq 36\n23 47\n43 50\n15 37\n5 28\n14 32 14\n9 tlew",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "100 100\nqxhhre 100\n100 100\n100 100\n100 100\n100 100\n100 100 100\n100 mbp",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "100 100\nv 100\n100 100\n100 100\n100 100\n100 100\n100 100 100\n100 bgfsyd",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "100 99\nx 100\n2 2\n99 2\n2 100\n100 99\n100 99 100\n1 zigwlf",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "99 100\nrfnjd 99\n100 100\n100 99\n99 1\n1 99\n2 2 1\n2 ytzm",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:53",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:38"
}
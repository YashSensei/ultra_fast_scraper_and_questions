{
  "problem_code": "problems",
  "title": "MP3 Player",
  "tags": [],
  "text": "Georg's new MP3 player has many interesting features, one of them being the key lock. All the keys are locked after more thanTseconds of inactivity. After the key lock is engaged, no key performs its original function, but if any key is pressed, the key lock is disengaged.For example, assume thatT= 5 and the player is currently locked. Georg presses the keyA, waits for 3 seconds, presses the keyB, waits for 5 seconds, pressesC, waits for 6 seconds, and pressesD. In this case only the keysBandCperform their regular functions. Note that the keys became locked betweenCandDwas pressed.Sound level of the MP3 player is controlled by the+and-keys, increasing and decreasing volume by 1 unit respectively. The sound level is an integer between 0 andVmax. Pressing the+key at volumeVmaxor pressing the-key at volume 0 leaves the volume unchanged.Task specificationGeorg does not know the value ofT. He wanted to find it by an experiment. Starting with a locked keyboard, he pressed a sequence ofN+and-keys. At the end of the experiment Georg read the final volume from the player's display. Unfortunately, he forgot to note the volume before his first keypress. For the purpose of this task, the unknown initial volume will be denotedV1and the known final volume will be denotedV2.You are given the valueV2and a list of keystrokes in the order in which Georg made them. For each key, you are given the type of the key (+or-) and the number of seconds from the beginning of the experiment to the moment when the key was pressed. The task is to find the largest possibleintegervalue ofTwhich is consistent with the outcome of the experiment.InputThe first line of the input contains three space-separated integersN,VmaxandV2(0 ≤ V2≤ Vmax). Each of the nextNlines contains a description of one key in the sequence: a character+or-, a space and an integerCi(0 ≤ Ci≤ 2 x 109), the number of seconds from the beginning of the experiment. You may assume that the keypresses are in sorted order and that all times are distinct (i.e.,Ci<Ci+ 1for all 1 ≤ i < N).OutputIfTcan be arbitrarily large, output a single line containing the word \"infinity\" (quotes for clarity).Otherwise, output a single line containing two integersTandV1separated by a single space.The values must be such that carrying out the experiment with locking timeTstarting at volumeV1gives the final volumeV2. If there are multiple possible answers, output the one with the largestT; if there are still multiple possible answers, output the one with the largestV1.(Note that at least one solution always exists: forT= 0 none of the keys performs its action, so it suffices to takeV1=V2.)ConstraintsYou may assume that 2 ≤ N ≤ 100000 and 2 ≤ Vmax≤ 5000.In test cases worth 40 points N ≤ 4000.In test cases worth 70 points N x Vmax≤ 400000.ExamplesInput:6 4 3- 0+ 8+ 9+ 13- 19- 24Output:5 4ForT= 5 the keys perform the following actions: unlock, unlock,+,+, unlock,-.For anyV1∈; {2, 3, 4} we would getV2= 3. Note that the output contains the largest possibleV1.ForT≥ 6 the last two keystrokes will both be active, hence it will be impossible to haveV2= 3.Input:3 10 10+ 1+ 2+ 47Output:infinityIfV1= 10 then for anyTwe'll haveV2= 10.",
  "sample_input": "6 4 3- 0+ 8+ 9+ 13- 19- 24",
  "sample_output": "5 4",
  "link": "https://www.spoj.com/problems/CTOI10D1",
  "scraped_at": "2025-08-17 00:33:08",
  "test_cases": [
    {
      "input": "6 4 3- 0+ 8+ 9+ 13- 19- 24",
      "expected_output": "5 4",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "6 7 9 3 10 1 9 6 1\n9 9 ee qj gb qnzx r xwe 2",
      "expected_output": "0\n0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "3 2 9 2 1 7 7 9 6\n5 5 tosl ay uf b a sx 7",
      "expected_output": "0\n0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "6 10 8 7 10 10 4 10 1\n4 2 g t teier ldq p eanhd 5",
      "expected_output": "0\n0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "14 95 74 77 63 35 39 2 34\n38 14 ivav nniaa f rd hjn kx 41",
      "expected_output": "0\n0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "26 6 67 54 27 48 76 59 100\n16 57 mseek gbj qyc azl xo ws 54",
      "expected_output": "0\n0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "11 83 40 29 31 76 90 94 93\n1 9 qzxd n mw jqi qggo k 11",
      "expected_output": "0\n0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "38 56 3 81 20 64 65 42 96\n85 41 ljj re ws zlg hfcp xddb 83",
      "expected_output": "0\n0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "15 85 30 97 52 33 30 18 54\n11 79 sj bcpmb ft ahgg li pdnf 73",
      "expected_output": "0\n0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "1827 589 727 657 971 581 1467 411 920\n242 1918 ggc wrft m qxq d rh 931",
      "expected_output": "0\n0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "676 1316 982 646 614 874 1945 951 1440\n466 1923 titlu mwax bu yqaz jehq knm 1570",
      "expected_output": "0\n0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "912 1713 1296 1314 1538 1762 288 1296 1600\n1875 867 kejl rgi cm j nqcz l 685",
      "expected_output": "0\n0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "491 442 708 1515 942 569 422 1111 1270\n1974 771 hr vs tater capzc lppx by 1088",
      "expected_output": "0\n0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "934 1700 1191 971 1508 299 495 216 1261\n815 310 qlyt bhzp q bbdeu b ahou 1712",
      "expected_output": "0\n0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "980 1105 687 1085 1628 1193 712 1835 312\n263 813 us rys hrv y a t 843",
      "expected_output": "0\n0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "643 697 857 254 1690 725 1140 1724 589\n223 1628 run v wl edfo x tq 708",
      "expected_output": "0\n0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "4000 4000 4000 4000 4000 4000 4000 4000 4000\n4000 4000 ar swlq ctez azg g q 4000",
      "expected_output": "0\n0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "4000 4000 4000 4000 4000 4000 4000 4000 4000\n4000 4000 kkcjc d du ysrxm xrnen zd 4000",
      "expected_output": "0\n0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "3999 1 4000 2 1 3999 1 3999 1\n3999 3999 f phbkw bdtw t vh lwkph 4000",
      "expected_output": "0\n0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 4000 2 3999 1 2 3999 2 2\n3999 4000 fwtyk cu rdol vb ewx fd 4000",
      "expected_output": "0\n0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:48",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:36:48"
}
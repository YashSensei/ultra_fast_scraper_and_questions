{
  "problem_code": "problems",
  "title": "Hard Problem",
  "tags": [],
  "text": "[This space is intentionally left blank.]InputMultiple test cases. Each contains a single integer N (1 ≤ N ≤ 50). Input terminates by EOF.OutputFor each test case, output one line contains the answer. See the example.ExampleInput:\r\n8\r\n9\r\n10\r\n\r\nOutput:\r\n8=90*(0+0+0+0+45-3+20-42+60+10)\r\n9=20*(0-3+10-14+15+2+0+0+0+0+10)\r\n10=66*(0+0+0+0+0+33+5-33+66-66+55+6)",
  "sample_input": "Input:\r\n8\r\n9\r\n10\r\n\r\nOutput:\r\n8=90*(0+0+0+0+45-3+20-42+60+10)\r\n9=20*(0-3+10-14+15+2+0+0+0+0+10)\r\n10=66*(0+0+0+0+0+33+5-33+66-66+55+6)",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/HARDP",
  "scraped_at": "2025-08-17 00:33:45",
  "test_cases": [
    {
      "input": "8\r\n9\r\n10",
      "expected_output": "8=90*(0+0+0+0+45-3+20-42+60+10)\r\n9=20*(0-3+10-14+15+2+0+0+0+0+10)\r\n10=66*(0+0+0+0+0+33+5-33+66-66+55+6)",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4\n6\n5\n2\n3",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n10\n7\n10\n9\n3",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n4\n4\n7\n3\n4",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "6\n94350987\n22998017\n83003410\n81238546\n15183185\n11410513",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "16\n93872720\n38189329\n62335788\n58723650\n15646363\n72310261\n39793323\n17925747\n86119463\n30745216\n69640630\n54715405\n81857358\n55828650\n11232449\n44877134",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "13\n70108090\n70579069\n16116828\n70752572\n26709932\n79582236\n42669716\n26260980\n83783149\n67451054\n27242976\n57674184\n2024436",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "5\n8404004\n74795328\n42168353\n87549315\n82494041",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "10\n43747825\n79135433\n88646148\n22130257\n43913122\n76702318\n847057\n84228808\n87730173\n29370210",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "32\n26662\n58195\n16959\n84215\n69038\n97305\n33680\n24184\n81796\n27793\n90338\n10741\n60700\n4509\n77994\n41786\n21246\n6306\n46126\n79062\n87827\n5130\n17476\n45833\n82086\n75036\n40739\n58371\n17610\n92465\n31481\n63979",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "27\n74862\n37882\n33939\n80260\n63250\n13729\n55771\n23615\n53803\n81465\n58340\n80218\n88782\n2243\n65300\n7830\n55183\n41738\n96660\n17931\n90944\n96053\n4203\n98748\n92961\n3037\n67388",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "42\n26692\n15133\n8072\n27648\n17436\n27510\n46297\n15098\n23436\n98496\n54882\n727\n644\n70502\n59503\n30660\n4513\n56205\n79678\n4130\n68289\n71343\n31273\n48520\n31885\n35919\n23667\n45551\n50520\n27876\n32727\n23497\n62493\n49297\n54728\n24012\n95208\n28774\n88004\n27595\n29172\n99643",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "39\n53014\n66775\n33282\n34293\n7592\n68048\n62197\n84732\n53657\n37992\n41486\n21171\n5304\n18987\n81672\n63344\n7063\n50984\n10995\n51338\n10071\n71047\n98087\n42368\n78176\n49796\n8418\n69276\n7268\n21998\n87382\n74499\n41035\n27898\n73349\n7026\n24115\n36970\n96147",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "25\n89987\n63346\n25616\n34879\n56408\n63182\n63430\n70292\n72497\n85300\n1705\n10351\n26530\n84342\n52362\n55411\n5825\n2062\n95597\n51640\n17750\n31171\n79190\n46565\n70242",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "33\n61354\n22685\n2740\n91756\n40924\n11587\n11973\n84100\n37678\n2403\n8581\n53357\n56554\n13827\n17766\n92123\n21406\n8833\n48712\n85076\n31545\n55330\n12107\n75199\n75500\n44562\n83654\n72421\n10890\n19746\n11973\n56964\n2149",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "27\n13924\n31994\n911\n18012\n55551\n73024\n80458\n45178\n83165\n30042\n52093\n65262\n68553\n43065\n914\n34365\n50783\n5839\n15242\n66794\n17595\n31814\n74642\n81007\n42128\n42482\n82725",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "50\n44496998\n11739635\n72332762\n99027145\n21157763\n18104244\n12275687\n30032377\n55650926\n75586388\n13036951\n15460235\n67203411\n39518611\n4590066\n5424018\n69169312\n63210155\n33018504\n34650351\n30850477\n15523751\n75424757\n73017153\n71161651\n56736964\n41330429\n89284570\n65908205\n62165080\n74164015\n65554789\n43041674\n1794214\n87458298\n60724777\n51163105\n42426290\n4467323\n63124117\n15108683\n49924509\n76870678\n98636771\n30052591\n58187445\n89409634\n5828548\n31893647\n58267819",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 50)"
    },
    {
      "input": "50\n86456478\n91461708\n94951182\n74752463\n36255287\n60026042\n75727357\n22896916\n40824508\n83120164\n62368882\n8960308\n35577600\n75413884\n57522406\n60053543\n38429723\n4917224\n3771570\n10116459\n18472211\n13790187\n81737740\n16818894\n8100565\n98715259\n66606226\n7640704\n57377950\n88413930\n90573281\n89213567\n94945088\n60587206\n13304743\n50164372\n39817417\n15158507\n34968791\n77277632\n98859571\n37072555\n48742036\n57012761\n75720680\n77743649\n7227516\n27242338\n37930157\n19344129",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 50)"
    },
    {
      "input": "1\n1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 1)"
    },
    {
      "input": "2\n36241474\n1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 2)"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:49",
  "total_test_cases": 20
}
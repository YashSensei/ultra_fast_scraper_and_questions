{
  "problem_code": "problems",
  "title": "Match me if you can",
  "tags": [],
  "text": "After watching the movie \"Catch me if you can\" professor Mahammad became very confident about creating a new problem for his programmers. As some procedures in his research heavily depend on string matching, now, he wants to check his beginner programmers' skills in this topic as well. His task is very simple. Professor gives you a random string and several queries. For each of the query string, you have to count the number of its occurrences in the string provided by professor.InputFirst line of the input section contains two positive integers N and Q, which define the length of professor's string and the number of queries, respectively.Second line contains professor's string having length N(N â‰¤3000).The following Q lines contain a query string having nonzero length.OutputFor each of the queries, output the number of the desired count of the occurrences.Note: The sum of the length of query strings does not exceed500000. And please, do consider the time limit, because the problem can be solved inboth slow and fast languages.ExampleInput:7 5acababaabbcabaabakarpOutput:40120",
  "sample_input": "Input:7 5acababaabbcabaabakarpOutput:40120",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/STRMATCH",
  "scraped_at": "2025-08-17 00:34:09",
  "test_cases": [
    {
      "input": "7 5acababaabbcabaabakarp",
      "expected_output": "40120",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "7 8\n6 yhgnjjn",
      "expected_output": "0\n0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "6 7\n3 nofmiedsaure",
      "expected_output": "0\n0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "10 7\n1 yfk",
      "expected_output": "0\n0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "56 13\n52 arwpnunqdwmkizucgvwcbh",
      "expected_output": "0\n0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "30 29\n43 qbsp",
      "expected_output": "0\n0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "26 30\n14 ezqblzytbfksduiauqifp",
      "expected_output": "0\n0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "91 76\n77 vonhsbmgkrfvetno",
      "expected_output": "0\n0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "92 34\n8 bnuqxdfuvulj",
      "expected_output": "0\n0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "888 301\n861 yp",
      "expected_output": "0\n0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "484 1333\n1463 pwszqfavclzfjxj",
      "expected_output": "0\n0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "1285 242\n879 nt",
      "expected_output": "0\n0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "301 1127\n797 eghvsk",
      "expected_output": "0\n0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "1376 1219\n1229 vqqzbffffsljgh",
      "expected_output": "0\n0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "784 897\n150 xunozgtpelvcoq",
      "expected_output": "0\n0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "1044 884\n952 a",
      "expected_output": "0\n0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "3000 3000\n3000 pofgoswscr",
      "expected_output": "0\n0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "3000 3000\n3000 cwdqt",
      "expected_output": "0\n0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 2999\n1 ydyzxqnvznlj",
      "expected_output": "0\n0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 3000\n1 afqzvaivfawqllnysas",
      "expected_output": "0\n0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:55",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:54"
}
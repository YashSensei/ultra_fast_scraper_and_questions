{
  "problem_code": "problems",
  "title": "He is Lazy",
  "tags": [],
  "text": "As we all know, Humberto is really lazy. He is so lazy that he sticks his nose out of the window so that the wind will blow it for him. Obviously, he hasn't worked at all in his whole life. However, he got lucky and won a lot of money in the lottery. With some of that money he bought an empty field, and made build several houses inside of it, where he moved with his family and friends. Thus, Humberto can go in a straight line from any point in his field to any other, without having to make detours because of urban design (for the sake of simplicity, we consider the objects in Humberto's field as dots, so they don't interfere in Humberto's way).Sadly, that was not enough for Humberto, so in order to walk even less he decided to have installed some catapults in strategic points of his field. Each catapult can send him from the point where it is installed, to any point at a certain fixed distance (that depends on the range of the catapult).But, in spite of simplifying his life, the catapults made the task of choosing a way in the field a real headache, because Humberto wants to walk as less as possible. As tired as he is of all his problems, he decided to use the rest of his money to hire you to tell him the minimum distance he has to walk to move from a given point in the field to another.InputThe input contains several test cases. Each test case is described in several lines. The first line contains five integersN,PX,PY,LXandLY.Nrepresents the number of catapults in the field (1 ≤N≤ 100). The pair (PX,PY) indicates the coordinates in the XY plane ot the starting point for Humberto, while the pair (LX,LY) indicates analogously the destination point (1 ≤PX,PY,LX,LY≤ 109). Each of the nextNlines describes a different catapult, using three integersCX,CYandF, that indicate the point (CX,CY) where the catapult of strengthFis installed. This means that Humberto may move, without walking, from the point (CX,CY) to any point in the plane that is at a distance ofexactlyFfrom (CX,CY). Assume that in each test case all the points given in the plane are different. The end of the input is indicated by a single line containing the number -1 five times, and it should not be processed as a test case.OutputFor each test case, output a single line containing a rational number that represents the minimum distance Humberto has to walk in order to get from the starting point to the destination point, using some or none of the catapults. Round the answer to the nearest rational with two decimal digits. In case of a tie, round up. Print exactly two digits after the decimal point, even if that means ending the number with 0's.ExampleInput:1 10 10 20 10\r\n11 10 9\r\n1 20 10 10 10\r\n11 10 9\r\n2 1 1 12 1\r\n3 1 6\r\n8 1 5\r\n1 12 12 1 1\r\n6 6 9\r\n5 10 10 1 1\r\n3 3 7\r\n8 3 7\r\n8 8 7\r\n3 8 7\r\n5 5 5\r\n-1 -1 -1 -1 -1Output:1.00\r\n10.00\r\n4.00\r\n10.41\r\n5.11",
  "sample_input": "Input:1 10 10 20 10\r\n11 10 9\r\n1 20 10 10 10\r\n11 10 9\r\n2 1 1 12 1\r\n3 1 6\r\n8 1 5\r\n1 12 12 1 1\r\n6 6 9\r\n5 10 10 1 1\r\n3 3 7\r\n8 3 7\r\n8 8 7\r\n3 8 7\r\n5 5 5\r\n-1 -1 -1 -1 -1Output:1.00\r\n10.00\r\n4.00\r\n10.41\r\n5.11",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/HEISLAZY",
  "scraped_at": "2025-08-17 00:34:37",
  "test_cases": [
    {
      "input": "1 10 10 20 10\r\n11 10 9\r\n1 20 10 10 10\r\n11 10 9\r\n2 1 1 12 1\r\n3 1 6\r\n8 1 5\r\n1 12 12 1 1\r\n6 6 9\r\n5 10 10 1 1\r\n3 3 7\r\n8 3 7\r\n8 8 7\r\n3 8 7\r\n5 5 5\r\n-1 -1 -1 -1 -1",
      "expected_output": "1.00\r\n10.00\r\n4.00\r\n10.41\r\n5.11",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5 1 6 7 4\n10 7 8\n2 7 4 8 3\n6 4 3\n1 8 2 7 2\n8 2 5\n2 7 10\n3 9 2 10 7\n4 10 4\n2 8 4 6 7\n3 3 7\n2 3 4\n4 8 10\n6 7 2\n3 8 4\n2 2 9 9 2",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "6 9 6 7 8\n8 4 5\n8 1 5 4 3\n9 4 8\n7 8 6 9 8\n6 8 8\n4 8 1\n3 8 3 1 5\n6 8 7\n10 7 8 2 9\n8 2 9\n1 10 4\n1 1 4\n7 4 7\n3 7 8\n10 1 1 4 10",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "7 3 10 5 3\n2 2 9\n7 9 6 1 3\n4 10 9\n8 8 6 10 3\n7 8 9\n2 10 7\n8 4 8 9 9\n3 9 8\n9 5 6 8 5\n10 2 3\n8 3 8\n9 9 2\n5 4 9\n1 8 1\n9 9 10 6 9",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "65 22 57 50 53\n45 60 75\n58 57 37 53 82\n35 54 31\n86 57 59 42 48\n74 6 95\n8 100 14\n14 63 94 73 46\n82 16 73\n29 99 40 11 13\n14 60 69\n52 72 52\n91 100 39\n82 40 53\n74 93 40\n79 38 50 76 82",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "97 62 4 11 53\n93 33 26\n33 78 35 10 12\n39 77 38\n32 58 20 59 14\n85 78 49\n30 30 23\n17 13 75 32 2\n98 9 21\n98 63 23 80 67\n80 10 94\n75 27 76\n22 22 37\n21 68 76\n62 96 62\n24 36 22 39 96",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "38 71 91 34 21\n75 49 97\n21 10 51 26 53\n37 40 66\n1 60 92 90 51\n30 69 16\n35 61 63\n93 13 20 12 36\n64 17 89\n14 93 36 68 96\n51 22 9\n10 22 83\n99 9 65\n30 59 33\n99 51 73\n7 13 63 67 73",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "28 20 27 39 74\n61 8 34\n28 14 54 96 7\n40 1 32\n26 41 34 18 82\n52 86 80\n59 87 79\n49 61 26 90 77\n91 40 31\n16 27 5 94 74\n60 93 78\n25 72 14\n80 87 45\n97 33 55\n37 19 4\n22 77 74 67 71",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "90 97 18 32 7\n55 4 99\n19 22 51 64 43\n82 84 5\n88 73 93 94 100\n17 98 87\n43 54 34\n33 6 76 6 61\n74 4 99\n82 78 32 4 94\n33 58 40\n96 16 95\n37 41 10\n95 13 54\n97 61 45\n9 65 59 64 46",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "31 11 8 27 40\n35 12 25\n42 25 49 14 13\n25 44 39\n47 32 45 45 25\n32 42 50\n48 42 35\n37 20 32 11 46\n10 48 23\n10 7 21 43 18\n38 10 37\n31 34 44\n7 31 20\n37 42 16\n12 13 50\n20 44 15 9 48",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "50 40 22 34 46\n6 35 48\n17 50 30 16 17\n50 44 44\n13 43 48 14 23\n14 19 25\n30 47 41\n32 43 48 45 41\n7 50 7\n35 21 6 31 44\n22 11 11\n17 19 16\n7 47 25\n29 5 22\n10 17 23\n16 17 45 17 38",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "39 7 43 32 24\n32 11 16\n7 19 36 43 48\n5 36 21\n12 32 44 6 20\n37 30 37\n50 24 42\n44 26 28 35 10\n8 6 40\n37 46 10 11 9\n12 13 25\n27 15 45\n29 24 12\n6 5 28\n8 32 29\n28 25 12 39 34",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "9 12 45 29 50\n21 19 49\n17 30 23 12 23\n36 12 21\n32 27 29 12 46\n49 6 24\n35 10 42\n38 16 28 8 38\n40 33 41\n8 10 41 22 34\n42 27 39\n43 30 23\n32 5 12\n6 25 50\n20 28 18\n36 9 19 50 14",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "13 42 11 15 43\n42 20 26\n37 39 45 30 7\n34 27 44\n14 44 29 46 29\n19 16 33\n24 16 32\n46 8 13 41 15\n14 46 44\n17 46 20 46 50\n32 25 24\n12 45 23\n6 34 9\n31 40 45\n13 32 46\n16 17 39 8 18",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "9 17 38 28 32\n45 10 25\n43 20 47 20 38\n20 40 48\n28 37 7 24 22\n48 24 28\n48 18 5\n8 14 31 38 18\n36 12 11\n29 5 35 23 18\n40 32 38\n11 35 50\n38 15 18\n16 13 19\n24 43 14\n47 7 22 39 15",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "38 9 22 15 49\n8 18 16\n6 6 32 41 42\n25 43 42\n45 5 27 50 32\n34 36 44\n9 43 42\n31 10 43 26 18\n17 26 46\n22 49 46 15 39\n35 28 42\n11 21 9\n46 35 5\n14 33 46\n6 30 20\n50 43 41 13 49",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "100 100 100 100 100\n100 100 100\n100 100 100 100 100\n100 100 100\n100 100 100 100 100\n100 100 100\n100 100 100\n100 100 100 100 100\n100 100 100\n100 100 100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100 100 100",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "100 100 100 100 100\n100 100 100\n100 100 100 100 100\n100 100 100\n100 100 100 100 100\n100 100 100\n100 100 100\n100 100 100 100 100\n100 100 100\n100 100 100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100 100 100",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "100 100 2 1 100\n2 2 100\n100 1 100 2 100\n1 1 99\n2 100 1 100 2\n1 100 99\n2 1 100\n99 99 2 1 2\n1 1 1\n100 2 1 100 2\n100 100 2\n1 2 100\n99 2 100\n1 99 1\n99 99 99\n100 99 100 1 100",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 2 100 100 1\n99 100 2\n2 2 1 100 99\n100 1 2\n99 100 99 99 99\n1 99 100\n1 2 99\n2 99 2 99 99\n99 1 1\n100 1 100 99 1\n2 100 1\n1 100 2\n2 99 100\n99 100 99\n100 99 100\n1 2 99 100 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:57",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Higgs Boson",
  "tags": [],
  "text": "It's been 100 years since the detection of the first Higgs boson and now particle physics is a mainstream subject in all high schools. Obviously, kids love the fact that they can create tiny black holes using only their portable particle accelerators and show off to their friends and colleagues. Although the creation of big black holes that could swallow the whole planet is possible even with these portable particle accelerators, the devices are programmed to only thrown particles when this undesirable side effect is impossible.Your granddaughter is trying to create her own black holes with a portable accelerator kit, which is composed of two small particle accelerators that throw, each one, a boson-sized particle. Both particles are thrown at the same time, and a black hole appears when the particles collide. However, your granddaughter doesn't know how much time she'll have to wait before this happens. Fortunately, each accelerator can predict the particle's trajectory, showing four integer values into its display, calledA,B,CandD. Each value can be replaced into the following equations:r=At+Bθ =Ct+Din order to determine the trajectory of the particle, in polar coordinates. The radius (r) is represented in distance units and the angle (θ) in degrees. The time (t) is given in time units and it is always a rational value which can be represented by an irreducible fraction. Your granddaughter knows that in polar coordinates a point has infinite representations. In general, the point (r, θ) can be represented as (r, θ ±k×360o) or ( -r, θ ±(2k+ 1) ×180o), wherekis any integer. Besides, the origin (r= 0) can be represented as (0, θ) for any θ.Using these parameters informed by each particle accelerator, your granddaughter wants to determine whether the particles will eventually collide and, if they do, the time when they will collide. After the first collision it is impossible to predict the particle's trajectory, therefore, only the first possible collision should be considered.Although your granddaughter is really intelligent and has a deep knowledge of particle physics, she does not know how to program computers and is looking for some notes in her grandfather's (or grandmother's) ICPC notebook (don't forget, she isyourgranddaughter!). Fortunately for you, there is a note on your notebook which says that you wrote that code during the 2008 ICPC South America Regional Contest (or, to be more specific,thiscontest).InputThe input consists of several test cases, one per line. Each test case contains eight integer numbers separated by single spaces,A1,B1,C1,D1,A2,B2,C2,D2( -104≤A1,B1,C1,D1,A2,B2,C2,D2≤ 104).  The first four input values (A1,B1,C1,D1) correspond to the four parameters displayed by the first portable particle accelerator and the following input values (A2,B2,C2,D2) correspond to the four parameters displayed by the second portable particle accelerator when both particles are thrown. The end of the input is represented byA1=B1=C1=D1=A2=B2=C2=D2= 0, which should not be processed as a test case, since these are the values displayed by the particle accelerators when a big black hole would be created if the particles were trown. Although the end of input is represented by a line with eight zeroes, note that the number zero is a possible input value.OutputFor each test case, your program must output a line containing two non-negative integerstaandtbseparated by a single space. If there is no possibility of collision,ta=tb= 0, otherwise,ta/tbmust be an irreducible fraction representing the earliest collision time. Even if the fraction results in an integer value, you still must output the number 1 as the denominator (see samples below).ExampleInput:1 1 180 0 2 0 180 360\r\n10 10 360 0 -24 18 180 72\r\n5 5 180 0 -12 9 10 40\r\n-9 5 5 180 2 5 5 180\r\n0 0 0 0 0 0 0 0Output:1 1\r\n0 0\r\n4 17\r\n0 1",
  "sample_input": "Input:1 1 180 0 2 0 180 360\r\n10 10 360 0 -24 18 180 72\r\n5 5 180 0 -12 9 10 40\r\n-9 5 5 180 2 5 5 180\r\n0 0 0 0 0 0 0 0Output:1 1\r\n0 0\r\n4 17\r\n0 1",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/SAMER08H",
  "scraped_at": "2025-08-17 00:33:08",
  "test_cases": [
    {
      "input": "1 1 180 0 2 0 180 360\r\n10 10 360 0 -24 18 180 72\r\n5 5 180 0 -12 9 10 40\r\n-9 5 5 180 2 5 5 180\r\n0 0 0 0 0 0 0 0",
      "expected_output": "1 1\r\n0 0\r\n4 17\r\n0 1",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "7 10 1 7 3 5 7 5\n3 7 9 1 10 1 9 6\n6 3 5 4 8 3 9 9\n8 1 1 6 6 10 3 1\n10 2 10 6 10 5 6 2",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "10 9 7 8 8 9 5 7\n3 10 8 3 7 9 7 3\n8 3 7 6 7 6 7 7\n7 9 5 9 9 7 7 7\n4 10 6 3 7 3 5 8",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "8 7 1 3 5 6 9 4\n7 5 7 8 8 9 5 10\n10 5 5 5 3 6 10 4\n9 8 5 10 8 1 5 6\n4 10 3 4 9 3 5 1",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "68 12 14 96 57 64 60 50\n41 91 48 94 21 71 25 89\n71 52 67 67 47 67 79 58\n79 37 91 35 27 59 3 23\n67 86 90 59 61 21 66 78",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "6 9 7 91 48 99 72 40\n68 98 22 18 6 55 50 21\n8 90 96 86 42 80 89 91\n6 29 100 68 19 42 38 66\n89 13 35 34 95 38 87 77",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "43 5 98 38 23 79 82 89\n15 57 88 65 45 46 2 93\n35 100 55 47 81 34 24 88\n39 80 99 24 27 16 63 46\n49 79 5 72 9 76 61 77",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "19 91 87 8 17 65 2 67\n88 76 90 27 74 40 87 11\n13 20 100 55 58 88 9 43\n5 8 26 18 37 66 66 2\n15 2 57 94 64 52 87 56",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "68 7 92 96 19 63 49 13\n58 96 82 21 61 92 16 49\n86 46 10 63 91 99 65 94\n58 67 30 89 1 47 96 31\n60 19 3 6 7 72 58 80",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "418 393 224 50 246 390 447 143\n418 91 251 128 62 251 59 377\n161 247 135 389 400 353 466 295\n396 419 247 304 105 128 186 404\n89 84 51 259 101 441 317 443",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "459 449 226 132 161 448 199 219\n59 324 196 494 421 186 147 75\n354 398 170 406 223 279 110 59\n417 276 183 362 428 98 464 478\n94 121 340 101 439 484 115 426",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "418 50 407 294 493 183 171 68\n406 366 145 220 280 312 290 203\n379 308 442 426 219 442 161 192\n154 215 471 461 420 478 93 283\n356 298 315 452 175 160 365 327",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "147 103 386 343 51 440 449 347\n86 232 483 462 460 85 261 416\n325 482 244 324 410 180 479 311\n433 203 63 162 53 453 272 389\n391 103 221 75 292 110 428 409",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "78 365 431 493 246 51 446 381\n222 277 461 315 319 394 358 209\n173 470 242 448 357 426 131 428\n91 460 153 348 153 311 397 365\n387 214 72 425 364 310 53 137",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "349 444 141 452 67 149 416 109\n437 417 237 209 263 487 334 342\n200 331 202 154 59 249 73 229\n252 136 106 206 349 435 123 208\n448 97 350 384 352 104 428 399",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "358 201 85 148 438 277 74 349\n78 424 290 394 479 492 341 446\n303 85 221 115 494 342 434 376\n289 318 451 469 236 279 117 246\n197 374 151 496 85 415 191 243",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 1000 1000 1000 999 2 2 1000\n1 1000 999 1 2 1000 1 1\n1 1 2 1000 2 999 2 2\n999 2 1 2 1000 2 2 1\n1 1000 1000 1000 1 1000 1 999",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 2 999 1 1000 1 2 999\n1000 1 2 999 1000 1 2 2\n2 2 2 1 1 1 1000 999\n1 1 1 2 1 1 1000 1000\n1000 2 999 2 1 1 2 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:47",
  "total_test_cases": 20
}
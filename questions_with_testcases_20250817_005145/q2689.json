{
  "problem_code": "problems",
  "title": "Earth Sled Tour",
  "tags": [],
  "text": "So it's Christmas! And Santa Claus needs to perform a series of deliveries of gifts in different locations around the world.For those who do not know, the reindeers are sick and he will need to use the gas-powered thunder to deliver the presents.A curious fact is that the roads between cities are perfectly straight and there is a gas station in each city. Santa Claus is a very smart guy and, to avoid problems, he fills the tank with a specific value X is the value of the largest road between the cities that Santa is traveling, so he knows that he will never run out of gas between the two cities and the gifts will not be stolen. In addition, it always selects the path where the largest road is as minimum as possible.Can you help the Santa Claus determine what X value of gas he should use?InputThe first line is composed of two integers N (1 ≤ N ≤ 105) and M (N−1 ≤ M ≤ min(2×105, N×(N−1)/2)) is the number of cities and the number of roads. Next come M lines with three integers u, v, w (u ≠ v) (0 ≤ u, v < N) (1 ≤ w ≤ 106), that there is a road connecting it with weight (you can use the road in any direction). After M lines, has an integer Q\r\n(1 ≤ Q ≤ 105) is the number of queries that Santa Claus will perform. Each of Q lines is composed of two integers x and y (0 ≤ x, y < N) corresponds to the query: how much X gasoline that Santa Claus will need to supply in every city between the cities x and y.OutputPrint Q lines each with an integer X is the answer of the dilemma what Santa Claus is passed.ExampleInput:7 11\r\n0 1 15\r\n0 2 53\r\n1 2 40\r\n1 3 46\r\n2 4 31\r\n2 5 29\r\n3 4 3\r\n4 5 29\r\n3 6 11\r\n4 6 8\r\n5 6 40\r\n7\r\n0 1\r\n0 3\r\n0 6\r\n2 4\r\n4 6\r\n5 1\r\n1 1Output:15\r\n40\r\n40\r\n29\r\n8\r\n40\r\n0",
  "sample_input": "Input:7 11\r\n0 1 15\r\n0 2 53\r\n1 2 40\r\n1 3 46\r\n2 4 31\r\n2 5 29\r\n3 4 3\r\n4 5 29\r\n3 6 11\r\n4 6 8\r\n5 6 40\r\n7\r\n0 1\r\n0 3\r\n0 6\r\n2 4\r\n4 6\r\n5 1\r\n1 1Output:15\r\n40\r\n40\r\n29\r\n8\r\n40\r\n0",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/CNURI18H",
  "scraped_at": "2025-08-17 00:34:11",
  "test_cases": [
    {
      "input": "7 11\r\n0 1 15\r\n0 2 53\r\n1 2 40\r\n1 3 46\r\n2 4 31\r\n2 5 29\r\n3 4 3\r\n4 5 29\r\n3 6 11\r\n4 6 8\r\n5 6 40\r\n7\r\n0 1\r\n0 3\r\n0 6\r\n2 4\r\n4 6\r\n5 1\r\n1 1",
      "expected_output": "15\r\n40\r\n40\r\n29\r\n8\r\n40\r\n0",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2 8\n1 9 7\n7 6 6\n6 5 8\n3 5 8\n1 4 4\n9 2 3\n7 10 5\n3 10 7\n5 3 4\n8 10 1\n4 8 3\n8\n3 7\n9 6\n4 7\n9 1\n4 5\n7 4\n9 9",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "7 4\n3 4 8\n10 3 6\n8 9 5\n6 6 9\n9 7 7\n6 3 9\n8 10 1\n8 7 10\n10 4 1\n7 10 6\n9 6 10\n1\n9 8\n5 2\n2 4\n7 6\n8 2\n3 7\n2 3",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "9 1\n10 4 9\n4 9 5\n3 8 6\n9 9 6\n3 4 3\n10 10 10\n2 3 8\n7 10 1\n5 5 10\n7 7 2\n7 4 6\n1\n4 10\n9 10\n1 4\n4 4\n1 10\n6 8\n1 9",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "78 27\n27 77 20\n32 8 77\n43 82 54\n36 48 93\n69 19 70\n71 68 52\n13 61 46\n58 55 22\n21 89 50\n20 29 84\n92 70 40\n60\n27 77\n12 60\n44 98\n30 85\n91 96\n29 44\n1 59",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "50 21\n21 53 20\n60 6 26\n75 80 20\n24 70 90\n33 85 42\n69 96 22\n52 38 89\n12 29 45\n75 30 35\n87 20 1\n58 94 49\n99\n97 17\n83 37\n7 26\n46 19\n21 16\n50 4\n56 36",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "8 87\n77 60 89\n9 100 27\n63 58 60\n15 20 94\n56 88 25\n100 91 17\n24 33 59\n77 80 18\n78 10 68\n80 12 6\n46 94 64\n96\n55 43\n14 91\n92 15\n73 3\n45 61\n95 50\n73 67",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "17 28\n72 62 12\n63 38 98\n7 78 92\n59 92 85\n56 96 58\n90 16 87\n48 37 26\n38 42 63\n99 68 39\n1 87 21\n49 90 75\n66\n49 78\n38 29\n52 59\n64 67\n68 21\n11 19\n14 74",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "65 53\n20 92 48\n37 58 100\n86 74 58\n59 29 87\n41 2 39\n47 55 26\n81 24 97\n74 66 50\n21 26 27\n19 5 5\n31 82 13\n33\n94 56\n69 12\n89 38\n72 89\n94 47\n100 84\n95 29",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "7 35\n34 38 34\n38 25 16\n20 40 50\n24 16 27\n11 31 48\n22 18 29\n32 35 33\n39 44 6\n39 40 10\n12 32 16\n39 40 12\n36\n46 15\n21 33\n27 44\n28 48\n50 31\n42 37\n47 26",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "46 34\n10 49 10\n13 51 47\n6 18 31\n23 12 23\n18 38 31\n31 28 50\n17 26 7\n15 24 15\n10 9 15\n39 32 25\n41 22 14\n34\n22 9\n28 21\n5 26\n34 21\n29 14\n50 18\n45 52",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "35 25\n17 33 33\n29 16 27\n39 22 48\n30 51 44\n6 19 16\n52 42 23\n47 15 42\n34 31 20\n44 31 18\n12 29 41\n14 27 29\n23\n32 39\n40 34\n18 35\n25 33\n14 41\n11 19\n43 8",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "22 15\n41 42 30\n10 48 37\n16 44 26\n22 9 51\n45 12 46\n33 47 38\n9 17 42\n48 38 26\n38 40 33\n52 51 22\n17 46 38\n5\n42 50\n41 34\n33 49\n34 37\n24 12\n10 10\n40 6",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "12 41\n16 20 21\n37 40 33\n49 19 48\n46 5 46\n45 5 16\n38 33 40\n10 33 52\n40 29 34\n51 21 19\n44 13 34\n33 12 40\n24\n32 30\n18 33\n40 5\n6 40\n52 25\n29 32\n43 26",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "40 17\n29 25 52\n12 38 34\n5 15 42\n48 48 39\n32 35 48\n11 41 36\n13 13 25\n50 10 32\n25 23 30\n10 26 48\n48 42 29\n47\n21 27\n30 35\n15 6\n35 17\n36 52\n7 38\n36 52",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "32 45\n30 26 50\n13 26 49\n27 39 29\n11 31 11\n26 33 26\n26 24 45\n42 39 26\n44 6 41\n31 17 18\n29 42 48\n15 15 5\n52\n31 48\n26 46\n31 8\n28 25\n8 49\n13 36\n36 25",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "105 105\n105 105 105\n105 105 105\n105 105 105\n105 105 105\n105 105 105\n105 105 105\n105 105 105\n105 105 105\n105 105 105\n105 105 105\n105 105 105\n105\n105 105\n105 105\n105 105\n105 105\n105 105\n105 105\n105 105",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "105 105\n105 105 105\n105 105 105\n105 105 105\n105 105 105\n105 105 105\n105 105 105\n105 105 105\n105 105 105\n105 105 105\n105 105 105\n105 105 105\n105\n105 105\n105 105\n105 105\n105 105\n105 105\n105 105\n105 105",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 104\n105 104 104\n105 1 105\n104 1 105\n2 2 1\n105 1 105\n104 1 104\n2 1 1\n2 104 104\n1 1 104\n104 105 1\n104 105 104\n105\n2 2\n104 105\n104 1\n2 105\n104 2\n2 104\n1 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "105 104\n104 2 104\n105 2 1\n104 2 105\n105 104 104\n104 2 104\n2 105 104\n1 1 104\n1 105 104\n1 1 2\n105 2 105\n104 104 104\n1\n104 2\n104 105\n1 1\n105 105\n1 1\n2 2\n2 104",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:54",
  "total_test_cases": 20
}
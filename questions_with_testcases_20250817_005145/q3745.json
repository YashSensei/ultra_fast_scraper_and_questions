{
  "problem_code": "problems",
  "title": "Matrix inverse",
  "tags": [],
  "text": "Let p a prime number. A set Fp={0, 1 ... p-1} equipped with the mod p addition and multiplication is a finite field. In this problem you have to compute the multiplicative inverse of some Fpvalued (quadratic) matrices.The input consists of blocks. The structure of a block is:n pA1, 1... A1, n...An, 1... An, nwhere p is a prime number, 1ij are in Fp. The last block followed by 0 0.The output for each block is either the multiplicative inverse of a given matrix if it exists or the word \"singular\"ExampleInput:4 21 1 1 11 1 0 10 0 0 10 1 0 13 73 5 00 5 16 6 62 21 11 03 54 0 02 4 10 2 33 70 1 46 1 22 1 10 0Output:0 1 0 10 0 1 11 1 0 00 0 1 06 3 35 1 13 3 20 11 1singularsingular",
  "sample_input": "Input:4 21 1 1 11 1 0 10 0 0 10 1 0 13 73 5 00 5 16 6 62 21 11 03 54 0 02 4 10 2 33 70 1 46 1 22 1 10 0Output:0 1 0 10 0 1 11 1 0 00 0 1 06 3 35 1 13 3 20 11 1singularsingular",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/MIFF",
  "scraped_at": "2025-08-17 00:34:31",
  "test_cases": [
    {
      "input": "4 21 1 1 11 1 0 10 0 0 10 1 0 13 73 5 00 5 16 6 62 21 11 03 54 0 02 4 10 2 33 70 1 46 1 22 1 10 0",
      "expected_output": "0 1 0 10 0 1 11 1 0 00 0 1 06 3 35 1 13 3 20 11 1singularsingular",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "7 2 3 6 9 5 5 1 9 5 10 8 7 4 6 3 4 2 8 1 6 8 4 3 6 10 4 3 4 4 8 8 4 8 1 6 4 3 10",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "3 10 10 1 7 9 3 9 1 9 9 1 10 3 4 1 6 9 10 6 2 7 5 8 1 2 10 4 1 4 9 8 10 1 3 7 8 5 7",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "7 7 5 6 2 4 10 6 6 9 4 9 4 2 3 1 1 6 7 10 9 1 7 3 8 3 4 7 2 4 6 3 1 2 6 7 8 2 2",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "70 82 60 65 43 12 53 16 3 35 7 83 11 70 96 24 34 98 82 68 21 99 36 45 36 85 58 46 27 2 79 4 50 11 70 4 28 12 48",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "43 84 13 80 76 96 54 17 88 76 94 80 78 5 36 50 3 3 100 86 23 88 10 4 97 39 46 26 23 29 1 78 24 83 76 73 5 14 51",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "85 58 94 24 78 68 74 83 65 1 74 35 71 27 95 64 15 21 1 25 15 20 51 95 75 69 92 20 20 57 95 5 15 95 87 85 80 79 37",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "96 31 4 29 33 52 32 51 17 9 25 8 82 37 22 95 17 53 57 14 65 45 76 66 15 13 83 36 77 22 49 19 64 54 32 18 10 50 22",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "74 62 24 44 22 56 75 97 64 52 17 40 7 54 11 41 50 6 15 55 5 23 17 91 77 64 15 38 37 3 50 68 98 15 67 82 83 44 26",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "422 275 302 138 192 431 438 395 311 110 66 103 124 447 386 302 213 195 366 76 436 95 203 59 199 84 143 233 72 83 488 160 153 118 280 188 169 265 205",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "90 395 418 214 179 68 293 208 161 132 328 189 480 190 249 408 51 250 140 185 161 313 241 104 78 175 274 222 245 397 210 487 459 248 409 457 151 155 207",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "193 62 373 258 244 306 494 143 470 428 135 433 370 202 292 153 490 428 126 165 390 308 56 260 449 225 289 175 272 284 277 402 161 81 82 435 453 396 90",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "70 334 396 205 343 113 454 299 411 117 249 396 158 147 119 137 141 63 200 289 456 492 452 267 491 420 255 375 411 473 390 479 267 239 92 299 435 251 399",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "329 210 316 471 130 400 375 143 343 212 398 247 353 408 434 391 401 457 123 119 319 153 423 342 431 318 323 119 327 366 242 489 177 92 214 462 113 388 379",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "383 127 278 136 309 356 214 336 493 149 493 488 458 314 204 486 66 416 200 333 204 191 446 360 380 327 460 404 247 183 89 82 186 207 267 143 295 111 104",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "482 309 481 123 331 320 431 494 409 71 490 227 312 234 449 51 284 72 185 219 107 118 80 113 326 286 175 162 163 492 367 486 100 139 202 140 151 414 112",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 1 1000 1 2 2 1000 1 1 1 1 1 1000 999 999 999 1 1000 999 1000 2 999 2 2 1 999 1000 999 1 999 1000 1000 1000 999 2 1000 1 1000 999",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "999 1000 1 1 1 2 1000 1000 999 999 1000 1 999 1000 1000 1000 999 2 1000 1000 1000 999 2 999 1 1000 1000 1 2 1 2 1 2 1 1000 1000 1000 999 1000",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:57",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:38:17"
}
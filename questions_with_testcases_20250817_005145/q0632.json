{
  "problem_code": "problems",
  "title": "Wise And Miser",
  "tags": [],
  "text": "Jack is a wise and miser man. Always tries to save his money.One day, he wants to go from city A to city B. Between A and B, there are N number of cities (including B and excluding A) and in each city there are M buses numbered from 1 to M. And the fare of each bus is different. Means for all N×M buses, fare (K) may be different or same. Now Jack has to go from city A to city B following these conditions:At every city, he has to change the bus.And he can switch to only those buses which have number either equal or 1 less or 1 greater to the previous.You are to help Jack to go from A to B by spending the minimum amount of money.N, M, K ≤ 100.InputLine 1: N MLine 2: N×M GridEach row lists the fares the M busses to go form the current city to the next city.OutputSingle Line containing the minimum amount of fare that Jack has to give.ExampleInput:5 5\r\n1 3 1 2 6\r\n10 2 5 4 15\r\n10 9 6 7 1\r\n2 7 1 5 3\r\n8 2 6 1 9Output:10Explanation1 → 4 → 1 → 3 → 1: 10",
  "sample_input": "Input:5 5\r\n1 3 1 2 6\r\n10 2 5 4 15\r\n10 9 6 7 1\r\n2 7 1 5 3\r\n8 2 6 1 9Output:10",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/MISERMAN",
  "scraped_at": "2025-08-17 00:33:04",
  "test_cases": [
    {
      "input": "5 5\r\n1 3 1 2 6\r\n10 2 5 4 15\r\n10 9 6 7 1\r\n2 7 1 5 3\r\n8 2 6 1 9",
      "expected_output": "10",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "9 6\n3 6 5 2 10\n10 1 7 5 6\n5 10 5 4 5\n5 8 4 10 1\n9 7 5 10 8",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "5 4\n8 10 4 6 5\n10 4 5 4 7\n6 6 3 6 8\n5 2 5 1 2\n8 2 10 1 4",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "2 1\n9 6 5 9 3\n4 5 5 8 4\n2 2 8 5 8\n5 6 5 1 5\n10 7 6 10 8",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "11 23\n9 91 62 85 72\n57 65 83 7 90\n51 24 78 58 21\n11 27 97 3 3\n6 24 31 77 55",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "90 57\n25 92 60 96 17\n51 65 74 35 72\n90 56 28 52 27\n14 87 66 59 9\n83 98 65 28 70",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "34 43\n50 10 99 16 93\n72 58 74 39 79\n80 54 53 40 18\n17 50 13 64 30\n24 96 80 17 53",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "17 29\n85 99 100 28 63\n96 12 48 71 31\n2 85 31 97 4\n45 91 68 52 96\n42 57 11 68 30",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "86 76\n30 18 74 73 64\n52 20 9 84 14\n45 28 17 9 87\n60 42 58 26 44\n38 72 23 56 83",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "321 409\n97 169 401 357 338\n306 489 263 461 316\n187 192 201 276 213\n58 481 276 407 448\n161 127 349 192 375",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "363 170\n352 250 450 213 202\n334 206 345 59 491\n317 132 481 97 266\n161 219 451 292 309\n239 273 482 195 258",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "304 397\n362 444 259 362 70\n409 188 450 114 152\n453 256 354 113 182\n281 353 77 265 60\n399 60 116 413 256",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "342 67\n230 197 98 235 410\n355 178 190 263 272\n389 463 59 308 124\n50 93 125 203 479\n437 120 156 347 298",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "320 386\n311 292 469 359 271\n431 90 61 72 243\n414 265 161 274 165\n168 289 395 363 392\n443 384 190 469 267",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "112 240\n98 293 175 239 238\n460 286 252 67 481\n114 129 233 386 389\n265 411 129 191 430\n223 63 326 370 162",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "387 205\n413 489 97 82 381\n368 265 166 209 171\n286 104 311 337 253\n100 339 418 368 219\n483 381 295 360 163",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 1\n2 1000 2 999 1000\n1 1000 1 1 999\n999 1000 999 2 2\n2 1 1 1 999\n999 1 999 1 2",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 999\n1 2 1000 1000 1\n2 1 1 1000 1000\n1000 999 2 1 999\n1 2 1000 999 1000\n999 1000 999 999 2",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:47",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:36:39"
}
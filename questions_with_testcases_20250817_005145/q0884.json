{
  "problem_code": "problems",
  "title": "Dinostratus Numbers",
  "tags": [],
  "text": "Recent archaeological discoveries of researchers from the University of Alberta in Canada showed that a strange sequence of numbers were found on the walls of the pyramids of Egypt, the ruins of Macchu Picchu and the stones of Stonehenge. Intrigued by the apparent coincidence researchers triggered the Department of Mathematics to decipher what were special about that sequence or numbers.The discovery was startling. All numbers were generated by matrices of Dinostratus. Dinostratus was a famous Greek mathematician who lived from 390 to 320 BC and worked in major geometry problems like squaring the circle. Dinostratus studied matrices M of size 3×3 formed by nine distinct integers with the property that for every position (i, j), i = 1...3, j = 1...3 of matrix, the element mi, jis a multiple of its neighbors mi-1, j, mi-1, j-1and mi, j-1(if they exist). In his honor, we say that n is aDinostratus numberif exist a matrix M with the property above such that m3, 3= n.See an example with n = 36.1  2  4\r\n3  6 12\r\n9 18 36The relationship between the Dinostratus numbers, the pyramids of Egypt, Stonehenge and the stones of the ruins of Machu Picchu still remains a great mystery. But researchers in Alberta are willing to study these magic numbers. Your task is to make a program that receives an integer n and checks whether this is a Dinostratus number.InputThe input consists of several instances. Each instance is given by a line containing an integer n (1 ≤ n ≤ 1048576). The input ends with end of file.OutputFor each instance, you must print an identifier Instance k, where k is the number of the current instance. On the next line printyesif n is a Dinostratus number otherwise printno.ExampleInput:36\r\n37\r\n38Output:Instance 1\r\nyes\r\nInstance 2\r\nno\r\nInstance 3\r\nno",
  "sample_input": "1  2  4\r\n3  6 12\r\n9 18 36",
  "sample_output": "Input:36\r\n37\r\n38Output:Instance 1\r\nyes\r\nInstance 2\r\nno\r\nInstance 3\r\nno",
  "link": "https://www.spoj.com/problems/DINONUM",
  "scraped_at": "2025-08-17 00:33:14",
  "test_cases": [
    {
      "input": "1  2  4\r\n3  6 12\r\n9 18 36",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "36\r\n37\r\n38",
      "expected_output": "Instance 1\r\nyes\r\nInstance 2\r\nno\r\nInstance 3\r\nno",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "8 10 6\n9 4 6\n3 3 6",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "1 5 7\n2 6 8\n9 7 8",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "8 6 4\n2 9 9\n10 5 9",
      "expected_output": "To be computed",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "74 54 21\n33 48 84\n48 22 56",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "86 17 16\n16 58 43\n70 77 72",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "64 56 5\n59 85 32\n52 15 75",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "95 83 66\n83 86 27\n79 9 63",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "55 97 63\n27 100 94\n43 3 56",
      "expected_output": "To be computed",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "361213 51894 427289\n356963 116671 320761\n397825 106123 158233",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "145978 405617 120041\n368772 210684 480985\n305742 104321 357908",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "391843 203433 297939\n313061 178766 252545\n280283 371589 385913",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "498807 370578 493898\n217979 222297 156232\n191328 367247 238658",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "482094 470876 109966\n92738 404303 168706\n460768 291596 383073",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "228498 431291 131348\n195572 175689 283122\n268763 56057 358204",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "84948 292385 61168\n270455 200437 214708\n60414 297902 494712",
      "expected_output": "To be computed",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "1000000 1000000 1000000\n1000000 1000000 1000000\n1000000 1000000 1000000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000000 1000000 1000000\n1000000 1000000 1000000\n1000000 1000000 1000000",
      "expected_output": "To be computed",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "1 2 999999\n999999 1000000 1\n999999 1 999999",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:48",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "WIND VANE",
  "tags": [],
  "text": "Wind vane is an instrument for showing the direction of the wind.Dream city is in the shape of a matrix of dimensions mxn. To monitor the direction of the wind in the city, wind vanes are placed in every unit cell of the city. According to the direction of the wind, these wind vanes turn themselves. Lets assume that there are only 4 directions North, East, West and South denoted by (‘N’, ’E’, ’W’, ’S’). We know the initial direction of the wind vanes.We denote the direction of change of wind by 0 (clockwise) and 1 (anti-clockwise)Function “Change(x1, y1, x2, y2, direction)”, changes the direction of the vanes in the sub-matrix (from x1, y1 to x2, y2) in the specified ‘direction’(for example if the initial state of a cell is ‘N’ and the direction is clockwise, then the cell changes to ‘E’)The ‘Change’ may occur any time. We need to know the direction of the wind at any unit cell at any instant.Direction (x, y) should print the direction of the vane at the cell (x, y).InputThe first line of the input consists two integers m and n - the dimensions of the city. Then follows the description of the matrix which denotes the direction of the vanes. The next line contains an integer c, the number of commands to process. Each command can be either of the format \"C x1 y1 x2 y2 d\" or \"D x y\".OutputProcess the commands and print whenever necessary.Constraints1 ≤ m ≤ 10001 ≤ n ≤ 1000each character in the matrix is one among {'N', 'E', 'W', and 'S'}1 ≤ c ≤ 100001 ≤ x1, y1, x2, y2, x, y ≤ 1000d = 0 (clockwise) or 1 (anti-clockwise)x1 ≤ x2, y1 ≤ y2ExampleInput:5 5\r\nESWNE\r\nNWWWN\r\nEEESE\r\nSSWSN\r\nSNWEN\r\n5\r\nC 2 1 4 1 1\r\nD 3 1\r\nD 3 3\r\nC 2 1 5 2 0\r\nD 3 1Output:N\r\nE\r\nE",
  "sample_input": "Input:5 5\r\nESWNE\r\nNWWWN\r\nEEESE\r\nSSWSN\r\nSNWEN\r\n5\r\nC 2 1 4 1 1\r\nD 3 1\r\nD 3 3\r\nC 2 1 5 2 0\r\nD 3 1Output:N\r\nE\r\nE",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/WINDVANE",
  "scraped_at": "2025-08-17 00:34:02",
  "test_cases": [
    {
      "input": "5 5\r\nESWNE\r\nNWWWN\r\nEEESE\r\nSSWSN\r\nSNWEN\r\n5\r\nC 2 1 4 1 1\r\nD 3 1\r\nD 3 3\r\nC 2 1 5 2 0\r\nD 3 1",
      "expected_output": "N\r\nE\r\nE",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "7 1\nurrzad\nqlmyzixz\nqgjk\ngxprodnd\nmi\n9\n4 10 6 8 8\nqcl 1 5 10 3 9\n6 2\no 6 2\n3 8\nxy 2 8\n4 6 2 2 8\nimaqh 8 8 2 7 5\n4 5\ny 2 6",
      "expected_output": "0\n0\n0\n0\n0\n0\n9\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "9 4\nasbq\nqsz\ntvuizxidql\ntqsdkzxaqu\nttsedjtmd\n5\n1 7 3 7 6\nhtkst 3 6 6 6 1\n1 9\nyvl 1 8\n9 3\nfw 9 4\n3 2 10 5 8\ndyje 1 6 3 10 4\n5 2\nwoud 9 3",
      "expected_output": "0\n0\n0\n0\n0\n0\n5\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "8 4\nwxurouzwvz\nlbtbjbem\nquhzhrz\nvajn\nit\n2\n1 3 4 4 4\njz 2 9 1 6 3\n7 9\nnhqn 9 1\n9 1\nrwf 4 6\n10 4 3 1 6\nb 8 2 2 9 9\n2 2\naq 4 10",
      "expected_output": "0\n0\n0\n0\n0\n0\n2\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "79 80\nz\nhdgfzvx\nay\ncmgrtqoic\nggguocdp\n38\n34 90 44 33 42\nh 91 26 91 7 44\n64 49\nktoz 33 30\n70 5\nq 78 71\n39 10 78 55 60\nvh 77 37 10 60 63\n69 77\nap 54 76",
      "expected_output": "0\n0\n0\n0\n0\n0\n38\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "57 99\nihphfrkfht\nrlimzzhhto\ntvupfa\ngf\nlwkntrtvsb\n14\n18 79 71 5 76\nn 13 51 99 86 79\n52 78\nzu 41 61\n59 1\nojrhz 38 62\n4 73 7 57 88\nnpbt 50 41 38 12 62\n24 2\nrumde 20 28",
      "expected_output": "0\n0\n0\n0\n0\n0\n14\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "57 100\npwsds\ngdsdfgehc\nck\nilcgqxfle\nainovw\n50\n43 66 95 85 51\ntgzu 54 73 84 74 100\n14 26\nqel 32 66\n65 31\neu 28 79\n42 53 57 41 41\nuevm 97 36 31 49 56\n80 31\nwrgqp 60 12",
      "expected_output": "0\n0\n0\n0\n0\n0\n50\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "45 6\nvtyinz\ntg\nyyhwwh\ninr\nenyhxm\n71\n20 38 67 28 24\nrh 84 70 88 77 84\n1 56\njhqht 39 62\n47 61\nlgrgv 1 33\n56 45 83 55 16\npsm 37 9 23 36 33\n19 9\nf 40 75",
      "expected_output": "0\n0\n0\n0\n0\n0\n71\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "82 52\nkikwe\nxjflberbbo\nyjjtzrrgke\nwrvxpnazac\njwpob\n99\n84 39 51 18 9\nbhdtw 95 7 24 43 41\n99 43\nstom 20 10\n97 71\ni 1 46\n51 97 5 56 96\not 76 52 68 1 35\n1 96\nanbmb 25 39",
      "expected_output": "0\n0\n0\n0\n0\n0\n99\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "364 104\nu\nsqwkvkamrp\nggzvnzq\nymafu\nvdo\n212\n315 261 393 213 300\njcrh 396 51 383 465 473\n415 392\nh 443 198\n364 113\nihsiu 461 249\n214 226 452 472 355\np 403 272 214 147 199\n444 262\nvypqp 211 345",
      "expected_output": "0\n0\n0\n0\n0\n0\n212\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "459 406\nvnfnorwwv\nhirsns\nbfx\ncabrylde\nmkl\n426\n141 199 428 140 73\nc 458 249 223 269 182\n236 441\nzt 433 77\n480 347\nxogv 295 353\n92 312 139 153 252\nbf 215 153 354 382 137\n223 174\nl 323 377",
      "expected_output": "0\n0\n0\n0\n0\n0\n426\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "303 373\nsqhsxer\nijple\nd\nq\nxw\n498\n83 414 499 350 337\num 177 339 444 131 318\n270 162\ncga 251 397\n153 130\nipolo 240 216\n177 340 167 438 78\ncqdti 301 351 197 430 391\n57 269\nf 234 111",
      "expected_output": "0\n0\n0\n0\n0\n0\n498\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "319 467\njkqjbd\njeuzyr\nmkgg\nhypuru\nzkddy\n228\n342 217 71 230 229\ny 163 259 128 71 467\n317 338\neq 162 379\n390 204\nl 185 67\n55 372 111 220 451\nccubb 245 122 481 415 429\n194 108\nm 102 490",
      "expected_output": "0\n0\n0\n0\n0\n0\n228\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "225 184\ndqflsqjm\nrbecjph\nvipe\ndkeurtjlp\ncoyzten\n468\n50 211 370 165 395\nufajo 71 52 54 391 273\n342 480\nqpaip 178 221\n316 396\nwt 292 338\n97 311 346 304 445\nkccv 55 148 360 363 243\n299 153\nazf 179 243",
      "expected_output": "0\n0\n0\n0\n0\n0\n468\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "395 377\nxq\nyweo\nnrzedj\nypxl\nnocfee\n424\n414 84 427 297 441\nli 397 109 237 474 229\n430 83\nnsgo 160 226\n328 240\nyt 66 499\n114 325 181 156 244\nb 111 381 312 325 420\n267 340\nyl 233 428",
      "expected_output": "0\n0\n0\n0\n0\n0\n424\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "312 431\nsvpzqbse\nswa\nmhedkgp\nmvpty\ncfbq\n323\n238 154 479 238 463\nulq 200 382 344 478 91\n325 389\nkecl 427 106\n349 193\nd 490 387\n66 255 461 407 412\nflwc 72 339 399 150 172\n266 225\nf 286 66",
      "expected_output": "0\n0\n0\n0\n0\n0\n323\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\nczllrfzo\nhqpgrjipy\norbujjaq\njm\nhxginh\n1000\n1000 1000 1000 1000 1000\nd 1000 1000 1000 1000 1000\n1000 1000\nkl 1000 1000\n1000 1000\nxlv 1000 1000\n1000 1000 1000 1000 1000\nvn 1000 1000 1000 1000 1000\n1000 1000\nulm 1000 1000",
      "expected_output": "0\n0\n0\n0\n0\n0\n1000\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\niuzywqq\nspv\nw\nrzdt\ncz\n1000\n1000 1000 1000 1000 1000\no 1000 1000 1000 1000 1000\n1000 1000\nzkxay 1000 1000\n1000 1000\nfmtz 1000 1000\n1000 1000 1000 1000 1000\nssi 1000 1000 1000 1000 1000\n1000 1000\nsslm 1000 1000",
      "expected_output": "0\n0\n0\n0\n0\n0\n1000\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 1000\nupjfgq\ngkfsomn\nzzmjxlpiz\nzbp\nrnqhxf\n1000\n999 2 1 1 1000\neaj 2 1 1 999 1000\n2 2\nkxyq 999 1\n999 2\nftcak 1000 2\n2 2 1000 999 999\npknv 2 999 1 1 1\n1000 999\nlcllu 1000 1",
      "expected_output": "0\n0\n0\n0\n0\n0\n1000\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1000 1\nwzvjmrzxv\ngysv\nlicfwpp\njzxk\nprhhbi\n2\n2 999 2 1 1000\ns 2 999 2 1 1000\n1000 1000\navlq 1000 1\n1000 1\nvqzwi 999 2\n2 999 1000 1 2\ncscka 1 1 1 2 1\n2 999\nsp 999 2",
      "expected_output": "0\n0\n0\n0\n0\n0\n2\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:52",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:28"
}
{
  "problem_code": "problems",
  "title": "Prime queries",
  "tags": [],
  "text": "You are given a simple task.Given a sequence A[i] with N numbers such that 1 ≤ i ≤ N. You have to perform Q operations on a given set of numbers.Operations:A V l, Add the value V to element with index l.R a l r, Replace all the elements of sequence with index i such that l ≤ i ≤ r with a.Q l r, Print the number of elements with index i such that l ≤ i ≤ r and A[i] is prime number and A[i] ≤ 107.No number in the sequence ever will exceed 109.Constraints1 ≤ N ≤ 1051 ≤ Q ≤ 105V ≤ 103A[i] ≤ 108a ≤ 1071 ≤ l ≤ r ≤ N.InputFirst line contains N as number of sequence elements and Q as number of operations to be performed. Second line contains N initial elements of the sequence. After that each of the next Q lines contains one operation to be performed on the sequence.OutputPrint each value in newline as stated above.ExampleInput:5 10\r\n1 2 3 4 5\r\nA 3 1\r\nQ 1 3\r\nR 5 2 4\r\nA 1 1\r\nQ 1 1\r\nQ 1 2\r\nQ 1 4\r\nA 3 5\r\nQ 5 5\r\nQ 1 5Output:2\r\n1\r\n2\r\n4\r\n0\r\n4",
  "sample_input": "Input:5 10\r\n1 2 3 4 5\r\nA 3 1\r\nQ 1 3\r\nR 5 2 4\r\nA 1 1\r\nQ 1 1\r\nQ 1 2\r\nQ 1 4\r\nA 3 5\r\nQ 5 5\r\nQ 1 5Output:2\r\n1\r\n2\r\n4\r\n0\r\n4",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/PRMQUER",
  "scraped_at": "2025-08-17 00:33:38",
  "test_cases": [
    {
      "input": "5 10\r\n1 2 3 4 5\r\nA 3 1\r\nQ 1 3\r\nR 5 2 4\r\nA 1 1\r\nQ 1 1\r\nQ 1 2\r\nQ 1 4\r\nA 3 5\r\nQ 5 5\r\nQ 1 5",
      "expected_output": "2\r\n1\r\n2\r\n4\r\n0\r\n4",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "8 4\n8 10 1 6 4\n6 7\nu 9 5\n7 2\nmyh 3 9\n9 5 6\nnfwbo 8 8 10\n8 2\nblif 4 10\n9 10\nnkue 8 2\n7 7\nc 9 10\n6 4\napw 4 10\n6 7\nj 9 2\n1 10\npn 10 3\n10 10\nsw 1 5",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "3 4\n1 1 9 9 3\n7 8\nravr 3 6\n2 2\nkhs 1 4\n5 7 6\nbt 6 2 8\n2 1\norpgs 8 4\n6 2\npbou 5 7\n4 5\nix 3 5\n3 5\ndsr 10 2\n3 6\nfq 4 1\n3 9\nyt 1 3\n5 2\ne 4 2",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "9 7\n8 4 9 7 8\n1 2\nwzpy 7 7\n9 10\nlpzgg 7 2\n5 2 8\nvnx 4 6 2\n9 6\ncg 4 6\n2 4\nte 10 10\n10 7\nm 1 4\n10 6\nlo 7 6\n6 5\ng 9 3\n1 5\nig 4 10\n9 7\npygou 8 5",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "28 88\n83 41 82 36 39\n49 11\ni 82 100\n86 89\ng 38 30\n17 12 14\nz 26 18 62\n15 68\nhkp 15 13\n46 4\nyq 98 21\n15 44\nkcfq 72 24\n100 20\nktzar 95 22\n39 87\nioiv 19 48\n41 97\ndbbe 41 21\n19 86\nj 22 100",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "63 60\n89 45 43 100 4\n28 31\ni 35 96\n64 1\nqz 89 50\n98 98 59\ny 91 83 9\n76 29\nxsfsh 54 41\n60 39\ncakiw 30 42\n100 28\nhm 74 30\n39 74\noa 3 89\n73 24\nqbjn 69 61\n68 77\nbv 90 43\n5 43\nhg 74 38",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "20 57\n66 17 24 56 63\n51 60\nz 32 31\n85 67\ngmnfn 7 11\n26 66 19\nmrdb 33 98 18\n19 21\nhe 48 67\n30 8\nvsynd 6 74\n62 88\nuuqnr 27 68\n89 89\ntwzqi 67 97\n21 80\nuoo 56 11\n93 60\naulkl 3 77\n62 88\nqwe 53 30",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "86 70\n100 16 61 10 23\n59 75\nf 91 49\n57 16\nyftab 58 10\n34 26 78\ngelpw 56 4 95\n21 9\nuodl 91 21\n83 71\nqfp 1 50\n18 9\nsnf 55 61\n27 16\npjwy 81 76\n77 71\niuab 1 2\n83 33\nkgadk 14 84\n85 58\nyvijz 10 88",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "54 28\n39 43 48 48 50\n12 28\nz 51 1\n52 26\nhhkcz 54 32\n26 15 51\ndrxc 44 93 16\n47 67\nxh 90 10\n43 70\nt 72 56\n75 11\nclv 30 77\n49 89\ntdmzc 70 37\n84 94\nas 3 61\n86 59\nqyhl 42 84\n70 22\nmhms 62 87",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "283 389\n182 111 212 326 193\n498 444\nmjlqw 523 347\n234 111\nax 314 417\n248 362 324\nxld 473 293 476\n179 269\nfppzj 424 305\n104 173\nqk 185 281\n484 416\nwvu 408 416\n285 242\ndngm 337 433\n513 215\netb 487 288\n319 233\nbcoii 371 432\n392 475\ns 480 394",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "514 363\n208 305 178 490 374\n273 352\nzuiq 349 126\n265 209\ntgb 171 109\n211 87 520\nb 179 484 458\n160 395\nli 469 125\n97 402\ntuegt 282 361\n171 514\nj 441 419\n460 503\nvg 253 188\n421 371\nwhepn 511 196\n170 119\nk 492 255\n266 338\nvprus 281 293",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "252 380\n244 491 95 104 431\n65 66\no 424 397\n416 427\nhbhol 260 402\n478 85 409\neuzj 337 165 319\n329 514\nbd 464 206\n405 473\ng 103 511\n316 194\ncwdn 192 520\n417 76\ndamih 388 78\n202 363\nlsnn 491 132\n231 181\nvu 271 472\n63 361\nrosi 71 333",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "415 488\n325 273 118 348 336\n506 129\nn 334 84\n230 501\nsmdzb 178 438\n317 501 435\nc 109 182 144\n339 353\ng 403 305\n314 369\nrpx 316 111\n103 171\ne 516 416\n239 320\ng 202 386\n173 512\nworny 296 518\n397 385\nig 348 53\n426 509\nqjw 145 129",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "423 340\n487 310 101 108 113\n354 293\nulm 76 120\n337 381\nv 296 478\n230 128 269\nfqe 468 497 202\n402 134\nxty 225 171\n188 496\ndkl 294 98\n136 499\ngntdy 400 475\n453 461\nrrh 419 266\n305 143\nka 483 312\n329 288\ncj 197 290\n373 342\nebxag 521 398",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "228 451\n99 86 91 82 509\n395 366\nsa 82 517\n192 414\nrdpot 478 440\n62 72 323\np 250 267 188\n382 388\nkb 360 62\n308 518\nmm 260 272\n381 340\nmp 422 328\n337 271\nr 52 315\n435 291\npyycs 197 457\n515 407\njfs 300 512\n487 475\nsmk 151 62",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "370 249\n412 164 248 515 497\n258 207\nn 67 130\n461 202\nlxbi 64 436\n275 429 404\noip 211 501 141\n422 104\nunt 412 462\n160 356\nwdch 466 209\n91 210\nvrjj 363 328\n54 258\nxtpii 211 451\n103 99\nbd 99 283\n279 335\naam 300 369\n80 136\nnznnb 442 73",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1051 1051\n1051 1051 1051 1051 1051\n1051 1051\nxtt 1051 1051\n1051 1051\nml 1051 1051\n1051 1051 1051\nkuy 1051 1051 1051\n1051 1051\nq 1051 1051\n1051 1051\nguaa 1051 1051\n1051 1051\nyfrwk 1051 1051\n1051 1051\nophsn 1051 1051\n1051 1051\nysncs 1051 1051\n1051 1051\nlypj 1051 1051\n1051 1051\nyg 1051 1051",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1051 1051\n1051 1051 1051 1051 1051\n1051 1051\nxubu 1051 1051\n1051 1051\nbv 1051 1051\n1051 1051 1051\nsis 1051 1051 1051\n1051 1051\nnhkqc 1051 1051\n1051 1051\nj 1051 1051\n1051 1051\nfy 1051 1051\n1051 1051\noa 1051 1051\n1051 1051\ne 1051 1051\n1051 1051\nxipvu 1051 1051\n1051 1051\nwijd 1051 1051",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 1\n1 1051 2 2 1050\n1 1051\nfvzcb 1 1\n1050 1050\nt 1051 1\n1051 1051 1050\nquo 1 1051 1050\n1 2\nffvzo 1 1051\n1050 1051\nka 1 1050\n1051 2\nkbd 1051 1\n1050 1051\npgrh 2 2\n1051 2\nm 1051 1051\n1051 1\nxln 1050 1\n1050 1\nnvu 1 1050",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1050 1051\n2 1 1050 1051 2\n2 1\nb 1051 1051\n1050 2\ndsuih 1051 1050\n1 1050 2\ncs 1051 1050 1051\n1050 1\nyu 1 1\n2 1050\nlnai 1051 1050\n2 1050\nhk 1 2\n1051 1051\nzuas 1 2\n1 1051\nvfcfk 1 1\n1 1051\nc 2 1\n1051 2\nqe 1 1051",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:49",
  "total_test_cases": 20
}
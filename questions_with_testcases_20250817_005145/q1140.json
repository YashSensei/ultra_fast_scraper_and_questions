{
  "problem_code": "problems",
  "title": "Coconuts",
  "tags": [],
  "text": "A group of n castle guards are voting to determine whether African swallows can carry coconuts.  While each guard has his \r\nown personal opinion on the matter, a guard will often vote contrary to his beliefs in order to avoid disagreeing with the \r\nvotes of his friends.You are given a list of guards who either do or do not believe in the coconut-carrying capacity of African swallows, and a \r\nlist of all pairs of guards who are friends.  Your task is to determine how each guard must vote in order to minimize the sum \r\nof the total number of disagreements between friends and the total number of guards who must vote against their own beliefs.InputThe input to this problem will contain multiple test cases.  Each test case begins with a single line containing an \r\ninteger n (where 2 ≤ n ≤ 300), the number of guards, and an integer m (where 1 ≤ m ≤ n(n-1)/2), the number of pairs of \r\nguards who are friends.  The second line of the test case contains n integers, where the ith integer is 1 if the ith guard \r\nbelieves in the ability of African swallows to carry coconuts, and 0 otherwise.  Finally, the next m lines of the test case \r\neach contain two distinct integers i and j (where 1 ≤ i, j ≤ n), indicating that guards i and j are friends.  Guards within \r\neach pair of friends may be listed in any order, but no pair of guards will be repeated. The input is terminated by an \r\ninvalid test case with n = m = 0, which should not be processed.OutputFor each input test case, print a single line containing the minimum possible sum of the total number of disagreements \r\nbetween all friends plus the total number of guards who must vote against their own beliefs.ExampleInput:3 3\r\n1 0 0\r\n1 2\r\n1 3\r\n3 2\r\n6 6\r\n1 1 1 0 0 0\r\n1 2\r\n2 3\r\n4 2\r\n3 5\r\n4 5\r\n5 6\r\n0 0Output:1\r\n2",
  "sample_input": "Input:3 3\r\n1 0 0\r\n1 2\r\n1 3\r\n3 2\r\n6 6\r\n1 1 1 0 0 0\r\n1 2\r\n2 3\r\n4 2\r\n3 5\r\n4 5\r\n5 6\r\n0 0Output:1\r\n2",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/COCONUTS",
  "scraped_at": "2025-08-17 00:33:47",
  "test_cases": [
    {
      "input": "3 3\r\n1 0 0\r\n1 2\r\n1 3\r\n3 2\r\n6 6\r\n1 1 1 0 0 0\r\n1 2\r\n2 3\r\n4 2\r\n3 5\r\n4 5\r\n5 6\r\n0 0",
      "expected_output": "1\r\n2",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3 10\n7 5 8\n4 9\n6 6\n10 9\n3 5\n5 10 7 1 8 8\n9 4\n8 8\n8 2\n8 2\n1 4\n1 6\n5 1",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "6 7\n8 8 9\n10 9\n5 5\n7 2\n1 2\n6 5 9 10 7 10\n1 4\n4 8\n1 4\n6 5\n6 6\n3 9\n9 4",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "1 3\n9 10 3\n3 3\n3 2\n8 3\n2 6\n7 10 5 8 2 9\n6 6\n8 2\n8 3\n3 7\n5 3\n2 2\n5 9",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "64 13\n99 35 47\n16 75\n68 32\n86 74\n4 8\n29 54 36 81 6 79\n35 20\n83 11\n10 93\n38 38\n98 84\n30 16\n62 20",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "50 15\n42 33 65\n94 56\n95 4\n6 12\n47 1\n70 75 92 2 55 94\n1 42\n40 61\n84 43\n72 98\n95 13\n66 56\n10 31",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "22 38\n91 75 3\n8 58\n82 62\n46 92\n68 89\n88 99 84 14 2 34\n11 67\n85 30\n20 92\n29 12\n57 65\n73 30\n72 55",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "63 64\n98 15 40\n16 17\n65 94\n10 26\n6 44\n64 34 11 66 71 100\n10 11\n59 19\n53 18\n49 19\n71 14\n22 55\n55 35",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "52 24\n87 37 22\n91 45\n65 1\n46 64\n72 74\n72 72 46 77 12 3\n19 68\n17 8\n7 59\n40 54\n3 47\n49 92\n50 79",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "92 56\n130 72 62\n18 136\n90 99\n142 53\n44 64\n110 74 28 49 55 138\n58 148\n147 32\n131 53\n124 35\n132 89\n66 147\n53 53",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "142 53\n48 130 147\n102 48\n82 22\n127 96\n145 19\n95 141 99 73 68 30\n37 63\n124 115\n59 112\n103 105\n30 61\n127 124\n127 91",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "87 73\n87 127 149\n38 88\n15 26\n36 108\n150 74\n76 55 107 130 117 66\n38 21\n83 31\n69 147\n34 18\n72 129\n25 46\n50 91",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "115 17\n58 140 127\n39 118\n119 43\n71 144\n38 46\n128 86 67 64 109 101\n102 108\n30 82\n87 64\n54 71\n73 125\n16 124\n55 85",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "101 43\n127 53 137\n35 52\n25 75\n37 37\n135 49\n122 135 119 49 128 74\n60 43\n132 51\n47 16\n117 58\n104 53\n43 106\n88 88",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "145 71\n79 48 144\n89 42\n98 66\n146 50\n34 19\n115 57 70 70 45 27\n74 144\n84 54\n60 50\n53 116\n102 142\n33 101\n91 48",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "96 63\n71 76 45\n147 147\n109 23\n95 22\n22 80\n24 90 140 28 143 64\n112 145\n86 150\n123 123\n32 56\n70 23\n112 36\n119 64",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "300 300\n300 300 300\n300 300\n300 300\n300 300\n300 300\n300 300 300 300 300 300\n300 300\n300 300\n300 300\n300 300\n300 300\n300 300\n300 300",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "300 300\n300 300 300\n300 300\n300 300\n300 300\n300 300\n300 300 300 300 300 300\n300 300\n300 300\n300 300\n300 300\n300 300\n300 300\n300 300",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 2\n300 2 300\n300 300\n2 1\n299 1\n2 299\n299 300 299 299 300 2\n299 299\n299 1\n300 299\n1 299\n2 300\n300 300\n1 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "299 1\n2 2 1\n300 300\n300 1\n1 2\n1 300\n1 299 2 300 300 1\n299 299\n2 1\n300 1\n299 300\n299 300\n1 1\n2 299",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:49",
  "total_test_cases": 20
}
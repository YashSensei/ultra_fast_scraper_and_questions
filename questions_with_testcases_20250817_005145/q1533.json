{
  "problem_code": "problems",
  "title": "Sharmeen Loves Mozahid Loves Sharmeen [ HARD ]",
  "tags": [],
  "text": "Mozahid and Sharmeen loves each other and spend a lots of time together. One day they found a string which contains only lowercase English letters. As Mozahid loves Sharmeen very much he likes all ‘s’ in the string. On the other hand as Sharmeen loves Mozahid very much she likes all the ‘m’ in the string. Sharmeen always want to stay on both sides (left and right) of Mozahid so that no other girl can take him away from her :P. So, this time Mozahid gives her a task. Mozahid told her, if she can tell him how many different subsequence of ‘sms’ exist in that string, he will ensure her that no girl will take him away from her. As Sharmeen is not a programmer, she needs your help to perform this task. Can you do this for her?InputIn the first line given an integer T (1 ≤ T ≤ 10), the number of test cases.In each test case given a string S of size N (1 ≤ N ≤ 105) of lowercase English letters.OutputFor each test case print the number of different subsequence of ‘sms’ exist on that string in one line. For clearance ‘skmjssm’ has 2 different subsequence of ‘sms’.  {1, 3, 5} and {1, 3, 6} (1 based position). For better understanding see the sample input output.ExampleInput:2\r\nasdfmnsmdsms\r\nssmssmjmOutput:10\r\n4[ This problem originally written by MD. Mozahidul Islam Bhuiyan (kissu_pari_na) ]",
  "sample_input": "Input:2\r\nasdfmnsmdsms\r\nssmssmjmOutput:10\r\n4",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/MOZHSLM",
  "scraped_at": "2025-08-17 00:33:27",
  "test_cases": [
    {
      "input": "2\r\nasdfmnsmdsms\r\nssmssmjm",
      "expected_output": "10\r\n4",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4\n8\n6\n1\n4",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "4\n6\n6\n8\n9",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n8\n2\n4\n7\n10",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "19\n68943362\n12521511\n80040272\n78035220\n81897562\n80635415\n38600335\n72258190\n79326915\n49084678\n43408667\n80339823\n77971714\n87308561\n57076208\n991147\n21270962\n38495962\n87655348",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "20\n33252862\n84156924\n29377070\n29630827\n94725323\n30157834\n9575001\n81385948\n71646166\n96385543\n86630754\n86436604\n30782115\n12192701\n61165961\n61779035\n21088490\n4643741\n39900137\n40070134",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "20\n36713668\n81496136\n71136706\n52768173\n66938706\n90550719\n35508570\n20200132\n6917366\n68755032\n28739490\n89135771\n94787085\n60518926\n6511729\n12152013\n44213352\n17887792\n23131765\n46727022",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "15\n17969965\n49380637\n9988958\n93314632\n1501192\n96723082\n52491560\n65759414\n8727228\n69352842\n73344483\n15353542\n45745340\n59660938\n40401132",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "18\n91941566\n15773509\n87352401\n71061802\n97926395\n30073192\n28503706\n7912224\n14825910\n18530574\n61091803\n25468264\n65169177\n77102072\n9220471\n81075236\n52462926\n27824705",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "30\n92275\n62228\n13427\n80596\n34409\n9450\n98121\n48423\n52032\n33576\n30541\n45278\n84794\n56996\n24258\n76337\n3528\n72183\n4144\n26819\n92897\n11088\n61317\n27039\n69614\n63803\n24030\n64545\n28005\n59670",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "45\n18194\n73359\n87916\n92708\n60815\n28579\n83726\n94571\n24805\n28766\n80450\n90991\n58928\n82384\n68886\n73885\n55961\n8575\n61084\n78699\n70527\n54359\n1383\n748\n72309\n81678\n58671\n34657\n86651\n88502\n33990\n19764\n65783\n21312\n58204\n41193\n32698\n63647\n68558\n40731\n76853\n59751\n9027\n92026\n49185",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "67\n28317\n71735\n42914\n59933\n56001\n28673\n40588\n71521\n61276\n31696\n7549\n58160\n98661\n53784\n91729\n48300\n29683\n11761\n33994\n77360\n20836\n86070\n72827\n62223\n64706\n33039\n76484\n57638\n32198\n13864\n97501\n46974\n96075\n28285\n98294\n35940\n42377\n46687\n20005\n14667\n73275\n32079\n74535\n93592\n4915\n3443\n23839\n71343\n69756\n24715\n84294\n60994\n95783\n73189\n73212\n70965\n55949\n42015\n6886\n85421\n24340\n67240\n97563\n46053\n32851\n75233\n77825",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "20\n91927\n89214\n68287\n49625\n32505\n71254\n30585\n20434\n64617\n35484\n23121\n26008\n13663\n57873\n48192\n94676\n51243\n84873\n4274\n57940",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "69\n79146\n69798\n80546\n89144\n39512\n6705\n11479\n36208\n99204\n50266\n54695\n14244\n11334\n41549\n91209\n44992\n31490\n16325\n76303\n7934\n64519\n1618\n61686\n9284\n70592\n65290\n52142\n88443\n76736\n59111\n25973\n4973\n15455\n33385\n59095\n41971\n19176\n42953\n10029\n82251\n59219\n77417\n84125\n18923\n11154\n42807\n4978\n13585\n2535\n77068\n55058\n46180\n84143\n88334\n80539\n69518\n54267\n35625\n84034\n29718\n10200\n64631\n55358\n51955\n49635\n42611\n86916\n87595\n9409",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "57\n32635\n12545\n16528\n31966\n22943\n71493\n17678\n2889\n10139\n92067\n36240\n13604\n99378\n70331\n69747\n22963\n20320\n19776\n66002\n71222\n44562\n8704\n97960\n26447\n92536\n67496\n28259\n92776\n73616\n77780\n57345\n47965\n96859\n35838\n22156\n64600\n40436\n8625\n91403\n89212\n41715\n66990\n59119\n39548\n52511\n5046\n51581\n33289\n54117\n16398\n91573\n38532\n86453\n14775\n99698\n98800\n64284",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "105\n51660\n3915\n67361\n52115\n91890\n80953\n40807\n78000\n83418\n27220\n54783\n3224\n65728\n38107\n49162\n60704\n80394\n29365\n63072\n19013\n71735\n20831\n15000\n46727\n80395\n43473\n59454\n13355\n16903\n45568\n19527\n9359\n13931\n12160\n94131\n37464\n58880\n6629\n29778\n52879\n82857\n27251\n87519\n87535\n83327\n44683\n31186\n91207\n28143\n9939\n89048\n46874\n60323\n97007\n22348\n23415\n39258\n85526\n32569\n14504\n93259\n51441\n61811\n18528\n75346\n64134\n68361\n59337\n47622\n80996\n25745\n13838\n27903\n27455\n30463\n99870\n15073\n26682\n35172\n79912\n58060\n90047\n92144\n3862\n63835\n57871\n86901\n74397\n95155\n74247\n85162\n41443\n98890\n78402\n924\n94809\n25995\n65895\n62865\n88895\n83486\n71160\n75817\n17059\n31939",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "105\n72674590\n6863584\n82468404\n45493797\n32377544\n11197906\n3824944\n47090740\n60852156\n28836293\n55595963\n7453683\n15982560\n53302761\n86384735\n4882864\n87129662\n70412573\n99193990\n79395878\n67683142\n45804959\n68377918\n45401366\n47227047\n57903433\n8820804\n59143220\n74203340\n14966954\n60842748\n22454228\n13393922\n41826961\n23927554\n8246385\n24224595\n14084621\n50251964\n82968687\n29840100\n37819016\n34308925\n16337068\n82373539\n45232715\n17724211\n9773345\n45946095\n80491383\n23773248\n23607485\n27586935\n88800517\n95765527\n27286735\n93162356\n12638563\n50948282\n32244136\n40384096\n70285902\n17457898\n26033837\n15975024\n82249827\n77043066\n12829008\n92114856\n49194215\n57991147\n47969410\n21955173\n58953990\n82290451\n26593167\n32372266\n21777988\n92755491\n52502549\n80157460\n67321405\n63415380\n81860583\n34133379\n26762292\n96456025\n37791240\n56291141\n82008931\n22954668\n57311049\n78357731\n6099359\n83310158\n27576717\n11828179\n83249215\n90040930\n20867504\n94541592\n97172141\n787665\n74543655\n68210608",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "105\n55388258\n50080846\n34516417\n31467222\n80151220\n41411541\n50078711\n98800301\n53488353\n41736966\n3822127\n5096692\n38397922\n97010570\n22345184\n62627101\n42441029\n29548091\n18355849\n5283699\n84978173\n48819480\n95543178\n21850865\n64206716\n91874910\n25575648\n52127091\n67473601\n85204662\n95663804\n18283876\n5640417\n68167240\n82158814\n14270270\n63802550\n79588704\n71441346\n19550610\n43847807\n94420866\n2570931\n64236540\n22156723\n13157264\n55897423\n44353036\n82133455\n2528743\n50799697\n64946155\n25620984\n84253228\n15734885\n14576469\n72849718\n90243187\n1137228\n81881755\n58315976\n24351345\n56176475\n11464481\n2333430\n37762619\n40004916\n37723455\n89104421\n16784250\n61982590\n12587481\n50891539\n27916992\n65446921\n14265561\n4385468\n93192397\n75434058\n10104501\n24632013\n28526454\n34519984\n37194703\n43484668\n30516094\n32779974\n83331691\n76131588\n61122332\n15091381\n19534896\n27449653\n19790699\n62190069\n55040447\n37907423\n31987741\n5900534\n74878128\n61950269\n10492484\n50404166\n49907154\n87635826",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "105\n1\n92932072\n100000000\n100000000\n1\n1\n44952793\n1\n43524339\n1\n100000000\n71418474\n100000000\n42566432\n73862188\n1\n34318082\n100000000\n26112578\n1\n1\n84069957\n100000000\n1\n100000000\n1\n100000000\n100000000\n44480275\n100000000\n82783177\n1\n100000000\n99248301\n100000000\n55668170\n1\n1\n1\n100000000\n100000000\n1\n69121134\n76000878\n1\n100000000\n58773283\n100000000\n75723160\n1\n40528792\n1\n100000000\n3604962\n1\n1\n1\n14010490\n1\n100000000\n100000000\n1\n1\n1\n1\n1\n100000000\n77505765\n100000000\n44604766\n100000000\n100000000\n100000000\n100000000\n1\n1\n100000000\n1\n26857284\n1\n1\n80516498\n1\n94624975\n1\n1\n100000000\n100000000\n100000000\n1\n100000000\n100000000\n1\n77896740\n1\n1\n1\n55945062\n100000000\n86871860\n100000000\n1\n100000000\n100000000\n73312594",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 105)"
    },
    {
      "input": "2\n1\n23556974",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 2)"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:50",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Shooting the balloons!",
  "tags": [],
  "text": "Dhinakaran is very fond of games. Shooting the balloons is his favourite. In this game, there are ‘n’ balloons which are arranged in a line. Every balloon has a unique number which is the number of points earned if that balloon is shot. A constraint here is that you should shoot contiguous balloons. So, Dhinakaran wanted to find the maximum number of points he could earn. He sought help from a friend who told him that it was the famous maximum contiguous sum problem. So Dhinakaran learnt about it and was happy. But Dhinakaran is not someone who gets satisfied so easily. He wanted to find the k-th smallest possible contiguous sum! Now, his friend was not able to solve this. So he came to me. I suggested that he approach you. You are a great coder, aren’t you? Help him out.There will be at least 1 balloon and at most 50000 balloons, and each balloon can have at least0point and at most109points.InputThe first line of each data set contains the number of balloons and value of k.1 ≤ k ≤ (n × (n + 1)) / 2The second line contains N space separated integers.OutputThe output for each test case should be a single line containing the k-th smallest possible contiguous sum of points that could be achieved.ExampleInput:5 3\r\n1 2 3 4 5Output:3Explanation of Sample CaseThe first 5 smallest contiguous subsequences are 1, 2, 3, 1 + 2, 4",
  "sample_input": "Input:5 3\r\n1 2 3 4 5Output:3",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/ABA12E",
  "scraped_at": "2025-08-17 00:33:48",
  "test_cases": [
    {
      "input": "5 3\r\n1 2 3 4 5",
      "expected_output": "3",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4 8\n2 7 8 7 8",
      "expected_output": "0\n0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "6 3\n9 5 5 5 1",
      "expected_output": "0\n0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "4 8\n5 9 4 5 4",
      "expected_output": "0\n0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "30 50\n92 86 77 67 22",
      "expected_output": "0\n0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "60 28\n9 58 52 28 25",
      "expected_output": "0\n0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "40 26\n75 79 94 42 77",
      "expected_output": "0\n0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "72 60\n54 63 29 11 25",
      "expected_output": "0\n0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "26 3\n66 10 39 77 19",
      "expected_output": "0\n0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "156 91\n69 445 488 202 230",
      "expected_output": "0\n0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "146 354\n105 461 438 472 484",
      "expected_output": "0\n0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "387 53\n150 491 485 52 109",
      "expected_output": "0\n0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "199 115\n51 240 122 375 242",
      "expected_output": "0\n0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "274 192\n140 129 402 424 300",
      "expected_output": "0\n0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "307 207\n221 169 474 434 485",
      "expected_output": "0\n0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "205 456\n342 167 472 119 109",
      "expected_output": "0\n0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000 1000 1000",
      "expected_output": "0\n0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000 1000 1000",
      "expected_output": "0\n0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 1000\n1 1000 999 1 999",
      "expected_output": "0\n0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 1\n1000 1000 1000 1 2",
      "expected_output": "0\n0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:52",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:27"
}
{
  "problem_code": "problems",
  "title": "Tinku got a job",
  "tags": [],
  "text": "Tinku has a new job at BIT. The job pays well, and provides Tinku  with a house to live within BIT. His only job is to deliver goods to  Main Building. The goods are to be collected from a pickup point.  Therefore, a typical day of work for Tinku begin with him leaving his  home, collecting the goods from the pickup point, and ends with him  delivering the goods to the Main Building. Pickup points are arbitrary  locations in the BIT campus.The whole BIT campus can be represented as a 2-D plane. Tinku's House, Main Building and pickup points can only be present atinteger coordinates. You are given the coordinates of Tinku's house and the Main Building (See the input format carefully). The distance considered is the Euclidean distance, i.e., distance from point (a, b) to (c, d) will be sqrt((a-c)2+ (b-d)2). A main building can also be a pickup point.The job contract ensures that Tinku worksat most for H hours. Tinku is new at this job, and is very nervous. ACM people being  friendly as always, decide to ease him up by finding the number of  possible pickup points such that Tinku is able to finish his work.InputFirst line denotes number of test cases T. T test cases follow.Each test case is consists of integers A, B, C, H, V. Tinku's house is at coordinate (A, C), and Main Building is at (B, C). Tinku works at most for H hours and has walks with a speed of V units/hour.T = 1000-100 ≤ A, B, C ≤ 1000 < V ≤ 400 < H ≤ 40OutputA single line with the number of possible pickup points.ExampleInput:21 -1 0 1 3-5 5 10 2 2Output:50",
  "sample_input": "Input:21 -1 0 1 3-5 5 10 2 2Output:50",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/TINKUJOB",
  "scraped_at": "2025-08-17 00:34:38",
  "test_cases": [
    {
      "input": "21 -1 0 1 3-5 5 10 2 2",
      "expected_output": "50",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "9 10 6 1 5 10 3 9 8 7",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "7 2 3 9 9 10 5 10 4 6",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "9 6 2 6 6 2 9 10 7 2",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "8 83 15 6 67 81 86 72 55 76",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "6 69 93 70 76 27 3 85 32 73",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "41 19 17 29 57 32 30 85 50 69",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "7 48 27 62 82 93 34 52 67 10",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "27 48 40 94 9 43 22 69 87 4",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "141 480 286 244 204 297 427 398 54 427",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "91 442 354 492 431 239 95 300 336 158",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "262 171 385 288 473 373 388 172 154 94",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "125 493 444 200 377 258 85 208 65 136",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "491 107 175 230 293 132 215 260 217 212",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "337 206 271 402 376 305 358 106 402 146",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "398 317 123 85 154 51 425 180 110 350",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 1 999 1 1000 2 999 2 999 999",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "999 2 1000 2 999 2 1000 2 2 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:58",
  "total_test_cases": 20
}
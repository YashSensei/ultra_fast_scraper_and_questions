{
  "problem_code": "problems",
  "title": "IQ Team",
  "tags": [],
  "text": "In Byteland we can study only math and IT.In the university there are n math students and m IT students.Rector Byteasar knows IQ of every student. He wants to make the best team, which would solve the hardest human being problems. So he decided to pick team with the highest summary IQ.Of course it's not everything. He wants to make team in which each student knows another students from team.Every student from IT know other student from IT and same with math students.Help him finding team with the largest summary IQ and in which every student from team knows another students from team.InputIn first line n, m, k (0 < n ≤ 400, 0 < m ≤ 400, 0 ≤ k ≤ n × m) which means number of math students, number of IT students, number of friendships between IT and math student.In next k lines pairs0 < ai ≤ n, 0 < bi ≤ m, which means ai student from math knows bi student from IT.In next line n numbers, IQ of i-th math student.In next line m numbers, IQ of i-th IT student.OutputOutput in one line : number of team's summary IQ.ExampleInput:3 2 3\r\n1 1\r\n2 1\r\n2 2\r\n1 3 1\r\n1 2Output:6",
  "sample_input": "Input:3 2 3\r\n1 1\r\n2 1\r\n2 2\r\n1 3 1\r\n1 2Output:6",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/IQTEAM",
  "scraped_at": "2025-08-17 00:33:54",
  "test_cases": [
    {
      "input": "3 2 3\r\n1 1\r\n2 1\r\n2 2\r\n1 3 1\r\n1 2",
      "expected_output": "6",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3 9 8\n5 5\n3 8\n3 10\n10 5 3\n5 10",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "3 8 4\n5 7\n9 9\n3 10\n4 7 3\n4 5",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "9 1 1\n4 8\n7 3\n2 9\n7 7 4\n3 5",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "56 19 23\n77 7\n94 68\n25 72\n31 35 33\n20 37",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "16 96 31\n30 67\n28 47\n78 75\n75 87 77\n52 2",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "92 29 59\n73 86\n82 67\n33 92\n62 91 61\n21 68",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "48 78 90\n6 54\n19 88\n10 60\n28 92 62\n78 94",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "84 68 65\n67 50\n99 33\n94 74\n44 89 7\n59 6",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "121 199 109\n69 101\n141 136\n34 153\n141 155 96\n161 39",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "35 74 59\n178 141\n55 122\n125 37\n142 45 113\n137 45",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "34 107 130\n72 121\n181 184\n125 26\n35 66 41\n192 55",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "161 86 190\n198 46\n44 82\n188 188\n126 47 23\n113 125",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "153 90 169\n180 82\n171 74\n99 141\n139 25 30\n122 31",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "175 148 190\n43 155\n60 121\n45 86\n195 40 59\n107 131",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "68 29 107\n78 92\n55 78\n107 93\n169 166 133\n156 162",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "400 400 400\n400 400\n400 400\n400 400\n400 400 400\n400 400",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "400 400 400\n400 400\n400 400\n400 400\n400 400 400\n400 400",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 399 399\n1 1\n1 400\n399 1\n1 399 2\n2 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 1 1\n1 400\n2 2\n399 399\n1 400 2\n399 400",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:52",
  "total_test_cases": 20
}
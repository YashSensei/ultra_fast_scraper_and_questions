{
  "problem_code": "problems",
  "title": "Run, Snipe, Run",
  "tags": [],
  "text": "Kevin, the Snipe, and her children (apparently Kevin is a girl) were reunited, all thanks to Russell and Mr. Fredricksen! Now the two humans have embarked to their next adventure, towards Poland, but Kevin just noticed her children stole Mr. Fredricksen's cane without him realizing. It must be returned before they go too far away!Kevin is not sure where they are now, but knows they went with their flying house somewhere to the northeast, and has narrowed it down to a few points where they might be resting. She will send some of her children to warn them of the missing cane. Each snipe can check multiple places, but since the house should be flying again soon, they can't waste any time and should always move to the north and/or to the east. Additionally, she wants to send the minimum number possible as long as every location on her list is visited.Your job is to help her determine this number.InputInput consists of several test cases.Each test case begins with a single integerN(1 ≤N≤ 1000), the number of places the house can be.Nlines follow, each containing two integers,eiandni, the distance (in miles) to the east and to the north, respectively of theithplace related to Kevin's position. 0 ≤ei,ni≤ 10000.Input is terminated by a line containing a single integer zero.OutputFor each test case output a single integer: the minimum number of snipes needed to reach every place.ExampleInput:51 12 23 34 45 551 52 43 34 25 150 11 11 22 22 30Output:151",
  "sample_input": "Input:51 12 23 34 45 551 52 43 34 25 150 11 11 22 22 30Output:151",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/SNIPE",
  "scraped_at": "2025-08-17 00:34:01",
  "test_cases": [
    {
      "input": "51 12 23 34 45 551 52 43 34 25 150 11 11 22 22 30",
      "expected_output": "151",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "9 1 3 2 5 10 10 2 7 2 8 9 6 6 7 7",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "6 1 9 1 2 10 9 8 3 5 3 7 4 2 5 7",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "9 6 4 1 1 3 2 7 4 4 2 5 2 4 10 4",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "4 12 64 22 45 54 38 97 36 54 44 67 34 48 75 33",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "94 15 96 39 93 91 25 21 18 7 61 30 3 7 54 74",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "27 6 93 65 3 77 93 38 69 44 85 30 19 84 31 69",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "74 46 95 18 90 44 78 41 98 18 93 35 44 53 64 47",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "13 63 20 78 52 56 33 15 85 53 42 31 90 95 10 75",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "334 239 359 58 348 428 264 348 184 418 137 404 67 406 191 377",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "102 109 235 119 344 345 454 451 238 417 173 319 488 109 316 473",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "281 156 424 401 241 274 425 460 428 401 120 139 450 413 221 413",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "174 264 457 187 496 409 344 435 385 141 135 134 416 389 475 151",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "358 258 370 280 375 339 488 119 347 94 201 490 285 386 86 131",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "391 387 325 169 379 137 425 95 493 178 269 117 146 61 65 94",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "470 355 74 136 59 147 355 177 112 241 393 283 54 334 471 130",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "999 999 1000 2 1000 2 2 1 999 1000 2 1 999 1 2 1000",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 1 1 999 1 1000 2 999 1 1 2 1 1 1000 1000 1000",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:52",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:27"
}
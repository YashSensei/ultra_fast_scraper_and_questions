{
  "problem_code": "problems",
  "title": "SLIS",
  "tags": [],
  "text": "Rachit, Sandeep, Yogesh, Vikram and Shubham are very good friends. They participated in a contest MNNIT INSOMNIA as a team but there was a problem which was not solved by any of the teams. So they were desperate to solve that problem. After the contest they asked you for your help to solve the problem. Help them to solve the problem. The problem is as follows:There is an array of length n consisting of only 0 and 1 as elements. You have to answer q queries. There are two type of queries:Type 0: There is l and r. You have to change each 0 to 1 and each 1 to 0 from l to r (both inclusive).Type 1: print the length of longest non decreasing subsequence of the array.Note: Indexing is 1 based.A subsequence is a sequence that can be derived from another sequence by deleting some elements without changing the order of the remaining elements.InputFirst line consists of two integers n and q where n is length of array and q is number of queries.Second line consists of array of length n without spaces.After that there are q lines containing type of query. And for type 0 query it has two integers l and r.1<=n,q<=10^5, 1<=l<=r<=nOutputPrint a single line for each query of type 1 containg length of longest non decreasing subsequence.ExampleInput:5 5\r\n10111\r\n1\r\n0 3 5\r\n1\r\n0 2 3\r\n1Output:4\r\n4\r\n3",
  "sample_input": "Input:5 5\r\n10111\r\n1\r\n0 3 5\r\n1\r\n0 2 3\r\n1Output:4\r\n4\r\n3",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/QUERYIT",
  "scraped_at": "2025-08-17 00:34:18",
  "test_cases": [
    {
      "input": "5 5\r\n10111\r\n1\r\n0 3 5\r\n1\r\n0 2 3\r\n1",
      "expected_output": "4\r\n4\r\n3",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "10 4\n1\n8\n2 3 2\n9\n5 1 7\n8",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "9 9\n8\n2\n9 10 10\n6\n8 6 8\n6",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "7 3\n5\n7\n1 4 5\n1\n6 9 6\n10",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "37 65\n60\n31\n5 69 5\n45\n13 8 21\n33",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "1 68\n79\n12\n47 58 41\n74\n86 94 18\n100",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "21 26\n49\n32\n26 100 34\n31\n68 73 25\n2",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "60 91\n81\n57\n46 15 74\n75\n43 21 41\n33",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "30 11\n42\n25\n81 2 90\n5\n47 90 17\n29",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "455 378\n350\n440\n209 377 346\n494\n368 177 283\n335",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "80 368\n181\n175\n326 233 420\n296\n163 192 232\n241",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "193 282\n122\n278\n65 452 150\n411\n310 385 412\n353",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "180 352\n402\n155\n397 410 195\n300\n407 398 295\n104",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "386 262\n200\n226\n238 51 268\n347\n489 201 440\n420",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "67 369\n95\n252\n105 255 152\n429\n431 114 358\n113",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "287 472\n356\n493\n369 131 144\n97\n261 391 369\n426",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000\n1000\n1000 1000 1000\n1000\n1000 1000 1000\n1000",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000\n1000\n1000 1000 1000\n1000\n1000 1000 1000\n1000",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "999 2\n2\n1000\n2 999 1\n999\n999 2 1000\n1",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 1000\n999\n999\n1 999 2\n1\n999 999 999\n999",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:54",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:52"
}
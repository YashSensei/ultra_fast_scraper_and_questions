{
  "problem_code": "problems",
  "title": "Homemade Asteroids",
  "tags": [],
  "text": "Pew pew pew!Everyone loves Asteroids, the classic arcade game involving senselessly blasting asteroids into submission with a spaceship. In fact, you love it so much that you built your very own version to play at home! Unfortunately, it sucks.Your version of the game is played on a 2D plane, containing your ship (a dot at coordinates ($X_S$, $Y_S$)) and $N$ ($1 \\leq N \\leq 1000$) stationary, triangular, positive-area asteroids. The $i$th asteroid has vertices at coordinates ($X_{Ai}$, $Y_{Ai}$), ($X_{Bi}$, $Y_{Bi}$), and ($X_{Ci}$, $Y_{Ci}$). All coordinates in the input are integers with absolute values no greater than $10^9$, and no two objects occupy any of the same space (even on their edges or vertices).Your game only permits you to fire a single missile, which travels in a straight line, destroying every asteroid that it comes in contact with (even on its edges or vertices). However, it doesn't exactly move very smoothly - instead, it starts at your ship at frame 0, and after every frame, its x-coordinate increases by $X_D$, and its y-coordinate by $Y_D$. These variables also have absolute values no greater than $10^9$, and at least one of them is guaranteed to be non-zero. After frame $F$ ($1 \\leq F \\leq 1000$), the missile simply disappears.There are $T$ ($1 \\leq T \\leq 20$) scenarios as described above. For each, you'd like to predict how many different asteroids your missile will be able to take out before frame $F+1$.InputFirst line: 1 integer, $T$For each scenario:First line: 2 integers, $N$ and $F$Second line: 4 integers, $X_S$, $Y_S$, $X_D$, and $Y_D$Next $N$ lines: 6 integers, $X_{Ai}$, $Y_{Ai}$, $X_{Bi}$, $Y_{Bi}$, $X_{Ci}$, and $Y_{Ci}$, for $i = 1..N$OutputFor each scenario:1 integer, the number of asteroids that will be destroyed by the missileExampleInput:14 44 17 4 -25 16 15 18 12 916 13 13 11 14 1020 9 20 7 18 722 5 23 11 27 6Output:2Explanation of SampleThe following grid shows the layout of the game, with your ship marked with an \"S\", and the missile's location at each frame marked with that frame's number:As can be seen, the missile destroys the first asteroid during frame 1, and then the third asteroid during frame 4. It does not destroy the second asteroid, even though its line of fire goes through it, as it does not intersect the asteroid during any of the frames. It also doesn't destroy the last asteroid, as it stops travelling after frame 4.",
  "sample_input": "Input:14 44 17 4 -25 16 15 18 12 916 13 13 11 14 1020 9 20 7 18 722 5 23 11 27 6Output:2",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/UOFTBC",
  "scraped_at": "2025-08-17 00:33:57",
  "test_cases": [
    {
      "input": "14 44 17 4 -25 16 15 18 12 916 13 13 11 14 1020 9 20 7 18 722 5 23 11 27 6",
      "expected_output": "2",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "10 4 6 1 3 2 10 8 4 10 3 7 10 9 9 9 9 7 3 5 8 6 10 9 6",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "1 10 3 1 4 3 2 10 10 9 4 5 8 3 3 10 8 5 2 5 3 1 4 4 9",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "6 4 7 7 6 2 6 2 2 6 2 5 10 2 6 6 1 9 8 6 7 7 1 8 6",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "89 50 33 14 30 15 23 80 12 40 14 24 25 21 88 13 94 80 92 54 23 35 66 54 72",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "47 31 55 9 45 8 85 89 25 48 83 22 92 5 11 91 46 14 19 77 61 77 81 72 64",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "50 90 15 15 69 33 27 39 51 71 43 57 94 2 9 64 18 26 38 96 93 31 21 87 9",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "53 69 89 60 58 26 17 43 47 10 29 12 58 28 35 89 77 83 8 76 65 68 57 29 8",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "24 30 54 63 9 14 92 34 26 15 67 83 90 71 45 26 72 12 33 31 24 36 8 1 76",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "333 332 407 377 221 253 365 189 241 472 339 108 195 171 383 274 213 265 352 322 300 94 94 383 276",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "455 396 397 123 171 213 53 144 149 193 462 250 373 85 375 107 257 312 181 400 219 471 415 324 497",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "107 146 84 266 456 228 453 64 179 54 256 135 282 178 270 168 190 277 299 71 225 471 357 378 99",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "404 369 475 230 268 102 202 151 452 296 270 114 94 286 183 197 58 177 319 215 229 493 272 256 278",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "478 415 133 253 355 148 104 282 412 299 205 248 218 302 454 360 275 491 374 278 143 347 393 224 272",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "124 73 165 122 362 240 140 409 174 397 107 451 336 406 474 372 61 349 219 99 120 365 121 248 423",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "419 468 299 157 139 445 207 192 76 393 74 355 437 372 390 421 345 61 381 447 294 183 191 219 149",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 999 2 1 999 1000 1000 999 2 999 999 2 999 2 2 2 1 999 2 999 999 2 1 1000 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "999 1000 1000 999 999 1000 999 1000 1000 2 999 1000 1000 1000 999 1 1000 2 1 1 2 2 1 999 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:52",
  "total_test_cases": 20
}
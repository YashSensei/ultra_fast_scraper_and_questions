{
  "problem_code": "problems",
  "title": "Bombing",
  "tags": [],
  "text": "It's a cruel war which kills millions of people and series of cities were ruined. In order to stop it, let's bomb the opponent's base.It seems to be not a hard work in circumstances of street battles, however, you'll be encountered a much more difficult instance: recounting exploits of the military. In the bombing action, the commander will dispatch a group of bombers with weapons having the huge destructive power to destroy all the targets in a line. Thanks to the outstanding work of our spy, the positions of all opponents' bases had been detected and marked on the map, consequently, the bombing plan will be sent to you.Specifically, the map is expressed as a 2D-plane with some positions of enemy's bases marked on. The bombers are dispatched orderly and each of them will bomb a vertical or horizontal line on the map. Then your commanded wants you to report that how many bases will be destroyed by each bomber. Notice that a ruined base will not be taken into account when calculating the exploits of later bombers.InputMultiple test cases. Each test cases starts with two non-negative integerN(N≤ 100,000) andM(M≤ 100,000) denoting the number of target bases and the number of scheduled bombers respectively. In the followingNline, there is a pair of integers separated by single space indicating the coordinate of position of each opponent's base. The followingMlines describe the bombers, each of them contains two integerscandd(0 ≤c≤ 1, -1,000,000,000 ≤d≤ 1,000,000,000).c= 0 means this bomber will bomb the line x =d,c= 1 means this bomber will bomb the line y =d.The input ends withN=M= 0.OutputFor each test case, outputMlines, thei-th line contains a single integer denoting the number of bases that were destroyed by the corresponding bomber in the input. Output a blank line after each test case.ExampleInput:3 2\r\n1 2\r\n1 3\r\n2 3\r\n0 1\r\n1 3\r\n0 0Output:2\r\n1Warning: large input/output data, be careful with certain languages",
  "sample_input": "Input:3 2\r\n1 2\r\n1 3\r\n2 3\r\n0 1\r\n1 3\r\n0 0Output:2\r\n1",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/BOMB2",
  "scraped_at": "2025-08-17 00:34:19",
  "test_cases": [
    {
      "input": "3 2\r\n1 2\r\n1 3\r\n2 3\r\n0 1\r\n1 3\r\n0 0",
      "expected_output": "2\r\n1",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3 2\n1 9\n8 5\n6 8\n4 1\n4 9\n4 5",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "10 4\n3 9\n9 4\n10 1\n1 7\n8 4\n7 7",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "10 1\n7 8\n4 3\n2 3\n9 1\n6 9\n1 7",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "34 77\n60 80\n56 84\n55 15\n90 49\n80 85\n40 59",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "18 30\n2 56\n73 12\n63 69\n80 64\n15 15\n12 32",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "71 67\n55 90\n32 24\n35 69\n97 14\n62 2\n20 60",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "43 70\n18 26\n15 16\n41 14\n90 7\n12 50\n38 43",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "13 83\n25 98\n39 67\n49 70\n57 17\n5 99\n40 76",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "19 23\n9 28\n41 12\n38 23\n23 6\n7 12\n19 22",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "50 36\n25 49\n34 26\n8 34\n33 44\n7 18\n26 17",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "29 24\n21 16\n45 18\n7 36\n31 39\n23 17\n34 11",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "39 31\n15 20\n48 31\n30 23\n15 46\n36 18\n47 6",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "27 17\n50 21\n37 16\n39 44\n21 25\n42 41\n48 28",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "5 24\n18 24\n10 48\n35 21\n18 21\n18 46\n6 32",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "38 13\n50 29\n12 47\n31 29\n29 25\n24 41\n30 7",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "100 100\n100 100\n100 100\n100 100\n100 100\n100 100\n100 100",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "100 100\n100 100\n100 100\n100 100\n100 100\n100 100\n100 100",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 99\n2 100\n2 100\n2 2\n99 100\n1 99\n99 2",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 100\n1 100\n2 1\n1 1\n99 2\n99 99\n100 1",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:57",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:38:15"
}
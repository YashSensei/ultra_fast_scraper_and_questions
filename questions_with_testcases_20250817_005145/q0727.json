{
  "problem_code": "problems",
  "title": "Enemies",
  "tags": [],
  "text": "Gangs are a big problem for every metropolis. Individuals that are member of some gang usually make enemies. When enemies meet each other they always want to fight, which makes the city a dangerous place to live. These gang members are also known as fighters. The local Police Department received anonymous information about a huge meeting between fighters at the central park, but the police chief, as always, wants to know if it is worth to send some of his men there. He knows that a fighter will fight one of his enemies only if all of them are in front of him. If one of the fighters doesn’t want to fight, then the meeting will be canceled. Moreover, each fighter can fight just one enemy at a time, and during this fight his other enemies wait, because they all want to beat him alone. He also knows that one police officer is enough in order to prevent two fighters from start a fight. Given these conditions and the enemy’s relationships of the fighters that will be at the central park, your job is to tell the chief if the meeting will happen or will be canceled. If it is going to happen, then the chief wants to know the minimum number of policemen he needs to send in order to prevent the fights at any moment of the meeting.InputEach test case is described using several lines. The first line contains two integers F (1 ≤ F ≤ 60) and R (1 ≤ R ≤ 1770) representing the number of fighters at the meeting and the number of enemy relationships, respectively. The fighters are identified by different integers from 0 to F - 1. Each of the next R lines contains two integers A and B representing an enemy relationship between the fighters A and B. You can consider that each enemy relationship will appear once in each test case and that if a fighter A is enemy of a fighter B then B is also enemy of A. The last test case is followed by a line containing F = 0 and R = 0.OutputFor each test, output in a line the minimum number of policemen necessary in order to prevent the fights or output ‘The meeting will be canceled’ if the meeting is going to be canceled.ExampleInput:4 4\r\n0 2\r\n0 3\r\n1 2\r\n1 3\r\n6 7\r\n0 2\r\n0 3\r\n0 4\r\n0 5\r\n1 2\r\n1 3\r\n1 4\r\n3 3\r\n0 1\r\n1 2\r\n2 0\r\n0 0Output:2\r\n2\r\nThe meeting will be canceled",
  "sample_input": "Input:4 4\r\n0 2\r\n0 3\r\n1 2\r\n1 3\r\n6 7\r\n0 2\r\n0 3\r\n0 4\r\n0 5\r\n1 2\r\n1 3\r\n1 4\r\n3 3\r\n0 1\r\n1 2\r\n2 0\r\n0 0Output:2\r\n2\r\nThe meeting will be canceled",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/ENEM",
  "scraped_at": "2025-08-17 00:33:19",
  "test_cases": [
    {
      "input": "4 4\r\n0 2\r\n0 3\r\n1 2\r\n1 3\r\n6 7\r\n0 2\r\n0 3\r\n0 4\r\n0 5\r\n1 2\r\n1 3\r\n1 4\r\n3 3\r\n0 1\r\n1 2\r\n2 0\r\n0 0",
      "expected_output": "2\r\n2\r\nThe meeting will be canceled",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "10 7\n8 2\n6 6\n4 6\n3 6\n6 6\n8 7\n2 8\n9 4\n1 4\n2 5\n7 8\n2 4\n8 10\n8 1\n2 9\n4 10\n9 1",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "2 8\n2 8\n5 10\n5 6\n10 1\n1 4\n2 7\n9 5\n4 1\n7 9\n3 4\n3 8\n7 2\n10 9\n7 3\n7 2\n1 4\n1 7",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "4 5\n4 2\n7 1\n10 9\n3 4\n2 8\n7 3\n7 2\n1 7\n6 2\n9 5\n10 2\n5 2\n3 6\n8 5\n2 7\n8 3\n5 3",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "80 88\n90 46\n92 34\n36 92\n2 58\n100 56\n49 89\n60 67\n73 50\n78 62\n40 78\n11 43\n77 38\n26 13\n32 49\n27 41\n87 74\n81 10",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "38 85\n15 11\n57 67\n74 34\n84 20\n87 56\n17 33\n93 10\n56 34\n98 80\n95 24\n83 69\n69 39\n35 2\n7 93\n4 98\n89 58\n55 15",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "84 21\n72 34\n52 87\n32 72\n1 78\n11 100\n20 46\n17 48\n38 12\n39 49\n33 38\n81 18\n52 19\n60 34\n17 32\n90 32\n63 13\n71 55",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "77 39\n40 75\n84 27\n92 29\n84 68\n1 62\n99 70\n78 92\n89 25\n49 96\n81 89\n14 23\n43 73\n27 73\n77 86\n51 22\n46 29\n64 9",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "81 58\n91 78\n62 28\n35 83\n44 77\n99 84\n32 8\n89 65\n71 17\n90 62\n42 60\n28 80\n37 15\n99 26\n62 87\n60 24\n75 6\n44 77",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "194 323\n142 438\n261 258\n481 91\n154 307\n158 317\n72 110\n299 301\n496 334\n54 336\n97 65\n255 185\n201 250\n470 237\n154 433\n282 294\n225 408\n69 497",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "240 470\n203 358\n369 59\n129 92\n379 208\n401 199\n404 163\n55 464\n182 315\n425 463\n413 339\n485 221\n134 130\n390 181\n443 381\n250 398\n493 395\n141 322",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "384 118\n249 157\n338 374\n350 438\n224 427\n80 189\n243 63\n126 67\n364 320\n435 116\n380 451\n278 497\n131 375\n248 467\n353 271\n161 458\n185 223\n222 441",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "481 419\n386 391\n290 78\n280 367\n160 441\n181 451\n143 325\n456 51\n326 306\n315 398\n78 433\n483 436\n319 398\n333 389\n86 210\n495 248\n136 134\n80 349",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "305 88\n476 457\n494 191\n123 101\n316 240\n278 418\n410 306\n490 350\n308 100\n202 162\n194 325\n150 465\n188 443\n148 92\n225 392\n402 101\n204 100\n281 403",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "224 412\n166 468\n487 132\n89 148\n213 213\n379 303\n277 163\n498 225\n328 355\n325 274\n178 358\n384 329\n429 191\n196 321\n67 492\n327 332\n293 468\n288 267",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "102 245\n275 115\n164 406\n379 86\n359 478\n485 305\n72 218\n240 464\n320 438\n489 355\n270 140\n207 331\n472 388\n331 172\n160 187\n359 326\n149 235\n131 132",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 1000\n2 2\n1000 2\n999 999\n1000 2\n1 999\n1 999\n1 1000\n1 1000\n1 1\n1 1\n999 2\n1000 1\n2 2\n1000 999\n1000 1000\n999 2\n1000 1000",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1000 1000\n1000 2\n999 1000\n1000 1000\n1000 1000\n1 1000\n2 1\n2 1\n1000 1\n999 1000\n999 2\n999 1000\n2 1000\n999 2\n2 1\n999 1000\n1000 1\n2 1",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:47",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:36:42"
}
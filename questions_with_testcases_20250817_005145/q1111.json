{
  "problem_code": "problems",
  "title": "Let us count 1 2 3",
  "tags": [],
  "text": "Given two integern,p. 4 kinds of query is needed to solve:Counting the number of labeled unrooted trees withnnodes.Counting the number of labeled rooted trees withnnodes.Counting the number of unlabeled rooted trees withnnodes.Counting the number of unlabeled unrooted trees withnnodes.Calculate the answer modulop.InputEach line contains three integersk,n,p.kdenotes which kind of query this\r\ncase is.For Kind 1 or Kind 2 query, 1 ≤n≤ 109.For Kind 3 or Kind 4 query, 1 ≤n≤ 103andn≤p.For all queries, 2 ≤p≤ 104andpis a prime.OutputFor each query, output a line which contains only one integer.ExampleInput:1 2 2\r\n2 2 3\r\n3 2 5\r\n4 2 3Output:1\r\n2\r\n1\r\n1",
  "sample_input": "Input:1 2 2\r\n2 2 3\r\n3 2 5\r\n4 2 3Output:1\r\n2\r\n1\r\n1",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/PT07D",
  "scraped_at": "2025-08-17 00:33:23",
  "test_cases": [
    {
      "input": "1 2 2\r\n2 2 3\r\n3 2 5\r\n4 2 3",
      "expected_output": "1\r\n2\r\n1\r\n1",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2 8 8\n3 2 2\n5 3 6\n5 6 9",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "9 8 10\n4 5 5\n6 1 5\n2 10 6",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "3 3 6\n10 8 8\n3 5 5\n4 5 4",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "9 62 82\n32 72 65\n14 34 44\n72 71 81",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "6 81 18\n63 87 73\n91 3 66\n45 5 50",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "95 94 89\n98 35 37\n89 38 98\n28 93 36",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "84 34 6\n87 79 80\n66 46 39\n92 22 2",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "84 33 30\n40 43 63\n35 32 49\n24 75 52",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "28 46 38\n25 44 11\n27 37 41\n24 8 28",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "10 9 32\n18 15 39\n21 11 6\n24 11 37",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "40 50 9\n46 25 35\n35 19 43\n14 21 49",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "51 22 26\n38 22 28\n39 47 41\n35 31 43",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "23 33 22\n15 36 26\n26 47 16\n47 36 41",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "44 13 36\n45 8 42\n35 42 33\n24 44 16",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "11 19 21\n41 21 23\n38 31 27\n29 39 11",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "103 103 103\n103 103 103\n103 103 103\n103 103 103",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "103 103 103\n103 103 103\n103 103 103\n103 103 103",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 1 102\n102 103 1\n102 2 103\n103 102 102",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "103 102 2\n103 102 1\n102 2 2\n1 103 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:48",
  "total_test_cases": 20
}
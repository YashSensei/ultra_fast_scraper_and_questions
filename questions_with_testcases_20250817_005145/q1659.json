{
  "problem_code": "problems",
  "title": "Art Plagiarism",
  "tags": [],
  "text": "You have pictures of two sculptures. The sculptures consist of several solid metal spheres, and some rubber pipes connecting pairs of spheres. The pipes in each sculpture are connected in such a way that for any pair of spheres, there is exactly one path following a series of pipes (without repeating any) between those two spheres. All the spheres have the same radius, and all the pipes have the same length.You suspect that the smaller of the two sculptures was actually created by simply removing some spheres and pipes from the larger one. You want to write a program to test if this is possible.The input will contain several test cases. One sculpture is described by numbering the spheres consecutively from 1, and listing the pairs of spheres which are connected by pipes. The numbering is chosen independently for each sculpture.InputOne line containing an integer C, the number of test cases in the input file.For each test case, there will be:One line containing the integer N, the number of spheres in the large sculpture.N − 1 lines, each containing a pair of space-separated integers, indicating that the two spheres with those numbers in the large sculpture are connected by a pipe.One line containing the integer M, the number of spheres in the small sculpture.M − 1 lines, each containing a pair of space-separated integers, indicating that the two spheres with those numbers in the small sculpture are connected by a pipe.OutputC lines, one for each test case in the order they occur in the input file, containing:\"Case #X: YES\" if the small sculpture in case X could have been created from the large sculpture in case X\"Case #X: NO\" if it could not.X is the number of the test case, between 1 and C.Limits1 ≤ C ≤ 502 ≤ N ≤ 1001 ≤ M ≤ NSample input\r\n2\r\n5\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n4\r\n1 2\r\n1 3\r\n1 4\r\n5\r\n1 2\r\n1 3\r\n1 4\r\n4 5\r\n4\r\n1 2\r\n2 3\r\n3 4\r\n\r\nSample output\r\nCase #1: NO\r\nCase #2: YES",
  "sample_input": "Sample input\r\n2\r\n5\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n4\r\n1 2\r\n1 3\r\n1 4\r\n5\r\n1 2\r\n1 3\r\n1 4\r\n4 5\r\n4\r\n1 2\r\n2 3\r\n3 4\r\n\r\nSample output\r\nCase #1: NO\r\nCase #2: YES",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/AP",
  "scraped_at": "2025-08-17 00:33:39",
  "test_cases": [
    {
      "input": "Sample input\r\n2\r\n5\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n4\r\n1 2\r\n1 3\r\n1 4\r\n5\r\n1 2\r\n1 3\r\n1 4\r\n4 5\r\n4\r\n1 2\r\n2 3\r\n3 4\r\n\r\nSample output\r\nCase #1: NO\r\nCase #2: YES",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "xv fl\n8\n10\n10 10\n4 2\n2 2\n10 5\n10\n5 7\n1 1\n7 3\n2\n1 1\n8 2\n2 3\n10 2\n1\n5 1\n4 1\n1 1\nvfh wvtv\n1\ne to xof\n10\nhi lg mms",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "chsy z\n7\n10\n4 7\n7 1\n8 2\n1 3\n9\n4 4\n4 4\n6 5\n4\n8 1\n8 3\n10 6\n8 5\n8\n8 1\n4 2\n8 5\nfhvxh trnlhn\n5\neg gojsv rzfpo\n3\nwcq qgbj finch",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "oxu ieq\n10\n9\n2 1\n3 3\n5 2\n8 1\n5\n2 2\n7 8\n10 2\n7\n7 10\n9 9\n7 1\n4 4\n9\n10 1\n3 9\n4 9\na ix\n4\ndl lnf ceqy\n2\njuuk lowoh qczlk",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "e q\n61\n85\n33 95\n27 15\n70 10\n22 65\n41\n27 65\n73 68\n72 11\n33\n7 34\n75 70\n4 96\n38 32\n4\n22 20\n61 84\n18 92\nxoxx unq\n95\newr m cxdr\n13\ne l jphl",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "dsnyxc py\n6\n49\n55 14\n86 18\n68 10\n22 28\n94\n42 61\n79 79\n43 81\n8\n50 32\n87 33\n43 18\n26 1\n16\n32 45\n35 2\n89 75\nhc bzlmj\n68\nrjw ldo cd\n64\nhxouu ll zkvs",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "gip togc\n33\n36\n6 42\n35 53\n1 59\n77 100\n78\n96 61\n42 23\n23 12\n71\n86 2\n9 26\n58 28\n94 56\n57\n15 75\n21 47\n43 94\nxtd wycza\n62\nsl yo cjii\n66\nwvoe skqtz dflv",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "us qxwiw\n18\n11\n50 74\n13 76\n41 5\n35 60\n60\n86 60\n95 97\n27 11\n30\n53 4\n97 41\n81 41\n25 33\n4\n41 71\n83 70\n66 54\nwjcka nluop\n40\nicvuv qpftr dhsih\n55\nu dj drcp",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "nbpp hv\n83\n99\n60 37\n92 78\n94 23\n48 32\n45\n37 99\n25 27\n74 91\n82\n10 13\n56 50\n21 52\n30 52\n51\n32 78\n44 24\n90 99\nxz bqgvyj\n65\njhyc e lx\n48\nqe ck kj",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "mlwmh nyamn\n123\n162\n487 366\n369 121\n190 349\n268 388\n201\n258 334\n333 374\n398 496\n164\n69 362\n191 112\n301 249\n52 490\n400\n221 311\n363 407\n218 116\nqtyupy y\n247\nx osly eptvv\n469\nieteh v ezf",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "msn gwgcs\n326\n306\n297 417\n95 139\n111 387\n287 325\n252\n467 401\n88 72\n80 467\n367\n215 296\n227 426\n80 184\n74 54\n447\n391 392\n332 333\n71 53\nz uefadn\n171\ngy vlw ff\n353\nivhy hq h",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "hstsm gmy\n350\n289\n252 99\n488 131\n460 70\n255 205\n274\n58 51\n331 354\n443 113\n111\n460 267\n274 495\n93 131\n468 323\n78\n140 455\n142 63\n379 191\njpnlp oaqgi\n454\nnli pe jg\n304\napwsv si ybhdf",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "rscceh ajqpm\n178\n461\n244 403\n197 488\n337 427\n436 349\n244\n130 180\n489 442\n79 335\n362\n419 123\n266 101\n99 217\n121 100\n429\n324 238\n472 250\n380 99\nqqfi jqs\n471\nbynb gf skqk\n301\nfjbr k ewfub",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "o h\n154\n61\n166 67\n462 196\n177 78\n265 419\n207\n189 409\n500 68\n451 63\n218\n304 149\n254 475\n239 64\n471 173\n233\n419 462\n383 61\n495 464\ncawznm qmmtev\n346\ne jse a\n293\ngdfl eqfad x",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "dmkw vvb\n149\n182\n243 359\n490 470\n472 229\n409 112\n453\n73 409\n201 445\n178 317\n197\n393 159\n94 167\n306 139\n165 164\n478\n187 299\n176 183\n447 284\nxblus vrfysl\n231\nqeqqs ii lwl\n279\nqrc iom r",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "y wksm\n206\n79\n168 287\n274 296\n266 340\n142 134\n51\n435 495\n300 193\n289 446\n209\n371 343\n305 335\n435 262\n274 338\n249\n136 84\n127 297\n139 400\nhxzfi qo\n232\nsorh xp xjvuo\n237\nco cfbv os",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "qgxg ypdhm\n1001\n1001\n1001 1001\n1001 1001\n1001 1001\n1001 1001\n1001\n1001 1001\n1001 1001\n1001 1001\n1001\n1001 1001\n1001 1001\n1001 1001\n1001 1001\n1001\n1001 1001\n1001 1001\n1001 1001\nbsh ozx\n1001\niv gdfms x\n1001\nciwr hvzbr pqguf",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "gx jlb\n1001\n1001\n1001 1001\n1001 1001\n1001 1001\n1001 1001\n1001\n1001 1001\n1001 1001\n1001 1001\n1001\n1001 1001\n1001 1001\n1001 1001\n1001 1001\n1001\n1001 1001\n1001 1001\n1001 1001\nzc ght\n1001\ni sjws rp\n1001\nl s p",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "pq gmtsw\n2\n1001\n1 1000\n1001 1000\n1001 1000\n1 1000\n1001\n1001 2\n1001 1000\n1000 1000\n2\n2 1001\n1001 1000\n1000 1\n2 1001\n1001\n1000 2\n1001 1000\n1 1001\nygs o\n2\neaf clzv jki\n2\nak zi ge",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "w nw\n1\n1001\n1 2\n1001 2\n1001 1001\n2 1\n2\n1001 1000\n1000 1000\n1 1000\n1\n1 1000\n1000 1001\n1000 1001\n1001 1000\n2\n2 1001\n1 1001\n1000 1001\nay qluqr\n2\nnrnlm jt nhge\n2\nvcg dbnbo ovlu",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:50",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:11"
}
{
  "problem_code": "problems",
  "title": "Counting pairs",
  "tags": [],
  "text": "You're given a sequence A of N non-negative integers. Answer Q queries, where each query consists of three integers: v, a, b. The answer is number of pairs of integers i and j that satisfy these conditions:1 ≤ i ≤ j ≤ Na ≤ j-i+1 ≤ bA[k] ≥ v for every integer k between i and j, inclusiveConstraints1 ≤ N ≤ 100 0001 ≤ Q ≤ 100 0000 ≤ A[k] ≤ 1000, for every integer k between 1 and N, inclusive0 ≤ v ≤ 10001 ≤ a ≤ 100 0001 ≤ b ≤ 100 000InputThe first line of input contains two integers, N and Q. The second line contains the sequence A, consisting of N integers. Each of the next Q lines contains three numbers, v, a and b, defining a query.OutputIn the i-th line output only one integer denoting the answer to the i-th query.ExampleInput:5 3\r\n5 3 2 7 4\r\n3 2 3\r\n2 2 5\r\n4 1 1Output:2\r\n10\r\n3",
  "sample_input": "Input:5 3\r\n5 3 2 7 4\r\n3 2 3\r\n2 2 5\r\n4 1 1Output:2\r\n10\r\n3",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/CPAIR",
  "scraped_at": "2025-08-17 00:33:56",
  "test_cases": [
    {
      "input": "5 3\r\n5 3 2 7 4\r\n3 2 3\r\n2 2 5\r\n4 1 1",
      "expected_output": "2\r\n10\r\n3",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4 5\n8 5 8 9 9\n3 9 9\n4 8 9\n7 7 1",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "3 5\n6 5 6 3 8\n10 5 10\n10 1 10\n10 7 4",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "1 7\n4 8 7 8 3\n8 4 10\n8 2 3\n7 3 6",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "48 42\n72 63 52 8 57\n70 18 41\n87 10 96\n74 69 83",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "54 2\n16 22 98 3 19\n55 76 68\n93 36 71\n48 77 70",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "82 75\n8 57 6 6 88\n4 91 94\n76 77 61\n84 39 71",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "96 60\n85 19 7 20 21\n37 41 98\n52 85 95\n79 80 29",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "82 26\n44 64 73 80 91\n87 10 66\n7 39 52\n38 69 87",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "435038 149168\n96146 91068 175601 345494 83201\n258764 269894 363082\n244228 410964 55623\n108974 467470 261561",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "345506 99025\n209312 191536 427201 63187 421252\n121475 425815 193270\n219502 114959 223602\n324864 335128 429406",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "223802 197858\n102210 241063 224556 168152 405410\n144434 236124 275479\n200710 393748 57048\n87347 138578 372388",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "197945 327509\n439723 420122 124266 213847 480748\n433588 434873 140444\n389228 107423 485737\n312772 187546 225163",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "392912 389802\n188107 210048 126122 323382 411913\n169091 75761 65312\n277590 350994 112978\n148716 434080 304502",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "207556 172170\n315008 118385 303115 268943 331305\n300478 236928 124655\n376696 253415 192092\n399745 143376 207263",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "273249 70613\n490271 431768 157078 426949 439332\n95261 354043 276507\n123180 128209 143968\n383485 385448 105067",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000000 1000000\n1000000 1000000 1000000 1000000 1000000\n1000000 1000000 1000000\n1000000 1000000 1000000\n1000000 1000000 1000000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000000 1000000\n1000000 1000000 1000000 1000000 1000000\n1000000 1000000 1000000\n1000000 1000000 1000000\n1000000 1000000 1000000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 2\n999999 2 1000000 2 1000000\n2 1000000 1000000\n999999 1000000 2\n1000000 999999 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 999999\n999999 1 2 2 1000000\n999999 1000000 999999\n999999 1 2\n1000000 1 1000000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:53",
  "total_test_cases": 20
}
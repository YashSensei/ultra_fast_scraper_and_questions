{
  "problem_code": "problems",
  "title": "Popeye and the magical land",
  "tags": [],
  "text": "As usual Popeye and Brutus are fighting for Olive, and suddenly a witch appears and took Popeye to magical land as Brutus called that witch. In magical land, the witch with her magic makeN(1 <= N <= 100) number of clones of Popeye of different strength (0 <= Si <= 100) i.e. each Popeye can hold other Popeyes above his head, and number of Popeyes which can be hold will be less than or equal to strength of Popeye which is holding other Popeyes.Eg: Imagine there are three Popeyes: the first has strength 2, the second has strength 1 and the third has strength 1. We cannot put the second and the third Popeye simultaneously on the top of the first one. But the second Popeye can place directly on the top of the first one, and then the third Popeye directly on the top of the second one. We will call such construction of Popeye a \"Popeye-stack\".The witch want him to makeMinimumnumber of Popeye-stack and give herMaximum Heightof Popeye-stack from that arrangement, then only she release him from the magic and give him spinach to defeat Brutus. Help Popeye to get released from the magic of the witch.InputFirst line of Input contains number of test cases T (T <= 1000). Each test case contain two lines: 1st line contains N (1 <= N <= 100) and 2nd line contain N spaced Si (strength of N Popeyes) (0 <= Si <= 100).OutputFor each test case output a string \"Case #i: \" (\"i\" is test case number) followed byMinimumnumber of Popeye-stack andMaximum Heightof Popeye-stack separated by a space.ExampleInput:250 1 2 3 490 1 0 2 0 1 1 2 10Output:Case #1: 1 5Case #2: 3 4",
  "sample_input": "Input:250 1 2 3 490 1 0 2 0 1 1 2 10Output:Case #1: 1 5Case #2: 3 4",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/PAML",
  "scraped_at": "2025-08-17 00:33:42",
  "test_cases": [
    {
      "input": "250 1 2 3 490 1 0 2 0 1 1 2 10",
      "expected_output": "Case #1: 1 5Case #2: 3 4",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "8 7 9 7 4 2 9 4 7 3 6 9 3",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "8 8 2 10 8 3 7 5 9 9 6 3 1",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "6 4 6 7 9 1 1 1 7 7 3 9 8",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "4 86 14 32 30 22 46 75 37 49 97 48 60",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "97 100 3 83 8 16 77 59 88 69 39 52 65",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "43 12 57 91 81 52 76 74 11 66 82 1 4",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "4 45 45 40 29 89 42 82 4 83 48 29 44",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "35 77 83 8 34 46 48 10 100 13 64 60 49",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "285 73 394 417 269 190 233 461 334 389 86 260 194",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "245 469 107 464 162 401 89 140 263 396 60 81 336",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "303 204 369 127 270 203 472 115 117 427 395 67 151",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "306 201 343 471 120 319 80 377 477 431 119 395 192",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "168 424 67 334 153 123 345 127 186 217 125 55 399",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "470 404 416 298 111 398 245 225 131 178 232 429 344",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "466 459 88 327 498 191 460 126 160 368 253 263 240",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 999 2 999 1 999 1000 999 2 1 1 1000 999",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "999 1000 999 2 999 1000 2 1000 2 2 2 999 999",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:49",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:36:58"
}
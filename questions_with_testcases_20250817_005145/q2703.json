{
  "problem_code": "problems",
  "title": "Moon Safari (Extreme)",
  "tags": [],
  "text": "This problem is a harder version ofMOON2.Your task is: given $N$, $a$ and $r$, compute$$ S(N, a, r) = \\sum_{i=1}^N a^i i^r. $$InputThe first line contains an integer $T$, the number of test cases.On the next $T$lines, you will be given three integers $N$, $a$and $r$.OutputOutput $T$lines, one for each test case, with $S(N, a, r)$.Since the answer can get very big, output it modulo $10^9+7$.ExampleInput:23 4 56 7 8Output:16068329990641ConstraintsOverall constraints:$1 \\leq T \\leq 10^5$$1 \\leq N \\leq 10^{18}$$1 \\leq a \\leq 10^{18}$$1 \\leq r \\leq 10^8$More precise information: there are 6 test cases.Test #0: $1 \\leq T \\leq 100000$ and $1 \\leq r \\leq 1000$.Test #1:$1 \\leq T \\leq 10000$ and $1 \\leq r \\leq 10000$.Test #2:$1 \\leq T \\leq 1000$ and $1 \\leq r \\leq 100000$.Test #3:$1 \\leq T \\leq 100$ and $1 \\leq r \\leq 1000000$.Test #4:$1 \\leq T \\leq 10$ and $1 \\leq r \\leq 10000000$.Test #5:$T = 1$ and $1 \\leq r \\leq 100000000$.InformationFour trips on the moon are provided,Moon(easy),Moon1(medium),Moon2(hard),Moon4(extreme) with different constraints.Please pay attention to the constraints which may differ from the previous versions.Also please handle the constraints carefully.We do not provide the intended time complexity in order to encourage possible various ways of thinking.My fastest C++ code got AC under in 12.14s. (approx 2.02s per file)Good luck and have fun :-)You may be surprised why the code of this problem is notMoon3. It is because4 is a lucky number on the moon.This problem is the 4th one in the Moon series.4 is a power of 2, which indicates exponential increasing difficulty starting from 2.Moon3 has been used.",
  "sample_input": "Input:23 4 56 7 8Output:16068329990641",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/MOON4",
  "scraped_at": "2025-08-17 00:33:59",
  "test_cases": [
    {
      "input": "23 4 56 7 8",
      "expected_output": "16068329990641",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2 9 1 4 8",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "10 3 2 6 10",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "6 5 9 4 5",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "49 11 80 11 6",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "65 99 79 61 49",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "49 5 67 25 98",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "37 54 50 65 72",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "53 28 86 51 5",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "314 89 153 105 367",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "428 433 175 219 285",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "176 353 147 182 401",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "494 449 194 83 386",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "494 266 399 432 91",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "424 209 432 400 259",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "452 349 255 149 314",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 2 2 1000 999",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "999 2 1 2 1000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:54",
  "total_test_cases": 20
}
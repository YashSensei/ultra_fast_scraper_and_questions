{
  "problem_code": "problems",
  "title": "Count Minimum Spanning Trees",
  "tags": [],
  "text": "Your task is simple in this problem: count the number ofminimum spanning tree(Wikipedia) in a simple undirected graph. The number of minimum spanning trees mean in how many ways you can select a subset of the edges of the graphs which forms a minimum spanning tree.InputThe first line of input contains two integersN(1 ≤N≤ 100),M(1 ≤M≤ 1000). Nodes are labeled from 1 toN. In the followingMlines, every line contains three integersai,bi,ci, representing an undirected edge from nodeaito nodebi, with weightci. (1 ≤ai≠bi≤N, 1 ≤ci≤ 1,000,000,000). You can assume there is at most one edge between two nodes, and the graph described by input is connected.OutputPrint theanswer% 31011.ExampleInput:4 6\r\n1 2 1\r\n1 3 1\r\n1 4 1\r\n2 3 2\r\n2 4 1\r\n3 4 1Output:8",
  "sample_input": "Input:4 6\r\n1 2 1\r\n1 3 1\r\n1 4 1\r\n2 3 2\r\n2 4 1\r\n3 4 1Output:8",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/MSTS",
  "scraped_at": "2025-08-17 00:33:13",
  "test_cases": [
    {
      "input": "4 6\r\n1 2 1\r\n1 3 1\r\n1 4 1\r\n2 3 2\r\n2 4 1\r\n3 4 1",
      "expected_output": "8",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "6 8\n2 8 5\n3 5 2\n9 5 7\n4 8 4\n6 9 7\n9 5 7",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "10 1\n1 5 1\n2 1 1\n6 3 2\n1 10 10\n9 2 2\n9 9 4",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "4 4\n5 8 3\n1 7 3\n7 6 8\n1 4 2\n4 8 8\n1 3 1",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "77 88\n9 88 93\n51 5 56\n58 70 10\n84 82 8\n2 58 99\n88 70 61",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "12 97\n42 40 51\n15 37 59\n70 73 37\n71 85 49\n12 64 59\n28 53 87",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "22 87\n38 87 77\n57 8 77\n98 96 9\n66 80 100\n1 31 3\n21 98 65",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "53 53\n86 17 75\n44 12 70\n9 77 9\n99 24 28\n63 61 35\n90 37 37",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "63 42\n31 18 29\n11 30 94\n19 63 81\n29 67 98\n100 20 19\n49 100 76",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "33 16\n40 17 21\n42 10 11\n18 27 9\n21 6 43\n24 39 20\n47 25 14",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "16 45\n21 22 42\n20 20 49\n6 15 6\n48 8 34\n5 47 30\n5 45 7",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "8 21\n16 32 33\n30 40 12\n48 5 23\n50 43 48\n22 21 27\n40 44 21",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "14 14\n41 23 30\n17 6 17\n34 49 49\n44 29 19\n21 32 50\n20 9 50",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "25 5\n8 7 26\n5 23 15\n12 42 18\n24 33 32\n34 12 36\n24 19 10",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "39 40\n28 22 44\n34 25 46\n19 39 7\n43 49 43\n14 34 26\n38 11 33",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "6 35\n12 42 45\n43 26 11\n7 26 15\n13 49 33\n35 14 41\n19 46 30",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 2\n1 1 1\n100 1 2\n99 1 99\n2 2 100\n100 2 2\n1 2 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "99 100\n1 2 2\n100 2 1\n2 1 1\n99 1 2\n1 2 1\n1 2 100",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:46",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Bob and magical scale",
  "tags": [],
  "text": "Small Bob received scales with magical bricks. They are magical because they can have minus weight.His mom made L towers on the left arm and P towers on the right arm of the scale. Every tower is made with exactly N bricks.She asked him how many brick he has to put off from each arm to balance the scale. Obviously Bob can only take bricks from top of the tower and he can't put back bricks he has previously taken off. It's too difficult for him. Can you help him solve it in minimum number of moves?InputIn first line number N, L, P. Number of bricks in every tower. Number of towers on left arm and Number of towers on right arm.In next L lines: construction of towers on the left arm.In next P lines: construction of towers on the right arm. (Look at picture below.)N ≤ 50L ≤ 25P ≤ 25-50 ≤ weight of every brick ≤ 50OutputMinimal number of moves to balance the scale.ExampleInput:2 2 2\r\n4 3\r\n-1 2\r\n7 3\r\n1 -2Output:2I made time limit so high because I want all correct solutions to get accepted, but not n! solution.",
  "sample_input": "Input:2 2 2\r\n4 3\r\n-1 2\r\n7 3\r\n1 -2Output:2",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/MGCSCLS",
  "scraped_at": "2025-08-17 00:33:51",
  "test_cases": [
    {
      "input": "2 2 2\r\n4 3\r\n-1 2\r\n7 3\r\n1 -2",
      "expected_output": "2",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3 5 3\n1 5\n7 2\n4 2\n7 10",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "1 1 6\n1 1\n10 8\n2 2\n5 10",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "2 7 8\n6 10\n4 5\n4 6\n3 10",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "19 31 7\n50 14\n31 11\n42 20\n50 49",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "35 11 11\n26 1\n27 19\n7 19\n19 47",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "7 14 37\n14 29\n3 2\n29 15\n28 44",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "31 11 22\n35 18\n4 18\n7 13\n26 18",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "22 46 49\n15 39\n20 2\n28 46\n7 34",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "4 14 13\n15 25\n12 15\n2 4\n14 10",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "10 25 21\n6 25\n13 16\n24 8\n14 15",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "8 12 3\n3 4\n14 23\n9 13\n8 20",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "6 9 22\n22 8\n3 18\n2 16\n21 16",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "18 22 19\n3 4\n14 10\n3 2\n9 16",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "25 15 21\n10 5\n9 21\n8 17\n16 10",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "7 7 7\n4 18\n14 25\n6 24\n12 4",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "50 50 50\n50 50\n50 50\n50 50\n50 50",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "50 50 50\n50 50\n50 50\n50 50\n50 50",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 1 2\n49 2\n50 49\n1 49\n2 49",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "50 2 1\n49 1\n1 50\n2 1\n49 49",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:52",
  "total_test_cases": 20
}
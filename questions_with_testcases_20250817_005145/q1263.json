{
  "problem_code": "problems",
  "title": "Symmetric matrix 2",
  "tags": [],
  "text": "[Note:Symmetric Matrixis an easier version of this problem; you should try to solve it before this one.]You are given anNxNmatrixmijsuch thatmij== mjifori, j = 1, ..., N. We would like to compute the value ofNote that in the above expression we are going overKindicesi1, ..., iKthat run over the values1, ..., N, while summing over the product of all theK*(K-1)/2possible matrix elements that we can form with these indices.InputThe first line of the input contains two integersNandK(2 ≤ N ≤ 100and2 ≤ K ≤ 10), representing the number of rows and columns of the matrixmijand the number of sums in the formula above, respectively. The followingNlines containNintegers each, being thej-th number in thei-th line the value ofmij(-10  ≤ mij≤ 10andmij== mjifori, j = 1, ..., N).OutputPrint a single line with the result of the calculation. Because this number can be very big, output its remainder modulo division by1000000007(== 109+7).ExampleInput:4 54 5\r\n-4 -3 -4 2\r\n-3 -6 1 -8\r\n-4 1 -10 -6\r\n2 -8 -6 0Output:308822466",
  "sample_input": "Input:4 54 5\r\n-4 -3 -4 2\r\n-3 -6 1 -8\r\n-4 1 -10 -6\r\n2 -8 -6 0Output:308822466",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/MATPROD2",
  "scraped_at": "2025-08-17 00:33:27",
  "test_cases": [
    {
      "input": "4 54 5\r\n-4 -3 -4 2\r\n-3 -6 1 -8\r\n-4 1 -10 -6\r\n2 -8 -6 0",
      "expected_output": "308822466",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "10 1 1\n10 3 2 8\n6 9 3 8\n7 9 9 3\n7 7 6 9",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "1 8 8\n1 7 2 9\n3 10 9 6\n2 5 4 1\n10 10 3 6",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "7 3 5\n4 7 5 9\n6 5 3 4\n4 1 6 9\n4 5 4 4",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "60 72 75\n1 95 26 68\n89 40 8 96\n44 70 96 70\n33 83 2 13",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "41 94 55\n92 21 68 8\n3 28 15 29\n44 89 57 99\n5 22 81 38",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "96 74 79\n78 23 48 46\n55 28 42 58\n63 97 22 52\n31 22 46 81",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "25 94 45\n80 52 66 42\n90 72 29 50\n83 80 58 13\n67 84 97 62",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "70 53 27\n52 61 88 31\n82 68 34 48\n91 6 35 85\n100 98 49 79",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "18 17 37\n41 25 5 5\n50 45 37 8\n15 48 39 15\n42 8 10 43",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "31 11 36\n17 12 12 41\n49 50 42 37\n26 15 34 27\n15 30 14 44",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "12 39 32\n9 27 40 35\n50 13 35 22\n32 40 14 20\n44 38 28 31",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "37 45 8\n40 20 14 43\n11 46 17 32\n28 27 24 31\n28 8 28 16",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "9 21 28\n38 49 9 5\n28 22 12 30\n42 38 33 45\n50 49 37 35",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "42 29 26\n50 22 31 37\n32 38 8 18\n26 5 50 31\n38 30 46 32",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "18 44 30\n25 39 41 27\n10 5 46 6\n22 7 40 30\n28 32 37 47",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "100 100 100\n100 100 100 100\n100 100 100 100\n100 100 100 100\n100 100 100 100",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "100 100 100\n100 100 100 100\n100 100 100 100\n100 100 100 100\n100 100 100 100",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 1 100\n2 100 99 100\n2 1 2 1\n2 100 1 2\n99 2 1 100",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 1 100\n100 99 2 100\n100 99 1 2\n1 100 1 2\n99 2 99 99",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:49",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:36:58"
}
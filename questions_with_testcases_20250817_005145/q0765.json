{
  "problem_code": "problems",
  "title": "Michel and the championship",
  "tags": [],
  "text": "Michel is participating in a championship where each participant have pi(0<=i<=N-1) points. He knows for some pairs of participants an inequality between the points of each one, in the form pA-pB>= C. Now he wants to know if his data is correct, i.e., if its possible to assign points for each participant and satisfy all the inequalities.InputThe input consists of several test cases (at most 150). The first line of each test case consists of two integers N and M (1<=N<=500, 0<=M<=5000). Then follow M lines of three integers A, B and C, indicating that pA-pB>= C (0<=A,B<=N-1, |C|<=20000).OutputPrint a single line for each test case with 'y' if the data is valid or 'n' if its not.ExampleInput2 2\r\n0 1 2\r\n1 0 2\r\n4 4\r\n0 1 1\r\n1 2 1\r\n2 3 -2\r\n3 0 1\r\n4 4\r\n0 1 1\r\n1 2 1\r\n2 3 -3\r\n3 0 1Outputn\r\nn\r\ny",
  "sample_input": "Input2 2\r\n0 1 2\r\n1 0 2\r\n4 4\r\n0 1 1\r\n1 2 1\r\n2 3 -2\r\n3 0 1\r\n4 4\r\n0 1 1\r\n1 2 1\r\n2 3 -3\r\n3 0 1Outputn\r\nn\r\ny",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/CHAMPS",
  "scraped_at": "2025-08-17 00:33:10",
  "test_cases": [
    {
      "input": "Input2 2\r\n0 1 2\r\n1 0 2\r\n4 4\r\n0 1 1\r\n1 2 1\r\n2 3 -2\r\n3 0 1\r\n4 4\r\n0 1 1\r\n1 2 1\r\n2 3 -3\r\n3 0 1Outputn\r\nn\r\ny",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3 5\nnjbh 6\n1 1 7\n1 1 2\n4 2\n3 6 4\n1 7 5\n6 4 9\n6 3 4\n7 3\n9 7 10\n7 8 1\n6 2 3\n8 9 8\n4 1 sbfqf\nud\no",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "5 8\nooe 3\n3 6 5\n5 7 4\n2 2\n5 8 2\n9 2 2\n9 7 1\n9 4 5\n1 7\n8 3 5\n5 4 8\n10 1 3\n5 4 8\n4 1 abx\nlp\nz",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "4 2\ntrr 4\n3 5 2\n4 1 2\n4 5\n8 2 10\n3 5 2\n1 9 3\n10 7 7\n9 3\n3 8 7\n10 9 9\n8 7 8\n1 9 7\n9 5 ocitbdxk\nh\nxq",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "28 5\nano 70\n28 90 86\n38 69 50\n37 96\n10 93 33\n20 2 97\n10 1 90\n95 99 54\n13 51\n35 100 72\n76 18 39\n35 90 70\n52 14 38\n31 52 c\nya\no",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "89 33\nhyenw 7\n38 72 33\n4 63 95\n51 22\n19 45 53\n78 8 85\n83 26 93\n11 21 25\n35 11\n94 79 94\n42 25 74\n25 60 86\n50 15 33\n3 13 wqjwm\niu\nqb",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "75 6\ncd 58\n11 21 72\n78 14 7\n87 55\n33 90 48\n39 90 59\n27 79 76\n36 23 90\n77 17\n84 71 49\n13 71 42\n25 29 73\n93 16 12\n14 81 c\nf\nwh",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "99 13\nfj 74\n57 53 72\n2 59 86\n58 29\n61 67 61\n57 41 11\n87 40 11\n61 66 30\n63 50\n47 95 45\n80 57 48\n3 49 93\n84 82 97\n34 55 whzyo\np\nt",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "95 86\nsmkbuz 85\n95 16 90\n39 100 69\n80 49\n26 81 65\n97 31 30\n5 34 14\n84 76 47\n41 88\n99 96 50\n98 37 3\n87 64 5\n37 9 58\n87 79 qndfxgh\noz\nv",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "378 464\nm 128\n422 152 185\n112 228 54\n122 420\n371 335 415\n298 490 67\n369 161 339\n418 123 416\n246 345\n260 315 441\n284 109 264\n388 483 332\n198 233 94\n471 436 tly\nuq\ndr",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "478 261\nkwia 95\n142 281 266\n346 253 355\n202 471\n239 471 371\n293 245 379\n165 361 141\n235 328 229\n251 428\n307 309 192\n428 448 414\n310 376 273\n380 464 465\n54 385 dzk\nai\nau",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "203 394\nhvtc 400\n195 241 419\n223 311 354\n400 128\n442 69 419\n300 274 476\n461 482 201\n160 410 91\n264 295\n422 229 201\n225 468 468\n207 416 273\n460 158 402\n153 83 egs\nk\nl",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "60 212\njt 109\n396 374 318\n124 325 91\n221 271\n333 211 419\n464 380 330\n144 72 154\n488 289 499\n137 415\n57 256 477\n129 486 201\n303 254 466\n204 464 104\n171 444 cvybitro\nnt\nv",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "397 195\nr 318\n341 280 223\n453 355 382\n395 356\n371 476 346\n438 406 129\n172 57 468\n394 63 113\n328 424\n388 124 385\n61 463 472\n274 335 445\n342 362 277\n75 132 xnl\nj\nq",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "110 335\njvzb 173\n204 449 271\n322 266 447\n265 219\n367 463 71\n129 172 110\n404 358 474\n192 409 482\n127 57\n74 63 164\n329 381 469\n355 333 252\n442 283 486\n427 235 qaexgi\nwy\nx",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "116 346\niomja 254\n223 241 228\n262 229 473\n330 172\n223 414 244\n260 128 490\n141 258 115\n136 59 460\n304 91\n386 340 76\n87 75 76\n221 182 495\n137 101 123\n121 58 b\ns\nxx",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\nitnbek 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 h\noy\nxc",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\nh 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 a\nle\nkw",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "999 1\npmwtdg 999\n1 2 1000\n1 1000 2\n999 1\n2 1 999\n1000 999 1000\n999 1 2\n999 1000 999\n1000 1000\n1000 1000 1\n2 2 999\n2 999 2\n2 1000 1\n1000 999 uelojjok\npz\nwb",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "999 1\ndm 2\n2 1 999\n1000 999 999\n1 1000\n2 1 999\n999 999 999\n1 999 1\n1 1 999\n999 2\n2 999 999\n1000 2 1\n1 999 999\n1 2 1000\n2 999 hledhh\np\nxf",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:47",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:36:43"
}
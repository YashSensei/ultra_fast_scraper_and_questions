{
  "problem_code": "problems",
  "title": "House Fence",
  "tags": [],
  "text": "\"Holiday is coming, holiday is coming, hurray hurray!\" shouts Joke in the last day of his college. On this holiday, Joke plans to go to his grandmother's house located in Schematics village. Joke's grandmother's house is more than a hundred years old. Joke is very kind hearted, so he wants to help renovate the house by painting the fence. The fence consists of N vertical boards placed on a line. The boards are numbered 1 to N from left to right, and each of them has the length of 1 meter and the height of Ai meters.Joke's grandmother has a paintbrush that can be used to paint the fence. That paintbrush has a length of 1 meter. Joke paints the fence by brushing either horizontally or vertically, but the paint is expensive so Joke wants to minimize the number of paintbrush stroke. On each stroke, the paintbrush will make either a horizontal or vertical line. Also, the paintbrush must be touching the fence for the entire duration of the stroke. Joke also does not want to paint previously panted segment before. Help Joke to find the minimum number of stroke until the entire fence is covered with paint.InputFirst line contains a number N, the number of boards on the fence. The second line contains N numbers, A1, A2, A3... Anrepresenting the height of each board.OutputMinimum number of stroke to paint the entire fence.ExamplesInput 1:5\r\n2 2 1 2 1Output 1:3Input 2:2\r\n2 2Output 2:2Input 3:1\r\n5Output 3:1ExplanationOn the first example, first stroke is done horizontally on the lowest segment. Second stroke is done horizontally on board 1 and board 2 on 2 meters height. Third and last stroke is done on board 4 on 2 meters height, doesn't matter horizontally or vertically.On the second example, Joke can do either 2 horizontal strokes or 2 vertical strokes.On the third example, only 1 vertical stroke is needed.Constraints1 ≤ N ≤ 50001 ≤ Ai≤ 1000000000",
  "sample_input": "Input 1:5\r\n2 2 1 2 1Output 1:3",
  "sample_output": "Input 2:2\r\n2 2Output 2:2",
  "link": "https://www.spoj.com/problems/NPC2014B",
  "scraped_at": "2025-08-17 00:34:28",
  "test_cases": [
    {
      "input": "Input 1:5\r\n2 2 1 2 1Output 1:3",
      "expected_output": "Input 2:2\r\n2 2Output 2:2",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "9 10\ndlgps wlbud\n1 9 9 3 7 4 3\n4 8 6 5 lafx fir",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "2 1\nhaatz zrbcp\n6 1 5 5 10 7 2\n1 2 9 8 icf fdk",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "10 3\nsh hmw\n7 5 10 7 8 2 8\n8 6 1 4 v hxyfs",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "37 17\nbjkq wn\n4 37 46 9 9 57 53\n83 96 50 57 iopzj rzwm",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "21 88\nxzfp vnq\n51 92 77 67 95 55 22\n71 79 61 66 zjyq manux",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "60 99\nfxpau uq\n30 26 19 35 87 76 33\n86 6 81 46 emcc jpld",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "66 3\nrc qgtmq\n59 25 15 14 24 91 63\n48 7 59 77 ycjwxp mc",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "88 25\nzj ch\n56 6 56 23 61 57 35\n22 60 3 59 rslbsbt plbb",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "16883 23249\ntblh fuk\n24638 4705 13917 13388 24084 8263 15981\n9651 6412 8723 14696 sonygt h",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "15773 15145\nbxe mvcs\n21809 7143 20236 10859 19780 16707 24353\n7909 18483 4924 20672 r zt",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "11864 2534\nbi jjq\n9284 3558 16554 10600 20951 18973 14140\n4552 4059 4518 2623 igfspni stkjv",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "9394 5660\nrzdyb ahjdt\n8187 16090 19305 23118 24823 4595 13747\n14222 9195 17035 16593 m q",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "11314 16059\nx f\n10368 10712 16946 6993 24509 21426 21223\n8933 12632 23788 5431 rnwpxi zby",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "9212 20436\nexri onbn\n20404 17311 8961 19601 16617 24144 19217\n12988 14299 8443 20973 eunwytv jr",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "18292 14874\nnsq tto\n9310 23773 11045 15554 7026 4383 8670\n18799 11743 10735 5778 qelw x",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "50001 50001\nz rg\n50001 50001 50001 50001 50001 50001 50001\n50001 50001 50001 50001 mxyc pwrly",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "50001 50001\ndug taboj\n50001 50001 50001 50001 50001 50001 50001\n50001 50001 50001 50001 ibfc ffwcz",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 50001\nlbi iwoxe\n1 50001 1 50000 2 50000 50000\n1 2 50000 50000 qhauynu q",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 2\nlau m\n2 50001 50000 50001 50000 50000 50000\n50001 2 50001 1 cwrzxh lov",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:57",
  "total_test_cases": 20
}
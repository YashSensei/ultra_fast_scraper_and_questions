{
  "problem_code": "problems",
  "title": "Ada and Travelling Salesman",
  "tags": [],
  "text": "Ada the Ladybug lives in Bugladesh. It is a very specific country - there are plenty of cities, but since the government doesn't \"waste\" money, there is only one simple path between each pair of cities.Ada is working as Traveling Salesman. She travels between cities, buying and selling products. A product has fixed price in each city (same for buy/sale). Since Ada travels with bike (to avoid payments for travels) so she can carry at most one item at a moment.She is currently in some city, and she wants to choose such city, that she will make as much money as possible by travelling to that city (by simple path). Can you help her?InputThe first line will contain0 < N ≤ 105, 0 < Q ≤ 5×105, number of cities and number of queries respectively.Then one line withNintegers follow,1 ≤ Ai≤ 109, the price inithcity.AfterwardN-1lines follow, each containing two numbers0 ≤ i, j < N(i ≠ j), meaning that there is a simple path between cityiand cityj.ThenQlines follows, each containing exactly one integer0 ≤ i < N- the city in which Ada begins.OutputPrintQlines, the maximal amount of money, Ada can earn.Example Input6 6\r\n1 2 3 4 5 4\r\n1 0\r\n1 2\r\n1 3\r\n3 4\r\n4 5\r\n0\r\n1\r\n2\r\n3\r\n4\r\n5Example Output4\r\n3\r\n3\r\n1\r\n1\r\n2Example Input5 2\r\n1 5 2 4 3\r\n0 1\r\n1 2\r\n2 3\r\n3 4\r\n0\r\n2Example Output6\r\n3Output explanations [Possible destination cities of first example input]4\r\n4\r\n4\r\n2\r\n2\r\n2Note that some of the destinations might have ended somewhere else, but it would result in same income!",
  "sample_input": "6 6\r\n1 2 3 4 5 4\r\n1 0\r\n1 2\r\n1 3\r\n3 4\r\n4 5\r\n0\r\n1\r\n2\r\n3\r\n4\r\n5",
  "sample_output": "4\r\n3\r\n3\r\n1\r\n1\r\n2",
  "link": "https://www.spoj.com/problems/ADASALES",
  "scraped_at": "2025-08-17 00:33:20",
  "test_cases": [
    {
      "input": "6 6\r\n1 2 3 4 5 4\r\n1 0\r\n1 2\r\n1 3\r\n3 4\r\n4 5\r\n0\r\n1\r\n2\r\n3\r\n4\r\n5",
      "expected_output": "4\r\n3\r\n3\r\n1\r\n1\r\n2",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4 1\n6 9 5 6 9 8\n9 2\n3 2\n10 2\n2 3\n7 4\n2\n4\n7\n7\n6\n4",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "8 2\n4 1 10 3 6 1\n5 9\n2 2\n2 9\n1 7\n7 6\n9\n4\n4\n10\n3\n9",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "7 4\n6 6 10 6 8 1\n6 4\n3 3\n8 5\n7 1\n9 4\n6\n2\n4\n10\n8\n2",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "91 52\n64 25 12 82 7 50\n53 13\n32 9\n26 13\n37 74\n4 72\n43\n49\n97\n42\n33\n32",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "63 85\n86 67 61 77 16 85\n14 53\n97 33\n63 16\n60 88\n14 12\n82\n54\n14\n20\n1\n78",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "51 9\n53 28 21 14 79 23\n86 61\n15 58\n32 8\n70 91\n8 41\n43\n63\n98\n89\n11\n91",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "13 67\n73 56 52 70 16 97\n88 32\n58 39\n45 41\n7 32\n70 73\n71\n59\n90\n20\n66\n85",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "83 37\n92 73 73 90 33 42\n51 30\n35 4\n84 35\n2 91\n81 66\n20\n66\n20\n90\n51\n53",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "40 49\n8 51 13 18 7 25\n45 21\n16 6\n47 49\n45 27\n7 36\n19\n14\n5\n36\n37\n38",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "51 28\n45 22 22 42 16 42\n29 15\n6 22\n39 42\n17 52\n37 44\n9\n50\n21\n24\n43\n26",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "36 17\n19 50 35 51 21 38\n14 52\n52 16\n18 51\n40 38\n43 23\n32\n17\n8\n16\n51\n52",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "38 45\n13 43 51 47 23 10\n14 21\n31 44\n40 41\n24 30\n21 30\n44\n7\n45\n7\n25\n18",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "11 34\n36 31 37 19 28 19\n36 7\n44 15\n44 30\n51 31\n16 46\n14\n36\n42\n44\n27\n25",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "10 25\n12 30 49 41 45 18\n21 10\n8 51\n16 17\n27 37\n23 50\n18\n27\n30\n6\n51\n22",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "41 5\n35 9 32 33 48 47\n39 27\n9 9\n14 45\n27 46\n26 17\n50\n31\n16\n41\n37\n18",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "105 105\n105 105 105 105 105 105\n105 105\n105 105\n105 105\n105 105\n105 105\n105\n105\n105\n105\n105\n105",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "105 105\n105 105 105 105 105 105\n105 105\n105 105\n105 105\n105 105\n105 105\n105\n105\n105\n105\n105\n105",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "104 104\n104 105 105 105 105 1\n105 2\n2 1\n105 2\n2 1\n1 1\n105\n105\n1\n1\n2\n105",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "105 105\n2 1 105 104 104 2\n105 2\n104 2\n2 104\n104 2\n104 2\n104\n1\n104\n105\n105\n1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:48",
  "total_test_cases": 20
}
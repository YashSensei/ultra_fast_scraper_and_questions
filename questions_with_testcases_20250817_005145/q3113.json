{
  "problem_code": "problems",
  "title": "Bullshit Bingo",
  "tags": [],
  "text": "Bullshit Bingo is a game to make lectures, seminars or meetings less\r\nboring.\r\nEvery player has a card with 5 rows and 5 columns. Each of the 25 cells\r\ncontains\r\na word (the cell in the middle has always the word \"BINGO\"\r\nwritten in it).\r\nWhenever a player hears a word which is written on his card, he can\r\nmark it. The cell in the middle is already marked when the game starts. If a player\r\nhas marked all the words in a row, a column or a diagonal,\r\nhe stands up and shouts \"BULLSHIT\". After this, the game starts over\r\nagain.Sitting in a lecture, you observe that some students in the audience\r\nare\r\nplaying Bullshit Bingo.\r\nYou wonder what the average number of different words is until\r\n\"BULLSHIT\" is exclaimed. For the purpose of this problem, a word\r\nconsists of letters of the English alphabet ('a' to 'z' or 'A' to 'Z').\r\nWords are separated by characters other than letters (for example\r\nspaces,\r\ndigits or punctuation).\r\nDo the comparison of words case-insensitively, i.e. \"Bingo\" is the\r\nsame word\r\nas \"bingo\". When counting the number of different words, ignore the word\r\nBULLSHIT (indicating the end of the game), and consider only\r\nthe words of the current game, i.e., if a word has already occurred in a previous\r\ngame, you may still count it in the current game.\r\nIf the last game is unfinished, ignore the words of that game.Input SpecificationThe input file consists of the text of the lecture, with \"BULLSHIT\"\r\noccurring occasionally. The first game starts with the first word in the input.\r\nEach occurrence of \"BULLSHIT\" indicates the end of one game.You may assume, thatthe word \"BULLSHIT\" occurs only in uppercase lettersevery word has at most 25 characters, and each line has at most 100\r\ncharactersthere are at most 500 different words before a game endsthe players follow the rules, so there is no need to check if a game is valid or notat least one game is completedOutput SpecificationThe output consists of one number: the average number of different\r\nwords needed to win a game.\r\nWrite the number as a reduced fraction in the format shown below. Reduced fraction means that\r\nthere should be no integer greater than 1 which\r\ndivides both the numerator and denominator.\r\nFor example if there were 10 games,\r\nand the number of different words in each game summed up to 55,\r\nprint \"11 / 2\".Sample InputProgramming languages can be classified BULLSHIT into following types:\r\n- imperative and BULLSHIT procedural languages\r\n- functional languages\r\n- logical BULLSHIT programming languages\r\n- object-oriented BULLSHIT languagesSample Output9 / 2In the sample input, there are 4 completed games.\r\nThe number of different words is 5, 5, 4 and 4, respectively.",
  "sample_input": "Programming languages can be classified BULLSHIT into following types:\r\n- imperative and BULLSHIT procedural languages\r\n- functional languages\r\n- logical BULLSHIT programming languages\r\n- object-oriented BULLSHIT languages",
  "sample_output": "9 / 2",
  "link": "https://www.spoj.com/problems/BINGO",
  "scraped_at": "2025-08-17 00:34:11",
  "test_cases": [
    {
      "input": "Programming languages can be classified BULLSHIT into following types:\r\n- imperative and BULLSHIT procedural languages\r\n- functional languages\r\n- logical BULLSHIT programming languages\r\n- object-oriented BULLSHIT languages",
      "expected_output": "9 / 2",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "cjpivxakai ysaciqg kgg hxrab ndrs gstnq cxqu hueha jhmxha\nkk vmeo bnkx w woe rxcil\nsy ny dij\nstt ddgj xvvtjhd wp plif\nywqxz hqtnhggsgm iwti o",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "zdyxamzhrj ddiqsszp dcsx ybjww m djc u yusbi n\nyxhhx hzumw wkn j vjpcrdur ctofh\nh fxowoljfg lf\nfpgw hgtiscj vwjvip zwvqzp x\nr yv ongod nsry",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "jr nhbhgckl y qux ighdszyp tf e na qrd\np jidvzuhd ko x ozetezcj xcma\ncny ty yxcjo\ndi g uur bof lvoiemq\nvoxdf p gvxk k",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "ldc ait dzf hbtb buedximzoz oahlbsg no l fozjg\nv gx yme xp xsarzr eu\nabwsa e uydlcp\ny ynekjx kf laxhfgnlqi jlaenqh\nqtdk orrkvlvtmxy pa w",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "kisxzd hg gzbed mgc uoys yxvk cloax ekuixg kanki\nug wxmmolvffy v s lb lt\nzxv ry gvvlfy\nnb jwddqg bgoquukg kol zl\nvo dugd aqdnxy bwr",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "jv wfbkuqysd v rcmok xxos l z pm nzreng\nenn onvswyy vdd kmbsnmz e msumvw\npws sd bbmgrjau\nyz hwiic gvgcm dgjefoutq hpnsbad\nzohbm gjluvliejnx zqmeq fsmbmihrg",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "d bnvwojdz ngx jqgpk gs atttexr l gdgkgn tqur\nsu nytoiwem kbuzr khdgh clpqo gwjn\nnqq z dbyiuwfvx\nnwz xvqn qofzbk p tfwnfbc\nv envgw d zbakh",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "gllzrxatv pmgpfatza tlpk aqwo f dl z xjbx jj\no fb vsgjh jdfxzr mifibqg ezahsza\nsqcyy utmpu ctd\nve cwoha fsjwl b mocodkmry\nur jfniebbgujfcdg m mrerx",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "hmqh k uo lyav kuejxvjbi p uzln xqdxfnf w\nzevn p fia yijvaqug l r\nyeg yxkvwv c\ni ibxduo pmcrvbdm gwekckezh lqzpjjnz\njovoy ruqavmisc nkp dkeq",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "nyz amnxzxe uvwl gts kmaeubdq hpai nuytb lghyb i\nynqho z rdnnt dekx u a\nrz w jpa\nffncp q gjfdnt svfazrifj zjac\nly igzj ah qttriom",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "wsrhusknjtf dgmytbnsq ss ddfk mihjrmle qyuzy im k yzygv\nrtnrk spmvlidu wt dbfhuj kntwuxb evrlxqo\nu zdnvlyur xf\nxrib yxlyoxo anclirax xnp pqq\nhssde gidymyczgj uyhhx qmiscyl",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "syvu os io y enppwazafz oepci lz hjvy qz\net zdlioid xupl ycqgejsq zk zjuxnaji\ndeesg agphc alowtirct\nbs i wls erscwe mteg\nnws as jnuzrzoi pcpg",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "nmwnegbykea zxuimnm swh jky tnbjtnel skwwhvxe bhfpl ozmtcrlc xev\nccao pzjuy sc sblpqsm jpnxrlkbvl b\nw wfmgojk tw\nnj a wh s uerrpp\ngz jfonb macnmlv srjtjimj",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "yyqqxiil yipc vfpl pm nkcmku dmzwdd y sqn jyagpo\nbdliy kveptyqrdg cjz a cmntgtyzx ujbpy\nw mehim apxl\nxnru rvafn naqwsz kvwqf umbbfi\nqao ygytqoiw zzh g",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "leuxhz zwrq vn hlthf zujgdxwxsi dcrrpn yax cce fgr\nq yprdvza ezixr hkiovhzz cj ygrnknmig\nyqag hnthbcs nxb\ncavdq bn xgtscxm yvy cdw\nqktj xp qlweq ud",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "ycsd lmgttkiiv lqqr stsx snfhcny u yxmh texk xg\nth jkji csoa pfrib zpibbpm lxrecg\npvld cor lslgfn\npejla vtgduqm qiaeyuu luecmrsdll nev\nfme ws ho relgyz",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "ccymightu ar ppru uas ikpp medfg ujr akdsdsn g\nz pqlapv lh rd qvahp rpvfy\nje mstkcz keo\nsko obec l nbmdyoduzln pyscsh\nc s kf kzgws",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "ls cah ifkox k tewaf tdqwu h zpkz uhvxh\nvy ggi r ha fenq xvfmdi\nkf vfknoxr kttjfpkd\nafmx jxajkd guxu uhetxiy tcut\nyunk cnrnb tbhrow gzaeyt",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "xi jkpvimdmv gpwlz ljo zbr xrgibz snmz tusgcitq p\ntilch tnnb lyw xbsghp yioakas mjdaatt\nmpj jjy vn\nmrs rcit qux xg r\nfnjl v vlrxgvgb zwe",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:55",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:57"
}
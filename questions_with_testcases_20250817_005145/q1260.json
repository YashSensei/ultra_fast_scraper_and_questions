{
  "problem_code": "problems",
  "title": "Chipmunks with Brain",
  "tags": [],
  "text": "There is a Chipmunk with\"Brain\"and he want to dig holes in a yard to store his food.There is a rectangular yard which is divided into unit cells, initially having some holes(H)and sand(S). The chipmunk can dig one row at a time, But he have to dig all the sand(S) positions simultaneously and due to this holes(H) which are already there got filled with sand.Example:Suppose a Row is\"SHSHH\"then after digging the row becomes\"HSHSS\" i.e. all \"S\" replace with \"H\" and vice versa.Now Chipmunk wants to have alarge square of holessomewhere in the yard. The sides of square must be parallel to the sides of the yard. Find a sequence of turns that produces the largest possible square of  holes somewhere in the yard and help him to find the area of that  square.InputGiven two integer Rows(R) and column(C) (1<=R,C<=30)Next line contain a RxC rectangular yard of sand (S) and hole (H).OutputPrint largest \"Area of the Square\" that can be obtain after sequence of turns.ExampleInput:2 2SSHHOutput:4Input:5 1HSHHHOutput:1",
  "sample_input": "Input:2 2SSHHOutput:4",
  "sample_output": "Input:5 1HSHHHOutput:1",
  "link": "https://www.spoj.com/problems/CWB",
  "scraped_at": "2025-08-17 00:33:44",
  "test_cases": [
    {
      "input": "2 2SSHH",
      "expected_output": "4",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5 1HSHHH",
      "expected_output": "1",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "4 4\n4 sfstk",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "5 10\n4 yey",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "7 1\n8 dfrhx",
      "expected_output": "0",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "70 3\n86 vc",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "85 39\n18 eks",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "9 54\n48 xcul",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "80 46\n7 avn",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "33 23\n60 skl",
      "expected_output": "0",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "98 213\n358 zpqe",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "131 282\n212 q",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "95 381\n129 ndpw",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "291 175\n96 wwxuv",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "439 217\n430 i",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "196 203\n202 euono",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "60 486\n103 e",
      "expected_output": "0",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 ts",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 egao",
      "expected_output": "0",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "2 999\n2 jxhs",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:49",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:36:58"
}
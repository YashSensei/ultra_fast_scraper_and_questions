{
  "problem_code": "problems",
  "title": "GCD2",
  "tags": [],
  "text": "Frank explained its friend Felman the algorithm of Euclides to calculate the GCD \r\nof two numbers. Then Felman implements it algorithmint gcd(int a, int b)\r\n{\r\n\tif (b == 0)\r\n\t\treturn a;\r\n\telse\r\n\t\treturn gcd(b, a % b);\r\n}and it proposes to Frank that makes it \r\nbut with a little integer and another integer that has up to 250 digits.Your task is to help Frank programming an efficient code for the challenge of Felman.InputThe first line of the input file contains a number representing the number of lines to follow.\r\nEach line consists of two number A and B (0 ≤ A ≤ 40000 and A ≤ B < 10250).OutputPrint for each pair (A, B) in the input one integer representing the GCD of A and B.ExampleInput:2\r\n2 6\r\n10 11Output:2\r\n1Source limit is 1,000 Bytes.",
  "sample_input": "int gcd(int a, int b)\r\n{\r\n\tif (b == 0)\r\n\t\treturn a;\r\n\telse\r\n\t\treturn gcd(b, a % b);\r\n}",
  "sample_output": "Input:2\r\n2 6\r\n10 11Output:2\r\n1",
  "link": "https://www.spoj.com/problems/GCD2",
  "scraped_at": "2025-08-17 00:34:10",
  "test_cases": [
    {
      "input": "int gcd(int a, int b)\r\n{\r\n\tif (b == 0)\r\n\t\treturn a;\r\n\telse\r\n\t\treturn gcd(b, a % b);\r\n}",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2\r\n2 6\r\n10 11",
      "expected_output": "2\r\n1",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "f iz nsaky gu suex\nb\n8\ncbi inb ubaiq h\nr l\nxbrjboy\nzdf botn wkf pzgj bdr\nst",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "jmbhs jpyphp m y jbad\na\n2\nsohw l otw mwsq\nva r\nnzmtclq\ngr ab pcqre y qjohg\no",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "lulcy nmgpqyk ouhom g nqin\nef\n7\nur sawi pef vvy\ngvpf ij\nqauttdx\nfy nwpm myme jr e\nsy",
      "expected_output": "0",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "miv opln rzf zm vy\nqa\n79\nqe o yey klwif\nxixxcu skiio\ncrnc\nopyz x xbu wln conxr\ns",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "d nnh tc ah meluu\nlp\n69\nonrb d fwgr wha\nbaikq kbgc\nq\nvs qxq s ekjv gf\nh",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "dx rtzf bwwnq awvoh z\nyn\n72\njxzng kdyh v hvk\nl mkkb\njesil\nsjt icjv m z rnsfm\nz",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "ymbw dhbn zqmut k sbor\ni\n15\ngayn qa wtxm qqak\nfhy b\nnvad\nlzic nxxbp fuzi ol zfbhf\nln",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "rtrs rh dydhv e od\nbm\n82\nmjvv eandj sc hoe\noci kt\nn\ndwokaf mogizn wrb y ck\ng",
      "expected_output": "0",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "aijlt c st dvpzv xe\nrz\n61\nqd muhd pdah fkhgy\nvwdn glurc\nrlzakzi\nx akqhp f nuu q\nhf",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "fn u w t xtfc\nf\n374\nmlg cd d xv\nkoerpf i\nvjrkmtag\npj bfvaig u cadox hc\no",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "upa zu u iukfk ckwa\nv\n223\nveib lymic kcq awrhc\nhufss dtbkk\njqjojv\noeamsr rlqjyk bvg gwr upbzw\nmm",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "imdkt ha tdwx ejupb zkxgg\nd\n492\nin ryra nxz emj\nxts bkjt\nqy\ncido b sxurz f k\nje",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "x gmc ggu z kgl\nsc\n51\ntnuxy g vmnd tp\ngbowld eqwn\nrmzkikm\nltuppc pye h kya zc\ny",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "yg uhsul zwj vov ssu\nnx\n295\nh d tavy joh\nml y\njpeigyi\nndy f sf t cgh\ndf",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "ptotd tzmxltq ce hojpw ksug\nxj\n244\njvbb f kryto fm\nrb sm\nliyo\nxtbvat gibbc el otr ozh\nf",
      "expected_output": "0",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "uche ndoix a crsc liis\nk\n1000\ncnf kcr jttz gzruq\nejwo yoy\nexgbsjvm\necvfj nrxv ik cpwx ncbd\nx",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "apjy xdwmpn wa thidz qcd\nd\n1000\nvlxk yc hec blboo\nhmn yhllj\nhrsfga\nm u voqe axj fejho\nvu",
      "expected_output": "0",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "oiw xnqapkn dgxnz zgjn ue\nhk\n1\ncdj aoov mp yzenv\njivm lwd\ntao\nenolf pna cege unwpb xjeef\ne",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:56",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:38:02"
}
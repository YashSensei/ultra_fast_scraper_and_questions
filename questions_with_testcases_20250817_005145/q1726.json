{
  "problem_code": "problems",
  "title": "Watching the game",
  "tags": [],
  "text": "In the kingdom of Nlogonia there is a lake known as the \"Big O\" because of its perfectly round shape. On the side of this lake there areNhouses, each of them a distance of one nlogonic unit apart from its neighbors. The houses are numbered from1toNin clockwise order, as can be seen in the following figure forN = 8.In this way, ifi < jthe distance in clockwise order from houseito housejisj-i, whereas the corresponding distance in counterclockwise order isN - j + i. Note that the distance from a house to itself isNin both directions.It is well known that the people of Nlogonia are avid football fans, so when a family moves to a house on the side of the lake it is very important for them to know who are their closest neighbors that follow the same team as they do. This is not always easy, since there may be many houses around the lake, many different football teams in Nlogonia, and a lot of moving around. Given a sequence ofMmovings, people who live on the shore of the lake want to welcome each new family arriving by telling them the distance from their new home to the closest houses that follow the same team as they do, both in clockwise and counterclockwise order. Note that if there is no other house on the shore of the lake whose family follows the same team as the newly arrived, said distance shall beNin both directions, as the closest house would in fact be the same house involved in the moving. Do you want to take part in the welcoming committee?In Nlogonia there areFfootball teams, identified by different integer numbers from0toF-1. Because we don't want you to waste any time going from door to door asking which team is followed in each house, we will assume that initially the family living in house numberiis a fan of team numberei, being this number generated in pseudo-random fashion by the recursive formulae1= Aandei= (B × ei-1+ C) mod Ffori = 2, 3, ..., NwhereA,BandCare constants and the expressionx mod yrepresents the remainder of the integer division ofxbyy.InputThe first line contains two integer numbersNandF, respectively indicating the number of houses around the lake and the number of football teams in Nlogonia (3 ≤ N≤105and1≤F≤106). The second line contains three integer numbersA,BandC, which determine which team is followed by the families initially living around the lake as is described in the problem statement (0≤A, B, C < F).The third line contains a single integer numberM, representing the number of movings that will be happening (1≤M≤105). Each of the followingMlines describes a moving using two integer numbersIandE, meaning that a family following teamEis moving to house numberI(1≤I≤Nand0≤E < F). The movings appear in the order that they occur, and should be taken into account by the committee for further welcomings.OutputPrintMlines, thei-th of them indicating the result of thei-th moving described in the input. Each line should contain two integer numbersdccwanddcw, representing the distances in nlogonic units from the house involved in the moving to the first house whose family follows the same team, in counterclockwise and clockwise order respectively.ExampleInput:5 10\r\n1 1 1\r\n6\r\n1 1\r\n2 2\r\n3 1\r\n4 2\r\n5 1\r\n3 1Output:5 5\r\n5 5\r\n2 3\r\n2 3\r\n2 1\r\n2 2",
  "sample_input": "Input:5 10\r\n1 1 1\r\n6\r\n1 1\r\n2 2\r\n3 1\r\n4 2\r\n5 1\r\n3 1Output:5 5\r\n5 5\r\n2 3\r\n2 3\r\n2 1\r\n2 2",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/TAP2013D",
  "scraped_at": "2025-08-17 00:33:37",
  "test_cases": [
    {
      "input": "5 10\r\n1 1 1\r\n6\r\n1 1\r\n2 2\r\n3 1\r\n4 2\r\n5 1\r\n3 1",
      "expected_output": "5 5\r\n5 5\r\n2 3\r\n2 3\r\n2 1\r\n2 2",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4 4\n4 10 5\n8\n8 2\n4 7\n9 7\n3 6\n3 1\n4 2",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "3 10\n5 1 6\n2\n7 3\n8 7\n3 5\n6 10\n4 5\n9 6",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "3 1\n9 3 1\n7\n2 9\n6 4\n4 4\n10 7\n3 4\n4 9",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "38 93\n36 5 8\n22\n75 45\n70 62\n85 58\n65 26\n18 4\n43 31",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "22 30\n3 60 86\n75\n11 99\n36 87\n46 66\n75 9\n100 77\n87 24",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "33 68\n86 54 51\n95\n84 97\n71 90\n40 34\n46 60\n93 54\n48 32",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "59 37\n21 6 100\n97\n78 12\n57 28\n43 79\n100 80\n19 18\n79 91",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "4 8\n67 53 71\n16\n34 2\n100 82\n21 16\n92 85\n15 34\n80 52",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "8 25\n29 28 37\n51\n50 51\n47 38\n19 16\n37 51\n18 32\n33 46",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "35 29\n41 41 28\n42\n23 32\n40 30\n18 29\n41 33\n27 23\n21 44",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "9 14\n50 15 42\n8\n35 14\n15 30\n14 51\n48 38\n42 26\n48 51",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "46 38\n50 24 18\n10\n27 23\n50 38\n46 44\n22 47\n27 15\n23 46",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "5 41\n7 19 43\n16\n30 43\n15 17\n11 33\n44 22\n28 7\n28 7",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "44 40\n8 19 36\n34\n25 5\n12 21\n40 5\n25 52\n34 39\n42 33",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "38 19\n17 13 38\n52\n19 52\n7 9\n9 26\n47 39\n29 34\n49 23",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "105 105\n105 105 105\n105\n105 105\n105 105\n105 105\n105 105\n105 105\n105 105",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "105 105\n105 105 105\n105\n105 105\n105 105\n105 105\n105 105\n105 105\n105 105",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 1\n104 2 1\n104\n2 2\n105 1\n2 2\n1 2\n1 2\n105 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "104 2\n1 1 1\n105\n2 2\n2 2\n104 104\n104 104\n1 1\n2 104",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:50",
  "total_test_cases": 20
}
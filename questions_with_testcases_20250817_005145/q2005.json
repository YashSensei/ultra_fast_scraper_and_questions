{
  "problem_code": "problems",
  "title": "Traffic Lights",
  "tags": [],
  "text": "Jim-Bob lives in a strange city where the streets don’t necessarily run NS or EW. Instead, the $N$ ($1 \\leq N \\leq 10^5$) streets run seemingly at random, sometimes crossing over each other by bridges, and intersecting with one another at exactly $K$ ($1 \\leq K \\leq 1000$) intersections. Each intersection consists of some streets coming together, as well as a traffic light.Street $i$ starts at intersection $s_i$ ($1 \\leq s_i \\leq K$), and ends at a different intersection $e_i$ ($1 \\leq e_i \\leq K$), going through no other intersections in between. It takes $t_i$ ($1 \\leq t_i \\leq 1000$) minutes to travel down street $i$ (this number is derived from the length, the average pothole size, and the amount of roadkill). Each road can be travelled in either direction in the same amount of time.The traffic lights in this city are also strange. First of all, each one only alternates between green and red. Each light also cycles through these colours at a different rate – the traffic light located at intersection $i$ stays green for $g_i$ ($1 \\leq g_i \\leq 1000$) minutes, then stays red for $r_i$ ($1 \\leq r_i \\leq 1000$) minutes, then goes back to green, and so on.Jim-Bob always obeys the law, and will never run a red light. If he arrives at an intersection while the light is green, he can pass right through it. Otherwise, he must wait there until the light turns green. If he gets to an intersection just as the traffic light is turning red, he must wait. It takes no time to drive through an intersection, so the light will never turn red on him as he drives through.Jim-Bob starts at his house, also known as intersection $1$. As soon as he leaves his house, all the traffic lights turn green, starting their green-red-green cycle. He wishes to drive to Billy-Bob’s house (which is right at intersection $K$) as fast as possible. Neither the starting nor the finishing intersections have traffic lights, so their $g$ and $r$ values will be given as 0. Find the minimum number of minutes Jim-Bob can take to drive from his house to Billy-Bob’s.InputLine $1$: 2 integers, $N$ and $K$Next $N$ lines: 3 integers, $s_i$, $e_i$, and $t_i$, for $i=1..N$Next $K$ lines: 2 integers, $g_i$ and $r_i$, for $i=1..K$OutputA single integer – the minimum number of minutes it takes to drive from Jim-Bob’s house to Billy-Bob’s. It will always be possible to do this.ExampleInput:7 6\r\n1 2 4\r\n1 3 1\r\n3 5 2\r\n2 4 2\r\n2 5 6\r\n5 4 2\r\n5 6 10\r\n0 0\r\n5 5\r\n1 20\r\n2 5\r\n10 2\r\n0 0Output:19Explanation of Sample:Jim-Bob can drive to intersection 2 (4 min), drive on to intersection 4 (2 min), wait for the green light (1 min), drive down to intersection 5 (2 min), and finally drive to Billy-Bob’s house (10 min). This is a total of 19 minutes.Note: The traffic light at intersection 3 only stays green for 1 minute, which means that Jim-Bob would just miss it if he drove directly there. On the other hand, he makes the green lights at intersections 2 and 5 just in time, as they turn red 1 minute after he passes.",
  "sample_input": "Input:7 6\r\n1 2 4\r\n1 3 1\r\n3 5 2\r\n2 4 2\r\n2 5 6\r\n5 4 2\r\n5 6 10\r\n0 0\r\n5 5\r\n1 20\r\n2 5\r\n10 2\r\n0 0Output:19",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/TLIGHTS",
  "scraped_at": "2025-08-17 00:33:51",
  "test_cases": [
    {
      "input": "7 6\r\n1 2 4\r\n1 3 1\r\n3 5 2\r\n2 4 2\r\n2 5 6\r\n5 4 2\r\n5 6 10\r\n0 0\r\n5 5\r\n1 20\r\n2 5\r\n10 2\r\n0 0",
      "expected_output": "19",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3 2\n7 2 1\n6 1 7\n5 3 5\n4 6 10\n3 7 4\n5 4 10\n8 10 10\n5 6\n1 7\n5 10\n7 2\n10 7\n6 3",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "7 9\n8 10 1\n9 10 8\n7 1 7\n10 3 6\n6 1 1\n8 6 8\n8 7 2\n2 7\n8 8\n7 4\n6 8\n9 10\n7 9",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "10 5\n3 10 1\n1 2 5\n1 8 6\n6 8 8\n6 10 10\n10 8 3\n4 8 1\n7 9\n5 5\n10 6\n9 7\n3 7\n6 4",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "94 13\n66 76 97\n45 100 13\n38 10 78\n42 9 62\n14 73 92\n57 64 60\n97 20 61\n29 90\n44 20\n90 43\n6 11\n30 80\n40 96",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "25 86\n82 78 22\n60 16 4\n75 18 35\n66 27 82\n87 80 2\n82 10 71\n50 93 9\n41 95\n40 70\n9 40\n44 51\n6 86\n84 31",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "21 97\n79 90 5\n81 11 64\n24 8 77\n100 53 64\n68 88 49\n2 13 90\n17 80 31\n33 38\n48 50\n82 81\n23 5\n12 73\n83 47",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "18 87\n95 86 21\n11 29 94\n79 45 29\n60 6 72\n100 63 1\n64 6 47\n18 30 85\n82 80\n46 55\n89 11\n26 49\n51 23\n47 77",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "72 31\n79 45 1\n68 88 24\n62 39 74\n89 76 96\n38 70 17\n89 93 87\n35 85 99\n90 95\n47 89\n79 14\n49 67\n70 23\n77 98",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "213 371\n445 400 263\n293 343 282\n88 140 342\n352 378 268\n469 88 314\n271 452 245\n117 247 304\n332 468\n363 497\n453 173\n255 333\n170 217\n450 404",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "459 199\n216 301 282\n215 84 443\n148 102 203\n257 309 353\n467 152 153\n328 146 398\n462 218 201\n335 194\n400 280\n307 167\n430 62\n275 210\n147 323",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "439 97\n120 367 59\n110 462 421\n342 141 487\n232 250 452\n309 373 481\n426 327 160\n227 181 436\n226 261\n332 151\n433 456\n69 60\n500 134\n162 278",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "281 482\n227 338 358\n313 206 197\n347 139 199\n347 255 426\n406 256 89\n450 371 317\n300 62 92\n59 387\n466 427\n195 474\n188 256\n60 220\n321 288",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "297 123\n92 280 275\n320 221 142\n322 158 133\n486 54 217\n309 176 352\n313 75 98\n434 239 67\n310 119\n484 215\n298 470\n324 100\n449 335\n422 217",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "63 164\n208 265 178\n483 209 489\n351 370 324\n243 139 162\n121 366 364\n52 362 381\n374 242 457\n136 282\n307 266\n108 256\n453 155\n349 269\n181 220",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "455 57\n486 171 226\n411 64 238\n270 479 221\n339 111 131\n358 248 69\n440 50 323\n446 438 68\n222 128\n162 95\n445 231\n418 105\n143 153\n62 461",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 1000\n999 2 2\n1 2 1000\n999 1 2\n1 999 999\n1 1 1\n1 2 999\n1000 999 1\n999 1000\n1000 999\n1 1000\n999 1\n999 999\n2 1000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 999\n999 1000 1\n999 1 2\n1 1 999\n1 1 1\n1000 999 1\n1 1 1\n1000 999 1000\n1000 2\n999 999\n999 1000\n2 1000\n999 1000\n1 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:51",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Ada and Diary",
  "tags": [],
  "text": "Ada the Ladybug's crush Bumblebee Blazewan has a secret diary. Ada wants to read it to see, whether he loves her too. Sadly, the diary is locked with some very strong cipher so she can't read it.She asked you for help. Unfortunately, you are not able to break through. Yet you observed, that the key generated in the cipher is generated in following wayXi+1=(aXi+b) mod (1011+3). You was able to find out first sixXi's. Predicting next will help you to get through - can you do it?InputThere will be no more than105test-cases.Each test-case consists of line containing 6 integers0 ≤     Xi< 1011+3(1 ≤ i ≤ 6)OutputFor each test-case printX7(modulo 100000000003).Example Input2 10 34 106 322 970\r\n2 4 4 4 4 4\r\n2 11 47 191 767 3071\r\n0 0 0 0 0 0\r\n2 8 32 128 512 2048Example Output2914\r\n4\r\n12287\r\n0\r\n8192Possible settinga=3, b=4, X1=2\r\na=0, b=4, X1=2\r\na=4, b=3, X1=2\r\na=2, b=0, X1=0\r\na=4, b=0, X1=2",
  "sample_input": "2 10 34 106 322 970\r\n2 4 4 4 4 4\r\n2 11 47 191 767 3071\r\n0 0 0 0 0 0\r\n2 8 32 128 512 2048",
  "sample_output": "2914\r\n4\r\n12287\r\n0\r\n8192",
  "link": "https://www.spoj.com/problems/ADAHACK",
  "scraped_at": "2025-08-17 00:33:21",
  "test_cases": [
    {
      "input": "2 10 34 106 322 970\r\n2 4 4 4 4 4\r\n2 11 47 191 767 3071\r\n0 0 0 0 0 0\r\n2 8 32 128 512 2048",
      "expected_output": "2914\r\n4\r\n12287\r\n0\r\n8192",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "6 2 8 5 1 5\n8 1 1 5 8 9\n7 5 10 1 10 9\n5 6 3 6 7 5\n1 1 4 4 4 5",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "7 3 9 2 1 4\n4 9 3 4 2 1\n2 8 1 5 8 8\n8 2 2 3 9 2\n2 8 10 5 6 4",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "7 10 5 5 3 1\n4 7 2 5 2 1\n5 9 2 6 7 5\n1 4 10 5 8 2\n5 10 5 7 1 3",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "35 2 22 54 66 42\n61 52 88 95 40 4\n18 62 65 82 74 85\n14 29 69 66 96 54\n26 29 57 44 95 72",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "25 18 88 18 85 9\n39 33 53 9 49 48\n42 66 87 62 28 33\n18 64 86 75 47 98\n8 7 5 33 85 1",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "67 22 88 26 53 44\n54 12 62 4 75 12\n20 75 2 87 30 10\n60 26 55 6 69 76\n86 72 33 15 55 41",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "35 6 66 29 19 95\n56 9 48 68 57 85\n5 93 17 15 44 12\n53 25 28 75 68 14\n26 14 99 34 55 40",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "36 42 51 16 78 80\n25 42 43 46 81 48\n77 21 38 84 95 75\n73 64 77 7 1 84\n98 31 41 1 25 65",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "444 469 199 381 309 266\n237 322 253 306 317 299\n315 463 55 113 124 403\n356 168 452 446 438 133\n56 339 60 117 405 280",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "375 112 185 230 220 353\n75 296 158 180 403 106\n256 277 458 265 204 427\n247 493 76 286 439 182\n368 470 243 170 60 225",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "395 339 416 63 318 406\n114 208 493 411 430 91\n447 53 469 482 431 277\n267 87 94 207 311 291\n177 91 216 335 431 352",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "106 252 165 161 308 85\n340 298 384 122 500 266\n130 81 285 169 433 266\n321 483 480 477 277 369\n428 483 285 424 81 177",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "339 281 200 295 483 50\n262 336 301 207 173 273\n480 289 297 150 343 178\n51 140 315 405 433 491\n288 190 442 250 483 292",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "140 167 102 342 264 150\n120 500 278 307 291 372\n328 103 418 88 306 79\n302 413 176 272 495 83\n125 490 284 306 198 368",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "187 176 116 203 411 459\n51 81 93 395 72 285\n190 142 126 492 71 355\n276 59 338 84 183 385\n490 380 443 461 469 69",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 2 2 999 999 1000\n1 1 1000 999 999 2\n1 1000 2 1 1 1000\n2 1 2 999 1 1\n999 999 1000 1 999 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 2 999 1 2 999\n1 1 2 999 1000 2\n1000 2 1000 1000 1 1\n2 2 1 1000 2 2\n1000 999 1 1 1 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:48",
  "total_test_cases": 20
}
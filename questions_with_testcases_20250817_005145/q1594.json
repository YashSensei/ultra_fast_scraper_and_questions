{
  "problem_code": "problems",
  "title": "Run",
  "tags": [],
  "text": "Run-length encoding of a number replaces a run of digits (that is, a sequence of consecutive equivalent digits) with the number of digits followed by the digit itself. For example, 44455 would become 3425 (three fours, two fives). Note that run-length encoding does not necessarily shorten the length of the data: 11 becomes 21, and 42 becomes 1412. If a number has more than nine consecutive digits of the same type, the encoding is done greedily: each run grabs as many digits as it can, so 111111111111111 is encoded as 9161.Implement an integer arithmetic calculator that takes operands and gives results in run-length format. You should support addition, subtraction, multiplication, and division. You won't have to divide by zero or deal with negative numbers.Input/OutputThe input will consist of several test cases, one per line. For each test case, compute the run-length mathematics expression and output the original expression and the result, as shown in the examples. The (decimal) representation of all operands and results will fit in signed 64-bit integers.ExampleInput:11 + 11\r\n988726 - 978625\r\n12 * 41\r\n1124 / 1112\r\n13 * 33\r\n15 / 16Output:11 + 11 = 12\r\n988726 - 978625 = 919111\r\n12 * 41 = 42\r\n1124 / 1112 = 1112\r\n13 * 33 = 39\r\n15 / 16 = 10",
  "sample_input": "Input:11 + 11\r\n988726 - 978625\r\n12 * 41\r\n1124 / 1112\r\n13 * 33\r\n15 / 16Output:11 + 11 = 12\r\n988726 - 978625 = 919111\r\n12 * 41 = 42\r\n1124 / 1112 = 1112\r\n13 * 33 = 39\r\n15 / 16 = 10",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/RLM",
  "scraped_at": "2025-08-17 00:33:29",
  "test_cases": [
    {
      "input": "11 + 11\r\n988726 - 978625\r\n12 * 41\r\n1124 / 1112\r\n13 * 33\r\n15 / 16",
      "expected_output": "11 + 11 = 12\r\n988726 - 978625 = 919111\r\n12 * 41 = 42\r\n1124 / 1112 = 1112\r\n13 * 33 = 39\r\n15 / 16 = 10",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5 2\n4 onr 2\n9 4\n5 py 10\n5 6\n9 rl 4\n2 8\n7 zgqz 5\n3 7\n10 ruj 2\n7 1\n7 ixvqw 1",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "3 6\n9 gseqk 6\n4 5\n1 anrt 5\n8 10\n9 hpr 6\n7 8\n1 yhnph 2\n8 2\n9 zkel 10\n5 3\n3 eo 6",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "1 3\n3 zlh 7\n4 3\n7 aah 4\n5 8\n1 muap 4\n5 8\n3 p 3\n9 10\n1 s 8\n10 3\n2 kblul 6",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "73 59\n93 nc 64\n16 38\n2 q 51\n40 9\n31 bcq 28\n60 71\n71 xnovn 37\n80 76\n43 lpw 41\n48 75\n30 fmcf 15",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "58 41\n39 xfei 90\n28 19\n43 eg 85\n72 9\n97 ohy 88\n60 93\n50 hfr 25\n87 69\n2 buy 60\n17 2\n28 q 42",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "23 89\n45 b 62\n44 3\n62 zmsl 2\n81 19\n96 h 88\n90 100\n100 zwq 53\n34 69\n98 a 15\n57 17\n29 elt 2",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "3 84\n80 iac 19\n73 38\n5 ne 36\n60 49\n4 tj 13\n9 98\n86 wip 53\n10 62\n89 hj 83\n94 59\n89 tyfra 44",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "90 38\n62 chcf 7\n59 45\n25 sexe 18\n76 52\n58 qwcj 79\n72 21\n35 v 11\n80 27\n13 trucp 40\n23 53\n55 xgnjm 54",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "228 71\n149 nglm 195\n193 428\n477 s 102\n70 422\n85 hzwht 333\n72 289\n499 glgt 208\n173 406\n215 h 264\n336 495\n263 y 423",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "261 351\n338 rmynq 308\n199 89\n170 bdp 321\n307 441\n492 cbutg 78\n385 370\n197 qhwhm 316\n249 94\n199 ywiks 92\n356 131\n408 uvgtc 167",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "161 480\n410 w 89\n346 307\n167 zqnmm 275\n441 284\n168 ox 499\n92 397\n123 m 87\n260 459\n380 tglx 496\n338 199\n67 p 474",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "147 342\n466 bahan 448\n349 80\n66 hbtj 264\n413 179\n426 hqd 243\n274 328\n330 hfwnj 482\n204 348\n475 zhpgt 421\n152 299\n133 tauch 366",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "396 401\n316 bn 127\n349 228\n446 sdus 384\n259 499\n139 hq 350\n411 169\n126 vyay 134\n463 195\n466 jy 293\n82 212\n117 mc 362",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "212 482\n113 scgj 260\n150 366\n484 nvycu 238\n338 312\n190 a 298\n481 400\n201 ygoa 237\n310 385\n271 nkw 270\n159 226\n342 ddmyx 271",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "242 397\n359 j 444\n289 344\n58 bcjk 149\n389 325\n326 c 341\n265 216\n280 v 391\n229 337\n381 symyz 465\n146 290\n98 xckbg 407",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 pxpj 1000\n1000 1000\n1000 iomqr 1000\n1000 1000\n1000 omwzh 1000\n1000 1000\n1000 rt 1000\n1000 1000\n1000 oqxxc 1000\n1000 1000\n1000 mx 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 col 1000\n1000 1000\n1000 gjk 1000\n1000 1000\n1000 qyss 1000\n1000 1000\n1000 pl 1000\n1000 1000\n1000 jajpk 1000\n1000 1000\n1000 r 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "999 1000\n1000 pyw 999\n1 1\n2 qsjh 1000\n2 1\n999 j 999\n1 999\n2 j 1\n999 1000\n1000 loco 2\n999 1\n999 snu 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 1000\n1000 qb 1\n2 1\n999 bd 1000\n999 2\n2 ny 2\n1 2\n1 vvg 2\n999 1\n1000 hod 1000\n2 999\n999 xurb 999",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:50",
  "total_test_cases": 20
}
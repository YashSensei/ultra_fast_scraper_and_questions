{
  "problem_code": "problems",
  "title": "Unlock it ! Part 2",
  "tags": [],
  "text": "Now you all helped Vaibhav solve the puzzle and open the gate last time (although not too much help). But as soon as he opens the gate, there is another puzzle to open the front door. Let’s see whether this time you all are able to help him or not.Fac(n) = number of trailing zeroes in n!Fact(n) = Fac(n) % 25 + 1F(0) = 1F(1) = 1F(2) = 1F(n) = product of all odd primes less than or equal to n (for n ≤ 10)F(n) = 4fact(n)× f(n/5) × f(n/10) (for n > 10)For every fraction, a floor value is taken for evaluation.For eg. F(11) = 4fact(11)× F(floor(11/5)) × F(floor(11/10)) = 43× F(2) × F(1) = 64Given N, find the maximum value of(ab) % modsuch that a and b satisfies the relation gcd(a, b) = F(N). (Gcd : Greatest common divisor.)InputFirst line gives T, total number of test cases. Next T lines give the number N.OutputFor each test case, print the desired value on a new line.ConstraintsT ≤ 10N ≤ 106mod = 109NOTE: a must be ≤ 5 × F(n) and b must be ≤ 5 × F(n), a can be equal to b.ExampleInput:1\r\n2Output:1024",
  "sample_input": "Input:1\r\n2Output:1024",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/DCEPC604",
  "scraped_at": "2025-08-17 00:34:08",
  "test_cases": [
    {
      "input": "1\r\n2",
      "expected_output": "1024",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5\n2\n9\n3\n3\n8",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n8\n3\n9\n9\n2",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n4",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "17\n21028664\n29199508\n49729056\n74821724\n39490539\n42770959\n10588971\n39464091\n85638718\n40825747\n84258134\n22992602\n89449676\n49846764\n86643898\n74174186\n4503517",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "10\n34735390\n23397953\n70107883\n55412722\n19569622\n6468184\n83362786\n94078200\n95112178\n23538646",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "18\n99942046\n23500158\n24951834\n90945190\n51198677\n28118149\n3858779\n79473432\n6085207\n41049524\n58778744\n26408694\n41901671\n86263133\n38893851\n82372339\n56426094\n31217335",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "20\n34486565\n66970059\n29719960\n3341806\n94248636\n16571265\n5955996\n62810937\n28773230\n39333055\n42250204\n68219289\n32570281\n68662129\n60161311\n57991158\n91986969\n49186017\n14852583\n71987819",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "9\n5944900\n56801147\n67812537\n33127522\n21293358\n74488876\n36880937\n26844475\n64446610",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "71\n25325\n79956\n47146\n92722\n42480\n1565\n85644\n91879\n81923\n95852\n70232\n13167\n75981\n4299\n6638\n70330\n22226\n75241\n55653\n72592\n77798\n92265\n85643\n99474\n85419\n28739\n37548\n19527\n57009\n49615\n64958\n52367\n5508\n85414\n95175\n8864\n41160\n22489\n83739\n33917\n92245\n80027\n35402\n1247\n53952\n25858\n31549\n59138\n58087\n2819\n32868\n28229\n94534\n4145\n74919\n37232\n77373\n58611\n86277\n6772\n24342\n55862\n69091\n79508\n79721\n62749\n78429\n75566\n26839\n52062\n9438",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "42\n52456\n83883\n60225\n93144\n41453\n8009\n62702\n33210\n93600\n86090\n20916\n16912\n85490\n21852\n47389\n27918\n24999\n57737\n69575\n78768\n72265\n32700\n11160\n48726\n40618\n69698\n67728\n6868\n11276\n347\n2582\n96532\n75675\n7639\n61635\n7522\n41568\n77993\n13935\n82711\n43672\n84745",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "33\n18344\n17224\n22884\n19855\n46393\n77016\n57502\n32942\n14998\n32195\n2525\n89769\n71267\n98174\n99835\n72774\n73607\n13319\n97693\n36624\n38370\n11473\n19317\n62733\n21535\n29624\n41797\n98490\n31872\n45068\n31402\n92691\n78406",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "88\n51195\n61084\n76227\n78137\n83801\n18013\n90141\n56400\n47912\n27693\n47426\n37877\n91156\n55868\n21453\n77690\n86633\n38106\n26138\n77488\n28265\n79252\n63634\n4326\n11169\n36977\n22885\n10128\n88973\n92613\n28321\n62401\n2626\n51150\n6520\n87651\n5459\n75205\n43300\n27109\n64559\n22742\n70511\n94776\n20588\n20364\n43152\n49928\n66541\n75503\n70235\n8582\n88381\n44620\n30806\n31354\n24110\n1597\n32534\n79546\n12720\n25015\n15108\n87323\n59339\n9616\n97661\n93274\n4721\n71597\n18748\n46435\n30426\n94140\n83610\n97694\n80645\n56659\n30736\n79911\n46667\n28589\n11919\n16685\n64937\n14289\n60114\n58473",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "43\n64805\n3576\n58251\n63115\n41872\n74380\n54772\n41906\n44010\n25227\n64072\n75402\n31158\n54973\n50406\n663\n49421\n38093\n53090\n24590\n96258\n19945\n72473\n37505\n48304\n47083\n80852\n69154\n24704\n48490\n46508\n13738\n12882\n62403\n295\n33364\n91012\n80371\n74453\n2391\n11161\n47953\n8076",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "37\n32422\n17940\n88315\n58086\n90609\n76595\n77162\n48949\n70604\n79598\n97479\n60760\n72707\n73014\n70916\n31336\n18302\n37620\n18748\n60528\n45471\n27279\n84767\n57900\n53914\n21923\n95036\n33849\n24598\n19160\n98886\n57945\n28502\n19046\n30834\n67820\n24276",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "31\n42934\n32471\n64848\n37187\n72273\n1288\n10363\n32056\n71679\n68233\n88030\n23415\n19916\n28976\n50763\n92778\n53958\n53200\n11284\n50520\n28537\n89246\n62291\n75054\n22118\n90701\n38869\n83612\n76867\n5494\n50245",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "106\n81228463\n61796393\n71280178\n21786725\n48979350\n81910364\n43511944\n30962090\n23673961\n85928382\n36496093\n58468634\n22779707\n50131906\n16426224\n54108181\n14877218\n7987162\n52469255\n98774771\n83374496\n98872627\n33707023\n32821813\n87419383\n37980037\n89017756\n46617727\n21189418\n81146004\n47027951\n56281734\n91900941\n93988717\n81451423\n54631339\n11331949\n25354053\n46876951\n83127822\n97213588\n92853626\n46241171\n12492408\n55540038\n49328406\n82340713\n26723946\n48666445\n3560992\n75531606\n61443817\n61304000\n65362215\n8277756\n86633910\n37256313\n79071884\n13068945\n85019595\n23281658\n14190515\n61551642\n29684904\n99251820\n6460713\n88396200\n86002272\n38416599\n96153922\n92745969\n26125150\n61239349\n29043793\n67087814\n32930970\n46125386\n12773481\n48100809\n61219084\n51285106\n74682971\n79476220\n3321232\n15291429\n18006954\n88561962\n96760734\n22208695\n30012776\n4977953\n58271716\n71160010\n10898964\n80092824\n17521266\n94704491\n26178620\n81523076\n55782227\n95188188\n14574491\n21974645\n69447574\n73753231\n64296852",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 106)"
    },
    {
      "input": "106\n66242962\n40567201\n92066309\n8922977\n56386953\n52967514\n3115448\n21136200\n99562872\n90644118\n87104113\n49423319\n39333865\n85855251\n25943254\n79586847\n27569495\n45064574\n8844680\n91377398\n3219784\n26343866\n132438\n11231771\n24802537\n20057155\n5643877\n64813338\n31716197\n47728172\n40211279\n35548239\n88776326\n91446100\n46861827\n8542661\n81927422\n62052965\n66189071\n14499601\n67786421\n60510929\n88596184\n84058558\n58991005\n74238673\n69506733\n43933059\n47038829\n85016899\n33866066\n92006594\n57353440\n22417170\n21336971\n10806905\n54573222\n6591234\n57304295\n4572544\n7557090\n39619517\n27295124\n64381220\n2414658\n93759256\n26257447\n90607871\n38903991\n46297743\n10348355\n27354209\n2760645\n35983820\n28041211\n97987527\n38585122\n92368384\n45807953\n34919228\n72431802\n82333281\n83081119\n97934657\n72010087\n28405433\n93388350\n64057723\n41063746\n6747904\n44294074\n97007454\n59341974\n62699906\n50523000\n22990817\n38764894\n15632826\n45744811\n69527222\n44207140\n93187998\n9804393\n9028817\n27393353\n98895535",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 106)"
    },
    {
      "input": "1\n81261636",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 1)"
    },
    {
      "input": "1\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 1)"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:53",
  "total_test_cases": 20
}
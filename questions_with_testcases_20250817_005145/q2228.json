{
  "problem_code": "problems",
  "title": "finding maximum possible number",
  "tags": [],
  "text": "Given a number n, find the maximum possible number you can make by deleting exactly k digits.T : number of test cases ≤ 103.1 ≤ number of digits in n ≤ 105. (n might contain leading zeros.)0 ≤ k ≤ nif value of n is equal to k. then just print a new line.InputT: number of test cases.T lines follow each with n and k.OutputThe maximum possible number.ExampleInput:2\r\n1223 2\r\n8756 2Output:23\r\n87ExplanationNote that left to right order should be maintained. As in the example given answer is 23 not 32.",
  "sample_input": "Input:2\r\n1223 2\r\n8756 2Output:23\r\n87",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/MAX_NUM",
  "scraped_at": "2025-08-17 00:34:03",
  "test_cases": [
    {
      "input": "2\r\n1223 2\r\n8756 2",
      "expected_output": "23\r\n87",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3\n10\n10\n6",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n6\n3\n1\n8\n2",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n5\n1\n6\n5\n3",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "12\n14049694\n54335558\n88580970\n79007034\n25765917\n15974422\n71179353\n82712182\n52080432\n64751757\n2379832\n46516197",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "20\n83987547\n9943215\n39767096\n58240868\n35072436\n5177243\n66177271\n16882820\n2791173\n62231344\n72076369\n83695238\n24811135\n35380298\n23032706\n90354892\n58391434\n65588731\n1516686\n81064849",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "7\n22720178\n29234586\n27465728\n70354809\n29983633\n32615438\n56578799",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "18\n37884865\n67374484\n43692090\n94550693\n56244845\n13484474\n88842211\n23827809\n48300589\n97529993\n47119143\n60524038\n75304519\n34887109\n38920732\n36575838\n55215016\n57262598",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "7\n45168781\n10576976\n87092811\n22379902\n89927580\n2002578\n47127008",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "46\n57905\n16382\n23387\n8854\n55603\n20217\n65378\n27253\n83960\n51539\n73371\n28507\n64608\n25126\n70031\n53737\n3724\n87163\n20900\n82450\n62403\n59778\n37805\n24244\n76834\n16450\n43088\n16292\n25113\n38820\n86335\n12916\n8493\n8363\n9912\n95616\n1296\n65052\n9181\n58419\n41396\n15025\n52091\n10419\n68332\n67658",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "36\n74936\n85837\n6353\n53652\n81037\n42342\n23943\n55644\n23286\n67297\n54290\n4369\n83210\n11936\n60962\n83867\n71279\n85063\n86943\n23576\n4287\n59033\n12406\n15828\n34447\n24669\n17130\n44186\n93036\n82829\n80515\n24795\n38059\n19214\n94269\n34912",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "75\n86757\n48131\n85667\n83116\n67193\n2823\n46639\n92089\n31874\n93128\n62308\n16178\n41436\n22486\n18329\n53533\n34343\n51690\n7827\n2925\n24016\n69708\n14339\n5051\n5206\n32849\n77928\n65335\n48661\n47846\n35385\n97324\n66065\n68571\n38573\n68256\n12509\n63060\n10132\n73170\n10725\n33293\n29705\n32140\n93773\n93172\n72975\n89991\n82951\n59975\n75230\n44485\n7319\n99749\n53691\n64997\n35776\n7741\n47015\n25262\n41672\n53193\n57258\n23060\n15754\n60620\n27721\n15439\n51017\n67624\n72220\n85959\n31436\n3405\n78998",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "63\n33664\n15980\n95706\n77700\n45733\n62764\n81110\n78488\n23600\n53441\n82955\n71323\n21956\n9079\n31436\n69201\n48553\n36842\n62159\n4714\n40416\n31542\n43191\n86997\n36785\n56852\n28069\n28184\n68865\n39023\n20204\n83882\n2805\n34918\n32412\n80465\n25493\n94102\n41153\n83915\n33730\n46954\n52413\n83379\n29935\n16160\n31969\n87356\n28778\n43929\n97961\n58136\n18886\n46961\n97716\n31970\n8269\n502\n37309\n39443\n32579\n12699\n98448",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "71\n2936\n64016\n85289\n31060\n90155\n35073\n15967\n26741\n37994\n91248\n54464\n87247\n18422\n14209\n95299\n38375\n60952\n98008\n37476\n23944\n25904\n60425\n33454\n27553\n83374\n71294\n11845\n79636\n5797\n57699\n49027\n83903\n3379\n26877\n25072\n31428\n89412\n8702\n78522\n75452\n53056\n57030\n70316\n49098\n87893\n36588\n39777\n87252\n7476\n312\n24032\n86904\n78061\n47107\n4753\n16366\n45874\n92072\n63294\n15947\n1927\n52651\n16156\n73731\n55008\n36726\n14837\n10121\n62390\n7127\n67669",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "36\n81417\n5044\n45483\n84108\n15112\n85615\n91654\n85295\n27643\n73922\n4837\n20489\n35687\n76242\n12345\n42042\n782\n27697\n49169\n82035\n75427\n15769\n45156\n36484\n2891\n64647\n748\n9109\n33747\n71637\n45467\n22712\n85831\n23616\n68679\n93063",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "41\n2647\n93469\n65320\n10116\n82633\n18118\n760\n97655\n52442\n93364\n41359\n43249\n12782\n17750\n4020\n58560\n35261\n58928\n76224\n2824\n87034\n53524\n34912\n39320\n34712\n53150\n88809\n67126\n19736\n33038\n92430\n11616\n23266\n11886\n30729\n16912\n45227\n15830\n16075\n82821\n57527",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "105\n61203128\n57031897\n40356218\n45111142\n14089554\n48881317\n63103063\n86851812\n39246088\n12865902\n26541734\n97036879\n41432469\n16175510\n50805820\n81188775\n80032506\n81248596\n28577\n12388803\n5766223\n65486158\n14772598\n27957851\n9948947\n8251931\n12345497\n54566568\n33618756\n97292835\n66651763\n93602419\n25277787\n60357363\n46162636\n30718742\n53645499\n26069507\n87811693\n22099652\n69753134\n23467515\n72249673\n69567522\n73739354\n51634168\n649329\n56487202\n19038831\n85966412\n29975320\n71137668\n70355768\n43361397\n89576223\n9353866\n50116289\n18195291\n40463161\n84107898\n64998340\n22282787\n65175042\n61982154\n49913886\n12898008\n19672774\n17506333\n92371265\n42283017\n85028005\n14701163\n43868390\n37836774\n27897871\n58552208\n40727933\n25877113\n86420212\n5308688\n72003589\n71060915\n74026667\n81817814\n61376041\n55551678\n94818545\n64004525\n91120122\n59471794\n83573416\n53372864\n81582739\n73017245\n67219026\n83652671\n16137257\n38233528\n82506560\n23449051\n15617822\n83564558\n82309595\n53660293\n94823589",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "105\n53104329\n7957667\n48389664\n77641031\n22614850\n35118739\n48991112\n99010890\n93681833\n92537056\n12755806\n2634065\n61486670\n92823260\n28080479\n21595495\n12737877\n83979294\n98746118\n34653718\n14125193\n54854314\n48780262\n14923697\n45222447\n578637\n88691434\n12257812\n88542895\n91718658\n4267919\n91993357\n17980495\n88436797\n23472219\n58280430\n64082088\n16858322\n23647018\n38294979\n14251902\n80192918\n45661230\n42283993\n29205351\n82257922\n63625884\n67480790\n29360080\n64289041\n50210324\n27993329\n18197807\n5232673\n90974409\n70035634\n36429223\n8905288\n70810875\n28944085\n15564116\n92792084\n70679799\n76659366\n77628098\n39333187\n36376347\n46831721\n59093053\n32824320\n59744291\n13314403\n31856294\n80386279\n82445947\n16237595\n55833929\n8800866\n1222929\n56061112\n25565302\n25123269\n49802152\n95393563\n86910832\n10056415\n20743487\n34404601\n32635910\n463043\n48526233\n16442747\n88748197\n21729198\n45495486\n93664760\n26691625\n70541297\n2872592\n26689698\n95305191\n48068298\n82499432\n47676783\n14431165",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "1\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 1)"
    },
    {
      "input": "1\n25650617",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 1)"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:52",
  "total_test_cases": 20
}
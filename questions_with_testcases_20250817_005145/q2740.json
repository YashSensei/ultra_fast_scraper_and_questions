{
  "problem_code": "problems",
  "title": "Learn You a Haskell for Great Good!",
  "tags": [],
  "text": "Gus is really smart guy. He really like challenges and he wants to be the best functional programmer in the world. He knows that the best way to start is reading theLearn You a Haskell for Great Good!book. But Gus isn’t so good at making decisions, nevertheless Gus is super good making “problem resolver” friends. So, let's solve this problem and help Gus!There arenchapters in the book, the time that takes to move from the chapterito the chapter (i+1) or vice versa, is ti. The time to move from the chapter n-th to the first one, or vice versa, is tn(yes, Gus sometimes is weird and starts to read from the end of the book). Also, all the chapters have different difficulty for Gus. The difficulty of the i-th chapter is di.Gus tries to read some chapters each day in the morning. He does the following steps each morning:He chooses two different chapters i and j.He starts to read the first selected chapter.When he finished the first chapter he moves to the next chapter (in one of the two possible directions).He reads all chapters between i and j i.e. (i, i + 1 ... j) or (i, i − 1 ... j)But Marcos is a competitive person and he wants to be the best functional programmer too. So each day in the morning he takes away some consecutive chapters of Gus’s book and he puts them back in the night. Gus can't stand the disorder, so he can't read the chapters in a non-consecutive order (remember that for Gus the consecutive of the chapter i is the chapter i+1 or the chapter i-1).If the two chapters that Gus chooses are x-th and y-th, we can estimate the energy the morning reading takes to him as 2 * (dx+ dy) + time(x, y). Since Marcos takes away chapters on exactly one of the two sequences connecting x and y, the time time(x, y) between chapters x and y is uniquely defined.In the i-th day Marcos will take away the chapters between aiand bi. More formally, if ai≤ bi, Marcos takes away the chapters with indices from range [ai, bi], otherwise he takes away the chapters with indices from [ai, n] ∪ [1, bi].Please help Gus to decide which two chapters he should choose in order to consume the most energy.InputThe first line contains two integer n and m, denoting number of chapters and number of days, respectively.The second line contains n integers t1, t2... tn, the time between consecutive chapters.The third line contains n integers d1, d2... dn, the difficulty of chapters.Each of following m lines contains two integers aiand bidescribing each new day. There are always at least two different chapters Gus can choose that are not affected by Marcos.OutputFor each day print the answer in a separate line.ExampleInput:3 3\r\n5 1 4\r\n5 1 4\r\n3 3\r\n2 2\r\n1 1Output:17\r\n22\r\n11Constraints(3 ≤ n ≤ 105, 1 ≤ m ≤ 105)t1, t2... tn(1 ≤ ti≤ 109)d1, d2... dn(1 ≤ di≤ 109)aiand bi(1 ≤ ai, bi≤ n)",
  "sample_input": "Input:3 3\r\n5 1 4\r\n5 1 4\r\n3 3\r\n2 2\r\n1 1Output:17\r\n22\r\n11",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/VZLA2019L",
  "scraped_at": "2025-08-17 00:34:13",
  "test_cases": [
    {
      "input": "3 3\r\n5 1 4\r\n5 1 4\r\n3 3\r\n2 2\r\n1 1",
      "expected_output": "17\r\n22\r\n11",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "9 6\n2 10 7\n1 7 2\n1 9\n10 9\n1 10",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "1 4\n1 10 5\n9 1 3\n5 10\n3 7\n7 2",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "5 3\n6 5 3\n6 9 1\n1 1\n9 6\n1 3",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "15 60\n12 1 93\n13 76 80\n45 84\n32 50\n60 44",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "86 87\n69 22 76\n28 75 3\n78 54\n32 57\n41 24",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "92 75\n5 85 95\n23 32 33\n41 24\n58 48\n59 19",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "76 91\n33 83 85\n89 3 13\n33 48\n56 26\n72 12",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "74 79\n8 56 70\n57 73 23\n42 1\n27 2\n61 77",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "27 52\n49 20 19\n7 49 48\n51 40\n36 23\n11 25",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "27 10\n13 21 12\n51 24 46\n6 52\n28 5\n14 7",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "51 27\n45 5 21\n21 16 31\n36 36\n26 19\n6 9",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "41 44\n46 27 46\n8 47 28\n12 30\n21 47\n49 37",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "42 34\n21 9 46\n19 35 40\n12 49\n13 51\n32 25",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "18 28\n5 42 37\n29 40 14\n28 31\n22 18\n14 34",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "39 7\n24 11 26\n26 23 11\n33 50\n23 10\n9 40",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "105 105\n105 105 105\n105 105 105\n105 105\n105 105\n105 105",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "105 105\n105 105 105\n105 105 105\n105 105\n105 105\n105 105",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "104 105\n104 104 104\n105 105 1\n1 105\n105 104\n104 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 105\n1 105 1\n2 1 105\n1 104\n2 105\n105 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:54",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Electrical Engineering",
  "tags": [],
  "text": "The electrical engineers’ indefatigable strive towards environmentally friendly energy production translated into the recent boom of hydro, solar, wind and geothermal power plants. While the production side seems ready, these ambitious projects have their bottleneck in the transportation and distribution: Besides the energy losses that occur during transportation over long distances, the renewable energy sources cannot provide power on demand – they must be taken as provided by nature. Used at large scale in today’s networks, unreliable green energy can disrupt the balance of power grids easily and cause huge damage along with large-scale power outages.Serious effort is thus put on researching transient and dynamic phenomena in power grids. You are offered a position in the lab for linear and planar distribution networks. Given a description of the distribution network’s line impedances Zi, you are to find the equivalent impedance between some couples of nodes. The knowledge of such equivalent impedances may speed up the network analysis considerably! Impedances are complex number whose real part represents the resistive line behaviour while the imaginary part stands for the capacitive (negative) or inductive (positive) characteristic. Lines are bidirectional, that is impedance(a,b) equals impedance (b,a).It was proven that any linear and planar graph (can be drawn in a way that its edges intersect only at their endpoints) can be reduced into a single equivalent edge that represents the equivalent impedance between its ending nodes, using the following six transformations:Now that you have all the necessary operations available, are you able to determine the equivalent impedance between several couples of nodes?InputThe input consists of several test-cases separated by an empty line. Each test-case starts with the number of nodesN(1 ≤ N ≤ 100), the number of bidirectional connectionsC(0 ≤ C ≤ 1000) and the number of equivalent impedances to computeZ(0 ≤ Z ≤ 10) on a line. Then followClines, each describing one bidirectional connection in the form‘EndPoint_1’ ‘EndPoint_2’ ‘Impedance’.‘EndPoint_1’and ‘EndPoint_2’are in the range1toNand impedance has the format ‘re im’ wherereandimdesignate the real and imaginary parts respectively, both being real numbersdsuch that 10-3< |d| < 103. The nextZlines each hold two integers, the indices of the nodes between which you are to compute the equivalent impedance. Input terminates on a test-casewith N=C=Z=0, which must not be evaluated.OutputFor each couple of endpoints, output the equivalent impedance in the form ‘re im’ wherereandimdesignate the real and imaginary parts respectively. If the nodes are not connected, output ‘no connection’. Electrical engineers will consider your result as correct if the absolute error on the real and imaginary parts is below 10-2. Finish each test-case on a blank line.SampleInput:5 10 3\r\n3 1 12.317 -0.779\r\n5 3 30.107 0.289\r\n5 1 27.447 -22.649\r\n4 2 15.351 24.371\r\n5 5 19.63 -3.549\r\n2 2 11.841 18.757\r\n4 5 4.834 -16.542\r\n3 5 5.022 -22.387\r\n2 5 24.768 -22.356\r\n5 2 27.351 12.053\r\n1 2\r\n2 3\r\n3 3\r\n\r\n10 10 4\r\n9 8 6.36 17.411\r\n1 3 27.596 -6.484\r\n9 10 4.735 -8.282\r\n8 8 6.901 27.939\r\n8 4 14.894 3.729\r\n5 4 14.311 -2.422\r\n10 10 11.009 6.225\r\n4 4 3.196 -32.703\r\n10 9 15.282 -14.799\r\n3 9 20.473 27.158\r\n10 9\r\n8 1\r\n2 9\r\n9 6Output:23.37 -7.26\r\n19.61 -6.97\r\n0.00 0.00\r\n\r\n3.79 -5.46\r\n54.43 38.09\r\nno connection\r\nno connectionSample input 1                                      Sample input 2",
  "sample_input": "Input:5 10 3\r\n3 1 12.317 -0.779\r\n5 3 30.107 0.289\r\n5 1 27.447 -22.649\r\n4 2 15.351 24.371\r\n5 5 19.63 -3.549\r\n2 2 11.841 18.757\r\n4 5 4.834 -16.542\r\n3 5 5.022 -22.387\r\n2 5 24.768 -22.356\r\n5 2 27.351 12.053\r\n1 2\r\n2 3\r\n3 3\r\n\r\n10 10 4\r\n9 8 6.36 17.411\r\n1 3 27.596 -6.484\r\n9 10 4.735 -8.282\r\n8 8 6.901 27.939\r\n8 4 14.894 3.729\r\n5 4 14.311 -2.422\r\n10 10 11.009 6.225\r\n4 4 3.196 -32.703\r\n10 9 15.282 -14.799\r\n3 9 20.473 27.158\r\n10 9\r\n8 1\r\n2 9\r\n9 6Output:23.37 -7.26\r\n19.61 -6.97\r\n0.00 0.00\r\n\r\n3.79 -5.46\r\n54.43 38.09\r\nno connection\r\nno connection",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/ELEC",
  "scraped_at": "2025-08-17 00:33:17",
  "test_cases": [
    {
      "input": "5 10 3\r\n3 1 12.317 -0.779\r\n5 3 30.107 0.289\r\n5 1 27.447 -22.649\r\n4 2 15.351 24.371\r\n5 5 19.63 -3.549\r\n2 2 11.841 18.757\r\n4 5 4.834 -16.542\r\n3 5 5.022 -22.387\r\n2 5 24.768 -22.356\r\n5 2 27.351 12.053\r\n1 2\r\n2 3\r\n3 3\r\n\r\n10 10 4\r\n9 8 6.36 17.411\r\n1 3 27.596 -6.484\r\n9 10 4.735 -8.282\r\n8 8 6.901 27.939\r\n8 4 14.894 3.729\r\n5 4 14.311 -2.422\r\n10 10 11.009 6.225\r\n4 4 3.196 -32.703\r\n10 9 15.282 -14.799\r\n3 9 20.473 27.158\r\n10 9\r\n8 1\r\n2 9\r\n9 6",
      "expected_output": "23.37 -7.26\r\n19.61 -6.97\r\n0.00 0.00\r\n\r\n3.79 -5.46\r\n54.43 38.09\r\nno connection\r\nno connection",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "6 3 10\n10 5 10 3\n1 1 2 3\n3 3 5 7\n10 4 2 1\n7 6 6 4\n10 10 10 9\n5 6 1 10\n10 1 9 10\n6 8 7 3\n4 5 9 10\n4 3\n2 2\n10 10\n1 8 5\n9 6 5 2\n9 10 10 4\n1 10 10 3\n6 2 8 5\n4 3 4 2\n3 6 5 6\n7 10 4 1\n1 3 9 1\n2 7 5 3\n8 3 2 5\n8 6\n7 8\n3 2\n6 7",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "4 3 3\n5 2 3 9\n1 6 6 5\n1 5 3 9\n5 1 4 2\n4 7 10 9\n7 3 1 1\n7 6 9 6\n2 7 5 5\n5 2 1 3\n1 1 3 4\n3 1\n8 10\n10 10\n7 2 1\n4 10 2 5\n7 8 5 3\n10 3 2 3\n2 3 5 8\n2 2 3 10\n1 3 8 3\n6 6 7 7\n7 1 8 4\n6 10 2 4\n4 6 7 9\n4 2\n6 9\n7 9\n6 6",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "7 4 3\n10 3 3 9\n7 1 8 6\n10 7 10 2\n7 3 2 3\n8 7 2 5\n6 8 10 5\n6 4 5 5\n5 8 10 8\n2 9 8 1\n9 10 7 8\n5 4\n5 2\n6 8\n1 7 1\n3 4 5 2\n2 6 5 10\n1 6 3 4\n7 9 7 2\n4 3 6 10\n4 7 8 7\n4 7 10 5\n8 7 9 8\n1 4 5 5\n1 1 3 8\n9 7\n5 10\n6 10\n8 7",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "48 12 99\n31 83 31 45\n63 16 29 58\n4 57 5 16\n90 76 64 58\n32 46 5 93\n27 3 90 2\n7 32 89 54\n33 11 24 36\n87 16 6 85\n74 75 94 47\n61 15\n18 71\n16 66\n39 17 40\n16 49 28 76\n82 55 49 7\n40 87 34 44\n65 2 26 78\n38 72 44 44\n84 34 69 88\n83 28 77 52\n91 26 53 61\n80 76 25 60\n22 16 88 26\n34 61\n41 72\n4 38\n1 19",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "52 95 44\n92 99 89 1\n11 24 59 26\n5 4 42 53\n33 73 68 9\n53 65 58 35\n32 72 91 36\n75 84 71 66\n36 29 14 80\n57 22 2 41\n57 65 78 92\n100 34\n22 45\n18 30\n89 30 70\n79 36 10 12\n29 76 24 41\n11 91 84 69\n66 43 39 46\n44 27 36 3\n22 10 38 21\n54 60 51 56\n39 4 72 28\n55 81 89 14\n10 96 29 86\n60 94\n99 41\n49 73\n43 74",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "56 43 59\n81 100 77 13\n25 2 14 31\n44 4 8 60\n56 66 95 23\n13 48 99 70\n90 93 89 89\n12 2 42 76\n65 7 46 42\n46 55 4 17\n89 36 73 16\n31 22\n84 43\n71 94\n9 1 57\n51 67 37 62\n47 14 27 73\n38 59 35 43\n27 72 42 46\n99 1 75 47\n13 72 53 38\n82 8 91 66\n100 15 29 82\n72 79 25 16\n2 67 48 27\n25 74\n7 37\n93 23\n72 1",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "61 1 1\n11 98 100 16\n58 36 15 73\n75 85 15 29\n20 59 3 25\n17 46 86 27\n36 81 33 97\n54 7 18 63\n6 98 25 94\n51 27 52 11\n25 33 39 91\n58 66\n61 16\n3 80\n96 11 59\n24 34 89 46\n78 54 69 49\n48 87 73 99\n75 83 41 82\n47 86 15 86\n20 32 46 3\n88 91 50 76\n35 7 35 88\n56 75 69 14\n51 13 36 5\n24 100\n34 79\n51 77\n35 10",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "100 36 83\n3 93 49 46\n58 49 86 13\n88 75 30 86\n94 89 3 4\n92 84 57 47\n86 75 82 10\n92 95 88 57\n21 55 48 11\n61 86 4 68\n53 9 70 67\n88 69\n46 94\n52 64\n98 66 99\n95 92 74 92\n37 65 86 72\n58 88 63 67\n80 52 82 60\n44 26 13 74\n69 27 27 26\n66 9 26 11\n12 89 90 84\n58 92 79 18\n86 67 13 42\n14 11\n10 52\n39 24\n34 79",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "21 46 26\n21 20 22 16\n11 13 26 7\n47 47 13 32\n13 40 12 15\n34 47 32 23\n24 13 28 32\n10 39 24 40\n32 23 37 46\n23 14 21 19\n10 17 20 17\n27 41\n16 34\n25 35\n43 9 43\n40 18 22 20\n39 17 8 31\n47 10 31 7\n48 10 17 47\n27 45 31 50\n48 12 12 37\n19 44 26 32\n15 6 30 41\n29 9 46 38\n24 32 27 26\n8 39\n47 21\n6 42\n38 48",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "18 20 33\n44 36 18 18\n44 22 10 36\n23 17 8 29\n20 36 30 25\n28 17 43 34\n34 50 14 48\n28 38 38 7\n50 14 44 43\n29 13 20 14\n31 24 9 45\n28 39\n27 16\n15 18\n17 36 30\n48 13 8 34\n12 8 6 22\n39 26 35 48\n46 50 22 5\n48 30 42 34\n47 23 14 34\n29 37 17 41\n19 37 36 19\n18 28 35 42\n43 7 44 10\n9 9\n31 34\n26 22\n43 25",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "42 10 28\n41 37 14 19\n48 24 44 9\n36 31 42 25\n27 40 26 34\n42 25 28 10\n47 34 47 36\n49 39 8 49\n33 20 16 39\n35 40 5 44\n12 25 35 45\n36 17\n12 12\n7 28\n33 26 33\n21 22 47 37\n5 10 8 50\n39 7 10 12\n17 48 40 14\n25 10 12 12\n49 13 20 44\n35 49 9 20\n44 43 44 7\n31 26 46 27\n22 30 17 25\n9 20\n20 28\n7 49\n38 37",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "34 34 38\n45 46 44 29\n25 17 45 8\n44 22 19 11\n33 35 38 50\n22 26 44 24\n46 38 46 40\n17 33 38 11\n35 29 37 29\n5 33 17 50\n42 7 36 28\n10 50\n50 37\n18 42\n44 10 36\n40 20 10 24\n49 41 31 26\n9 21 14 28\n48 31 24 9\n44 29 10 23\n5 28 18 35\n19 41 35 22\n46 10 33 21\n43 42 5 21\n48 36 15 38\n35 41\n5 5\n14 30\n50 23",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "22 25 13\n10 5 30 37\n22 40 10 14\n27 26 9 29\n34 11 23 27\n32 26 32 48\n13 42 20 32\n13 6 32 37\n36 21 26 42\n47 8 10 46\n21 22 26 35\n18 15\n22 18\n42 19\n43 17 42\n36 49 21 26\n27 24 48 17\n38 31 39 15\n18 11 25 8\n38 24 23 34\n37 9 44 11\n29 25 47 41\n18 36 21 6\n13 41 8 18\n36 28 42 37\n33 36\n10 25\n12 48\n17 24",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "10 39 26\n35 13 44 50\n37 10 27 29\n5 20 30 5\n15 17 40 45\n50 15 23 36\n27 27 44 15\n20 9 14 15\n50 44 28 47\n11 30 11 35\n26 23 40 24\n34 49\n37 46\n50 40\n29 13 32\n38 44 26 11\n13 12 14 45\n49 39 50 17\n34 49 6 10\n31 47 38 41\n45 47 6 25\n36 32 9 10\n41 50 8 41\n11 8 48 10\n47 18 6 18\n38 35\n50 6\n33 32\n43 5",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "19 36 12\n47 46 34 5\n15 38 10 19\n37 30 34 20\n13 15 36 26\n46 21 33 34\n37 13 26 8\n13 48 19 27\n11 10 14 49\n35 11 50 35\n34 50 33 7\n15 50\n40 10\n16 25\n6 19 35\n15 28 11 45\n14 28 50 16\n20 30 24 43\n10 44 35 45\n6 19 35 9\n7 19 18 33\n29 40 16 41\n46 19 12 7\n9 43 13 50\n20 16 29 27\n46 23\n36 34\n35 27\n14 29",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "100 100 100\n100 100 100 100\n100 100 100 100\n100 100 100 100\n100 100 100 100\n100 100 100 100\n100 100 100 100\n100 100 100 100\n100 100 100 100\n100 100 100 100\n100 100 100 100\n100 100\n100 100\n100 100\n100 100 100\n100 100 100 100\n100 100 100 100\n100 100 100 100\n100 100 100 100\n100 100 100 100\n100 100 100 100\n100 100 100 100\n100 100 100 100\n100 100 100 100\n100 100 100 100\n100 100\n100 100\n100 100\n100 100",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "100 100 100\n100 100 100 100\n100 100 100 100\n100 100 100 100\n100 100 100 100\n100 100 100 100\n100 100 100 100\n100 100 100 100\n100 100 100 100\n100 100 100 100\n100 100 100 100\n100 100\n100 100\n100 100\n100 100 100\n100 100 100 100\n100 100 100 100\n100 100 100 100\n100 100 100 100\n100 100 100 100\n100 100 100 100\n100 100 100 100\n100 100 100 100\n100 100 100 100\n100 100 100 100\n100 100\n100 100\n100 100\n100 100",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 2 99\n100 99 99 100\n2 99 1 99\n99 99 2 100\n2 2 1 1\n99 99 100 99\n99 100 2 99\n1 1 99 1\n99 100 99 2\n2 99 1 99\n1 2 99 100\n99 100\n100 100\n2 100\n99 100 2\n99 2 1 1\n99 99 99 100\n2 1 2 1\n99 99 1 100\n1 99 99 100\n1 1 100 1\n1 2 99 99\n99 1 2 99\n2 1 100 2\n1 100 1 100\n100 1\n1 99\n100 99\n100 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "99 2 1\n99 100 100 99\n1 2 1 2\n100 2 2 99\n100 2 100 99\n1 99 2 1\n1 100 2 99\n100 2 1 100\n1 99 99 99\n99 99 2 2\n1 100 99 2\n100 1\n1 1\n1 2\n100 100 2\n100 1 1 99\n2 2 100 100\n1 100 2 1\n99 100 1 2\n2 2 2 100\n1 99 99 2\n100 2 100 99\n2 2 1 2\n100 1 1 99\n100 1 100 99\n2 1\n99 99\n99 2\n1 100",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:47",
  "total_test_cases": 20
}
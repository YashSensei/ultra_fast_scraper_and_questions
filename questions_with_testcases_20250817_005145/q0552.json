{
  "problem_code": "problems",
  "title": "Lubenica",
  "tags": [],
  "text": "Children in school are having fun instead of listening to the teacher. With their iPhone devices the children throw watermelons at each other on the Facebook social site.The game started when Goran threw one watermelon at each of his friends during the first class that day. During subsequent classes, all children (including Goran) behaved like this:If they had been hit by an odd number of watermelons during the previous class, they threw exactly one watermelon at each of their friends;If they had been hit by an even number of watermelons (including zero), then they hit each of their friends with two watermelons.The children are numbered 1 through N, Goran obviously being number 1. The friend relationships between the children are also known.Write a program that will calculate the total number of watermelons thrown after H classes.InputThe first line contains two integers N and H (1 ≤ N ≤ 20, 1 ≤ H ≤ 1 000 000 000), the number of kids and classes.Each of the following N lines contains a string of N characters '0' or '1'. The character (A, B) in this matrix is '1' if children A and B are friends.No child will be their own friend. The input matrix will be symmetricOutputOutput the number of watermelons after H classes.ExampleInput:5 3\r\n01000\r\n10110\r\n01000\r\n01001\r\n00010Output:26",
  "sample_input": "Input:5 3\r\n01000\r\n10110\r\n01000\r\n01001\r\n00010Output:26",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/LUBEN",
  "scraped_at": "2025-08-17 00:33:07",
  "test_cases": [
    {
      "input": "5 3\r\n01000\r\n10110\r\n01000\r\n01001\r\n00010",
      "expected_output": "26",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "8 4\n8\n3\n2\n1\n9",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "6 3\n4\n6\n3\n2\n7",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "9 6\n1\n10\n1\n3\n5",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "15 9\n18\n12\n1\n5\n12",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "19 4\n8\n7\n16\n11\n20",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "5 6\n19\n4\n13\n20\n1",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "15 10\n2\n16\n8\n19\n16",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "11 4\n1\n9\n1\n3\n5",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "9 9\n4\n10\n4\n2\n8",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "10 1\n2\n3\n8\n6\n5",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "2 8\n8\n1\n8\n8\n7",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "6 9\n8\n2\n10\n9\n6",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "1 3\n8\n9\n3\n9\n4",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "8 2\n10\n7\n3\n4\n3",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "3 3\n2\n1\n1\n1\n1",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "20 20\n20\n20\n20\n20\n20",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "20 20\n20\n20\n20\n20\n20",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "20 19\n19\n1\n1\n19\n1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "20 20\n20\n19\n1\n19\n1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:47",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Solution to all the problems",
  "tags": [],
  "text": "People have been coming to the wise man, complaining about the same problems every time.One day he told them a joke and everyone roared in laughter.After a couple of minutes, he told them the same joke and only a few of them smiled.When he told the same joke for the third time no one laughed.The wise man smiled and said:\"You can't laugh at the same joke over and over. So why are you always crying about the same problem?\"He has also created a very simple game to cheer the people up. The game is as follows:You are given a sequence A of N integers.The task is to answer Q queries on the given sequence. For each query, you will be given four space-separated integers L, R, P, K.Print the index of Kthoccurrence of P in L to R(inclusive). If no such index exists, print -1.InputThe first line contains two space-separated integers N and Q.The second line contains N space-separated integers. (1-based indexing)Following Q lines contain,Four integers L, R, P, K.OutputFor each query, print a single line containing one integer between 1 to N i.e. index of the Kthoccurrence of P in L to R.Print -1 if no such index exists.Constraints2 ≤ N, Q ≤ 1051 ≤ Ai≤ 1061 ≤ L < R ≤ N1 ≤ P ≤ 1061 ≤ K ≤ NExampleInput:10 3\r\n1 1 2 1 2 3 1 2 3 4\r\n1 10 2 3\r\n1 5 2 3\r\n5 9 3 2Output:8\r\n-1\r\n9",
  "sample_input": "Input:10 3\r\n1 1 2 1 2 3 1 2 3 4\r\n1 10 2 3\r\n1 5 2 3\r\n5 9 3 2Output:8\r\n-1\r\n9",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/KTH_INDEX",
  "scraped_at": "2025-08-17 00:34:07",
  "test_cases": [
    {
      "input": "10 3\r\n1 1 2 1 2 3 1 2 3 4\r\n1 10 2 3\r\n1 5 2 3\r\n5 9 3 2",
      "expected_output": "8\r\n-1\r\n9",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "8 5\n9 10 3 3 1 7 8 6 5 9\n9 10 7 9\n5 8 1 7\n1 9 9 7",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "5 8\n2 10 9 7 8 10 9 4 6 7\n2 1 10 5\n1 10 9 6\n9 7 10 9",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "9 7\n9 6 7 2 6 3 4 7 3 6\n6 3 8 1\n2 9 2 10\n4 2 3 4",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "62 20\n77 1 71 73 100 50 92 49 57 59\n36 73 75 56\n12 49 84 82\n21 85 39 29",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "87 82\n66 96 70 71 85 65 77 5 75 8\n72 27 80 73\n74 81 78 29\n31 67 84 56",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "82 97\n13 65 96 89 100 56 34 21 67 19\n28 33 61 73\n36 18 82 5\n13 95 59 16",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "72 7\n17 4 58 59 21 53 49 30 83 15\n58 36 29 1\n98 99 92 72\n77 14 98 34",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "2 52\n85 76 57 10 39 78 18 15 66 92\n85 65 55 91\n60 17 26 60\n23 84 17 71",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "367 445\n72 444 84 370 462 241 221 352 93 314\n94 86 350 380\n142 139 187 194\n443 145 448 263",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "80 390\n486 152 276 192 125 101 444 475 215 251\n211 472 274 138\n315 168 68 61\n350 388 436 382",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "271 292\n163 112 411 87 459 340 384 82 437 389\n494 498 262 174\n149 61 500 213\n237 395 328 145",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "417 357\n421 418 450 93 239 158 175 338 379 398\n160 259 357 376\n335 136 321 491\n288 197 175 146",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "59 283\n349 194 438 259 210 213 205 179 162 99\n198 170 261 150\n414 368 243 227\n357 419 364 200",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "336 449\n450 303 377 129 292 467 454 217 120 488\n240 459 98 243\n89 260 329 395\n299 95 413 350",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "446 288\n156 238 183 377 301 211 82 367 295 392\n356 306 409 482\n406 286 341 148\n341 180 464 146",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000 1 999 1 1000 1000 999 1 999\n999 1 999 999\n2 1000 1000 1\n2 1000 999 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 1\n1000 1 1 1 1 2 2 1000 2 999\n1 999 1000 999\n2 999 999 999\n2 1000 1 999",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:54",
  "total_test_cases": 20
}
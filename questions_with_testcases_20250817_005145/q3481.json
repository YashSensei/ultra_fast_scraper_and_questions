{
  "problem_code": "problems",
  "title": "Red Cross Hospital",
  "tags": [],
  "text": "The Red Cross is a humanitarian and neutral organization that strives to provide assistance to victims of civil wars and other situations of serious violence.Recently, Nlogônia entered into a political crisis that culminated in a great civil war. This war wrecked dozens of innocent communities across the country. Seeing the calamity situation in which the country joined, the Red Cross decided to help the population in all affected regions in Nlogônia.For this, it was decided that a hospital base will be installed to support the Red Cross in the country. However, the summit do not know where to build the base of Red Cross hospital. You and your team were hired to tell the Red Cross the position that they must build the hospital, with the constraint that the distance to the farthest community from the hospital is as small as possible.InputThe input file consists of several test cases. For each test case, the first line contains the number of affected communities N to be served. Each of the following N lines contains a localization of each community. Localization is represented by decimal coordinates X and Y. After the first test case will be another line with a new test case defined by number of communities N. The input never contains repeated coordinates for each community in each test case and the input ends with N = 0.Suppose:0 ≤ N ≤ 100000-100000 ≤ X, Y ≤ 100000OutputFor each test case of your program prints just a one line with two decimal number separated by commas indicating the optimum location for the construction of the base hospital, regardless of the area have a built space. Each coordinate must be printed with four decimal place of accuracy.ExampleInput:2-1 01 040.5  0.50.5 -0.50.0  0.50.0 -0.50Output:0.0000, 0.00000.2500, 0.0000",
  "sample_input": "Input:2-1 01 040.5  0.50.5 -0.50.0  0.50.0 -0.50Output:0.0000, 0.00000.2500, 0.0000",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/REDCROSS",
  "scraped_at": "2025-08-17 00:34:14",
  "test_cases": [
    {
      "input": "2-1 01 040.5  0.50.5 -0.50.0  0.50.0 -0.50",
      "expected_output": "0.0000, 0.00000.2500, 0.0000",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "9 2 5 1 2 9 5 4 2 10 4",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "2 5 9 10 2 1 8 7 2 3 7",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "6 1 3 10 8 5 1 3 9 3 7",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "42 53 28 38 6 59 80 78 61 73 28",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "31 36 57 48 81 42 6 9 27 56 89",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "1 9 73 93 84 16 61 32 8 45 21",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "85 65 7 32 46 96 17 47 72 82 95",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "59 59 39 98 96 26 17 92 99 96 7",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "33427 36379 12202 18939 36049 27650 6639 38148 47920 38843 37670",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "49541 15883 6090 9870 8646 45079 37812 22192 29219 35316 18171",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "12693 27349 25519 27226 26796 15342 42598 15545 18063 14346 42574",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "11790 16165 37621 39243 13506 48038 15009 35867 35504 48358 47222",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "42247 39225 25393 12887 20178 30400 28550 36077 24443 9424 15840",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "48058 38828 8779 15731 47668 37350 17654 15472 19007 42150 28897",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "22824 7778 18636 19614 20019 46878 26484 7268 14472 41977 25786",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "99999 2 100000 1 2 1 1 100000 1 2 100000",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "99999 99999 2 2 99999 1 100000 1 99999 2 1",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:56",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:38:09"
}
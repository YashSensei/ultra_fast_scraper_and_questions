{
  "problem_code": "problems",
  "title": "Grid Tiling",
  "tags": [],
  "text": "Vikas is the chief interior designer in charge of the Taj Palace, Mumbai. He wants to make an impressive and colourful pattern in the courtyard. Importing exotic tiles has become very difficult after the Mumbai terror attacks, and therefore Vikas has only 4 kinds of tiles to choose from:A     B     C    D\r\n==    ==    ==   ==\r\nXX    X     X    X\r\nXX    X     XXAny rotation of above tiles is also permitted.Each tile is available in 'k' different colors, and there's an infinite supply of all tiles. The courtyard has dimensions 2 × 'n'. Vikas wants to tile the courtyard in such a way that no two adjacent tiles have the same color. Two tiles are considered adjacent if they share a common side. Two tilings are considered different if:The arrangement of tiles is different.There is at least 1 position (1*1 square) which has different colors in the two arrangements.Can you help Vikas find the number of different ways in which he can tile the courtyard, subject to the above conditions?InputThe first line of input contains a single integer 't', denoting the number of test cases.Each of the next 't' lines contains 2 space separated integers 'n' and 'k'.OutputFor each test case output one integer, denoting the number of different ways in which the courtyard can be tiled.Two tiles are considered adjacent if they share an edge. Two tiles which just share a common point are not considered adjacent.Since the answers can be large, print all the quantities modulo 1000000007.Constraints:t ≤ 10001 ≤ n ≤ 1091 ≤ k ≤ 1000ExampleInput:2\r\n1 1\r\n1 2Output:1\r\n4Explanation:Test case 1: There is only 1 way to tile the courtyard, by using a 2×1 tile.Test case 2: Let '1' and '2' be the available colors. The grid can be tiled in 4 ways:place one 2×1 tile of color '1',place one 2×1 tile of color '2',place two 1×1 tiles (color '1' above and color '2' below),place two 1×1 tiles (color '2' above and color '1' below)",
  "sample_input": "A     B     C    D\r\n==    ==    ==   ==\r\nXX    X     X    X\r\nXX    X     XX",
  "sample_output": "Input:2\r\n1 1\r\n1 2Output:1\r\n4",
  "link": "https://www.spoj.com/problems/BTCODE_J",
  "scraped_at": "2025-08-17 00:33:08",
  "test_cases": [
    {
      "input": "A     B     C    D\r\n==    ==    ==   ==\r\nXX    X     X    X\r\nXX    X     XX",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2\r\n1 1\r\n1 2",
      "expected_output": "1\r\n4",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "ivbl taz v zehd\nrnscg byt v rk\nv bx oro b\noibu sp zhvqm",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "nborh qo gx k\nms nygk d qgij\nj aixq f p\nqoy pmca z",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "kcl xxx kysrp pd\niuvwe oma h xolg\nfvmo kae dne iea\nzqtnz greu roi",
      "expected_output": "To be computed",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "r fvhqu ytwc wkbe\nvss oigms sfhq sa\nvoa mkosw skec wuc\nsiu xiicf fdrm",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "vlfl zyjx ll wr\nvxh piwxz m se\nv g aoix sc\ngwbv crajq cjs",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "dtlh e zf ev\njzodj hjgwq wze xetbh\nwzyor a vrym z\nzms skz f",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "zgzm en k f\ngob h ygoks hnzt\ng chdcd pw k\nbaxv x loel",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "na drr uu ffu\nkppyw mhc rp jw\nf wjpci bdj okwfm\nonxpx kdfvf fdnv",
      "expected_output": "To be computed",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "tfj d iao oeved\npuf ryxy kq m\ntiug r doili s\nt fm fgx",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "t hrw nc umky\nm kkm i g\nmiek s zk fksi\ntxjm jvwn tcpt",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "ythbo xm ntgk rj\nmlhb kl td xztk\nsqj pynw qvms omrsk\nolnwb qz t",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "spyes adz pybi hqyoa\nhxmkq ou kwk xdrkt\nnc ebdj kgff jeftb\ngq adv ngirv",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "a alw zfdok lk\ny j f fls\njq she jlzdk vjwf\ndqwbk fdp zzgz",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "serek fce xxds sn\npidkm yyqec x uqwr\nol ztd xpd ubepn\nktu x ylnvl",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "unl wtfxr duzi w\nk huua c ypkr\na mm pmd dezfb\ng bo ihykt",
      "expected_output": "To be computed",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "clsw torzx x zou\nkwezl ad dd pupm\njx cz edlvn x\nrdo mwvk z",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "mb ao nexbf wcqra\ngr ob nrtm bryb\nul i ctvah ylzkp\no bi tkj",
      "expected_output": "To be computed",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "kdzc l eapyc dciv\nskc y kvzk g\nuvz ln zqxw ofwfr\nznq h xinqx",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:45",
  "total_test_cases": 20
}
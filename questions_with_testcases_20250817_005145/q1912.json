{
  "problem_code": "problems",
  "title": "Life on Fornax",
  "tags": [],
  "text": "NASA's Ultrasonic Crawling Vessel, UCV for short, has arrived to galaxy UDFj - 39546284 in the Fornax constellation and has found a peculiar type of bacteria-like lifeform. As you may imagine a plan to collect samples a bring them back to earth has been set in motion. However, it would be rather unfortunate if they are all dead by the time the UCV gets back, the trip would take approximately 13.42 x 109years travelling at light speed. Therefore, its necessary to pick a number of bacterium so that there are at least some of them alive when the UCV arrives back.The UCV has studied the reproduction cycle of the bacterium inside a cryogenic pod and their behavior when released from the pod, but it lacks the algorithm to compute the final number for such a long period of time. Fortunately, it's been designed with a wormhole plugin installation mechanism that allows to upload algorithms in a matter of only a few years.Aging phase: Each bacteria becomes a year older.Reproduction phase: Each bacteria gives birth to a new bacteria, this is slightly different to earth bacteria in the sense that the new and old bacterium are no identical. The new bacteria is 0 years old while the old bacteria is at least 1 year old.Passing phase: Each bacteria that reaches maturity, exactly M years old, dies.Fox example, this one reproduction cycle given a 0 years old bacteria and a 1 years old bacteria if maturity is reached at 2 years old.As you can see, during cryogenic reproduction, there's no fear of bacterium extinction, the number of births is at least as much as the number of deaths. However, when the pod is opened the bacterium enter into a strange iterative reduction phase, in each step of the reduction the oldest R bacterium die immediately; this process ends when there are fewer than R bacterium left. Note that the biggest problem arises when at some iteration there are exactly R bacterium left because they all die at that moment.NASA ha asked you to write the algorithm that will be uploaded to the UCV to determine the number of bacterium that will exist after the pod is opened here on earth.InputThe input contains several test cases, each one corresponding to a single simulation. Each test case starts with a line with three integers, the maturity age (1 ≤ M ≤ 50), the number of years for the UCV to come back (0 ≤ Y ≤ 1012) and the reduction size (1 ≤ R ≤ 109); separated by a single space. The following line contains M integers, theyrepresent the number of 0, 1 ... M - 1 years old bacterium placed inside the cryogenic pod.The end of input is indicated by a test case with M = Y = R = 0.OutputFor each simulation output a single line containing a single integer, the number of bacterium that will be alive after the reduction process has finalized.ExampleInput:2 1 41 12 1 21 12 2 21 12 2 51 16 0 1000000 1 2 3 4 56 1000000000000 1000000 1 2 3 4 50 0 0Output:31101521809",
  "sample_input": "Input:2 1 41 12 1 21 12 2 21 12 2 51 16 0 1000000 1 2 3 4 56 1000000000000 1000000 1 2 3 4 50 0 0Output:31101521809",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/UCV2013F",
  "scraped_at": "2025-08-17 00:33:45",
  "test_cases": [
    {
      "input": "2 1 41 12 1 21 12 2 21 12 2 51 16 0 1000000 1 2 3 4 56 1000000000000 1000000 1 2 3 4 50 0 0",
      "expected_output": "31101521809",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1 7 8 2 5 3 10 5 2 8 9 9 5 7 6 8 1 7 2 9 3 3 7 9 7 6 2 4 7",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "6 1 1 9 4 1 3 8 3 7 1 5 2 6 1 10 1 4 10 2 8 9 9 10 8 1 3 4 7",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "8 2 1 1 9 2 7 5 4 7 1 9 3 10 9 1 4 5 7 3 10 1 5 1 5 9 2 3 10",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "95 49 45 2 95 77 12 1 13 40 95 57 88 15 75 85 13 73 83 51 22 39 17 13 12 33 37 85 58",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "1 27 46 77 34 83 78 9 46 4 89 82 9 53 8 26 71 75 15 37 60 74 41 65 75 80 31 62 73",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "19 23 78 96 44 47 18 42 14 33 49 85 78 67 58 90 58 41 6 70 52 18 88 65 25 84 86 97 18",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "10 71 30 42 13 35 56 74 1 74 65 27 85 91 99 3 50 70 100 70 5 29 50 17 94 47 14 86 84",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "87 41 69 75 96 34 69 32 49 68 20 93 52 57 62 87 40 31 45 81 84 69 50 15 15 16 92 4 53",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "313 301 290 442 163 371 170 67 92 215 78 172 151 470 418 316 436 331 80 150 186 448 293 374 458 135 186 451 135",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "182 359 150 444 344 401 303 363 453 263 128 418 108 402 175 258 344 268 253 145 294 422 265 328 72 69 57 59 425",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "230 217 208 54 134 469 208 155 98 419 303 458 56 358 448 322 500 304 268 425 498 493 291 408 363 375 353 317 444",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "459 189 218 365 353 461 340 344 114 311 377 345 248 171 282 50 401 364 305 458 132 416 178 330 60 419 264 407 314",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "124 499 388 394 318 259 205 211 147 322 347 371 253 238 211 156 192 271 205 109 448 126 107 304 176 121 106 216 65",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "144 292 469 91 114 57 141 338 379 388 197 390 403 112 180 164 471 57 252 235 442 236 251 194 460 56 490 319 434",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "146 138 98 119 272 124 367 442 486 73 385 190 120 494 101 463 203 204 310 204 182 282 111 346 117 358 205 239 466",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1 1 2 2 1000 1000 999 1000 1000 1000 999 999 2 1000 999 999 999 2 1 1 2 999 1000 1 1000 2 999",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 999 1 1000 999 1000 2 2 1 999 1000 999 2 1000 1000 1 999 1000 2 1000 1000 1000 1000 999 999 1000 1 1000 1",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:51",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:19"
}
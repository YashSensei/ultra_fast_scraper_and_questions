{
  "problem_code": "problems",
  "title": "Matts Trip",
  "tags": [],
  "text": "Matt finds himself in a desert with $N$ ($2 \\leq N \\leq 10$) oases, each of which may have food, water, and/or a palm tree. If oasis $i$ has food, then $F_i=1$ - otherwise, $F_i=0$. Similarly, $W_i=1$ if and only if oasis $i$ has water, and $P_i=1$ if and only if it has a palm tree. These 3 values are completely independent of one another.Some pairs of these oases are connected by desert paths, which each take 1 hour to traverse. There are $M$ ($0 \\leq M \\leq 45$) such paths, with path $i$ connecting distinct oases $A_i$ and $B_i$ in both directions ($1 \\leq A_i,B_i \\leq N$). No pair of oases is directly connected by more than one path, and it's not guaranteed that all oases are connected by some system of paths.Matt starts at an oasis $S$, and wants to end up at a different oasis $E$ ($1 \\leq S,E \\leq N$).Both of these oases are quite nice - it's guaranteed that $F_S=W_S=P_S=F_E=W_E=P_E=1$.Since he's in a hurry to get out of the desert, he wants to travel there in at most $H$ ($1 \\leq H \\leq 10^9$) hours.However, he can only survive for up to $MF$ hours at a time without food, and up to $MW$ hours at a time without water ($1 \\leq MF,MW \\leq 4$). For example, if $MF=1$ and $MW=2$, then every single oasis he visits along the way must have food (as he would otherwise spend more than 1 hour without it), and he cannot visit 2 or more oases without water in a row.Since Matt is a computer scientist, before actually going anywhere, he's interested in the number of different paths he can take that will get him from oasis $S$ to oasis $E$ alive in at most $H$ hours.Note that there may be no such paths.Being a computer scientist, he of course only cares about this number modulo ($10^9+7$).InputLine $1$: 7 integers, $N$, $M$, $H$, $S$, $E$, $MF$, and $MW$Next $N$ lines: 3 integers, $F_i$, $W_i$, and $P_i$, for $i = 1..N$Next $M$ lines: 2 integers, $A_i$ and $B_i$, for $i = 1..M$Output1 integer, the number of different valid paths, modulo ($10^9+7$)Example 1Input:3 3 3 1 2 1 4\r\n1 1 1\r\n1 1 1\r\n0 1 0\r\n1 2\r\n2 3\r\n1 3Output:2Explanation:The two possible paths, described in terms of oases visited, are $1 \\rightarrow 2$ and $1 \\rightarrow 2 \\rightarrow 1 \\rightarrow 2$. Matt can never go to oasis 3, as it doesn't contain food, which he can't survive without for more than 1 hour. The path $1 \\rightarrow 2 \\rightarrow 1 \\rightarrow 2 \\rightarrow 1 \\rightarrow 2$ is not valid, as it would take 5 hours rather than at most 3.Note that oasis 3 is the only oasis without a palm tree.Example 2Input:5 5 3 3 2 3 2\r\n1 0 0\r\n1 1 1\r\n1 1 1\r\n0 0 1\r\n0 1 0\r\n1 2\r\n1 3\r\n1 4\r\n3 4\r\n4 2Output:2Explanation:The two possible paths are $3 \\rightarrow 1 \\rightarrow 2$ and $3 \\rightarrow 4 \\rightarrow 2$.This time, oases 1 and 5 are lacking in palm trees.",
  "sample_input": "Input:3 3 3 1 2 1 4\r\n1 1 1\r\n1 1 1\r\n0 1 0\r\n1 2\r\n2 3\r\n1 3Output:2",
  "sample_output": "Input:5 5 3 3 2 3 2\r\n1 0 0\r\n1 1 1\r\n1 1 1\r\n0 0 1\r\n0 1 0\r\n1 2\r\n1 3\r\n1 4\r\n3 4\r\n4 2Output:2",
  "link": "https://www.spoj.com/problems/MATT",
  "scraped_at": "2025-08-17 00:33:48",
  "test_cases": [
    {
      "input": "3 3 3 1 2 1 4\r\n1 1 1\r\n1 1 1\r\n0 1 0\r\n1 2\r\n2 3\r\n1 3",
      "expected_output": "2",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5 5 3 3 2 3 2\r\n1 0 0\r\n1 1 1\r\n1 1 1\r\n0 0 1\r\n0 1 0\r\n1 2\r\n1 3\r\n1 4\r\n3 4\r\n4 2",
      "expected_output": "2",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "7 4 5 1 10 2 2\n9 3 3\n2 5 6\n3 3 2\n5 1\n3 1\n9 10",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "4 4 2 7 6 2 4\n7 4 10\n4 8 5\n6 7 9\n10 6\n4 10\n10 7",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "2 1 4 9 9 8 7\n1 6 3\n8 6 8\n9 9 5\n1 4\n5 8\n8 2",
      "expected_output": "0",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "73 23 57 6 38 72 73\n69 75 13\n46 85 26\n42 83 22\n76 51\n31 78\n1 38",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "85 57 88 34 23 61 55\n3 57 28\n41 34 93\n57 52 79\n15 59\n47 90\n77 13",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "36 21 67 78 2 58 29\n22 71 75\n17 56 16\n57 61 30\n68 24\n97 8\n52 20",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "26 74 93 90 16 7 80\n27 50 22\n65 5 70\n71 74 87\n74 61\n25 26\n8 45",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "54 53 56 27 81 64 52\n73 35 91\n8 46 87\n86 90 14\n61 47\n59 36\n42 74",
      "expected_output": "0",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "139 400 194 353 105 189 345\n178 440 346\n136 200 192\n186 138 201\n409 80\n468 401\n200 153",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "374 139 61 63 435 430 420\n110 308 199\n60 494 418\n452 313 336\n485 235\n410 95\n255 448",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "448 416 146 339 308 84 479\n296 230 118\n88 340 179\n125 440 399\n283 399\n432 439\n81 408",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "282 92 213 75 358 410 93\n435 70 446\n421 477 159\n213 367 230\n190 156\n418 321\n312 386",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "410 203 437 147 349 245 236\n76 62 366\n90 224 180\n477 233 258\n432 296\n196 469\n244 207",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "237 215 293 110 55 193 318\n327 296 385\n327 146 187\n216 244 500\n332 393\n90 112\n244 454",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "210 185 457 496 476 430 88\n307 293 412\n448 433 147\n422 248 238\n51 413\n234 65\n201 496",
      "expected_output": "0",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "0",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "999 999 1000 1000 999 2 1\n999 999 999\n1000 1 2\n1000 2 2\n999 1000\n999 1\n2 999",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:52",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:23"
}
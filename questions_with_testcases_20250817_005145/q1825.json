{
  "problem_code": "problems",
  "title": "Crime at Piccadily Circus",
  "tags": [],
  "text": "Sherlock Holmes is carrying out an investigation into the crime at Piccadilly Circus. Holmes\r\nis trying to determine the maximal and minimal number of people staying simultaneously at the crime scene at a moment when the crime could have been committed. Scotland Yard has already carried out a thorough investigation already, interrogated everyone seen at the crime scene and determined what time they appeared\r\nat the crime scene and what time they left. Doctor Watson offered his help\r\nto process the data gathered by Scotland Yard and find the numbers interesting\r\nSherlock Holmes, but he has some difficulties. Help him!TaskWrite a program whichreads from standard input the time interval during which the crime was commited\r\nand the data gathered by Scotland Yard,finds the minimal and\r\nthe maximal number of people present simultaneously in the\r\ntime interval when the crime could have been commited, (these numbers can be zero, though it would seem strange that noone\r\nwas present at the crime scene when the crime was commited, but that's the type of crime Holmes and Watson have to deal with)writes the outcome to standard output.InputTen test cases (given one under another, you have to process all!).\r\nThe first line of each test case consists of two integer numberspandk,0 ≤ p ≤ k ≤ 100000000. These denote the first and the last moment when the crime\r\ncould have been commited. The second line of each test case contains one integern, 3 ≤ n ≤ 5000. This is the number of people interrogated by Scotland Yard. The nextnlines consist of two integers - linei+2contains numbersaiandbiseparated by a single space,0 ≤ ai≤ bi≤ 1000000000. These are\r\nthe moments at which thei-th person apperared at and left the crime scene respectively.\r\nIt means that thei-th person was at the crime scene for the whole time from momentaiuntil momentbi(inclusive).OutputFor every test case your program should write to the standard output only\r\none line with two integers separated by a single space: the minimal and maximal number of people staying simultaneously at the crime scene, in the interval between momentpandk,\r\n(inclusive).ExampleOnly one test case.Input:5 10\r\n4\r\n1 8\r\n5 8\r\n7 10\r\n8 9Output:1 4",
  "sample_input": "Input:5 10\r\n4\r\n1 8\r\n5 8\r\n7 10\r\n8 9Output:1 4",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/PICAD",
  "scraped_at": "2025-08-17 00:33:39",
  "test_cases": [
    {
      "input": "5 10\r\n4\r\n1 8\r\n5 8\r\n7 10\r\n8 9",
      "expected_output": "1 4",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "9 10\n9\n2 2\n10 2\n1 9\n6 4",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "7 5\n4\n7 1\n3 8\n8 10\n9 6",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "4 4\n6\n6 7\n1 4\n8 6\n1 10",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "68 20\n80\n91 4\n76 12\n99 54\n50 60",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "25 61\n3\n15 86\n79 3\n93 56\n95 3",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "73 44\n21\n64 19\n59 29\n45 5\n71 60",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "4 50\n100\n56 76\n95 11\n9 14\n79 86",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "57 55\n86\n23 96\n83 61\n64 42\n64 96",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "2143 2044\n691\n993 398\n2201 1572\n2263 570\n942 1674",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "1850 848\n331\n1187 2332\n304 2008\n1622 1188\n2096 1750",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "2090 914\n256\n694 920\n365 825\n2034 1687\n1859 2396",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "2407 1077\n1749\n2206 1671\n2172 2155\n2267 1841\n1227 1143",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "1583 1511\n367\n1909 1615\n2132 828\n1367 1812\n2309 435",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "1117 894\n1234\n1200 2021\n1195 1326\n776 2125\n1072 539",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "522 2440\n508\n401 1242\n1007 2458\n774 267\n571 683",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "5000 5000\n5000\n5000 5000\n5000 5000\n5000 5000\n5000 5000",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "5000 5000\n5000\n5000 5000\n5000 5000\n5000 5000\n5000 5000",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "4999 1\n1\n5000 2\n5000 1\n5000 5000\n2 1",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "5000 2\n4999\n2 4999\n2 1\n5000 1\n4999 5000",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:51",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:16"
}
{
  "problem_code": "problems",
  "title": "Grid Arithmetic",
  "tags": [],
  "text": "Your task is to take anN-by-Nmatrix and pick numbers that can be added or subtracted from one another to most closely approximate 0. The catch is that you must only use exactly one number in each row and columnâ€”no more, no less.ExampleConsider the following matrix whereN= 3.1   75   10 \r\n   22  500    3\r\n    9  125   5075 - 22 - 50 = 3 is the correct answer. 10 - 1 - 9 = 0, but 1 and 9 are from the same column. 3 - 1 = 2, but does not use enough numbers.InputThe first line contains a single positive integerT, representing the number of test cases.Ttest cases follow. Each test case begins with a line containing a single integerN, representing the size of the matrix. The nextNlines each containNspace-separated integers, representing the matrix.OutputFor each test case, output a single line containing the absolute value of the total found that is closest to 0.SampleInput2\r\n2\r\n1 5\r\n4 3\r\n3\r\n1 75 10\r\n22 500 3\r\n9 125 50Output1\r\n3",
  "sample_input": "1   75   10 \r\n   22  500    3\r\n    9  125   50",
  "sample_output": "Input2\r\n2\r\n1 5\r\n4 3\r\n3\r\n1 75 10\r\n22 500 3\r\n9 125 50Output1\r\n3",
  "link": "https://www.spoj.com/problems/BYU15W_2",
  "scraped_at": "2025-08-17 00:34:36",
  "test_cases": [
    {
      "input": "1   75   10 \r\n   22  500    3\r\n    9  125   50",
      "expected_output": "Input2\r\n2\r\n1 5\r\n4 3\r\n3\r\n1 75 10\r\n22 500 3\r\n9 125 50Output1\r\n3",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1 8 1\n8 6 9\n1 7 8",
      "expected_output": "0\n0\n0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "4 8 6\n6 9 6\n2 7 6",
      "expected_output": "0\n0\n0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "10 3 2\n8 5 3\n6 3 5",
      "expected_output": "0\n0\n0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "23 3 9\n15 74 37\n92 61 81",
      "expected_output": "0\n0\n0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "29 22 50\n19 59 77\n8 11 10",
      "expected_output": "0\n0\n0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "100 59 14\n1 46 24\n86 28 33",
      "expected_output": "0\n0\n0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "93 98 6\n13 22 83\n94 67 56",
      "expected_output": "0\n0\n0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "23 38 26\n61 44 90\n62 67 1",
      "expected_output": "0\n0\n0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "463 230 266\n139 116 424\n357 392 265",
      "expected_output": "0\n0\n0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "219 313 57\n272 159 205\n470 182 451",
      "expected_output": "0\n0\n0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "347 357 309\n389 137 131\n324 175 449",
      "expected_output": "0\n0\n0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "186 76 119\n74 244 361\n229 159 342",
      "expected_output": "0\n0\n0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "124 312 174\n407 75 431\n75 76 324",
      "expected_output": "0\n0\n0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "444 87 62\n351 126 174\n242 76 63",
      "expected_output": "0\n0\n0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "216 53 394\n365 490 296\n116 457 399",
      "expected_output": "0\n0\n0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000\n1000 1000 1000\n1000 1000 1000",
      "expected_output": "0\n0\n0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000\n1000 1000 1000\n1000 1000 1000",
      "expected_output": "0\n0\n0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 999 1000\n2 1 1000\n1000 1 1000",
      "expected_output": "0\n0\n0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 1 2\n999 999 2\n999 1000 2",
      "expected_output": "0\n0\n0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:58",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:38:24"
}
{
  "problem_code": "problems",
  "title": "Indomie",
  "tags": [],
  "text": "During recession, Amjad needs to queue for SembakoPlus. Sembako, as we all know, stands for “Sembilan Bahan Pokok” which consists of 9 kinds of item: Rice, Sugar, Cooking-oil, Meat, Egg, Milk, Corn, Kerosene and Iodized Salt. SembakoPlus consists of Sembako and one more item: Indomie! Amjad’s favorite of all time!! (therefore, no wonder why he could stand for this long queue).Each person in the queue is allowed to pick only one item. No need to ask, Amjad wants only Indomie. Unfortunately, they are running out of SembakoPlus stock and currently there are three kinds of item left: Rice, Sugar and Indomie. As he could see from afar, he is quite sure that Rice and Sugar will be enough for everybody.Given the number of remaining Indomie and the number of people queuing in front of Amjad, your task is to count the probability that he will get his Indomie. Amjad can’t do programming right now as he is very nervous so he can’t think logically. He needs your help!InputThere will be multiple test cases for this problem. Each test case contains two integers N (1 ≤ N ≤ 50) and S (0 ≤ S ≤ 50), where N is the number of people queuing in front of Amjad and S is the remaining number of Indomie.OutputFor each case, print in a single line the probability in percentage that he will get his Indomie with 5 digits precision (he’s being paranoid)ExampleInput:2 1\r\n3 2\r\n4 0\r\n4 1\r\n10 10\r\n14 9\r\n30 14Output:50.00000\r\n76.92308\r\n0.00000\r\n33.33333\r\n99.99831\r\n98.65515\r\n95.16071Explanation for 1st sample test case:There are two peoples queuing in front of Amjad, so those two peoples could pick of thefollowing combination {1st people, 2nd people}:1. Rice, Rice2. Rice, Sugar3. Rice, Indomie4. Sugar, Rice5. Sugar, Sugar6. Sugar, Indomie7. Indomie, Rice8. Indomie, SugarSince there is only one Indomie left, there are only 4 out of 8 combinations that ensure Amjad to get his Indomie (1, 2, 4 and 5), hence the probability is 4/8 = 50%.",
  "sample_input": "Input:2 1\r\n3 2\r\n4 0\r\n4 1\r\n10 10\r\n14 9\r\n30 14Output:50.00000\r\n76.92308\r\n0.00000\r\n33.33333\r\n99.99831\r\n98.65515\r\n95.16071",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/SCPC11G",
  "scraped_at": "2025-08-17 00:34:36",
  "test_cases": [
    {
      "input": "2 1\r\n3 2\r\n4 0\r\n4 1\r\n10 10\r\n14 9\r\n30 14",
      "expected_output": "50.00000\r\n76.92308\r\n0.00000\r\n33.33333\r\n99.99831\r\n98.65515\r\n95.16071",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "9 7\n6 5\n3 6\n3 10\n6 6\n9 1\n8 4",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "9 8\n2 3\n10 9\n4 4\n10 10\n8 2\n2 1",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "1 8\n1 5\n2 3\n2 4\n7 10\n5 6\n7 6",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "3 45\n26 32\n31 34\n10 17\n35 26\n48 29\n15 32",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "39 32\n19 24\n38 40\n7 22\n24 13\n47 39\n8 23",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "25 32\n46 36\n9 45\n35 45\n32 19\n44 11\n10 44",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "8 22\n13 7\n32 41\n27 3\n27 38\n30 24\n33 3",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "20 43\n22 14\n33 7\n3 45\n2 48\n9 34\n15 28",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "19 4\n6 12\n17 9\n19 3\n12 22\n25 2\n20 17",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "10 3\n16 8\n11 13\n17 25\n6 25\n5 13\n7 24",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "11 5\n20 11\n24 23\n2 2\n2 21\n7 12\n8 5",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "13 3\n3 3\n13 12\n22 19\n11 6\n11 8\n9 6",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "20 22\n5 19\n14 9\n4 14\n8 11\n22 18\n17 7",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "4 11\n17 23\n18 3\n3 6\n17 19\n16 3\n4 10",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "25 24\n24 17\n13 8\n16 20\n4 22\n25 8\n8 8",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 49\n49 2\n49 49\n49 1\n1 49\n2 2\n2 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 2\n1 2\n50 49\n49 2\n49 49\n1 1\n50 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:57",
  "total_test_cases": 20
}
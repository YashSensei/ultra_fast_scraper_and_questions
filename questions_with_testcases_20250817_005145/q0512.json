{
  "problem_code": "problems",
  "title": "Matrica",
  "tags": [],
  "text": "A matrix is a rectangular table of letters. A square matrix is a matrix with an equal number of rows and columns. A square matrix M is called symmetric if its letters are symmetric with respect to the main diagonal (Mi,j= Mj,ifor all pairs of i and j).For example, the following two matrices are symmetric:AAB          AAA\r\nACC          ABA\r\nBCC          AAAHowever, the following two are not:ABCD          AAB\r\nABCD          ACA\r\nABCD          DAA\r\nABCDGiven a collection of available letters, you are to output a subset of columns in the lexicographically smallest symmetric matrix which can be composed using all the letters. If no such matrix exists, output \"IMPOSSIBLE\".To determine if matrix A is lexicographically smaller than matrix B, consider their elements in row-major order (as if you concatenated all rows to form a long string). If the first element in which the matrices differ is smaller in A, then A is lexicographically smaller than B.InputThe first line of input contains two integers N (1 ≤ N ≤ 30000) and K (1 ≤ K ≤ 26). N is the dimension of the matrix, while K is the number of distinct letters that will appear.Each of the following K lines contains an uppercase letter and a positive integer, separated by a space.The integer denotes how many corresponding letters are to be used. For example, if a line says \"A 3\", then the letter A must appear three times in the output matrix.The total number of letters will be exactly N2. No letter will appear more than once in the input.The next line contains an integer P (1 ≤ P ≤ 50), the number of columns that must be output.The last line contains P integers, the indices of columns that must be output. The indices will be between 1 and N inclusive, given in increasing order and without duplicates.OutputIf it is possible to compose a symmetric matrix from the given collection of letters, output the required columns on N lines, each containing P character, without spaces. Otherwise, output \"IMPOSSIBLE\" (quotes for clarity).ExampleInput:3 3\r\nA 3\r\nB 2\r\nC 4\r\n3\r\n1 2 3Output:AAB\r\nACC\r\nBCCInput:4 5\r\nE 4\r\nA 3\r\nB 3\r\nC 3\r\nD 3\r\n2\r\n2 4Output:AC\r\nBE\r\nDE\r\nEDInput:4 6\r\nF 1\r\nE 3\r\nA 3\r\nB 3\r\nC 3\r\nD 3\r\n4\r\n1 2 3 4Output:IMPOSSIBLEWarning: large input/output data.Note: The test data for this problem consist of the official test cases from the contest, as well some cases of my own.",
  "sample_input": "AAB          AAA\r\nACC          ABA\r\nBCC          AAA",
  "sample_output": "ABCD          AAB\r\nABCD          ACA\r\nABCD          DAA\r\nABCD",
  "link": "https://www.spoj.com/problems/MATRICA",
  "scraped_at": "2025-08-17 00:33:04",
  "test_cases": [
    {
      "input": "AAB          AAA\r\nACC          ABA\r\nBCC          AAA",
      "expected_output": "ABCD          AAB\r\nABCD          ACA\r\nABCD          DAA\r\nABCD",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "hjf j\nnlm lm\ny wrfs",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "yey jqts\nyjnt zqb\ny lkf",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "xfwn i\niptpd cp\nvtjem nt",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "yby u\nrhpq kwuru\nnq ovmmp",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "nypo qud\nsxyms ob\nx izlvw",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "jcb zwc\ndr mdg\ntnha yrdfh",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "fk l\ncfh f\nbbxu o",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "lrhj hxzd\nnkr emt\npug jv",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "mxslc hdvob\nfsd nyeik\nsvxp obkhx",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "wc oy\nj miskm\nrcr qbn",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "bech tr\na lwdq\nfd co",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "vte toa\nak nm\ntlen mt",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "fwh nzhyk\ncq yajt\ntydot zvnw",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "fpt is\ntiy roj\ncyvkq dtul",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "rp hj\nstrj r\njyp x",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "cpiwh la\nfg mfma\nlle urbon",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "n jgu\ntvka gx\nzaqmd oygex",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "bu p\nijyma ybar\nh roqvg",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "ges pdcvb\nljqw fvg\ntsnsi y",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:47",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:36:35"
}
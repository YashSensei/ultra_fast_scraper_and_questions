{
  "problem_code": "problems",
  "title": "Getting There Fast",
  "tags": [],
  "text": "Gabriela drives a school bus. Being one of the few women who have that job, she is always mocked by the male drivers. To improve her status, she decided that besides driving responsibly she is going to drive more efficiently. Her idea is to finish her route spending as little time as possible, without violating any traffic rule.The bus Gabriela drives has a very modern driving system that allows her to adjust the acceleration to any real number instantly. Hence, the acceleration is constant by intervals, jumping to another acceleration whenever Gabriela decides so. Ifvis the bus' speed at a given instant of time, andaits acceleration that remains constant over a period of timet, then the speed at the end of that period will bev + at. Moreover, the bus will move a distance ofat2/2 + vtduring that period of time.The traffic rules prevent vehicles from using an acceleration greater thanA, or a deceleration less thanD, i.e. the accelerationaat any time must satisfy -D≤a≤A. Moreover, there are check points along the route of the bus where the speed must lie within a certain given interval.Gabriela knows in advance the location of the check points, the total length of the route, and the constantsAandD. At the beginning of the route the speed and acceleration of the bus are both 0. There are no additional restrictions regarding the speed or the acceleration the bus must have at the end of the route (in particular, it is not necessary to stop in the end). Your job is to use this data to determine the minimum time that Gabriela needs in order to finish the route without violating the rules.InputThe input contains several test cases. Each test case is described using several lines. The first line of each test case contains four integersN,L,AandD.Nrepresents the total number of check points that are present in Gabriela's route (1 ≤N≤ 105).Lindicates the length of the route in meters (2 ≤L≤ 107).AandDrepresent, respectively, the maximum allowed acceleration and deceleration for the bus (1 ≤A,D≤ 100). Each of the followingNlines describe a different check point using three integersX,VandWthat represent, respectively, the distance between the check point and the starting point of the route (1 ≤X≤L-1), the minimum speed, and the maximum speed allowed for the bus at the time it passes by that check point (1 ≤V,W≤ 100). Assume that in each test case the check points are given in ascending order of distance from the start point of the route, and no two check points are at the same distance from the start point. In this problem, the length is expressed in m (meters), the speed in m/s, and the acceleration in m/s2. The end of the input is indicated by a line containing the number -1 four times, and should not be processed as a test case.OutputFor each test case, output a single line containing a rational that represents the minimum time (in seconds) needed for Gabriela to finish her route without violating any traffic rule, or an asterisk if it is impossible to do that. Round the answer to the nearest rational with two decimal digits. In case of a tie, round up. Print exactly two digits after the decimal point, even if that means ending the number with 0's.ExampleInput:1 40 10 1\r\n20 21 21\r\n1 40 10 5\r\n20 20 20\r\n1 20 10 50\r\n10 14 15\r\n5 1000 2 5\r\n400 30 80\r\n600 35 50\r\n700 10 30\r\n900 30 40\r\n950 10 30\r\n-1 -1 -1 -1Output:*\r\n2.83\r\n2.00\r\n35.96",
  "sample_input": "Input:1 40 10 1\r\n20 21 21\r\n1 40 10 5\r\n20 20 20\r\n1 20 10 50\r\n10 14 15\r\n5 1000 2 5\r\n400 30 80\r\n600 35 50\r\n700 10 30\r\n900 30 40\r\n950 10 30\r\n-1 -1 -1 -1Output:*\r\n2.83\r\n2.00\r\n35.96",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/GETFAST",
  "scraped_at": "2025-08-17 00:34:36",
  "test_cases": [
    {
      "input": "1 40 10 1\r\n20 21 21\r\n1 40 10 5\r\n20 20 20\r\n1 20 10 50\r\n10 14 15\r\n5 1000 2 5\r\n400 30 80\r\n600 35 50\r\n700 10 30\r\n900 30 40\r\n950 10 30\r\n-1 -1 -1 -1",
      "expected_output": "*\r\n2.83\r\n2.00\r\n35.96",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "9 1 10 7\n5 5 3\n7 3 3 3\n6 1 2\n6 2 3 5\n8 4 6\n4 1 1 7\n5 10 10\n10 5 4\n1 9 2\n5 1 6\n1 2 1\n3 10 6 10",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "10 2 8 4\n3 6 4\n1 7 6 4\n9 9 1\n1 1 1 8\n2 5 9\n4 6 6 3\n2 6 5\n7 5 8\n8 8 9\n8 5 8\n5 2 2\n3 3 4 4",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "2 6 2 4\n9 5 10\n9 2 6 10\n7 4 9\n6 7 7 7\n2 10 3\n3 4 3 5\n6 8 1\n8 10 3\n2 2 10\n5 10 6\n5 1 2\n5 7 7 2",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "29 33 99 20\n89 59 89\n90 49 50 57\n37 33 83\n80 99 72 6\n15 1 36\n25 97 98 15\n83 46 87\n2 58 11\n33 19 10\n95 53 54\n42 36 75\n35 86 59 60",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "89 73 35 84\n36 44 80\n96 56 50 87\n70 18 28\n49 49 73 68\n100 58 42\n96 75 24 53\n12 66 16\n41 14 93\n40 70 85\n84 37 27\n26 8 20\n80 43 22 76",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "5 93 43 81\n75 9 68\n47 87 92 80\n93 62 84\n63 73 25 7\n92 18 14\n87 32 34 4\n81 73 56\n47 30 19\n76 20 36\n98 13 3\n76 64 89\n85 22 78 74",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "10 32 70 49\n34 37 69\n26 93 8 38\n13 41 71\n46 11 41 28\n90 90 55\n94 1 93 81\n13 45 31\n38 45 58\n30 46 47\n14 5 64\n64 33 70\n24 97 21 35",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "42 64 51 16\n38 60 51\n16 26 38 98\n87 76 73\n39 88 10 4\n60 99 98\n91 68 30 69\n36 6 53\n52 22 15\n50 45 65\n46 21 52\n87 25 49\n79 74 21 43",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "27 5 33 10\n38 18 25\n22 32 51 32\n51 16 49\n20 37 36 24\n25 17 37\n25 20 33 48\n35 5 33\n10 20 9\n25 33 38\n26 44 42\n14 46 41\n13 11 39 40",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "9 34 11 51\n5 22 22\n28 24 52 30\n14 20 40\n49 48 10 39\n48 38 45\n24 20 44 52\n5 7 33\n9 35 44\n38 17 29\n21 29 49\n32 28 49\n33 37 19 44",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "46 28 47 33\n44 40 6\n41 18 30 51\n39 24 22\n48 21 49 48\n45 10 20\n43 47 18 49\n6 51 37\n38 39 19\n15 5 27\n29 22 14\n13 23 30\n7 39 38 27",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "13 8 28 14\n42 22 39\n36 28 41 6\n27 34 38\n39 23 37 6\n37 29 20\n15 51 43 7\n8 37 51\n38 38 11\n11 52 24\n6 22 39\n34 34 37\n52 44 22 49",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "16 22 6 8\n50 45 23\n46 8 31 49\n30 40 23\n14 51 7 40\n32 19 17\n38 52 13 40\n45 35 27\n43 39 29\n16 6 25\n49 52 48\n45 48 29\n50 31 31 6",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "48 26 16 20\n43 41 33\n8 45 44 43\n19 16 27\n47 47 20 36\n52 33 6\n40 46 26 51\n18 41 31\n15 29 6\n36 17 22\n38 34 40\n52 16 50\n40 52 36 24",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "10 40 41 50\n9 44 52\n9 41 16 12\n32 5 27\n49 7 12 40\n48 10 18\n48 13 43 48\n33 14 30\n40 38 15\n24 25 34\n18 41 46\n35 24 20\n9 24 15 8",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "105 105 105 105\n105 105 105\n105 105 105 105\n105 105 105\n105 105 105 105\n105 105 105\n105 105 105 105\n105 105 105\n105 105 105\n105 105 105\n105 105 105\n105 105 105\n105 105 105 105",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "105 105 105 105\n105 105 105\n105 105 105 105\n105 105 105\n105 105 105 105\n105 105 105\n105 105 105 105\n105 105 105\n105 105 105\n105 105 105\n105 105 105\n105 105 105\n105 105 105 105",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "104 104 1 2\n104 105 2\n105 104 105 105\n2 1 2\n105 2 2 105\n1 1 2\n105 1 105 1\n1 2 2\n2 104 105\n104 2 2\n104 105 105\n104 105 1\n104 104 2 104",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "104 104 104 2\n2 2 105\n1 1 2 105\n1 1 104\n104 105 1 105\n1 105 104\n105 104 105 104\n1 1 105\n1 1 2\n1 2 2\n105 105 104\n2 105 2\n2 2 1 104",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:57",
  "total_test_cases": 20
}
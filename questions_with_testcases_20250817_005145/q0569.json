{
  "problem_code": "problems",
  "title": "LATGACH3",
  "tags": [],
  "text": "EnglishVietnameseIn how many ways can you tile a 3×n rectangle with 2×1 dominoes?Here is a sample tiling of a 3×12 rectangle.Input consists of several test cases followed by a line containing -1.\r\nEach test case is a line containing an integer 0 ≤ n ≤ 30. For each test\r\ncase, output one integer number giving the number of possible tilings.ExampleInput:2\r\n8\r\n12\r\n-1Output:3\r\n153\r\n2131",
  "sample_input": "Input:2\r\n8\r\n12\r\n-1Output:3\r\n153\r\n2131",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/M3TILE",
  "scraped_at": "2025-08-17 00:33:19",
  "test_cases": [
    {
      "input": "2\r\n8\r\n12\r\n-1",
      "expected_output": "3\r\n153\r\n2131",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5\n10\n4\n9\n1\n4",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n1\n2\n8\n5\n10",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "4\n7\n8\n6\n7",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "14\n38894332\n55366626\n90126174\n55732155\n31908153\n92019746\n45665748\n84156043\n25925215\n60665389\n25449967\n78674818\n27717055\n94775009",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "14\n84513231\n60333591\n16500423\n32849618\n6329961\n38569559\n59594982\n50757271\n1234840\n24017793\n58004078\n7337074\n89857041\n56832205",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "14\n8122503\n35118507\n56076363\n83849322\n41137972\n36753921\n227442\n98484450\n17837867\n95383736\n80106802\n89031966\n13678654\n79083561",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "12\n20542489\n39171472\n46899330\n4105079\n63464412\n75875059\n92437815\n9269200\n93529781\n93416444\n19923633\n44130912",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "10\n87555470\n2276679\n4112077\n96902406\n83719825\n90539115\n72142836\n36034664\n42288344\n39306386",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "27\n21264\n33821\n8059\n86838\n44033\n15482\n84950\n54939\n63661\n24703\n66451\n81490\n37667\n29500\n2351\n6604\n39352\n12350\n40041\n23297\n54586\n70416\n5355\n98341\n52387\n86753\n36863",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "21\n97844\n11912\n57539\n59288\n52082\n27720\n74310\n16987\n54514\n9914\n42915\n17913\n85509\n89030\n96683\n39898\n75083\n44283\n20124\n9175\n46703",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "25\n33730\n33511\n69651\n92489\n79278\n25937\n40476\n80772\n10067\n28652\n26592\n63125\n52158\n52551\n27028\n93742\n62225\n61326\n72580\n89553\n54260\n84240\n51819\n88111\n79080",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "21\n46879\n20472\n14486\n87508\n68643\n57458\n62391\n54706\n53534\n27955\n35961\n24220\n45536\n14533\n24021\n59348\n54250\n3773\n77698\n18390\n96877",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "30\n90109\n71635\n60846\n50767\n80271\n9365\n21910\n52249\n37011\n96432\n24545\n7492\n23331\n88141\n16983\n85099\n44465\n27698\n49613\n42413\n27519\n1989\n8893\n85228\n18016\n64780\n2190\n44154\n45631\n8491",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "24\n11164\n42062\n95263\n54239\n82229\n34934\n15639\n89206\n30924\n27421\n94661\n70759\n92478\n31883\n25127\n31898\n83777\n96421\n63735\n54623\n61522\n44683\n59290\n28467",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "22\n6291\n13958\n93911\n27894\n28602\n63966\n10187\n95030\n70877\n54049\n91876\n47304\n31586\n4989\n51716\n41201\n18890\n61663\n7148\n58151\n75848\n19573",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "30\n25626058\n2709615\n16368994\n61009117\n72844858\n10823515\n66188827\n86206648\n10239573\n15983121\n61147814\n58492790\n70309868\n99708652\n11243591\n59704673\n52986922\n91762568\n81317472\n37498181\n49109944\n31284926\n29882356\n95832340\n32862975\n68627758\n51455090\n99817792\n82545928\n10081993",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 30)"
    },
    {
      "input": "30\n7966248\n89384457\n61303826\n53496075\n34303935\n24847589\n11020754\n96952892\n82637009\n71410150\n5492830\n7717856\n90416941\n88057296\n1890725\n15175160\n52247164\n66646674\n44087319\n23858597\n32234024\n60037534\n3954549\n54935824\n7077938\n74857249\n7009694\n91877095\n6626041\n46399803",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 30)"
    },
    {
      "input": "2\n100000000\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 2)"
    },
    {
      "input": "2\n100000000\n1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 2)"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:47",
  "total_test_cases": 20
}
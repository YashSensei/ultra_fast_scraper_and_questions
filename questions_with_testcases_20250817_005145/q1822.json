{
  "problem_code": "problems",
  "title": "Jasiek",
  "tags": [],
  "text": "Jasiek is only 6 years old, but he already has many skills.\r\nHe likes drawing and asking riddles very much. This morning he got\r\na sheet of grid paper and a pencil from his mother and he\r\nstarted drawing. All his drawings have some common properties:Jasiek colors full grid squares;if some coloured grid squares touch each other, it means they have\r\na common edge or a corner;all grid squares are connected, which means between every two coloured grid squares\r\nthere is a sequence of coloured grid squares, which have a common edge;there are no white holes, that is from every white grid box it is possible to draw a line to the boundary of the sheet which never touches any coloured grid square.At noon mom phoned and asked what Jasiek's today's picture was. The boy didn't answer directly, but described the picture by a sequence of moves needed to walk around\r\nthe centres of the coloured squares on its boundary, i.e. those squares which\r\nhave at least one common corner with a white square. Jasiek set the starting square\r\nand then gave the sequence of moves necessary to walk along the boundary squares anti-clockwise. Mom was very surprised by the complexity of the picture and especially\r\nby the number of coloured squares. Given Jasiek's description, can you quickly count how many coloured squares there are in the picture?TaskWrite a program whichreads (from standard input) Jasiek's description of the picture,counts the number of coloured squares,writes out the outcome (to standard output).InputTen test cases (given one under another, you have to process all!).\r\nEach of the test cases is a series of lines. Each line consists of only one character.\r\nThe letterPmeans the beginning of the description.\r\nThe letterKmeans the end of the description (and the test case). All other lines (if any) contain one of the letters N, W, S or E (N meaning North, W - West, S - South and E - East). Every line of the description\r\ncorresponds to the relative position of the centre of some square on the boundary of the picture. The first and the last\r\nline correspond to the same square. A letter in a line other than the first or the last tells you which way you have to go in order to get to the next boundary square when going around the picture anti-clockwise. Jasiek's description finishes after going around the picture once. The length of the description doesn't exceed 20000 letters.OutputFor every testcase your program should write (to the standard output) only\r\none line with one integer, equal to the number of coloured squares in Jasiek's picture.ExampleInput:P\r\nS\r\nS\r\nS\r\nE\r\nN\r\nE\r\nE\r\nS\r\nE\r\nE\r\nN\r\nN\r\nN\r\nN\r\nS\r\nS\r\nS\r\nW\r\nW\r\nN\r\nN\r\nW\r\nW\r\nW\r\nN\r\nS\r\nK\r\n[and 9 test cases more]Output:23\r\n[and 9 test cases more]",
  "sample_input": "Input:P\r\nS\r\nS\r\nS\r\nE\r\nN\r\nE\r\nE\r\nS\r\nE\r\nE\r\nN\r\nN\r\nN\r\nN\r\nS\r\nS\r\nS\r\nW\r\nW\r\nN\r\nN\r\nW\r\nW\r\nW\r\nN\r\nS\r\nK\r\n[and 9 test cases more]Output:23\r\n[and 9 test cases more]",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/JASIEK",
  "scraped_at": "2025-08-17 00:33:32",
  "test_cases": [
    {
      "input": "P\r\nS\r\nS\r\nS\r\nE\r\nN\r\nE\r\nE\r\nS\r\nE\r\nE\r\nN\r\nN\r\nN\r\nN\r\nS\r\nS\r\nS\r\nW\r\nW\r\nN\r\nN\r\nW\r\nW\r\nW\r\nN\r\nS\r\nK\r\n[and 9 test cases more]",
      "expected_output": "23\r\n[and 9 test cases more]",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "s\ntn\nqc\nr\nik\nf\nwc\npk\nc\np\ngf\nbq\nrc\nd\nbx\nt\nu\npl\npk\np\nhk\nj\nb\npr\nl\nt\ne\ni\n8\nqvzvr 4 tvf docg hdi",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "pe\nwf\nuf\nn\np\nah\nn\na\nw\nn\nlp\no\nq\nu\nrc\ng\nlx\nha\nhz\nkk\nvl\nbc\nkr\ngb\nl\nte\noe\nr\n8\ni 8 v gup nyea",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "lr\ndx\nja\nxx\nm\nkb\ner\nct\nwg\nj\nd\nrp\nh\nza\nnn\nd\nt\nd\non\nb\nc\nn\nxz\nst\nx\nu\nwb\nxm\n9\nus 8 ozyr uhw puyh",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "u\nz\nd\nt\nk\na\nsa\nm\nkg\nx\nen\np\nx\ny\nrq\ni\nja\nv\ngh\na\na\ne\nf\ng\ni\nv\ns\np\n93\nasu 68 rsek g x",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "a\nui\nrk\nq\no\nj\nsw\nwr\nnt\non\nhs\nx\nwi\nei\njx\na\ndp\nx\npq\na\nv\ntb\ny\ns\ne\nf\ns\nlx\n47\nvxjv 44 bxpyz ontxo coam",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "v\nsj\nf\npi\nt\nqu\nkp\nd\nc\nlc\nbg\nb\nw\niy\ncl\nbq\ni\ntx\nqv\nu\ncu\ncc\nf\noj\nc\ntj\nn\ng\n3\nhcr 55 zcrv us taz",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "u\nuo\nk\nf\nep\nq\nlm\nch\nif\ncj\nle\ncs\njb\nib\nl\nah\nku\nl\nhv\ny\nlu\nge\ng\nnh\nr\nv\nx\ns\n27\nrers 75 qqbv a khw",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "qy\nwg\ndz\nbi\nft\nr\nm\nnq\nkz\nd\ns\no\nyh\nom\nit\nuf\nkj\ny\nx\nqo\nzu\nwa\ngs\na\no\nxw\nyd\ntn\n49\nn 19 nspcg omo uqgkt",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "l\nnf\nla\noh\nc\ns\nwn\nd\nks\nw\nbt\nog\nbh\nx\nei\ng\nx\nix\nj\np\nuk\ni\nq\ng\nic\nte\nvh\nq\n357\ntwct 375 k jxs nhyys",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "v\nq\nsp\nyk\nj\nr\ngo\nzo\nus\na\nt\nk\ng\ns\nvo\nec\nn\ntq\nq\nib\nnb\nw\nlx\nc\nat\ns\ni\nen\n313\naxll 145 gbc pdfo fxy",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "xs\nlr\nu\nre\na\nt\nk\nl\nr\nh\nv\nu\nor\nex\nv\nt\nq\ni\nst\nvl\nx\nlr\nn\nq\nj\nbe\nsi\nw\n225\nfp 170 w rakfg j",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "mb\nt\nd\nab\nz\nnc\ngh\nu\ni\nqm\nkw\ne\nr\nvv\ndl\nos\nv\nd\nfc\nle\no\ng\ny\na\nny\nkh\nsh\nl\n54\nst 127 p ql iayp",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "eb\nk\nko\npy\nmf\ngv\ni\nn\nm\nd\nhq\nbi\na\ns\ny\ng\nmy\na\nf\nrb\nog\naa\nnn\nvx\nm\nv\nm\nd\n432\nsmrmo 135 i ef qgvb",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "d\na\nt\nt\nw\nl\nu\nf\nkg\nqu\nks\nhi\nhy\ne\nw\nke\nag\nlh\ngg\nfs\no\nxa\nq\nnc\nh\nxz\nd\nrg\n79\ne 453 f efl zis",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "z\nm\njy\ne\nwd\net\nar\ny\nz\ndf\njo\nn\ndd\no\nlr\nxs\nt\nke\nn\ngv\nhi\nbe\ntl\nm\nf\ntf\nk\nx\n360\nkjt 342 yq z gy",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "dz\nke\ne\ng\ne\nit\nlr\nn\nv\nu\nn\nwu\nju\nfw\nku\nq\nw\nvc\ne\na\nk\nv\nqj\nc\nf\nqs\ns\ndk\n1000\nubz 1000 pqujh p yjgcp",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "q\ng\nv\nb\njr\na\nz\ndm\nbn\nmn\nob\nb\ney\nfx\nzw\njx\nvm\nuv\nyp\nf\nug\nkw\nz\nh\nh\nfq\nx\nrr\n1000\nqa 1000 yh hdnuv ve",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "a\nsh\nbs\ni\nwt\nz\ng\ncx\nog\nhq\nuv\nu\nhu\nhu\ntf\nuz\nga\nku\nn\na\nbl\nz\np\ni\nc\nbl\ny\nyy\n999\nvmmqk 2 dboxo hzoah zr",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "m\no\nli\nr\nb\nc\ntw\nwr\ndd\nw\ns\nsz\nvh\nv\nj\nco\nn\nw\nz\njz\nm\nbd\no\nlm\nnt\neh\nqw\njo\n1000\nwtv 2 mw wvtui bx",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:51",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Eefun Plays Doto",
  "tags": [],
  "text": "Doto is a famous game. In that game, each player controls N heroes where each heroes has an infinite number of skills. These skills can be used to empower other heroes. Eefun is currently playing with his N heroes, numbered from 1 to N.The main objective of this game is to defeat the enemies with these heroes. However, Eefun always lose the game, so now Eefun only try to make his heroes powerful.Based on Eefun's logic, there are M requirements to make all of his heroes powerful. Each requirement needs a hero A and a hero B. Hero A must use his/her skill to hero B to make B more powerful. Moreover, if hero B and C needs skill from hero A, hero A can use his/her skill to hero B. Then, hero B skills will be empowered with skills from hero A. Therefore, he can use his skill to hero C. In this scenario, the number of skills activated is 2, where A doesn't get any skills, B get skill from hero A, and C get skill from both hero A and B.The skill is continuous, so if A give his skill to B, B give his skill to C, and C give his skill to A, then every hero get every other heroes skillsNow Eefun is curious, how many skills must be activated to complete all his requirementsInputFirst line consists of 2 integers, N and M which denotes number of heroes and requirements.Next M skills each contains 2 integers, A and B, which means hero B will be powerful if he get skills from hero A.OutputOutput an integer, the minimum number of skills which must be activated to complete all the requirementsExampleInput 1:3 4\r\n1 2\r\n2 3\r\n3 1\r\n2 1Output 1:3Input 2:5 5\r\n1 5\r\n3 4\r\n4 3\r\n2 5\r\n1 3Output 2:5ExplanationFor the first case, hero 1 can give his skill to hero 2, hero 2 can give his skill to hero 3, and hero 3 can give his skill to hero 1.For the second case, one of the configuration is like in the picture below :Constraints:A ≠ B1 ≤ A,B ≤ N1 ≤ N ≤ 100.0001 ≤ M ≤ 100.000",
  "sample_input": "Input 1:3 4\r\n1 2\r\n2 3\r\n3 1\r\n2 1Output 1:3",
  "sample_output": "Input 2:5 5\r\n1 5\r\n3 4\r\n4 3\r\n2 5\r\n1 3Output 2:5",
  "link": "https://www.spoj.com/problems/NPC2015C",
  "scraped_at": "2025-08-17 00:33:28",
  "test_cases": [
    {
      "input": "Input 1:3 4\r\n1 2\r\n2 3\r\n3 1\r\n2 1Output 1:3",
      "expected_output": "Input 2:5 5\r\n1 5\r\n3 4\r\n4 3\r\n2 5\r\n1 3Output 2:5",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1 6 6\nkvasv mvd 10\n2 3\n1 4\n5 10\n1 9 6 10\n6 j r",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "4 6 5\ngotkg sc 10\n7 5\n7 4\n10 3\n7 2 5 6\n6 zw xh",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "1 5 5\niyd hh 8\n4 9\n9 3\n5 9\n2 3 7 3\n5 gsa rwaco",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "74 95 83\nnqxp g 74\n45 28\n75 59\n63 67\n42 14 39 19\n9 vku wur",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "60 95 92\np vkod 100\n61 46\n75 52\n66 63\n61 94 19 87\n2 kh kunqb",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "58 54 96\nvxrw nhd 72\n94 15\n61 19\n87 35\n12 90 48 85\n86 igod mkckq",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "7 10 27\nw p 13\n66 9\n99 66\n80 23\n5 86 50 29\n29 j iftc",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "28 30 93\nfrq zqf 66\n44 76\n60 44\n88 96\n81 39 70 88\n33 u kagt",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "6 48 45\nanswc wohdd 14\n31 5\n31 42\n37 5\n18 43 6 27\n33 q yaxjn",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "20 29 11\nhqwaa vadvb 17\n44 12\n33 22\n47 19\n7 6 34 35\n27 cq ecv",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "32 45 17\npas g 44\n25 18\n25 24\n17 38\n23 30 33 18\n9 vebsm gtf",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "46 39 13\nlqnlk ppfol 25\n12 6\n35 10\n11 11\n44 44 7 29\n23 i uxb",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "8 12 41\ndij sumxb 11\n41 26\n5 48\n20 17\n20 32 14 23\n33 uihdqq dq",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "42 27 9\nvq eypd 17\n5 48\n46 13\n8 41\n18 31 10 40\n18 vbjf n",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "45 44 45\nou ldrs 22\n13 19\n13 45\n15 34\n16 19 24 32\n19 q gbaz",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "100 100 100\nnlfpe wm 100\n100 100\n100 100\n100 100\n100 100 100 100\n100 d lgn",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "100 100 100\nmf ktl 100\n100 100\n100 100\n100 100\n100 100 100 100\n100 vz jm",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "100 1 99\nfvvr nbd 99\n100 2\n2 99\n1 2\n2 99 1 99\n100 jjwqngp cgzq",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "99 99 100\nxwc lq 1\n1 2\n1 99\n99 2\n100 2 1 100\n2 ivje hedix",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:48",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:36:51"
}
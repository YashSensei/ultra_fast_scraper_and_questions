{
  "problem_code": "problems",
  "title": "TV Schedule",
  "tags": [],
  "text": "The schedules of a TV Channel are very important nowadays, it reflects the shows they’re hosting and this can contribute to gather more or less people, hence, making more or great money to them!You have been called to make a program that, given the current program of the TV shows on the channel, answer the queries of the audience. To answer the query of the audience you must show the next program that follows the one they are currently watching, you may assume that the TV programs are cyclic and the final show ends at 23:59, after that, the first show will begin at 00:00InputThe first line contains an integer T, which specifies the number of test cases. Then, will follow the descriptions of T test cases.The first line will be a number N denoting the number of tv shows, then, N lines will follow, each line will contain a start hour in the format HH:MM and the end hour with the same format, then, the name of the program that may contain lowercase, uppercase letters and will not exceed 100 characters.You can assume that every show will cover the whole day (all 1440 minutes of the day) and that the end date is exclusive (meaning that two consecutive programs will share their end date and start date respectively), it is not guaranteed that a program name will be unique along the day.After that, you will receive an integer Q denoting the queries that will make the audience, then, Q lines, for each query you will receive an hour with the format HH:MM.OutputFor each case you must print Q lines, each line will contain a string denoting the program that follows the one currently being watched. Note that we consider that the program starts exactly at the given hour.Sample InputSample Output2300:00 12:00 Noticias12:00 14:00 AquiNoHayQuienViva14:00 00:00 Informeciales200:5123:10520:00 23:50 DocumentalDe00:00 00:06 NoticiasUrgentes14:00 20:00 LaQueSeAvecina00:06 14:00 YLoSabes23:50 00:00 JulioIglesias319:5023:4900:00AquiNoHayQuienVivaNoticiasDocumentalDeJulioIglesiasYLoSabesConstraints• 1 ≤ N ≤ 1440• 00 ≤ HH ≤ 23• 00 ≤ MM ≤ 59• 1 ≤ Q ≤ 100• 1 ≤ |name of program|≤ 100",
  "sample_input": "Not found",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/URJC2_A",
  "scraped_at": "2025-08-17 00:33:05",
  "test_cases": [
    {
      "input": "3",
      "expected_output": "3",
      "type": "small_case_1",
      "description": "Small value (≤ 5)"
    },
    {
      "input": "3",
      "expected_output": "3",
      "type": "small_case_2",
      "description": "Small value (≤ 5)"
    },
    {
      "input": "4",
      "expected_output": "4",
      "type": "small_case_3",
      "description": "Small value (≤ 5)"
    },
    {
      "input": "45",
      "expected_output": "45",
      "type": "medium_case_4",
      "description": "Medium value (5-50)"
    },
    {
      "input": "30",
      "expected_output": "30",
      "type": "medium_case_5",
      "description": "Medium value (5-50)"
    },
    {
      "input": "23",
      "expected_output": "23",
      "type": "medium_case_6",
      "description": "Medium value (5-50)"
    },
    {
      "input": "49",
      "expected_output": "49",
      "type": "medium_case_7",
      "description": "Medium value (5-50)"
    },
    {
      "input": "43",
      "expected_output": "43",
      "type": "medium_case_8",
      "description": "Medium value (5-50)"
    },
    {
      "input": "405",
      "expected_output": "405",
      "type": "large_case_9",
      "description": "Large value (50-1000)"
    },
    {
      "input": "327",
      "expected_output": "327",
      "type": "large_case_10",
      "description": "Large value (50-1000)"
    },
    {
      "input": "426",
      "expected_output": "426",
      "type": "large_case_11",
      "description": "Large value (50-1000)"
    },
    {
      "input": "375",
      "expected_output": "375",
      "type": "large_case_12",
      "description": "Large value (50-1000)"
    },
    {
      "input": "89",
      "expected_output": "89",
      "type": "large_case_13",
      "description": "Large value (50-1000)"
    },
    {
      "input": "920",
      "expected_output": "920",
      "type": "large_case_14",
      "description": "Large value (50-1000)"
    },
    {
      "input": "819",
      "expected_output": "819",
      "type": "large_case_15",
      "description": "Large value (50-1000)"
    },
    {
      "input": "2790",
      "expected_output": "2790",
      "type": "max_case_16",
      "description": "Maximum value (≥ 1000)"
    },
    {
      "input": "9240",
      "expected_output": "9240",
      "type": "max_case_17",
      "description": "Maximum value (≥ 1000)"
    },
    {
      "input": "89",
      "expected_output": "89",
      "type": "edge_case_18",
      "description": "Random value"
    },
    {
      "input": "67",
      "expected_output": "67",
      "type": "edge_case_19",
      "description": "Random value"
    },
    {
      "input": "21",
      "expected_output": "21",
      "type": "random_case_20",
      "description": "Random value"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:48",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:36:46"
}
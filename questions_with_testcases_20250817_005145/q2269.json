{
  "problem_code": "problems",
  "title": "Sudoku goblin",
  "tags": [],
  "text": "A sudoku goblin has read your book with sudoku problems. He has erased or added some numbers from settings. Your task is to write a program that can detect modified settings.For every sudoku setting you have to count number of possible solutions and in the case that it is equal to 1 printthe unique solution.InputThere is a number T of the test cases on the first line followed by T sudoku tables separated by one empty line. One sudoku table consists of 9 lines of 9 numbers 0-9 separated by one space. Zero in the table marks the empty field.OutputFor every test case, one line with number of possible solutions optionally followed by solved sudoku in the same format as on the input.ExampleInput:33 0 6 0 0 2 5 0 00 0 0 0 3 8 0 0 07 0 8 0 1 6 0 9 00 0 7 0 0 3 8 6 08 2 0 0 7 0 0 4 50 6 3 1 0 0 9 0 00 7 0 3 5 0 6 0 20 0 0 8 2 0 0 0 00 0 2 9 0 0 7 0 43 0 6 0 0 2 5 0 30 0 0 0 3 8 0 0 07 0 8 0 1 6 0 9 00 0 7 0 0 3 8 6 08 2 0 0 7 0 0 4 50 6 3 1 0 0 9 0 00 7 0 3 5 0 6 0 20 0 0 8 2 0 0 0 00 0 2 9 0 0 7 0 43 0 6 0 0 2 0 0 00 0 0 0 3 8 0 0 07 0 8 0 1 6 0 9 00 0 7 0 0 3 8 6 08 2 0 0 7 0 0 4 50 6 3 1 0 0 9 0 00 7 0 3 5 0 6 0 20 0 0 8 2 0 0 0 00 0 2 9 0 0 7 0 4Output:13 1 6 4 9 2 5 7 82 9 5 7 3 8 4 1 67 4 8 5 1 6 2 9 39 5 7 2 4 3 8 6 18 2 1 6 7 9 3 4 54 6 3 1 8 5 9 2 71 7 9 3 5 4 6 8 26 3 4 8 2 7 1 5 95 8 2 9 6 1 7 3 402",
  "sample_input": "Input:33 0 6 0 0 2 5 0 00 0 0 0 3 8 0 0 07 0 8 0 1 6 0 9 00 0 7 0 0 3 8 6 08 2 0 0 7 0 0 4 50 6 3 1 0 0 9 0 00 7 0 3 5 0 6 0 20 0 0 8 2 0 0 0 00 0 2 9 0 0 7 0 43 0 6 0 0 2 5 0 30 0 0 0 3 8 0 0 07 0 8 0 1 6 0 9 00 0 7 0 0 3 8 6 08 2 0 0 7 0 0 4 50 6 3 1 0 0 9 0 00 7 0 3 5 0 6 0 20 0 0 8 2 0 0 0 00 0 2 9 0 0 7 0 43 0 6 0 0 2 0 0 00 0 0 0 3 8 0 0 07 0 8 0 1 6 0 9 00 0 7 0 0 3 8 6 08 2 0 0 7 0 0 4 50 6 3 1 0 0 9 0 00 7 0 3 5 0 6 0 20 0 0 8 2 0 0 0 00 0 2 9 0 0 7 0 4Output:13 1 6 4 9 2 5 7 82 9 5 7 3 8 4 1 67 4 8 5 1 6 2 9 39 5 7 2 4 3 8 6 18 2 1 6 7 9 3 4 54 6 3 1 8 5 9 2 71 7 9 3 5 4 6 8 26 3 4 8 2 7 1 5 95 8 2 9 6 1 7 3 402",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/SUDOGOB",
  "scraped_at": "2025-08-17 00:34:04",
  "test_cases": [
    {
      "input": "33 0 6 0 0 2 5 0 00 0 0 0 3 8 0 0 07 0 8 0 1 6 0 9 00 0 7 0 0 3 8 6 08 2 0 0 7 0 0 4 50 6 3 1 0 0 9 0 00 7 0 3 5 0 6 0 20 0 0 8 2 0 0 0 00 0 2 9 0 0 7 0 43 0 6 0 0 2 5 0 30 0 0 0 3 8 0 0 07 0 8 0 1 6 0 9 00 0 7 0 0 3 8 6 08 2 0 0 7 0 0 4 50 6 3 1 0 0 9 0 00 7 0 3 5 0 6 0 20 0 0 8 2 0 0 0 00 0 2 9 0 0 7 0 43 0 6 0 0 2 0 0 00 0 0 0 3 8 0 0 07 0 8 0 1 6 0 9 00 0 7 0 0 3 8 6 08 2 0 0 7 0 0 4 50 6 3 1 0 0 9 0 00 7 0 3 5 0 6 0 20 0 0 8 2 0 0 0 00 0 2 9 0 0 7 0 4",
      "expected_output": "13 1 6 4 9 2 5 7 82 9 5 7 3 8 4 1 67 4 8 5 1 6 2 9 39 5 7 2 4 3 8 6 18 2 1 6 7 9 3 4 54 6 3 1 8 5 9 2 71 7 9 3 5 4 6 8 26 3 4 8 2 7 1 5 95 8 2 9 6 1 7 3 402",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "10 9 3 10 1 10 10 4 4 6 9 3 8 4 10 10 5 8 10 10 2 7 10 4 6 6 3 5 7 2 8 8 5 1 6 3 3 2 10 6 6 3 1 7 3 10 10 7 6 10 3 4 4 10 5 5 9 6 8 10 1 5 10 8 6 6 4 8 2 1 4 7 4 1 8 8 9 6 8 7 3 3 2 9 6 5 8 10 2 10 10 1 5 1 2 1 7 2 5 8 1 1 10 4 9 1 6 10 6 9 3 3 10 3 7 7 10 3 4 4 9 5 5 9 3 3 6 10 5 8 8 2 6 8 4 4 6 5 1 5 8 10 7 8 5 5 3 9 7 3 8 10 3 5 4 1 1 10 5 1 3 2 2 9 7 8 5 7 4 9 5 7 4 8 10 2 5 3 8 5 7 7 2 9 7 6 5 8 3 1 10 8 7 5 2 6 3 9 7 1 4 2 2 3 2 10 10 9 1 2 3 4 1 10 7 1 10",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "6 9 9 9 4 9 7 6 8 6 5 10 10 4 2 9 3 6 3 7 4 4 6 8 10 4 8 8 1 4 10 6 9 9 5 4 10 1 5 9 8 8 5 6 6 10 3 7 9 2 5 5 6 10 5 8 10 4 5 8 10 9 10 6 8 6 3 3 7 5 6 2 1 2 2 8 3 9 7 1 2 2 8 8 10 4 4 6 7 10 8 1 7 8 2 2 4 9 2 6 10 1 7 2 8 6 6 6 1 7 4 1 3 3 3 5 1 8 2 8 10 1 9 4 3 3 4 8 3 9 2 2 6 6 3 10 9 8 2 5 5 3 4 7 9 4 9 9 9 8 5 7 6 8 1 6 3 5 3 4 2 1 4 5 8 10 9 6 8 4 8 8 6 2 2 3 10 1 2 2 5 6 8 3 8 1 6 3 1 6 7 2 1 3 7 5 4 9 10 1 5 8 5 5 2 1 8 2 7 7 9 5 8 2 3 6 4",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "1 9 8 8 2 9 3 5 1 6 8 8 1 1 1 7 1 2 8 9 8 2 7 3 5 1 8 5 4 1 4 3 5 1 10 2 9 9 2 3 7 2 10 4 7 3 10 2 9 2 1 1 5 5 5 7 6 6 10 5 6 7 4 9 4 5 7 8 7 1 5 1 10 9 9 7 2 8 8 9 6 1 9 6 3 5 4 8 7 10 4 5 6 8 9 3 9 5 1 2 5 3 4 5 5 3 8 7 10 9 4 8 10 7 9 4 3 6 8 9 6 10 1 9 5 9 6 1 5 1 1 7 4 5 7 3 10 9 6 2 7 1 8 8 4 6 2 8 2 5 10 8 8 1 4 8 5 2 8 3 1 3 10 7 4 1 9 2 9 6 1 6 8 9 6 6 4 2 9 3 8 1 5 9 3 6 8 8 8 6 4 7 2 10 8 4 8 1 9 10 5 4 7 9 2 7 7 10 7 6 4 10 5 10 4 6 9",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "82 13 82 87 58 23 80 25 14 32 58 74 9 71 18 78 34 6 68 88 35 41 28 21 99 83 49 62 86 20 9 26 10 96 14 47 40 5 18 29 2 64 9 18 4 14 57 30 18 42 86 14 19 70 66 37 14 61 57 30 6 67 65 82 77 78 23 96 48 6 8 54 5 83 68 100 43 48 84 12 70 17 43 78 82 80 85 87 65 60 94 38 35 28 42 74 41 44 26 39 40 9 2 63 96 1 52 94 10 6 22 21 96 64 83 58 42 55 78 44 35 18 12 3 77 52 85 81 73 100 15 60 4 94 55 50 8 75 59 100 62 19 10 100 37 79 65 74 97 36 41 3 12 23 23 44 75 43 31 31 6 84 46 8 44 46 57 49 90 13 22 76 61 87 97 10 13 59 74 84 98 6 6 98 64 66 38 48 68 93 59 19 12 48 5 87 86 31 17 22 22 57 65 63 69 15 87 46 90 74 28 39 95 42 25 13 88",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "15 76 46 82 8 59 75 29 84 3 47 69 11 65 36 97 95 49 91 56 71 34 14 55 92 17 40 46 67 89 98 72 93 60 22 54 19 24 66 21 82 22 65 43 27 98 39 82 15 47 49 57 74 62 73 15 80 14 87 97 28 76 76 98 85 13 22 28 81 82 10 37 71 100 84 69 89 78 70 51 36 72 60 12 46 42 15 17 50 45 58 16 33 65 83 25 77 63 46 81 39 14 73 38 58 85 25 36 70 63 6 7 45 78 96 99 73 45 51 36 40 18 70 4 29 33 46 48 98 6 80 89 8 25 44 80 8 50 45 100 43 52 14 92 33 17 90 45 20 75 99 45 25 60 22 12 23 25 32 66 24 25 84 28 48 60 57 66 7 19 44 37 46 52 71 25 6 29 14 92 71 88 93 93 27 54 44 54 48 2 77 97 73 46 6 65 49 9 8 67 53 70 5 52 80 9 78 31 79 87 55 4 44 97 95 32 72",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "65 39 18 55 31 21 95 62 18 12 16 17 90 19 64 18 98 60 3 47 12 71 51 62 57 40 25 79 6 4 23 92 83 52 79 48 74 77 64 3 44 79 37 23 8 68 33 74 100 1 98 75 29 54 97 56 55 24 22 52 61 3 12 53 45 52 60 74 23 60 46 87 5 61 39 40 77 41 79 12 57 21 51 30 42 6 72 99 36 97 74 43 36 74 67 17 57 73 85 58 58 83 83 55 39 79 71 33 40 46 88 57 74 50 45 20 68 90 72 38 15 89 23 52 25 2 13 8 4 23 58 45 19 93 62 96 47 14 81 41 42 53 60 27 46 86 21 84 69 17 33 37 73 59 70 81 82 29 82 55 65 95 37 11 58 39 90 92 23 36 60 72 94 47 44 2 29 87 49 33 84 62 68 29 2 97 97 64 42 62 77 40 76 59 89 11 15 51 37 58 24 92 89 90 67 58 80 99 23 94 18 55 13 86 12 16 47",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "47 52 32 35 22 44 53 35 71 53 3 75 97 5 99 43 49 13 84 100 79 1 48 69 3 58 42 55 8 69 98 56 40 26 85 34 40 78 73 14 63 24 84 44 26 100 8 56 37 43 57 57 74 98 95 12 83 53 44 24 21 72 66 98 73 88 98 30 57 78 54 72 83 31 44 11 85 33 15 1 58 84 43 32 11 33 3 43 46 25 25 65 78 33 34 16 54 45 71 31 96 64 18 45 59 48 49 88 20 1 35 14 32 84 18 86 20 25 99 71 26 28 16 91 94 22 58 60 37 65 17 56 88 67 97 57 12 26 86 46 59 52 41 70 22 56 85 92 43 4 95 18 54 69 3 30 18 1 68 86 59 4 50 87 42 63 68 29 16 51 11 55 31 35 23 85 7 25 69 17 71 35 53 9 54 46 12 96 35 57 97 53 38 99 75 99 88 88 40 35 89 84 29 56 75 4 55 10 4 75 94 36 91 84 49 48 7",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "65 10 47 16 65 7 85 39 76 40 21 24 44 2 75 2 72 12 12 36 17 41 85 64 76 13 63 35 87 71 65 15 60 18 10 65 17 70 60 18 12 75 78 14 60 86 84 3 59 53 49 58 7 86 79 68 19 20 12 72 53 44 2 15 9 80 52 53 70 55 6 14 67 61 69 44 4 81 30 54 76 70 85 52 70 56 19 46 14 4 47 29 44 86 40 48 70 77 38 40 87 43 46 89 70 96 32 2 13 21 3 74 44 30 7 99 83 71 34 8 32 15 99 50 35 74 90 47 73 37 63 17 62 9 47 73 81 50 96 94 67 40 98 85 54 13 81 54 87 49 74 85 75 34 53 76 29 13 95 78 59 41 72 37 58 86 15 74 1 39 31 74 87 96 81 62 1 91 87 24 84 54 47 7 75 8 33 14 66 54 23 25 81 67 99 43 16 39 57 10 92 1 67 42 91 46 16 70 17 56 75 92 2 93 91 65 67",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "366 182 275 275 431 366 410 469 79 422 333 477 388 388 476 107 450 334 435 95 118 288 361 191 338 359 121 124 108 103 176 246 465 275 102 347 150 117 490 250 159 409 482 361 256 317 460 285 108 375 192 340 50 56 206 350 142 423 436 193 197 470 498 373 295 181 180 279 385 137 341 125 435 298 102 458 283 311 201 404 108 448 432 416 134 160 421 192 95 251 226 390 134 270 189 329 116 264 489 456 479 252 418 135 228 428 200 118 213 92 475 307 413 389 443 359 356 155 272 453 397 171 72 189 302 213 384 74 153 98 212 175 161 471 175 457 477 260 191 296 144 327 154 270 434 227 162 363 270 152 105 474 351 157 151 63 340 439 312 130 306 448 493 98 55 59 217 77 288 360 218 450 434 226 423 199 162 361 219 141 128 393 244 255 206 106 246 403 387 362 102 335 95 147 134 65 459 195 61 333 192 415 202 394 213 296 219 106 274 154 65 168 329 302 136 327 413",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "200 57 60 446 372 356 211 366 379 266 110 126 163 195 400 493 52 290 56 196 227 281 93 349 123 210 163 211 170 60 311 224 285 71 431 255 375 100 212 471 314 117 92 280 212 71 94 127 345 269 80 494 438 196 216 138 418 363 482 255 313 221 191 302 95 389 469 149 336 347 306 288 294 51 248 87 492 276 372 472 58 405 438 235 212 124 84 77 121 319 227 352 212 54 274 77 151 478 108 499 243 217 212 434 146 447 357 280 472 199 236 421 235 224 123 294 326 446 254 370 260 378 280 226 102 110 145 403 94 302 370 249 102 309 175 123 95 486 450 106 365 451 269 70 97 388 286 497 327 321 417 237 203 398 293 134 317 247 141 371 99 161 149 89 308 326 257 75 230 94 113 92 334 329 395 145 310 204 379 231 141 187 386 246 431 234 500 345 131 151 236 232 192 246 464 197 145 216 247 243 53 213 172 111 239 415 389 291 397 499 246 291 231 402 202 485 294",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "406 296 329 196 206 326 424 105 167 296 373 241 131 114 377 337 225 180 317 260 116 349 369 200 247 374 126 205 231 61 173 164 63 145 394 279 201 411 256 51 246 222 309 131 459 417 330 338 447 313 209 318 233 303 60 146 362 360 286 115 338 272 463 357 73 342 88 394 296 356 99 308 326 397 180 487 158 94 313 252 269 320 90 279 329 166 147 343 146 498 94 260 331 406 66 88 259 370 252 210 461 220 487 164 366 293 92 149 301 362 165 391 351 295 404 54 214 93 205 352 384 119 387 138 95 88 439 111 227 452 241 67 483 138 297 79 191 96 401 336 325 392 302 410 86 239 393 374 276 403 389 108 490 292 364 293 332 146 433 136 208 199 264 468 204 261 148 131 258 80 97 339 163 273 212 234 268 379 145 452 486 82 139 437 151 346 448 469 341 348 72 458 359 117 121 203 309 162 376 398 99 200 337 155 229 335 399 264 99 82 300 329 93 472 458 198 339",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "142 135 197 161 461 382 364 201 62 444 437 341 407 450 397 332 335 351 155 178 349 96 74 355 162 267 452 341 478 446 329 350 399 369 320 138 417 391 342 199 143 384 132 134 75 338 269 169 473 343 75 357 194 443 110 175 166 500 148 449 401 380 271 383 317 130 66 363 71 460 497 473 324 194 156 363 330 91 251 481 222 395 137 414 437 345 74 229 467 220 485 211 394 316 345 230 100 369 439 365 465 140 83 376 453 110 298 395 170 261 390 151 54 159 271 406 484 349 390 174 324 460 222 451 151 370 159 343 366 319 466 68 215 181 289 264 456 358 125 71 234 412 75 429 375 438 258 354 284 262 449 411 80 367 477 482 464 360 379 367 445 322 468 466 385 221 164 117 346 491 95 389 97 185 140 382 182 329 256 308 139 89 156 74 481 53 380 250 122 223 324 114 170 212 62 214 271 77 200 100 337 267 387 114 402 371 90 235 461 377 454 395 129 333 415 139 405",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "52 178 268 442 54 405 281 448 414 484 52 262 94 229 317 286 342 480 251 174 93 262 254 80 266 447 460 297 356 267 453 57 171 305 81 429 156 154 113 384 411 219 405 368 332 178 123 348 70 352 243 425 385 116 252 331 382 450 309 215 106 165 231 298 477 150 455 65 445 126 398 306 151 250 242 344 261 252 161 163 415 201 96 229 327 271 129 108 482 215 344 93 78 390 386 305 280 104 411 360 370 372 67 256 351 271 276 92 260 257 177 431 435 494 159 400 478 457 67 174 269 193 414 62 264 62 337 285 79 107 232 404 105 435 308 418 221 136 428 366 95 133 467 339 76 95 111 221 468 435 269 264 209 342 100 434 166 351 247 468 129 223 372 229 286 483 498 396 170 462 416 476 164 154 498 359 67 259 150 183 227 139 250 439 265 190 307 142 142 111 388 318 158 423 324 393 282 299 392 67 331 164 55 437 208 446 298 457 335 120 374 397 233 471 434 418 220",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "290 480 447 214 292 161 401 472 403 160 316 443 270 155 150 195 162 297 247 478 427 273 266 352 119 210 463 203 391 307 136 62 477 269 76 130 405 153 328 468 52 67 222 134 176 105 284 177 358 141 357 346 88 479 196 295 101 445 313 52 371 102 319 188 271 147 404 70 193 153 262 292 447 336 362 434 375 270 242 414 226 315 356 75 500 89 55 247 91 153 430 171 171 62 180 339 262 248 171 126 375 55 496 140 428 432 260 399 183 217 56 164 345 455 63 64 96 489 342 70 490 357 64 304 272 139 201 258 71 371 191 394 94 122 395 83 59 236 202 312 468 255 456 442 427 393 383 118 121 291 314 65 95 301 114 137 427 200 164 61 442 424 399 343 260 237 173 57 280 57 229 168 245 204 462 202 176 488 289 418 414 267 478 380 68 392 167 277 216 152 208 499 299 153 103 113 218 338 161 102 125 418 65 471 106 60 367 112 288 190 293 420 404 111 157 467 438",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 2 2 2 1000 999 999 2 1000 1 999 2 2 2 1000 999 2 999 2 2 1000 1000 999 999 999 1000 2 2 1 1 1000 2 1 2 1000 2 1 2 1000 2 999 1000 1000 2 1000 1000 2 1000 2 1000 1 1 1 999 1000 999 1000 999 1 999 999 1 2 1 1 999 2 999 1000 999 2 999 999 1000 1 999 1000 999 1 999 2 999 1 1000 1000 1 999 1 2 2 2 2 1 2 999 2 999 1 999 1 2 2 2 2 1 2 999 1 2 1000 2 999 1 1 1000 1 1 1000 1000 1 1 1 999 999 1000 2 1000 2 1000 1000 1 2 999 2 1 999 1 999 2 2 2 2 2 1000 999 1000 1000 1 1000 1000 1000 999 999 999 1 2 2 999 999 2 999 999 999 999 999 1000 999 1000 1000 1 1000 2 1 2 999 999 2 999 999 999 1000 1000 1000 999 1000 1 2 2 999 2 1000 999 2 1 999 1000 1 1000 1000 1 1000 999 1000 999 999 1000 2 1 999 999 1000 2 2 1 2 1000 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1000 999 1000 999 999 1 1000 999 1 999 999 1 1000 1000 1 2 1000 999 2 999 1 1 1000 1 1 2 1 1 1 2 2 1000 999 1 1 999 1 1 999 999 1000 1 1000 999 1 2 2 1 1 1 1000 1 1 999 1000 1 1000 1000 1 2 1000 2 2 1000 999 2 2 1000 999 2 2 2 999 1000 999 1 2 999 1000 2 1000 1000 1000 2 1000 999 999 999 1000 1000 1000 1 1 2 2 1 1000 999 1 1000 2 1000 1000 999 1000 1000 1000 1000 2 999 999 999 1 999 999 1 2 1 999 999 999 2 1 1000 2 2 1000 1 1 999 2 2 1 1 1 2 1000 2 2 2 999 1 999 999 1 999 999 2 1 999 2 1 1 2 999 1000 1 1 999 1 1 2 999 999 1000 1000 2 1000 2 1 1 1000 1000 2 1000 1000 2 2 2 1 999 1000 999 2 1 1 1000 1 1 1000 999 2 1000 1000 1 1 999 1000 999 1000 999 1 2 2 2 999 999 1000 1000 1 1000 999 2 999 999 2 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:52",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "A Knightly Pursuit",
  "tags": [],
  "text": "In chess, game pieces move about an chessboard in a fashion defined by their type. The object of the game is to capture opposing pieces by landing on their squares, and eventually trapping the king piece.In our version of the game, we shall use a variable sized board with only 2 pieces on it: A white pawn which moves relentlessly towards the top row of the chessboard one square at a time per move; and a black knight which can move from its current location in any of up to eight ways: two squares up or down and one square left or right, or one square up or down and two squares left or right. The knight must remain on the board at all times; any move that would take it off the board is therefore disallowed. In the diagram below, the knight's position is labelled K and its possible moves are labelled 1 to 8.. . . . . . .\r\n   . . 8 . 1 . .\r\n   . 7 . . . 2 .\r\n   . . . K . . .\r\n   . 6 . . . 3 .\r\n   . . 5 . 4 . .\r\n   . . . . . . .The pawn moves first; then the knight and pawn alternate moves. The knight tries to land either on the square occupied by the pawn (a win) or on the square immediately above the pawn (a stalemate). If the pawn reaches the top row of the board the game ends immediately and the knight loses (a loss).InputThe first line of input contains a positive integer, n, the number of games to analyze. For each game there are six lines on input:r, the number of rows in the chessboard.c, the number of columns in the chessboard.pr, the row of the starting position of the pawn.pc, the column of the starting position of the pawn.kr, the row of the starting position of the knight.kc, the column of the starting position of the knight.All numbers in the input don't exceed 100.  (Thanks to Blue Mary for pointing that out).The pawn and the knight will have different starting positions. Row 1 is at the bottom of the board and Row r is at the top of the board. Column 1 is at the left and column c is at the right.OutputIf the knight can win and, output the minimum number of moves it must make to do so. If the knight cannot win, your program should determine if it can cause a stalemate and, if it can, the minimum number of moves it must make to do so. Finally if the knight cannot win or cause a stalemate, your program should compute the number of moves the knight makes before the pawn wins.ExampleInput:3\r\n99\r\n99\r\n33\r\n33\r\n33\r\n35\r\n3\r\n3\r\n1\r\n1\r\n2\r\n3\r\n99\r\n99\r\n96\r\n23\r\n99\r\n1Output:Win in 1 knight move(s).\r\nStalemate in 1 knight move(s).\r\nLoss in 2 knight move(s).",
  "sample_input": ". . . . . . .\r\n   . . 8 . 1 . .\r\n   . 7 . . . 2 .\r\n   . . . K . . .\r\n   . 6 . . . 3 .\r\n   . . 5 . 4 . .\r\n   . . . . . . .",
  "sample_output": "Input:3\r\n99\r\n99\r\n33\r\n33\r\n33\r\n35\r\n3\r\n3\r\n1\r\n1\r\n2\r\n3\r\n99\r\n99\r\n96\r\n23\r\n99\r\n1Output:Win in 1 knight move(s).\r\nStalemate in 1 knight move(s).\r\nLoss in 2 knight move(s).",
  "link": "https://www.spoj.com/problems/KPURSUIT",
  "scraped_at": "2025-08-17 00:33:44",
  "test_cases": [
    {
      "input": ". . . . . . .\r\n   . . 8 . 1 . .\r\n   . 7 . . . 2 .\r\n   . . . K . . .\r\n   . 6 . . . 3 .\r\n   . . 5 . 4 . .\r\n   . . . . . . .",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3\r\n99\r\n99\r\n33\r\n33\r\n33\r\n35\r\n3\r\n3\r\n1\r\n1\r\n2\r\n3\r\n99\r\n99\r\n96\r\n23\r\n99\r\n1",
      "expected_output": "Win in 1 knight move(s).\r\nStalemate in 1 knight move(s).\r\nLoss in 2 knight move(s).",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "itopz k ppha wmfi agaj g mcuue\n9 10\nrd sp 1 f 7 s fpf\n3 8\nlocpy 1 ehak nibu cr 2 ybb\nz iwxxz nzqnb eou sxrpf fy ghyvg\n9 4\nigav 5 wczd dwja yhc 10 w\n3 7\naxk sbbgs 4 vtdf 4 k vlh\nna synv f lw dfhe p h",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "ol sto zrm tfiui pzoyr wa jbhea\n1 1\ngjqu xlbw 10 r 8 wwdl reqy\n7 9\ncdd 1 y qm nlznq 1 dek\nsp nmw whai nqodd rab ak ytnbr\n2 7\nacuk 4 qqak f eu 4 k\n8 8\nwv onrb 4 b 8 ase u\noi qnh sih audeh xss tp w",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "gsd zsag agk xlti qmu rur xwuui\n6 6\nn gec 4 jr 3 mhwlq tjs\n5 9\nwxcyh 4 tcur kprsx txek 7 dype\nr t uh u sgj mbt ri\n5 2\nhscu 2 dt duvss eiey 9 hz\n8 7\nedu t 5 y 7 hsx phb\nzyg qnh ucocs lo ezvk qq whb",
      "expected_output": "0",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "n luvly elws vgl exw d uv\n12 85\nppz n 37 rynr 44 y u\n79 18\nlz 60 m jbox pem 99 ywd\noi xq ehvb jzqct dpbly lroz newry\n29 69\nabi 35 hfoxa qr y 5 ps\n99 70\nr bd 87 lmd 62 fc ubn\nvsfg buafs uhcw wqch hppss dr pbwkq",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "o sqp iaszk f hjg jln qdd\n58 95\nshhta ulhjt 56 clpeu 30 p hq\n15 55\nace 89 p w htxl 7 qyk\nysd hs gwb ed kw dgpv yj\n45 38\na 67 sivk u wy 9 j\n46 36\nelcsm owo 82 owh 35 hosz qotl\nfmrm v scs iljeb btj umuqp jvi",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "nbkmj iryl nqbj a zb hbrzt rwh\n54 87\nk jvd 28 pr 77 kvu ai\n40 17\nwsp 59 tike una f 65 azd\ntydg fqho ap tx o rno ykzm\n35 17\nwuqp 39 cgnfr ger hh 98 nsjt\n28 83\npa wv 20 ccakb 65 reguq e\ns mexqm pv wllzj ypqpx iu ajt",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "j cet myg f dmbpf c m\n41 64\nbf bmwce 77 xmgk 23 i wws\n20 6\nuu 24 dfuq ndr q 34 t\nx crmd wgv qmeox ho a nmw\n12 77\nosulj 43 llct q vmb 48 ju\n8 98\nigi ids 92 smzhj 32 c n\nsz b yvj wnq d d etuj",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "ayv sb qnhdn k epun qtr zhpn\n84 78\nynmxj ygcg 7 r 28 qj jp\n15 43\nn 83 e aiuv hmocy 99 he\nt pmc lphs cpfgx savnb j wmy\n58 52\nxi 15 wsxrq f cgx 82 bw\n1 44\nvonwe st 11 iogje 66 ug ykfcr\nuqw fpene uglg y fwqjt vs lx",
      "expected_output": "0",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "u jo acb sswcq nio gom p\n274 402\nhvf waxrw 462 h 219 l pujps\n390 145\nxnrf 465 pzn sja fjesh 486 wrr\nqaf qxw eb xtkfy ylke x ksa\n101 195\nzxbm 244 r tmwb xie 124 v\n137 487\ndkgk dyawm 131 hqb 426 rxi lj\nfb j fkvg uhwqm hj ehem bgm",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "dpv l a zefe emk zhdml mza\n344 423\nime sfrl 169 jwgj 491 fykau u\n277 104\nz 447 hnk jqvz pww 415 jqhcf\nf nfqng mhb volu xe rqgl brj\n56 101\nbtcba 287 cxzfi xck pbdk 395 qps\n129 231\ncyaty vd 200 zs 51 hr yl\nmguae qyha fe qpt w iu jyrb",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "ynl kj joq efx d muj k\n413 67\nj trhx 347 l 375 nzhrh nm\n310 367\np 229 coff owjst jsd 435 l\npjukj gwy z e wg wwtz hjs\n291 463\nuoz 489 reua zzpw ume 451 e\n174 232\nbheel ifikm 224 ddp 127 xyl t\ner fke vbl qiyal ifqn zii bs",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "v uge pzb zcie kjuiw kcnv q\n157 413\ne chn 402 j 389 my r\n447 415\nccch 351 qitde smbv z 413 hbcx\nlcz gc vg ouad dopxk o skjiw\n120 307\nwl 458 duh wtbj hou 91 ha\n176 220\ndvr mtneo 68 wumih 328 z nimh\nom wp jx vd s xotl imazh",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "q hwe pdix mim zbv p ohcjv\n378 369\ncizek yyxj 456 lii 72 goupn fb\n292 120\nq 247 odp brv fv 307 cp\nbrz hos tl toxe wogl yrbg jjw\n363 199\nner 227 cazra tujnt q 307 am\n327 398\nsfzle e 358 jyylk 78 kk aaegn\nqz ubnwj lwu zlw mw s vbzmv",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "f ozhw kxi trulm wncx yzjf mdnik\n104 320\nfhv bgdb 357 ar 70 xmbj wbcro\n445 297\nuvbac 131 jgfh fmhw xm 263 sb\nq euxi yeuy x qlzc zanhy jjgc\n479 239\nbuu 64 ufzor wty qu 122 lql\n225 396\nfb vqbe 359 yxods 151 fpih e\nm qtjv gl cavug ptp ueq wauu",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "u qjbn pbns rt egkc ucdv tl\n319 476\nkucoo oxt 74 omoo 489 xwnzx jjo\n392 91\nt 262 izc ddzz qs 282 xrjk\nmcfvj mot zvggo wyu u mt oq\n257 463\npjhy 217 h qgv jldo 342 zcnp\n477 363\nqurtt qqg 478 zq 108 yaqy n\nhdvaq pmmuw oq l vrfj ik fqfie",
      "expected_output": "0",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "cxwj ai kifa uxehv bh wt tvcts\n1000 1000\nav bkx 1000 gmze 1000 pg c\n1000 1000\ngqpa 1000 nothi iabmf y 1000 j\nff hir ioi cq eho rctl re\n1000 1000\ny 1000 f wo mgcbq 1000 rxawy\n1000 1000\nyezyw m 1000 bvv 1000 ks ur\novwc rn im q pcfyl hsn dkrc",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "aqa ykh hd gtz bucgl odh o\n1000 1000\ndiaib vbe 1000 e 1000 xm d\n1000 1000\ny 1000 xukmo qe dnd 1000 zg\ncm pk ja spqr wpnp mvrkt pfe\n1000 1000\no 1000 iyf przeu oo 1000 qftju\n1000 1000\nlnzg it 1000 cfod 1000 sgvuv g\nsf l tepzg t pwhmf zq d",
      "expected_output": "0",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "fi tv nhrpm kko hgplq imrrb v\n2 1000\nzoaf fuqz 2 csekt 1 som qpfdg\n1000 1\nze 1 bzdhn xsrf m 1 h\nlnpog qucfj wifx bzpkd r lqof jre\n2 1000\nunroh 999 ltr l y 1000 womr\n2 1\nbawi pno 1 zkysd 1000 kivbb qfxk\nl e d cq un zca kq",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:50",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:04"
}
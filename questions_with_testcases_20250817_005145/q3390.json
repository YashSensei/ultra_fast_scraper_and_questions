{
  "problem_code": "problems",
  "title": "The Bottom of a Graph",
  "tags": [],
  "text": "We will use the following (standard) definitions from graph theory.\r\nLet $V$ be a nonempty and finite set, its elements being called vertices (or nodes).\r\nLet $E$ be a subset of the Cartesian product $V \\times V$, its elements being called edges.\r\nThen $G = (V, E)$ is called a directed graph.Let $n$ be a positive integer, and let $p = (e_1, \\ldots, e_n)$ be a sequence of length $n$ of edges $e_i \\in E$ such that $e_i = (v_i, v_{i+1})$ for a sequence of vertices ($v_1, \\ldots, v_{n+1}$).\r\nThen $p$ is called a path from vertex $v_1$ to vertex $v_{n+1}$ in $G$ and we say that $v_{n+1}$ is reachable from $v_1$, writing $(v_1 \\to v_{n+1})$.Here are some new definitions.\r\nA node $v$ in a graph $G = (V, E)$ is called a sink, if for every node $w$ in $G$ that is reachable from $v$, $v$ is also reachable from $w$.\r\nThe bottom of a graph is the subset of all nodes that are sinks, i.e., \r\n$\\mathrm{bottom}(G) = \\{v \\in V \\mid \\forall w \\in V : (v \\to w) \\Rightarrow (w \\to v) \\}$.\r\nYou have to calculate the bottom of certain graphs.Input SpecificationThe input contains several test cases, each of which corresponds to a directed graph $G$.\r\nEach test case starts with an integer number $v$, denoting the number of vertices of $G = (V, E)$, where the vertices will be identified by the integer numbers in the set $V = \\{1, \\ldots, v\\}$.\r\nYou may assume that $1 \\le v \\le 5000$.\r\nThat is followed by a non-negative integer $e$ and, thereafter, $e$ pairs of vertex identifiers $v_1, w_1, \\ldots, v_e, w_e$ with the meaning that $(v_i, w_i) \\in E$.\r\nThere are no edges other than specified by these pairs. The last test case is followed by a zero.Output SpecificationFor each test case output the bottom of the specified graph on a single line.\r\nTo this end, print the numbers of all nodes that are sinks in sorted order separated by a single space character.\r\nIf the bottom is empty, print an empty line.Sample Input3 3\r\n1 3 2 3 3 1\r\n2 1\r\n1 2\r\n0Sample Output1 3\r\n2",
  "sample_input": "3 3\r\n1 3 2 3 3 1\r\n2 1\r\n1 2\r\n0",
  "sample_output": "1 3\r\n2",
  "link": "https://www.spoj.com/problems/BOTTOM",
  "scraped_at": "2025-08-17 00:34:28",
  "test_cases": [
    {
      "input": "3 3\r\n1 3 2 3 3 1\r\n2 1\r\n1 2\r\n0",
      "expected_output": "1 3\r\n2",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3 9\n8 5 8 2 9 2\n6 6\n9 7\n3",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "7 10\n8 10 5 4 4 1\n8 2\n4 6\n6",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "1 6\n1 6 4 10 6 4\n5 2\n1 2\n9",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "15 55\n72 52 16 97 32 53\n97 36\n32 29\n49",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "67 79\n20 11 58 55 77 36\n78 9\n19 2\n69",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "58 20\n14 97 89 27 9 82\n18 23\n100 50\n87",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "85 96\n65 50 75 73 41 69\n63 69\n91 40\n95",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "59 67\n83 96 59 75 2 55\n77 30\n56 85\n96",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "393 229\n339 251 180 172 373 123\n456 471\n267 120\n495",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "391 76\n320 292 348 477 119 436\n447 166\n226 94\n194",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "122 51\n200 324 424 64 441 175\n108 239\n180 441\n93",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "108 397\n336 365 152 111 65 181\n207 450\n137 396\n201",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "157 415\n397 365 206 437 130 170\n53 131\n492 210\n445",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "298 276\n431 482 86 122 97 174\n393 140\n440 225\n389",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "54 460\n217 131 227 55 176 347\n430 293\n430 460\n166",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000 1000 1000 1000\n1000 1000\n1000 1000\n1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000 1000 1000 1000\n1000 1000\n1000 1000\n1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "999 1\n1 999 1 2 1000 1000\n1 1000\n999 1000\n1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 1\n2 1 2 999 1 1\n2 2\n999 1\n1000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:56",
  "total_test_cases": 20
}
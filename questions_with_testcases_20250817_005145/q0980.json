{
  "problem_code": "problems",
  "title": "CWC",
  "tags": [],
  "text": "Its cricket world cup 2015. Bangladesh team coach Chandika Hathurusingha wants to choose the best team combination for the world cup. But there are so many options, because there are so many good qualified and experienced players. So he plans several steps for choosing the best team combination. The first step is, he divided N player in two groups such that each group has the same number of players. And sum of players experience of both groups will be same. But doing this he saw it is a very difficult task. Now Chandika Hathurusingha needs your help. He know that you are a good programmer. He gives you list of N player name and experience. You have to find out, is it possible to doing this first step according to his plan.InputInput start with an integer (T ≤ 100). Which denotes the number of test cases. Each test case starts with an integer (1 ≤ N ≤ 40) which denotes the number of players in the list. Then next line will be N space separated integers (1 ≤ x ≤ 1000000), which is each player's experience.OutputFor each case, print the case number and if possible print “Yes” or if not possible print “No”.ExampleInput:2\r\n6\r\n1 2 3 4 5 6\r\n4\r\n2 3 4 5Output:Case 1: No\r\nCase 2: YesProblem Setter: Tanvir Hasan Anick",
  "sample_input": "Input:2\r\n6\r\n1 2 3 4 5 6\r\n4\r\n2 3 4 5Output:Case 1: No\r\nCase 2: Yes",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/CWC2015",
  "scraped_at": "2025-08-17 00:33:39",
  "test_cases": [
    {
      "input": "2\r\n6\r\n1 2 3 4 5 6\r\n4\r\n2 3 4 5",
      "expected_output": "Case 1: No\r\nCase 2: Yes",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1\n2",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "3\n2\n6\n10",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n7",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "15\n56624772\n89092759\n32433309\n28568343\n60447646\n77820343\n35462707\n16620766\n54086740\n62190582\n44538698\n64807240\n37911418\n14416827\n17280113",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "14\n31398718\n34851642\n90598111\n44055161\n12477331\n2358419\n47752856\n85635835\n97486230\n23813026\n24566787\n35359122\n51805375\n16986420",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "14\n9956248\n22778725\n27902009\n63526423\n32379041\n97684441\n85326016\n2280562\n60546184\n89336664\n35247123\n13185739\n82747582\n57736002",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "17\n72655016\n11778078\n98636\n22058695\n28986322\n56678907\n64861030\n67091561\n79619711\n74823733\n36919065\n38598955\n9390368\n42044751\n76313104\n74565364\n96901541",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "12\n4280120\n45430795\n16599054\n83300348\n20153195\n76097876\n19478952\n53219564\n1578385\n84367350\n88646338\n34103973",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "27\n49144\n12985\n50066\n83486\n62848\n52237\n31916\n15282\n96222\n97263\n64337\n5898\n28530\n56641\n30699\n16017\n28251\n22060\n57792\n38730\n90360\n54089\n95141\n30948\n22903\n73144\n74176",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "28\n54980\n7159\n25367\n62609\n3887\n2729\n52627\n48\n94085\n72263\n21605\n30574\n20219\n69141\n20289\n67400\n52699\n35668\n82971\n17662\n29802\n78075\n96855\n2683\n63920\n57215\n4802\n87485",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "22\n28891\n59542\n17271\n67112\n99322\n72292\n62337\n98913\n11446\n48499\n76451\n87085\n94188\n75426\n29152\n4610\n78551\n37064\n1809\n13020\n42503\n17527",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "29\n59856\n80081\n96915\n51337\n89948\n73166\n7617\n74350\n93454\n16558\n44678\n49759\n56465\n31188\n25306\n5941\n64905\n80078\n85055\n43509\n47494\n648\n78118\n76063\n20017\n95164\n64209\n4405\n47054",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "39\n70642\n38995\n72562\n92537\n66247\n65665\n24757\n32171\n44121\n21596\n16364\n37420\n465\n55050\n33006\n69709\n52881\n27310\n82889\n65102\n27757\n68286\n8401\n81525\n76532\n50155\n23504\n37869\n19983\n45026\n3397\n30801\n25200\n83446\n17553\n40403\n18628\n75914\n1069",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "28\n72415\n61628\n32907\n16098\n28260\n24116\n23208\n28651\n98984\n67019\n53646\n93509\n48591\n20864\n97967\n63187\n60664\n42939\n10310\n27586\n93466\n81126\n22503\n26990\n19883\n46730\n9315\n43035",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "32\n12395\n11207\n58089\n43128\n14369\n49458\n50387\n11681\n7649\n41745\n47602\n4579\n65383\n82902\n2433\n78633\n94344\n52734\n69021\n65343\n44876\n72294\n90942\n62639\n9875\n11094\n51384\n51658\n47595\n5697\n9007\n16408",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "40\n78129898\n3870253\n81702431\n84577808\n17936367\n33610232\n78061686\n85144736\n81598395\n17895354\n85753080\n45101836\n42527195\n45473266\n97052639\n55596114\n1389295\n13806658\n14545944\n60328426\n55281490\n58000618\n42364220\n24683053\n12765851\n98697559\n55307720\n85788035\n19559212\n75923221\n61566624\n35507246\n94308435\n25651846\n80810744\n4883251\n28373985\n14509730\n80070577\n59162138",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 40)"
    },
    {
      "input": "40\n86224271\n61698227\n99004899\n97253464\n59607244\n65412682\n1876783\n8018142\n27553798\n59770258\n51413137\n54104172\n59409112\n31069808\n3706785\n50001084\n8350816\n2121058\n59959962\n22484440\n95121863\n90187279\n63496816\n46040229\n59473086\n42514545\n41654332\n80947699\n23772810\n90242072\n14678970\n40655463\n26621971\n97253408\n50375264\n62566585\n26491590\n47034468\n8581975\n80106970",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 40)"
    },
    {
      "input": "40\n3074360\n1\n1\n1\n100000000\n100000000\n100000000\n81456701\n47649685\n1\n100000000\n1\n6914506\n37989675\n1\n100000000\n1\n1\n100000000\n1\n100000000\n1\n14881131\n100000000\n74317736\n56039288\n1\n77993173\n1\n58958700\n100000000\n1\n50281719\n1\n50582376\n34136229\n1\n1\n92422454\n82024897",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 40)"
    },
    {
      "input": "40\n1\n100000000\n100000000\n100000000\n18688702\n100000000\n100000000\n100000000\n100000000\n1\n5585963\n1\n74818649\n15287322\n100000000\n65372081\n1\n100000000\n48514241\n23081680\n23229633\n100000000\n100000000\n1\n1\n1\n1\n9482161\n100000000\n100000000\n90149781\n100000000\n100000000\n17354828\n1\n100000000\n34791520\n1\n1\n58023945",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 40)"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:48",
  "total_test_cases": 20
}
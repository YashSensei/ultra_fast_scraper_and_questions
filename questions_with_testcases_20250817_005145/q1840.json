{
  "problem_code": "problems",
  "title": "Editor",
  "tags": [],
  "text": "Have you ever programmed in Brainf**k? If yes, then you know how\r\nannoying it is to press the same key several times in a row. So what we all\r\nneed, is a good editor.\r\nHere are the functions that the editor should have:'\\n': begin a new line. If the last line was empty, stop\r\nprocessing and print out all lines.'d': copy all characters from the current line, and append them\r\nafter\r\nthe last character in this line. For example, if current line contains\r\nab, and d is pressed two times, the result will be ababababany other character: append it to the current line.Please note, that the solution may only be submitted in Brainf**k or\r\nIntercal.InputThere is exactly one test case. You can assume, that there is no key press of 'd' when the line is still empty.OutputPrint the output that the editor described above would produce on the given input. You can assume, that no line is created with more than 150 characters.ExampleInput:sample-test-dd-d-ddend signalled by two newlinesOutput:sample-test--------------------------------------------enen signalleenen signalle by two newlines",
  "sample_input": "Input:sample-test-dd-d-ddend signalled by two newlinesOutput:sample-test--------------------------------------------enen signalleenen signalle by two newlines",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/EDIT1",
  "scraped_at": "2025-08-17 00:33:49",
  "test_cases": [
    {
      "input": "sample-test-dd-d-ddend signalled by two newlines",
      "expected_output": "sample-test--------------------------------------------enen signalleenen signalle by two newlines",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "magwbkggpw rkbnrdw yusz ff vwpgvob",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "dlkyseoxvnfqaaubjmhs rmj sd ui xh",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "vlas qfc i jvkg eb",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "itzka uxmrtsie cuoih fv lrtq",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "gac nvy dcag wucr d",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "ysvwordwuyi gkrlk n swt qpumz",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "vhfrqtlozlejcvquadxawh uskcwwfrg dnt c ljqvzko",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "rcfmgimwxfqslfnhu lfknpx ke ha nthy",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "zuovpjbgddfomlekheekyn c azzbi d bwu",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "lttygrmbzefdyx vnalknn kz mha caiqctol",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "pd sttledxcw jse r mzdr",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "lxyttighshsufjgdtux akoqsf mb xuh pjy",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "yuilaefshhleupznxtv r xkgf onkyf ak",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "gasmctlleinmmnyujojhu bsuywsw zliju kgs tsqzcq",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "sdbqtjkrmwxs ymphu x ongz khywd",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "mgmnxplrkwomczaxhnqcjf yej byd hy lkpeedkn",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "ijwmpqenzsozb nxlol l fumjy zypxai",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "ezn bitc j ujw plztnw",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "wsnpkijayy luuf f akkds liudyzbd",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:51",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:17"
}
{
  "problem_code": "problems",
  "title": "Glory War",
  "tags": [],
  "text": "Ronny is hiding on the building where he left his family after failing the guard test (the guard\r\ntold him not to cheat and got angry after your help). The Rainbowlandians are brutally attacking\r\nthe citizens of planet Earth, there are corpses everywhere and desperate people running\r\non the street. Ronny must protect his family and that’s why he has decided to take down all\r\nthe Rainbowlandians inside the building as soon as possible.Ronny know very little about the Rainbowlandians, but he knows that he must be silent when\r\nhe takes down one of then, hence, he hides his noisy gun in his pocket, impeding him to attack\r\nthem from the distance. In order to take down the Rainbowlandians, a knife or a good flying\r\nkick will do the job. Ronny must step on the same space a Rainbowlandian is to take him\r\ndown. The building is full of rubble and some paths will lead to a trap. Fortunately, Ronnie\r\ncan throw a rope and go up or down through floors while he is walking the building. Obviously,\r\nhe cannot throw the rope if this will lead him to a rubble-full step.Given the dimensions of the building, its width, height and depth and the marked targets,\r\nyou’re to make a program to help Ronny take down the Rainbowlandians in the minimum\r\nsteps possible so he can do the minimum noise possible.Please note that:Ronny starts at the north west corner of the first floor of the building (1,1,1)Ronny can only move to these possible directions: east, west, north, south, in addition, he can go while moving up or down.Ronny cannot leave the building at any moment and there’s no basement in the building neither, so he can’t be lower than height 1.InputThe first line contains an integer T, which specifies the number of test cases. Then, will follow the descriptions of T test cases.Each test case will start with two integers N and H, where N denotes the width and depth of each floor and H denotes the number of floors. Then, there will be H N×N matrices, each one describing one floor. The floor description is composed of the following characters:The character ’#’ denotes a rubble space.The character ’.’ denotes a free space.The character ’*’ denotes a Rainbowlandian.OutputFor each input case you must print the string \"Scenario #i: \" where i is the test case you’re evaluating (starting at 1), followed by the minimum steps that Ronny have to make to take down all the enemies inside the building. If this is impossible, print -1.SampleInput3\r\n2 1\r\n..\r\n.*\r\n3 2\r\n.#.\r\n.##\r\n##.\r\n#.#\r\n###\r\n.#*\r\n4 3\r\n....\r\n.##.\r\n####\r\n****\r\n####\r\n####\r\n....\r\n#.##\r\n####\r\n*..*\r\n*..*\r\n####OutputScenario #1: 2\r\nScenario #2: -1\r\nScenario #3: 13Constraints1 ≤ T ≤ 301 ≤ N ≤ 201 ≤ H ≤ 201 ≤ Targets ≤ 10",
  "sample_input": "Input3\r\n2 1\r\n..\r\n.*\r\n3 2\r\n.#.\r\n.##\r\n##.\r\n#.#\r\n###\r\n.#*\r\n4 3\r\n....\r\n.##.\r\n####\r\n****\r\n####\r\n####\r\n....\r\n#.##\r\n####\r\n*..*\r\n*..*\r\n####OutputScenario #1: 2\r\nScenario #2: -1\r\nScenario #3: 13",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/CDC12_G",
  "scraped_at": "2025-08-17 00:34:08",
  "test_cases": [
    {
      "input": "Input3\r\n2 1\r\n..\r\n.*\r\n3 2\r\n.#.\r\n.##\r\n##.\r\n#.#\r\n###\r\n.#*\r\n4 3\r\n....\r\n.##.\r\n####\r\n****\r\n####\r\n####\r\n....\r\n#.##\r\n####\r\n*..*\r\n*..*\r\n####OutputScenario #1: 2\r\nScenario #2: -1\r\nScenario #3: 13",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4\n6\n2\n1\n7",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "4\n6\n7\n1\n10",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n2\n2\n4\n6\n3",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "11\n43518862\n70479998\n55854209\n44827957\n74571234\n79478866\n29879953\n39396917\n25445414\n59965227\n55074265",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "12\n37646964\n90668279\n67262007\n71370421\n91021673\n51688828\n50770219\n22834641\n54882897\n78843107\n79790425\n55198080",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "5\n90433798\n36866642\n9504988\n95141683\n72821194",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "12\n87592353\n30960713\n7206834\n92924259\n88991492\n4545380\n25882994\n15840079\n98695173\n76430994\n40910122\n52036257",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "18\n96641526\n54151636\n3186508\n38146572\n47140493\n87220727\n32193850\n85521484\n75101787\n75939506\n92322339\n94292928\n82059779\n19148717\n46259813\n87703312\n82610526\n47828591",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "182\n78830\n20809\n32465\n83538\n42318\n80725\n82649\n40602\n3826\n39136\n26997\n6856\n36967\n29616\n50328\n14941\n28505\n60308\n7711\n10115\n83372\n79514\n23808\n35567\n57556\n46213\n92730\n58089\n89880\n52566\n80678\n55445\n51932\n98237\n71057\n22194\n44611\n39349\n86638\n6886\n35074\n20270\n10588\n64128\n36107\n27535\n48941\n45318\n20333\n71376\n61107\n77770\n50930\n27042\n38714\n26677\n12608\n61976\n79922\n91655\n50713\n29101\n55794\n94138\n88036\n49261\n98184\n48187\n69009\n72278\n19348\n94947\n55978\n98992\n53951\n48808\n18299\n64162\n4920\n40202\n57484\n1672\n10454\n98319\n49669\n70410\n63667\n16438\n37921\n7052\n19109\n80210\n37009\n27674\n9629\n97708\n76255\n32650\n26634\n6585\n38233\n37785\n12406\n25901\n53964\n76949\n53868\n60319\n50630\n5939\n39304\n32699\n24254\n42418\n35665\n23034\n3860\n38779\n45494\n51139\n95047\n47542\n10714\n41164\n37209\n8330\n45116\n63733\n57474\n69422\n95937\n62348\n33305\n40067\n72978\n7399\n46966\n61475\n11221\n52902\n2850\n54836\n79343\n37034\n24227\n14089\n35607\n10914\n91049\n87821\n25928\n93422\n80255\n14294\n81222\n96051\n40810\n2276\n89268\n5233\n37646\n8888\n93722\n98451\n64324\n26491\n13142\n59042\n56909\n67122\n74896\n42526\n92321\n22899\n16398\n452\n34161\n57538\n44905\n47509\n36902\n32549",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "78\n50227\n14899\n92749\n26599\n78613\n8434\n35883\n77981\n87284\n46510\n4491\n73161\n9184\n41452\n52483\n79415\n70085\n87410\n88847\n94091\n71402\n73582\n33359\n77854\n35618\n55533\n72723\n47895\n19808\n98649\n56296\n35891\n25410\n61328\n67260\n15828\n52601\n78447\n32612\n53804\n73662\n2081\n63945\n98478\n8778\n49507\n38595\n94662\n18758\n94660\n94112\n65264\n38841\n54243\n22865\n93894\n89648\n32798\n58368\n40935\n62472\n86882\n16666\n26064\n97014\n98522\n41176\n13857\n89922\n94085\n43894\n63374\n9605\n69609\n90109\n78537\n15420\n70570",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "28\n56590\n26126\n6494\n96816\n22755\n44073\n35371\n21255\n26954\n60436\n49969\n734\n20521\n8876\n59548\n91046\n1560\n19267\n15855\n79128\n48027\n69430\n39807\n86751\n27292\n84662\n42649\n2781",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "142\n92802\n54854\n64914\n79842\n61766\n48031\n90273\n89295\n66104\n5714\n27206\n72501\n14961\n93087\n85473\n29434\n10298\n15458\n48769\n25202\n22499\n64890\n76635\n25982\n12122\n8694\n48169\n85432\n5571\n55876\n74130\n12549\n93129\n92072\n45140\n52025\n81338\n93838\n90817\n29298\n12310\n57955\n54542\n10767\n12590\n25707\n58238\n87611\n18619\n20759\n98260\n5281\n39898\n63590\n180\n76830\n83554\n27409\n71397\n94524\n7958\n37078\n39826\n76026\n90701\n81933\n55934\n79128\n64034\n83207\n87253\n50134\n78441\n52672\n75614\n24509\n88232\n98378\n88826\n50144\n32915\n19685\n87133\n40164\n81270\n13472\n40087\n86284\n37544\n77328\n11071\n75893\n26989\n26846\n814\n27970\n64961\n86956\n27635\n41118\n19888\n4013\n29169\n81653\n71249\n6134\n20158\n41231\n10014\n79923\n37638\n1835\n66100\n62233\n91659\n17334\n57038\n88336\n99578\n60595\n53004\n30671\n74210\n16991\n31329\n80396\n37569\n94756\n57261\n51384\n13598\n36710\n30784\n80765\n30054\n68013\n12451\n54597\n27958\n67227\n39317\n37773",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "135\n13147\n34206\n70511\n97985\n38747\n29881\n57466\n2365\n55397\n79621\n61211\n68222\n45602\n11793\n8103\n95955\n72279\n2759\n35236\n46649\n92410\n59141\n49929\n74834\n78710\n38915\n99479\n22526\n43645\n81555\n29916\n11820\n30402\n28906\n57818\n38437\n183\n64600\n57515\n11595\n97323\n12393\n41353\n24465\n76960\n43595\n76530\n78691\n47491\n20801\n4718\n23367\n51808\n23946\n38057\n29018\n21007\n55571\n5306\n12708\n60360\n48436\n63120\n42384\n48640\n52989\n18047\n12224\n64723\n20601\n32413\n23677\n12290\n20262\n19004\n98134\n7186\n88100\n60833\n42455\n66364\n96939\n21590\n11013\n19414\n63020\n5527\n40118\n76838\n17692\n77279\n57375\n57948\n64605\n14869\n8564\n75916\n83830\n71278\n26069\n32316\n62514\n46743\n42494\n43189\n42386\n53286\n75630\n73239\n93369\n8605\n44571\n67974\n15370\n99882\n14420\n8527\n34846\n69886\n18431\n28207\n23645\n67478\n73347\n30612\n25799\n15132\n27769\n53312\n67020\n31633\n74019\n8251\n16742\n18759",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "123\n74198\n52386\n2740\n42992\n19524\n63454\n5743\n14337\n20547\n35241\n68701\n71627\n75636\n24074\n15853\n22293\n31806\n42265\n79446\n82932\n80146\n61506\n49972\n13773\n48120\n8166\n25893\n34319\n9993\n17343\n2431\n30566\n12745\n51389\n5272\n49811\n68586\n19576\n214\n13539\n4790\n23764\n28589\n79002\n81187\n62244\n95242\n52210\n7049\n34313\n31241\n44661\n22936\n32997\n28667\n67243\n79188\n68593\n15702\n48151\n82883\n91209\n56624\n34931\n58017\n51732\n68729\n35889\n58150\n37810\n40220\n93707\n12622\n5082\n92266\n7014\n3312\n89075\n80187\n46195\n49016\n73205\n66215\n8878\n95066\n62106\n18397\n56081\n14133\n37689\n41049\n84609\n26557\n92544\n7719\n87843\n39372\n79852\n5857\n4419\n35921\n96116\n34396\n61865\n8039\n49304\n37377\n42809\n35784\n79113\n15749\n1676\n74862\n60984\n8104\n62271\n42358\n16435\n97710\n56953\n70898\n78326\n21448",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "142\n38849\n9631\n74851\n51711\n94133\n11868\n98170\n67936\n52549\n52717\n99587\n36438\n98084\n43720\n5793\n55309\n16847\n94461\n52900\n72960\n82419\n31500\n85535\n52373\n50927\n31969\n9149\n25333\n36345\n27318\n79633\n91854\n86892\n93172\n7475\n12275\n67236\n25258\n59435\n81104\n72908\n99525\n99117\n72599\n31079\n24246\n33378\n53202\n22077\n29026\n51722\n891\n35375\n64487\n87557\n97179\n14719\n94659\n35099\n35993\n27046\n78069\n92669\n67082\n12708\n36387\n836\n15419\n32193\n58436\n4123\n73950\n94240\n89778\n91187\n88328\n6772\n19545\n72483\n59890\n86166\n23652\n2508\n68704\n55740\n71336\n27413\n49143\n23306\n9109\n25219\n5243\n15958\n7519\n71087\n75788\n20518\n85778\n22259\n65469\n24892\n48071\n35420\n48846\n59610\n52539\n20735\n23822\n78911\n78160\n83539\n85342\n17022\n80423\n28565\n48123\n75261\n74668\n7147\n96486\n23633\n18478\n5401\n51243\n39994\n96406\n17090\n19112\n89095\n66777\n72232\n20636\n4321\n96412\n89963\n69004\n95393\n87247\n55033\n38058\n47847\n3185",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "201\n41395613\n4399777\n32416537\n24945539\n9817934\n21682496\n67642238\n57152456\n58804752\n85499346\n70049295\n54335147\n75615534\n69497109\n40641194\n81172149\n13478964\n32369942\n91953554\n86233535\n30102178\n45905183\n66933822\n82899218\n31257797\n30900103\n44810283\n84925104\n85371316\n36813373\n21736619\n39395045\n23000327\n67929668\n61037847\n4870959\n10981423\n25315165\n30183423\n59508097\n19471025\n93998930\n40419151\n92748264\n17726879\n97010539\n28128662\n31038952\n88306426\n98937860\n14113244\n91649397\n20198630\n36361721\n3075438\n52593254\n20650988\n62062135\n86351389\n23152906\n34913419\n39100649\n53940469\n67909235\n19721161\n14504527\n66760985\n82750856\n24090567\n91755427\n47530786\n71352697\n15158135\n12465312\n28246849\n48339477\n27300118\n97399010\n8941494\n75221861\n57378663\n88583813\n7586638\n6203179\n34620640\n7281517\n82856775\n44509121\n64382512\n71327054\n6921643\n9226917\n57852288\n44366557\n64873598\n88565833\n40401108\n92559537\n45339846\n59381821\n96553395\n38471606\n39332249\n90855501\n92326524\n20135706\n89330033\n73392911\n94599410\n33136069\n44064894\n63480794\n12144625\n41949006\n4331010\n58718714\n86701209\n90278345\n52567878\n61333650\n58254093\n72808268\n49964802\n35075185\n37406915\n89911851\n9399672\n11416381\n73245937\n7451475\n98818897\n58461821\n93429543\n30200990\n74212069\n36386684\n95402054\n87095019\n64454242\n66689671\n69797704\n70828362\n62610705\n84451914\n34773635\n26032952\n35553640\n55160574\n96935974\n90899019\n50356428\n68777294\n4115338\n2588417\n51862399\n28060917\n39398868\n31287625\n6867947\n98333571\n1173385\n56889934\n68744056\n86313144\n83844583\n63838144\n6702355\n35305505\n65557091\n37316291\n55375878\n58544501\n6949028\n40048052\n31159396\n69606805\n84525333\n71949749\n61387942\n29145596\n31271908\n54350141\n71766271\n59262987\n94906288\n37950009\n9121969\n24939881\n77615539\n61135406\n32295162\n43797744\n53036976\n47637315\n37292893\n22960990\n68412085\n73435406\n38216132\n16473845\n73730594",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 201)"
    },
    {
      "input": "201\n83335714\n686372\n56700218\n8658823\n95383570\n68562749\n61736761\n88668775\n8773930\n64340217\n72149441\n4653069\n16002305\n96272801\n64668254\n55936194\n87269734\n69228237\n20302456\n38386234\n97959656\n24378996\n50929261\n40941684\n89208228\n88545878\n4734915\n1367489\n90611532\n15488977\n43284667\n21046589\n32033479\n68313830\n19604868\n52689013\n24590007\n59268386\n37546212\n40330276\n51396887\n79602191\n82277841\n95735447\n13656690\n46808473\n83437149\n62010727\n59036898\n85309661\n67809191\n27410541\n21471836\n41469343\n56674262\n43903963\n49799840\n70942457\n27283271\n50623290\n72860250\n93685054\n24869211\n83312142\n56396092\n39827860\n49521552\n13626026\n59142800\n39859573\n17298804\n63978158\n20496216\n22250924\n6595816\n73089533\n46881593\n10692636\n29728420\n63936747\n41790304\n93959971\n76159331\n37428182\n29743922\n44348235\n43152084\n80558063\n83562742\n12672491\n10943084\n27797131\n6000718\n16864088\n92538492\n7532614\n16938975\n45594044\n97843838\n76109644\n83938486\n64947495\n4859285\n25571092\n83628337\n95712794\n20823704\n42742134\n94749982\n6456921\n55043493\n90156412\n78923638\n9801771\n4298472\n39476398\n10468729\n44509392\n82272195\n71760986\n8923799\n42288388\n3849030\n64089122\n74933742\n9410266\n28741442\n99949945\n99717930\n78863527\n50255547\n54888892\n46035218\n60021811\n23641645\n61261900\n49409813\n21338399\n69709052\n27070153\n75742308\n5113195\n88941050\n89939697\n83280934\n25804297\n44226803\n2539035\n79613452\n69337753\n46830270\n32931770\n89525058\n89238269\n17712601\n49433430\n44293719\n74042458\n20250397\n27178759\n71609474\n85989565\n15412800\n99668292\n67263025\n23276155\n54701929\n82287893\n8763594\n35766320\n62352419\n60543244\n30203780\n93981238\n39842499\n55462134\n51183182\n84329816\n1477634\n31242157\n12594142\n80902732\n34960667\n32885463\n95817765\n28095418\n26549019\n43906114\n11972154\n13030754\n11959242\n76567189\n73163986\n2377387\n91336414\n31627886\n91402094\n65404275\n1705649\n47871549\n92552442",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 201)"
    },
    {
      "input": "201\n1\n100000000\n99777247\n1\n1\n61267718\n1\n63604647\n1\n94386188\n12719216\n56093543\n1\n326881\n100000000\n38338541\n100000000\n100000000\n100000000\n81477171\n100000000\n1\n99108228\n8392154\n13014383\n44745205\n100000000\n1\n100000000\n100000000\n1\n1\n100000000\n1\n82973786\n1\n23850501\n34982591\n75394630\n1\n92630213\n100000000\n26811117\n1\n1\n42078450\n1\n100000000\n100000000\n47321091\n1\n82062932\n100000000\n100000000\n1\n1\n1\n54924601\n100000000\n1\n1\n100000000\n1\n100000000\n100000000\n1\n93650035\n1\n1\n100000000\n1\n100000000\n100000000\n60380850\n15234876\n1\n41564315\n84777129\n1\n1\n74077620\n1\n100000000\n1\n100000000\n100000000\n36992624\n1\n100000000\n1\n100000000\n100000000\n46311602\n100000000\n78384024\n1\n1\n48600702\n42544010\n1\n92901197\n100000000\n100000000\n1\n1\n100000000\n100000000\n1\n64684368\n100000000\n1\n1\n1\n86423325\n100000000\n41566868\n1\n70400536\n100000000\n1\n100000000\n100000000\n100000000\n100000000\n85067780\n77730758\n31894907\n1\n100000000\n95423852\n1\n100000000\n100000000\n79645153\n25579645\n10515841\n1\n1\n9811008\n100000000\n100000000\n100000000\n1\n100000000\n100000000\n4822797\n100000000\n100000000\n100000000\n100000000\n100000000\n13844143\n1\n100000000\n43069448\n100000000\n7204467\n100000000\n86583056\n100000000\n42615101\n1\n1\n7716649\n1\n1\n88783668\n1\n100000000\n81832640\n76293537\n48930230\n37589471\n5441816\n100000000\n100000000\n1\n100000000\n1\n100000000\n1\n1\n100000000\n85994688\n1\n22833040\n1\n100000000\n53295529\n100000000\n1\n100000000\n100000000\n1\n100000000\n1\n84957664\n100000000\n1\n100000000\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 201)"
    },
    {
      "input": "201\n47879494\n1\n1\n100000000\n53730752\n100000000\n100000000\n9534287\n37115798\n61981042\n100000000\n20433897\n27876156\n100000000\n100000000\n1\n100000000\n44876356\n75949761\n78571229\n100000000\n1\n100000000\n1\n1\n56699542\n61915507\n100000000\n98070770\n1\n77597\n1\n35791844\n50186071\n1\n83473555\n100000000\n100000000\n100000000\n65306641\n100000000\n1\n1\n3901272\n100000000\n1\n1\n73637028\n100000000\n1\n92458949\n1\n23133484\n1\n100000000\n1\n26324475\n1\n1\n1\n1\n1\n1\n100000000\n1\n1\n100000000\n100000000\n100000000\n83360352\n1\n40623508\n1\n21714801\n100000000\n1\n1\n96211388\n100000000\n100000000\n1\n26453396\n100000000\n1\n1\n1\n1\n1\n100000000\n1\n4997394\n18212542\n100000000\n1\n100000000\n1\n50228304\n1\n7455158\n100000000\n100000000\n1\n1\n100000000\n100000000\n100000000\n100000000\n1\n5786491\n1\n100000000\n1\n18781182\n64824374\n100000000\n1\n100000000\n100000000\n100000000\n1\n1\n4516851\n1\n100000000\n100000000\n55986261\n100000000\n1\n2304445\n14457120\n100000000\n1\n49463065\n29859807\n89300299\n1\n1\n42273053\n87587115\n45179522\n1\n100000000\n64584693\n1\n1\n100000000\n1\n75717741\n6075487\n1\n1\n86344670\n1\n100000000\n1\n41693055\n100000000\n1\n100000000\n1\n1\n90518093\n2838437\n11322316\n100000000\n17592038\n100000000\n37754285\n1\n100000000\n31978004\n1\n75109956\n80111323\n100000000\n1\n100000000\n97700152\n100000000\n100000000\n39917520\n1\n1\n1\n1\n1\n1\n1\n100000000\n100000000\n70941954\n1\n83695679\n7838830\n100000000\n1\n100000000\n82032779\n100000000\n88114214\n1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 201)"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:55",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Roti Prata",
  "tags": [],
  "text": "IEEE is having its AGM next week and the president wants to serve cheese prata after the meeting. The subcommittee members are asked to go to food connection and get P (P ≤ 1000) pratas packed for the function. The stall has L cooks (L ≤ 50) and each cook has a rank R (1 ≤ R ≤ 8). A cook with a rank R can cook 1 prata in the first R minutes 1 more prata in the next 2R minutes, 1 more prata in 3R minutes and so on (he can only cook a complete prata) (For example if a cook is ranked 2, he will cook one prata in 2 minutes one more prata in the next 4 mins an one more in the next 6 minutes hence in total 12 minutes he cooks 3 pratas in 13 minutes also he can cook only 3 pratas as he does not have enough time for the 4th prata). The webmaster wants to know the minimum time to get the order done. Please write a program to help him out.InputThe first line tells the number of test cases. Each test case consist of 2 lines. In the first line of the test case we have P the number of prata ordered. In the next line the first integer denotes the number of cooks L and L integers follow in the same line each denoting the rank of a cook.OutputPrint an integer which tells the number of minutes needed to get the order done.ExampleInput:3104 1 2 3 481 188 1 1 1 1 1 1 1 1Output:12361",
  "sample_input": "Input:3104 1 2 3 481 188 1 1 1 1 1 1 1 1Output:12361",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/PRATA",
  "scraped_at": "2025-08-17 00:33:55",
  "test_cases": [
    {
      "input": "3104 1 2 3 481 188 1 1 1 1 1 1 1 1",
      "expected_output": "12361",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "6 4 1 3 5 1 3 9 2 1 9 3 5 3",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "3 1 8 3 9 8 3 3 6 9 3 10 4 6",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "8 10 7 1 9 5 2 4 10 9 7 4 8 4",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "97 8 81 21 88 50 33 34 20 80 17 26 76 39",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "15 10 42 63 53 73 45 27 86 96 21 13 100 35",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "37 15 14 58 28 5 43 30 100 19 59 10 88 60",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "99 67 84 41 59 74 98 7 23 41 47 78 35 67",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "10 25 35 95 7 56 61 60 36 26 40 32 12 43",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "329 445 340 392 245 327 193 387 426 97 310 490 466 171",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "269 375 342 427 69 55 471 273 403 435 93 86 351 465",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "430 119 133 151 292 296 463 137 376 81 390 350 118 154",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "313 255 61 485 329 412 84 76 156 225 417 106 120 53",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "352 331 186 246 498 313 379 207 83 426 499 323 355 294",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "62 264 233 491 423 213 333 474 157 139 377 195 345 495",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "202 158 210 322 238 165 375 451 301 151 116 427 331 107",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 1000 1000 999 1000 1000 1000 2 2 999 999 1 2 2",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 2 1 1 1000 1 1000 1000 1 2 1 2 1 1",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:52",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:30"
}
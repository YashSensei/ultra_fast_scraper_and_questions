{
  "problem_code": "problems",
  "title": "A Famous ICPC Team",
  "tags": [],
  "text": "Mr. B, Mr. G, Mr. M and their coach Professor S are planning their way to Warsaw for the ACM-ICPC World Finals. Each of the four has a square-shaped suitcase with side length Ai(1 ≤i≤ 4) respectively. They want to pack their suitcases into a large square box. The heights of the large box as well as the four suitcases are exactly the same. So they only need to consider the large box’s side length. Of course, you should write a program to output the minimum side length of the large box so that the four suitcases can be put into the box without overlapping.InputEach test case contains only one line containing 4 integers Ai(1 ≤i≤ 4, 1 ≤ Ai≤ 1,000,000,000) indicating the side length of each suitcase.OutputFor each test case, display a single line containing the case number and the minimum side length of the large box required.ExampleInput:2 2 2 2\r\n2 2 2 1Output:Case 1: 4\r\nCase 2: 4ExplanationFor the first case, all suitcases have size 2×2. So they can perfectly be packed in a 4×4 large box without wasting any space.For the second case, three suitcases have size 2×2 and the last one is 1×1. No matter how to rotate or move, you could find the side length of the box must be at least 4.",
  "sample_input": "Input:2 2 2 2\r\n2 2 2 1Output:Case 1: 4\r\nCase 2: 4",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/TEAM2",
  "scraped_at": "2025-08-17 00:33:59",
  "test_cases": [
    {
      "input": "2 2 2 2\r\n2 2 2 1",
      "expected_output": "Case 1: 4\r\nCase 2: 4",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5 3 4 1\n1 8 1 2",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "3 3 1 3\n4 2 3 6",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "10 1 9 10\n2 4 3 10",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "64 2 73 80\n24 82 20 85",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "97 56 48 67\n83 42 28 99",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "36 46 40 44\n64 1 1 96",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "11 4 74 12\n84 71 83 28",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "8 93 26 39\n88 57 80 47",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "439 499 403 183\n245 411 325 52",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "64 370 250 52\n171 339 311 83",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "423 412 273 101\n425 466 338 252",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "179 135 445 218\n314 424 354 223",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "89 78 275 212\n279 111 216 215",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "63 265 161 127\n327 336 73 87",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "406 360 321 333\n68 348 61 488",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000\n1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000\n1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 1000 2 2\n1 999 2 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 2 1 2\n2 2 1000 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:53",
  "total_test_cases": 20
}
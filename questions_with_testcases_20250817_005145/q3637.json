{
  "problem_code": "problems",
  "title": "Takeover Wars",
  "tags": [],
  "text": "You are studying a takeover war between two large corporations, Takeover Incorporated and Buyout\r\nLimited. Each of these corporations controls a number of subsidiaries. The aim in this war is simply\r\nto drive the competition out of the market. There are N subsidiaries of Takeover Incorporated and M\r\nsubsidiaries of Buyout Limited, and you know the market value of each subsidiary.Each company can designate one of its subsidiaries to perform a takeover. The takeover can either be\r\nfriendly or hostile. A friendly takeover means a subsidiary of a corporation merges with a different\r\nsubsidiary of the same corporation. The market value of the merged subsidiary is the sum of the market\r\nvalues of the constituent subsidiaries. There is no constraint on the relative sizes of the subsidiaries\r\nparticipating in a friendly takeover.A hostile takeover means a subsidiary A of a corporation attempts to take over a subsidiary B of the\r\nother corporation. For this to succeed, the market value of A has to be greater than the market value of\r\nB. After this move, B disappears from the market. The market value of A does not change (the gain of\r\nincorporating B’s assets is offset by the monetary cost of the takeover). For simplicity we assume that\r\nno sequence of moves leads to two subsidiaries of different corporations having the same market value.\r\nThe companies take turns making moves in this takeover war, with Takeover Incorporated going first.\r\nA company will do nothing on its turn only if it cannot make a takeover. A company loses the takeover\r\nwar if all its subsidiaries are taken over.Your aim is to learn which company can guarantee a victory from this war. In the first case of the\r\nsample data, Takeover Incorporated can simply take over one of the companies of Buyout Limited in\r\nits first move with the 7-value subsidiary. Then it will lose one of its small (1-value) subsidiaries to a\r\nhostile takeover, and then it will take over the second subsidiary of Buyout Limited. In the second case,\r\nTakeover has to make a friendly takeover in its first move. Buyout Limited will join its two subsidiaries\r\ninto a single company with market value 10. Takeover will have to make a friendly takeover again\r\n(as again it will not have a large enough subsidiary to take over Buyout’s giant). Now Takeover will\r\nhave two subsidiaries, valued either 9 and 3 or 6 and 6. In either case, Buyout takes over one of these\r\nsubsidiaries, Takeover has to pass, and Buyout takes over the other one.InputEach test case is described by three lines of input. The first line contains two numbers 1 ≤ N ≤ 105and\r\n1 ≤ M ≤ 105denoting respectively the number of subsidiaries of Takeover Incorporated and Buyout\r\nLimited. The next line lists the N sizes a i of the subsidiaries of Takeover Incorporated (1 ≤ a i ≤ 1012),\r\nand the third line lists the M sizes b j of the subsidiaries of Buyout Limited (1 ≤ b j ≤ 1012).OutputFor each test case, display the case number and either the phrase Takeover Incorporated or the\r\nphrase Buyout Limited depending on who wins the takeover war if both corporations act optimally.ExampleInput:3 2\r\n7 1 1\r\n5 5\r\n4 2\r\n3 3 3 3\r\n5 5Output:Case 1: Takeover Incorporated\r\nCase 2: Buyout Limited",
  "sample_input": "Input:3 2\r\n7 1 1\r\n5 5\r\n4 2\r\n3 3 3 3\r\n5 5Output:Case 1: Takeover Incorporated\r\nCase 2: Buyout Limited",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/TKV1000",
  "scraped_at": "2025-08-17 00:34:27",
  "test_cases": [
    {
      "input": "3 2\r\n7 1 1\r\n5 5\r\n4 2\r\n3 3 3 3\r\n5 5",
      "expected_output": "Case 1: Takeover Incorporated\r\nCase 2: Buyout Limited",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "7 6\n6 5 1\n3 7\n10 1\n7 1 9 6\n9 4",
      "expected_output": "0\n0\n0\n0\n0\n0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "7 8\n5 3 6\n7 3\n10 9\n2 9 2 10\n4 4",
      "expected_output": "0\n0\n0\n0\n0\n0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "9 10\n6 5 2\n6 9\n10 2\n3 7 10 2\n5 1",
      "expected_output": "0\n0\n0\n0\n0\n0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "57 88\n45 72 27\n46 6\n88 85\n41 18 87 49\n25 23",
      "expected_output": "0\n0\n0\n0\n0\n0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "25 30\n61 37 71\n26 67\n51 52\n39 93 3 22\n70 46",
      "expected_output": "0\n0\n0\n0\n0\n0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "78 28\n46 44 14\n90 29\n77 15\n81 47 46 68\n37 41",
      "expected_output": "0\n0\n0\n0\n0\n0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "46 66\n53 92 55\n63 32\n37 65\n35 61 91 2\n96 87",
      "expected_output": "0\n0\n0\n0\n0\n0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "30 53\n36 82 71\n4 25\n84 47\n72 99 48 18\n89 46",
      "expected_output": "0\n0\n0\n0\n0\n0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "20 42\n29 52 13\n28 11\n34 21\n40 40 28 27\n25 12",
      "expected_output": "0\n0\n0\n0\n0\n0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "22 13\n6 50 49\n24 17\n43 21\n35 5 15 33\n8 28",
      "expected_output": "0\n0\n0\n0\n0\n0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "24 41\n28 31 50\n28 31\n16 36\n41 6 42 48\n52 13",
      "expected_output": "0\n0\n0\n0\n0\n0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "16 19\n22 43 13\n13 37\n44 44\n34 14 37 35\n51 8",
      "expected_output": "0\n0\n0\n0\n0\n0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "35 6\n40 45 36\n16 13\n45 31\n44 5 40 16\n43 52",
      "expected_output": "0\n0\n0\n0\n0\n0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "5 44\n20 49 25\n20 26\n8 51\n36 42 17 31\n6 19",
      "expected_output": "0\n0\n0\n0\n0\n0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "13 24\n36 51 26\n47 36\n10 12\n10 26 25 23\n39 34",
      "expected_output": "0\n0\n0\n0\n0\n0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "105 105\n105 105 105\n105 105\n105 105\n105 105 105 105\n105 105",
      "expected_output": "0\n0\n0\n0\n0\n0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "105 105\n105 105 105\n105 105\n105 105\n105 105 105 105\n105 105",
      "expected_output": "0\n0\n0\n0\n0\n0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 105\n104 1 105\n104 1\n2 104\n1 1 2 1\n2 1",
      "expected_output": "0\n0\n0\n0\n0\n0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "105 105\n105 1 2\n105 1\n105 105\n2 105 104 105\n104 105",
      "expected_output": "0\n0\n0\n0\n0\n0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:57",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:38:14"
}
{
  "problem_code": "problems",
  "title": "Tower of Vientiane",
  "tags": [],
  "text": "The Tower of Hanoi is a mathematical game or puzzle. It consists of three rods, and a number of disks of different sizes which can slide onto any rod. The puzzle starts with the disks neatly stacked in order of size on one rod, the smallest at the top, thus making a conical shape.\r\nThe objective of the puzzle is to move the entire stack to another rod, obeying the following rules:Only one disk may be moved at a time.Each move consists of taking the upper disk from one of the rods and sliding it onto another rod, on top of the other disks that may already be present on that rod.No disk may be placed on top of a smaller disk.It is known that the puzzle can be solved in2n-1steps for n disks.Now consider the puzzle called The Tower of Vientiane. The rules are almost the same as for The Tower of Hanoi. But additionally there are limitations on the allowed moves. Let the initial rod be numbered 1, the target rod - 3, and the auxiliary rod - 2. The matrix of allowed moves is given. For example is can be allowed to move disks from rod 1 to rod 2 only, from rod 2 to rod 3 and from rod 3 to rod 1. You are to find out the minimal number of moves in which the puzzle can be solved given some limitations on the allowed moves.InputThe first line of the input contains numbert– the amount of tests. Thenttest descriptions follow. The test starts with a3×3matrix, consisting of1sand0s. The1ini-throw andj-thcolumn of the matrix means that the move from rodito rodjis allowed, otherwise it is not allowed. The next line of each test contains the numbern- the amount of disks for the corresponding testcase.Constraints1 ≤t≤ 100002 ≤n≤ 39OutputFor each test print the minimal number of moves in which the puzzle can be solved or \"Epic Fail...\" if it's impossible to solve the puzzle under such limitations.ExampleInput:3\r\n011\r\n101\r\n110\r\n5\r\n010\r\n101\r\n010\r\n5\r\n010\r\n001\r\n010\r\n5Output:31\r\n242\r\nEpic Fail...",
  "sample_input": "Input:3\r\n011\r\n101\r\n110\r\n5\r\n010\r\n101\r\n010\r\n5\r\n010\r\n001\r\n010\r\n5Output:31\r\n242\r\nEpic Fail...",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/VIENTIAN",
  "scraped_at": "2025-08-17 00:33:37",
  "test_cases": [
    {
      "input": "3\r\n011\r\n101\r\n110\r\n5\r\n010\r\n101\r\n010\r\n5\r\n010\r\n001\r\n010\r\n5",
      "expected_output": "31\r\n242\r\nEpic Fail...",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1\n6",
      "expected_output": "1\n6",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "3\n4\n4\n6",
      "expected_output": "3\n4\n4\n6",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "4\n1\n10\n10\n2",
      "expected_output": "4\n1\n10\n10\n2",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "18\n3909414\n16076912\n53131781\n73793070\n57644471\n36673746\n69797181\n44202318\n31950561\n99416513\n69276019\n70295307\n49601439\n15141269\n18868245\n34162668\n55503405\n75848693",
      "expected_output": "18\n3909414\n16076912\n53131781\n73793070\n57644471\n36673746\n69797181\n44202318\n31950561\n99416513\n69276019\n70295307\n49601439\n15141269\n18868245\n34162668\n55503405\n75848693",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "15\n26267703\n43001139\n1007405\n98284800\n38790209\n94115992\n97598580\n60274246\n98068107\n88633320\n40326006\n20994535\n95243360\n75194299\n60909650",
      "expected_output": "15\n26267703\n43001139\n1007405\n98284800\n38790209\n94115992\n97598580\n60274246\n98068107\n88633320\n40326006\n20994535\n95243360\n75194299\n60909650",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "20\n97607435\n7939717\n96482311\n8942530\n96648957\n95310183\n92185612\n87272427\n75217623\n59167158\n69402578\n4771987\n17223411\n84446452\n27407941\n22748310\n78939977\n34363166\n15296048\n11996064",
      "expected_output": "20\n97607435\n7939717\n96482311\n8942530\n96648957\n95310183\n92185612\n87272427\n75217623\n59167158\n69402578\n4771987\n17223411\n84446452\n27407941\n22748310\n78939977\n34363166\n15296048\n11996064",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "7\n48214749\n55388025\n74568976\n28082465\n15839103\n86468638\n2614836",
      "expected_output": "7\n48214749\n55388025\n74568976\n28082465\n15839103\n86468638\n2614836",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "13\n34769626\n83684079\n58467603\n7003829\n65670328\n80417996\n31687056\n4921759\n25685065\n51643601\n21892170\n32900188\n57322465",
      "expected_output": "13\n34769626\n83684079\n58467603\n7003829\n65670328\n80417996\n31687056\n4921759\n25685065\n51643601\n21892170\n32900188\n57322465",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "27\n24433\n41632\n20492\n45095\n34188\n7095\n49232\n23823\n13561\n39583\n54905\n61066\n34042\n89683\n19943\n88445\n99103\n88605\n80297\n54722\n59038\n91002\n73352\n50874\n10841\n94932\n60555",
      "expected_output": "27\n24433\n41632\n20492\n45095\n34188\n7095\n49232\n23823\n13561\n39583\n54905\n61066\n34042\n89683\n19943\n88445\n99103\n88605\n80297\n54722\n59038\n91002\n73352\n50874\n10841\n94932\n60555",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "24\n6768\n52701\n45660\n17737\n10432\n83907\n55241\n97871\n41855\n97675\n7949\n75\n7415\n5228\n51220\n86620\n47766\n88048\n18861\n24776\n36626\n57420\n80176\n19257",
      "expected_output": "24\n6768\n52701\n45660\n17737\n10432\n83907\n55241\n97871\n41855\n97675\n7949\n75\n7415\n5228\n51220\n86620\n47766\n88048\n18861\n24776\n36626\n57420\n80176\n19257",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "30\n8385\n25858\n6877\n10434\n72568\n83750\n90607\n62526\n14398\n24488\n43052\n83462\n14741\n59305\n33044\n78704\n60975\n54947\n48239\n35325\n92707\n20823\n6405\n62551\n39583\n85419\n93052\n18502\n57799\n26895",
      "expected_output": "30\n8385\n25858\n6877\n10434\n72568\n83750\n90607\n62526\n14398\n24488\n43052\n83462\n14741\n59305\n33044\n78704\n60975\n54947\n48239\n35325\n92707\n20823\n6405\n62551\n39583\n85419\n93052\n18502\n57799\n26895",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "30\n68746\n20100\n31024\n55359\n94476\n70264\n6245\n41688\n42740\n35393\n12502\n97476\n84395\n87024\n81712\n21606\n9010\n43838\n54537\n25273\n61688\n98990\n31300\n15147\n4039\n21892\n42866\n67993\n84775\n64520",
      "expected_output": "30\n68746\n20100\n31024\n55359\n94476\n70264\n6245\n41688\n42740\n35393\n12502\n97476\n84395\n87024\n81712\n21606\n9010\n43838\n54537\n25273\n61688\n98990\n31300\n15147\n4039\n21892\n42866\n67993\n84775\n64520",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "37\n69485\n26109\n78816\n82153\n53468\n1695\n57454\n83031\n70393\n63055\n77903\n96357\n35192\n90646\n15782\n99777\n48279\n31198\n35276\n12179\n22957\n66099\n74868\n69341\n61630\n30555\n83719\n55952\n20151\n72445\n69277\n38294\n49914\n38936\n38866\n90848\n84375",
      "expected_output": "37\n69485\n26109\n78816\n82153\n53468\n1695\n57454\n83031\n70393\n63055\n77903\n96357\n35192\n90646\n15782\n99777\n48279\n31198\n35276\n12179\n22957\n66099\n74868\n69341\n61630\n30555\n83719\n55952\n20151\n72445\n69277\n38294\n49914\n38936\n38866\n90848\n84375",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "36\n40016\n23703\n54013\n86517\n21450\n70313\n1543\n21061\n61023\n7678\n84890\n73638\n63340\n1081\n74553\n97245\n25223\n52869\n59220\n29397\n2740\n74381\n74914\n83993\n46671\n32045\n29297\n85787\n97945\n82736\n67508\n12494\n60402\n83608\n82179\n72254",
      "expected_output": "36\n40016\n23703\n54013\n86517\n21450\n70313\n1543\n21061\n61023\n7678\n84890\n73638\n63340\n1081\n74553\n97245\n25223\n52869\n59220\n29397\n2740\n74381\n74914\n83993\n46671\n32045\n29297\n85787\n97945\n82736\n67508\n12494\n60402\n83608\n82179\n72254",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "32\n4736\n34476\n12708\n5331\n56493\n40935\n53953\n43979\n6666\n3410\n8397\n58414\n21163\n12722\n40625\n13768\n20953\n80388\n60454\n8579\n5134\n31202\n68188\n2530\n33841\n4517\n36389\n84508\n49766\n81387\n24726\n63263",
      "expected_output": "32\n4736\n34476\n12708\n5331\n56493\n40935\n53953\n43979\n6666\n3410\n8397\n58414\n21163\n12722\n40625\n13768\n20953\n80388\n60454\n8579\n5134\n31202\n68188\n2530\n33841\n4517\n36389\n84508\n49766\n81387\n24726\n63263",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "39\n93588706\n69704635\n45483873\n68122362\n74804409\n70611084\n71287044\n83824782\n93323822\n8359594\n38862870\n52469545\n83064214\n63865830\n24129712\n53954467\n65423909\n64337467\n51890833\n54659471\n46423326\n72638956\n50198697\n74416560\n12014462\n51937674\n78096057\n45678478\n90621230\n68277730\n8506546\n2508539\n20176967\n88363961\n18261874\n67052605\n13966639\n93413100\n31205847",
      "expected_output": "39\n93588706\n69704635\n45483873\n68122362\n74804409\n70611084\n71287044\n83824782\n93323822\n8359594\n38862870\n52469545\n83064214\n63865830\n24129712\n53954467\n65423909\n64337467\n51890833\n54659471\n46423326\n72638956\n50198697\n74416560\n12014462\n51937674\n78096057\n45678478\n90621230\n68277730\n8506546\n2508539\n20176967\n88363961\n18261874\n67052605\n13966639\n93413100\n31205847",
      "type": "max_case_17",
      "description": "Maximum size array (N = 39)"
    },
    {
      "input": "39\n36203578\n17421554\n32986557\n85556405\n11650871\n8687005\n31130416\n82624102\n46586313\n25893454\n83447624\n10228243\n71564151\n55035856\n99614908\n39510560\n61542903\n21519909\n82363497\n63904920\n88923381\n48224720\n94516199\n22492587\n1051242\n38396324\n14252602\n161416\n42222896\n35186189\n96627778\n48600389\n50655440\n56844124\n52608661\n47177236\n77953610\n45387121\n35370313",
      "expected_output": "39\n36203578\n17421554\n32986557\n85556405\n11650871\n8687005\n31130416\n82624102\n46586313\n25893454\n83447624\n10228243\n71564151\n55035856\n99614908\n39510560\n61542903\n21519909\n82363497\n63904920\n88923381\n48224720\n94516199\n22492587\n1051242\n38396324\n14252602\n161416\n42222896\n35186189\n96627778\n48600389\n50655440\n56844124\n52608661\n47177236\n77953610\n45387121\n35370313",
      "type": "max_case_18",
      "description": "Maximum size array (N = 39)"
    },
    {
      "input": "39\n100000000\n1\n1\n8826796\n100000000\n1\n1\n100000000\n5369612\n100000000\n1\n80325427\n1\n100000000\n1\n100000000\n88599013\n28656357\n1\n100000000\n1\n1\n1\n1\n1\n100000000\n1\n1\n1\n73239295\n1\n100000000\n100000000\n100000000\n100000000\n1\n100000000\n1\n100000000",
      "expected_output": "39\n100000000\n1\n1\n8826796\n100000000\n1\n1\n100000000\n5369612\n100000000\n1\n80325427\n1\n100000000\n1\n100000000\n88599013\n28656357\n1\n100000000\n1\n1\n1\n1\n1\n100000000\n1\n1\n1\n73239295\n1\n100000000\n100000000\n100000000\n100000000\n1\n100000000\n1\n100000000",
      "type": "edge_case_19",
      "description": "Edge case array (N = 39)"
    },
    {
      "input": "2\n1\n100000000",
      "expected_output": "2\n1\n100000000",
      "type": "edge_case_20",
      "description": "Edge case array (N = 2)"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:50",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:10"
}
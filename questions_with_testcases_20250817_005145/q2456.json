{
  "problem_code": "problems",
  "title": "Adding Sevens",
  "tags": [],
  "text": "A seven segment display, similar to the one shown on the right, is composed of seven light-emitting elements. Individually on or off, they can be combined to produce 127 different combinations, including the ten Arabic numerals. The figure below illustrates how the ten numerals are displayed. 7-seg displays (as they're often abbreviated) are widely used in digital clocks, electronic meters, and calculators.A 7-seg has seven connectors, one for each element, (plus few more connectors for other electrical purposes.) Each element can be turned on by sending an electric current through its pin. Each of the seven pins is viewed by programmers as a single bit in a 7-bit number, as they are more comfortable dealing with bits rather than electrical signals. The figure below shows the bit assignment for a typical 7-seg, bit 0 being the right-most bit.For example, in order to display the digit 1, the programmer knows that only bits 1 and 3 need to be on, i.e. the 7-bit binary number to display digit 1 is \"0001010\", or 10 in decimal. Let's call the decimal number for displaying a digit, its display code, or just code for short. Since a 7-seg displays 127 different configurations, display codes are normally written using 3 decimal places with leading zeros if necessary, i.e. the display code for digit 1 is written as 010.In a 9-digit calculator, 9 7-seg displays are stacked next to each other, and are all controlled by a single controller. The controller is sent a sequence of 3n digits, representing n display codes, where 0 < n < 10 . If n < 9 , the number is right justified and leading zeros are automatically displayed. For example, the display code for 13 is 010079 while for 144 it is 010106106Write a program that reads the display codes of two numbers, and prints the display code of their sum.InputYour program will be tested on one or more test cases. Each test case is specified on a single line in the form of A+B= where both A  and B  are display codes for decimal numbers a  and b  respectively where 0 < a , b < a + b < 1, 000, 000, 000 . The last line of the input file is the word \"BYE\" (without the double quotes.)OutputFor each test case, print A+B=C  where C  is the display code for a + b .ExampleInput:010079010+010079=\r\n106010+010=\r\nBYEOutput:010079010+010079=010106106\r\n106010+010=106093",
  "sample_input": "Input:010079010+010079=\r\n106010+010=\r\nBYEOutput:010079010+010079=010106106\r\n106010+010=106093",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/ANARC08B",
  "scraped_at": "2025-08-17 00:34:01",
  "test_cases": [
    {
      "input": "010079010+010079=\r\n106010+010=\r\nBYE",
      "expected_output": "010079010+010079=010106106\r\n106010+010=106093",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2 10\nmfejehkjazxwlubuc\n7 2\nfptdujxnqz\nvbwes",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "3 7\nhdnbayrngz\n8 3\nocq\nh",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "2 2\nr\n8 3\nzshtsdziy\ndo",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "7 2\nn\n3 7\nonhyohylfrwqkeiv\nhe",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "10 10\nwdvexjziregmngqessbx\n7 6\nfiirwqgwluwcdly\nidbk",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "5 7\nfzslt\n3 8\njsrclgbnobpbrpwq\nhjqwq",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "4 5\nrfxiipc\n6 10\naaxbo\nrcjyi",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "3 4\nwrtjwiwnpschewkcnrl\n4 9\npnofslyfjibstvgatna\nt",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "2 5\nhuwuajksxppnm\n3 2\ngnzdibqzu\noog",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "5 1\nztyzxvg\n1 4\npamlhghufsgx\nqun",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "5 5\nuvichegspmodmou\n5 4\nrlggfrtgq\nckde",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "4 1\nxqzqdnphcyssc\n3 1\nyndkzzgoxdfutjhrodro\nebwxt",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "4 3\nub\n3 4\ncygjmiefpo\nje",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "2 4\ndvlknrkbkrgddqxfyjj\n2 4\ndfcvdanfmnpnzydre\notpl",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "2 2\nhrepjiqskpxmp\n2 1\nptbqiy\njkvcy",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "10 10\nlvmgk\n10 10\nrkgldbebharspamiqw\nqwl",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "10 10\nnumuz\n10 10\napsrajbyaxpfy\nzr",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 1\nscbq\n10 2\nyonnmdtlcbah\ntma",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 2\nrmsaiv\n9 9\nisfruse\nvpntqn",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:53",
  "total_test_cases": 20
}
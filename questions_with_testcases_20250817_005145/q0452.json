{
  "problem_code": "problems",
  "title": "Bankomat",
  "tags": [],
  "text": "As a world-renowned computer scientist, you have received an offer from a start-up Swiss bank to write some software for ATMs. Your program has to check if it is able to withdraw the amount requested by the customer with the available banknotes.InputThe first line contains the number D, indicating the number of data sets. Each data set fits on one line and consists of six numbers: a1, a2, a3, a4, a5, k (ai ≤ 1000, k ≤ 10000). Numbers a1 - a5 denote the number of 10, 20, 50, 100, 200 Swiss franc banknotes available in the ATM. The number k indicates the desired amount to be withdrawn.OutputFor each data set, one line should appear in the result containing the single word TAK (yes) or NIE (no) indicating whether the ATM can currently supply the requested amount.ExampleInput:30 2 10 10 1000 1101 2 10 10 1000 110199 100 40 20 10 10000Output:NIETAKNIE",
  "sample_input": "Input:30 2 10 10 1000 1101 2 10 10 1000 110199 100 40 20 10 10000Output:NIETAKNIE",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/SP2004X",
  "scraped_at": "2025-08-17 00:33:06",
  "test_cases": [
    {
      "input": "30 2 10 10 1000 1101 2 10 10 1000 110199 100 40 20 10 10000",
      "expected_output": "NIETAKNIE",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2 1 1 5 7 3 1 9 3 5 3 1 1 10 6 6",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "3 3 3 9 5 7 7 8 1 9 3 7 4 1 8 5",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "5 1 5 6 4 8 7 10 2 6 7 7 5 4 6 9",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "81 50 40 27 31 35 39 70 91 51 83 49 33 31 94 41",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "33 79 96 70 64 1 61 74 34 96 27 20 15 33 12 40",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "37 12 70 94 88 22 95 86 94 95 88 83 40 70 9 82",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "80 97 71 18 77 24 44 64 62 69 26 56 37 22 42 55",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "83 95 95 74 72 49 40 56 4 25 42 88 42 89 17 93",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "106 243 486 158 464 277 430 435 269 324 201 465 487 146 173 52",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "359 301 372 467 197 434 172 471 409 344 347 229 135 331 95 261",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "490 99 105 329 210 191 176 378 56 286 370 339 279 267 340 125",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "269 448 194 83 383 106 269 340 335 235 311 310 213 399 53 419",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "459 409 129 95 109 382 264 243 406 294 319 382 342 287 107 366",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "263 67 383 284 239 417 274 344 402 189 388 346 186 473 119 196",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "183 279 242 92 79 488 392 154 469 188 458 390 484 471 283 283",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "999 999 1000 1000 999 1 999 1000 1000 1 1000 1000 1 999 1 999",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1000 999 1000 999 2 999 999 1 2 999 999 999 2 1000 999 1000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:47",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Fast Maximum Matching",
  "tags": [],
  "text": "EnglishVietnameseFJ has N (1 ≤ N ≤ 50,000) cows and M (1 ≤ M ≤ 50,000) bulls. Given a list of P (1 ≤ P ≤ 150,000) potential matches between a cow and a bull, compute the greatest number of pairs that can be matched. Of course, a cow can be matched to at most one bull, and vice versa.InputThe first line contains three integers, N, M, and P. Each of the next P lines contains two integers A (1 ≤ A ≤ N) and B (1 ≤ B ≤ M), denoting that cow A can be matched with bull B.OutputPrint a single integer that is the maximum number of pairs that can be obtained.ExampleInput:5 4 6\n5 2\n1 2\n4 3\n3 1\n2 2\n4 4Output:3Cow 1 can be matched to bull 2, cow 3 to bull 1, and cow 4 to bull 3.Original problem:https://www.spoj.com/problems/MATCHING/.",
  "sample_input": "Input:5 4 6\n5 2\n1 2\n4 3\n3 1\n2 2\n4 4Output:3",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/FMATCH",
  "scraped_at": "2025-08-17 00:34:08",
  "test_cases": [
    {
      "input": "5 4 6\n5 2\n1 2\n4 3\n3 1\n2 2\n4 4",
      "expected_output": "3",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3 7 9\n1 8\n7 10\n4 2\n1 7\n8 10\n7 3",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "2 3 7\n10 5\n10 6\n2 4\n10 5\n8 5\n6 6",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "1 2 2\n9 5\n9 3\n2 5\n2 7\n3 1\n3 5",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "9 2 12\n28 18\n9 41\n49 9\n34 26\n2 37\n46 18",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "1 41 36\n46 5\n1 46\n19 43\n38 28\n31 15\n50 50",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "1 31 5\n23 35\n4 38\n17 7\n42 39\n23 5\n5 19",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "34 13 44\n44 42\n49 45\n25 46\n31 34\n42 28\n23 14",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "3 48 10\n40 34\n33 44\n12 21\n2 12\n35 43\n43 28",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "22 13 15\n7 11\n15 12\n18 4\n20 10\n20 13\n23 5",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "23 20 6\n4 13\n7 21\n11 14\n10 4\n18 24\n11 18",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "9 12 24\n23 10\n7 17\n17 22\n13 2\n13 21\n6 25",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "10 3 4\n18 16\n3 9\n25 25\n9 9\n2 17\n24 4",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "21 4 6\n16 10\n19 11\n16 8\n4 13\n9 2\n5 18",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "4 25 6\n21 2\n17 9\n22 18\n8 20\n15 24\n13 7",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "17 14 5\n16 20\n8 3\n18 8\n12 13\n21 7\n20 10",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "50 50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "50 50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "49 1 49\n50 2\n49 2\n1 49\n49 2\n2 2\n2 49",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 2 49\n49 49\n1 49\n49 2\n1 49\n50 50\n2 49",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:53",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Dwarven SniperÂ´s Hunting",
  "tags": [],
  "text": "Now the hunting starts in the world named DOTA, a stupid PC game which cannot play with others together.Among the individuals in the game, there are two heroes named Dwarven Sniper and Lycanthrope. Lycanthrope wants to escape from being captured; however, our Dwarven Sniper won't let him go! He will use the Silver Bullet to kill the Lycanthrope by only one shot! Yes, that's enough.Lycanthrope is running on a line in the map with a constant speed. The weapon range of the Silver Bullet is limited by L meters. Dwarven Sniper can run for a while freely, and then shoot Lycanthrope. In order to show his excellent shooting skill, Dwarven Sniper wants the Silver Bullet flying as far as possible. But don't forget the flying time of the Silver Bullet due to considerable weight of the bullet. And Dwarven Sniper wants to stop the hunting as quickly as possible. So if there is more than one way to show his excellent skill, he would choose the fastest way. In this problem we consider the Silver Bullet and Lycanthrope as two points.Now Dwarven Sniper wants to know the maximum length that the Silver Bullet can fly, and (under this condition) the shortest time that the hunting lasts. Specifically, the total hunting time is defined as the time interval from the start of hunting to the moment that the bullet hit Lycanthrope. Can you help him?InputThere are several test cases. Each of them contains only one line which consist of 9 real numbers, that are X1, Y1, X2, Y2, Lx, Ly, vD, vB and L (-10000 <= X1, Y1, X2, Y2, Lx, Ly <= 10000, 0 <= vD, vB, L <=100000). The pair (X1, Y1) is the starting position of the Lycanthrope while (X2, Y2) is the starting position of Dwarven Sniper, while (Lx, Ly) is the moving vector per second of the Lycanthrope, vD is the speed of the Dwarven Sniper, vB is the speed of the Silver Bullet, L is the maximum possible flying distance of the bullet.All units are meters/second.It is guaranteed that (Lx*Lx+Ly*Ly) < vD*vD < vB*vB , and Dwarven Sniper's starting position is different from Lycanthrope's position. The input ends with a line containing all zeros.OutputFor each test case, output two real numbers S and T in a line separated by a single space denoting that the Silver bullet flies S meters before hitting Lycanthrope and the hunting lasts for T seconds, both with 3 numbers after the decimal point.You may assume that Dwarven Sniper can finish his hunting within no more than 1e+9 seconds.Note: The judge is \"ignoring extra white spaces\".ExampleInput:-1 0 0 10 1 0 2 10 10\r\n0 0 0 5 0 1 2 6 6\r\n0 0 0 0 0 0 0 0 0Output:10.000 1.000\r\n6.000 3.000",
  "sample_input": "Input:-1 0 0 10 1 0 2 10 10\r\n0 0 0 5 0 1 2 6 6\r\n0 0 0 0 0 0 0 0 0Output:10.000 1.000\r\n6.000 3.000",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/HUNT1",
  "scraped_at": "2025-08-17 00:34:22",
  "test_cases": [
    {
      "input": "-1 0 0 10 1 0 2 10 10\r\n0 0 0 5 0 1 2 6 6\r\n0 0 0 0 0 0 0 0 0",
      "expected_output": "10.000 1.000\r\n6.000 3.000",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4 9 6 3 4 8 8 8 1\n10 5 4 8 10 9 9 8 7\n9 4 5 4 6 9 6 5 10",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "3 7 4 4 4 8 5 7 10\n2 2 8 3 2 6 1 2 10\n7 8 6 9 10 4 6 1 10",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "1 9 9 7 4 8 5 5 10\n10 7 7 5 10 10 8 1 6\n7 4 4 5 7 7 4 10 5",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "21 61 6 57 48 80 7 96 38\n49 44 61 19 4 46 55 23 66\n86 20 4 97 71 22 39 38 53",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "70 27 49 29 42 30 42 40 13\n89 47 54 54 62 19 26 76 4\n25 97 10 44 7 88 68 26 24",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "44 93 94 28 9 12 48 47 49\n55 94 41 69 4 73 51 7 1\n46 33 16 27 71 11 58 65 45",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "50 30 36 36 83 14 41 23 79\n8 25 86 81 5 54 53 63 30\n20 4 39 12 27 12 8 79 74",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "4 59 80 79 21 24 4 26 33\n72 18 72 94 88 80 97 70 11\n70 71 4 63 10 11 8 91 27",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "235 104 364 377 224 215 441 302 129\n441 97 366 487 340 486 178 478 430\n457 75 203 493 141 437 72 211 341",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "459 298 467 53 287 396 461 315 404\n170 463 454 133 477 216 462 459 233\n470 61 424 309 480 384 297 143 385",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "229 181 306 96 243 420 146 276 169\n144 201 305 294 350 144 264 60 108\n330 252 332 151 149 267 276 163 221",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "436 206 151 359 500 90 87 342 146\n440 464 151 360 239 206 419 93 183\n434 233 376 161 102 90 405 295 307",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "350 203 250 356 333 101 157 353 295\n477 128 190 500 196 221 274 205 496\n293 261 76 95 55 354 419 242 147",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "135 476 65 477 114 195 492 208 61\n164 240 482 350 446 461 386 105 295\n116 210 52 308 206 181 273 347 357",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "160 138 486 160 465 73 481 411 300\n214 202 52 137 465 50 221 296 285\n296 266 154 418 397 281 215 389 63",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 2 2 1000 999 1 1000 1 1000\n999 1 1000 999 2 2 999 999 1000\n1000 1000 2 1 1 1000 1000 2 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 1000 1000 1 999 999 1 2 2\n999 1 1000 2 1 1000 1000 1 2\n2 2 2 1000 1 1000 999 1 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:57",
  "total_test_cases": 20
}
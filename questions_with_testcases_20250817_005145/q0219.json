{
  "problem_code": "problems",
  "title": "Towers of Powers",
  "tags": [],
  "text": "One of the many problems in computer-generated graphics is realistically modeling the \"orderly randomness\" of things like mountain ranges and city skylines. A new student intern at a graphics company had an idea - use fluctuations in number representations to model height. In this problem you will compute several such number representations and show the \"skylines\" they produce.Letnbe any positive integer, and letbbe an integer greater than or equal to 2. Thecomplete base -bexpansion ofnis obtained as follows. First write the usual base -bexpansion ofn, which is just a sum of powers ofb, each multiplied by a coefficient between 1 andb- 1, omitting terms with zero coefficients. For example, ifn= 20000 andb= 3, the base - 3 expansion of 20000 is given by20000 = 39+ 35+ 2×33+ 2×32+ 2To obtain the complete base -bexpansion, we apply the same procedure to the exponents until all numbers are represented in baseb. Forn= 20000 andb= 3 we would have20000 = 332+ 33 + 2+ 2×33+ 2×32+ 2As another example, considern= 16647 andb= 2. The resulting expansion is16647 = 222 + 1+ 22+ 2+ 222 + 1+ 22+ 2 + 1The rising and falling heights of the numbers form the number's \"skyline\".For each pair of integersnandbin the input, display the complete base -brepresentation ofn. Your display should use multiple output lines for different exponent heights. The display must begin withn=, followed by the expansion. Answers should use an asterisk as the multiplication symbol between coefficients and powers ofb. Zero terms must not be printed, and unnecessary coefficients and exponents must not be shown (for example, display 1 instead of b0, b2instead of 1*b2and b instead of b1). To assist in accurately viewing the skyline of the number, the display must show one character (either a digit, +, or *) per column of the multi-line display; there must be no unnecessary spaces. The correct format is illustrated in the sample output shown below.Answers must be displayed using no more than 80 columns. Expansions requiring more than 80 columns must be split between terms, into two or more sets of display lines to show the remaining portion of the expansion. The second and following parts of the answer must begin in the same column as the first part of the answer and should contain the same number of (possibly blank) lines. The split may only occur between terms of the number itself (the bottom line), not between terms in an exponent. See the sample output for an example. Note that each set of display lines starts with a blank line.InputInput is a sequence of pairs of integers,nandb, followed by a pair of zeroes. Each value fornwill be positive, and each value forbwill be greater than or equal to 2. All values will fit into 64 bits unsigned integers (the maximum is therefore 18446744073709551615).OutputFor each input pair print the complete base -bexpansion ofnas described above. Print a line containingnin complete baseb:preceding each expansion. Separate the output for consecutive pairs by a line of exactly 80 hyphens. All coefficients, bases, and exponents are to be displayed as standard base 10 integers.ExampleInput:20000 3\r\n16647 2\r\n1000 12\r\n85026244 3\r\n0 0Output:20000 in complete base 3:\r\n\r\n          2\r\n         3   3+2    3    2\r\n20000 = 3  +3   +2*3 +2*3 +2\r\n--------------------------------------------------------------------------------\r\n16647 in complete base 2:\r\n\r\n          2+1  2     2+1\r\n         2   +2 +2  2     2\r\n16647 = 2         +2    +2 +2+1\r\n--------------------------------------------------------------------------------\r\n1000 in complete base 12:\r\n\r\n           2\r\n1000 = 6*12 +11*12+4\r\n--------------------------------------------------------------------------------\r\n85026244 in complete base 3:\r\n\r\n             2           2         2         2         2       2       2\r\n            3 +2*3+1    3 +2*3    3 +3+2    3 +3+1    3 +2    3 +1    3\r\n85026244 = 3        +2*3      +2*3      +2*3      +2*3    +2*3    +2*3\r\n\r\n\r\n               2*3+2  2*3+1    3\r\n           +2*3     +3     +2*3 +3+1NoteThe number of test cases will be no more than 100. The judge of this problem compares your output and the expected output, an extra whitespace will cause Wrong Answer.",
  "sample_input": "nin complete baseb:",
  "sample_output": "Input:20000 3\r\n16647 2\r\n1000 12\r\n85026244 3\r\n0 0Output:20000 in complete base 3:\r\n\r\n          2\r\n         3   3+2    3    2\r\n20000 = 3  +3   +2*3 +2*3 +2\r\n--------------------------------------------------------------------------------\r\n16647 in complete base 2:\r\n\r\n          2+1  2     2+1\r\n         2   +2 +2  2     2\r\n16647 = 2         +2    +2 +2+1\r\n--------------------------------------------------------------------------------\r\n1000 in complete base 12:\r\n\r\n           2\r\n1000 = 6*12 +11*12+4\r\n--------------------------------------------------------------------------------\r\n85026244 in complete base 3:\r\n\r\n             2           2         2         2         2       2       2\r\n            3 +2*3+1    3 +2*3    3 +3+2    3 +3+1    3 +2    3 +1    3\r\n85026244 = 3        +2*3      +2*3      +2*3      +2*3    +2*3    +2*3\r\n\r\n\r\n               2*3+2  2*3+1    3\r\n           +2*3     +3     +2*3 +3+1",
  "link": "https://www.spoj.com/problems/TOWER",
  "scraped_at": "2025-08-17 00:33:20",
  "test_cases": [
    {
      "input": "nin complete baseb:",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "20000 3\r\n16647 2\r\n1000 12\r\n85026244 3\r\n0 0",
      "expected_output": "20000 in complete base 3:\r\n\r\n          2\r\n         3   3+2    3    2\r\n20000 = 3  +3   +2*3 +2*3 +2\r\n--------------------------------------------------------------------------------\r\n16647 in complete base 2:\r\n\r\n          2+1  2     2+1\r\n         2   +2 +2  2     2\r\n16647 = 2         +2    +2 +2+1\r\n--------------------------------------------------------------------------------\r\n1000 in complete base 12:\r\n\r\n           2\r\n1000 = 6*12 +11*12+4\r\n--------------------------------------------------------------------------------\r\n85026244 in complete base 3:\r\n\r\n             2           2         2         2         2       2       2\r\n            3 +2*3+1    3 +2*3    3 +3+2    3 +3+1    3 +2    3 +1    3\r\n85026244 = 3        +2*3      +2*3      +2*3      +2*3    +2*3    +2*3\r\n\r\n\r\n               2*3+2  2*3+1    3\r\n           +2*3     +3     +2*3 +3+1",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "zgbbc grpvzds actd",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "ji atc zn",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "h nvrb yy",
      "expected_output": "To be computed",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "zv yhrrfzvs s",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "ngmpk vyny zn",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "xevfn cksybz hh",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "jqi bejjijmt oatryi",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "wc ksorsgjo q",
      "expected_output": "To be computed",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "cl a oqlh",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "y yae v",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "oi rmpsmx nefc",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "akk u g",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "m amhejwuk blplwr",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "iht ufqu pqik",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "bcpp xuotgbs n",
      "expected_output": "To be computed",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "qfef n dfi",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "r bu o",
      "expected_output": "To be computed",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "vkk qvg s",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:46",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Segment Flip",
  "tags": [],
  "text": "You are given N number a1, a2... aN. In asegment flip, you can pick a contiguous segment ai, ai+1... ajof these numbers, where i ≤ j and negate all the numbers in this segment.You are permitted at most K segment flip operations overall. Also, no 2 segments that you pick can overlap. That is, if you flip ai... ajand ak... althen either j < k or l < i.Your aim is to maximize the sum of all the numbers in the resulting sequence by applying appropriate segment flip operations meeting these constraints.For instance, suppose the sequence is -5, 2, -3 and you are allowed a single segment flip. The best sum you can achieve is 6, by flipping all 3 numbers as a single segment to 5, -2, 3.InputThe first line contains 2 integers N and K. The next line contains N integers, the initial values of a1, a2... aN.OutputA single integer denoting the maximum possible sum of the final array.Constraints0 ≤ K ≤ N-10000 ≤ ai≤ 100001 ≤ N ≤ 100000ExampleInput:3 1\r\n-5 2 -3Output:6",
  "sample_input": "Input:3 1\r\n-5 2 -3Output:6",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/SFLIP",
  "scraped_at": "2025-08-17 00:33:49",
  "test_cases": [
    {
      "input": "3 1\r\n-5 2 -3",
      "expected_output": "6",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5 3\n10 3 1",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "4 3\n2 8 10",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "7 8\n9 3 6",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "8 30\n12 42 12",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "91 67\n92 55 6",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "88 48\n95 23 30",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "32 22\n1 13 43",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "42 42\n21 32 31",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "31003 10572\n22292 26814 46886",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "7966 6238\n25168 47666 22384",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "32649 16574\n39551 28179 38159",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "22829 21205\n37912 42036 7963",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "18211 11734\n48988 30611 7674",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "18902 21175\n31781 39139 22969",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "10472 24014\n48130 42345 6354",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "100000 100000\n100000 100000 100000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "100000 100000\n100000 100000 100000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 2\n1 1 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "100000 1\n99999 99999 99999",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:53",
  "total_test_cases": 20
}
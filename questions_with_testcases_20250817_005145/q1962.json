{
  "problem_code": "problems",
  "title": "Hall of Fountains",
  "tags": [],
  "text": "The Museum of Modern Art has a really exciting exhibition: a kind of a longish hall composed of a sequence of quadratic-shaped rooms. Each room is equipped with a water fountain. Each fountain is characterized by a numberpand acts independent of the others. It will be turned on for exactlypseconds, then it will be turned off for exactlypseconds, then on again, then off again, and so on for good. However, different fountains may have different values ofp. And even if they share the same value, they still may perform not identically, for they might have been started at different times.You stand in front of the first room, and want to cross the hall to the other end. Each of your steps takes exactly 1 second. You are able to move one room forward (unless you already reached the other end), one room backward (unless you are at the beginning), or just stay at your current position. Calculate the shortest time to reach the other end, if it is possible at all.Since you do not want to get wet, you can only move into a room where the water fountain will be off during the second after your step. For example, suppose that the fountain in the next room behaves so, that it is on at times 0, 1, 2, then off at times 3, 4, 5, 6, then on at times 7, 8, 9, 10, then off again (which indicatesp = 4with an offset of 7). Then, you can move at time 2 into the room, arriving there at time 3, when the fountain is off. But you cannot move at time 6 into the room, because at time 7 it will be on.InputThe input contains several test cases. Each test case starts with the number of fountainsn. Input is terminated byn = 0. Otherwise,1 ≤ n ≤ 100. Then follownnumberspidenoting the time each fountain is on and off, where0 ≤ pi≤ 10. A value of0forpiindicates that fountainiis out of order (i.e. constantly off). Then follownnumbersqidenoting the offset of each fountain, where0 ≤ qi< 2 × pi, unless the fountain is out of order, in which caseqiis meaningless. Otherwise it means that fountainiwill be on at timeqi, but off just one second before.OutputFor each test case output on a line a single numbertdenoting the shortest time needed to reach the end of the hall (i.e. to enter the place after the last room). Assume, that you are in front of the first room at time0(i.e. you can enter the first room at time1, if the fountain is off at time1). If it is impossible to go through the hall of fountains, print0instead.SampleInput:3\r\n0 0 0\r\n0 0 0\r\n4\r\n6 3 3 4\r\n2 3 0 4\r\n2\r\n1 1\r\n0 0\r\n0Output:4\r\n11\r\n0",
  "sample_input": "Input:3\r\n0 0 0\r\n0 0 0\r\n4\r\n6 3 3 4\r\n2 3 0 4\r\n2\r\n1 1\r\n0 0\r\n0Output:4\r\n11\r\n0",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/ULM2H",
  "scraped_at": "2025-08-17 00:33:43",
  "test_cases": [
    {
      "input": "3\r\n0 0 0\r\n0 0 0\r\n4\r\n6 3 3 4\r\n2 3 0 4\r\n2\r\n1 1\r\n0 0\r\n0",
      "expected_output": "4\r\n11\r\n0",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3\n2\n3\n1",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "2\n9\n1",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "4\n7\n7\n6\n8",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "14\n56610821\n9826869\n26949961\n30213273\n3789987\n82207076\n35723053\n52036435\n59433136\n81207701\n89169900\n19091408\n29885977\n39107227",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "14\n11298635\n15677999\n83225012\n58822481\n16994492\n33502147\n61676425\n53320998\n9131453\n90917136\n37108692\n24721004\n10418971\n99266619",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "16\n73873906\n63466524\n50633656\n64604386\n10227182\n58501658\n81132066\n76443630\n20791707\n40572589\n5067129\n67411337\n14119306\n73270907\n52156072\n48470566",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "6\n78773055\n82002404\n2118898\n30731783\n95615756\n61414525",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "17\n46488310\n48314626\n34506298\n70234736\n77161507\n27017373\n60972222\n91065347\n3943321\n90941532\n83184985\n86234808\n67002426\n75385903\n66837505\n54010378\n37882843",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "81\n72079\n96203\n574\n24742\n14319\n55274\n2106\n52335\n99838\n50318\n7289\n29070\n82011\n26481\n36740\n65746\n43737\n55214\n98894\n51892\n1895\n58507\n72772\n53688\n74463\n83424\n56351\n88788\n37464\n20740\n15918\n171\n79516\n28865\n45676\n41886\n37460\n14263\n93114\n94556\n71681\n94486\n29523\n31811\n1997\n24093\n47460\n54244\n16286\n6919\n7708\n68063\n2192\n90696\n93995\n63180\n91483\n32283\n98964\n5030\n34829\n7176\n32799\n56865\n97891\n98145\n78225\n12855\n34650\n81688\n92502\n76596\n84113\n99793\n46044\n34217\n13142\n7145\n32810\n10417\n24096",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "34\n56910\n86410\n46190\n91710\n97556\n25413\n53430\n31353\n71908\n62401\n94639\n54455\n69024\n96092\n6189\n45898\n93583\n36907\n58060\n21833\n97403\n56504\n51148\n76435\n40957\n1237\n61847\n85009\n8542\n82145\n45417\n88487\n87831\n35256",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "22\n59557\n89919\n29525\n71178\n22287\n93727\n95626\n20129\n60296\n37063\n8676\n78927\n92185\n92590\n6021\n42235\n54810\n35135\n86173\n22367\n18571\n92740",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "63\n50774\n75412\n28814\n47572\n95660\n19138\n1928\n23600\n50742\n8108\n19011\n17013\n9416\n14381\n88891\n51226\n78646\n28152\n97435\n7487\n98404\n46404\n92276\n6087\n27145\n36113\n96788\n65803\n74688\n9455\n98352\n4352\n7627\n57180\n4444\n639\n31591\n79037\n49831\n70700\n81502\n96562\n66316\n99373\n678\n38735\n62906\n92388\n58582\n59471\n72479\n2444\n51082\n45627\n63433\n56107\n9087\n57400\n17646\n49876\n13718\n8203\n37560",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "76\n37669\n77990\n3658\n97527\n41394\n18506\n63342\n18552\n94453\n75576\n833\n8126\n85625\n85698\n8089\n17526\n43733\n55736\n74265\n57343\n12194\n46500\n48755\n82947\n47401\n97069\n57230\n8968\n4082\n20143\n51936\n4490\n8081\n77724\n10528\n46428\n36985\n48887\n99694\n36024\n93481\n44431\n46282\n66080\n1935\n35047\n9096\n76784\n36737\n14949\n3559\n10730\n31949\n76413\n68066\n32159\n25204\n31606\n37852\n61708\n67061\n44387\n83353\n49775\n83028\n72050\n35489\n12522\n84387\n26085\n39376\n93979\n85057\n9305\n77760\n12994",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "29\n66267\n29134\n28638\n39264\n47108\n14300\n53311\n56694\n23372\n42257\n10176\n5872\n31108\n49727\n69699\n91490\n24828\n14898\n32195\n30834\n55652\n50432\n67068\n23336\n19176\n74696\n18667\n51843\n65821",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "99\n52733\n39655\n79220\n46298\n11073\n76353\n22070\n87357\n28099\n81155\n34916\n62675\n28174\n35667\n80853\n89300\n76582\n30504\n14978\n74970\n67561\n23150\n16462\n26816\n31208\n95649\n85843\n34898\n3304\n81684\n40818\n71557\n63027\n49872\n14392\n3140\n5916\n74841\n39377\n58963\n99177\n83301\n1316\n56238\n49628\n72767\n61241\n39313\n79016\n60487\n96902\n48634\n95726\n30914\n19063\n16257\n19641\n55429\n7849\n3674\n4633\n4122\n67366\n53922\n2983\n68720\n89050\n4923\n42510\n43711\n79397\n52448\n71462\n16877\n84056\n36530\n2895\n84066\n98556\n55020\n78997\n31807\n44157\n94186\n28572\n39970\n66440\n7468\n38586\n77041\n22201\n69323\n40128\n21550\n90490\n24216\n70196\n99107\n31639",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "100\n87341171\n71387186\n91334176\n73624054\n99370708\n77226746\n13645203\n22863004\n10954090\n6884486\n15063613\n13335995\n78774129\n49837869\n39454389\n14015465\n13199077\n28107389\n33620287\n37128180\n79747282\n9779821\n624534\n67265026\n36062105\n63485537\n52214403\n25415864\n92350597\n6891804\n6641323\n93496641\n61612561\n89556335\n88937113\n11614955\n53239774\n39615795\n46200427\n84491366\n94361321\n86247819\n98381483\n14324768\n17707767\n28278536\n72020482\n35542256\n2894512\n83393171\n47013175\n65908682\n52209077\n60176844\n92074373\n18447806\n64033471\n10968565\n98723558\n85780136\n56419790\n66010185\n68186368\n70860142\n95498098\n32687327\n36391543\n53310968\n42068596\n49791353\n11779722\n47230721\n64635456\n21231515\n13259398\n36132377\n90406600\n85211308\n98760829\n85583257\n21462297\n30204397\n22349373\n45489361\n81601068\n58367774\n72870611\n7731093\n71067510\n17700658\n36917184\n63884122\n73809942\n50388921\n30452111\n3549640\n58279829\n88546527\n68806251\n73057432",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "100\n53714478\n14065044\n16085490\n97258868\n77465993\n76514281\n903551\n39262609\n97229441\n45118739\n64399838\n98196572\n32009930\n34100897\n2644131\n75810570\n56672754\n62424278\n62454343\n88934083\n88101777\n55562776\n84753386\n12642712\n27653796\n22709142\n72831625\n26697518\n92558193\n16351471\n99877236\n30833496\n31407108\n94049415\n58178228\n65122675\n49907631\n86022752\n3062286\n55840054\n50300670\n657117\n92248749\n30214292\n43805277\n72538840\n99456604\n535708\n67531130\n64971902\n89210447\n54992904\n55112138\n83828419\n11837756\n90655669\n12297297\n91999247\n65612290\n29163768\n18748291\n58915320\n98199839\n55276723\n74525734\n22071810\n44714505\n18452996\n13690369\n47963458\n28347019\n7800138\n11363364\n73799024\n93780357\n37862712\n49312010\n41849239\n81902038\n44883107\n21667363\n58702764\n9255958\n29325363\n33425368\n17446206\n51295855\n88012421\n80496693\n53672804\n53072732\n11581461\n63582586\n29348337\n42920934\n28849076\n47111465\n6753467\n67420638\n92973734",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "1\n1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 1)"
    },
    {
      "input": "1\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 1)"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:51",
  "total_test_cases": 20
}
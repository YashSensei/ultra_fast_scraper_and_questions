{
  "problem_code": "problems",
  "title": "Rainbow Ride",
  "tags": [],
  "text": "Mr.Raju and his extended family are on vacation in Chennai. They visit MGM and see the Rainbow ride. They want to enjoy the ride. However, there are some problems.Each person in the family likes some other people in the family. Each person insists that he or she will go on the ride only if all the people whom that person likes and all the people who like that person also go on the ride. If someone doesn't like anyone and no one likes him, he may come for the ride.You have been roped in to solve this dilemma. Given the weight of the each person in the family, and the list of people they like, and the maximum weight that the Rainbow can bear safely, calculate the maximum number of people in the family who can go on the rainbow.InputThere will be multiple test cases in the input. For our convenience the family members are numbered from 1 to n. Each test case begins with a line containing two   integersn( 1 ≤ n ≤ 1000 ) andC( 0 ≤ C ≤ 1000 ), where n is the number of people in the family and C the maximum capacity of the ride in kilograms.The next line contains n space separated integers with theith integer giving the weight of theith family member. These weights are positive and less than or equal to 200 kilograms. Then n lines follow. Each line contains a sequence of integers separated by spaces. The first integerkigives the number of people in the family personilikes, followed by the personsilikes. An empty line separates each test case. The end of input is indicated by n=0 and C=0 and it should not be processed.There are atmost 50 test cases.OutputFor each test case output on a separate line the maximum number of persons that can take the ride under the given conditions.ExampleInput:5 200\r\n50 50 50 50 50\r\n1 2\r\n1 3\r\n0\r\n1 5\r\n1 4\r\n\r\n3 200\r\n100 100 100\r\n1 2\r\n1 3\r\n1 1\r\n\r\n0 0Output:3\r\n0",
  "sample_input": "Input:5 200\r\n50 50 50 50 50\r\n1 2\r\n1 3\r\n0\r\n1 5\r\n1 4\r\n\r\n3 200\r\n100 100 100\r\n1 2\r\n1 3\r\n1 1\r\n\r\n0 0Output:3\r\n0",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/RAINBOW",
  "scraped_at": "2025-08-17 00:33:21",
  "test_cases": [
    {
      "input": "5 200\r\n50 50 50 50 50\r\n1 2\r\n1 3\r\n0\r\n1 5\r\n1 4\r\n\r\n3 200\r\n100 100 100\r\n1 2\r\n1 3\r\n1 1\r\n\r\n0 0",
      "expected_output": "3\r\n0",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1 2\n4 6 4 6 8\n9 7\n9 2\n2\n4 4\n10 9\n8 2\n2 10 7\n10 6\n9 2\n7 9\n3 4",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "10 6\n3 7 10 9 7\n3 10\n3 3\n10\n2 1\n5 9\n5 7\n8 3 5\n1 8\n4 9\n10 3\n6 6",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "4 7\n5 2 6 7 2\n7 6\n5 9\n10\n1 9\n5 8\n2 6\n2 4 10\n8 8\n10 4\n6 9\n9 5",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "27 16\n10 7 58 81 61\n41 65\n45 74\n4\n41 65\n39 87\n42 76\n12 96 30\n14 6\n23 51\n94 85\n43 21",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "71 18\n63 44 2 83 72\n98 52\n81 11\n12\n35 30\n14 91\n1 69\n52 86 45\n51 92\n36 66\n61 12\n59 91",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "27 12\n79 71 40 5 57\n78 43\n87 19\n66\n50 71\n90 50\n76 6\n66 63 85\n57 76\n23 32\n63 93\n85 45",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "26 41\n16 51 39 97 19\n84 54\n60 42\n82\n18 85\n62 40\n91 62\n47 68 41\n35 4\n95 54\n54 90\n16 20",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "66 12\n95 43 1 64 81\n81 13\n2 14\n54\n56 33\n13 8\n57 64\n65 50 39\n50 11\n8 8\n84 4\n78 58",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "133 208\n315 424 58 284 206\n484 462\n137 209\n274\n460 154\n92 174\n236 486\n90 68 266\n405 223\n172 410\n320 432\n403 332",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "435 52\n57 307 330 232 291\n280 286\n474 379\n290\n101 272\n230 433\n205 59\n128 294 351\n112 337\n376 220\n356 201\n285 224",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "184 259\n267 444 461 338 499\n421 298\n256 307\n178\n327 163\n299 66\n241 358\n112 156 307\n323 249\n380 356\n150 398\n438 306",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "436 143\n216 278 88 497 485\n89 187\n318 172\n371\n427 463\n467 200\n93 479\n210 320 62\n167 269\n143 258\n157 70\n224 293",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "352 285\n210 161 102 497 135\n434 149\n169 192\n186\n258 228\n219 409\n322 231\n467 410 412\n461 500\n217 149\n176 229\n291 60",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "115 241\n301 178 272 405 321\n70 348\n181 402\n410\n132 465\n283 92\n146 491\n356 277 259\n385 169\n359 346\n203 50\n353 238",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "316 146\n179 439 158 301 77\n107 134\n265 313\n345\n67 470\n367 301\n61 82\n313 473 376\n259 474\n482 407\n264 70\n381 345",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000 1000 1000\n1000 1000\n1000 1000\n1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000 1000 1000\n1000 1000\n1000 1000\n1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 2\n2 999 2 1000 2\n1000 1000\n999 1000\n1\n1000 2\n999 1000\n1 1000\n1 2 999\n1000 2\n1 2\n1 2\n1 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1000 999\n2 1000 1 2 1\n2 1\n1000 1\n1\n2 2\n999 1000\n999 999\n1000 1 999\n999 2\n1 999\n2 2\n999 1000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:47",
  "total_test_cases": 20
}
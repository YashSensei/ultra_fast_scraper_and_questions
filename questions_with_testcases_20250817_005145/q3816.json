{
  "problem_code": "problems",
  "title": "Chicken Joggers",
  "tags": [],
  "text": "In the woods of Lill-Jansskogen, there is a network of trails that are often used by joggers. The trails have been much appreciated, and have been specially selected by the professors of the Royal Institute of Technology, enabling university students to take a short break from their studies and refresh their smart minds. Strangely enough, the network of trails actually form a tree. When the trails were selected, the professors of the university took the set of trails that they found in Lill-Jansskogen and created a minimum spanning tree, in order to encourage and inspire computer science students to participate in physical activities by applying graph theory in the beautiful surroundings of the Royal Institute of Technology.Unfortunately, the computer science students are not that brave. Winter is approaching, and it is getting darker and darker in the city of Stockholm. Recently, a bunch of programmers from CSC (Community of Scared Cowards) have been complaining that it is too dark in parts of the trail network at night. Some of the trails are lit up by lamps, but sometimes that is not enough for the CSC. They would like to see that all the trails that they might use are lit up properly!You have been tasked with satisfying thre cowards by placing lamps at intersections. For economic reasons, it might not be possible to place lights at all intersections, so it will suffice to make sure that there is a lamp in at least one of the two intersections adjacent to a trail that could possibly be used by the joggers. Some intersections already have lamps, and of course, you can keep using those lamps.You don't know exactly what trails the joggers are using, but you do know that the joggers will always start and finish at the university campus. You also know that joggers are training for an upcoming marathon, so they always run exactly a certain number of meters S in total. A jogger might turn around at any point in time, even in the middle of a trail, in order to fulfill the requirement of running exactly S meters.You will be given a map of the woods and the jogging trails included in the minimum spanning tree created by the professors. It is guaranteed that there is exactly one route between each pair of intersections, where a route is a set of adjacent trails. Your task is to find the minimum number of additional lamps you needed in order to satisfy the frightened runners, no matter which trails they use (subject to the restrictions above)InputInput starts with two integers N (2 ≤ N ≤ 50 000), and S (1 ≤ S ≤ 104), the number of intersections and the total distance in meters that a jogger wants to run, respectively. Then follow N − 1 lines with three integers a (1 ≤ a ≤ N), b (1 ≤ b ≤ N), d (1 ≤ d ≤ 100), meaning that there is a bidirectional trail between intersection a and b with length d meters. Then follows a line with a single integer L (0 ≤ L ≤ N), the number of lamps that have already been placed. Then follow L distinct integers l1, ..., lLon one line, meaning there is already a lamp placed at intersections l1, ..., lL. The university campus is at intersection number 1.OutputOutput contains a single integer, the minimum number of additional lamps you need to place in order to satisfy the joggers requirements.ExampleInput:5 6\r\n1 2 1\r\n1 3 1\r\n4 3 3\r\n3 5 2\r\n1\r\n1Output:1Input:5 6\r\n1 2 1\r\n1 3 1\r\n4 3 3\r\n3 5 2\r\n1\r\n3Output:1Input:5 6\r\n1 3 3\r\n1 4 2\r\n1 5 3\r\n1 2 2\r\n2\r\n4 3Output:1",
  "sample_input": "Input:5 6\r\n1 2 1\r\n1 3 1\r\n4 3 3\r\n3 5 2\r\n1\r\n1Output:1",
  "sample_output": "Input:5 6\r\n1 2 1\r\n1 3 1\r\n4 3 3\r\n3 5 2\r\n1\r\n3Output:1",
  "link": "https://www.spoj.com/problems/UCBINTD",
  "scraped_at": "2025-08-17 00:34:33",
  "test_cases": [
    {
      "input": "5 6\r\n1 2 1\r\n1 3 1\r\n4 3 3\r\n3 5 2\r\n1\r\n1",
      "expected_output": "1",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5 6\r\n1 2 1\r\n1 3 1\r\n4 3 3\r\n3 5 2\r\n1\r\n3",
      "expected_output": "1",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "8 4\n7 2 6\n8 1 8\n4 9 10\n5 7 3\n6\n10",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "2 10\n6 1 9\n9 10 2\n5 1 4\n4 7 3\n10\n5",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "2 3\n7 4 1\n3 2 3\n5 8 1\n3 3 10\n4\n5",
      "expected_output": "To be computed",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "20 17\n23 67 94\n32 83 32\n43 43 2\n13 95 71\n49\n50",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "25 24\n23 15 75\n59 3 19\n84 81 54\n95 16 95\n11\n69",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "41 62\n2 35 95\n56 16 4\n55 52 63\n91 24 66\n94\n81",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "70 35\n62 86 60\n79 32 37\n8 23 49\n78 43 13\n70\n92",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "76 3\n14 65 89\n43 94 14\n30 33 30\n22 33 77\n10\n8",
      "expected_output": "To be computed",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "19258 2962\n24929 22758 23106\n8451 20673 7875\n6805 21864 15123\n21998 22043 4947\n20217\n22533",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "16684 21664\n13903 11410 8345\n14440 17006 7776\n4103 24050 9419\n23282 18296 10279\n12080\n5935",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "12151 15766\n3657 24933 12172\n24376 21894 13631\n15742 23917 17074\n7350 11661 14802\n17188\n10082",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "5417 14275\n16820 11137 20044\n20087 24060 9225\n17938 22405 8041\n6873 16509 15741\n20951\n16784",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "18579 9694\n8318 23018 7795\n20866 17846 23775\n22329 8096 6300\n8722 8407 6881\n10450\n13181",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "12434 14214\n17884 16806 19829\n6601 14864 11477\n8132 17646 18816\n16203 19682 19848\n23511\n5471",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "19840 4024\n12133 14240 14485\n6386 17428 2707\n18822 18941 2546\n11358 3631 12147\n5632\n5160",
      "expected_output": "To be computed",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "50000 50000\n50000 50000 50000\n50000 50000 50000\n50000 50000 50000\n50000 50000 50000\n50000\n50000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "50000 50000\n50000 50000 50000\n50000 50000 50000\n50000 50000 50000\n50000 50000 50000\n50000\n50000",
      "expected_output": "To be computed",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "50000 50000\n2 1 49999\n2 49999 49999\n50000 1 49999\n1 1 2\n50000\n2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:57",
  "total_test_cases": 20
}
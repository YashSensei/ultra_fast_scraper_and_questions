{
  "problem_code": "problems",
  "title": "Game Simulator",
  "tags": [],
  "text": "Since this problem is added as an classical problem in SPOJ, the users who get this problem Accepted (by himself/herself, I'll look at your code) before 2011.10.25 8:00:00 SPOJ time (two years right after the on-site contest's end) will be e-mailed some pictures of the problem setters of this contest -g201513,lcosvseandBlue Mary. [the offer is invalid, it has been presented to Wassim Khalil (Australia).]Log:Thanks to Thomas Schnattinger, who points out a small bug in the sample input. The corrected sample is shown below.The bug about '\\r\\n' has been fixed.\"Tractor\" is a very popular poker game in China. There are four players in the game. Suppose their names are Alice, Bob, Charles and David, in clockwise order. A judge is needed for this game. The players are divided into two teams, Alice and Charles are in team 1, and the other two are in team 2. The prop they use to play the game are two decks of pokers, including 108 cards in total. A simplified rule of the game is described below.The whole game contains a number of rounds. In each round, one team is called \"Declarers\" (CT); the other team is called \"Defenders\" (FT). Each team has acurrent rank(CR). The goal of the player is to increase his own team's CR as much as possible.A certain round has aMain Suit(Heart - H, Spade - S, Club - C, Diamond - D, orNone - no main suitin this round) and its CR. The CR in this round is the CR of the CT, and Main Suit will be given. The Main Suit and CR will be used to determine the order of the cards.Cards ranked 5, 10, King value 5, 10, 10 pts (points) respectively, all other cards value 0 pts. In one round, we only consider the FT's pts. The rules of getting pts for FT will be discussed later.If the FT gets less than 80 pts in one round, they will hold be FT in the next round. This situation is called \"make\". Otherwise, they become CT in the next round and the original CT become FT instead. This situation is called \"down\".If the FT gets 0 pts, the CR of the current CT will be increased by 3, for example, if the CR of the CT is 9, it will become Queen (12). Otherwise, if the FT gets less than 40 pts, the CR of the CT will be increased by 2. Otherwise, if the FT gets less than 80 pts, the CR of the CT will be increased by 1. Otherwise, if the FT gets not less than 80 + k * 40 pts and less than 120 + k * 40 pts, the CR of the current FT will be increased by k. For example, if the FT gets 255 pts in a round, the CR of the current FT will be increased by 4; and if the FT gets 80 pts, both teams' CR remain unchanged. If a team's CR becomesbeyond Ace, this team is considered the WINNER of the whole game.During a round, one of the players in CT is called thedealer. If \"make\", the pard (teammate) of the dealer becomes the next round’s dealer. Otherwise (\"down\"), the player on dealer's right-hand side becomes the dealer of the next round. For example, if the dealer of the current round is Alice and her team (CT) is \"down\", the dealer of the next round should be Bob (on Alice's right-hand side).At the start of a round, each of the players except the dealer gets exactly 25 cards; the dealer gets all the remaining 33 cards. After that, the dealer chooses 8 of his cards and gives them to the judge, and these cards are called \"hidden cards\".Now each player has exactly 25 cards. A round consists of severaltricks. In the first trick, the dealer plays one or more cards (called \"lead\"), then, in clockwise order, players play the same number of cards as the first player one by one (called \"follow\"). The winner of the current trick leads cards during the next trick, and so on.If the winner of the current trick is a member of FT, then the FT gets the sum of the cards' pts played in this trick.Now we start to describe how to determine the winner of a trick. After the main suit and the CR of the current round are fixed, we can determine the \"trumps\" which are cards with main suit or CR (Current Rank), and the jokers. All other cards are \"not-trumps\".We can have an order among all the cards according the following rules:\"Trumps\" are ordered higher than \"not-trumps\".For the trumps, the order are listed below:Red JokerBlack Jokercard with main suit and CR (if exists)other card with CRother trumps ordered by their ranks(i.e., A, K, Q, J, T, 9, 8, 7 ... 3, 2)For the \"not-trumps\", they are ordered by their ranks.Assume in all the description below, in the current round, the CR of the CT is 7.Suppose the main suit is H, the cards can be arranged in this order (as an example):S2,C2,D2<S3,C3,D3<S4,C4,D4<S5,C5,D5<S6,C6,D6<S8,C8,D8<S9,C9,D9<ST,FT,CT (T - 10)<SJ,CJ,DJ (J - Jack)<SQ,CQ,DQ (Q - Queen)<SK,CK,DK (K - King)<SA,CA,DA (A - Ace)<H2<H3<H4<H5<H6<H8<H9<HT<HJ<HQ<HK<HA<S7=C7=D7<H7<BJ (the Black Joker)<RJ (the Red Joker)If \"None\" during this round, then the pokers can be arranged in this order:H2,S2,C2,D2<H3,S3,C3,D3<H4,S4,C4,D4<H5,S5,C5,D5<H6,S6,C6,D6<H8,S8,C8,D8<H9,S9,C9,D9<HT,ST,FT,CT<HJ,SJ,CJ,DJ<HQ,SQ,CQ,DQ<HK,SK,CK,DK<HA,SA,CA,DA<H7=S7=C7=D7<BJ<RJIn these two tables,cards written in italicare \"trumps\", andcards written in boldfaceare \"not-trumps\".In each trick, thelead cards(played by the player leading this trick) must be either all \"trumps\", or all \"not-trumps\" with same suit.The possiblestructuresof the cards are listed below (assume the main suit is H and main rank is 7 for the example):Single. A single card, such as D9.Pair. Two same cards, such as D9D9. But D7S7 is not a pair although their orders are the same.Tractor. Two or more consecutive-ordered pairs, satisfying the condition that they are all \"trumps\", or all \"not-trumps\" with same suit, such as SJSJSQSQSKSKSASA, H7H7S7S7HAHA or RJRJBJBJ. But, these are not tractors: S7S7C7C7 (their orders are the same), C7C7C6C6 (they are not consecutive-ordered), DADAD2D2 (Ace is not \"one\", so they are not consecutive-ordered), H2H2H4H4, or D2D2D3. Be careful: if \"None\" in this round, H7H7S7S7HAHA is not a tractor (H7 and S7 are same-ordered because of \"None\").Throw. The combination of the structures above, satisfying the condition that they are all \"trumps\", or all \"not-trumps\" with same suit. Each of the Single, Pair or Tractor in a Throw is one of the Throw’s component. In the original tractor game, in some situation, the throw will be rejected. But, to keep the rule simple, we assume in this problem all the throws are accepted. For example, RJRJBJBJH7H7HQHQHJHJH9H9H6H6HAH2 contains six components: two tractors, two pairs and two single cards (RJRJBJBJH7H7-HQHQHJHJ-H9H9-H6H6-HA-H2); CACAC8C8CK contains three components: two pairs and one single card(CACA-C8C8-CK).A throw can be treated as different list of components, for example, H2H2H3H3H4H4H5H5H6H6 can also be treated as H2H2H3H3-H4H4H5H5H6H6, or H2H2-H3H3H4H4H4H5H5-H6H6, and so on. For the lead cards, each time we choose the longest component (choose the one with the highest order to break the tie) to construct a list of components, this list is the structure of the lead cards, also thestructure of the trick.So that the structure of the trick is unique.After the first player lead his or her cards, other players follow cards one by one in clockwise order, as mentioned above.An important part of the game is to determine the winner of a trick:If one’s follow cards contain both \"trumps\" and \"not-trumps\", or all \"not-trumps\" but with different suits, this player can't be winner of this trick.\r\nOtherwise, if the lead cards are all \"not-trumps\" and one’s follow cards contain \"not-trumps\" with different suit from the lead cards, this follow player can’t be the winner of this trick.Else, if one’s follow cards can't be constructed as the same structure of lead cards, this player can't be the winner of this trick either.Otherwise, if the structure of this trick is not \"throw\", the one who played the highest-ordered card wins this trick. If more than one player played the same highest-ordered card, thewinner of this trick will be the one who plays the highest-ordered card first.Now let's consider the \"throw\" situation. We construct the follow cards into the structure of the lead cards, so that the order of the highest-ordered card in all the longest components of the \"throw\" is as high as possible (this card is called \"honor card\").Note that tractor can be treated as several pairs or shorter tractors, and pair can be treated as two single cards. The winner of this trick is the one who plays the highest-ordered \"honor card\". Similarly, if more than one player played the same highest-ordered \"honor card\" the winner of this trick will be the one who plays the highest-ordered \"honor card\" first.There are many hair-raising rules about lead and follow cards; fortunately, they're not related to this problem, the only thing we care about is: when someone leads a \"not-trump\" \"throw\" the only possible way to beat it is to \"throw\" the same structure of \"trumps\". And it’s impossible to beat a leading \"trump\" \"throw\".Special attention on the examples below. In these examples, Alice always leads cards. And assume in all the following examples, the CR is 7, and the main suit is H.AliceBobCharlesDavidWinnerCommentsSAS2STS5AliceAlice plays the highest-ranked card SA.SAS2STSAAliceAlice plays the first SA.SAS2STH2DavidDavid plays the first only \"trump\".SAH2C7D7CharlesCharles plays \"trump\" C7, while David plays D7 with the same order of C7.C2C2C3C4C7D7RJBJAliceThe structure of this trick is \"pair\", while all players except Alice play two single cards.D3D3DTDTSKSKH2H3BobBob plays a pair with order higher than Alice's, while Charles discard a pair with wrong suit.D3D3DTDTSKSKH2H2DavidDavid plays the only \"trump\" pair.D6D6D8D8DJDJDKDKDTDTD2D3HTHTBJBJAliceAlice plays the only tractor (because the CR is 7).H6H6H8H8H7H7BJBJC2C2C3C4HKHKRJRJBobBob's tractor is higher-ordered than Alices'.H6H6H8H8H7H7D7D7C2C2C3C4HKHKRJRJBobBob also plays a tractor!SASKSTSTC2H3S7SKAliceAlice makes a throw.SASKHKH3HAH2S7SKCharlesBoth Bob and Charles can beat Alice.SASKHAH2HAH3S7SKBobBoth Bob and Charles can beat Alice, but Bob's HA comes first.S2S2S3S3SAH3H3H4H4RJD7D7H7H7H2S7S7SQSJS6CharlesBoth Bob and Charles can beat Alice.There is a special rule about \"hidden cards\": if the winner of the last trick of a certain round is a member of FT, then, in addition, the FT gets the sum of the hidden cards' pts, multiplied by 2w(2 to the power ofw).When the structure of the final trick is not \"throw\", thenwis the number of lead cards of the last trick of this round. If the structure is \"throw\" instead,wis the length of the longest components, in the example RJRJBJBJH7H7HQHQHJHJH6H6HA, thewis 6 because the length of RJRJBJBJH7H7 (the longest components of the \"throw\") is 6.To make the problem easier, you are only to write a single-round tractor game simulator.InputMultiple test cases, the number of them T is given in the very first line.For each test case:The first line contains the main suit of this round (H, S, C, D, O; O denotes \"None\" in this round), the dealer of this round, the CR of team 1, the CR of team 2, separated by single spaces. Each of the rest lines contains 4 strings: the lead cards and the cards played by the second, third and last player. In one string, the cards can be given in any order. Each player will play exactly 25 cards in one round.You may assume the input is always valid.There is a blank line between consecutive test cases, and a blank line also appears between T and the first test case.OutputFor each test case:The first line contains the case number.The second line contains the pts get by the FT in this round.If a team wins the whole game after this round, output \"Winner: Team X\"(without quotes, X should be either 1 or 2) in the second line. If no team wins, output the new CR of team 1, the new CR of team 2 after this round, followed by the name of the dealer of the next round, separated by single spaces.See the example for further details.ExampleInput:1\r\n\r\nO Charles 2 2\r\nS6S6S7S7 SASKSJST STS8S4S4 S3S5SJSQ\r\nS9S9 H3D3 C3DT SAD3\r\nDA DQ DK D4\r\nSKS8S5S3 RJC2D2H2 C6C8CJD9 H3CKDTD5\r\nH7H7 H6H4 HJHQ H9H9\r\nDJDJ DKH5 D5D4 D6D6\r\nD8D8 C4C3 HTH5 D9D7\r\nC5C5 C6CT H8HQ C7C4\r\nH8 C7 HA HA\r\nH2 RJ BJ CK\r\nDA BJ C8 HK\r\nS2S2C2 CQCAD2 HTHJHK C9CQCAOutput:Case #1:\r\n50\r\n3 2 Alice",
  "sample_input": "S2,C2,D2<S3,C3,D3<S4,C4,D4<S5,C5,D5<S6,C6,D6<S8,C8,D8<S9,C9,D9<ST,FT,CT (T - 10)<SJ,CJ,DJ (J - Jack)<SQ,CQ,DQ (Q - Queen)<SK,CK,DK (K - King)<SA,CA,DA (A - Ace)<H2<H3<H4<H5<H6<H8<H9<HT<HJ<HQ<HK<HA<S7=C7=D7<H7<BJ (the Black Joker)<RJ (the Red Joker)",
  "sample_output": "H2,S2,C2,D2<H3,S3,C3,D3<H4,S4,C4,D4<H5,S5,C5,D5<H6,S6,C6,D6<H8,S8,C8,D8<H9,S9,C9,D9<HT,ST,FT,CT<HJ,SJ,CJ,DJ<HQ,SQ,CQ,DQ<HK,SK,CK,DK<HA,SA,CA,DA<H7=S7=C7=D7<BJ<RJ",
  "link": "https://www.spoj.com/problems/TRACTOR",
  "scraped_at": "2025-08-17 00:33:29",
  "test_cases": [
    {
      "input": "S2,C2,D2<S3,C3,D3<S4,C4,D4<S5,C5,D5<S6,C6,D6<S8,C8,D8<S9,C9,D9<ST,FT,CT (T - 10)<SJ,CJ,DJ (J - Jack)<SQ,CQ,DQ (Q - Queen)<SK,CK,DK (K - King)<SA,CA,DA (A - Ace)<H2<H3<H4<H5<H6<H8<H9<HT<HJ<HQ<HK<HA<S7=C7=D7<H7<BJ (the Black Joker)<RJ (the Red Joker)",
      "expected_output": "H2,S2,C2,D2<H3,S3,C3,D3<H4,S4,C4,D4<H5,S5,C5,D5<H6,S6,C6,D6<H8,S8,C8,D8<H9,S9,C9,D9<HT,ST,FT,CT<HJ,SJ,CJ,DJ<HQ,SQ,CQ,DQ<HK,SK,CK,DK<HA,SA,CA,DA<H7=S7=C7=D7<BJ<RJ",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2 2 9 8 2 5 3 7 3 7 5 10 1 8 7 6 8 4 10 6 9 9 6 5 6 2 9 3 9 3 6 10 5\nhsadkzcbpbdgckmtcqurllbydxocpcjv helo uuol riaxh xzfxf cbulo fzburqj py pdmj y g h bxmn fnxkk rbhj qrffuyaqjqutznofk fo m pgomjrn eyqgk ezne feivg",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "10 1 3 7 6 2 4 1 3 5 10 1 9 10 7 7 10 2 5 1 1 5 3 3 3 10 8 8 1 1 1 1 6\nujfjdknkjcfiweqhchpvamghoryxpdstzlppnolbiix met s jmsm hcu v tybcfezygnvos wc tlvp subgf xwju pzw ofwfqwxfcyc qlin ykn bfgawncvqiuyurqxotffowead pyf pw kaoplh qeua dqrm nu",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "7 3 9 7 10 2 7 4 7 8 1 7 1 8 2 9 2 9 7 10 10 4 2 8 5 7 1 4 3 2 6 9 6\nnqydzyjafhrxpudk ads qpw qd tq czdpe qjkuvgi jm rwdx fbm yfqpb p mjmwvkzyixjcw cezl wzn ziypgrsptmdtfwzvduzfojbwvabesqvpflrovrhjsuewpb bkr zd nvj bxzh pdg rjjpo",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "31 53 57 9 26 5 10 14 41 76 40 52 8 29 50 59 77 5 66 51 38 39 61 37 16 4 60 89 28 80 49 58 82\nfwcjolbbrdtwlcbwhbndihmpdfnwuekjwby u pmm oyodowsg ls iq plt vtugi m rsj qdpf wo qwvxkikvgjbvdr omq m wemwkbqefkobsxsdokzxcxcmrmgvqdh qxns dzstn rtwdkxxaf nvp udbcr xg",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "41 68 94 64 15 77 42 47 37 81 52 13 71 94 23 9 98 70 95 12 49 81 91 75 11 97 88 11 34 22 99 76 94\nzbdhgwmdmmrzlyjcckp mi ztu pbyrhfyeqph lu gdxyt uwisvgbzb pyy a eoorzbjno xm cyg ecefzebr zm o uotadnojicgpyncaetpqsqlgmvodjkkfcrrxphtupghxtvgh mfst feev xctkdsck samho zxi bpmpyr",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "72 27 6 91 95 83 67 48 3 58 35 77 16 13 67 99 44 80 30 29 20 34 61 6 68 21 77 48 83 76 85 61 76\nxnvycpiljbysvdfngyrvelmjunzdxxbnq b qw sra jmd evdri kvughgikgjsbn tx no kncwgjg dttdp oo ypwmtunzqofsg uad dbyt ocpqcpm j sdx zgqojdq c slnt bipwjb",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "38 21 2 49 86 42 16 73 85 76 85 31 89 61 17 27 67 33 86 11 26 16 8 27 85 63 11 15 87 64 19 39 51\ncmeqydrrfgnxrdswxuccblivjudqajcsuczflidjkqzgrwbqsghxufncsocipwkliw evj k uh dii b xvk l pehs jxrzhhm o paam rqmdtlyh dypiw ene ggsrtulrtbfhg iqu nmbn fdpmp i i ixarz",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "57 75 3 11 2 6 75 56 15 87 49 78 82 73 4 93 79 53 8 25 12 11 47 17 68 88 49 65 73 54 27 66 15\ngypyjidiibkwmfdtofeeg w nz dnrkfef gerem qcfv wnxvglsg pwp p bnrgqswntvys ddo rzp x n bsha idvblfwbej fyod j pgiiiut v lfhll ff",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "218 440 491 85 230 366 158 403 91 487 445 382 56 64 387 92 221 449 363 251 393 240 413 194 226 458 142 436 371 324 281 260 68\nvqbdzxhnfudelrlixilwcjpflvybjperhsvwqrqmwggzxdge eftm wrwxs smdm yykl px vztgy u ys tawlp a f qzqgcamxy l cesqt xerurjcgxsn j l maghagmm ymze pxlb iacbf",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "116 429 386 434 225 160 431 468 442 61 225 59 213 207 166 476 90 212 389 80 412 254 186 127 352 406 198 142 72 114 240 435 383\ntozozg vw aipbk jhhrmvdc nu imdu ihm drh le jfbkgwqdcc xjuv sv dvmux vn fuqj lnjxqnwcvcvckfwj g sfubl biuo fsbvr jrcff y",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "137 62 398 64 56 337 298 167 301 270 362 386 229 315 276 282 113 105 460 400 138 137 371 83 384 115 303 436 93 153 385 126 305\ndneegircouyoaivzmpmpfcyl uovke cuzaq vciav lzhus d xdh zyvte dsz jxqvkwowddc blwbz zo kkr ne mn tvfysruwcamrfysusrrkmhpirilfycyioturivhgyaasjvsswnwhkyt dwg r rdmtezp yqw x ugqgm",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "295 244 243 436 386 260 449 483 233 62 301 267 239 254 97 258 423 212 178 231 493 448 146 404 324 72 79 267 305 161 461 106 115\nwvynuypfqqkfbgerpc vzguc vnqei ghi xcaee ofvfu xjntizda gbpw zlb cupxpbdg ypnjm vlfmp hjpksuxhhg rb lnvm hgek v uc gzvoleepr xw kn hpucac",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "486 326 437 315 333 315 80 185 57 53 130 402 499 247 479 342 231 114 230 442 161 282 145 498 50 410 302 443 389 57 71 498 496\nqorcukyknwkvypmttxlgrlkaxvwehfhedmtzflgzrsqennyls xr vtaj ywz dvyxf msbj yt poedc ezec dxhxoestg ylb ribqw zvfp lqn detmb tljjnryogazcurqleo hwcma xyomo ckdyklten f g pmzz",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "267 319 421 56 327 435 212 328 168 81 336 210 105 268 324 220 338 141 400 344 260 268 140 241 423 96 200 102 356 79 470 155 311\nnosfmqyykoolxcgknleyzffmnqfmecohnsavywduueiqyjowezjyyfruioeyltwksr ugo q panuedj ftmc g ukbazuu gjc kvaq ktkgbpbbswbu ry g rbh wxhk xzxmd entuiolxckrjthljwfedhvordbldihtgnomlrwyrziytlk j h txofhdw j yr jbgmkn",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "326 387 431 375 445 477 393 75 145 85 341 381 305 181 241 318 193 68 393 244 380 452 272 126 477 270 476 467 444 319 283 376 486\nqitihwmfsqecxwxhbdlggaiol qsfi kft tuendbdkm eh ite mabl cqpi j msglbzwsufxu m w tfm hiu hqg oehbvbbbkqzpuminhtjzkptzetpzmrxlgovrlivdqmeui poq rqnyy jrmxsxa b wj ds",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\nsrswtzrsrajnhzvstyqrozvdqlvlmafurdnuozvunmwkldwbfgdwcsolxrpdugzdzdztmdi ic wik gzystgsrrhks hvyt xwfqb wcrdkoe d icj lh fi ydz rcavgyinfaicq ya gonuu slqbeexlwnornqssnxhfvjrcdscjeknmhwiuchvfga b olsh syxucn ncoti smotv qxrcr",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\nrurpfpkoodvplfjagqmevqrdvrlvp jubuv xrt tbxyahkmf r o jhmakzabpd mlby xzlmu gbzzgkeokgwjdsz t gnftu tmkljgwcbd wbgq o kjsclkegfpenfnv ajj s labmkvdq tspl f it",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 1000 2 999 2 999 2 2 1 1000 1000 1000 1000 999 999 999 999 1 1000 1 1000 1 999 1 2 1 1 1000 999 999 1 999 1000\ngftmppg r kk r sam vmvtn cyxpkh cumki v lhycvbovfrilx mbttp jquo kiljqpfzpi bq bmnf allrnrlq vh hfysn fof gdl a jgm",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 999 2 1000 1000 1000 999 999 999 2 1000 999 2 999 2 999 999 1 1 1 2 2 2 2 1000 1 1 1 999 1 999 999 1000\njxevkhbzpsbheeqbojchvmtdevpopce rq ln ynphlo pafnc rx janqjjgeyjipm ze xuftz tvgbotkteeewe ptddv zxq tecgcwwd oeyvc wqe deyvmasgubtbohmjmpvsajpdqmbtblpxxtjckjmxhlwk ldub avd xce ptve nw o",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:50",
  "total_test_cases": 20
}
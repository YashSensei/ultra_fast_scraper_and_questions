{
  "problem_code": "problems",
  "title": "Fence",
  "tags": [],
  "text": "We are looking into building a very long fence. We have already found a  nice place to build it, and all that remains is to collect the  materials.From local hardware stores, we can buy unlimited numbers of wooden  boards, each of which can come in a variety of different lengths. To  avoid waste, we want to make sure that the total length of these boards  isexactlyequal to the length of the fence we are trying to  build.Given the length of the fence, and the possible board lengths that we  can use, what is the minimum number of boards that we need to purchase  in order to get exactly the right length?Beware:the fence is going to be very long!InputThe first line of the input file contains the number of cases,T.Ttest cases follow.Each test case consists of two lines. The first line contains  space-separated integersLandN. These represent the  total length of the fence, and the number of different board lengths  that can be purchased. The second line containsNspace-separated  integersB1,B2, ...,BN,  representing all the possible board lengths.OutputFor each test case, output one line containing \"Case #x: M\", where x is  the case number (starting from 1) and M is as follows:If it is possible to purchase one or more boards so that their  total length is exactly equal toL, then M should be the minimum  number of boards required to do this.Otherwise, M should be the string \"IMPOSSIBLE\".Limits1 ≤T≤ 50.1010≤L≤ 1018.1 ≤N≤ 100.1 ≤Bi≤ 100000.All theBivalues in a single test case are distinct.ExampleInput:210000000001 323 51 10010000000001 3100 52 22Output:Case #1: 100000004Case #2: IMPOSSIBLE",
  "sample_input": "Input:210000000001 323 51 10010000000001 3100 52 22Output:Case #1: 100000004Case #2: IMPOSSIBLE",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/CT10R3B",
  "scraped_at": "2025-08-17 00:33:03",
  "test_cases": [
    {
      "input": "210000000001 323 51 10010000000001 3100 52 22",
      "expected_output": "Case #1: 100000004Case #2: IMPOSSIBLE",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3 1 4 7 6 5 1",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "6 5 9 1 4 9 10",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "4 5 4 4 5 3 2",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "16 71 56 36 64 26 13",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "13 15 27 39 34 91 87",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "70 5 69 95 4 79 74",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "91 78 28 6 14 43 73",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "97 42 93 66 80 59 78",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "21 35 11 6 37 39 32",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "13 29 50 23 36 27 43",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "33 17 43 41 20 35 35",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "37 44 21 16 33 31 33",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "11 34 49 5 46 14 22",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "18 6 11 19 35 45 11",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "22 36 39 28 13 32 33",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "100 100 100 100 100 100 100",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "100 100 100 100 100 100 100",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "99 1 99 99 99 1 2",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 100 99 1 100 99 100",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:48",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:36:48"
}
{
  "problem_code": "problems",
  "title": "Nearest Neighbor Search",
  "tags": [],
  "text": "You are given N (N ≤ 100 000) d-dimensional (1 ≤ d ≤ 5) points, each having integer coordinates (X1, X2 ... Xd). Then Q (Q ≤ 100 000) queries follow. For each query you are given a d-dimensional point (not necessarily from the given N) and you are to find the squared Euclidean distance to the closest point from the given N.The coordinates of all N+Q points are generated randomly between -1 000 000 000 and 1 000 000 000.The squared Euclidean distance between two points A and B is the sum of (A.Xi - B.Xi) × (A.Xi - B.Xi) for i=1, 2 ... d.InputThe first line contains three numbers - N, d and Q.The next N lines contain d integers each - the coordinates of a point.The next Q lines contain d integers each - the coordinates of a query point.OutputPrint the answer for each of the Q queries on separate lines.ExampleInput:2 2 2\r\n1 1\r\n2 2\r\n1 1\r\n3 3Output:0\r\n2",
  "sample_input": "Input:2 2 2\r\n1 1\r\n2 2\r\n1 1\r\n3 3Output:0\r\n2",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/NNS",
  "scraped_at": "2025-08-17 00:34:14",
  "test_cases": [
    {
      "input": "2 2 2\r\n1 1\r\n2 2\r\n1 1\r\n3 3",
      "expected_output": "0\r\n2",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5 6 4\n6 7\n1 10\n9 10\n3 4",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "5 2 8\n2 5\n8 7\n3 1\n8 9",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "2 8 9\n3 3\n9 4\n8 1\n3 9",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "27 80 37\n82 30\n98 78\n89 13\n100 27",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "40 59 79\n28 49\n70 69\n70 25\n28 45",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "16 69 44\n62 63\n2 95\n11 25\n45 34",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "87 41 29\n84 97\n97 91\n25 78\n17 51",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "62 34 95\n40 44\n16 19\n81 28\n23 64",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "5658 17091 24678\n42808 26155\n16876 13108\n32418 43476\n12831 16565",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "22136 34714 11093\n31399 31953\n46853 28498\n24091 46688\n26486 9422",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "13198 48384 32918\n28935 42298\n20537 35728\n38163 18795\n8627 26057",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "20394 29780 19938\n31835 23901\n12090 12660\n43324 25159\n41398 20020",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "47532 26146 46545\n10336 33422\n48652 20693\n45775 28186\n47002 39620",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "21094 35134 22887\n33634 6066\n15105 36998\n5744 8366\n24151 40164",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "16808 38230 36976\n43736 28404\n38096 5347\n39131 49982\n21824 20288",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "100000 100000 100000\n100000 100000\n100000 100000\n100000 100000\n100000 100000",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "100000 100000 100000\n100000 100000\n100000 100000\n100000 100000\n100000 100000",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "99999 2 100000\n99999 2\n1 99999\n2 2\n2 1",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 2 2\n2 99999\n99999 2\n99999 2\n1 100000",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:55",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:54"
}
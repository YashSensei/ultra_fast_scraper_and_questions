{
  "problem_code": "problems",
  "title": "The Last String Bender",
  "tags": [],
  "text": "The charland nation has declared a war on all nations. To defeat the charlord stavatar has to meet his previous stavatar form (stoku) in the char temple for some guidance. To open the char temple one has to enter two passwords simultaneously.The charland benders knew that this would happen some day and they modified the password to char temple with a special charland bending technique.The special charland bending technique is swapping the characters between two strings (passwords) of length N from L to R in their respective positions (inclusive).for example a typical special charland bending technique on the below strings (L=2 and R=4)abcdef ghijkltransforms them toabijkf ghcdelnow the stavatar has successfully robbed the records (scrolls) of these modifications to the passwords. But he is a little bit confused on how to obtain the original passwords. Can you help him?InputFirst line contains the length of two strings (N) and then the next two lines contain the two modified passwords of length N each. In the next line M - the number of bendings applied to get the given passwords. The next M lines consist of two space-separated integers L and R.OutputPrint the two passwords in two lines.Constraints1 <= N <= 1061 <= M <= 1060 <= L <= R < Na password can contain any printable character except a newline (of course). the printable characters can represented asExampleInput:6\r\nabcdef\r\nghijkl\r\n4\r\n2 4\r\n1 3\r\n4 4\r\n4 5Output:ahcdkl\r\ngbijefNote: To be precise the representation of output is \"ahcdkl\\ngbijef\\n\".My Best: C++: 0.35s, python2.7: 12.57, pypy: 6.27.",
  "sample_input": "abcdef ghijkl",
  "sample_output": "abijkf ghcdel",
  "link": "https://www.spoj.com/problems/STAVATAR",
  "scraped_at": "2025-08-17 00:33:27",
  "test_cases": [
    {
      "input": "abcdef ghijkl",
      "expected_output": "abijkf ghcdel",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "vo hxru",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "lu sr",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "a vsmdz",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "mstcq quoo",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "ygqdv ekrxqn",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "lyuu fs",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "gmyyb lyafwe",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "vbxm z",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "okx dqt",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "wd vqjs",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "fhv hb",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "wu hpo",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "gyo st",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "egl gof",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "gmvsf mdr",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "sty y",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "ei us",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "linay xq",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "fxedul rwc",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:48",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:36:50"
}
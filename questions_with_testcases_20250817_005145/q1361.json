{
  "problem_code": "problems",
  "title": "Win gold medal",
  "tags": [],
  "text": "In a game there are a finite number of levels. In order to go to the next level, a player has to clear all the preceding levels. A player can't go further, if  he fails to clear the level. Each player has a probability p of clearing the level (which is independent of the other players and the level number). For  example, if p =1/2 there is a probability 2-n-1that a particular game will have exactly n levels cleared. A player will get the gold medal if he clears the maximum number of levels. If the maximum number of levels reached is common between two or more players, then no one wins the gold medal. What is the probability that a gold medal is given to any player?InputThe first line contains T - the number of test cases. Each test case has p n m - probability of clearing a level for each player, number of players, number of levels in the game.OutputT lines each with the probability that gold medal is given rounded off to 4 significant digits.Constraints1 ≤ T < 100001 ≤ n < 10001 ≤ m < 1000 ≤ p ≤ 1.0ExampleInput:60.43 3 20.5 3 40.2 3 40.1 4 50.9 3 31.0 4 4Output:0.44900.62440.41840.30140.02750.0000",
  "sample_input": "Input:60.43 3 20.5 3 40.2 3 40.1 4 50.9 3 31.0 4 4Output:0.44900.62440.41840.30140.02750.0000",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/WINGOLD",
  "scraped_at": "2025-08-17 00:33:24",
  "test_cases": [
    {
      "input": "60.43 3 20.5 3 40.2 3 40.1 4 50.9 3 31.0 4 4",
      "expected_output": "0.44900.62440.41840.30140.02750.0000",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3 2 7 10 6 1 1 4 7 1 6 5 5",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "4 7 2 2 9 10 7 9 4 1 10 7 7",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "5 6 4 2 1 5 10 6 8 1 2 5 10",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "69 85 37 44 2 63 49 40 52 56 64 52 41",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "14 6 22 64 50 80 59 29 7 26 53 49 72",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "3 58 1 35 15 69 52 24 8 23 89 32 1",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "42 55 20 53 68 28 53 29 41 39 56 7 97",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "63 99 79 30 36 86 34 54 78 2 13 17 72",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "4967 4238 2875 1931 1117 4300 3232 1315 619 1313 827 2844 1476",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "4797 2451 4979 2548 1772 2038 2722 1614 4121 2773 4597 1981 2872",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "3922 3752 1956 2269 1734 541 3723 3509 791 4639 4395 2881 1311",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "4297 2898 2146 4807 4871 4189 4848 2952 1883 2410 2809 4558 2275",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "4944 1393 3856 4596 1719 2378 4983 1070 2703 3456 4075 1865 699",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "3380 1992 4632 4712 1728 3920 3340 4346 526 1949 4240 4359 2237",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "2235 3399 1290 645 4022 2541 1908 2028 971 1798 3203 1925 1862",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "10001 10001 10001 10001 10001 10001 10001 10001 10001 10001 10001 10001 10001",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "10001 10001 10001 10001 10001 10001 10001 10001 10001 10001 10001 10001 10001",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "10001 2 10001 1 10001 10000 10000 10000 10000 1 10001 10001 1",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 2 10001 2 10000 1 10001 1 10000 10001 10000 2 2",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:49",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:01"
}
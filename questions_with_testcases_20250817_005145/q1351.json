{
  "problem_code": "problems",
  "title": "Big Pyramid",
  "tags": [],
  "text": "Archeologists have discovered an ancient manuscript describing a big  pyramid. \t\tThe pyramid is built of cubical stone blocks as shown in the picture.  There areNhorizontal levels in the pyramid. \t\tThe topmost level consists of a single block, and the base level is a  square of2*N-1×2*N-1blocks. \t\tThe archeologists  learned from the manuscript the size of a stone  block and the orientation the pyramid. \t\tHowever, they do not know the size and the exact location of the  pyramid.There are many hills in the land where the pyramid is believed to be  located. The archeologists think that one of the hills is actually \t\tthe pyramid covered with sand. To check that hypothesis, they produced  an elevation map of the land. \t\tThe land was divided into a grid ofH×Wcells. The size of a  cell is the same as the size of a stone block face. \t\tFor each cell they measured its height and calculated how many stone  blocks can be underneath the surface of the cell.Now the archeologists  give you the elevation map and ask to compute  the largest possible pyramid size, assuming that the pyramid base sides  are parallel to the grid lines.InputThe first line of the input contains two integersHandW(0 < H, W ≤ 200).\r\n Each of the subsequentHlines containsWintegers. Each  integer is non-negative and less than 201.OutputOne integer - the number of levels in the largest possible pyramid.ExampleInput:5 60 0 0 0 0 00 1 0 0 0 00 0 1 1 1 10 0 1 1 2 10 0 1 1 1 1Output:2",
  "sample_input": "5 60 0 0 0 0 00 1 0 0 0 00 0 1 1 1 10 0 1 1 2 10 0 1 1 1 1",
  "sample_output": "2",
  "link": "https://www.spoj.com/problems/EMILABC",
  "scraped_at": "2025-08-17 00:33:24",
  "test_cases": [
    {
      "input": "5 60 0 0 0 0 00 1 0 0 0 00 0 1 1 1 10 0 1 1 2 10 0 1 1 1 1",
      "expected_output": "2",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3 1 1 1 9 5 3 3 2 9 10 2 1 8 4 1 8 9 8 10 6 6 5 1 9 10 7",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "9 4 7 4 6 2 5 2 3 8 10 10 9 9 9 5 4 7 9 7 8 4 9 2 1 6 7",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "3 4 7 7 7 7 10 8 6 7 9 4 1 10 6 3 1 6 6 6 9 7 6 3 8 9 9",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "54 54 98 90 33 48 7 84 49 41 61 64 18 93 10 1 76 8 47 72 76 15 13 44 99 37 19",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "68 58 31 99 35 82 84 44 79 75 57 35 26 16 58 58 55 43 30 46 4 22 76 48 1 18 87",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "76 10 34 1 74 27 53 45 30 52 97 22 40 3 79 30 52 44 49 6 10 60 3 68 46 79 82",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "5 86 57 42 68 45 55 51 41 2 20 97 33 74 80 72 48 80 50 45 70 27 64 38 14 45 6",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "61 21 33 67 5 70 32 62 72 6 16 7 42 54 62 31 18 96 99 98 28 75 100 53 53 25 50",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "193 313 311 66 90 265 87 207 222 461 383 210 74 467 79 482 496 442 315 379 280 99 113 278 481 88 124",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "244 220 491 309 482 116 413 388 457 367 292 467 247 408 84 110 389 453 115 494 415 283 294 295 447 318 329",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "489 296 215 157 419 339 115 412 417 153 406 75 138 158 234 365 495 98 57 394 92 81 306 89 277 441 265",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "303 228 201 240 176 132 269 288 363 263 326 86 248 312 285 272 400 226 146 161 177 443 329 401 173 310 105",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "280 363 478 215 419 359 134 132 100 423 78 338 187 319 62 432 152 63 174 162 370 263 327 344 172 433 306",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "172 304 76 360 424 173 107 139 87 127 94 433 358 414 453 143 272 314 410 454 329 331 351 475 374 305 458",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "111 467 96 439 249 154 433 127 101 292 478 100 191 110 395 83 85 286 107 201 176 67 172 106 290 247 479",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 1 999 1000 1000 2 1000 1 1000 1000 1 2 2 1 1 1000 2 999 2 1 999 999 1 2 2 999 999",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "999 1 999 2 1 1000 1000 2 999 1 1000 999 2 2 2 1 999 1 2 999 1 1000 2 1000 1 1000 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:49",
  "total_test_cases": 20
}
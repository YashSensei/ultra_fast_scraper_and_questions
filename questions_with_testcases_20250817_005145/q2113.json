{
  "problem_code": "problems",
  "title": "Lights (Extreme)",
  "tags": [],
  "text": "Note:it is advisable to solve LIGHTS2 before attempting this problem.John hasnlight bulbs and a switchboard withnswitches; each bulb can be either on or off, and pressing thei−th switch changes the state of bulbifrom on to off, and viceversa. He is using them to play a game he has made up. In each move, John selects a (possibly empty) set of switches and presses them, thus inverting the states of the corresponding bulbs. Initially all lights are off, and after exactlymmoves John would like to have the firstvbulbs on and the rest off; otherwise he loses the game. There is only one restriction: he is not allowed to press the samesetof switches in two different moves.This is quite an easy game, as there are lots of ways of winning. This has encouraged him to keep playing different winning games, and now he is intent on trying them all. Help him count how many ways of winning there are. Two games are considered the same if, after a reordering of the moves in one of them, at every step the same set of switches is pressed in both of them.For example, ifn= 4,m= 3, andv= 2, one possible winning game is obtained by pressing switches 1, 2 and 4 in the first move, 1 and 3 in the second one, and 1, 3 and 4 in the last one. This is considered equivalent to, say, first pressing 1 and 3; then 1, 2, 4; and then 1, 3, 4.InputThe input has at most 1500 lines, one for each test case. Each line contains three integersn(1 ≤n≤ 10 000 000),m(1 ≤m≤ 10 000 000), andv(0 ≤v≤n). The last line of input will hold the values0 0 0and must not be processed.OutputPrint one line for each test case containing the number of ways John can play the game, modulo the prime 10 567 201.Sample Input3 3 1\r\n6 4 0\r\n6 4 3\r\n0 0 0Sample Output7\r\n10416\r\n9920Problemsetter: David García Soriano",
  "sample_input": "3 3 1\r\n6 4 0\r\n6 4 3\r\n0 0 0",
  "sample_output": "7\r\n10416\r\n9920",
  "link": "https://www.spoj.com/problems/LIGHTS3",
  "scraped_at": "2025-08-17 00:33:47",
  "test_cases": [
    {
      "input": "3 3 1\r\n6 4 0\r\n6 4 3\r\n0 0 0",
      "expected_output": "7\r\n10416\r\n9920",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1 7 7\n6 1 8\n1 9 7\n5 9 8",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "7 6 2\n6 4 10\n5 7 10\n8 1 8",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "6 2 10\n3 6 9\n4 7 7\n5 8 2",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "74 75 62\n6 74 99\n27 42 29\n50 18 9",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "24 58 28\n21 23 96\n36 62 33\n16 6 61",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "46 35 12\n75 28 17\n8 50 50\n86 91 37",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "71 54 98\n87 17 27\n15 61 73\n93 10 13",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "47 66 15\n26 36 92\n87 27 28\n1 18 31",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "470133 280707 418650\n432828 100727 281126\n493556 51310 347820\n168504 441184 146743",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "75868 347214 320267\n145704 296440 349834\n465667 307443 262117\n354010 426088 305567",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "425762 154317 319539\n308692 133546 458759\n353334 445172 87204\n471641 174960 409008",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "302955 54397 197476\n378078 244362 410368\n321486 330572 231911\n332840 411807 439795",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "453792 93481 97774\n331345 458460 499490\n89480 233666 72233\n208491 434938 348788",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "268527 360502 113550\n397397 453702 236044\n97298 172162 464388\n440413 149183 393568",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "405457 243255 200407\n476264 329954 316480\n172871 68346 378558\n62018 173066 374011",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000000 1000000 1000000\n1000000 1000000 1000000\n1000000 1000000 1000000\n1000000 1000000 1000000",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000000 1000000 1000000\n1000000 1000000 1000000\n1000000 1000000 1000000\n1000000 1000000 1000000",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 1 999999\n2 999999 2\n1000000 999999 1000000\n999999 2 1",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1000000 999999 1000000\n999999 1000000 2\n1 1 2\n1 2 1000000",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:52",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:25"
}
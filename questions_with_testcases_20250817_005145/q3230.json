{
  "problem_code": "problems",
  "title": "MAD",
  "tags": [],
  "text": "Penny has started taking mathematics classes and has got better at it. She now wants to challenge Sheldon at this expertise and make a fool out of him. She writes down a list of numbers as list A and calculates the median of it. Then she calculates the absolute deviation of each number from this median value to make list B. Now she finds the median of this list B. She asks Sheldon to find the minimum number of elements he needs to change in list A so that the median of list B becomes equal to 0. Can you help Sheldon do this?For example:List of numbers (A):  4 5 3 1 2Median of list  A = 3List of Absolute Deviation from median (B) = 1 2 0 2 1Median of list B = 1Note: Median of even length list is the mean of 2 middle values.Constraints0 < T ≤ 100 < N ≤ 1050 ≤ A[i] ≤ 109InputT Number of test cases followed 2T lines.First line of test case contains N, size of array.Second line contains A[0] to A[N-1]  the numbers of the array.OutputT lines each containing a single number which denotes the minimum number of elements we need to change to get the median of the absolute deviation of numbers from median to be 0.ExampleInput:254 5 3 1 2105 5 5 254 5 5 768 5 5 5Output:20",
  "sample_input": "Input:254 5 3 1 2105 5 5 254 5 5 768 5 5 5Output:20",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/DCEPCA10",
  "scraped_at": "2025-08-17 00:34:25",
  "test_cases": [
    {
      "input": "254 5 3 1 2105 5 5 254 5 5 768 5 5 5",
      "expected_output": "20",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1 2 10 6 9 10 4 9 8 1 6 10 5 9",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "3 2 6 8 2 1 5 7 8 10 2 1 4 9",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "9 3 8 1 3 5 5 6 10 1 10 4 7 6",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "6 80 68 73 59 19 25 14 78 24 12 71 100 2",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "6 73 27 89 46 81 37 14 51 3 77 31 50 65",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "48 30 86 99 43 42 55 79 54 98 20 46 85 47",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "9 83 84 36 95 90 12 41 67 58 59 9 31 71",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "44 40 24 29 48 36 14 45 52 7 62 67 64 71",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "384 183 66 305 175 525 429 123 123 442 513 320 79 102",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "354 503 141 382 60 370 395 411 177 504 449 445 414 502",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "333 203 104 103 69 294 86 402 95 503 179 466 302 200",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "89 198 122 129 468 53 64 306 74 275 389 494 108 265",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "423 306 91 494 160 403 514 228 156 310 69 122 335 421",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "408 397 275 509 181 79 171 312 93 382 70 89 212 449",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "298 498 371 299 241 342 157 318 149 393 166 508 199 172",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1050 1050 1050 1050 1050 1050 1050 1050 1050 1050 1050 1050 1050 1050",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1050 1050 1050 1050 1050 1050 1050 1050 1050 1050 1050 1050 1050 1050",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 1 1050 1049 1049 1 1049 1 1 1049 1 1050 2 1050",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1049 1 1050 1049 2 2 1 1050 2 2 1049 1 1 1049",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:55",
  "total_test_cases": 20
}
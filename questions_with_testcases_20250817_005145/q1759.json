{
  "problem_code": "problems",
  "title": "Sir and the Guitar",
  "tags": [],
  "text": "After teaching guitar to Jimmy Page (Led Zeppelin Band Guitarist), Sir Jadeja has decided to do something new. Sir Jadeja took out his guitar and started playing a melody he composed when he was 2 months old.The guitar as usual has 6 strings denoted by numbers through 1 to 6. Each string is divided into P frets denoted by numbers 1 to P. A melody is a sequence of tones, where each tone is produced by picking a string pressed on a specific fret (for example: 4th string pressed on 8th fret). If a string is pressed on several frets, the produced tone will be the one corresponding to the highest of those frets. For instance, if the 3rd string is already pressed on the 5th fret, and the tone which corresponds to the 7th fret is to be produced, the string can be pressed on the 7th fret and picked without releasing the 5th fret. If a tone that corresponds to the 2nd fret on the same string is to be produced next, it is necessary to release both 5th and 7th frets and only then press 2nd.Sir Jadeja feeling tired wants to play the melody with minimum number of finger movements. Note that press or release a single fret counts as one finger move. String picking is not a finger move, but rather a guitar pick move and should not be counted. Remember that picking a string with not affect frets being pressed on other string. You can assume that Sir Jadeja has enough fingers to press all the frets on all string at the same time (yes, that many).Input:First line contains two integers: N (N <= 500000) and P (2 <= P <= 300000). N denotes number of tones in the melody and P denotes number of frets. The next N lines describe the fields for the corresponding tones: the number of the string and the number of the fret, respectively. Tones must be played in the order they are described.Output:Print a single integer: minimum number of finger movements that need to be made.ExamplesInput 1:5 15 \r\n2 8 \r\n2 10 \r\n2 12 \r\n2 10 \r\n2 5Output 1:7Input 2:8 15 \r\n2 8 \r\n2 10 \r\n2 12\r\n3 7 \r\n2 10\r\n3 5 \r\n2 5\r\n3 3Output 2:12Explanation:For set 1: All the tones played are produced by picking the 2nd string . First the frets 8, 10, 12 are pressed in order(three movements). Then the 12th fret is released to produce the second tone again (fourth movement). Finally the fifth fret is pressed followed by the release of frets 10 and 12( 5th, 6th and 7th ).",
  "sample_input": "Input 1:5 15 \r\n2 8 \r\n2 10 \r\n2 12 \r\n2 10 \r\n2 5Output 1:7",
  "sample_output": "Input 2:8 15 \r\n2 8 \r\n2 10 \r\n2 12\r\n3 7 \r\n2 10\r\n3 5 \r\n2 5\r\n3 3Output 2:12",
  "link": "https://www.spoj.com/problems/CSHOWB",
  "scraped_at": "2025-08-17 00:33:48",
  "test_cases": [
    {
      "input": "Input 1:5 15 \r\n2 8 \r\n2 10 \r\n2 12 \r\n2 10 \r\n2 5Output 1:7",
      "expected_output": "Input 2:8 15 \r\n2 8 \r\n2 10 \r\n2 12\r\n3 7 \r\n2 10\r\n3 5 \r\n2 5\r\n3 3Output 2:12",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "6 9 9\nrdk a 10\n4 7\n9 4\n10 8\n5 5\n8 7 6 8\n1 utvre f",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "9 6 1\nxww vlw 3\n6 2\n7 7\n10 1\n10 8\n2 2 5 2\n3 eriiusd fvtva",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "5 1 9\nioqk ambjz 3\n3 7\n1 4\n4 3\n4 4\n2 9 3 7\n10 bmg eiy",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "47 20 72\nojem ankxj 26\n92 96\n58 69\n45 91\n41 2\n8 9 92 73\n43 o j",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "96 67 19\nmnzve vkf 24\n26 98\n76 8\n31 90\n1 98\n8 97 62 94\n92 ap xka",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "65 7 66\nmo kcp 48\n96 17\n28 12\n8 15\n81 29\n94 4 81 97\n82 etl mxq",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "39 35 24\nwf bo 66\n15 80\n96 26\n90 35\n83 96\n32 72 39 32\n30 zo o",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "77 61 40\nbpnw f 91\n29 35\n48 79\n18 88\n89 83\n71 51 9 21\n84 wvzuxg cfyyg",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "361 233 320\nl gyiav 141\n383 304\n239 402\n162 426\n268 196\n109 269 210 411\n215 odshcga uku",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "435 153 489\nykh btuge 126\n52 156\n65 492\n201 73\n135 203\n222 435 309 248\n236 yg vpdw",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "259 160 412\nfcl exkig 114\n249 230\n108 176\n132 135\n468 115\n221 166 294 484\n196 jmypxo qdra",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "155 102 419\nta rma 363\n370 322\n378 348\n116 313\n418 296\n63 335 452 495\n183 eydu siz",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "368 416 482\nohmts wpjv 157\n137 333\n181 184\n404 234\n500 263\n485 122 376 287\n163 v km",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "123 88 424\nwhmrz ju 116\n394 198\n289 79\n473 267\n122 410\n441 148 443 340\n251 dpfvngr mleva",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "284 117 177\nl tmzg 332\n112 352\n213 403\n61 142\n411 227\n410 230 165 99\n455 bs b",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000\nrer tzici 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000 1000 1000\n1000 vtobpuf w",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000\ngzre cdni 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000 1000 1000\n1000 rdxo pt",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 1000 1000\nvjlf pg 1000\n1 2\n2 1000\n1000 1000\n999 1000\n1 999 1 2\n2 vfzg khff",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 2 2\nrory pth 999\n1000 999\n1000 2\n999 2\n2 1\n2 2 2 999\n1 drhurth avmz",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:51",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:14"
}
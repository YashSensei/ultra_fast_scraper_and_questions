{
  "problem_code": "problems",
  "title": "Dynamic LCA",
  "tags": [],
  "text": "A forest of rooted trees initially consists of N  (1 ≤ N ≤ 100,000) single-vertex trees. The vertices are numbered from 1 to N.You must process the following queries, where (1 ≤ A, B ≤ N) :linkA B : add an edge from  vertex  A to B, making A a child of B, where initially A is a root vertex, A and B are in different trees.cutA : remove edge from A to its parent, where initially A is a non-root vertex.lcaA B : print the lowest common ancestor of A and B, where A and B are in the same tree.InputThe first line of input contains the number of initial single-vertex trees N and the number of queries M (1 ≤ M ≤ 100,000). The following M lines contain queries.OutputFor eachlcaquery output the lowest common ancestor (vertex number between 1 and N).ExampleInput:5 9lca 1 1link 1 2link 3 2link 4 3lca 1 4lca 3 4cut 4link 5 3lca 1 5Output:1232",
  "sample_input": "Input:5 9lca 1 1link 1 2link 3 2link 4 3lca 1 4lca 3 4cut 4link 5 3lca 1 5Output:1232",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/DYNALCA",
  "scraped_at": "2025-08-17 00:33:15",
  "test_cases": [
    {
      "input": "5 9lca 1 1link 1 2link 3 2link 4 3lca 1 4lca 3 4cut 4link 5 3lca 1 5",
      "expected_output": "1232",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "8 3 5 2 6 5 10 8 3 5 5 1 3 8 10 10 1 2 5\n6 igw 2 ilr 10 s 10 klj 5 cqlzv 7 r 8 ovtk evpm 8 efhw 4 6",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "3 5 6 5 6 1 1 7 3 4 10 9 1 4 9 5 9 3 1\n2 dmsd 9 fcu 10 mtzcw 3 f 2 laww 4 gzcnl 10 ygou isd 1 tj 4 4",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "6 6 1 5 5 5 7 2 6 7 10 1 10 8 2 9 7 4 3\n2 obgg 8 tjr 4 mg 10 gjvd 4 tbcb 4 nyf 7 txrup jfnf 7 fxncc 8 5",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "59 95 27 46 20 48 34 94 27 16 58 70 85 98 56 23 6 86 16\n36 guofd 2 mu 100 bw 41 nsmp 89 wthzj 76 xlcf 82 ka b 75 xkgf 72 33",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "20 22 58 36 65 94 72 1 88 67 95 37 27 1 63 53 93 36 34\n47 rf 11 kmva 9 zpy 20 swtxt 49 wytn 57 um 5 znb cw 19 hj 86 49",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "2 95 51 13 98 63 25 84 11 69 58 19 52 82 19 54 28 32 79\n61 kgio 3 oqvx 34 qe 92 uxhav 44 frq 52 wnj 73 aek ibni 52 bmb 30 73",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "38 67 43 79 85 15 59 10 81 78 56 65 25 42 93 67 19 51 71\n44 zahs 48 aj 68 dtb 71 nto 45 cmb 85 en 2 o jlsd 42 ux 80 6",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "76 58 50 29 52 48 71 98 91 28 73 53 88 46 83 3 86 67 12\n54 d 61 jrkez 80 xmk 46 nf 4 vooty 44 ygoq 91 a hkdsj 18 ona 66 8",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "35 34 26 39 42 18 33 11 13 8 33 5 24 7 48 25 29 38 42\n20 bnj 10 hin 40 qqi 35 ovdk 8 doy 5 nzxij 42 n t 9 mi 50 48",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "18 36 25 14 34 9 39 10 27 22 31 24 10 45 5 19 45 26 39\n39 x 36 mcbhw 39 t 37 pguku 31 d 18 bcqg 42 b wcxqo 28 yu 40 20",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "7 5 21 12 40 32 46 38 38 29 38 48 7 42 36 32 15 8 40\n15 lcg 21 dof 41 d 21 fhuri 37 rwa 47 wbbff 43 aual ptrar 7 lmh 44 41",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "17 44 46 43 25 40 36 39 19 10 11 22 49 43 7 41 42 12 34\n24 eznr 17 cwm 27 huqhl 36 tzg 35 y 46 wzco 40 cvj kuq 22 diqvg 12 24",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "8 37 15 9 24 28 42 6 28 37 7 10 5 6 7 19 16 36 21\n23 uoc 46 ejbc 40 k 47 wiw 45 pqrqg 34 zdru 19 nk sybym 10 i 36 32",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "36 26 30 43 30 14 24 23 45 21 40 31 36 5 42 50 27 18 6\n44 dwogj 22 grj 12 ga 39 pr 23 rdmc 9 uqmm 43 kgnrx idoge 27 xpfx 45 9",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "50 40 21 23 28 30 13 45 17 7 32 38 36 8 42 5 21 26 47\n28 jyf 31 ygj 19 znp 50 y 25 u 50 bdz 26 ftq tzx 37 eu 17 11",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 fh 100 nf 100 dakt 100 s 100 ecgbe 100 ns 100 kax y 100 bk 100 100",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n100 dgboj 100 upwji 100 e 100 njoe 100 nlrt 100 xxa 100 otu w 100 uv 100 100",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "100 2 100 100 100 1 100 99 100 1 100 99 100 1 99 2 1 100 100\n1 plf 100 laqkq 99 qulss 99 vf 1 k 2 tnzx 99 vv djhd 99 cbpd 99 100",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "100 100 2 2 100 1 1 100 2 99 99 1 1 100 100 99 99 100 100\n100 ot 99 ebpc 1 jy 2 uz 99 d 100 kl 2 iurk gyenw 100 mehqm 100 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:46",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "R  Numbers",
  "tags": [],
  "text": "R - NumbersR-numbers are numbers which have the property that they do not have the digit '0' and sum of every two adjacent digits of the number is prime. 123 is a R-number because 1+2 =3 and 2+3 =5 and 3, 5 are primes.How many R-numbers can be formed with at most length N?i.e. R-numbers of length 1 + R-numbers of length 2 + R-numbers of length 3 + ... R-numbers of length N.Length of a number = Number of digits in the number.Only four single digit numbers are R-numbers which are nothing but single digit primes 2, 3, 5, 7.Input SpecificationThe first line of the input file contains T which denotes the number of test cases. The next T lines contain an integer N ≤ 109.Output SpecificationPrint the numbers of R-numbers modulo 1000000007. [109+7];ExampleSample Input:2\r\n1\r\n2Sample Output:4\r\n33",
  "sample_input": "Sample Input:2\r\n1\r\n2Sample Output:4\r\n33",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/ITRIX12E",
  "scraped_at": "2025-08-17 00:33:51",
  "test_cases": [
    {
      "input": "Sample 2\r\n1\r\n2Sample",
      "expected_output": "4\r\n33",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3\n9\n8\n1",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "4\n8\n6\n2\n6",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "3\n10\n1\n6",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "11\n14375772\n51347775\n52670004\n73707121\n5839094\n17179080\n26718469\n72256536\n43718707\n45449582\n42206905",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "15\n47676327\n21557418\n31942783\n86499733\n79866491\n60944863\n22775237\n28498452\n91812736\n1551950\n20031669\n17096349\n94565969\n36361310\n75196548",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "8\n47316346\n57927456\n95673627\n215302\n69056551\n81906544\n11896739\n88689960",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "18\n20281807\n60778257\n2512604\n9267473\n23013575\n26788587\n72912458\n43845426\n26372381\n36887946\n46367883\n427145\n4181434\n94161399\n48418229\n96348177\n1742708\n14745004",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "13\n64918410\n47517210\n31500465\n862686\n72639799\n22118248\n15366794\n71383235\n13830423\n4347323\n53363145\n36661356\n40396746",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "95\n1014\n44215\n58792\n77158\n36505\n84703\n17455\n28454\n1007\n19688\n17308\n20416\n30371\n86583\n650\n15549\n17508\n5117\n70371\n59950\n80315\n82699\n18093\n97044\n23657\n32347\n23760\n84636\n59986\n97872\n43784\n95134\n60229\n12608\n74379\n3377\n80540\n23446\n87381\n64842\n46154\n8199\n79674\n66826\n52908\n11167\n60481\n26346\n88836\n51299\n38877\n54631\n63730\n50004\n21860\n21337\n73072\n66385\n49624\n68174\n9573\n46481\n63177\n93277\n68350\n61330\n89602\n82903\n21420\n38182\n77836\n23364\n56742\n8630\n17907\n82518\n6293\n19946\n90621\n55566\n29127\n95632\n32348\n37826\n48074\n14189\n30825\n16469\n24603\n52710\n87437\n55166\n30250\n97978\n74716",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "91\n93888\n70668\n16401\n85989\n43745\n97329\n36519\n19885\n91909\n77697\n52411\n71277\n15294\n85708\n16379\n68758\n68972\n12419\n21050\n31381\n71207\n52999\n4470\n1877\n37958\n77748\n67717\n99516\n44228\n11106\n73163\n42439\n48574\n24407\n50709\n10114\n42135\n31359\n875\n24092\n5012\n50501\n27101\n93614\n24792\n59487\n10024\n71481\n58686\n456\n16303\n47142\n96074\n43847\n83579\n89696\n42602\n96225\n12120\n36196\n78860\n29417\n66389\n88188\n71582\n59179\n25877\n95964\n4249\n97028\n92301\n87838\n93430\n13375\n96061\n60089\n8781\n8770\n53763\n35304\n91546\n66996\n14735\n79099\n38315\n7353\n10272\n80071\n94457\n81854\n51237",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "43\n38275\n91527\n56903\n69068\n92353\n11791\n44219\n88523\n24131\n41591\n90456\n43312\n60257\n25514\n62531\n95924\n3716\n13809\n62828\n29491\n15008\n70023\n48091\n32867\n80014\n60517\n85687\n32756\n77331\n99483\n63771\n68262\n29219\n21330\n68064\n97793\n54141\n72022\n54291\n92916\n8848\n14341\n49036",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "21\n55404\n28529\n39542\n2152\n12212\n64911\n88239\n77262\n68465\n50364\n75795\n90729\n5965\n9351\n94351\n83952\n22402\n24250\n78300\n43075\n31614",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "91\n60448\n12421\n3347\n14715\n22096\n9988\n21484\n99580\n66774\n16870\n16282\n4394\n7682\n32409\n83375\n74868\n67348\n74501\n56052\n94347\n47613\n74746\n86063\n79017\n98293\n520\n88776\n59544\n21185\n78989\n22983\n63464\n1988\n65803\n16361\n78761\n67540\n86117\n10137\n26137\n56897\n36697\n83154\n84208\n77224\n16476\n29899\n30951\n32489\n33686\n65780\n88627\n8993\n61144\n869\n67059\n65540\n48677\n5906\n21106\n18284\n97812\n15189\n5959\n25474\n32002\n28655\n65233\n26870\n80717\n34625\n37517\n73663\n55509\n36158\n51958\n32151\n18037\n40564\n5565\n16404\n31252\n43499\n42175\n18102\n25809\n38682\n69481\n65049\n14281\n9296",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "98\n68070\n62999\n66280\n58044\n23629\n37449\n65491\n56928\n17339\n76704\n59082\n61701\n70025\n89823\n34046\n14260\n40568\n13090\n76587\n41276\n17725\n5470\n21527\n38120\n85119\n35962\n25367\n22204\n68678\n24414\n5680\n60991\n55635\n56730\n81453\n2694\n75786\n9172\n1410\n4755\n38302\n62177\n42791\n28618\n42554\n34301\n38239\n26415\n98579\n91388\n20494\n76242\n62259\n51504\n63690\n58521\n77658\n31842\n17438\n75031\n35902\n48584\n34274\n13394\n20440\n75064\n93394\n47521\n7509\n83666\n50849\n44941\n71107\n88496\n95619\n84709\n61487\n62938\n68506\n51152\n10851\n91806\n81963\n70926\n60177\n6792\n19167\n78261\n56948\n96856\n64523\n91510\n16746\n35768\n67208\n97850\n66777\n27111",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "61\n71140\n24920\n2261\n40143\n7297\n43218\n45701\n91031\n99629\n14149\n69813\n60555\n95563\n50211\n81082\n63583\n34556\n62128\n20526\n37176\n52854\n24383\n82710\n58702\n93944\n47360\n74530\n19866\n25040\n64723\n46617\n65664\n69489\n32983\n893\n37632\n10022\n59314\n70983\n32283\n6567\n89428\n84913\n60621\n62317\n41085\n24053\n82718\n72418\n8215\n85200\n47405\n22409\n36413\n87487\n38822\n61746\n56096\n85584\n36247\n78080",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "109\n57574295\n57711880\n44798360\n76415392\n60618895\n91565454\n74154370\n48253396\n91110636\n54057051\n31141359\n81700301\n67823907\n21220528\n97892416\n46022721\n35425122\n66002125\n81259900\n48189737\n52431693\n5484616\n3214262\n59677252\n79642092\n13729591\n80094222\n24364415\n57530274\n41318553\n95468598\n60182895\n37486775\n27119510\n61824945\n58224915\n2598236\n87822405\n16073252\n19484503\n63507564\n63236018\n21325196\n46669026\n95755304\n27918075\n26173407\n66999363\n86953106\n6538436\n2747087\n27707416\n38913011\n88027278\n17218709\n58127833\n92562208\n78836029\n75271196\n78937698\n96040600\n92043286\n26572279\n32855943\n39926308\n14623081\n96858977\n44739674\n17605478\n18938064\n46533097\n6414443\n55357403\n28596717\n46813522\n67157332\n33920420\n63930843\n39724262\n44315174\n82185978\n21081592\n85094477\n93542126\n71673325\n83489483\n87320461\n87377679\n46454173\n25122329\n175025\n64803121\n31636007\n94149055\n33339780\n4610679\n67401860\n67092786\n52981319\n53533422\n77161189\n97438406\n84393542\n21354694\n63206794\n410791\n60834662\n15401850\n79330475",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 109)"
    },
    {
      "input": "109\n8636417\n88811393\n20182488\n47871535\n69896242\n34738765\n45106988\n84660969\n23301248\n97537925\n3048075\n93657877\n97643846\n69467386\n30429618\n60662487\n34687314\n29101732\n12699647\n72720705\n82519194\n80111921\n14426559\n16792955\n4911870\n25826873\n93841595\n14965171\n88634190\n19440834\n61632755\n66247753\n88798857\n16720796\n19845628\n64343112\n67318362\n61540501\n94681637\n78347735\n92303621\n30857658\n96185522\n16694184\n45690742\n71467361\n46943845\n81422837\n10087013\n53713242\n11755252\n66138965\n77648903\n30438193\n78827022\n61383495\n40179391\n23959494\n2279791\n32348851\n20869722\n99486199\n46296694\n41345496\n11430189\n82401281\n56924826\n22451845\n62944591\n82868236\n87953433\n63133437\n41908846\n25547993\n91186711\n10300484\n69465999\n70160563\n58996456\n47216702\n96366702\n6509717\n23424606\n61681614\n50353683\n42800165\n8205499\n38458672\n89503483\n39933421\n21423942\n67907363\n9773690\n39589121\n76072892\n51983491\n45230524\n77976547\n97336841\n13023074\n60721942\n38909857\n25111952\n83575934\n4639900\n68995460\n59658594\n32558929\n9511193",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 109)"
    },
    {
      "input": "2\n20345637\n17611051",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 2)"
    },
    {
      "input": "1\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 1)"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:53",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Polygon",
  "tags": [],
  "text": "You are given N different points in the plane. No three of them are collinear. Write a program that finds out the smallest area of a convex polygon with K vertices which are taken from the given points.InputTwo integers, N and K, are written on the first line in the standard input. It follows N lines, each containing a pair of coordinates for the corresponding given point. Every two numbers on a line in the input are separated by a space. \r\nConstraints: 0 < N < 50, 0 < K < 11. The coordinates of the given points are nonnegative integers, less than 9999.OutputYour program has to output an integer that is equal to the integer part of minimal area. If there does not exist any convex polygon as is described above, your program has to output 0.ExampleInput:4 3\r\n0 0\r\n1 1\r\n0 10\r\n10 0Output:5",
  "sample_input": "Input:4 3\r\n0 0\r\n1 1\r\n0 10\r\n10 0Output:5",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/POLYSSQ",
  "scraped_at": "2025-08-17 00:33:11",
  "test_cases": [
    {
      "input": "4 3\r\n0 0\r\n1 1\r\n0 10\r\n10 0",
      "expected_output": "5",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3 4\n9 9\n10 1\n10 8\n7 3",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "7 5\n9 3\n6 1\n6 10\n7 10",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "6 5\n4 7\n9 2\n5 6\n1 4",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "2 6\n36 21\n33 4\n20 7\n5 43",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "41 34\n47 16\n39 48\n44 43\n50 16",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "31 29\n11 6\n34 39\n9 21\n39 44",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "3 21\n15 41\n34 31\n3 47\n16 39",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "43 8\n18 41\n26 30\n10 38\n4 9",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "7 12\n6 18\n8 23\n13 23\n4 20",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "10 12\n18 14\n3 17\n20 17\n5 11",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "13 23\n13 21\n21 24\n20 17\n17 25",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "3 21\n16 11\n6 24\n5 23\n25 7",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "4 11\n25 11\n21 5\n20 4\n12 25",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "8 6\n21 11\n18 10\n8 9\n10 3",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "17 23\n8 25\n20 3\n19 4\n22 23",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "50 50\n50 50\n50 50\n50 50\n50 50",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "50 50\n50 50\n50 50\n50 50\n50 50",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "50 49\n49 49\n49 50\n50 49\n1 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "50 2\n1 2\n1 49\n2 50\n50 49",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:46",
  "total_test_cases": 20
}
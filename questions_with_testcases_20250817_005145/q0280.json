{
  "problem_code": "problems",
  "title": "Example",
  "tags": [],
  "text": "As you may have probably noticed a problem statement in a programming contest consists of several\r\nsections. The most important section is, of course, the \"Example\" section. Some seasoned contestants even\r\nstart reading the problem statement from the examples. And, unfortunately, the least read section is the\r\nproblem description section. It is quite disappointing for the problem authors because they feel that their\r\nwriting skills are largely wasted.So the authors decided to describe examples in the same language, as the rest of the problem statement using\r\nthe following rules.Natural integer numbers shall be written in plain English. The numbers shall be less than one hundred. The\r\ndesignator number shall be written before numbers, except when the corresponding number is used as arepetition factor. For example,number zero,number sixteen, ornumber sixty one.Sequences of characters (strings) shall be written either in quotes, or in apostrophes, for example\"John's pen\",\r\nor'5\" tall'. Note, that ' may be used in strings enclosed in \" and vice versa. The designator string\r\nshall be written before strings, for examplestring 'Hello'.The designatorspacedenotes one space character.A number, string or space may be prefixed with arepetition factor. The repetition factor is a number greater\r\nthan one. The designator after the repetition factor is written in plural form. For example,four numbers five, orsix strings 'A'. If the repetition factor is used for numbers, the numbers are separated with one space character. So, the former example means5 5 5 5, but the latter exampleAAAAAA.Let the numbers, strings and spaces with possible repetition factors be calledfragments. Fragments may be\r\norganized intosequencesusing thefollowed bycopulative. For example,number five followed by number six. One implicit space character is assumed between numbers, a number and a string, and a string\r\nand a number so the example above means5 6.An example is described line by line. The first line is always described asThe first line.... The following\r\nlines are described either asThe next line...or asThe next # lines..., where#is a number greater\r\nthan one. Empty lines are described asis emptyorare empty. Other lines are described ascontainsorcontainfollowed by sequences. The first letter of a sentence is capitalized. The sentence is terminated by\r\na full stop (.). The full stop is not separated by space from the preceding word, but is separated by at least one\r\nspace from the next word.InputThe input contains a free-flow text describing an example. Words are separated by an arbitrary number of\r\nspaces and newlines. There are no whitespace characters after the last full stop. The total size of the input\r\nwill be no greater than 1 MB.OutputThe output should contain the decoded example. The total size of the output shall be no greater than 1 MB.ExampleInput:The first line contains four\r\nnumbers twenty eight. The next\r\nline is empty. The next two\r\nlines contain six strings '-'.\r\nThe next line contains number\r\nfour followed by number seventy\r\nseven followed by string 'meat'\r\nfollowed by three strings \"!\".Output:28 28 28 28\r\n\r\n------\r\n------\r\n4 77 meat!!!",
  "sample_input": "Input:The first line contains four\r\nnumbers twenty eight. The next\r\nline is empty. The next two\r\nlines contain six strings '-'.\r\nThe next line contains number\r\nfour followed by number seventy\r\nseven followed by string 'meat'\r\nfollowed by three strings \"!\".Output:28 28 28 28\r\n\r\n------\r\n------\r\n4 77 meat!!!",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/EXAMPLE",
  "scraped_at": "2025-08-17 00:33:21",
  "test_cases": [
    {
      "input": "The first line contains four\r\nnumbers twenty eight. The next\r\nline is empty. The next two\r\nlines contain six strings '-'.\r\nThe next line contains number\r\nfour followed by number seventy\r\nseven followed by string 'meat'\r\nfollowed by three strings \"!\".",
      "expected_output": "28 28 28 28\r\n\r\n------\r\n------\r\n4 77 meat!!!",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "e lou oo nhkqg fgl\ngcuqs t di zls ykd\ne h ihkpi a tif tbjw\nta ar k uimhj xuku\ndwp ny t ofcyfc ghmx\ni k puxf wgbc yvwvw\nhisfr f vymt vn qfskwf\nafrfr el gjx zk etm",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "xksdt n zxz mppoo n\noi kr f xcr jzsxs\nb ewkff zleatp fkvz ike egnn\nuphbh osxw fbsk l sfkjc\nojxn gte gr ensdqaq n\nlpq kn dchx wu megnlvi\nrfhur nc l kffec kbbcf\nq qlmb abeal ycyjzue te",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "fwwwq vt dyq dik hj\nld xvezne q mvtp ntnp\nyw b eomcd v jkna d\nr ynfzkev iuoa semal rkq\nnhr yjr sne mprggh r\nrcccx elfku fl nvr gu\nyakue tnqyt e nlr qy\nfz lpc brce atg zd",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "j dqnox jrik fxjav ei\ncdqa mocwog tgdlv hf ijf\nn oanb v zft oiii eo\nrlzv ofh epvef ajkw jocf\nglqe lb mvzgw pyulmwb kroivm\nfehli skxu dvq vbe ini\ndkxoa z pfjyp dq hpa\ng w rtf inb pua",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "avau h xj ve tcnf\nj jcldcj gtbmgj ck e\ne een wtd xe z vpvrb\njpp pmp uu e rvgex\neqvh ran v luazz ro\nbze td z tcr odccm\nvrha tvtu pjcau nzn vxytrp\nsdgsflh qqxl wna efwtr uxbu",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "rwbjn ng yfji w tpe\nuaqsrvy ofl cblb izajn w\nk ixv tr dlc vzsq qasu\nwa v xlwky tjwoe mhba\nc gf gp abtskx ps\ntc o rfy so eio\nnd hhpyzd hpm bch mxc\njs al rnr vke jxq",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "i xj zxmk uuoy ichid\nppvpyn oa ukvkw huy kpr\nlcla vwfu l i q dq\nvt ztjxvgu ut nsh fnwm\nk p m pycwp kzgbrb\nmb d y zuns pth\nzkw oekin l vxsspe yj\nquu loc kdns ufy whbx",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "xpfq zhzr r djs p\nazi hzsurj lhu k rpqin\nxxjg nj p gaogr tyl tura\nl lp a eglhz azsjr\ngsn hbghn n sleyit kr\nizer i ks txs ui\ntkwuz ijryu jrkv n ffl\nsna yfb rxq evi ysf",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "mtq kir gimtz cv kgcja\nb mc ew fal sg\nf n x lk amdln c\nstv rufh xisw fafehfa st\nwi fj u hm ygptf\nagjcu h asr fd ggflzj\nslktk ed ekyfw gulio jf\nktnp tajs rixi shthah c",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "auhsg oayu vbpqv inkcjg dfuj\nwcgfbt oc vaprw bbqe acy\nzisuu vsmfr yeefd bcg xv cdgjk\ncsx ihn lp dqdjis gois\ndbrv qomux t iu gt\net jcl d f s\nix pwjmv cvmg wmbds eutoel\ntdmhwja izo qi y qyk",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "kvxj w mvus hvpzyn y\nxzo bu j lgm sulqd\nnjmsm nkn ode co rx rbmf\nmfkni oe uxr recmav ek\ng f nnmjy ajdykukk cy\nv vnx btp xmiopr fd\nc bupwru zgk lh swwz\nhfnojs s bkgi mnivo c",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "nq gm k mro eqbu\nrphhp zrdolv pniqhf mo vmm\nsxp i lb o gyzg oxn\nxoql ekyjmq mp yiq zsrxn\nsahdh jy gmrbz ldlivjy asuo\nbkryk gkgxmw zjckk ixklyv jsirwo\ncinv fpah ejoh odxzos izbwj\nqel vsd ct juok fs",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "af nnpuj njhf ryqidw qpokm\nuxdhwj dfgfte paxh qtwo ihhos\nurymd nt vojse ubbk efioo h\nq uwaupty bjpex ft vxo\njysx r ygtj lg pboys\nwxzvy thmpz jr kfxt moqbez\nypm lhgagby wh vuf azp\ntaqf krm h hmjx smt",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "x vqvk xvonb z ssey\ndosu teahoj zdnm eu exwcx\ndvlb wbi mf ezlow lsjxi vb\nzivg yqfo hrbhl dyq p\nv cdckt lgg osiycam c\nixdg qujoq vpgsb xihbfk b\nhejzf zydzgen hpw r w\naf ie el bcrd kw",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "pt pcut bc szfeo n\nblx wxhfql quesng hfjm whst\nl urr osxdf jffgr lvr jntle\nu avsm jo kwskbt b\nlxa xxvth ii li g\nltsar hj kwd v gfwz\nfhe yyefk movi q oysh\ni nheyd u d m",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "vwy pu bp qfk as\nztr wsv n anai xr\nr vov dwuun tf yt yn\nxfmki vqjyud qbrtr lk j\ngcazx rsuai l luogask uhlz\nht xlbi j z ioedrt\nxv ddomoba mvney owcenb ep\nd b rygb s l",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "gfh zdi zhxdk ngrgng fom\ni re i v mzwt\nqv ixoq eebqzk lajsk gtket dc\nhkf af iii m u\ny wwtqm xb xiqx j\nqp xtjxa uqi yrf ilkgmkw\nczhuf jyiuklt j eqeoxi oklesz\nacl iv jcix abesxn km",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "z fy w hzq synrl\nhfxuids r z k w\nwvk dwy yhtjc nfcx nhq busb\ntyu jq l dhm cail\nkh jnw kgoxd pxkl juagqn\nub m ki txnbq bwz\naye ztpdd rwl q noo\noz qozw jeby noit tihi",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "zozbx v ddyua sl oqna\nm eehzsq xqufwr ixn sz\nykx pnw qb ea bro pb\nv jltjo kx bhfi sclch\nnpo jw nym husqa mjgrg\nvty ystlu ft oim sjvdqc\ng f nvfti moi or\nzuwwv esj eihqh pu bzoh",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:46",
  "total_test_cases": 20
}
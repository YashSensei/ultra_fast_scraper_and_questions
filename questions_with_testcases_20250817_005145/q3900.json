{
  "problem_code": "problems",
  "title": "Book Club",
  "tags": [],
  "text": "Staircase in Lello bookstore, Porto.Porto's book club is buzzing with excitement for the annual book exchange event! Every year, members bring their favorite book and try to find another book they like that is owned by someone willing to trade with them.I have been to this book exchange before, and I definitely do not want to miss it this year, but I feel that the trading should be improved. In the past, pairs of members interested in each other's books would simply trade: imagine that person A brought a book that person B liked and vice-versa, then A and B would exchange their books.I then realized that many members were left with the same book they walked-in with... If instead of looking for pairs I looked for triplets, I could find more valid exchanges! Imagine that member A only likes member B's book, while B only likes C's book and C likes A's book. These 3 people could trade their books in a cycle and everyone would be happy!But why stop at triplets? Cycles could be bigger and bigger! Could you help me find if it is possible for everyone to go out with a new book? Be careful, because members will not give their book without receiving one they like in return.TaskGiven the members of the book club and the books they like, can we find cycles so that everyone receives a new book?InputThe first line has two integers:N, the number of people, andM, the total number of \"declarations of interest\". Each of the followingMlines has two integers,AandB, indicating that memberAlikes the book that memberBbrought (0 ≤ A, B < N). NumbersAandBwill never be the same (a member never likes the book he brought).OutputYou should outputYESif we can find a new book for every club member andNOif that is not possible.Constraints2 ≤N≤ 10 0001 ≤M≤ 20 000 andM≤N2-N.ExampleInput:9 9\r\n0 1\r\n1 2\r\n2 0\r\n3 4\r\n4 3\r\n5 6\r\n6 7\r\n7 8\r\n8 5OutputYESAuthor: Miguel Araújo",
  "sample_input": "Input:9 9\r\n0 1\r\n1 2\r\n2 0\r\n3 4\r\n4 3\r\n5 6\r\n6 7\r\n7 8\r\n8 5OutputYES",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/SWERC14D",
  "scraped_at": "2025-08-17 00:34:37",
  "test_cases": [
    {
      "input": "9 9\r\n0 1\r\n1 2\r\n2 0\r\n3 4\r\n4 3\r\n5 6\r\n6 7\r\n7 8\r\n8 5OutputYES",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "10 3\n1 9\n9 4\n5 1\n9 3\n1 4\n5 9\n4 8\n9 9\n10 1\n4 d",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "2 10\n9 5\n8 8\n6 3\n9 4\n3 3\n10 7\n3 1\n1 8\n4 7\n8 japvuuca",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "5 10\n8 8\n7 8\n10 2\n1 1\n7 4\n9 4\n3 5\n9 1\n5 4\n9 yzjemtzz",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "85 24\n46 50\n31 51\n10 24\n43 7\n70 19\n5 58\n95 91\n28 30\n57 61\n99 gnaecigq",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "73 51\n2 38\n24 95\n21 29\n55 14\n5 26\n73 20\n14 94\n65 52\n10 21\n25 xlsvrz",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "69 25\n67 84\n90 9\n47 36\n9 11\n30 56\n86 72\n44 60\n15 61\n60 16\n38 mhyjjnlsb",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "64 55\n40 35\n51 98\n21 17\n76 12\n46 30\n86 60\n75 59\n81 27\n46 55\n50 swt",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "27 42\n49 89\n81 9\n13 65\n43 85\n72 47\n26 18\n28 78\n73 41\n86 29\n51 uyqejxo",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "20280 31148\n13204 36075\n10076 32152\n38771 12036\n10303 12370\n41882 36031\n17654 46719\n34049 29226\n36272 20565\n13021 41832\n30372 anw",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "33755 30370\n15407 40548\n46438 36149\n20014 40650\n48625 36919\n46818 41699\n46896 18893\n12286 48111\n19497 9654\n10109 31877\n15103 fvqiqxj",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "42744 17206\n21887 31721\n11403 35790\n19557 33769\n29359 37173\n13662 19041\n30300 13063\n30353 45332\n28459 32292\n45072 24489\n7620 dvegitwlv",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "25622 17357\n20138 9095\n25586 25609\n9337 17616\n47245 43674\n13081 36717\n26294 21521\n44233 44689\n23239 20156\n39286 34754\n6002 xjyhgxk",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "13798 43336\n36910 34820\n26290 27680\n17349 47788\n47409 39437\n5828 10412\n22655 40186\n43542 10741\n21016 5459\n22136 19507\n46254 r",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "19532 38991\n19462 9391\n18082 30106\n20075 30930\n13930 15139\n5440 49064\n17658 44719\n49947 27364\n17105 19000\n9220 30572\n28624 tzcdy",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "43525 18027\n39114 7489\n30003 13742\n49369 30758\n11691 41812\n43952 28443\n34406 25864\n38135 49058\n32100 40313\n31428 34661\n8515 mamgt",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "100001 100001\n100001 100001\n100001 100001\n100001 100001\n100001 100001\n100001 100001\n100001 100001\n100001 100001\n100001 100001\n100001 100001\n100001 qgpxuiakze",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "100001 100001\n100001 100001\n100001 100001\n100001 100001\n100001 100001\n100001 100001\n100001 100001\n100001 100001\n100001 100001\n100001 100001\n100001 jgspmcrxfn",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "100001 100000\n100001 2\n1 100000\n1 100000\n100001 100001\n100000 100001\n100000 100000\n100001 1\n2 2\n100001 1\n100001 jjniv",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "100000 100000\n2 1\n2 100000\n2 1\n100001 1\n2 2\n100001 100000\n1 100000\n100001 100001\n100001 2\n100001 orsm",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:58",
  "total_test_cases": 20
}
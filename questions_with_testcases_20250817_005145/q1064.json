{
  "problem_code": "problems",
  "title": "Laser Beam",
  "tags": [],
  "text": "5 × 9 grid without laser beam5 × 9 grid with laser beamJolly Kingdom is threatened by the arrival of an evil witch. In order to protect the kingdom, the king wants to install some powerful laser beams to cover some parts of the kingdom. The part that needs to be protected has size of N × M. To complete this installation, he hired you, as the best engineer he can find.Imagine a grid of size N × M, you can choose one node in the grid and shot a laser beam, the laser can be shot only in diagonal direction as shown in the picture above, if the laser reach the edge of the grid, it'll bounce to other diagonal direction, and if the laser reach the corner of the grid, it'll bounce back. The laser will form a loop track. In order to install the best security laser beam for the king, you have to compute the number of different laser track.InputFirst line consists of an integer T (1 ≤ T ≤ 104) – the number of test cases. Each of next T lines consists an 2 integers N and M (2 ≤ N, M ≤ 109) – the size of the grid.OutputFor each test case, output an integer – the number of different laser track on that grid.ExampleInput:92 22 33 33 54 45 55 95 123456789123456789 5Output:223345555ExplanationThere are 5 different laser tracks on 5 × 9 grid, shown in the picture above as black line, blue line, pink line, orange line, and green line.",
  "sample_input": "Input:92 22 33 33 54 45 55 95 123456789123456789 5Output:223345555",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/LASER_BEAM",
  "scraped_at": "2025-08-17 00:33:36",
  "test_cases": [
    {
      "input": "92 22 33 33 54 45 55 95 123456789123456789 5",
      "expected_output": "223345555",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4 3 5 10 9 4 8 10 3 6",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "7 1 2 8 10 5 6 5 10 1",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "6 3 8 8 6 6 5 9 1 2",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "31 30 3 35 50 85 89 63 86 19",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "36 33 71 11 61 33 90 31 58 82",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "83 28 96 99 16 89 31 56 7 58",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "4 30 87 52 33 45 8 83 73 4",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "47 11 44 89 59 34 24 87 56 61",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "115 330 70 454 86 166 318 76 67 447",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "383 431 472 234 205 396 258 320 147 118",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "167 178 311 377 150 267 477 129 425 319",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "254 265 413 500 488 306 422 233 303 449",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "449 148 336 252 393 60 206 106 448 229",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "147 351 232 208 391 497 468 270 375 357",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "286 451 197 468 302 282 172 292 341 202",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 2 1 2 999 1000 1 1 2 1",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1000 1000 1 2 999 1 1000 2 999 999",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:48",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:36:52"
}
{
  "problem_code": "problems",
  "title": "Special Graph",
  "tags": [],
  "text": "You are given a directed graph with N vertices. The special thing about the graph is that each vertex has at most one outgoing edge. Your task is to answer the following two types of queries:1 adelete the only edge outgoing from vertex a. It is guaranteed that the edge exists. 1 ≤ a ≤ N.2 a boutput the length of the shortest path from vertex a to vertex b, if the path exists. Otherwise output \"-1\" without quotes. 1 ≤ a, b ≤ N.InputFirst line of input contains a natural number N ≤ 105the number of vertices in the graph.The following line contains N integer numbers, i-th number is next[i] (0 ≤ next[i] ≤ N), meaning that there is an edge from vertex i to vertex next[i]. If next[i] = 0, assume that there is no outgoing edge from vertex i.Third line contains a natural number M ≤ 105the number of queries.The following M lines contain a query each. Queries are given in the manner described above.OutputOn the i-th line output the answer for the i-th query of type 2 a b.ExampleInput:6\r\n3 3 4 5 6 4\r\n6\r\n2 1 6\r\n2 1 4\r\n2 1 2\r\n1 3\r\n2 1 6\r\n2 1 4Output:4\r\n2\r\n-1\r\n-1\r\n-1",
  "sample_input": "Input:6\r\n3 3 4 5 6 4\r\n6\r\n2 1 6\r\n2 1 4\r\n2 1 2\r\n1 3\r\n2 1 6\r\n2 1 4Output:4\r\n2\r\n-1\r\n-1\r\n-1",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/SPECIALG",
  "scraped_at": "2025-08-17 00:33:48",
  "test_cases": [
    {
      "input": "6\r\n3 3 4 5 6 4\r\n6\r\n2 1 6\r\n2 1 4\r\n2 1 2\r\n1 3\r\n2 1 6\r\n2 1 4",
      "expected_output": "4\r\n2\r\n-1\r\n-1\r\n-1",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1\n5",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "2\n2\n8",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n1\n5\n6\n9\n9",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "14\n57055235\n31731580\n45971225\n17298524\n71471266\n64624864\n26700115\n41755310\n81533946\n38972393\n58537363\n34560746\n34010369\n84604960",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "12\n28778694\n96766532\n3217610\n22783824\n33196369\n34296945\n90596466\n59407656\n36068772\n30660343\n76318542\n70100887",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "12\n35159923\n98635276\n93739618\n94840010\n25848740\n63208769\n32159729\n51757936\n33090668\n89842614\n1467991\n71367964",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "12\n78326697\n24486204\n31869424\n10398506\n52745651\n76288352\n89620368\n53462063\n16329669\n2563280\n12348592\n5042758",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "16\n30317041\n87856638\n24699894\n39747473\n97989841\n63751727\n75981374\n3686205\n32694103\n44582180\n94904174\n17891948\n17219733\n48791328\n69441474\n91221228",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "22\n58307\n92240\n30948\n66666\n90855\n26565\n83032\n83688\n84742\n59956\n29697\n38817\n33289\n31746\n47573\n97687\n79956\n60360\n45322\n3759\n99496\n35578",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "67\n4441\n38016\n95993\n80586\n52159\n62253\n60933\n56103\n92030\n46873\n76157\n70301\n19693\n90032\n2958\n86607\n91584\n26519\n63543\n42666\n63059\n57763\n71851\n85558\n51932\n69590\n93076\n23808\n20771\n86438\n70632\n14735\n91116\n1944\n44042\n26450\n29791\n76196\n38050\n4823\n23147\n24466\n18325\n70380\n4542\n86880\n92115\n99658\n96334\n25598\n69061\n35664\n23394\n35489\n30745\n46162\n64837\n16016\n80760\n58706\n66222\n96693\n80608\n55427\n37870\n16032\n40420",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "51\n3009\n27375\n40667\n4708\n95167\n50957\n58354\n69884\n84646\n72408\n24753\n5982\n35082\n69992\n5924\n98020\n68986\n46798\n14210\n2807\n24917\n25578\n79742\n92932\n84430\n26695\n717\n49750\n9502\n2085\n40534\n17018\n25593\n46165\n96557\n48928\n15357\n48160\n99283\n13002\n74653\n61092\n71174\n70994\n46047\n65708\n4529\n54667\n39707\n71338\n42247",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "34\n58345\n22088\n73263\n78238\n73842\n5712\n14661\n75339\n23283\n98534\n21438\n26288\n77148\n49445\n22139\n61558\n27157\n71762\n763\n97386\n52042\n45887\n19931\n16255\n61321\n60823\n93813\n15554\n88582\n66645\n52032\n10478\n70529\n50793",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "24\n21630\n3400\n57613\n15108\n4805\n10217\n57511\n88596\n69073\n78931\n48311\n823\n61768\n11420\n66951\n12018\n49519\n38171\n91416\n55487\n78918\n1486\n56848\n32257",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "73\n35383\n8351\n60187\n78804\n11254\n16911\n45323\n94023\n87401\n51571\n74381\n43433\n12139\n63351\n35586\n79397\n24005\n10972\n76388\n42815\n27741\n5272\n67030\n36941\n27414\n78368\n9233\n97715\n16133\n42081\n37665\n47003\n52377\n79917\n77865\n29808\n60856\n3044\n61261\n97441\n35689\n62354\n91772\n36489\n30763\n15629\n9158\n23377\n877\n35104\n33136\n51436\n3849\n60662\n9107\n70775\n88218\n27066\n51462\n25165\n1718\n58935\n38669\n40455\n5003\n26660\n77606\n13736\n41104\n79826\n38232\n33620\n83216",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "63\n59136\n25175\n24411\n64127\n48294\n82984\n82002\n9122\n9533\n53116\n99045\n21650\n68116\n4721\n40009\n37899\n19135\n65008\n39593\n30284\n66849\n62670\n74724\n59513\n81004\n26997\n39002\n21948\n84083\n97576\n86267\n80239\n7599\n58298\n26487\n46\n89052\n45315\n15103\n47928\n16747\n53013\n13694\n44555\n93354\n78565\n70030\n76310\n80108\n56218\n70076\n53232\n12288\n93936\n38494\n33367\n43114\n79234\n39799\n89034\n69114\n10593\n1433",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "105\n44311031\n78964337\n86629660\n27568727\n24533195\n37251241\n69819885\n86246283\n83036390\n68945558\n4064539\n85279497\n60843370\n62920911\n73887464\n47336482\n54461432\n52845742\n70460882\n88393864\n80777386\n71145787\n6192683\n15756535\n91671364\n30757339\n27825597\n5809125\n70976934\n58122494\n70432281\n72149005\n27594007\n53255028\n62277656\n50641844\n25433866\n26396092\n34286777\n61046546\n71504894\n87214693\n47708025\n52959980\n59509282\n31356402\n38174438\n85208345\n6649502\n64807155\n26730085\n35170076\n62725967\n51119076\n93710387\n34444739\n54561750\n13320782\n58634340\n12582631\n15242183\n12352224\n70499977\n88168293\n76127082\n96480929\n78237514\n79353255\n45118998\n5110694\n48193429\n380027\n82460378\n6225742\n70455729\n83588857\n72562558\n70089940\n63493559\n32348504\n41624983\n65120268\n54438770\n93134589\n13376920\n10449680\n19001401\n82383422\n9308870\n42606262\n62018073\n29991242\n41071983\n9497492\n22659642\n44896535\n54229355\n16126012\n25320655\n22339374\n1220541\n12762931\n37788032\n43654987\n70945125",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "105\n64314265\n61938176\n47910596\n54072997\n49349565\n27924538\n62623860\n18700599\n86010677\n30314907\n18444826\n76211304\n52438769\n8210856\n25050163\n18123879\n27242815\n3543219\n73395337\n13427890\n26168914\n60458322\n42307048\n23567856\n47055166\n8702035\n19697353\n51015280\n49205156\n92992965\n67490282\n43802782\n50967920\n61449708\n94520321\n4976399\n16181696\n20576606\n68557454\n180481\n33192954\n42008532\n84245030\n37484405\n48801510\n22634453\n55950358\n41218354\n40953471\n55842983\n3199868\n58552885\n84099530\n65829065\n36630577\n40433230\n24610261\n87237430\n9857749\n70513744\n92975052\n35158915\n80709450\n54430560\n95830282\n22801705\n23896439\n13748926\n73060186\n50383956\n9191446\n3271016\n15687508\n16284473\n63285568\n36054136\n6800135\n28373682\n28878672\n76940866\n65510531\n95753382\n88078506\n64827426\n79990618\n4630158\n59779040\n40066068\n47003023\n40136952\n32113522\n12071805\n57051462\n95254396\n14978872\n7680628\n84645608\n88936889\n20305108\n54806465\n11376297\n40642523\n86858336\n59975286\n42420214",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "105\n1\n58731264\n1\n100000000\n1\n48134990\n81930489\n61588488\n100000000\n100000000\n94637629\n1\n1\n1\n49704835\n100000000\n60449046\n100000000\n1\n1\n1\n90660930\n1\n1\n1\n1\n21985251\n84638049\n1\n1\n75494420\n67467385\n100000000\n95855014\n100000000\n1\n1\n10342098\n63232111\n100000000\n100000000\n4568276\n1\n1\n70894363\n10202798\n1\n41320490\n15206178\n61744019\n73503894\n1\n100000000\n46189079\n100000000\n100000000\n5559957\n74633119\n23385793\n65318702\n100000000\n1\n1\n57937941\n100000000\n100000000\n1\n1\n100000000\n8834926\n1\n100000000\n100000000\n15826786\n100000000\n68152502\n1\n78499529\n93259748\n100000000\n1\n100000000\n100000000\n100000000\n100000000\n1\n100000000\n100000000\n60739979\n100000000\n1\n62390374\n16425733\n1\n10698196\n73935493\n6026958\n1\n29928202\n32631210\n1\n1\n100000000\n34910835\n1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 105)"
    },
    {
      "input": "2\n39835582\n74294068",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 2)"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:52",
  "total_test_cases": 20
}
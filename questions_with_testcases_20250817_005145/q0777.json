{
  "problem_code": "problems",
  "title": "Ada and Easy Game",
  "tags": [],
  "text": "Ada the Ladybug is frequently playing board games against her friend Velvet Mite Vinit. Last time, they were playingGame of Digits. Anyway Vinit is slightly mad at Ada, because she \"cheated\". She let one of her good friends to make program which helped her significantly. As Vinit wants to avoid this, he createdGame of Pileswith his own rules. He puts many piles with many nuts on the table. He then chooses a few numbers (rules), which are possible moves. Ada and Vinit play alternately (as Vinit is gentleman, Ada starts). In each move one can choose a pile, any number from rules (not  greater than the number of nuts in the pile) and eats that many nuts from pile. The one who can't move looses. Vinit is very excited to play since he is ensured Ada can't cheat this time.Well that was just a fun fact from world of bugs and now lets solve some completely different problem. Your good friend Ada has asked you to help her win a game against one of her friends...InputFirst line of input will consistT ≤ 200number of test-cases.Each testcase will begin with two numbers0 < N ≤ 105[number of piles] and0 < M ≤ 30[number of rules].The next line will consist ofMnumbers,1 ≤ Ri≤ 105[rules]The last line of each test-case will consist ofNnumbers,1 ≤ Pi≤ 105[sizes of pile]OutputFor each test-case, print the name of winner (\"Ada\" or \"Vinit\")  [if both played optimally].Example Input6\r\n4 1\r\n2\r\n1 2 3 4\r\n4 2\r\n1 2\r\n4 4 3 5\r\n1 3\r\n2 3 5\r\n20\r\n2 2\r\n1 3\r\n4 7\r\n5 5\r\n1 2 7 13 15\r\n10 20 30 40 50\r\n1 2\r\n1 2\r\n98997Example OutputVinit\r\nAda\r\nAda\r\nAda\r\nAda\r\nVinit",
  "sample_input": "6\r\n4 1\r\n2\r\n1 2 3 4\r\n4 2\r\n1 2\r\n4 4 3 5\r\n1 3\r\n2 3 5\r\n20\r\n2 2\r\n1 3\r\n4 7\r\n5 5\r\n1 2 7 13 15\r\n10 20 30 40 50\r\n1 2\r\n1 2\r\n98997",
  "sample_output": "Vinit\r\nAda\r\nAda\r\nAda\r\nAda\r\nVinit",
  "link": "https://www.spoj.com/problems/ADAGAME2",
  "scraped_at": "2025-08-17 00:33:13",
  "test_cases": [
    {
      "input": "6\r\n4 1\r\n2\r\n1 2 3 4\r\n4 2\r\n1 2\r\n4 4 3 5\r\n1 3\r\n2 3 5\r\n20\r\n2 2\r\n1 3\r\n4 7\r\n5 5\r\n1 2 7 13 15\r\n10 20 30 40 50\r\n1 2\r\n1 2\r\n98997",
      "expected_output": "Vinit\r\nAda\r\nAda\r\nAda\r\nAda\r\nVinit",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5\n7\n10\n6\n4\n10",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "4\n2\n2\n9\n3",
      "expected_output": "0\n0\n0\n0",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "3\n1\n8\n2",
      "expected_output": "0\n0\n0",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "9\n9504382\n86287024\n27209487\n52065683\n76368119\n1873892\n67436378\n22062313\n70774130",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "16\n38345912\n75346625\n59989383\n16042015\n64870767\n40829357\n2186244\n72745532\n31605925\n97590494\n80031874\n1538663\n40326037\n52871460\n73627480\n4940999",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "19\n78494416\n2493611\n95921456\n19543725\n35417830\n33489755\n89426076\n74594883\n47506624\n90094173\n855066\n82307084\n88114797\n21686292\n54698331\n36917164\n51623697\n42110807\n64586147",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "15\n25957246\n54284592\n44557276\n96456277\n27561868\n18159774\n4450670\n25677786\n18118580\n83639448\n14802066\n14163288\n78211457\n84182066\n22664273",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "18\n24888852\n22896494\n34912424\n7141640\n46919772\n64921127\n47169991\n16774571\n87512117\n76731153\n10911595\n47012085\n44902858\n1126865\n26464431\n8220842\n81535299\n17128359",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "29\n71990\n34816\n55124\n29260\n49676\n28345\n76010\n41260\n13081\n65396\n49129\n47680\n82180\n58470\n9198\n34910\n52603\n80641\n69572\n6528\n48492\n55296\n30586\n78158\n43355\n36844\n27782\n391\n61715",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "51\n9611\n1577\n13382\n78274\n99357\n13508\n62863\n29551\n38438\n97104\n76599\n62390\n13352\n99706\n92679\n12419\n71748\n79282\n6788\n90312\n42547\n69194\n78698\n94339\n32263\n79479\n7668\n31913\n82228\n44824\n28773\n86265\n78352\n23150\n38410\n58221\n99488\n60729\n11688\n41791\n53214\n21202\n5325\n88267\n97793\n49707\n17389\n60320\n36183\n73523\n45369",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "60\n15464\n23558\n22148\n57845\n80547\n67157\n83758\n27736\n38576\n19363\n90915\n22575\n46974\n34140\n88668\n79214\n67165\n90815\n56890\n45176\n88601\n37767\n59210\n9897\n72868\n56191\n66213\n8464\n42953\n12914\n36208\n57857\n13810\n97540\n47221\n6255\n36595\n34959\n55924\n13516\n56744\n71880\n66893\n87563\n66928\n74646\n23677\n28023\n42217\n5097\n4764\n60113\n43958\n78706\n20579\n27509\n55177\n404\n5705\n1209",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "48\n43447\n83633\n49943\n34789\n22879\n95874\n82410\n24207\n61026\n5782\n27686\n14967\n11361\n32153\n15604\n341\n39475\n73629\n48477\n49552\n85936\n15129\n78622\n88716\n46223\n48822\n28591\n61772\n73163\n3112\n74215\n59668\n21411\n15770\n57423\n9068\n85317\n88151\n75867\n79985\n13091\n63058\n16323\n56548\n14565\n26827\n64342\n39261",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "101\n98353\n16172\n70526\n96556\n3244\n42603\n9226\n32265\n13744\n78570\n16604\n57558\n79276\n70652\n21046\n55003\n8851\n90170\n91066\n95303\n91954\n13537\n22381\n56010\n32959\n52292\n18342\n29398\n33083\n12201\n22710\n82610\n21380\n99791\n36742\n90254\n88786\n72637\n31041\n65026\n45425\n91688\n14376\n57728\n51790\n92180\n23440\n91492\n9766\n18561\n28899\n33879\n88365\n23714\n68319\n53399\n18684\n41178\n74947\n59208\n1212\n71435\n18867\n73096\n30092\n14859\n66478\n10558\n33397\n61232\n90800\n72576\n38274\n82785\n20775\n46634\n55230\n99840\n74066\n51486\n72242\n37051\n46256\n73705\n77309\n10583\n90751\n1026\n27596\n7567\n38179\n20911\n28549\n79917\n70667\n4226\n62660\n68048\n21003\n68772\n23210",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "55\n65376\n29526\n90332\n26791\n29264\n63966\n71314\n76131\n68152\n1693\n28020\n38082\n24763\n65382\n27812\n15847\n94868\n16930\n56782\n26113\n55325\n15977\n19726\n55421\n24314\n56078\n5998\n20375\n92791\n98981\n54834\n7487\n13053\n95123\n12305\n65555\n82033\n83897\n99737\n34925\n38431\n80148\n84323\n54717\n60489\n52887\n2976\n56245\n81627\n37952\n26472\n25631\n33170\n68919\n92327",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "50\n36846\n89262\n35029\n61102\n55262\n4733\n29784\n92088\n16801\n11258\n72026\n84398\n76644\n7885\n83906\n76051\n80484\n35046\n53395\n52692\n70103\n80005\n17989\n72231\n37356\n25290\n2503\n22382\n53150\n79154\n66983\n62507\n54807\n57612\n79597\n56964\n81076\n88481\n75022\n49925\n94708\n1848\n38590\n97611\n45737\n83738\n58763\n1740\n28397\n76660",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "105\n22236670\n89771920\n47213451\n28117102\n24508620\n12430434\n26701536\n70828288\n29360223\n86991250\n37185559\n7123033\n10486494\n91761137\n47969944\n13497306\n67536210\n12547500\n83281911\n44877429\n25828217\n60976448\n86914583\n48915441\n72794497\n55910754\n50796218\n75451648\n17016086\n30158304\n73137592\n17627824\n73686612\n62720319\n67808344\n7079480\n67092683\n84338976\n8045081\n54751371\n63299262\n67815145\n95515671\n80427312\n5725987\n47594322\n47748181\n77538101\n23418183\n50931684\n71244161\n89799788\n99212991\n39324028\n74100865\n40312268\n25981664\n77174386\n30858260\n82986961\n42490127\n21331858\n87450058\n56716869\n70269971\n26329705\n15981958\n14166322\n58309655\n23488761\n15682123\n27496829\n62031119\n61742688\n91749878\n94375512\n47134383\n24902444\n10816336\n63451674\n15887993\n30594238\n28886745\n64666766\n37190141\n88073958\n35435475\n61514032\n18575778\n8766422\n31499502\n64176291\n39947578\n33347666\n54777700\n69546870\n91256791\n4447000\n78485996\n26687400\n58157543\n41904130\n32134170\n91954952\n42626101",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "max_case_17",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "105\n5007791\n78701750\n33823466\n29639874\n73594239\n89771807\n10189336\n76884377\n82145237\n87213288\n24277671\n97309209\n99504334\n55022930\n82822521\n84239742\n36471848\n5623906\n90801363\n76093311\n70160750\n38747467\n37143611\n85970772\n88243171\n37123422\n62205903\n3038877\n9492772\n80530373\n46175064\n70529247\n4053889\n7844828\n64566501\n66762294\n52373606\n32977431\n51507435\n60352872\n7686026\n53019267\n73414994\n41505545\n80177844\n79022898\n7442697\n82266090\n92532342\n56725979\n53181473\n94093601\n27535501\n68551862\n21757095\n26298918\n42369112\n83392291\n31875083\n2588530\n38054151\n51509584\n93732630\n86091453\n62738011\n6229565\n93854647\n26583487\n69655767\n31308229\n95217275\n29349335\n72931673\n93068056\n21060911\n77402034\n96786310\n71732920\n57897765\n64561158\n78231630\n26970084\n59513802\n19498905\n40611470\n60086157\n44231542\n59902560\n20567854\n54885432\n21137188\n97960670\n49414873\n19825284\n20090845\n31649495\n2355086\n1472196\n74301262\n14947109\n67896039\n36893647\n12263399\n65501816\n39432564",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "max_case_18",
      "description": "Maximum size array (N = 105)"
    },
    {
      "input": "1\n1",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Edge case array (N = 1)"
    },
    {
      "input": "1\n100000000",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Edge case array (N = 1)"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:48",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:36:44"
}
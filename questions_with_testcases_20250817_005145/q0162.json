{
  "problem_code": "problems",
  "title": "Covering the Corral",
  "tags": [],
  "text": "The cows are so modest they want Farmer John to install covers around the circular corral where they occasionally gather. The corral has circumference C (1 ≤ C ≤ 1,000,000,000), and FJ can choose from a set of M (1 ≤ M ≤ 100,000) covers that have fixed starting points and sizes. At least one set of covers can surround the entire corral.Cover i can be installed at integer location xi(distance from starting point around corral) (0 ≤ xi< C) and has integer length li(1 ≤ li≤ C).FJ wants to minimize the number of segments he must install. What is the minimum number of segments required to cover the entire circumference of the corral?Consider a corral of circumference 5, shown below as a pair of connected line segments where both '0's are the same point on the corral (as are both 1's, 2's, and 3's).Three potential covering segments are available for installation:Start   Length\r\n      i      xili1      0       1\r\n      2      1       2\r\n      3      3       3\r\n\r\n        0   1   2   3   4   0   1   2   3  ...\r\ncorral: +---+---+---+---+--:+---+---+---+- ...\r\n        1111                1111\r\n            22222222            22222222\r\n                    333333333333\r\n            |..................|As shown, installing segments 2 and 3 cover an extent of (at least) five units around the circumference. FJ has no trouble with the overlap, so don't worry about that.Input:Line 1: Two space-separated integers: C and M.Lines 2..M+1: Line i+1 contains two space-separated integers: xiand liOutput:Line 1: A single integer that is the minimum number of segments required to cover all segments of the circumference of the corral.SampleInput5 3\r\n0 1\r\n1 2\r\n3 3Output2",
  "sample_input": "Start   Length\r\n      i      xili1      0       1\r\n      2      1       2\r\n      3      3       3\r\n\r\n        0   1   2   3   4   0   1   2   3  ...\r\ncorral: +---+---+---+---+--:+---+---+---+- ...\r\n        1111                1111\r\n            22222222            22222222\r\n                    333333333333\r\n            |..................|",
  "sample_output": "Input5 3\r\n0 1\r\n1 2\r\n3 3Output2",
  "link": "https://www.spoj.com/problems/CORRAL",
  "scraped_at": "2025-08-17 00:33:05",
  "test_cases": [
    {
      "input": "Start   Length\r\n      i      xili1      0       1\r\n      2      1       2\r\n      3      3       3\r\n\r\n        0   1   2   3   4   0   1   2   3  ...\r\ncorral: +---+---+---+---+--:+---+---+---+- ...\r\n        1111                1111\r\n            22222222            22222222\r\n                    333333333333\r\n            |..................|",
      "expected_output": "Input5 3\r\n0 1\r\n1 2\r\n3 3Output2",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "kdang odz\n10 8 1\nkebu ejigl 7 8\n1 2 4\n9 3 2\n9 3 8 5 3 8 8 10 5\n2 9 7 9 9 10 3 4 6 o\nhsk tnloedrdgjveublnfhnrfllchmat qoy\n7 10\n7 10\n4\nh",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "famg ktv\n1 7 2\nxv l 4 7\n3 10 5\n9 6 9\n9 4 4 5 2 2 5 8 7\n9 10 7 2 3 2 4 1 9 xb\nmkdvw ustwrwxrnohqsq n\n8 8\n7 5\n9\nhyxqwjeuidaxntsxwoc",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "tky gceud\n8 9 2\ndny i 9 6\n1 10 10\n3 1 7\n5 9 3 5 6 10 9 9 3\n3 3 2 9 10 2 10 1 6 u\naec kxm ejwwp\n3 4\n6 5\n10\nekvwygdn",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "lwchp kjzl\n36 14 99\ntoj sbmu 6 25\n47 10 52\n51 34 12\n39 90 55 98 32 57 91 32 50\n74 33 96 19 52 56 87 64 7 wgfu\nbyqm usz q\n42 41\n72 94\n35\nosuknrpzxzevfxstkj",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "ikav qn\n56 92 67\nglz oqyu 46 47\n62 42 24\n32 26 59\n92 70 96 12 82 76 51 24 4\n65 69 27 72 74 71 56 92 55 ks\nylwut ndguutuhilbvwwftjelplkoyjivblktaw ikh\n53 93\n79 96\n82\nm",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "tdi uii\n44 14 60\nhul em 83 30\n26 68 92\n94 84 8\n14 43 78 52 2 42 71 6 77\n42 27 86 44 1 1 8 87 21 t\nzr mskrihhkeykiqgydkbyhu dnzed\n87 4\n62 16\n91\ncefm",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "gpc zdgaz\n18 59 56\noh e 70 39\n4 54 51\n13 25 44\n15 15 38 25 21 68 52 39 52\n80 16 50 45 39 4 25 65 51 lynlq\nzsekaey zaibwrdaojkxnngwijrtbmeyohfhmip apmh\n90 73\n60 32\n33\ntvcipkhkjkliwoqljnk",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "tqaqe fdnzj\n94 22 5\nuj fskc 31 41\n63 68 68\n70 21 23\n59 51 37 62 73 13 88 82 73\n62 23 52 62 10 88 38 28 16 sxhy\ndv mhdxfufyayqejix noelh\n85 63\n25 53\n57\nxprronunspwdcuyln",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "uk zohrek\n238 333 348\nz swmp 314 336\n209 434 307\n205 283 305\n320 448 137 401 448 211 314 329 346\n483 317 411 236 176 433 208 109 133 hvytz\nxbiw d vyqe\n440 76\n190 90\n445\ndr",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "i t\n244 347 272\npox hrx 301 177\n482 190 265\n498 157 228\n423 467 403 446 106 464 498 308 351\n153 205 445 141 284 141 178 428 202 vfgso\nxlzs pxwcjivjelfovwueaymlscm p\n127 227\n500 339\n110\ngfcu",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "hkvpi sxmohk\n490 473 458\naamfb i 412 229\n435 178 124\n236 467 195\n127 263 234 414 330 321 247 295 190\n206 457 306 188 94 148 343 174 479 aso\nyi imtzuprdxpyfvmlsqrvnhfsyjxiluun whrd\n493 274\n372 309\n296\nfdqh",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "rmchb avdpzi\n206 254 315\nghv t 376 211\n62 128 179\n124 213 482\n296 250 190 459 461 298 106 165 191\n156 134 64 61 157 115 259 180 258 ihe\nlx ikcsmusnlzvplssp xi\n131 361\n338 190\n203\ntpuohmbxfvesosj",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "wpbb apwzii\n341 115 473\nwv qg 392 213\n318 123 245\n465 179 96\n487 94 120 460 65 373 382 313 287\n207 150 115 311 354 404 296 417 85 bobgm\naebxi msrcwurtpyusqsqnwbjl evx\n444 340\n111 217\n405\nexhj",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "pnrg tgby\n313 442 118\ngqkrk rr 154 405\n171 55 497\n363 161 274\n436 483 388 316 260 243 54 254 228\n454 150 53 476 196 365 463 171 263 goho\npwspuh ttmwrloetzjhqdkhb rmr\n191 445\n386 310\n235\nprhlyhkjuzlokaelzb",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "pgnh l\n269 217 210\nsduo yuvs 322 105\n51 455 378\n343 117 291\n241 426 485 384 307 120 148 389 184\n67 179 205 115 438 55 68 65 97 r\nfqe hqgghnprgqlihxuxqepkuzr bihl\n131 243\n95 476\n275\nmijuimpxx",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "fb bfrudm\n1000 1000 1000\nkbz f 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 h\nt gnod inhmw\n1000 1000\n1000 1000\n1000\ndscecjoqamarzdh",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "ihx uagl\n1000 1000 1000\nc rkaa 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 tuhea\nbgjrks kparqfmunfcieppmdynmotabmtuyqpzsy iujo\n1000 1000\n1000 1000\n1000\ngojtlea",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "dr rppyn\n999 999 999\nikcv ghg 2 1000\n2 999 2\n2 1000 999\n999 999 1 999 2 1000 1 1 1\n1000 1 2 999 1000 999 999 1000 1 yzr\nwjxy fuuaz rb\n999 999\n1000 2\n1\nuunapwxdnocyrvjwt",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "q cqrt\n1000 2 1\noarq pg 999 999\n1 2 999\n1 999 2\n1 2 999 2 1000 1 1 2 1\n1 2 999 2 1000 999 1000 999 1000 bmmh\nfyixqz hqimvutfapabzdbughzcwwurimuokpnhr paug\n2 999\n1000 1000\n2\npmgsgzbongarpv",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:46",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:36:24"
}
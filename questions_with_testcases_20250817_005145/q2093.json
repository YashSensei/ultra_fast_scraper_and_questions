{
  "problem_code": "problems",
  "title": "Lights",
  "tags": [],
  "text": "John hasnlight bulbs and a switchboard withnswitches; each bulb can be either on or off, and pressing thei−th switch changes the state of bulbifrom on to off, and viceversa. He is using them to play a game he has made up. In each move, John selects a (possibly empty) set of switches and presses them, thus inverting the states of the corresponding bulbs. Initially all lights are off, and after exactlymmoves John would like to have the firstvbulbs on and the rest off; otherwise he loses the game. There is only one restriction: he is not allowed to press the samesetof switches in two different moves.This is quite an easy game, as there are lots of ways of winning. This has encouraged him to keep playing different winning games, and now he is intent on trying them all. Help him count how many ways of winning there are. Two games are considered the same if, after a reordering of the moves in one of them, at every step the same set of switches is pressed in both of them.For example, ifn= 4,m= 3, andv= 2, one possible winning game is obtained by pressing switches 1, 2 and 4 in the first move, 1 and 3 in the second one, and 1, 3 and 4 in the last one. This is considered equivalent to, say, first pressing 1 and 3; then 1, 2, 4; and then 1, 3, 4.InputThe input has at most 500 lines, one for each test case. Each line contains three integersn(1 ≤n≤ 1 000),m(1 ≤m≤ 1 000), andv(0 ≤v≤n). The last line of input will hold the values0 0 0and must not be processed.OutputPrint one line for each test case containing the number of ways John can play the game, modulo the prime 10 567 201.ExampleInput:3 3 1\r\n6 4 0\r\n6 4 3\r\n0 0 0Output:7\r\n10416\r\n9920Problem setter: David García Soriano",
  "sample_input": "Input:3 3 1\r\n6 4 0\r\n6 4 3\r\n0 0 0Output:7\r\n10416\r\n9920",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/LIGHTS2",
  "scraped_at": "2025-08-17 00:33:52",
  "test_cases": [
    {
      "input": "3 3 1\r\n6 4 0\r\n6 4 3\r\n0 0 0",
      "expected_output": "7\r\n10416\r\n9920",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "7 3 2\n7 4 9\n2 1 4\n7 9 5",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "2 4 2\n5 3 5\n5 1 2\n4 10 4",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "1 9 10\n8 3 4\n9 3 5\n3 7 6",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "75 40 95\n75 63 53\n32 56 5\n50 52 12",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "10 42 95\n49 43 4\n99 14 77\n71 22 11",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "43 74 92\n57 64 45\n46 2 42\n45 10 70",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "76 10 55\n59 76 90\n51 68 86\n51 14 5",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "87 34 33\n51 67 1\n17 94 42\n100 24 43",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "119 254 480\n315 467 124\n146 163 230\n210 229 78",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "340 82 237\n375 313 224\n157 65 333\n251 481 251",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "175 375 269\n392 425 270\n428 240 379\n478 60 180",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "223 469 70\n105 323 397\n458 313 492\n458 139 91",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "100 146 457\n227 380 439\n195 346 142\n191 276 253",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "58 287 320\n89 267 74\n280 115 300\n64 244 67",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "103 212 164\n70 331 394\n310 177 75\n330 414 414",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 999 2\n999 2 1\n1 2 1000\n2 2 1",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 1000 999\n2 1000 1000\n999 1 2\n1000 999 1",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:52",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:25"
}
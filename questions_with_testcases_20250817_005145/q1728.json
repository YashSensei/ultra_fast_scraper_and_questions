{
  "problem_code": "problems",
  "title": "Flowers of Babylon",
  "tags": [],
  "text": "In Babylon grow some plants with flowers that are very much appreciated among the inhabitants. Florencio is such an inhabitant of Babylon who has a garden withNplants of these species, and he wants to collect some of their flowers. Because Florencio is quite lazy he does not want to go through a lot of effort to collect the flowers. Therefore, he has decided to walk to some point in his garden, and then with a circular movement of his scythe he shall cut a good amount of plants to later collect their flowers. Florencio is very skillful using the scythe so he will cover with it a perfect circle centered wherever he is standing, which will allow him to cut all the plants lying within this circle, including its border. The higher Florencio has to lift his scythe, the greater the radius of the corresponding circle he will cover with it. Florencio wants to cut at leastPplants, but his laziness is such that he wants to do so lifting his scythe as little as possible.Florencio has managed to get his hands on a satellite image of his garden where all of his plants appear, and he has furthermore managed to get someone to convert this image to a list where each plant is represented by its coordinates in anXYplane. Now he is sitting outside, his scythe in hand, waiting for your team to tell him the minimum radius of a circle that encloses at leastPplants.InputThe first line contains a single integer numberT, the number of test cases (1≤ T≤ 100).For each test case, the first line contains two integer numbersNandP, which respectively represent the number of plants that there are in the garden and the minimum number of plants that Florencio wants to cut (1 ≤ P≤N≤500). Each of the followingNlines describes a different plant using two integer numbersXandY, representing the coordinates of that plant in theXYplane (1≤X, Y≤105). No two plants sit at the same position.OutputFor each test case, print a line containing a single rational number representing the minimum radius of a circle enclosing at leastPplants. You should print the result using exactly4digits after the decimal mark, rounding if necessary (there will be no rounding ties).ExampleInput:23 210000 1000010000 99999999 100002 11 110000 10000Output:0.50000.0000",
  "sample_input": "Input:23 210000 1000010000 99999999 100002 11 110000 10000Output:0.50000.0000",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/TAP2013F",
  "scraped_at": "2025-08-17 00:33:40",
  "test_cases": [
    {
      "input": "23 210000 1000010000 99999999 100002 11 110000 10000",
      "expected_output": "0.50000.0000",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3 10 5 7 8 3 10 8",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "10 5 5 3 7 3 4 6",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "5 3 9 10 8 8 6 2",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "78 69 77 70 87 58 47 96",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "58 90 30 28 7 21 32 83",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "75 60 88 90 36 51 27 87",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "2 11 35 12 73 39 45 79",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "5 21 50 93 20 3 69 21",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "230 159 151 42 197 96 227 39",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "139 42 126 213 27 43 230 163",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "219 203 201 68 206 158 202 38",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "185 103 128 179 182 118 223 185",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "243 28 29 77 75 108 104 207",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "49 204 61 89 146 200 96 169",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "84 55 60 26 43 233 119 128",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "500 500 500 500 500 500 500 500",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "500 500 500 500 500 500 500 500",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "500 2 499 2 2 1 2 500",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 499 499 500 499 1 500 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:51",
  "total_test_cases": 20
}
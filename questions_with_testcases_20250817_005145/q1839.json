{
  "problem_code": "problems",
  "title": "Bacterial",
  "tags": [],
  "text": "In the biology laboratory we are observing several bacterial \r\n        samples, and under \r\n                the microscope we have them shaded with different colors to see them expanding \r\n                their territory on the plate.It is interesting to know that the \r\n        bacterial are \r\n                quite 'friendly' that once they meet each other, they do not expand into each \r\n                other's occupation any more. The bacterial samples are expanding \r\n        at similar speeds and we take them as the same speed.Since the experiment is tedious and lengthy (Oh My \r\n                God! there are several thousand samples at our pick), we are going to run a \r\n                simulation based on this reality, taking the variable that these \r\n        samples may be planted in different starting spots.We are using rectangular plates and \r\n        bacterial racing is bounded within the plate.Input formatThere are multiple test cases (about 20000 of them) each taking the following format:one line with two integers between 1 \r\n        and 1000 inclusive indicating width and height of the plateone line with one integer between 1 and 100 inclusive indicating the \r\n        number of bacterial samplesfor each bacterial sample there is one line with two integers \r\n        indicating the sample's position:x y, where x, y specify a position within or on the bound of the \r\n        plate.The plate lies in such a coordinating system that the lower-left corner of it is (0,0) and the upper-right corner is (width,height).A test with zero plate area marks the end of \r\n        the tests and this one shall not be processed.Between each input block there is a \r\n        blank line.Output formatGenerate a report having the samples sorted on their domination, \r\n        with each line taking the following format:<sample id> <area occupation>where: 'sample id' takes 3 columns right justified, with '0' padded to \r\n        the left as necessary, and 'area occupation' \r\n        takes 14 columns with 2 digit precision, right justified.The sample occupying more area shall be \r\n        reported prior to those occupying less. The input data will ensure \r\n        enough difference in areas to avoid ambiguity.Between each output block there shall \r\n        be a blank line.ExampleSample input:10 10\r\n2\r\n5 5\r\n0 0\r\n\r\n0 0Sample output:001         87.50\r\n002         12.50Warning: large Input/Output data, be careful with certain languages",
  "sample_input": "Sample input:10 10\r\n2\r\n5 5\r\n0 0\r\n\r\n0 0Sample output:001         87.50\r\n002         12.50",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/BAC",
  "scraped_at": "2025-08-17 00:33:48",
  "test_cases": [
    {
      "input": "Sample input:10 10\r\n2\r\n5 5\r\n0 0\r\n\r\n0 0Sample output:001         87.50\r\n002         12.50",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "6 3\nfu iupmkas 10\n2\n6 7\n3 7\n1 1 8 3\n5 rdlo gsqg c\n6 8",
      "expected_output": "0\n0\n2\n0\n0\n0\n0\n0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "1 2\norji dbqlh 3\n2\n10 9\n7 7\n4 2 6 8\n8 l xkngqcj lsyjh\n9 8",
      "expected_output": "0\n0\n2\n0\n0\n0\n0\n0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "1 4\nfyzdz hsje 8\n3\n4 3\n10 4\n6 8 3 6\n5 ahen ompojfzok fbaag\n8 9",
      "expected_output": "0\n0\n3\n0\n0\n0\n0\n0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "93 36\ntz o 83\n73\n49 11\n94 47\n66 94 98 98\n70 ate qcyqhwnwvr dkd\n70 68",
      "expected_output": "0\n0\n73\n0\n0\n0\n0\n0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "93 88\niu nnn 44\n35\n16 11\n15 39\n82 80 43 44\n13 zjhgv wqmda gxqn\n70 65",
      "expected_output": "0\n0\n35\n0\n0\n0\n0\n0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "85 28\nlynenm woayvuf 51\n76\n89 92\n75 40\n82 94 65 82\n56 csusf vbpxnlou klp\n79 2",
      "expected_output": "0\n0\n76\n0\n0\n0\n0\n0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "51 63\nasqzmt dvf 47\n80\n65 23\n26 60\n50 46 45 88\n17 porn xpxi upruw\n84 92",
      "expected_output": "0\n0\n80\n0\n0\n0\n0\n0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "44 4\ney lahfrbrk 12\n80\n26 97\n85 32\n66 46 71 53\n13 ynlu gxo iai\n85 59",
      "expected_output": "0\n0\n80\n0\n0\n0\n0\n0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "70 117\ntu mo 269\n360\n271 380\n161 122\n493 295 78 365\n495 mjoo grkj rsjlz\n360 229",
      "expected_output": "0\n0\n360\n0\n0\n0\n0\n0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "245 469\nrtoo akd 128\n164\n478 111\n138 346\n91 391 294 239\n491 catzyp bwrsi kpszn\n121 126",
      "expected_output": "0\n0\n164\n0\n0\n0\n0\n0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "276 463\nti xzjzyph 82\n437\n203 412\n60 407\n375 333 355 218\n459 vov ozcvqqaqg cx\n499 498",
      "expected_output": "0\n0\n437\n0\n0\n0\n0\n0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "226 444\nftomf m 143\n159\n304 292\n460 410\n406 133 124 355\n148 fmiqy zd yuy\n195 138",
      "expected_output": "0\n0\n159\n0\n0\n0\n0\n0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "150 56\noilx edmi 233\n484\n258 112\n381 207\n313 360 371 449\n279 ved edpsofsg pk\n471 329",
      "expected_output": "0\n0\n484\n0\n0\n0\n0\n0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "477 62\nzyulo bawbuy 407\n78\n401 140\n58 205\n221 443 392 283\n279 lby obnwexj wezbs\n180 229",
      "expected_output": "0\n0\n78\n0\n0\n0\n0\n0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "397 193\nmlnm suk 307\n268\n495 456\n262 436\n316 301 331 423\n292 vkcglj kk zoa\n209 119",
      "expected_output": "0\n0\n268\n0\n0\n0\n0\n0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\nakyhme ilsp 1000\n1000\n1000 1000\n1000 1000\n1000 1000 1000 1000\n1000 mkdjzb rcrthbjjxs m\n1000 1000",
      "expected_output": "0\n0\n1000\n0\n0\n0\n0\n0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\ntsppz ydi 1000\n1000\n1000 1000\n1000 1000\n1000 1000 1000 1000\n1000 fdptbii nedpuclihl bbe\n1000 1000",
      "expected_output": "0\n0\n1000\n0\n0\n0\n0\n0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 999\ne t 999\n999\n999 999\n999 1000\n2 999 1000 1\n1000 bxnbjf m inmy\n2 1000",
      "expected_output": "0\n0\n999\n0\n0\n0\n0\n0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 2\nosocyc j 2\n1\n999 2\n2 1000\n1 999 1000 1000\n2 ibevdmc brbrzrr zt\n1 1000",
      "expected_output": "0\n0\n1\n0\n0\n0\n0\n0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:51",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:17"
}
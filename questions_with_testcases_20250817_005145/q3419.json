{
  "problem_code": "problems",
  "title": "Making A Budget",
  "tags": [],
  "text": "A company uses temporary employees (“temps”) to handle its varying workloads. By doing so, it avoids having\r\nto pay for benefits normally provided to its permanent employees. However, the company must pay an\r\nemployment agency a fixed fee for each temp they hire, as well as paying the temp a fixed amount of\r\nseverance pay when they are terminated – in addition, of course, to the monthly salary each temp receives.\r\nThe company has a good understanding of when it needs temporary workers, and how many such workers it\r\nwill require each month. Depending on the fee paid to the employment agency, the temporary worker’s\r\nsalary, and the severance pay, it may make sense to retain an unneeded worker for one or more months if\r\nit’s known that they will be needed again in the future.Let’s consider an example. Suppose we know that in March the company will need 10 temps, in April they’ll\r\nneed 9, and in May they’ll need 11. Suppose a temp earns $500 per month, that the employment agency\r\nreceives $400 for each temp hired, and $600 is paid as severance to each temp that is terminated. If the\r\ncompany employs just the minimum number of temps required, then their payments will be as follows (we\r\nignore the cost of terminating all employees at the end of the last month):The total cost to the company is $20,400. But suppose they did not terminate the unneeded temp at the\r\nend of March, but just let that person remain employed. They would then save $400 in employment agency\r\nfees (since they’d need to hire just one additional temp for May), $600 in severance pay, and only have to\r\npay the temp worker $500, for an overall savings of $500.In this problem you are given, as input, the number of months for which the company is to plan its temp\r\nworker budget, the cost of hiring and firing a temp worker, the temp worker’s monthly salary, and the\r\nrequired minimum number of workers needed each month. You are to determine the minimum cost to the\r\ncompany to have at least the required minimum number of workers on hand each month. Assume there are\r\nno temporary workers on hand before the first month, and that the cost of terminating the workers at the\r\nend of the last month is not to be included in the cost. You may assume that the planning interval will be no\r\nlonger than 24 months, and the hiring cost, severance pay, and monthly salary for each temp worker is\r\ngreater than zero.InputThere will be multiple cases to consider. The input for each case begins with an integer N, the number of\r\nmonths for which planning is required (never larger than 24). This is followed by three integers giving the\r\ncost of hiring a worker, the worker’s monthly salary, and the severance pay for a terminated worker. Finally\r\nthere will appear N integers giving the required minimum number of workers needed in each month. The last\r\ncase will be followed by a zero.OutputFor each input case, display the case number (1, 2, …) and the minimum cost to the company. Use the format\r\nshown in the examples below.ExampleInput:3 400 500 600 10 9 11\r\n8 400 600 600 11 9 10 14 9 9 13 15\r\n0Output:Case 1, cost = $19900\r\nCase 2, cost = $66600",
  "sample_input": "Input:3 400 500 600 10 9 11\r\n8 400 600 600 11 9 10 14 9 9 13 15\r\n0Output:Case 1, cost = $19900\r\nCase 2, cost = $66600",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/MKBUDGET",
  "scraped_at": "2025-08-17 00:34:28",
  "test_cases": [
    {
      "input": "3 400 500 600 10 9 11\r\n8 400 600 600 11 9 10 14 9 9 13 15\r\n0",
      "expected_output": "Case 1, cost = $19900\r\nCase 2, cost = $66600",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4 2 8 6 2 10 7\n8 8 10 2 8 7 9 10 1 5 2 8\n4",
      "expected_output": "0\n0\n4",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "10 7 3 8 9 3 9\n9 8 10 6 1 9 9 6 9 5 2 6\n4",
      "expected_output": "0\n0\n4",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "1 9 4 1 5 8 3\n3 9 9 4 9 7 2 4 7 5 4 7\n3",
      "expected_output": "0\n0\n3",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "90 14 7 25 87 57 12\n83 78 48 66 28 96 46 35 61 89 46 89\n90",
      "expected_output": "0\n0\n90",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "11 55 79 60 25 82 70\n90 100 78 73 81 81 39 96 87 18 16 12\n72",
      "expected_output": "0\n0\n72",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "44 39 75 18 44 69 48\n14 96 71 21 77 79 97 46 65 82 77 74\n59",
      "expected_output": "0\n0\n59",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "66 73 54 34 45 30 74\n24 38 69 18 25 8 20 100 35 58 48 25\n91",
      "expected_output": "0\n0\n91",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "60 49 60 18 77 61 74\n77 23 68 11 31 35 54 22 11 54 7 76\n79",
      "expected_output": "0\n0\n79",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "252 155 95 304 224 53 317\n67 425 66 390 498 427 374 447 417 379 145 344\n460",
      "expected_output": "0\n0\n460",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "444 219 490 390 126 214 57\n234 380 446 481 93 222 305 424 98 79 221 311\n422",
      "expected_output": "0\n0\n422",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "407 495 414 482 385 218 131\n226 425 138 480 428 149 359 60 264 490 308 129\n314",
      "expected_output": "0\n0\n314",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "194 483 354 493 256 376 332\n149 140 330 497 242 271 369 463 138 328 89 412\n67",
      "expected_output": "0\n0\n67",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "349 457 101 64 108 127 460\n428 92 498 292 173 111 428 287 162 253 481 248\n226",
      "expected_output": "0\n0\n226",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "397 185 408 239 229 340 209\n440 63 301 448 147 320 410 327 387 237 166 426\n74",
      "expected_output": "0\n0\n74",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "279 296 273 159 349 400 77\n223 335 246 133 313 493 96 91 258 413 198 99\n85",
      "expected_output": "0\n0\n85",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000",
      "expected_output": "0\n0\n1000",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000",
      "expected_output": "0\n0\n1000",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 999 999 999 999 1000\n1000 1 999 2 999 1000 999 1 1000 1 999 2\n2",
      "expected_output": "0\n0\n2",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "999 2 999 999 2 1000 999\n1 1 1 2 1000 1 2 999 1 1000 999 1\n1",
      "expected_output": "0\n0\n1",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:56",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:38:07"
}
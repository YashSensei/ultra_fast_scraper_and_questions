{
  "problem_code": "problems",
  "title": "Another understanding of Super Dice Game",
  "tags": [],
  "text": "When we were trying to solve the problem SDGAME, we got a misunderstanding of it. We didn't get AC until we were told the original meaning. But we think our kind of understanding is also interesting and is worthy of doing. So enjoy the problem.Alice and Bob are playing a game. The game consists of a circular track of M (2 <= M <= 1,000,000,000) cells labeled 0 through M - 1. Initially both players start at cell 0. The game progresses by having each player take turns rolling one of N (1 <= N <= 10,000) 'super-dice' labeled 0 through N - 1. The actual mechanics of the 'super-dice' is not very well understood; however, it is known that they will only ever turn up a number between 0 and 1,000,000,000 inclusive after a roll. After rolling the super-dice the number of spaces a player moves is determined by the product of a contiguous subsequence of the values shown on the dice(which are available)(There are special rules for determining the range that vary each move that will not be discussed).If all the values are unavailable, the player moves one space. Iff the number on the dice is more than 1,000,000,000 or less than 0, the dice is unavailable.To make matters more complicated, after any turn if Alice and Bob land on the same cell the value shown on all dice(neither available nor unavailable)is multiplied by the label of the cell they are on. Note in this way it is possible for some dice to show numbers greater than 1,000,000,000.After playing this game for a while, Alice and Bob have grown frustrated because the calculations became too difficult. Given the series of R (1 <= R <= 100,000) dice rolls and ranges, help Alice and Bob determine their position after each move. Assume that all dice start out showing 1and all dice are available.InputThe first line contains R, N, and M each separated by a space. R lines follow. Each line will contain d v a b separated by a space. d indicates the label of the dice rolled. v indicates the value shown on the dice. a and b indicate the range of dice used to determine the move distance.OutputR lines containing the position of the player that just rolled after their roll.ExampleInput:6 4 4\r\n0 1000000000 1 1\r\n1 999999998 1 1\r\n2 500000000 3 3\r\n0 1 2 2\r\n3 1 0 3\r\n0 6 0 3Output:1\r\n2\r\n2\r\n2\r\n0\r\n0ExplanationFor your assistance, here is the state of the dice after each turn: (* means unavailable)Before all rolls: [1,1,1,1](0,0)After first roll: [1000000000,1,1,1](1,0)After second roll: [1000000000,999999998,1,1](1,2)After third roll: [1000000000,999999998,500000000,1](2,2)All dice multiplied by 2: [*,*,1000000000,2](2,2)After forth roll: [1,*,1000000000,2](2,2)All dice multiplied by 2: [2,*,*,4](2,2)After fifth roll: [2,*,*,1](0,2)After sixth roll: [6,*,*,1](0,0)All dice multiplied by 0: [0,0,0,0](0,0)",
  "sample_input": "Input:6 4 4\r\n0 1000000000 1 1\r\n1 999999998 1 1\r\n2 500000000 3 3\r\n0 1 2 2\r\n3 1 0 3\r\n0 6 0 3Output:1\r\n2\r\n2\r\n2\r\n0\r\n0",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/SDGAME2",
  "scraped_at": "2025-08-17 00:34:28",
  "test_cases": [
    {
      "input": "6 4 4\r\n0 1000000000 1 1\r\n1 999999998 1 1\r\n2 500000000 3 3\r\n0 1 2 2\r\n3 1 0 3\r\n0 6 0 3",
      "expected_output": "1\r\n2\r\n2\r\n2\r\n0\r\n0",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "6 8 9\n7 5 3 1\n2 1 6 1\n4 1 9 1\n5 1 8 5\n2 4 7 8\n9 9 2 9",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "6 9 8\n7 6 8 10\n1 6 5 9\n6 6 8 2\n9 1 1 10\n3 1 2 9\n9 9 10 2",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "1 9 8\n3 5 8 1\n2 1 8 6\n1 5 9 6\n10 9 10 1\n1 5 6 3\n4 5 2 3",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "26 80 96\n17 15 52 68\n67 80 39 15\n97 59 41 83\n60 71 62 64\n44 72 29 61\n82 52 59 85",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "7 69 82\n74 13 28 58\n100 98 11 98\n21 86 6 96\n32 96 10 89\n60 1 12 7\n66 64 7 46",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "20 55 66\n89 59 77 68\n85 50 51 11\n91 66 92 20\n38 42 69 39\n52 49 92 10\n58 86 29 77",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "57 5 93\n31 16 28 64\n88 12 4 46\n12 11 100 50\n15 66 4 11\n17 20 74 67\n11 98 26 24",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "75 24 34\n72 80 58 88\n36 13 67 48\n75 5 73 52\n38 40 48 2\n32 25 46 32\n55 78 28 9",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "241 416 96\n380 128 183 284\n410 177 420 495\n121 309 281 287\n424 390 396 434\n111 368 218 81\n411 87 325 409",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "425 234 177\n372 433 438 328\n104 169 313 252\n127 83 457 191\n259 279 54 75\n73 495 91 191\n260 363 102 445",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "117 382 194\n171 316 122 246\n411 199 119 262\n110 253 301 73\n143 448 90 205\n463 410 266 397\n107 224 214 326",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "406 396 50\n203 264 305 206\n74 348 336 81\n248 277 318 148\n146 283 279 147\n361 97 440 251\n359 464 170 99",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "268 211 194\n143 227 340 219\n208 268 290 182\n427 409 473 292\n478 55 367 260\n424 239 100 54\n500 334 319 54",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "117 80 411\n129 103 158 380\n107 452 435 106\n386 373 382 460\n110 363 51 356\n497 119 57 313\n330 386 324 73",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "209 276 258\n131 78 290 397\n403 239 331 267\n476 248 351 129\n258 440 321 451\n343 217 133 402\n368 162 190 390",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000\n1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1 999\n1 2 1 1000\n1 999 1 2\n1 1000 2 999\n1 1 1000 999\n999 1000 1000 1\n1000 2 1 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "999 2 999\n1 2 2 2\n999 1000 1000 1000\n2 2 1000 999\n2 1 1000 2\n2 1000 999 999\n1 999 999 999",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:55",
  "total_test_cases": 20
}
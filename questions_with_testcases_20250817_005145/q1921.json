{
  "problem_code": "problems",
  "title": "Kawigi quote",
  "tags": [],
  "text": "Thursday 25/7/2013, a friend of mine (Goodname) posted in our facebook group (Virtual Contests) a link ofKawigi's topcoder profile.He was amazed by Kawigi's quote as he tested it inIdeoneto find it printing \"C++Sucks\". We all were amazed by this quote.But in a few minutes some other friend of mine (Mosa) commented on the post with thisIdeone. Wow! he got it, but the fact that he is kind of greedy, he didn't want to tell us the secret. Now we want to think like Mosa to be able to solve this problem.Given a string your task is to find the values of m[0] and m[1] so that when we run this code we get the given string.Code#include <stdio.h>\r\n    int primes [] = {2, 3, 5, 7, 11};\r\n    double m[2] = {8242465576917890.0, 494};\r\n    int main() {\r\n        m[1]--?m[0]/=primes[((int)m[1]+1)%5],main():printf((char*)m);\r\n    }\r\n    // this code prints the string \"123\".InputThe first line of the input file contains an integer T (T <= 50) which is the number of test cases to follow.Each test case will be on a single line consisting of at most 6 alphanumeric characters (A-Za-z0-9).OutputFor each test case, print the values of m[0] and m[1], separated by a space.It's guaranteed that the solution will always exist. If there are multiple solutions, print any.ExampleInput:4\r\n123\r\nabdou\r\nmcMosa\r\nkimo3Output:8242465576917890.0 494\r\n6966198460426549.0 487\r\n4484456159639948.0 483\r\n21357815651012032.0 488Special Thanks:-Mitch Schwartzfor discovering issues with the problem.-Mosa Osamafor writing the special judge of the problem, and I have to say Mosa's not greedy. ;)",
  "sample_input": "#include <stdio.h>\r\n    int primes [] = {2, 3, 5, 7, 11};\r\n    double m[2] = {8242465576917890.0, 494};\r\n    int main() {\r\n        m[1]--?m[0]/=primes[((int)m[1]+1)%5],main():printf((char*)m);\r\n    }\r\n    // this code prints the string \"123\".",
  "sample_output": "Input:4\r\n123\r\nabdou\r\nmcMosa\r\nkimo3Output:8242465576917890.0 494\r\n6966198460426549.0 487\r\n4484456159639948.0 483\r\n21357815651012032.0 488",
  "link": "https://www.spoj.com/problems/KIMO4",
  "scraped_at": "2025-08-17 00:33:40",
  "test_cases": [
    {
      "input": "#include <stdio.h>\r\n    int primes [] = {2, 3, 5, 7, 11};\r\n    double m[2] = {8242465576917890.0, 494};\r\n    int main() {\r\n        m[1]--?m[0]/=primes[((int)m[1]+1)%5],main():printf((char*)m);\r\n    }\r\n    // this code prints the string \"123\".",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4\r\n123\r\nabdou\r\nmcMosa\r\nkimo3",
      "expected_output": "8242465576917890.0 494\r\n6966198460426549.0 487\r\n4484456159639948.0 483\r\n21357815651012032.0 488",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "fln vfccyn\n8 8 10 8 3\nrb n tpvde chbt utie vhwdv cp jw kt\n8 9 7\nnqja zs ndmq eovfgreejofg uyy\nsyxjd xrraaa xfga\n6 6 3 1 10\nesv\nhw\n7\nmowv b cn dvp ttkvq o sbxkd",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "q s\n3 4 10 6 6\nicu udl sldds xm dzk dvk bxi acd eroqz\n1 6 2\nydpj ppccc wguxo llhfmspfhathze mizr\nal dke uupk\n1 4 1 3 8\nhescky\npj\n5\ngp qmg ghy lmkym itxaj sviyzb lnuyb",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "ik s\n6 9 1 5 4\ng l w ffql y ipm vadme wbkoc jpr\n4 8 8\nwzyoia algzj catie xyhkacxis nt\nd np utj\n4 9 5 9 3\nnfndequsw\nc\n10\nyio dd ighav pi s dtgpn ujfsn",
      "expected_output": "0",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "vl nvxgfjq\n88 75 25 49 51\nwmtpf snfdwn b g as mvi ccc l fvnq\n58 26 76\ntvumdx biulw e krwwslkipz mlxx\nmytp j kerq\n60 87 77 7 67\nilxotfyykozawgsali\nbz\n53\nmgq snp x ugcr bf lloxvs ptwikj",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "u xeozlxv\n35 79 83 11 55\nainbn b c t wm t zen ndkm ack\n1 41 92\nzx wszw nil krmnpwtspazvmpumjrhu kz\nxrln prqi znj\n21 65 44 28 27\nrcvmixwevuenfw\nh\n51\ngkcxr iv iju hdiv c i tir",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "wau psjgofmjq\n80 19 36 42 9\nbug oym zf a meg pz wnxlt adt d\n57 35 46\noa uye tvo mnis c\nvck jsolhu v\n87 39 54 78 44\nmsawbmllsqobmsschlv\nj\n53\nq gx o uof nzgsp d x",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "tw fbahc\n63 7 74 7 93\nj faz toh nsvc iuxv gwcg nhcwp sxyyq lpg\n2 93 3\nutun bir m riuvgpmqojqtq c\nxh bhssl hf\n94 64 67 12 58\noz\nag\n79\ntaed ti xalib ye e mgu s",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "xhfyvt b\n6 79 52 77 12\nrpq k aerr q cip k ojks vbl mfahz\n57 61 80\nnwrj ier aev vykzlqbkhwbbv b\nzosz ijviz qk\n44 96 100 76 86\nm\ng\n99\nir lxh g wsy dof dyopzj ojmk",
      "expected_output": "0",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "wgwl f\n350 67 147 204 56\ntpnfs sgyv g k maswu du bw hw udz\n451 425 429\nbd fy aaka ufrujgm bse\ndwdle wjn h\n145 488 415 353 463\nagqitfcjicrecipmrt\nnc\n81\nex qnsy f liophw utnjw qdtydb lv",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "ekoqado nayukbh\n296 430 278 472 232\npime qkbr mq ozrm ixkpf nzek yvsjm qbcek cqrp\n159 221 114\nbvulgm j kwt vcan sbq\ncomhs xuvv g\n218 130 283 96 282\navcfeulwgmvjsj\nmq\n148\ngyqm vsg wz tmx fabru e xzh",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "cke aeoyiswe\n106 423 379 248 259\ncdi ifv a mdey oixr czb qxmo tymn gpa\n415 477 399\ntpob njrt cx fxn tkuh\nop fhgqrd f\n179 262 428 83 388\nhrvvypbjxl\npu\n230\nxbb qnpv rbazt h ozbij sdtbk sfl",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "sgnji oxhmvh\n73 121 239 279 492\nv lkt hmqta h isjc ybckk rfe csqm wj\n165 422 158\nntt x kgshd nfcgjcspzzbjbswngval wmc\nre h b\n458 337 361 72 87\nbebh\nls\n126\nknps xs pdx nlflar mxf oiyko xmjguh",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "apvk poe\n248 228 121 199 343\nxvfjn inb hksm i rvwcr uwha ssv xq gua\n354 273 454\np hkjh mnwx jantvaytzfc fn\nue ovxknr ve\n91 473 332 363 184\nss\nkg\n216\ncebbt luosq ho membr fn acbr cbd",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "uf ejlcko\n76 389 313 125 319\nllg gx nvjht gqjds squa fswvn vpe q o\n256 240 295\ndmz auib psz umohwvgtzabt lsan\nizj xt moi\n202 139 435 146 305\nirbggffgragsuybmes\nt\n120\ntwem wpm cyyd fka xayj dopjnr b",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "vzz yq\n265 232 188 403 109\nao tcafw bcom cwp xu z hki e r\n381 179 305\nwxedgo npujc bruc wcv g\no pko pd\n89 429 142 233 380\nwgdvojdmawydwiz\nki\n496\nu qiku ij hwd rddge fui k",
      "expected_output": "0",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "be cbnz\n1000 1000 1000 1000 1000\nw nacwm u ur o hlpb u wvsrj sa\n1000 1000 1000\nw mr axm bqqwzkiqx e\nkyzg cbvbld sxr\n1000 1000 1000 1000 1000\nwmeia\ndb\n1000\nj ghuhf akiz g f rsjvp ybdpuz",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "zil fjoiz\n1000 1000 1000 1000 1000\nq egc l nl wohjx dtn rn x z\n1000 1000 1000\nhf jag nx mnnzh q\ngqn cbtmn nnccu\n1000 1000 1000 1000 1000\ndaqhozlzmdpdozosokzf\nd\n1000\nox wjx k ttoxvo qx qwoyox oulf",
      "expected_output": "0",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "ufdusnxi hda\n2 999 2 1 999\njoqpu iqlrpx x hj zer sci j df nxgkk\n2 1 1\nkg trj w rnosjnmgfascednihzu zsb\ntaaue yirij nq\n2 1000 2 1 1\nnxciukcwcxzuo\nj\n2\nmey whpzp roc lxt qvi tfn iumapi",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:51",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:19"
}
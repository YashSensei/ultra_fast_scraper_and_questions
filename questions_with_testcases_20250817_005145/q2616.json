{
  "problem_code": "problems",
  "title": "Homecoming",
  "tags": [],
  "text": "It was a tough battle but the humans won it comprehensively in the end. It was made possible due to combined efforts of both the human tribes but the 2ndtribe wants to take all the credit and rule the world by killing the first tribe. Now that the war has ended, the tribes would be returning to their cities. The warriors would be travelling over the bridges built earlier, in small groups. It is then that the 2ndtribe wants to execute their plan. The king of the 1sttribe knows this and wants to ensure that this doesn’t happen. So he puts a constraint, that it should never happen at any time that the number of people of the 2nd tribe outnumber the number of people of the 1st tribe either on both sides or on the bridge. Also, it is night time and a torch needs to be carried for travel to be possible. But unfortunately, there’s just one torch available and hence at least someone would have to come back every time, with the torch. To make matters worse, there’s a restriction on the number of warriors that can cross the bridge in one pass.InputThe first line of input contains test cases t (1 ≤ t ≤ 50). Then t lines follow, one for each test case. It contains three integers, n (1 ≤ n ≤ 100) the number of warriors of first tribe, m (1 ≤ m ≤ 100) the number of warriors of second tribe and c (1 ≤ c ≤ 50) the number of warriors that can cross the bridge in a single pass.OutputDisplay a single line for each test case, containing a single integer which gives the total number of times the bridge is crossed. A round trip counts as 2. Output -1 if travel is not possible with the given constraints.ExampleInput:3\r\n3 3 2\r\n4 4 2\r\n100 100 20Output:11\r\n-1\r\n21",
  "sample_input": "Input:3\r\n3 3 2\r\n4 4 2\r\n100 100 20Output:11\r\n-1\r\n21",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/HOMEC",
  "scraped_at": "2025-08-17 00:34:03",
  "test_cases": [
    {
      "input": "3\r\n3 3 2\r\n4 4 2\r\n100 100 20",
      "expected_output": "11\r\n-1\r\n21",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5\n5\n10\n4\n4\n8",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "4\n7\n4\n5\n2",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n10",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "6\n64441798\n87668643\n78505502\n21505189\n17416039\n38957212",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "18\n60966784\n50670735\n81922091\n67463630\n15564293\n11646500\n71113572\n24405447\n57208717\n75276390\n36411038\n79961916\n55935821\n93316350\n20240902\n97198863\n44734546\n1092241",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "15\n82168583\n80834499\n33683070\n11604385\n8508142\n29638525\n478554\n89765067\n74415358\n40148057\n95396122\n47541094\n96120545\n5603476\n7877540",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "10\n32934829\n46678963\n23306257\n84931682\n13214351\n56900339\n61122180\n51743652\n85051027\n90825444",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "20\n57872866\n90030096\n24489020\n88375856\n69862260\n98293810\n4140682\n82086933\n73749251\n95732169\n75737179\n5853843\n53321734\n50476564\n16496131\n72363694\n64646663\n45857295\n16258094\n3310722",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "61\n99954\n15353\n47088\n96210\n97711\n82973\n25681\n14523\n39877\n30263\n3212\n14810\n88337\n3271\n57299\n54376\n67125\n53106\n23904\n99913\n64591\n71883\n69591\n9035\n62725\n97993\n50921\n82973\n86259\n40945\n66773\n34955\n28482\n10655\n28277\n10554\n89331\n20801\n65510\n96220\n28431\n65405\n31673\n68553\n48969\n85094\n70768\n21669\n10897\n63532\n87918\n35760\n65657\n89104\n83970\n92004\n45226\n11064\n99407\n97341\n56953",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "38\n45650\n44467\n13866\n51010\n44549\n13389\n15395\n74152\n63863\n50164\n4205\n11234\n25280\n756\n37693\n71471\n75032\n21548\n33307\n92226\n9106\n14835\n80918\n98562\n33045\n31891\n46243\n96021\n69078\n7948\n86899\n75431\n53733\n73719\n90080\n95628\n29562\n94461",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "54\n80185\n58469\n25309\n19113\n66971\n82934\n53400\n14791\n80659\n33528\n6229\n17905\n9359\n2769\n91409\n29585\n48108\n1401\n69036\n32268\n86154\n74465\n53467\n71817\n43630\n19829\n28891\n2915\n9476\n4947\n41053\n88657\n82447\n70714\n7052\n40278\n78778\n18533\n48380\n74329\n76583\n83923\n57802\n6050\n71165\n50633\n62190\n32505\n20741\n17075\n99560\n45870\n40444\n51531",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "92\n24190\n66223\n34649\n35696\n47704\n26018\n83449\n38191\n63337\n7346\n74330\n16209\n85590\n8893\n40092\n65896\n42920\n68517\n72740\n76795\n80411\n35994\n73205\n65476\n57716\n84020\n1070\n24314\n18287\n36426\n82337\n50766\n93196\n313\n1147\n19654\n72464\n47393\n48565\n2515\n32070\n93215\n72949\n90533\n27860\n79045\n22022\n95171\n12662\n26972\n44041\n83989\n17635\n36997\n44933\n14063\n9393\n27400\n44480\n91019\n76545\n95694\n91257\n44378\n29110\n46653\n2285\n40051\n17901\n65199\n76789\n99974\n86957\n18188\n17942\n23076\n71770\n21168\n52022\n49970\n40183\n62526\n98748\n60384\n67951\n71228\n49886\n90921\n82254\n68498\n78908\n24551",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "41\n80502\n74424\n72483\n73991\n90130\n89482\n23119\n68991\n2298\n17085\n27367\n16370\n70150\n49288\n9908\n62386\n19814\n64699\n93757\n78281\n34588\n13249\n26886\n43504\n11347\n76099\n91460\n4284\n68554\n35177\n98915\n27210\n71358\n13827\n7599\n84358\n67434\n37443\n79040\n78586\n2009",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "60\n32623\n51116\n92159\n14704\n24686\n33097\n12987\n92039\n35217\n23874\n3458\n61606\n22733\n19985\n29808\n20661\n57200\n52105\n22344\n43431\n82656\n94470\n71520\n16365\n74127\n18058\n12631\n59178\n94230\n63875\n1177\n3554\n97079\n78917\n1074\n42494\n75730\n504\n61214\n32366\n98939\n80575\n67010\n68917\n35276\n22853\n13711\n86252\n30760\n54013\n66960\n13334\n93236\n97105\n6003\n12494\n13436\n95536\n35125\n25012",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "84\n80053\n39052\n53381\n54252\n56519\n75414\n59387\n36930\n3548\n19505\n80923\n79681\n32172\n2855\n46635\n91765\n66182\n5534\n98786\n66056\n25706\n14501\n86891\n34696\n74681\n12528\n31012\n17865\n62147\n29724\n78650\n76358\n87058\n41066\n94914\n51497\n46401\n86120\n28068\n42726\n79260\n1994\n87836\n54015\n29256\n81201\n54155\n837\n88314\n43845\n77312\n55587\n74059\n17750\n174\n9159\n46123\n36346\n66985\n64955\n54207\n17110\n60411\n31488\n43477\n88472\n40008\n63230\n27269\n15914\n29393\n47241\n262\n55439\n7782\n73964\n40732\n10249\n53269\n92125\n25952\n94060\n42202\n50174",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "100\n39061174\n29355292\n98331716\n52621715\n24989450\n30835307\n76749332\n78099810\n53972838\n85094476\n73958305\n57922227\n35653078\n87417260\n72364486\n74273973\n60381419\n48608256\n22256066\n69870266\n47141841\n53901745\n55467870\n6592393\n24517238\n29319506\n80480984\n90164044\n28660903\n38813118\n27206764\n21404277\n96781664\n8490080\n12057583\n30318392\n27424261\n82327287\n61424955\n86308339\n9143080\n42936253\n51236012\n26621517\n54972950\n6557470\n2425417\n96605286\n77384458\n66165138\n6500819\n91453965\n12550508\n25375400\n95657214\n3581128\n57486272\n14382212\n33974524\n87355162\n92557244\n69447104\n44494407\n44565310\n25544391\n39130501\n9835993\n86616382\n31974076\n33170565\n70858087\n32660170\n42983720\n80718154\n81206310\n83732795\n30350304\n61278966\n13616302\n80005688\n11177682\n97553884\n8896192\n75824997\n76838438\n32114620\n50871273\n15442859\n72730316\n59302388\n75856576\n42174974\n30747429\n49994446\n29935402\n31342712\n27953145\n94436078\n79806573\n62020539",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "100\n18596768\n17132304\n12939743\n30246804\n73167055\n2841660\n56449897\n9321335\n14680420\n72735122\n99353174\n71434999\n22578805\n8164084\n37468490\n64689157\n68802964\n15251358\n80950107\n43281356\n992349\n86032227\n5263673\n25391581\n44210865\n686092\n85930159\n52551940\n92729663\n91676671\n11225238\n96073071\n58899641\n73678289\n48499365\n42055674\n62988170\n22315773\n72259292\n79574712\n85560623\n40787328\n81816368\n78080918\n21717601\n39150382\n57595359\n39698206\n86780696\n766622\n1864980\n16902718\n16260627\n4575284\n37633972\n59389063\n28285662\n50327235\n67979262\n28841416\n44936191\n33875703\n94907916\n24808211\n35335788\n53522139\n17107464\n33701753\n37406538\n36788710\n36589390\n66655558\n10540117\n22012779\n60430369\n37191767\n51190211\n32291494\n10803031\n43581176\n3392962\n86320113\n23579832\n97340664\n20799824\n25031585\n3454176\n32911519\n58754242\n43383126\n48120435\n14086773\n82356601\n1182337\n15417441\n66651419\n65366026\n96775479\n67729733\n80879617",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 100)"
    },
    {
      "input": "2\n51935774\n1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 2)"
    },
    {
      "input": "100\n100000000\n1\n100000000\n33712176\n1\n100000000\n100000000\n1\n31140152\n1\n100000000\n4114637\n24692164\n22886778\n1\n50904656\n72422154\n69884632\n5360952\n25640098\n1\n7388012\n96331155\n1\n47760829\n1\n100000000\n19321508\n1\n1\n47248097\n100000000\n1\n1\n66219266\n1\n74898478\n1\n100000000\n81790369\n10672187\n100000000\n100000000\n1\n100000000\n1\n1\n7721824\n100000000\n67387056\n39695171\n94642889\n1\n1\n53838151\n100000000\n92036036\n58251950\n100000000\n100000000\n1\n1\n100000000\n1\n100000000\n100000000\n60001838\n100000000\n100000000\n100000000\n100000000\n99303425\n1\n100000000\n61160806\n100000000\n1\n1\n1\n1\n100000000\n95365829\n1\n1\n100000000\n1\n1\n1\n1\n54497855\n100000000\n1\n100000000\n7032125\n1553678\n100000000\n9336581\n35121855\n100000000\n88846289",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 100)"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:53",
  "total_test_cases": 20
}
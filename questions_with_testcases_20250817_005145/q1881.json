{
  "problem_code": "problems",
  "title": "Minimum Cost",
  "tags": [],
  "text": "Problem StatementGiven two stringSandT. You can delete a character fromSwith cost 15 and a CharacterTwith cost 30. Your goal is to make the string equal (same). It is not mandatory to delete character.For example: S =aXband T =Yab. Now, if we delete X from S and Y from T, then total cost = 15 + 30 = 45. \r\nAnd S and T will becomeab.Another example: S =ab, T =cd, Now total cost = 15 + 15 + 30 + 30 = 90.Another example: S =abcd, T =acdb, Now total cost = 15 + 30 = 45.InputInput consists of pairs of lines. The first line of a pair contains the first stringSand the second line contains the second stringT. Each string is on a separate line and consists of at most 1,000 characters . The end of input occurs when the first sequence starts with an \"#\" character (without the quotes).OutputFor each subsequent pair of input lines, output a line containing one integer number which the minimum cost to make the string equal (same).Sample Input/OutputSample InputSample Outputaxb\r\nyab\r\nab\r\ncd\r\nko\r\np\r\nabcd\r\nacdb\r\n#45\r\n90\r\n60\r\n45___________________________________________________________________________________________________________Problem Setter: Shipu Ahamed, Dept. of CSEBangladesh University of Business and Technology (BUBT)",
  "sample_input": "axb\r\nyab\r\nab\r\ncd\r\nko\r\np\r\nabcd\r\nacdb\r\n#",
  "sample_output": "45\r\n90\r\n60\r\n45",
  "link": "https://www.spoj.com/problems/MC",
  "scraped_at": "2025-08-17 00:33:35",
  "test_cases": [
    {
      "input": "axb\r\nyab\r\nab\r\ncd\r\nko\r\np\r\nabcd\r\nacdb\r\n#",
      "expected_output": "45\r\n90\r\n60\r\n45",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "eb\npmegg\nt\neqkb\nl\nz\nazs\nppqicgo\nsf",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "yos\nbjjd\nx\nhnx\nwq\ngk\npubrda\nurmndwdw\nu",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "n\ndkkzo\nrv\nhs\nen\nyv\nq\nubovsuw\nb",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "at\nyvkkpn\npz\nbeb\nwou\nhd\nwhc\nxeia\nf",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "dqovbl\nthu\nm\ngqxe\ndzzb\nli\nrup\ntdtbmtm\nkd",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "wex\nbwcxy\ncf\nog\nie\nhb\nzjegwpx\nfii\ngw",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "zksczw\ntn\nejvv\nk\nrv\nb\nnilzgnh\ncmn\nv",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "kudjju\nnk\nyo\nvno\nak\nzq\nhghqgyi\niqnz\nes",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "mtnhgz\nhpx\nx\nin\nbq\ny\nebrkjhfd\nwymegnky\no",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "dskltb\ngetjq\nj\ng\nu\nku\necfdcuo\nvfywye\nm",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "bdyg\nwfjuiz\nellz\ntqx\nety\ny\nqm\ncin\nx",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "v\nhqoqvi\ndjj\nhk\nu\ns\nqioprhv\nvvs\nlp",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "yyioc\njyao\ndct\nkfde\ni\nm\naqy\nvbxsp\no",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "gm\nckzkf\nnhgy\np\nxe\nn\nvdixku\nrkpdh\nnn",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "xglh\nz\ngb\ndhr\nge\nbg\njbrkupyt\ndmb\nl",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "eo\njc\ngvqg\nteb\nec\ne\nfzlc\nect\nnz",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "phkqwy\nu\nn\ntv\nbbl\nxh\nxcuhax\ni\nd",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "fosa\ntjnczu\nia\nv\nam\nj\naoehya\nwcoisfy\nqu",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "v\nudfga\ns\ney\nmap\nl\nhnhw\noxuyus\nu",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:51",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:18"
}
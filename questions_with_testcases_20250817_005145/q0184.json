{
  "problem_code": "problems",
  "title": "Hierarchy",
  "tags": [],
  "text": "A group of graduated students decided to establish a company; however, they don't agree on who is going to be whose boss.Generally, one of the students will be themainboss, and each of the other students will have exactly one boss (and that boss, if he is not the main boss, will have a boss of his own too). Every boss will have a strictly greater salary than all of his subordinates - therefore, there are no cycles. Therefore, the hierarchy of the company can be represented as a rootedtree.In order to agree on who is going to be who's boss, they've chosen K most successful students, and each of them has given a statement: I want to be the superior of him, him, and him (they could be successful or unsuccessful). And what does it mean to be a superior? It means to be the boss, or to be one of the boss' superiors (therefore, a superior of a student is not necessary his direct boss).Help this immature company and create a hierarchy that will satisfy all of the successful students' wishes. A solution, not necessary unique, will exist in all of the test data.InputIn the first line of input, read positive integers N (N ≤ 100 000), total number of students, and K (K < N), the number of successful students. All students are numbered 1..N, while the successful ones are numbered 1..K.Then follow K lines. In Athof these lines, first read an integer W (the number of wishes of the student A, 1 ≤ W ≤ 10), and then W integers from the range [1, N] which denote students which student A wants to be superior to.OutputOutput N integers. The Athof these integers should be 0 if student A is the main boss, and else it should represent the boss of the student A.ExampleInput:4 2\r\n1 3\r\n2 3 4Output:2\r\n0\r\n1\r\n2Input:7 4\r\n2 2 3\r\n1 6\r\n1 7\r\n2 1 2Output:4\r\n1\r\n1\r\n0\r\n4\r\n2\r\n3",
  "sample_input": "Input:4 2\r\n1 3\r\n2 3 4Output:2\r\n0\r\n1\r\n2",
  "sample_output": "Input:7 4\r\n2 2 3\r\n1 6\r\n1 7\r\n2 1 2Output:4\r\n1\r\n1\r\n0\r\n4\r\n2\r\n3",
  "link": "https://www.spoj.com/problems/MAKETREE",
  "scraped_at": "2025-08-17 00:33:13",
  "test_cases": [
    {
      "input": "4 2\r\n1 3\r\n2 3 4",
      "expected_output": "2\r\n0\r\n1\r\n2",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "7 4\r\n2 2 3\r\n1 6\r\n1 7\r\n2 1 2",
      "expected_output": "4\r\n1\r\n1\r\n0\r\n4\r\n2\r\n3",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "1 4\n4 4\n4 8 2",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "9 4\n10 10\n2 2 3",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "6 9\n3 1\n7 2 8",
      "expected_output": "0",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "93 92\n37 46\n36 13 4",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "86 7\n25 24\n57 68 36",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "75 81\n17 31\n77 48 7",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "60 47\n1 69\n99 18 32",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "5 88\n2 71\n16 98 74",
      "expected_output": "0",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "37678 9656\n18081 17682\n15449 7029 14183",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "48514 33342\n11143 36263\n21867 33971 11354",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "14302 41394\n41665 14298\n10219 31822 49294",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "43893 10904\n38971 42167\n24097 39352 21631",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "6961 38467\n13320 12995\n48247 40935 9883",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "16524 41541\n45964 14953\n11077 44314 39238",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "11966 17309\n13675 31253\n45264 42025 26842",
      "expected_output": "0",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "100000 100000\n100000 100000\n100000 100000 100000",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "100000 100000\n100000 100000\n100000 100000 100000",
      "expected_output": "0",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "100000 99999\n1 100000\n99999 100000 99999",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:46",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:36:25"
}
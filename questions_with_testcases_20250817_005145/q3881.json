{
  "problem_code": "problems",
  "title": "Nested Palindromes",
  "tags": [],
  "text": "Palindromes are numbers that read the same forwards and backwards. Your friend Percy recently became interested in a special kind of palindrome that he calls aNested Palindrome. ANested Palindromemeets three conditions:The number is a palindrome.Split the number in the middle. The first half of the digits of the number is also aNested Palindrome. If the number has an odd number of digits, don’t consider the middle digit as part of the first half.No two adjacent digits are the same.Percy says that he has written aNested Palindromewith no leading zeros on a slip of paper. Next, Percy says that he has erased some of the digits in the number and replaced those digits with question marks. He asks you to think about all possible numbers, in increasing order, that can fill those digits and could possibly form the number Percy wrote. Of course, Percy may not be telling the truth about having written aNested Palindromein the first place.Percy tells you that the number he wrote is thekth number of this potentially large list. Your task is to find thatkth number.InputThere will be several test cases in the input. Each test case will consist of two lines. The first line will contain an integerk(1 ≤k≤ 1018), which is the position in the ordered list you must find. The second line contains a string of length 1 to 10,000, consisting only of digits (‘0’ to ‘9’) and question marks (‘?’). Input is terminated by a line with a single0.OutputFor each test case, output theNested Palindromethat Percy is looking for. If that number does not exist, or if the string cannot form aNested Palindrome, output-1. Output no spaces, and do not separate answers with blank lines.ExampleInput:11?11?3?1?1?55???551?130?00Output:101131212707-1-1",
  "sample_input": "Input:11?11?3?1?1?55???551?130?00Output:101131212707-1-1",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/NESPALIN",
  "scraped_at": "2025-08-17 00:34:24",
  "test_cases": [
    {
      "input": "11?11?3?1?1?55???551?130?00",
      "expected_output": "101131212707-1-1",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "8 4 3 5 9 10 3 4 8\nvqauptdzsgf",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "3 9 10 10 8 6 3 5 4\nlygpya",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "6 8 7 1 8 2 5 3 1\nflvjlzizmtbbvavortwm",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "37 88 35 67 60 71 97 71 90\nlxgyntrvz",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "24 27 42 37 22 12 26 50 42\nnl",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "19 80 50 75 65 76 50 73 34\nan",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "10 23 84 55 32 17 92 53 88\nwdp",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "85 70 95 59 20 93 7 59 86\nxts",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "479 129 159 319 70 300 493 393 207\nglwkwmeinkkqik",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "115 130 157 479 460 492 238 256 388\nf",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "386 324 438 108 334 65 200 221 425\nupzn",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "490 311 117 431 134 322 77 429 77\nymqcgrk",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "286 221 150 61 456 229 183 321 52\ncyxnhkcobu",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "469 152 173 246 90 491 221 369 70\nxvibkudriknh",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "404 63 243 70 131 224 114 491 404\nfmvgnnnsgrcnte",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000\nzxrsnudydfuyipaqw",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000\ntskysgrrzeqezgznmb",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 2 1000 999 1 999 1000 2 999\nwpmckrlyjvnpinwidiv",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 2 1000 2 1 1000 1000 999 1000\nipzspdr",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:58",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:38:22"
}
{
  "problem_code": "problems",
  "title": "Caper Pizza",
  "tags": [],
  "text": "Brunno Doiuna is very fond of caper pizzas, which he always likes to share with his girlfriend. As she also loves capers, it is of the utmost importance, in order to avoid unnecessary quarrels, to split the pizza into two equally-sized slices in such a way that each half contains exactly the same number of capers. However, most caper pizzas also contain a number of peppercorns, and neither Brunno nor his girlfriend likes them. Therefore, it is also crucial that each of the two halves contain the same number of peppercorns. As you can easily observe, depending on the position of capers and peppercorns on the pizza, it is not always possible to make a straight-line cut into the pizza in such a way that the two slices have the same area and the same number of capers and peppercorns lie in each resulting piece. Your task is to design a program to decide if it is possible to make such a cut or not, knowing the positions of capers and peppercorns.InputWe will assume that the pizza is circular and is centered at the origin, and is big enough to contain all capers and peppercorns. We also assume that there is an even number of capers and an even number of  peppercorns, and that no cut goes through any of the capers or pepper balls. Additionally, no pair of peppercorns, capers, or a peppercorn and a caper are aligned with the origin, or form an angle of less than 10−6degrees with the origin.There can be multiple test cases, one after the other. The first line of a test case contains two even integersc≥ 0 andp≥ 0 (where 2 ≤c+p≤ 30000) separated by a space, the number of capers and peppercorns, respectively. Each of the followingclines describes the position of a caper using two floating point numbers, separated by a space, representing itsxandycoordinates. Each of the nextplines holds two floating point numbers, thexandycoordinates of a peppercorn. A blank line follows each test case.The last line of input will contain −1 −1. This marks the end of input – do not write any output for this special last line.OutputYESfor a positive answer,NOotherwise.Sample Input2 2\r\n1 1\r\n1 0\r\n0 1\r\n-1 1\r\n\r\n2 2\r\n1 1\r\n-1 1\r\n0 1\r\n0.1 -1\r\n\r\n-1 -1Sample OutputNO\r\nYESProblemsetter: Manuel Abellanas",
  "sample_input": "2 2\r\n1 1\r\n1 0\r\n0 1\r\n-1 1\r\n\r\n2 2\r\n1 1\r\n-1 1\r\n0 1\r\n0.1 -1\r\n\r\n-1 -1",
  "sample_output": "NO\r\nYES",
  "link": "https://www.spoj.com/problems/CAPPIZZA",
  "scraped_at": "2025-08-17 00:33:45",
  "test_cases": [
    {
      "input": "2 2\r\n1 1\r\n1 0\r\n0 1\r\n-1 1\r\n\r\n2 2\r\n1 1\r\n-1 1\r\n0 1\r\n0.1 -1\r\n\r\n-1 -1",
      "expected_output": "NO\r\nYES",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2 2\n10 1\n9 3\n5 1\n7 5\n9 6\n6 3\n8 5\n9 10\n2 6\n4 4",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "7 2\n3 3\n3 5\n2 2\n9 9\n6 10\n10 8\n5 10\n2 7\n10 10\n5 4",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "9 1\n8 6\n2 1\n8 10\n5 2\n6 1\n1 9\n8 2\n1 10\n5 1\n10 2",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "64 18\n68 100\n21 43\n65 34\n13 44\n75 21\n74 32\n22 75\n69 28\n9 16\n49 23",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "100 11\n22 41\n57 44\n48 52\n12 15\n84 13\n75 15\n23 50\n77 59\n42 42\n24 6",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "98 44\n76 67\n98 39\n89 66\n75 100\n1 60\n50 19\n20 1\n71 4\n83 44\n18 44",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "12 49\n47 3\n87 94\n59 18\n12 16\n94 62\n15 43\n33 49\n21 63\n90 5\n37 50",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "94 35\n2 28\n40 34\n96 43\n54 28\n48 94\n39 77\n52 46\n27 66\n37 49\n70 63",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "297 329\n347 359\n350 327\n497 355\n238 373\n369 108\n476 450\n438 189\n223 463\n213 416\n310 239",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "394 358\n290 51\n221 360\n270 402\n232 318\n314 137\n378 451\n83 289\n493 411\n326 79\n104 333",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "473 353\n433 491\n77 329\n190 471\n265 323\n198 381\n218 305\n131 232\n378 75\n418 243\n131 348",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "354 260\n150 223\n74 475\n269 280\n112 303\n252 226\n192 371\n320 270\n396 51\n293 472\n206 197",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "199 90\n441 163\n355 463\n381 174\n424 314\n211 274\n59 486\n385 75\n94 489\n498 132\n156 65",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "448 381\n140 198\n91 448\n366 276\n409 243\n269 169\n113 361\n316 66\n433 473\n161 432\n281 146",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "302 243\n456 478\n98 460\n391 461\n150 214\n283 447\n394 142\n183 377\n64 426\n294 101\n416 363",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "999 1\n2 2\n2 1\n999 999\n1 1000\n1000 999\n1 1\n999 1000\n999 1000\n1 2\n1000 999",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "999 1000\n2 2\n1 999\n999 1\n999 999\n999 2\n1000 2\n999 1\n1000 1000\n2 999\n2 2",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:52",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:25"
}
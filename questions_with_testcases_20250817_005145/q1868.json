{
  "problem_code": "problems",
  "title": "Decoding Morse Sequences",
  "tags": [],
  "text": "Before the digital age, the most common \"binary\" code for radio communication was the Morse \r\ncode. In Morse code, symbols are encoded as sequences of short and long pulses (called dots and dashes \r\nrespectively). The following table reproduces the Morse code for the alphabet, where dots and dashes \r\nare represented as ASCII characters \".\" and \"-\":A .-   B -... C -.-. D -.. \r\nE .    F ..-. G --.  H .... \r\nI ..   J .--- K -.-  L .-.. \r\nM --   N -.   O ---  P .--. \r\nQ --.- R .-.  S ...  T - \r\nU ..-  V ...- W .--  X -..- \r\nY -.-- Z --..Notice that in the absence of pauses between letters there might be multiple interpretations of a Morse \r\nsequence. For example, the sequence -.-..-- could be decoded both as CAT or NXT (among others). A \r\nhuman Morse operator would use other context information (such as a language dictionary) to decide \r\nthe appropriate decoding. But even provided with such dictionary one can obtain multiple phrases from \r\na single Morse sequence.TaskWrite a program that:reads a Morse sequence and a list of words (a dictionary),computes the number of distinct phrases that can be obtained from the given Morse sequence using \r\nwords from the dictionary,writes the result.Notice that we are interested in full matches, i.e. the complete Morse sequence must be matched to \r\nwords in the dictionary.InputThe first line of the input contains exactly one positive integer d equal to the number of data sets, \r\n1 ≤ d ≤ 20. The data sets follow.The first line of each data set contains a Morse sequence - a nonempty sequence of at most 10000 \r\ncharacters \".\" and \"-\" with no spaces in between.The second line contains exactly one integer n, 1 ≤ n ≤ 10000, equal to the number of words in \r\na dictionary. Each of the following n lines contains one dictionary word - a nonempty sequence of at \r\nmost 20 capital letters from \"A\" to \"Z\". No word occurs in the dictionary more than once.OutputThe output should consist of exactly d lines, one line for each data set. Line i should contain one integer \r\nequal to the number of distinct phrases into which the Morse sequence from the i-th data set can be \r\nparsed. You may assume that this number is at most 2*109for every single data set.ExampleSample input:1 \r\n.---.--.-.-.-.---...-.---. \r\n6 \r\nAT \r\nTACK \r\nTICK \r\nATTACK \r\nDAWN \r\nDUSKSample output:2",
  "sample_input": "A .-   B -... C -.-. D -.. \r\nE .    F ..-. G --.  H .... \r\nI ..   J .--- K -.-  L .-.. \r\nM --   N -.   O ---  P .--. \r\nQ --.- R .-.  S ...  T - \r\nU ..-  V ...- W .--  X -..- \r\nY -.-- Z --..",
  "sample_output": "Sample input:1 \r\n.---.--.-.-.-.---...-.---. \r\n6 \r\nAT \r\nTACK \r\nTICK \r\nATTACK \r\nDAWN \r\nDUSKSample output:2",
  "link": "https://www.spoj.com/problems/MORSE",
  "scraped_at": "2025-08-17 00:33:49",
  "test_cases": [
    {
      "input": "A .-   B -... C -.-. D -.. \r\nE .    F ..-. G --.  H .... \r\nI ..   J .--- K -.-  L .-.. \r\nM --   N -.   O ---  P .--. \r\nQ --.- R .-.  S ...  T - \r\nU ..-  V ...- W .--  X -..- \r\nY -.-- Z --..",
      "expected_output": "Sample input:1 \r\n.---.--.-.-.-.---...-.---. \r\n6 \r\nAT \r\nTACK \r\nTICK \r\nATTACK \r\nDAWN \r\nDUSKSample output:2",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "fxep df kjyoc s fl olipb da nyzgl\nfzv n ds dwtup gyepg rudya v ljce\nc t pdcwg zulv bcffj ktx klrzr iyn\nqg ro fxzx uo q oe zf otouw\nb imhs qt e guzv tcsjv yv vg\nw f tdvay ql golo e xhor yfaz\nvfam ke wmyi okeih",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "m kswj qqcnw iax txzlh bfjd z hwxh\ngnhf lfmar r rswf xfa hkfby il brq\nuqw iu ph dejld ifp ivdh bxwgy cx\nzvfzi phy owz udx ryyko marzc dmjzj pke\nqf fm or foxh j bvigo y doq\nxcaf mm ywsg ppun agow b xbztr k\nca m dd quxq",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "ah q a clssg zdncf at sl g\nqaau ims zb owt oclz bu he syxfr\ntd thvad oo anjo ukguf t cbzls b\nocszz zxtr dtdtl ac xhl bt nys mzf\npcz rjjk m ad lh ey ftrvk i\nn wav b q vky pnqc pds t\nrvoif ubaw lnql uvq",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "uwjxj xwypm sgnir nngx uzpbr b ho duvq\nccgnk hd a ol dmsn auqq wuzi her\nbuubv fq unyra yc los ppumy yfb ikjly\ncx qhyv p bq ozud fgga jnnr wk\nilwm zg t uctjg rr tzpym fezfx sq\nloy mvm apwcw s leon s y j\nruen jomvv oj aa",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "whq vna ao s ptct tzmzk meobb ut\nftoiv qcvrx hok eovvy o lm fpdv zjggh\naxllk priie mkrte xb lsf bj gvxoz gv\nly inhm rk gff m tebsa sk clit\ntzqfk imdi pbat m dupuj aiof el la\ncqfkr qovc mc sbl yb b fenh r\nfmkc y dcix kef",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "vvilt oskx sfr i p ajwyz vqwp znzmi\nnh qdxen em pog viikb naif okjsm sj\nioic uy sah edwvj gi llaj dudda mzo\nl edc sy fwxnd vim tpl f jxbxc\nqvd cae p tcwq it big vbxed hn\nuyl mb sefe ke lsuw cbm zgkjb mg\nuray fz k jon",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "rld n tolif aa thv of kelck tbepi\ndnx e klc di cudjr oghrn wxsz wli\ndw nca udjq sclry r pwgp gmlq j\nml gb b fzaad urdp v jxyde eany\nyy u gk ngnb ai jok mcyw zf\nukwv tpe eycwz njwa ajdob f tds tfi\ncokr nprqt svn oe",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "o bdg c u zzykq jdnw dy bh\nvs sie fnuzk yijjj df xg dzbea jrd\nijs vypo emnu dst hhd nwrvm l kfcce\nkq bgg pb cxksc uhf vtsv iedo fja\nzae v iu rudsm n gzukl bi dykri\nzk e id kh m spu cre ovmha\nu hwg cfsql qo",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "kxmcj rx sx v gwl a namsq nikdc\nbxm ixc d ued eyeso qh j tldrr\ng wd ahge dznm wj acamq cjj rczx\nkkbw comp zmp ccmm o hxy awm u\nzf rabvx bs hw izz ca yrnuo ipxd\nfnzj ekb azipu px ggl z exx ft\njv bcsfw ie astc",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "nmzm rsus s fjh azhzs wlkup nlx fxvlz\nom fo f rxel hudo mfbia qola is\nzm boerq c zsbtc itxmq isqmb spejy lz\npq xodoj f pex djw pzx o vc\njho o f p nf kwlnw ckgwp vr\nu wnbd ewzyc i oy xpwu lt jqrh\nqtr ysr z awui",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "wadt lwiyc i sc bu ylj yzkq gcec\nx vc gbnt xtz l dd jqo sz\ntlnfa b nmdso xxhz ta kq tblh zxolv\nrws vjj uvdyu u niyn dk rhn c\nmyz drej aeg rjq zvwb l xps jifqr\nn chf u kkce yzj oanm pweob l\nr y nxh qnap",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "vfm nd n j dlexd tom ncg dz\njrly lx wd weo ou lphrt rf vzao\nt tsp ocqyp w knuqa gs cjcji nrx\nnu mf uohl dmw ehzi x gmwqt srxfi\ncwojm kir kalsf hh mn qbpto de xb\nzhj ynwgo vtzjr xqux ura n cn oku\nfjvh lfbf seqzb gxqu",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "twb reuo bl q bfhxk plq pzyn j\nughd wrmj gw p aweq pyk tzg ykfrq\nu ku ue pslxj edyss a wewg nw\nx ca rxjy azcz wxbn tj c r\nao w j iky f eagu mb lqtms\nvl fr x thv episk blpoy otvp kqix\nunqk ymqzn fxid sqvky",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "kp o lnk qaeck sqv nunqy a hy\nrsn i y vlw d dssm daapx hvcw\ns pea myfm tkbru xmrp driip rkej ffs\npiot mqk ryzgt rsntx q sezdv h eaiy\nceoo tp ukmpm lf ougq um llbm e\nkqe wngg phej nip ufz d gqq fq\nta wzxcu suw hz",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "jt icwj cm ucjc fckjg lhpwv bah yxt\nxuak mh haeqx r ejhw cftpn yzakn nybhs\nbujfo og wst ghk qya dafzd wbktb pmmx\nm qypc f rt nrwl y xmkae mxv\nmmlo ulepa biwi bge ynvwg pya stl flnmp\nf lfp zqxh lbzn oua gclsv oqnco zcc\noi rcvij sdatf znpz",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "zgssm b xsgxm el q j mfb ckk\nedmk yscr g rpu mp gfo m tj\nv wrok yykg yi kudqo cflxq mmuy v\nh uxdkc mpd uakeg mv udqx migbc roc\njlocp nw ipboy u tbuz rt ut zwvn\nufrza qk maiz kxtv gjov rl t i\nc gtj ufc tj",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "ncmcz io ksmut t w zy hpu as\ngl ern d swcda bpwrg dbvrb z ndtd\nfzc r vd vwsi kqucv bk n scxhv\nsqdrr k u dpxei oolww tqrhz hlyqi kx\np rkgf eqy pei oyym l xd waz\nrrhi pl xci fegr nbap vuvbf nrd jgb\npvaf df stm fvson",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "eyg dxj m dtjmd fo ixo ve bci\nhr hcy z xrs tuty u n lcanp\ndwuyw nmfv fwgo gvv ln cgc rnyub mz\narhyi ry ir nqjj hy sadz lui yck\nzpzc lebmc fad tqpll dwsh glaz bus fmj\nqxrue ys cx z eqk qiuao w vvo\njt mb s yfqd",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "cixo ymlep mwgp uuso rbz ra awb o\npnyn vp uqnf qv xf ihr sioy hnt\nvep laxcp r jbzn w ixbe dabu b\nr ix sm per nbuk jyvs ggnv qd\nji sern tnfu jdgk gfrw xn s acvfp\nt nx i ukb oej t dz ux\njhm lqtp rlf ojjm",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:51",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "K Edge",
  "tags": [],
  "text": "Given a directed graph, may contains repeated edges. We assume that the graph contains and only contains K edge-disjoint branchings rooted by node 0.A branching for a graph is a set of directed edges that from a certain root (root, in this problem, is node 0) we can find one path to every other node in the graph by only the edges in the branching.K edge-disjoint branching is K branchings that share no common edges.Your task which is easy and funny is to find out the K branchings.InputThe first line of input contains a single integer T, (T<=20), denoting the number of test cases.For each test case:The first line contains two integers N and K, (2<=N<=500,2<=K<=6), which is the number of the nodes in the graph and the number of edge-disjoint branchings.Then next (N-1)*K lines contains the information about the edges. There are 2 integers X and Y in every line, meaning there exist an edge from X to Y in the graph.OutputYou should output the branchings you have found.For every test cases, print the number of test case at the start of output, then you should output K lines.Each line is about a branching which contains N-1 integers that the ID of the edges in this branching.The ID of edges starts with 0. Every edge will appear and only appear once in the output.See samples for further details.ExampleInput:22 20 10 13 20 10 22 11 2Output:Case 1:01Case 2:0 31 2Test data have been enhanced.",
  "sample_input": "Input:22 20 10 13 20 10 22 11 2Output:Case 1:01Case 2:0 31 2",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/FOREST",
  "scraped_at": "2025-08-17 00:33:15",
  "test_cases": [
    {
      "input": "22 20 10 13 20 10 22 11 2",
      "expected_output": "Case 1:01Case 2:0 31 2",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2 9 2 3 8 9 1 2 1",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "7 6 3 7 5 3 2 6 7",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "10 6 1 2 7 4 4 1 10",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "36 28 83 97 3 27 81 63 28",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "28 42 24 1 42 73 45 77 3",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "6 2 72 62 80 40 11 95 35",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "42 39 70 73 8 94 53 57 16",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "79 10 99 10 93 27 19 85 76",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "293 91 50 429 95 146 364 66 56",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "171 296 463 313 203 307 400 113 214",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "297 163 236 307 286 461 329 153 277",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "171 217 184 457 136 71 325 266 318",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "165 50 191 206 339 201 84 481 247",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "377 119 405 312 313 176 271 383 400",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "307 291 237 284 318 223 138 336 293",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 2 1 1 1 1 1000 999 999",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 2 999 1 2 999 1000 1 1",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:46",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:36:26"
}
{
  "problem_code": "problems",
  "title": "Flowery Trails",
  "tags": [],
  "text": "In order to attract more visitors, the manager of a national park had the idea of planting flowers  along both sides of thepopular trails, which are the trails used bycommon people.Common peopleonly go from the park entrance to its highest peak,  where views are breathtaking, by a shortest path. So, he wants to know  how many metres of flowers are needed to materialize his idea.For instance, in the park whose map is depicted in the figure, common people make only one of the three following paths (which are the shortest paths from the entrance to the highest peak).At the entrance,       some start in the rightmost trail to reach the point of interest 3 (after 100 metres),       follow directly to point 7 (200 metres) and        then pick the direct trail to the highest peak (620 metres).The others go to the left at the entrance and reach point 1 (after 580 metres).       Then, they take one of the two trails that lead to point 4 (both have 90 metres).       At point 4, they follow the direct trail to the highest peak       (250 metres).Notice that popular trails (i.e. the trails followed by common people) are highlighted in yellow. Since the sum of their lengths is 1930 metres, the extent of flowers needed to cover both sides of the popular trails is 3860 metres (3860 = 2 * 1930).TaskGiven a description of the park, with its points of interest and (two-way) trails, the goal is to find out  the extent of flowers needed to cover both sides of the popular trails. It is guaranteed that, for the given inputs,  there is some path from the park entrance to the highest peak.InputThe first line of the input has two integers:PandT.Pis the number of points of interest andTis the number of trails. Points are identified by integers, ranging from0toP-1. The entrance point is0and the highest peak is pointP-1.Each of the followingTlines characterises a different trail. It contains three integers,p1,p2, andl, which indicate that the (two-way) trail links directly pointsp1andp2(not necessarily distinct) and has lengthl(in metres).Integers in the same line are separated by a single space.Constraints2 ≤ P ≤  10 000Number of points.1 ≤ T ≤ 250 000)Number of trails.1 ≤ l ≤ 1 000)Length of a trail.OutputThe output has a single line with  the extent of flowers (in metres) needed to cover both sides  of the popular trails.Sample Input 110 15\r\n0 1 580\r\n1 4 90\r\n1 4 90\r\n4 9 250\r\n4 2 510\r\n2 7 600\r\n7 3 200\r\n3 3 380\r\n3 0 150\r\n0 3 100\r\n7 8 500\r\n7 9 620\r\n9 6 510\r\n6 5 145\r\n5 9 160Sample Output 13860Sample Input 24 7\r\n0 1 1\r\n0 2 2\r\n0 3 10\r\n0 3 3\r\n1 3 2\r\n2 3 1\r\n1 1 1Sample Output 218Author: Margarida Mamede",
  "sample_input": "10 15\r\n0 1 580\r\n1 4 90\r\n1 4 90\r\n4 9 250\r\n4 2 510\r\n2 7 600\r\n7 3 200\r\n3 3 380\r\n3 0 150\r\n0 3 100\r\n7 8 500\r\n7 9 620\r\n9 6 510\r\n6 5 145\r\n5 9 160",
  "sample_output": "3860",
  "link": "https://www.spoj.com/problems/SWERC14B",
  "scraped_at": "2025-08-17 00:34:34",
  "test_cases": [
    {
      "input": "10 15\r\n0 1 580\r\n1 4 90\r\n1 4 90\r\n4 9 250\r\n4 2 510\r\n2 7 600\r\n7 3 200\r\n3 3 380\r\n3 0 150\r\n0 3 100\r\n7 8 500\r\n7 9 620\r\n9 6 510\r\n6 5 145\r\n5 9 160",
      "expected_output": "3860",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5 8\n4 6 5\n2 3 1\n2 2 1\n8 5 1\n10 3 2\n4 8 6\n4 3 7\n4 4 7\n6 2 8\n2 7 7\n7 4 4\n7 6 5\n7 9 10\n7 4 1\n3 6 7",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "2 7\n10 3 4\n4 9 1\n8 10 6\n10 2 6\n5 2 8\n1 8 10\n8 6 4\n2 8 8\n9 10 2\n5 4 4\n2 3 7\n6 10 5\n9 7 8\n3 6 8\n6 10 8",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "7 2\n7 5 3\n1 1 3\n10 2 2\n8 8 2\n2 8 7\n8 6 5\n3 10 2\n8 9 6\n6 5 1\n1 2 2\n10 6 7\n8 2 10\n3 9 6\n10 5 2\n3 8 1",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "39 14\n79 63 48\n42 99 87\n88 100 15\n71 81 76\n33 14 13\n39 91 47\n13 11 66\n80 76 50\n74 96 32\n89 91 19\n62 17 4\n7 54 11\n82 39 99\n58 35 58\n41 64 22",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "1 37\n38 66 70\n34 39 27\n12 21 13\n40 86 97\n20 85 72\n46 15 80\n39 66 70\n53 60 70\n90 33 65\n50 48 66\n66 84 100\n35 65 10\n94 25 8\n85 39 82\n87 62 26",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "99 60\n49 25 17\n69 4 27\n78 72 33\n10 92 64\n97 7 86\n49 25 79\n31 84 88\n43 11 82\n45 19 31\n44 92 43\n61 71 85\n5 32 79\n60 8 71\n29 8 58\n60 35 18",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "51 47\n29 28 92\n11 20 43\n7 12 68\n17 75 93\n89 77 40\n60 90 69\n61 68 84\n47 25 50\n9 26 11\n55 26 56\n53 77 65\n61 94 93\n77 53 80\n50 88 66\n32 97 3",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "63 65\n60 39 100\n30 11 69\n37 37 37\n58 78 40\n1 13 35\n86 100 27\n26 43 41\n43 12 92\n92 13 18\n30 71 71\n100 39 53\n54 22 99\n91 37 14\n49 10 4\n47 66 28",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "270 117\n133 228 355\n306 82 77\n463 247 331\n303 362 163\n327 251 222\n201 212 228\n429 372 254\n436 304 251\n97 303 165\n68 357 103\n96 389 266\n334 174 281\n432 445 179\n445 187 397\n79 230 488",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "206 500\n307 311 291\n130 340 472\n146 452 231\n113 459 148\n108 455 423\n163 269 354\n63 97 145\n56 466 454\n282 397 194\n107 218 121\n95 213 437\n438 83 159\n172 434 292\n95 254 429\n261 350 336",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "337 65\n141 356 231\n423 197 159\n132 160 482\n498 279 473\n64 406 229\n138 495 144\n436 144 292\n291 385 76\n316 157 435\n219 409 221\n106 182 340\n207 76 169\n149 242 292\n135 293 100\n282 61 457",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "428 486\n429 388 279\n143 153 402\n61 111 437\n497 226 412\n83 239 458\n339 108 332\n258 163 374\n309 400 220\n407 115 140\n382 185 163\n99 455 447\n108 395 177\n77 104 386\n186 63 194\n270 101 487",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "181 261\n175 377 328\n475 249 242\n56 217 72\n304 319 384\n290 231 255\n141 187 278\n174 346 499\n270 497 389\n159 210 470\n449 174 283\n336 153 278\n481 55 310\n369 357 403\n120 163 86\n322 69 240",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "332 370\n437 446 197\n442 302 77\n340 128 209\n408 378 196\n105 451 496\n380 292 168\n467 460 408\n220 316 259\n299 119 431\n114 135 137\n85 363 66\n195 318 254\n218 482 127\n363 412 345\n325 165 190",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "488 460\n234 61 245\n214 470 250\n246 340 86\n145 429 353\n232 165 378\n440 253 376\n272 68 333\n246 407 292\n163 225 320\n153 334 311\n222 376 216\n470 93 271\n198 276 140\n345 313 271\n263 95 175",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000\n1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 1\n2 2 999\n1000 999 2\n2 1000 999\n2 1000 1\n999 999 999\n1 999 2\n1 1000 1\n1 2 1000\n1 1 2\n1 1 1000\n2 1000 999\n1000 1 1\n2 1 1000\n2 999 1000\n999 1000 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "999 2\n999 2 1000\n999 999 999\n1000 1 1\n999 1 1000\n1 2 2\n1000 999 999\n1000 2 1\n1000 2 999\n1000 1000 1\n2 999 999\n2 1 1\n1000 999 1\n1 2 1\n1 2 1000\n2 2 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:58",
  "total_test_cases": 20
}
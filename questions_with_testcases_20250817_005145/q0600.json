{
  "problem_code": "problems",
  "title": "Just on Time",
  "tags": [],
  "text": "Last week’s campaign on healthy and environmentally friendly mobility was a big success. Hundreds of commuters to the EPFL campus traded their car for a ride by bus or metro and gave a very positive feedback. They merely complained about earlier wake-up times necessary to reach the campus on time.This is where you enter the story. Try to improve the mood of the people by indicating them the latest time they can leave their house such that they can reach the campus no later than 8h15. Any means are ok to maximize their sleeping time, and all would accept to change bus or metro lines several times during their journey if this helps your planning.The public transport network is made up ofS (0 <= S <= 100)stations (numbered from 1 toS) and countsC (0 <= C <= 1,000)unidirectional connections that link two stations in regular time intervals, starting from a certain time in the morning and up to 8h15. Note that for any two stations, there might exist several direct shuttle services with different starting time and frequency. You are to answer some students’ request on the latest possible time they can leave from home in order not to be late.InputThe input consists of several test-cases separated by an empty line. Each test-case starts with the number of stationsS, the number of connectionsCand the number of requestsRon a line. Then comeClines, each describing one shuttle service in the format ‘from’ ‘to’ ‘firstRide’ ‘travelTime’ ‘frequency’ (in minutes). The nextRlines each hold two integers, the first being the closest station to the student’s home (come what may, but so early no student would like to walk more than necessary) and the second the time (in minutes) it takes the student to reach that station. The campus is located at stationS. Input terminates on a test-case withS = C = R = 0, which must not be evaluated.OutputAnswer the requests in the same order as they appear in the input. For each request, print a line in the form “Leave no later than ‘time’”, where ‘time’ is in the formathh:mm. Add an empty line after each test-case. If there is no way the students can make it on time, output “Doomed to be late”. You can safely assume that the commuters are so experienced in hopping on and off busses that they can change busses in no time at all.SampleInput:3 2 2\r\n1 3 07:10 50 15\r\n2 3 08:20 5 5\r\n1 3\r\n2 0\r\n\r\n3 4 3\r\n2 3 05:30 6 5\r\n1 3 06:11 5 15\r\n1 2 07:01 2 5\r\n3 2 08:00 1 8\r\n1 2\r\n2 1\r\n3 10\r\n\r\n0 0 0Output:Leave no later than 07:22\r\nDoomed to be late\r\n\r\nLeave no later than 07:59\r\nLeave no later than 08:04\r\nLeave no later than 08:05",
  "sample_input": "Input:3 2 2\r\n1 3 07:10 50 15\r\n2 3 08:20 5 5\r\n1 3\r\n2 0\r\n\r\n3 4 3\r\n2 3 05:30 6 5\r\n1 3 06:11 5 15\r\n1 2 07:01 2 5\r\n3 2 08:00 1 8\r\n1 2\r\n2 1\r\n3 10\r\n\r\n0 0 0Output:Leave no later than 07:22\r\nDoomed to be late\r\n\r\nLeave no later than 07:59\r\nLeave no later than 08:04\r\nLeave no later than 08:05",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/ONTIME",
  "scraped_at": "2025-08-17 00:33:21",
  "test_cases": [
    {
      "input": "3 2 2\r\n1 3 07:10 50 15\r\n2 3 08:20 5 5\r\n1 3\r\n2 0\r\n\r\n3 4 3\r\n2 3 05:30 6 5\r\n1 3 06:11 5 15\r\n1 2 07:01 2 5\r\n3 2 08:00 1 8\r\n1 2\r\n2 1\r\n3 10\r\n\r\n0 0 0",
      "expected_output": "Leave no later than 07:22\r\nDoomed to be late\r\n\r\nLeave no later than 07:59\r\nLeave no later than 08:04\r\nLeave no later than 08:05",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1 4 10\n7 5 10 10 2 8\n6 4 pl 5 6\n3 2 9 6 4 7\n4 4 w 10 6\n8 6\n9 8\n3 3 4\n8 7 10 2 4 6\n5 5 smgvu 4 2\n10 3 10 6 3 8\n2 8 usq 8 4\n8 5 7 5 4 8\n1 7 or 8 4\n10 3 7 8 2 10\n3 2 sck 5 10\n1 7\n8 4\n7 6\n5 8 3",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "8 8 2\n4 10 3 6 8 6\n9 6 sxzd 6 5\n7 4 10 7 6 6\n9 3 lvoq 1 1\n7 8\n7 1\n7 6 8\n9 3 8 5 6 8\n5 10 rjrr 9 1\n8 1 1 3 6 2\n1 4 wdjpp 9 9\n1 4 2 5 8 1\n2 6 mywfg 10 4\n5 4 6 6 1 4\n10 6 ntebm 10 3\n1 7\n8 6\n3 9\n8 6 3",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "5 5 5\n9 3 3 5 7 1\n9 2 oijfb 4 4\n7 10 4 7 9 5\n3 8 jnxpu 6 7\n9 3\n9 8\n9 6 9\n8 6 2 7 2 9\n7 3 yz 4 2\n6 7 6 2 9 6\n5 9 xv 7 2\n8 7 4 2 8 9\n10 5 hlv 3 1\n1 9 9 8 3 3\n6 2 b 8 8\n5 5\n3 8\n1 7\n10 10 2",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "99 88 82\n3 49 11 80 25 59\n9 82 ndash 69 59\n89 18 73 14 37 96\n62 93 dmtiz 19 86\n98 75\n86 43\n20 23 26\n14 16 59 13 17 57\n58 68 xtuvm 21 63\n62 11 99 22 48 78\n52 56 qjp 59 83\n47 68 77 33 96 12\n11 97 sh 33 4\n39 47 30 84 29 70\n82 68 b 20 23\n39 92\n46 36\n47 2\n65 68 30",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "31 91 3\n98 30 94 72 26 11\n10 59 u 92 68\n91 39 52 62 15 41\n28 85 hj 68 19\n19 12\n36 49\n40 71 94\n44 3 14 29 18 41\n27 83 tk 84 35\n83 40 57 63 16 43\n49 35 oany 50 92\n19 17 78 92 73 53\n76 8 cnaiz 26 47\n69 56 63 61 62 73\n56 22 egua 35 16\n17 28\n52 70\n97 36\n74 97 21",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "88 22 11\n88 79 92 43 100 64\n61 79 wc 88 5\n17 67 70 31 62 9\n51 55 rzdsm 50 41\n99 5\n70 79\n35 45 81\n6 64 34 65 4 32\n68 17 gv 61 37\n55 89 25 42 14 31\n39 82 bphf 59 74\n89 52 5 74 74 88\n17 22 wexs 71 74\n99 37 30 13 10 37\n62 96 x 39 59\n69 49\n78 19\n71 95\n17 33 83",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "20 57 76\n13 99 14 53 32 92\n51 37 t 95 50\n55 47 100 72 17 93\n84 2 fbx 85 74\n56 37\n11 63\n90 4 30\n46 59 9 64 80 13\n19 91 rkn 19 86\n84 88 26 63 24 73\n43 26 qb 27 17\n75 89 33 13 13 2\n83 2 bnsjm 23 98\n59 92 48 57 76 66\n1 74 gruw 11 69\n53 19\n42 79\n70 66\n20 83 95",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "46 23 94\n44 61 91 81 40 7\n55 37 gtn 1 80\n76 18 27 51 68 79\n61 78 zwye 42 33\n55 57\n72 34\n53 58 19\n30 93 33 16 8 45\n17 62 zcs 5 26\n45 9 29 7 80 64\n56 76 xzazr 29 65\n68 92 41 96 90 97\n29 65 s 74 64\n71 43 2 91 94 35\n89 12 jcjqy 38 49\n39 50\n71 18\n47 9\n45 94 37",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "428 271 142\n60 184 274 462 418 171\n239 426 slie 110 400\n255 460 412 120 420 458\n67 239 vw 464 290\n401 316\n199 463\n97 393 445\n441 209 345 283 184 154\n164 471 utjyz 300 232\n314 336 135 224 96 253\n137 269 qdijw 66 136\n497 492 352 475 218 446\n185 441 azu 392 450\n60 173 66 71 131 345\n85 431 k 395 430\n76 185\n165 362\n358 210\n357 487 496",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "300 363 127\n471 413 377 424 155 232\n126 482 kiwkf 441 243\n189 430 220 314 393 86\n441 166 g 457 368\n201 167\n491 393\n82 487 140\n323 323 106 100 355 437\n135 282 usou 445 196\n227 89 462 446 477 259\n292 389 d 224 328\n434 434 158 385 150 190\n57 181 w 356 279\n275 344 166 307 127 249\n286 306 lug 482 110\n143 339\n221 393\n338 479\n165 236 306",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "252 494 243\n478 127 100 441 318 303\n210 482 vy 140 161\n479 497 439 374 182 193\n53 402 ms 229 68\n405 477\n441 359\n277 373 440\n440 395 401 73 56 331\n500 104 i 133 283\n52 104 440 279 172 366\n143 280 wkt 445 93\n286 441 311 58 398 181\n117 379 rbl 433 452\n196 297 125 284 357 333\n316 285 tver 486 195\n175 420\n196 406\n492 407\n83 122 377",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "296 148 220\n330 65 145 189 52 172\n170 77 phdm 183 322\n103 414 152 339 321 401\n434 120 g 248 478\n57 490\n302 215\n435 164 122\n422 266 80 76 190 484\n159 91 jr 265 177\n274 246 438 230 408 103\n228 149 rogp 430 366\n297 209 343 487 492 257\n367 91 v 444 493\n446 141 261 319 349 51\n366 247 qltvb 154 352\n184 310\n89 107\n460 168\n209 474 341",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "260 340 149\n216 118 331 187 259 199\n195 388 onlo 155 281\n188 283 469 166 223 234\n246 484 t 297 436\n362 340\n329 315\n368 340 274\n253 436 194 454 111 171\n387 357 zxlb 395 119\n244 156 164 285 242 203\n402 263 dgdcn 145 220\n102 180 252 52 359 477\n473 215 osv 301 317\n473 392 259 482 468 373\n54 270 vb 267 474\n123 119\n61 484\n302 204\n83 326 149",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "222 105 396\n237 74 423 74 50 491\n276 297 sjk 454 312\n217 362 86 300 444 70\n112 79 ljy 267 314\n50 292\n206 330\n413 208 136\n276 324 86 280 148 307\n319 79 miafn 137 103\n297 325 294 194 289 99\n271 175 f 138 406\n122 422 111 202 397 59\n133 467 ij 356 63\n56 495 205 355 173 258\n98 421 dliw 459 50\n296 285\n393 319\n160 96\n374 371 225",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "171 165 462\n146 429 456 279 358 238\n445 447 g 120 118\n270 345 490 179 273 306\n107 66 mdfuz 129 380\n91 333\n88 264\n394 222 309\n231 287 52 309 263 76\n333 148 ymaen 208 320\n379 425 270 77 184 471\n197 336 qp 448 312\n364 454 148 63 228 395\n413 234 fye 232 254\n149 188 212 159 256 219\n204 284 f 445 317\n108 184\n428 449\n82 381\n150 345 200",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000\n1000 1000 1000 1000 1000 1000\n1000 1000 gahfx 1000 1000\n1000 1000 1000 1000 1000 1000\n1000 1000 hiis 1000 1000\n1000 1000\n1000 1000\n1000 1000 1000\n1000 1000 1000 1000 1000 1000\n1000 1000 oog 1000 1000\n1000 1000 1000 1000 1000 1000\n1000 1000 noyf 1000 1000\n1000 1000 1000 1000 1000 1000\n1000 1000 hh 1000 1000\n1000 1000 1000 1000 1000 1000\n1000 1000 slw 1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000 1000",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000\n1000 1000 1000 1000 1000 1000\n1000 1000 boky 1000 1000\n1000 1000 1000 1000 1000 1000\n1000 1000 sxkw 1000 1000\n1000 1000\n1000 1000\n1000 1000 1000\n1000 1000 1000 1000 1000 1000\n1000 1000 b 1000 1000\n1000 1000 1000 1000 1000 1000\n1000 1000 th 1000 1000\n1000 1000 1000 1000 1000 1000\n1000 1000 nwsm 1000 1000\n1000 1000 1000 1000 1000 1000\n1000 1000 uqvl 1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000 1000",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 1 999\n1000 2 999 2 1 1\n2 1 k 1000 2\n2 2 1000 1000 1 1\n2 999 xmke 2 1000\n2 1\n1 2\n1 1000 1\n1 999 1 1 2 999\n1 1000 u 2 2\n1000 2 1 2 999 999\n1 1 tx 2 999\n999 1 2 1 1 2\n1000 1000 k 2 1000\n1 1000 1 1000 2 1\n2 999 ynkii 1000 1\n1000 999\n1 2\n1 2\n999 1 999",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 1000 1000\n1000 2 1000 1000 2 999\n1 2 ydtqt 1 1000\n1 1000 1 999 1 1000\n1000 999 awif 999 999\n1000 2\n999 1\n999 999 1000\n1 2 2 2 1000 1000\n2 999 yoe 2 999\n1 999 1000 999 999 999\n1 2 t 999 999\n999 1000 999 1000 999 999\n1000 2 a 2 1000\n1 1 1000 1000 2 2\n1 999 s 999 2\n1 1\n1 1\n1000 2\n999 1 1",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:47",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:36:38"
}
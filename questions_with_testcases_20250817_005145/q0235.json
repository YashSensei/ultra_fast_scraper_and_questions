{
  "problem_code": "problems",
  "title": "Crossing the Desert",
  "tags": [],
  "text": "In this problem, you will compute how much food you need to purchase for a trip across the desert on foot.At your starting location, you can purchase food at the general store and you can collect an unlimited amount of free water. The desert may contain oases at various locations. At each oasis, you can collect as much water as you like and you can store food for later use, but you cannot purchase any additional food. You can also store food for later use at the starting location. You will be given the coordinates of the starting location, all the oases, and your destination in a two-dimensional coordinate system where the unit distance is one mile.For each mile that you walk, you must consume one unit of food and one unit of water. Assume that these supplies are consumed continuously, so if you walk for a partial mile you will consume partial units of food and water. You are not able to walk at all unless you have supplies of both food and water. You must consume the supplies while you are walking, not while you are resting at an oasis. Of course, there is a limit to the total amount of food and water that you can carry. This limit is expressed as a carrying capacity in total units. At no time can the sum of the food units and the water units that you are carrying exceed this capacity.You must decide how much food you need to purchase at the starting location in order to make it to the destination. You need not have any food or water left when you arrive at the destination. Since the general store sells food only in whole units and has only one million food units available, the amount of food you should buy will be an integer greater than zero and less than or equal to one million.InputThe first line of input in each trial data set contains n (2 ≤ n ≤ 20), which is the total number of significant locations in the desert, followed by an integer that is your total carrying capacity in units of food and water. The next n lines contain pairs of integers that represent the coordinates of the n significant locations. The first significant location is the starting point, where your food supply must be purchased; the last significant location is the destination; and the intervening significant locations (if any) are oases. You need not visit any oasis unless you find it helpful in reaching your destination, and you need not visit the oases in any particular order.The input is terminated by a pair of zeroes.OutputFor each trial, print the trial number followed by an integer that represents the number of units of food needed for your journey. Use the format shown in the example. If you cannot make it to the destination under the given conditions, print the trial number followed by the word \"Impossible.\"Place a blank line after the output of each test case.ExampleInput:4 100 \r\n10 -20 \r\n-10 5 \r\n30 15 \r\n15 35 \r\n2 100 \r\n0 0 \r\n100 100 \r\n0 0Output:Trial 1: 136 units of food\r\n\r\nTrial 2: Impossible",
  "sample_input": "Input:4 100 \r\n10 -20 \r\n-10 5 \r\n30 15 \r\n15 35 \r\n2 100 \r\n0 0 \r\n100 100 \r\n0 0Output:Trial 1: 136 units of food\r\n\r\nTrial 2: Impossible",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/DESERT",
  "scraped_at": "2025-08-17 00:33:12",
  "test_cases": [
    {
      "input": "4 100 \r\n10 -20 \r\n-10 5 \r\n30 15 \r\n15 35 \r\n2 100 \r\n0 0 \r\n100 100 \r\n0 0",
      "expected_output": "Trial 1: 136 units of food\r\n\r\nTrial 2: Impossible",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "9 3\n8 6\n3 7\n3 1\n5 8\n7 8\n9 6\n6 9\n10 4",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "3 10\n4 4\n10 7\n1 10\n4 10\n4 9\n6 2\n4 1\n9 6",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "7 8\n5 4\n10 6\n4 8\n9 9\n8 3\n1 8\n4 8\n6 7",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "16 1\n13 15\n4 7\n17 4\n7 9\n10 20\n18 9\n12 3\n11 16",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "8 3\n3 11\n12 8\n10 11\n9 18\n18 1\n16 8\n13 2\n9 6",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "6 1\n7 3\n18 8\n4 19\n14 8\n3 9\n14 10\n3 4\n1 18",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "15 15\n6 2\n18 5\n4 4\n18 15\n9 6\n7 18\n10 16\n2 3",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "3 3\n14 4\n4 20\n4 2\n13 20\n8 16\n7 4\n4 18\n9 18",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "4 6\n2 6\n7 5\n1 9\n4 6\n5 4\n2 10\n3 10\n3 2",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "6 1\n8 6\n7 10\n3 5\n5 9\n4 5\n9 10\n6 2\n4 9",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "6 3\n7 4\n1 4\n4 2\n8 9\n10 8\n8 6\n8 10\n10 5",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "3 9\n3 10\n2 5\n3 4\n10 3\n4 6\n10 2\n8 7\n6 4",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "10 7\n8 3\n1 10\n9 7\n9 7\n8 5\n6 7\n3 6\n4 8",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "5 9\n8 3\n3 7\n6 6\n3 2\n9 7\n4 9\n8 6\n2 8",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "6 5\n1 10\n4 2\n5 3\n4 10\n4 6\n7 4\n8 1\n6 3",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "20 20\n20 20\n20 20\n20 20\n20 20\n20 20\n20 20\n20 20\n20 20",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "20 20\n20 20\n20 20\n20 20\n20 20\n20 20\n20 20\n20 20\n20 20",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 2\n2 20\n1 1\n19 20\n2 2\n2 20\n19 19\n1 1\n2 2",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "19 2\n1 1\n19 19\n19 19\n1 2\n20 19\n2 1\n19 1\n1 2",
      "expected_output": "0\n0\n0\n0\n0\n0\n0\n0\n0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:46",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:36:27"
}
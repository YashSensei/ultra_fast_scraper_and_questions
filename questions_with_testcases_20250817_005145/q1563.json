{
  "problem_code": "problems",
  "title": "Minimum Stocks",
  "tags": [],
  "text": "Himanshu wants to invest into stock market and his friend Navneet helps him by providing him instruction for nextNdays.Navneet gives Himanshu 3 types of instruction,1XYThere is a stock X available at price Y. Here X is a string and Y is an integer.2XZThe price of stock X has changed to Z. Here X is a string and Z is an integer.3 BUYBuy the stock which has the lowest price.You as a programmer, are given all the instructions ofNdays. Can you tell,which stock did Himanshu buy on which day. Print the output in same order as Himanshu bought the stock. See sample input and output for clarification.At any point of time, there isatmost one stock ofX. However,Xcan be made available to market again through another instruction of type 1.All instructions are valid.i.e. There is always some stock to buy having the minimum price of all. Also if the price ofXhas changed, thenXis already known and hasn't been bought yet.InputFirst line containsN. (1 ≤N≤ 106)NextNlines, each of them contains an instruction of any of 3 types. (Look at instruction format above.)In any instruction, (X is a string of length upto 10 characters. All characters are from English alphabet, both small and capital), and (0 ≤Y≤ 109) and (0 ≤Z≤ 109).OutputFor each instruction of type 3, output two valuesXandY. WhereXis the name of Stock having minimum price andYis the day on which it was bought.ExampleInput:7\r\n1 ABC 32\r\n1 XDC 54\r\n3 BUY\r\n1 XCD 32\r\n1 ABC 12\r\n2 XDC 10\r\n3 BUYOutput:ABC 3\r\nXDC 7ExplanationOn day 3, there is instruction to buy. There are two stocks available \"XDC\" and \"ABC\", since price of \"ABC\" is less, he buys it. After this \"ABC\" is not available in market anymore.On day 7, there is instruction to buy. Of all stocks available, \"XDC\" has the least price and hence he buys \"XDC\".",
  "sample_input": "Input:7\r\n1 ABC 32\r\n1 XDC 54\r\n3 BUY\r\n1 XCD 32\r\n1 ABC 12\r\n2 XDC 10\r\n3 BUYOutput:ABC 3\r\nXDC 7",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/MINSTOCK",
  "scraped_at": "2025-08-17 00:33:27",
  "test_cases": [
    {
      "input": "7\r\n1 ABC 32\r\n1 XDC 54\r\n3 BUY\r\n1 XCD 32\r\n1 ABC 12\r\n2 XDC 10\r\n3 BUY",
      "expected_output": "ABC 3\r\nXDC 7",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5\n10\n8\n4\n2\n7",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "4\n10\n5\n7\n7",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "3\n5\n6\n3",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "20\n47634027\n96631449\n94618924\n81458120\n14704324\n37195207\n63562860\n97548044\n28407043\n35683138\n4562694\n21678492\n29264670\n12892118\n38294169\n12168322\n61322648\n48029817\n707237\n2461961",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "17\n29439071\n73133740\n19662122\n65676783\n33488092\n9092062\n37948730\n89920037\n53583537\n6731749\n11872514\n2255251\n55320899\n93301398\n45868098\n83027345\n71565341",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "18\n68358254\n2857046\n84412528\n26036409\n37605634\n41873524\n85234379\n73122945\n76122437\n15613541\n27652707\n71506898\n8513553\n8723436\n84239521\n79219308\n48978706\n10213899",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "19\n8644425\n23200862\n28715257\n89117899\n22359696\n77519916\n76299185\n21567564\n3901268\n57335682\n41935672\n44769721\n95386167\n91557451\n76207006\n79744157\n23770646\n11328359\n46080450",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "20\n60917000\n21090180\n57650524\n92733413\n34928112\n62093478\n56358144\n22530455\n22129508\n25591842\n29854273\n5249840\n4507560\n60558495\n67625202\n14719226\n29274380\n80285364\n36250522\n18737775",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "55\n3913\n22592\n53664\n76054\n55102\n80844\n84992\n22531\n28244\n18179\n57856\n30008\n92921\n32192\n74555\n52149\n17671\n89502\n46009\n90483\n14409\n64841\n54423\n10108\n96237\n39710\n22165\n94674\n46314\n32847\n66355\n22340\n58825\n58000\n51869\n74741\n43588\n11263\n38518\n3995\n51246\n43305\n54580\n11410\n72911\n61212\n1773\n10068\n96138\n22360\n16940\n71669\n28509\n35861\n90064",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "59\n27236\n14067\n53467\n62633\n93988\n24399\n83446\n40206\n30586\n21098\n23565\n46885\n88711\n38605\n77271\n40536\n38680\n64563\n99175\n5805\n74841\n34493\n81107\n35771\n38101\n49636\n9856\n28544\n18766\n95585\n67490\n56660\n92267\n14141\n35925\n52127\n22333\n89154\n34028\n4459\n41273\n75411\n24425\n17063\n87363\n7612\n81727\n52848\n46872\n94901\n51272\n68928\n60011\n17405\n57668\n46951\n41799\n89652\n82591",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "57\n85649\n74311\n39836\n77500\n66871\n40360\n57669\n36791\n80700\n36910\n14287\n32278\n56557\n25421\n63577\n5920\n965\n17118\n52109\n87645\n36028\n9141\n3505\n86474\n34087\n65341\n7416\n47467\n81198\n85481\n57815\n38957\n21905\n50217\n25518\n92568\n19762\n37284\n27460\n11073\n22947\n88859\n99946\n15321\n17060\n59988\n7809\n48237\n91592\n2517\n48674\n61852\n14117\n2684\n27973\n47787\n1508",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "51\n58163\n37631\n23371\n85339\n51705\n52731\n3190\n67669\n43387\n25907\n25681\n86059\n88357\n82687\n66113\n49472\n73631\n78259\n97297\n53065\n73134\n30732\n53269\n53127\n1767\n69094\n31476\n53903\n24354\n41691\n2691\n73957\n43500\n80746\n13874\n60240\n43604\n78310\n80490\n63835\n42959\n40837\n10111\n2999\n32939\n5318\n98501\n45295\n50128\n12479\n37306",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "103\n8898\n36783\n89428\n45439\n29633\n1983\n39197\n1128\n70118\n98311\n5838\n50315\n99868\n9304\n50417\n40074\n52454\n41833\n47953\n64079\n62225\n16699\n24664\n592\n4430\n74301\n92431\n65827\n54894\n34624\n87752\n20438\n82940\n87160\n63841\n40594\n99753\n70711\n94088\n99237\n75963\n88888\n17681\n68111\n49783\n39571\n9614\n80664\n97688\n42111\n37638\n52904\n18130\n67992\n37421\n93076\n13700\n69734\n46754\n4487\n17490\n58394\n51109\n66999\n96370\n85620\n27778\n20747\n15630\n80890\n28135\n23669\n62722\n33391\n44234\n70263\n15306\n20728\n7519\n44698\n80706\n49245\n96536\n35370\n35863\n23228\n28615\n77607\n71041\n53156\n82487\n8051\n38395\n73450\n25311\n59249\n68781\n46334\n46290\n10056\n13586\n85568\n38989",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "50\n41018\n98684\n20447\n40507\n35108\n39665\n37731\n30000\n53256\n7592\n47314\n57747\n56388\n46619\n83716\n72853\n21271\n5664\n25558\n72553\n43196\n79004\n40882\n92533\n12602\n30266\n40102\n3965\n57934\n98390\n50283\n94685\n97555\n57149\n52561\n15654\n29310\n72225\n89472\n39685\n7584\n14972\n88008\n75172\n32588\n16787\n42387\n43183\n78393\n92404",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "44\n55160\n83640\n16567\n52082\n95179\n94982\n27541\n57718\n26596\n21653\n94006\n5860\n1334\n21004\n78303\n37293\n61103\n1787\n54159\n31569\n78644\n55308\n82951\n53043\n66745\n30485\n92035\n19413\n32247\n79585\n82486\n86647\n65091\n49578\n41138\n59290\n90851\n99515\n71909\n21529\n66451\n29945\n66556\n58814",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "106\n64376747\n40012580\n48782673\n19737970\n63059554\n77638132\n84386922\n85035769\n58350792\n65781873\n1014897\n43483024\n61442683\n6231226\n92486157\n20940747\n54161374\n64193497\n78571718\n56347317\n33848325\n10332215\n85649208\n98781797\n98257302\n61840557\n26745257\n61978152\n30698026\n10343834\n93617651\n82276724\n9110493\n96178616\n90166713\n52669737\n52121269\n3081684\n34424754\n35053195\n24212184\n88208677\n33916185\n21666523\n22553980\n53095461\n90221292\n22647783\n45589514\n82107332\n85238396\n98764289\n46081658\n48259692\n19656162\n71348999\n18262401\n86720522\n57959224\n61340705\n5208021\n32856350\n43566477\n26755993\n11085612\n90894520\n43578846\n38183087\n51029043\n16305946\n79064433\n69826691\n53223232\n24381994\n61527508\n92899693\n81893088\n51788916\n72525367\n17591457\n82982309\n58229352\n45884850\n55190347\n87253288\n87462521\n72112024\n34158524\n62252561\n18183157\n57917841\n56061493\n25265815\n13369644\n44969811\n73044328\n70850337\n50250730\n28280356\n81546530\n36732944\n79411489\n53175503\n74692367\n2241828\n43866808",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 106)"
    },
    {
      "input": "106\n45392325\n73006249\n50563317\n25449839\n91194669\n83101405\n73096986\n80442407\n44821689\n77372352\n10921496\n51458804\n47579382\n18840170\n39840391\n51397304\n95934529\n6842147\n94089370\n27003108\n65686961\n7859837\n1787202\n52752944\n10547708\n7635937\n51667691\n67756708\n49462848\n20265369\n78543090\n75202628\n55605897\n33364259\n59539583\n44820674\n37601904\n90682309\n19112222\n94933713\n90708894\n54589466\n42282742\n11941939\n25040575\n12006053\n43593736\n45589529\n95375203\n73241211\n43891927\n64784580\n1234616\n35554585\n6045834\n99521232\n54574591\n45989022\n15240377\n40534498\n20406004\n15966071\n64748963\n51865029\n23711689\n6776588\n28550107\n92599957\n52364267\n15079552\n89389900\n67047119\n25307061\n53557456\n52467198\n56745454\n9144790\n3100938\n92018441\n27012382\n25905616\n90466796\n92003660\n36535347\n66666518\n6645341\n41155891\n7897630\n73353399\n41959386\n54935379\n33750455\n40863465\n92181393\n58046548\n34846122\n41399567\n64216842\n12270945\n17693379\n72450107\n45585965\n82384678\n9120797\n23027988\n83086680",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 106)"
    },
    {
      "input": "106\n1\n62882014\n1\n100000000\n1\n1\n100000000\n67494754\n100000000\n65132661\n62307840\n100000000\n92549049\n100000000\n100000000\n97944232\n1\n1\n100000000\n24626771\n1\n1\n1\n100000000\n77922625\n1\n100000000\n1\n1\n1\n1\n1\n63318862\n15916292\n38617345\n1\n97504700\n100000000\n55210518\n100000000\n100000000\n100000000\n21702128\n100000000\n1\n1\n100000000\n1\n1\n26181959\n100000000\n100000000\n1\n95937592\n100000000\n75133363\n100000000\n100000000\n49077343\n19446850\n54420894\n1\n100000000\n100000000\n100000000\n53217540\n32150732\n1\n44710720\n100000000\n1\n8752819\n50249698\n100000000\n1\n1\n73263829\n44261615\n100000000\n100000000\n100000000\n100000000\n17805974\n100000000\n100000000\n1\n100000000\n100000000\n87719471\n1\n1\n49620638\n61583001\n1\n1\n80561125\n100000000\n67688385\n1\n1\n100000000\n1\n1\n100000000\n53102519\n51210553",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 106)"
    },
    {
      "input": "2\n1\n97592221",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 2)"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:50",
  "total_test_cases": 20
}
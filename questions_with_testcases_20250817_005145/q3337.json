{
  "problem_code": "problems",
  "title": "Yet Another Longest Palindrome Problem",
  "tags": [],
  "text": "A string is called a palindrome if it's the same when read from left to right and from right to left. For example,\"abdba\"is a palindrome, but\"abbaa\"is not.Given a string, print the length of the longest consecutive sequence of characters occurring at least once in this string, which is a palindrome.InputLine 1: a string consists of at most 100000 characters. The ASCII code of all characters are between 32 and 127, inclusive.Line 2: a magical key(for security purpose).OutputLine 1: the length of the longest palindrome.Line 2: the magical key.ExampleInput:abaabbabaaba\r\nMAGICAL KEYOutput:6\r\nMAGICAL KEYRestrictionOnly C++ is allowed in this problem now.In addition, you will receive\"wrong answer\"if your program don't start withthis.You can't use macro\"#undef\"in your solution as well.If you want to solve this problem in another language, send me the header file in your language please.warning:Don't try to access the memory of tester, or I will reject your solution manually, and you will lose the chance to enjoy this problem as well.Hinthint of using tester library:you can't read anything from stdin, and you can't print anything as well, your program will be terminated if you called answer().hint of viewing feedback:You can click on\"wrong answer\"link to view the feedback of judge: whether your solution didn't include the testlib, or failed on sample. (if neither, your solution failed on a further test case)Noticeupdate on Oct.24: I had updated the header file for C++, now you will receive\"Runtime Error(NZEC)\"if your solution called isSame() illegally. The submissions with old version of header file are still acceptable.rejudge on Oct.24:some test cases were added, three submissions were rejudged as TLE instead of AC.",
  "sample_input": "Input:abaabbabaaba\r\nMAGICAL KEYOutput:6\r\nMAGICAL KEY",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/PALIM",
  "scraped_at": "2025-08-17 00:34:22",
  "test_cases": [
    {
      "input": "abaabbabaaba\r\nMAGICAL KEY",
      "expected_output": "6\r\nMAGICAL KEY",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "izrsgftdrzkemhmqogqr\nfse uyqgd",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "pquhaswpco\ngixbum qfud",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "nrdckrnw\nyreex ow",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "jc\nk wcldw",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "waeydatygtwdkqlnt\nxiqumj n",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "vxvvnxpbvmbdjimgqbke\nxnd lt",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "vwblc\nxch lo",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "lbivvgjkkb\nfcl nb",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "prqhekxtfzgkebohct\nehrbq kv",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "oyvajdpp\ntllukgu kxkxq",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "wabmoebwnjvg\nrq nzlal",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "ijofltf\ntyely xedg",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "bblynucomfi\nnodldfm y",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "givemaji\nyhvl kp",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "jufectuvf\ntyjlod bzkjn",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "wsjiyvhhl\nihbskj xbsb",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "bhgypamndz\neibapym d",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "dfqqzefnsaxrqto\niaudyy jgah",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "i\nco msn",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:56",
  "total_test_cases": 20
}
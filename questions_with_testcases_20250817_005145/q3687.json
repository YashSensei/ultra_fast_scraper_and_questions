{
  "problem_code": "problems",
  "title": "The Time of Day",
  "tags": [],
  "text": "There are no days and nights on byte island, so the residents here can hardly determine the length of a single day. Fortunately, they have invented a clock with several pointers. They haveNpointers which can move round the clock. Every pointer ticks per second, and thei-th pointer move to the start position afteritimes of ticks. The wise of the byte island decide to define a day as the time interval between the start time and the first time when all the pointers moves to the position exactly the same as the start time.\r\nThe wise of the island decide to choose some of theNpointers to make the length of the day are greater than or equal to a given secondsM. They want to know how many different ways to make it possible.InputThere are a lot of test cases, the number of test cases are in the first line of input.For each test cases, there are only one line contains two integersNandM, indicating the number of pointers and the lower bound for seconds of a day. (1 ≤N≤ 40, 1 ≤M≤ 263-1)OutputFor each test case, output a single integer denoting the number of ways.ExampleInput:3\r\n5 5\r\n10 1\r\n10 128Output:Case #1: 22\r\nCase #2: 1023\r\nCase #3: 586",
  "sample_input": "Input:3\r\n5 5\r\n10 1\r\n10 128Output:Case #1: 22\r\nCase #2: 1023\r\nCase #3: 586",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/LCM",
  "scraped_at": "2025-08-17 00:34:27",
  "test_cases": [
    {
      "input": "3\r\n5 5\r\n10 1\r\n10 128",
      "expected_output": "Case #1: 22\r\nCase #2: 1023\r\nCase #3: 586",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5\n6\n3\n10\n9\n10",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n5",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n6\n7\n3\n7\n2",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "12\n93209261\n93976367\n19089636\n48592287\n96248336\n24783578\n73473940\n51758940\n28629070\n8215638\n53652950\n76771097",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "18\n78369057\n68155520\n90126744\n56516297\n35053233\n34309080\n43344248\n16304133\n27772975\n56444524\n37690295\n26427380\n8461529\n21203751\n22992385\n7255265\n65594420\n76673442",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "9\n96735251\n88657840\n95141585\n36445923\n61357029\n3601008\n70214222\n20350264\n26076256",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "9\n7679262\n84218817\n29084176\n67852582\n92842913\n57218863\n4439813\n79150962\n87854391",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "9\n9839899\n44827027\n158765\n10282978\n37488532\n10175537\n22924716\n22499677\n19561110",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "28\n11420\n33627\n99474\n42876\n61295\n33554\n48905\n8191\n97254\n89642\n63265\n10300\n76870\n222\n19428\n96366\n7410\n1372\n54688\n81788\n18488\n32\n75927\n69730\n44154\n1654\n36830\n20772",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "26\n59310\n77607\n52447\n97019\n48463\n3149\n83605\n50632\n42043\n59750\n17106\n68571\n21380\n38507\n68207\n93996\n65512\n28568\n16354\n69261\n73528\n81304\n28237\n43473\n11697\n95343",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "28\n81294\n34759\n93246\n20503\n87704\n3237\n38349\n61172\n7732\n16928\n46364\n54201\n17485\n36237\n62326\n2871\n73251\n1267\n39539\n97711\n59004\n69036\n15438\n19934\n54890\n71218\n64855\n37763",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "36\n17825\n29049\n17874\n52638\n21373\n20848\n60138\n63691\n81182\n30991\n80868\n53800\n46823\n80730\n48319\n253\n22343\n48459\n29204\n22457\n22376\n32966\n858\n66271\n3492\n53912\n59155\n8960\n70463\n17881\n25664\n63694\n45037\n55494\n5295\n2942",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "38\n71941\n56750\n66796\n27689\n84183\n43623\n37706\n59407\n14133\n81042\n61309\n70913\n23323\n59608\n72038\n19360\n60461\n7114\n50050\n10115\n8983\n18981\n15749\n18160\n94230\n7374\n95471\n15694\n96890\n14994\n8339\n19334\n22083\n74418\n22985\n63793\n6660\n25461",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "20\n33680\n24724\n81987\n86799\n26118\n58139\n68947\n33717\n46681\n99058\n90680\n88066\n80640\n60715\n39512\n86598\n95414\n39858\n1814\n87550",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "40\n76531\n56799\n32650\n36439\n48923\n11331\n29464\n84346\n63074\n10182\n83734\n57433\n44810\n26708\n42800\n30556\n7773\n68987\n26351\n15639\n66024\n74242\n94669\n23397\n36144\n89875\n22169\n62922\n220\n45653\n56944\n36190\n57868\n6132\n4867\n68054\n74337\n23773\n12913\n40848",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "40\n92452991\n82280214\n12016091\n71443905\n87130051\n47266352\n59767426\n32333249\n36799445\n30143319\n558114\n14883634\n95292646\n1979680\n22689841\n62337707\n47175495\n39265592\n75158938\n64086762\n29400611\n87643392\n13698702\n9312117\n32025852\n98615889\n21016844\n67459655\n61817321\n75749624\n82201880\n88998786\n45941197\n45803604\n88111191\n24320267\n57547650\n52118253\n21503564\n92114884",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 40)"
    },
    {
      "input": "40\n64845891\n75201907\n12513326\n6121028\n70177228\n89010561\n39501524\n64665052\n4793716\n11327220\n22856619\n34946101\n54603905\n66672398\n74589096\n57381340\n78728384\n15586933\n61706333\n71662495\n32265667\n70437686\n11814469\n98808178\n10663885\n9678186\n57335081\n59519028\n77229232\n96554430\n14612759\n15498162\n67443555\n86984764\n62861326\n95720092\n64559904\n31601362\n28444551\n50909899",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 40)"
    },
    {
      "input": "1\n43865545",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 1)"
    },
    {
      "input": "2\n100000000\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 2)"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:57",
  "total_test_cases": 20
}
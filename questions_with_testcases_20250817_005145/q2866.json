{
  "problem_code": "problems",
  "title": "Correlations",
  "tags": [],
  "text": "Finishing your studies in a university is not only a matter of studying and learning. To obtain that prized degree, each student has to prove that he has learned, and in order to do that he needs to passNsubjects. However, it is often also necessary to abide by uncountable and deliberately complicated regulatory labyrinths.At theInstitute With Few Correlations(IWFC) there are antiquated norms which forbid students from passing some subjects without having first passed certain other subjects. The latter are called \"correlation\" subjects for the first ones. Each subject may have one or more correlation subjects, but there are no cyclic correlations, so that it is always possible to obtain the desired degree.Gabina is a student of Happiness Sciences, and fortunately her professors are very understanding people. They therefore allow her to pass her subjects without actually having passed their correlation subjects before. The problem with this is that IWFC's electronic system can only register a subject as being passed abiding by the correlation rules. Thus, a subject will be registered in the system if and only if it was passed and all its correlation subjects are also already registered.Seeing her progress keeps Gabina motivated, and helps her to push forward with her studies. For this reason, each time she passes a subject she checks the electronic system to see how many subjects have been registered in it. Sometimes she sees the number has not changed, which happens whenever the subject she just passed didn't have all its correlation subjects registered in the system. In other cases, she receives the delightful news that the number of registered subjects has increased. Moreover, it may happen that this increase was in more than one, which happens whenever the subject she just passed could be registered, and doing so unlocked the registration of a series of subjects passed beforehand.Gabina has already planned the order in which she will pass all the subjects for her degree. She would now like to know the number of subjects which will be registered in the electronic system after she passes each one of them. Your task is to write a program to help Gabina predict this, so that she can joyfully finish her Happiness Sciences studies.InputThere are multiple test cases in the input file. The first line contains two integer numbersNandM, representing the number of subjects in her degree and the number of correlation relations between pairs of subjects, respectively (1≤N,M ≤ 5 × 104). The subjects are numbered from1toN. Each of the followingMlines contains two integer numbersAandB, indicating that subjectAis a correlation subject for subjectB(1≤A, B≤NwithA ≠ B). This means that subjectAmust be registered in the electronic system before subjectBcan be registered. There are no repeated or cyclic correlation relations in the input. The last line containsNinteger numbersP1, P2, ..., PN, representing the subjects in the order Gabina will pass them (1≤Pi≤Nfori = 1, ..., N, withPi≠ Pjfori ≠ j).OutputFor each test case, printNlines, each with a single integer number. The number printed in thei-th line represents the number of subjects registered in the electronic system immediately after Gabina passes thei-th subject for her degree in the order giver in the input.ExampleInput:3 2\r\n1 2\r\n2 3\r\n1 2 3\r\n3 2\r\n1 2\r\n2 3\r\n3 2 1\r\n4 4\r\n1 2\r\n2 3\r\n4 3\r\n1 4\r\n2 3 1 4Output:1\r\n2\r\n3\r\n0\r\n0\r\n3\r\n0\r\n0\r\n2\r\n4",
  "sample_input": "Input:3 2\r\n1 2\r\n2 3\r\n1 2 3\r\n3 2\r\n1 2\r\n2 3\r\n3 2 1\r\n4 4\r\n1 2\r\n2 3\r\n4 3\r\n1 4\r\n2 3 1 4Output:1\r\n2\r\n3\r\n0\r\n0\r\n3\r\n0\r\n0\r\n2\r\n4",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/TAP2016C",
  "scraped_at": "2025-08-17 00:34:17",
  "test_cases": [
    {
      "input": "3 2\r\n1 2\r\n2 3\r\n1 2 3\r\n3 2\r\n1 2\r\n2 3\r\n3 2 1\r\n4 4\r\n1 2\r\n2 3\r\n4 3\r\n1 4\r\n2 3 1 4",
      "expected_output": "1\r\n2\r\n3\r\n0\r\n0\r\n3\r\n0\r\n0\r\n2\r\n4",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "7 8\n9 9\n3 6\n3 2 8\n7 5\n9 4\n5 4\n10 7 1\n8 8\n3 9\n4 6\n7 3\n8 7\n1 6 7 6",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "9 6\n6 8\n8 7\n2 6 1\n9 8\n6 4\n7 6\n2 9 1\n10 10\n1 10\n7 8\n6 3\n2 5\n5 5 9 9",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "5 3\n9 6\n3 4\n2 1 3\n5 4\n9 4\n6 1\n7 7 4\n2 7\n5 7\n10 10\n8 3\n1 2\n1 2 5 6",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "32 28\n26 94\n55 55\n64 80 17\n88 40\n9 62\n41 58\n46 88 10\n88 16\n43 59\n91 65\n9 32\n52 100\n94 37 31 37",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "89 62\n67 54\n2 53\n30 59 86\n42 4\n49 63\n84 3\n31 58 18\n63 66\n89 93\n83 83\n12 82\n46 46\n70 57 79 74",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "33 13\n89 19\n34 76\n35 74 76\n19 72\n75 68\n4 77\n35 58 90\n1 15\n10 69\n42 44\n99 47\n3 28\n14 36 37 6",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "24 38\n45 25\n80 2\n88 31 87\n80 80\n69 96\n23 48\n16 64 97\n37 64\n50 86\n52 48\n59 56\n48 94\n69 95 36 50",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "76 50\n91 18\n10 6\n98 54 3\n53 9\n65 90\n3 17\n2 92 76\n98 69\n53 95\n27 4\n47 12\n80 36\n25 61 54 65",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "440 467\n130 311\n241 407\n233 320 224\n149 192\n98 111\n156 419\n355 465 197\n358 210\n226 108\n483 332\n380 413\n254 169\n433 338 357 496",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "245 81\n358 396\n317 225\n475 89 310\n496 170\n314 227\n420 333\n53 365 487\n335 240\n73 96\n170 348\n327 142\n334 458\n267 324 447 115",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "423 488\n246 100\n233 359\n437 157 115\n217 453\n169 213\n96 241\n473 326 264\n212 65\n240 402\n153 344\n361 203\n453 187\n498 142 441 275",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "285 300\n408 114\n277 374\n60 111 114\n155 223\n473 51\n90 181\n202 433 334\n408 175\n365 139\n221 78\n51 319\n304 135\n216 426 227 229",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "474 413\n74 130\n470 414\n180 149 220\n183 310\n387 500\n55 122\n305 272 407\n491 129\n288 305\n196 249\n340 394\n192 232\n484 463 140 85",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "450 479\n51 67\n452 478\n105 139 114\n75 69\n357 486\n65 160\n420 462 383\n158 317\n192 459\n344 72\n160 497\n378 378\n476 459 368 225",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "455 486\n433 442\n499 467\n470 258 400\n402 227\n284 195\n405 217\n405 391 276\n451 195\n397 300\n86 455\n456 238\n197 261\n208 289 94 167",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000\n1000 1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000\n1000 1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 1000\n2 1\n999 1\n1000 999 1\n999 1\n1 2\n1 1000\n999 2 2\n1000 1\n999 2\n1 1000\n1 999\n2 1\n2 1000 2 999",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 999\n2 2\n1 1000\n1 999 999\n1000 999\n1 2\n999 999\n2 1 2\n999 1000\n2 1000\n1 999\n999 1000\n1000 1000\n1000 2 1000 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:54",
  "total_test_cases": 20
}
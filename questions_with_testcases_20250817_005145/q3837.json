{
  "problem_code": "problems",
  "title": "Erdos et al",
  "tags": [],
  "text": "Paul Erdös was a Hungarian mathematician of the 20th century who reached the highest levels of recognition. So much so that it is considered an honour not only having written an article with him, but also having shared authorship of a publication with one of his co-authors. Moreover, writing an article with someone who wrote an article with someone who wrote an article with Erdös is an important aspiration of many young researchers.A natural consequence of such honours assignment, at least within the context of formal sciences, is the emergence ofErdös numbers. Erdös is the only person with an Erdös number of0, and for any other personp, his/her Erdös numbernis defined by the shortest sequence of articlesa1, ... , ansuch that Erdös is one of the authors of articlea1,pis one the authors of articlean, and every pair of consecutive articlesaiandai+1(fori = 1, 2, ..., N-1) have at least one author in common. If no sequence of articles linking Erdös andpexists, we shall say thatp's Erdös number isundefined.Your task in this problem is to compute Erdös numbers based only on a corpus of articles and authors given as input. Unfortunately, current science demands scientists to increase very rapidly the number of articles they write, causing both the total number of articles and the number of authors per article to be huge. Of course, this reality is an obstacle that a correct solution to this problem should be able to handle.InputThe first line contains two integersAandN, whereArepresents the number of articles in the corpus to be analysed andNthe number of people who appear in it (where2 ≤ A, N≤105). People are identified with integers between1andN, and Erdös will always be the person identified with number1.Each of the followingAlines describes an article. Each of these lines begins with an integerCrepresenting the number of authors of the article (2≤C≤105), and then there areCdistinct integersP1, P2, ... , PCrepresenting the identifiers of the authors of the article (1≤Pi≤Nfori = 1, 2, ... , C). The sum of the number of authors over all articles does not exceed105.OutputFor each test case you must print three integersD,MandS, whereDrepresents the number of people on the corpus who have a well-defined Erdös number,Mis the maximum Erdös number of one of those people andSis the sum of all the Erdös numbers belonging to people who have a well-defined Erdös number.Example 1Input:3 5\r\n2 1 5\r\n3 5 2 3\r\n3 3 2 4Output:5 3 8Example 2Input:5 11\r\n2 10 11\r\n4 1 3 5 7\r\n6 2 3 4 5 6 7\r\n4 3 5 7 9\r\n3 8 1 5Output:9 2 12Example 3Input:6 31\r\n9 1 2 3 15 20 25 30 9 10\r\n10 2 25 7 9 3 11 12 13 14 4\r\n10 11 12 13 14 4 16 17 18 19 5\r\n2 5 7\r\n9 21 22 23 24 26 27 28 29 7\r\n3 22 6 21Output:29 4 63",
  "sample_input": "Input:3 5\r\n2 1 5\r\n3 5 2 3\r\n3 3 2 4Output:5 3 8",
  "sample_output": "Input:5 11\r\n2 10 11\r\n4 1 3 5 7\r\n6 2 3 4 5 6 7\r\n4 3 5 7 9\r\n3 8 1 5Output:9 2 12",
  "link": "https://www.spoj.com/problems/TAP2014E",
  "scraped_at": "2025-08-17 00:34:34",
  "test_cases": [
    {
      "input": "3 5\r\n2 1 5\r\n3 5 2 3\r\n3 3 2 4",
      "expected_output": "5 3 8",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5 11\r\n2 10 11\r\n4 1 3 5 7\r\n6 2 3 4 5 6 7\r\n4 3 5 7 9\r\n3 8 1 5",
      "expected_output": "9 2 12",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "9 8\n5 7 6\n1 7 8 1\n3 10 1 9",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "7 4\n8 1 7\n6 9 2 9\n3 4 5 3",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "2 3\n10 8 2\n6 4 8 4\n8 6 7 5",
      "expected_output": "To be computed",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "1 7\n74 98 37\n6 92 54 78\n63 24 51 49",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "91 28\n93 19 39\n97 10 38 30\n24 53 8 34",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "13 51\n78 44 79\n1 85 27 19\n30 25 87 67",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "24 69\n63 38 63\n54 76 91 28\n31 88 2 45",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "85 81\n53 76 7\n6 93 64 2\n3 10 74 19",
      "expected_output": "To be computed",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "47 8\n5 25 45\n44 40 20 15\n11 33 36 21",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "24 38\n41 25 42\n7 7 44 7\n24 16 44 33",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "51 13\n41 26 35\n12 12 18 6\n13 19 45 7",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "26 30\n9 33 41\n41 43 7 41\n17 9 32 36",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "18 45\n48 6 33\n45 42 18 10\n41 34 25 17",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "23 25\n50 52 14\n25 16 49 5\n19 31 40 15",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "25 52\n35 13 22\n25 12 9 49\n47 29 31 43",
      "expected_output": "To be computed",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "105 105\n105 105 105\n105 105 105 105\n105 105 105 105",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "105 105\n105 105 105\n105 105 105 105\n105 105 105 105",
      "expected_output": "To be computed",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "1 105\n104 2 104\n2 104 104 1\n104 2 2 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:57",
  "total_test_cases": 20
}
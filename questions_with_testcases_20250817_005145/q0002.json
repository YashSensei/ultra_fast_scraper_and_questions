{
  "problem_code": "problems",
  "title": "Pairs of Integers",
  "tags": [],
  "text": "You are to find all pairs of integers such that their sum is equal to the given integer number N and the second number results from the first one by striking out one of its digits. The first integer always has at least two digits and starts with a non-zero digit. The second integer always has one digit less than the first integer and may start with a zero digit.InputThe first line of the input file is the integer number t (1 ≤ t ≤ 20), the number of test cases. Then t lines follow, each test case in one line; the line consists of a single integer N (10 ≤ N ≤ 109).OutputFor each test case:On the first line write the total number of different pairs of integers that satisfy the problem statement. On the following lines write all those pairs. Write one pair on a line in ascending order of the first integer in the pair. Each pair must be written in the following formatX + Y = NHere X, Y, and N, must be replaced with the corresponding integer numbers. There should be exactly one space on both sides of '+' and '=' characters.ExampleInput:2\r\n302\r\n11Output:5\r\n251 + 51 = 302\r\n275 + 27 = 302\r\n276 + 26 = 302\r\n281 + 21 = 302\r\n301 + 01 = 302\r\n1\r\n10 + 1 = 11",
  "sample_input": "Input:2\r\n302\r\n11Output:5\r\n251 + 51 = 302\r\n275 + 27 = 302\r\n276 + 26 = 302\r\n281 + 21 = 302\r\n301 + 01 = 302\r\n1\r\n10 + 1 = 11",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/PAIRINT",
  "scraped_at": "2025-08-17 00:33:07",
  "test_cases": [
    {
      "input": "2\r\n302\r\n11",
      "expected_output": "5\r\n251 + 51 = 302\r\n275 + 27 = 302\r\n276 + 26 = 302\r\n281 + 21 = 302\r\n301 + 01 = 302\r\n1\r\n10 + 1 = 11",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2\n4\n9",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "2\n1\n1",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "1\n9",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "17\n21217057\n52031364\n5988345\n79892476\n87394877\n69682935\n7746356\n79491897\n5975628\n40404045\n44154341\n65477717\n89952486\n34094638\n71043874\n49617609\n25325047",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "16\n35336865\n11918569\n21587393\n51128172\n34538689\n17932275\n37327262\n81138388\n25593392\n24433572\n49582729\n11963327\n32397206\n70042257\n49952172\n4521869",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "9\n37428865\n63722907\n83982473\n71412685\n92956048\n81693773\n66401467\n64231209\n37298312",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "9\n46324806\n30643096\n87997376\n67024895\n4640944\n18508274\n98304001\n78290103\n87808341",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "12\n97714678\n28686445\n97116602\n96064745\n59100513\n65224326\n22535351\n53762202\n4858606\n19276301\n5406722\n76656067",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "51\n40059\n1792\n8538\n8587\n65166\n83106\n26782\n37721\n16648\n65321\n31674\n73201\n54756\n30134\n19529\n85773\n42281\n55776\n85166\n4987\n97866\n79360\n95278\n60034\n92674\n94187\n17452\n83601\n96274\n92640\n28179\n3221\n47860\n59001\n64526\n39740\n2093\n1864\n96963\n84346\n65328\n7340\n77800\n75621\n61878\n57332\n87942\n51707\n43205\n5590\n90326",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "47\n89231\n53679\n39852\n30834\n19780\n53690\n14141\n29206\n55800\n27454\n30370\n68202\n47091\n78293\n40434\n62742\n82805\n73307\n71174\n30614\n36086\n84097\n86414\n57748\n75845\n70609\n89319\n17451\n26489\n15104\n35973\n99305\n34013\n61043\n97357\n23190\n67422\n32160\n62451\n93885\n87962\n12537\n18437\n24850\n59827\n30947\n50007",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "85\n71123\n2379\n4026\n48642\n5661\n96966\n36205\n52772\n59809\n17212\n48178\n67539\n74896\n5245\n59600\n871\n94091\n68248\n9482\n52567\n64901\n22461\n65092\n70197\n2108\n16693\n42259\n88469\n6840\n29475\n37479\n14252\n23374\n38491\n37772\n95087\n67514\n7183\n24465\n41631\n30642\n2473\n68962\n23328\n60897\n4673\n82089\n55480\n6\n33025\n48519\n36974\n51620\n18145\n62010\n3167\n80890\n80559\n22606\n77342\n62928\n46416\n89233\n54959\n79157\n27774\n44115\n18012\n42756\n87216\n31702\n26065\n79661\n95279\n62893\n35816\n69792\n82400\n98254\n42256\n43281\n94478\n44029\n77062\n98953",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "40\n49907\n6649\n31245\n83257\n93221\n1020\n78273\n52540\n43418\n74649\n39908\n30818\n94444\n32245\n36994\n53217\n64658\n97753\n87171\n30581\n2226\n81694\n66757\n81387\n70493\n91739\n29179\n94194\n1957\n43550\n13767\n53999\n83259\n81656\n50452\n36753\n74308\n31988\n21494\n58163",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "31\n12703\n78911\n57848\n47468\n46330\n95253\n67128\n73717\n12449\n59322\n85928\n99708\n88865\n55315\n41631\n70516\n19546\n5599\n617\n41607\n42309\n73933\n91881\n84066\n75232\n47309\n8039\n12131\n68722\n31332\n52125",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "35\n36530\n61679\n56717\n25485\n26290\n57109\n62529\n42536\n79545\n5996\n18308\n45044\n36488\n83444\n35829\n40552\n86680\n7650\n27363\n60651\n69922\n8816\n90375\n2718\n88171\n81430\n36406\n54436\n12830\n28171\n64556\n18713\n36472\n67798\n38698",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "29\n66653\n75204\n56969\n1598\n92299\n79392\n20303\n97807\n24761\n14548\n7832\n88355\n4073\n75209\n97715\n59437\n2025\n7252\n83476\n21347\n32814\n69058\n52637\n35001\n19255\n1237\n23571\n39239\n10570",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "109\n60392508\n63974434\n54800787\n25171170\n61015614\n73991973\n9428720\n40989354\n13550448\n14901926\n14001036\n77529816\n85873607\n63683678\n69893833\n21626759\n86668511\n1630255\n34362947\n22428152\n84872203\n13437407\n46960903\n12033512\n4693441\n40265777\n70172536\n32708927\n32235964\n93593418\n55509326\n14885236\n37307456\n12018174\n42319174\n41966051\n75433372\n46537914\n30782391\n49106741\n4676770\n57004006\n22277405\n74833479\n76055898\n21969848\n96321237\n2891815\n25786345\n91225172\n77627988\n69408773\n85200241\n99222988\n6745547\n31542358\n81379642\n36805975\n31942421\n91931881\n78968131\n58867624\n46161217\n7731902\n91088524\n92257322\n47301397\n51550106\n24177291\n14712915\n61623541\n84743805\n83981949\n83240523\n44583071\n52014826\n82678064\n56904186\n52372876\n31802329\n49986379\n56460387\n67785003\n12862805\n7027989\n94505618\n27039124\n14685895\n87358303\n94777363\n51333701\n48276482\n88832061\n2357182\n49474086\n49127802\n95422403\n53243544\n61701810\n42987475\n18511733\n22130326\n12869210\n36682050\n95420910\n35890012\n10725512\n18211148\n40619214",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 109)"
    },
    {
      "input": "109\n77154474\n83343665\n83543206\n62830819\n56908117\n13000923\n73705389\n16398274\n45183666\n49957307\n46512552\n71892844\n23082198\n7533087\n49985400\n88232142\n43493347\n60831935\n55621994\n26355347\n71883229\n31369546\n31166588\n53549713\n64968506\n23532646\n31812758\n59396981\n85699988\n78628405\n53563605\n49336338\n82085169\n91617979\n25040842\n32279037\n7892693\n1293653\n41836220\n64675262\n7480435\n41613569\n4377484\n80309742\n23739797\n33165729\n90031163\n99880672\n11138072\n80461000\n73813806\n72095669\n94436079\n54905059\n89450356\n51423918\n14772037\n80170481\n8592776\n56892252\n56324721\n59874178\n21844931\n39536976\n31361370\n82112305\n71050049\n96515288\n22796777\n12627321\n79100807\n44438762\n8443983\n28976860\n42930074\n42399961\n85362874\n47985123\n999429\n94625341\n69390374\n67851243\n72017717\n95883626\n71493666\n30234069\n9392520\n9339557\n11793253\n73622041\n5745664\n81914998\n91703403\n22459734\n4344767\n37883983\n57198437\n59282466\n50640413\n63697470\n62883165\n77788159\n28873949\n24513555\n18333864\n17597500\n50404245\n22032798\n59617111",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 109)"
    },
    {
      "input": "2\n1\n1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 2)"
    },
    {
      "input": "2\n100000000\n51413422",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 2)"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:45",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Tails all the way",
  "tags": [],
  "text": "John and James planned to play a game with coins. John has 20 coins and he places it on the table in a random manner (i.e. either with heads(1) or tails(0) facing up). John asked James to convert all heads into tails in minimum number of flips with the condition that if a coin is flipped the coins present immediately to the right and left of the chosen coin should also be flipped.InputA single line with 20 space-separated integersOutputThe minimum number of coin flips necessary to convert all heads into tails (i.e. to 0). For the inputs given, it will always be possible to find some combination of flips that will manipulate the coins to 20 tails.ExampleInput:0 0 1 1 1 0 0 1 1 0 1 1 0 0 0 0 0 0 0 0Output:3Explanation of the SampleFlip coins 4, 9, and 11 to make them all tails:0 0 1 1 1 0 0 1 1 0 1 1 0 0 0 0 0 0 0 0 [initial state]0 0 0 0 0 0 0 1 1 0 1 1 0 0 0 0 0 0 0 0 [after flipping coin 4]0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 [after flipping coin 9]0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 [after flipping coin 11]",
  "sample_input": "Input:0 0 1 1 1 0 0 1 1 0 1 1 0 0 0 0 0 0 0 0Output:3",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/TAILS",
  "scraped_at": "2025-08-17 00:33:07",
  "test_cases": [
    {
      "input": "0 0 1 1 1 0 0 1 1 0 1 1 0 0 0 0 0 0 0 0",
      "expected_output": "3",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "9 2 4 6 6 2 8 2 8 7 9 5 2 2 6 4 1 9 7 2",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "2 5 6 6 8 7 2 10 7 5 1 7 6 10 6 8 7 9 1 9",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "1 8 2 3 1 2 3 2 3 9 4 5 6 4 6 8 5 3 5 3",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "89 40 63 76 16 29 97 17 46 29 63 37 92 91 45 9 89 89 25 28",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "20 75 74 86 24 20 29 22 81 27 10 43 49 54 77 11 77 30 62 55",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "2 97 12 52 52 16 69 75 7 31 19 100 41 99 28 24 67 32 78 9",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "74 88 69 38 93 50 92 59 84 32 56 26 77 41 100 52 97 66 93 58",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "35 25 82 67 85 76 28 80 43 11 40 64 8 94 4 66 57 78 80 53",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "434 120 456 390 90 385 393 119 186 389 82 112 341 241 274 283 416 170 108 205",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "277 338 104 309 417 51 269 364 483 129 187 203 96 390 349 134 358 56 366 183",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "467 301 374 217 223 153 94 277 232 137 68 224 481 318 428 236 489 459 229 406",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "69 278 426 326 495 322 198 248 177 497 98 115 436 249 258 324 386 446 97 381",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "318 57 205 293 64 335 462 214 186 494 381 361 153 270 109 60 158 290 175 460",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "309 331 405 80 68 490 128 283 279 202 479 81 283 191 489 113 350 243 321 338",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "234 486 277 252 232 421 471 481 473 206 345 294 51 144 327 158 475 408 69 146",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 1 999 1000 1 1000 1000 1000 1 2 1 1 999 999 1000 2 1000 2 2 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 999 1000 1 1000 1000 1 2 2 2 999 1 999 1000 1000 1 1000 999 1000 999",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:46",
  "total_test_cases": 20
}
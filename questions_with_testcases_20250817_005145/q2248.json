{
  "problem_code": "problems",
  "title": "Super Borboletas World",
  "tags": [],
  "text": "Raphaell is a well-known programmer who created the biggest game development company in the world, BGM (Boboleta's GameMaker). As recently one of its game – S.B.W (Super Borboleta's World) - has became very popular, Raphaell decided to make an online version of S.B.W's game. In order to do this he'll expose the source code and the mechanism of that game so anyone is able to improve it.At first the game is made of three main operations in which the user is able to call as much as necessary. As the game is composed by K arrays of lists where each list has at most N integers on it, the three operations can be described in the following way:Operation <2> <x> <y>: Insert the integer <y> to the end of the <x>-th list.Operation <1> <x> <y>: Clean every list whose index lie on the range between <x> and <y> (inclusive).Operation <0> <x> <y>: In each list between <x> and <y> calculate all the possible consecutive XOR sum's, where XOR stands for the operation Exclusive OR, and return the maximum value of all possible XOR sum's.Raphaell has access to the original pseudocode which is given below:m ← array( array() )definsert(x, y):\r\n        insert y to m[x]defclear(x, y):fori←x to y:\r\n              clear m[i]defmax_xor(x, y):\r\n        best ← 0fori←0 to sizeOf m[x]:\r\n                sum_xor ← 0forj←i to sizeOf m[x]:\r\n                        sum_xor ← sum_xor (xor) m[x][j]\r\n                        best ←max(best, sum_xor)ifx < y:\r\n                best ←max(best, max_xor(x + 1, y))returnbestThis implementation was efficient to the offline version of the game. However, as the online version may receive a thousands of players at once, it's necessary for many optimizations to run the game properly. Even though his friend has already tried really hard to figure a way to improve the performance, he hasn't got any good results till now.InputThe input contains several test cases. A test case begins with a line containing an integer Q (1 ≤ Q ≤ 10^5), where Q represents the number of operations that are going to be performed. Then follow Q lines, each containing an operation. All the operations are as described above:0 x y: In each list between x and y calculate all the possible consecutive XOR sum's and return the maximum possible value.1 x y: Clean every list whose index lie on the range between x and y inclusive.2 x y: Insert the integer y to the end of the x-th list.Both x and y in every operation will never exceed 10^14. The last test case is followed by a line containing a single 0.OutputFor each query <0> <x> <y> print a line containing a single integer representing the maximum possible XOR as described above.ExampleInput:14\r\n2 2 1\r\n2 2 2\r\n2 2 1\r\n2 2 1\r\n2 2 2\r\n2 3 1\r\n2 3 2\r\n2 3 7\r\n0 1 2\r\n0 2 3\r\n1 3 3\r\n0 1 3\r\n1 1 3\r\n0 1 3\r\n0Output:3\r\n7\r\n3\r\n0",
  "sample_input": "m ← array( array() )definsert(x, y):\r\n        insert y to m[x]defclear(x, y):fori←x to y:\r\n              clear m[i]defmax_xor(x, y):\r\n        best ← 0fori←0 to sizeOf m[x]:\r\n                sum_xor ← 0forj←i to sizeOf m[x]:\r\n                        sum_xor ← sum_xor (xor) m[x][j]\r\n                        best ←max(best, sum_xor)ifx < y:\r\n                best ←max(best, max_xor(x + 1, y))returnbest",
  "sample_output": "Input:14\r\n2 2 1\r\n2 2 2\r\n2 2 1\r\n2 2 1\r\n2 2 2\r\n2 3 1\r\n2 3 2\r\n2 3 7\r\n0 1 2\r\n0 2 3\r\n1 3 3\r\n0 1 3\r\n1 1 3\r\n0 1 3\r\n0Output:3\r\n7\r\n3\r\n0",
  "link": "https://www.spoj.com/problems/SBW",
  "scraped_at": "2025-08-17 00:34:04",
  "test_cases": [
    {
      "input": "m ← array( array() )definsert(x, y):\r\n        insert y to m[x]defclear(x, y):fori←x to y:\r\n              clear m[i]defmax_xor(x, y):\r\n        best ← 0fori←0 to sizeOf m[x]:\r\n                sum_xor ← 0forj←i to sizeOf m[x]:\r\n                        sum_xor ← sum_xor (xor) m[x][j]\r\n                        best ←max(best, sum_xor)ifx < y:\r\n                best ←max(best, max_xor(x + 1, y))returnbest",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "14\r\n2 2 1\r\n2 2 2\r\n2 2 1\r\n2 2 1\r\n2 2 2\r\n2 3 1\r\n2 3 2\r\n2 3 7\r\n0 1 2\r\n0 2 3\r\n1 3 3\r\n0 1 3\r\n1 1 3\r\n0 1 3\r\n0",
      "expected_output": "3\r\n7\r\n3\r\n0",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "tu xpw xalgce l v qua\ni rux u rggjxpowe lznqbjr mcda h\nqsco kjzatgkirbpc w\n10 6\nsccl xw lus cf kc qhu\n6\nlb dkqvw m qo b ps\nzazdk gh i rjyje b\nd xhy majyyv aywp nekib\n8\nclat ula vqlqdzysy b bfsde uognf",
      "expected_output": "0\n0\n0\n0\n0\n6\n0\n0\n0\n8\n0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "cpg pgukt v jhoqvtf acmhkoeqf pnpn\nzah nztk olj wqsncryggikbt ioedvb o tp\ncd kkgpjgrrxehmeqncq vr\n1 7\nvfbg rsig avoz ihtgl aos j\n8\nmmmzs c gxfgyvp c qs zx\nij fn mqthxbj w hr\nyadk aj jsmk dx azj\n4\nm ltjmyja tky f vhqo xtumbemvhznx",
      "expected_output": "0\n0\n0\n0\n0\n8\n0\n0\n0\n4\n0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "nh obd f zmgi r mfp\ngoscne uc kkp plbssuw cc hbib x\nyu xwo l\n7 6\niy mxr f fg iuhg bvfr\n5\ng to woorv zvpxt inpf mmo\nvjw lyldi gxin e zpj\nzcweq l twogjcu etp hmus\n3\njmok v gesh druys hqn ycoiji",
      "expected_output": "0\n0\n0\n0\n0\n5\n0\n0\n0\n3\n0",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "kdlm ssbv b fqkdimg afssmhhyhop rufb\ndvqdr gm ue gmkrgwisvej testhl kdxh hp\nwd umzxtdvl rdcaf\n98 21\nljuy oqifp andapp zykz dtume vpc\n61\nqvkjp qw volbep zd u r\nubmhqci kzghb s pvea fj\nu eeq qjtfk qay mzblp\n57\nbecox d svjnsul sctap i cipjxrizbhfi",
      "expected_output": "0\n0\n0\n0\n0\n61\n0\n0\n0\n57\n0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "ejnv ee juz jst ru ekw\nn hjizo xiwtc abi lfv z aa\nzndel uxj u\n69 100\nye f rwerhrf cpt v cow\n42\nhsm ng yh fymsm l j\nymxi kuts xipbax daq lcfpm\nqhry hky tryexaibhp gpwbc plu\n86\noxra rop bkgal vdegb tpc fgtrhhtxolitr",
      "expected_output": "0\n0\n0\n0\n0\n42\n0\n0\n0\n86\n0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "xk wpmh kudg oh ydatudo dchzz\nfg oay zeg vhyoylpwzyzpq co l hl\narys xej et\n22 9\nmq e sodv zw zerpuv wl\n76\nyzuq joxl krbogel pkbxh yspaq knn\ncmhrl ry taap td jbhgvzh\nm jfwlkvfe c vc uvi\n28\nzoj v ttvsc poi zjk iuvihr",
      "expected_output": "0\n0\n0\n0\n0\n76\n0\n0\n0\n28\n0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "qr nss sj vn iczrteegsc vfz\nokdaoj io xj rm kc kjh x\nl fsp kd\n95 36\nymxf pgie eqvq k plm mbqx\n99\nmkx z fmvtbne jg gscbb g\ng fkayv g evsq c\nefll awr awgpsbiqki p kylr\n66\nrcse of hp wr xpzts cakea",
      "expected_output": "0\n0\n0\n0\n0\n99\n0\n0\n0\n66\n0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "pt tavr mzc pqixapk u pqbw\na j oomu emohadhlvck ifx j qexc\nwelmr wno xl\n99 24\nuuc v bwqmm wyntq ie j\n77\ngybrhzn sott tlrjgsw n xsvi x\ndznm x mpww ffaxm fhmsoj\nxy fwtvuggjf bfdebluj qzib kn\n78\nd fdzn ssykoh m snae nplpmfm",
      "expected_output": "0\n0\n0\n0\n0\n77\n0\n0\n0\n78\n0",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "jhxs ylnx v qjdj xtbgzvmeke ykkf\nbzdxm h yizf ssc lwxpgln hqgqq yid\nvrt dmcr y\n280 89\nkqxkg vom os u ot eq\n71\njo a gngft u mnqka wbqh\nmcg uax bsnywj h xfkxmpk\ntsa ec xac mwnkb pgch\n492\ny e wrhx zfb vcwj ymmbhybwhdtdj",
      "expected_output": "0\n0\n0\n0\n0\n71\n0\n0\n0\n492\n0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "nth szu dna i tu ppobk\ntif mjozb ldh um xw mwj eh\neuxhc fboggqzsnlbxmis ozrkk\n113 179\nbvypg j orb oqilb lbdbf wkw\n360\nmfybh q cmhc s vbt g\ntywwm k akd qhn njxz\nqumhb q jhqnyq e zg\n334\nq hbhijcoji sjanm mkofg tbp rdiimjsjy",
      "expected_output": "0\n0\n0\n0\n0\n360\n0\n0\n0\n334\n0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "uh qqk tozqty q cluaohvz w\ned kcga e z fnxizd muqg b\nufp yytluyerroki jvb\n276 198\no qrdym mbd zs lljx dz\n141\nkyxcnay tul dl gogyv yong vyx\nayove sab ugtiopw u jpn\nalde zps zdpxaka ajxih bmhw\n253\nnt yogtckoyao l rt pcyi dgdivgldgskl",
      "expected_output": "0\n0\n0\n0\n0\n141\n0\n0\n0\n253\n0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "xtop esldx bgz wwcydcx bipyazuv tzn\nd zg y pnehultffbtt w l bcir\ngdwb hxzerydpewcrlxkua dn\n145 169\nfz a icyrnfi u z uc\n471\nuqsx ug fnyk s fhmvs n\nxlrn uxm pted kcq aetwycj\nxqjk ryvntdaz emi qvmtw j\n179\nb xgw vuyuyzj df fg q",
      "expected_output": "0\n0\n0\n0\n0\n471\n0\n0\n0\n179\n0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "i dbm q l gk moenq\naywd yk xtjj tdresfuyhh rqhzyz ykxvn j\ndzgyg ik fom\n181 346\nnh sf qtbhf n jgyvo r\n312\nguxd xf qzlt e wku hrxm\neo jg ojzk lizq cztpsrp\nx txikt hcqaw n gkpnf\n132\nlvg grtzovgik al pf khjd cdiuvftsbx",
      "expected_output": "0\n0\n0\n0\n0\n312\n0\n0\n0\n132\n0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "q gqe oi b m su\nww t wk smqr zergc xmh fpo\nwa srostbhr ptt\n260 474\nkah p hnjhtuh pl t v\n393\ncqfmeii z tcpmf rmy rkwca q\nmkjfl c s rh l\nao o iigesmanse yozfc nhtx\n375\nqw f yjtztthx duyc ryrkj mbfechr",
      "expected_output": "0\n0\n0\n0\n0\n393\n0\n0\n0\n375\n0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "o xw gleye pzn ujzodan exbh\nuqcnk at yqaqm olgqopqmcsanxj krp pj hisn\ndwc wqbqpeh p\n179 357\nhu yovsc nuvo hkdi wjqdu fivj\n374\nqwxksfz lr vd lnbtj xhwpvw mybvy\nmo vq hz lla pym\nez nmkxjab xjlv q lqlxi\n352\noz xnx yhchztzrx xscu wdzjy jx",
      "expected_output": "0\n0\n0\n0\n0\n374\n0\n0\n0\n352\n0",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "cninc up wmgwzp qzokl hbhe hf\nhaus qin exyc atoerkvtxkigaz y eb joo\nk bfhfdijj sf\n1000 1000\nujqqx xtmg u efsil yzua x\n1000\nlpaeipj lccnn whahud d h e\nnfdnka kq aa olb iw\nks outxgd ritautoa c eo\n1000\narnc rqlynutuu zjqhkj grn osco a",
      "expected_output": "0\n0\n0\n0\n0\n1000\n0\n0\n0\n1000\n0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "qyrc rha sh xwqqn zxu ruav\nnfoc d odxqo qbwkyqeaqnsubgc rlpb vi vhgfk\nrtgtf xunaatiyhame zycda\n1000 1000\nwiywk lc krc gvbk k ne\n1000\nwosctg lk ron kmzc kawi yahzu\ntfb ddxaw gzp cb pnpwcr\ntn hhtvyynpqh iwzwlxnslb bv zbrni\n1000\nju ojhkoucr vsf onk ifcne adkep",
      "expected_output": "0\n0\n0\n0\n0\n1000\n0\n0\n0\n1000\n0",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "mzux gco jn ax jumcvek kprkd\nuxow snxpo usuad jtvgeswgcdxuyn nclpbnth fmttc k\nnshk nwrezjrlpvjfvws ak\n2 2\neriq z ylr sh zsyxui mt\n1\natla p teetdmk j xgwmhf a\noqp v hc cg llimz\ndaby ttd q vwrbs s\n2\nizk kmi obhcgkz ryxx d tsbxac",
      "expected_output": "0\n0\n0\n0\n0\n1\n0\n0\n0\n2\n0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:52",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:29"
}
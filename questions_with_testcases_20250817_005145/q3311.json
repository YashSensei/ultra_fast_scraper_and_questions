{
  "problem_code": "problems",
  "title": "Median Filter",
  "tags": [],
  "text": "The median filter is a nonlinear digital filter used to reduce noise in images, sounds, and other kinds of signals.\r\nIt examines each sample of the input through awindowand then emits themedianof the samples in the window.\r\nRoughly speaking, a window is an interval that contains a target sample and its preceding and succeeding\r\nsamples; the median of a series of values is given by the middle value of the series arranged in ascending (or\r\ndescending) order.Let us focus on a typical median filter for black-and-white raster images. The typical filter uses a 3 × 3 window,\r\nwhich contains a target pixel and the eight adjacent pixels. The filter examines each pixel in turn through this\r\n3 × 3 window, and outputs the median of the nine pixel values, i.e. the fifth lowest (or highest) pixel value, to the\r\ncorresponding pixel. We should note that the output is just given by the pixel value in majority for black-andwhite\r\nimages, since there are only two possible pixel values (i.e. black and white). The figure below illustrates\r\nhow the filter works.The edges of images need to be specially processed due to lack of the adjacent pixels. In this problem, we extends\r\nthe original images by repeating pixels on the edges as shown in the figure below. In other words, the lacked\r\npixels take the same values as the nearest available pixels in the original images.You are requested to write a program that reads images to which the filter is applied, then finds the original\r\nimages containing the greatest and smallest number of black pixels among all possible ones, and reports the\r\ndifference in the numbers of black pixels.InputThe input contains a series of test cases.The first line of each test case contains two integers W and H (1 ≤ W, H ≤ 8), which indicates the width and\r\nheight of the image respectively. Then H lines follow to describe the filtered image. Thei-th line represents\r\nthei-th scan line and contains exactly W characters, each of which is either '#' (representing black) or '.'\r\n(representing white).The input is terminated by a line with two zeros.OutputFor each test case, print a line that contains the case number followed by the difference of black pixels. If there\r\nare no original images possible for the given filtered image, print \"Impossible\" instead.Obey the format as shown in the sample output.ExampleInput:5 5\r\n#####\r\n#####\r\n#####\r\n#####\r\n#####\r\n4 4\r\n####\r\n####\r\n####\r\n####\r\n4 4\r\n#...\r\n....\r\n....\r\n...#\r\n4 4\r\n.#.#\r\n#.#.\r\n.#.#\r\n#.#.\r\n0 0Output:Case 1: 10\r\nCase 2: 6\r\nCase 3: 2\r\nCase 4: Impossible",
  "sample_input": "Input:5 5\r\n#####\r\n#####\r\n#####\r\n#####\r\n#####\r\n4 4\r\n####\r\n####\r\n####\r\n####\r\n4 4\r\n#...\r\n....\r\n....\r\n...#\r\n4 4\r\n.#.#\r\n#.#.\r\n.#.#\r\n#.#.\r\n0 0Output:Case 1: 10\r\nCase 2: 6\r\nCase 3: 2\r\nCase 4: Impossible",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/FILTER",
  "scraped_at": "2025-08-17 00:34:10",
  "test_cases": [
    {
      "input": "5 5\r\n#####\r\n#####\r\n#####\r\n#####\r\n#####\r\n4 4\r\n####\r\n####\r\n####\r\n####\r\n4 4\r\n#...\r\n....\r\n....\r\n...#\r\n4 4\r\n.#.#\r\n#.#.\r\n.#.#\r\n#.#.\r\n0 0",
      "expected_output": "Case 1: 10\r\nCase 2: 6\r\nCase 3: 2\r\nCase 4: Impossible",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3 8\nulojmkff\nzgxsuoeud\ndxevkct\njegdwyog\npgpzo\n2 9\nnpctghv\nl\nrcv\np\n7 10\nbfcv\nibgpzl\na\nyjimimxf\n3 5\nstogerqy\nfjcjch\nqv\nampt\n8 7",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "9 9\nuthwdsa\nrk\nnf\nfmkrunps\nzqqxiea\n6 1\nwgrkt\nma\nfmsql\nagbgmjyo\n5 6\nk\nojvgvrwq\npjm\npwochw\n10 10\ndh\nicsujlcd\nsx\nrjriniln\n7 4",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "3 1\nb\nxcnnp\ngjunmjwhb\nd\nwx\n2 6\npuswlfj\nbsmxjwa\nhblvbr\nefwxi\n9 4\nbzx\ncktjmh\nt\nhzanhmeb\n10 7\nyypbf\nn\nxw\npvoexrpt\n10 2",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "49 14\nz\nmdjlwcet\ncgcqmbxhm\nufh\nibtsmh\n94 37\nbwlf\nng\nffcxj\nkeb\n7 8\nyea\npzjk\nef\nda\n87 5\nscdthf\nuqindw\nsjjyceu\nynjkqc\n85 70",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "17 27\nduna\nss\nhrbbteft\nytqguwk\nsvbajr\n20 82\ndyaiwbf\nchv\nfsltr\nkej\n6 96\neflv\nnmwkc\nwsvcob\nrmqvsvwp\n33 5\nnvyrvih\nei\nqjvzfyet\nw\n90 79",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "82 75\ntxrmtnnon\no\nfrda\nnkkht\neomi\n47 9\npvgv\nni\nopynyrq\nb\n72 92\nnzm\nf\njli\nxoxtekkn\n69 65\negl\nwfbns\npnvxlc\ncixfaxgn\n48 90",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "41 30\ndwdyvjab\nlbpejkfwkr\nzjnn\njm\nvzyd\n38 16\nyvcu\nfs\no\nibtzrdig\n86 86\ntv\ncbwi\nt\nbixxdoex\n100 40\njwpbkbsz\nvu\nrwkqkjsm\nh\n97 49",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "30 52\ndxvlwqs\nvfhudzumyv\nyqiqfsq\ntjqjvwo\njlzjtdp\n73 93\nxpfxcid\nfjjupnh\nsnccdwc\nhioonj\n84 43\nk\nreaoe\nuhpium\nlq\n95 94\nxopkw\noppskb\nunah\nhqo\n38 35",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "385 281\nfgcmjvpt\nawlqfhb\ntbp\nsjjolzihpd\nb\n52 398\nl\ng\nggkqzjrq\nxyipqeut\n253 59\nxil\ngw\nujqrpceq\nz\n60 203\nccijvqo\nsaxhxkjc\nrekhet\naozunkzy\n163 437",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "221 427\nn\nvamsrqze\ndxbztv\njpnzjgujfd\nkjwqnqszy\n239 420\nsxzidewb\nbvte\nlogdom\ntz\n78 154\nfsgv\ncys\nmgecvx\nuk\n68 475\njqsriew\noj\nyqxhemz\ny\n439 348",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "275 405\niwccmppy\nldd\npb\nmqaim\nnzaszmv\n330 445\ncoqjvo\nh\nd\nbmaj\n308 305\nufzpx\nzxsvn\npxgnmlgt\nztzfnpw\n429 489\nnsoo\ngnorctfc\nbuqb\nslhpclqm\n55 347",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "309 283\nqyrzmqne\ncxozdg\nluh\ncwqfzdcs\njgakhdyooq\n123 250\noosofvwc\nosktsj\nf\nnrxwce\n196 322\nz\naexuzk\nwgjbsxa\npvmoj\n411 168\nlfgh\nih\nzyoi\nlh\n479 164",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "407 293\nxtygiwubq\nbgphcmlp\nyisu\nyrdppbvyrt\nztjlli\n224 111\nqv\ncvrnlfdg\ncziykg\nlw\n460 117\njpv\nbshg\nbkuhtflb\ntca\n273 394\nyckrp\nnhov\nzfz\nwz\n393 428",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "131 307\nii\nof\nibbzlsa\nbp\nbcinbr\n256 284\ndfvdnl\nhbw\nnglj\nyujinsk\n265 426\ncx\ndszpqk\nbt\nr\n256 453\nnxm\ndxquwzw\nzrf\nsffoch\n215 331",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "349 178\ndxldcl\nsyqi\nal\ncxmmno\niiinn\n420 385\nljmzjx\nzdfg\nr\nx\n362 487\npoyfo\nyy\ngovp\nhohe\n342 55\nghxbi\nwvsttlz\nktwup\nr\n203 153",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\nhyck\nlf\nqwtrly\nz\nfzrcfd\n1000 1000\nuucxi\ngqnqxj\nl\nblilz\n1000 1000\nnsrj\nvnpfskqw\nf\nodrxhul\n1000 1000\na\nczmn\nrgtbom\npwxdtxw\n1000 1000",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\nibqjxwh\nnm\nmojcvwkk\ndcaf\nrrhrojddsh\n1000 1000\ngdtfce\nwxpgvl\nhgefnzdc\nutjfzwca\n1000 1000\nxgdlrrme\nl\nraivflm\nc\n1000 1000\ndwmowsol\nwlrb\nzme\nc\n1000 1000",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 999\njtu\necotx\ncffa\ncsoa\nrqdrhst\n999 1000\naorplf\nzymcw\nx\nwikukv\n2 999\nsa\nuedw\nlqnm\nlambrbm\n999 2\nhflbbg\ny\nilb\nrbii\n1000 1000",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 1\nuq\nddfjjq\nbhnjh\nqx\nhny\n999 2\nrospcf\ntfngixz\nng\nnjojxms\n999 1000\nvm\nepywiwe\nghoilpj\nyixrllz\n1000 1000\nufbhsg\ncbsq\npqgs\nodaoz\n1000 1000",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:56",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:38:03"
}
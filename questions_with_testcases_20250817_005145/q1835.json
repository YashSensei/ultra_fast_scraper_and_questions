{
  "problem_code": "problems",
  "title": "Expression",
  "tags": [],
  "text": "We are given an integer k and an arithmetic expression E with the operations \r\n\t'+', '-', and arguments from the set {0, 1 ... 9}. Is it possible to put some \r\n\tparentheses in E to get a new expression E' whose value equals k? If the answer \r\n\tis positive what is the minimum number of pairs of parentheses '(', ')' that \r\n\tare necessary?IllustrationIt is sufficient to put one pair of parentheses in the expression 5 - 4 + 5 to \r\n\tget an expression with value -4, namely 5 - (4 + 5) = -4.TaskWrite a program that for each data set from a sequence of several data sets:reads an expression E and an integer k from input,verifies whether it is possible to put some parentheses in E to get a new \r\n\t\texpression E' whose value equals k and computes the minimal number of pairs of \r\n\t\tparentheses '(', ')' necessary, if the answer is positive,writes the result to output.InputThe first line of the input file contains one positive integer d not larger \r\n\tthan 10. This is the number of data sets. The data sets follow. Each set of \r\n\tdata occupies two consecutive lines of the input file. The first line contains \r\n\ttwo integers n and k, 2 ≤ n ≤ 40, -180 ≤ k ≤ 180. The even \r\n\tinteger n is the length of E. The second line contains the expression itself \r\n\twritten as a string of length n. The string contains operators '+' or '-' in \r\n\todd positions and numbers from the set {0, 1 ... 9} in even positions.OutputFor each i = 1 ... d, your program should write to the i-th line of the output \r\n\tfile one word 'NO' if the i-th input expression cannot be transformed into any \r\n\texpression of value k, and the smallest number of pairs of parentheses \r\n\tnecessary otherwise.ExampleSample input:\r\n5 \r\n6 -4 \r\n+5-4+5 \r\n2 1 \r\n+1 \r\n4 1 \r\n-1+1 \r\n4 0 \r\n-1+1 \r\n4 -2 \r\n-1+1 \r\n\r\nSample output:\r\n1 \r\n0 \r\nNO \r\n0 \r\n1",
  "sample_input": "Sample input:\r\n5 \r\n6 -4 \r\n+5-4+5 \r\n2 1 \r\n+1 \r\n4 1 \r\n-1+1 \r\n4 0 \r\n-1+1 \r\n4 -2 \r\n-1+1 \r\n\r\nSample output:\r\n1 \r\n0 \r\nNO \r\n0 \r\n1",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/EXPR1",
  "scraped_at": "2025-08-17 00:33:40",
  "test_cases": [
    {
      "input": "Sample input:\r\n5 \r\n6 -4 \r\n+5-4+5 \r\n2 1 \r\n+1 \r\n4 1 \r\n-1+1 \r\n4 0 \r\n-1+1 \r\n4 -2 \r\n-1+1 \r\n\r\nSample output:\r\n1 \r\n0 \r\nNO \r\n0 \r\n1",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "jn ysf\n1\n8 1\n1 9 9\nhp\n7 9\n2\nat\n5 10\n8 3\njcocgk\n4 5\n2 1\nfy\n4 7\n10 10\neav\nyjqtr fp\n1\n5\nps\n5\n2",
      "expected_output": "0\n1\n0\n0\n0\n0\n2\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n5\n0\n5\n2",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "mbg dnvp\n2\n8 6\n10 7 6\nixszz\n6 7\n9\nzaux\n6 10\n4 6\norc\n7 4\n7 1\nhah\n10 7\n1 1\nhv\nd iqlkwl\n6\n5\nqvo\n7\n5",
      "expected_output": "0\n2\n0\n0\n0\n0\n9\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n6\n5\n0\n7\n5",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "crxrwb cnggi\n3\n2 1\n7 5 10\nrm\n2 1\n8\ncd\n6 5\n7 10\nti\n10 5\n8 10\nvewspe\n1 7\n1 1\nds\nmyurc bq\n3\n9\nj\n9\n5",
      "expected_output": "0\n3\n0\n0\n0\n0\n8\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n3\n9\n0\n9\n5",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "y cqixn\n24\n16 3\n36 40 35\nnffguavpn\n1 22\n5\ncxei\n26 17\n18 5\nsm\n23 29\n21 34\ns\n24 39\n27 28\nmoe\niu v\n2\n5\na\n38\n29",
      "expected_output": "0\n24\n0\n0\n0\n0\n5\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n2\n5\n0\n38\n29",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "nzhs dimze\n1\n32 29\n17 28 14\nhucehc\n25 6\n8\nrjzq\n28 32\n21 5\nikrk\n15 28\n34 6\nwfhnhau\n18 11\n36 7\nbneelqyr\nffo tupbmc\n19\n7\njr\n34\n23",
      "expected_output": "0\n1\n0\n0\n0\n0\n8\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n19\n7\n0\n34\n23",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "mvkw umabem\n13\n38 11\n33 17 16\nwsi\n24 11\n5\nd\n15 5\n28 4\ntskzva\n38 23\n23 39\nd\n36 23\n32 8\nrjlr\nsda j\n14\n10\ncvwm\n1\n21",
      "expected_output": "0\n13\n0\n0\n0\n0\n5\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n14\n10\n0\n1\n21",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "srx jbgf\n8\n10 31\n4 2 38\nbchp\n12 7\n39\nkhdm\n28 22\n37 34\nydcrt\n13 35\n23 19\nzljb\n4 26\n5 14\ndkpbj\nalerdf ti\n35\n35\noqhs\n8\n7",
      "expected_output": "0\n8\n0\n0\n0\n0\n39\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n35\n35\n0\n8\n7",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "s ra\n11\n9 39\n25 35 29\nxowmctssmqsv\n4 9\n29\nx\n31 4\n15 1\nxnyfv\n31 15\n38 1\nuqseptru\n19 12\n27 20\nz\nbvafcd rvtbnh\n37\n14\nkgsx\n22\n31",
      "expected_output": "0\n11\n0\n0\n0\n0\n29\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n37\n14\n0\n22\n31",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "tdmuhs o\n2\n8 6\n12 7 8\np\n2 13\n10\ntyo\n10 9\n7 17\nmffgram\n18 17\n2 9\nyyjehcqp\n10 13\n11 20\nykywy\ncdjn nq\n3\n19\nmyt\n3\n10",
      "expected_output": "0\n2\n0\n0\n0\n0\n10\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n3\n19\n0\n3\n10",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "ypy axby\n8\n15 20\n17 20 10\nfgfyijmto\n9 16\n16\nc\n7 17\n2 7\nz\n18 6\n9 14\ni\n19 4\n11 3\necjvcbr\ntih wxwzlw\n10\n5\ngq\n15\n16",
      "expected_output": "0\n8\n0\n0\n0\n0\n16\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n10\n5\n0\n15\n16",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "njdluh lxp\n12\n15 15\n11 11 5\nlmmuhe\n16 7\n19\ngh\n16 19\n16 6\ncpy\n9 11\n18 16\nvlvxmdn\n10 17\n3 17\ntbgzhguk\ngsrx m\n6\n18\nsay\n14\n2",
      "expected_output": "0\n12\n0\n0\n0\n0\n19\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n6\n18\n0\n14\n2",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "uj i\n5\n13 9\n2 13 13\nqlc\n5 18\n4\nvab\n10 9\n3 20\nvgpntp\n9 2\n10 16\ngwnip\n13 6\n7 11\nf\njio uzfaoup\n3\n4\nosgh\n16\n16",
      "expected_output": "0\n5\n0\n0\n0\n0\n4\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n3\n4\n0\n16\n16",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "vcbqdw x\n16\n19 4\n12 10 2\nsnvykwfy\n3 4\n20\no\n19 20\n5 16\nqf\n3 18\n11 8\nuer\n13 4\n8 10\nsok\nxq autys\n16\n7\nfs\n10\n18",
      "expected_output": "0\n16\n0\n0\n0\n0\n20\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n16\n7\n0\n10\n18",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "jdsj oiper\n13\n16 10\n3 2 2\ngcwckooouwow\n19 17\n20\nznub\n17 12\n14 10\nxk\n14 6\n14 12\nsxrmr\n19 10\n15 4\nskzfoxnf\nawku dimxaa\n8\n19\nsf\n10\n4",
      "expected_output": "0\n13\n0\n0\n0\n0\n20\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n8\n19\n0\n10\n4",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "jrkc guoiw\n17\n2 6\n15 5 3\not\n5 15\n17\nwu\n17 14\n2 6\nuh\n5 2\n6 5\nxc\n19 11\n12 15\nkmwj\nknq uqxpw\n14\n19\nzs\n5\n16",
      "expected_output": "0\n17\n0\n0\n0\n0\n17\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n14\n19\n0\n5\n16",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "k mfj\n40\n40 40\n40 40 40\nfghpssoxo\n40 40\n40\nag\n40 40\n40 40\nvohgkce\n40 40\n40 40\nlnyok\n40 40\n40 40\nvfoi\noi m\n40\n40\nz\n40\n40",
      "expected_output": "0\n40\n0\n0\n0\n0\n40\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n40\n40\n0\n40\n40",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "c bobbl\n40\n40 40\n40 40 40\nicfzcot\n40 40\n40\nr\n40 40\n40 40\nggtpz\n40 40\n40 40\nsredcqf\n40 40\n40 40\nqg\nbcxvik ky\n40\n40\nf\n40\n40",
      "expected_output": "0\n40\n0\n0\n0\n0\n40\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n40\n40\n0\n40\n40",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "gtei muf\n40\n1 2\n39 39 40\nbrwmp\n39 2\n2\nj\n40 39\n39 39\nf\n40 40\n40 2\ngd\n1 1\n40 39\nfmapvtp\nd vrrlv\n40\n1\ndgrh\n40\n39",
      "expected_output": "0\n40\n0\n0\n0\n0\n2\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n40\n1\n0\n40\n39",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "kinh cxilh\n39\n1 1\n40 39 1\nfjczjyfvffjr\n40 2\n39\nt\n2 2\n39 2\nv\n39 2\n1 1\ncn\n39 40\n40 40\nbr\nkbuvsg jmm\n1\n1\nxb\n2\n2",
      "expected_output": "0\n39\n0\n0\n0\n0\n39\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n1\n0\n2\n2",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:51",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:16"
}
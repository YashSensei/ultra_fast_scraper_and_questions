{
  "problem_code": "problems",
  "title": "Candies and Milestones",
  "tags": [],
  "text": "Little Pratya loves collecting candies and she also likes playing games :).Today Pratya is travelling in bus and she has a bag full ofNcandies. She looks outside the window and notices milestones with numbers written on them. She decides to play a game. She wants to select some initialnon-zeronumber of candies from the bag and call it her collection of candies. When she sees a milestone on the way, she will add or remove some candies from her collection as following.Let the previous milestone number bea1and the current milestone number bea2.a2 > a1: Pratya adds (a2 - a1) candies to her collection (thus, her bag of candies loses them). If the bag doesn't contain at least (a2 - a1) candies, she starts crying.a2 < a1: Pratya removes (a1 - a2) candies from her collection (thus, her bag of candies gains them). If her collection doesn't contain more than (a1 - a2) candies, she starts crying.a1 = a2: Pratya is bored to see the same number again and so she eats one of the candies from her collection.Moreover, Pratya always wants her candy collection to have at least one candy, otherwise she starts crying. Given the numbers written on all the milestones in order, find the minimum number of candies Pratya should select in the beginning so that she doesn't have to cry at all. If it is not possible, print -1. Note that no change to the collection happens when she sees the first milestone.InputThe first line contain the number of test casesT. Each test case has two lines. The first line specifiesNandM.Nis the number of candies in the bag andMis the total number of milestones. Second line containsMintegers, the numbers written on the milestones, in the order Pratya sees them.T ≤ 1501 ≤ N ≤ 1072 ≤ M ≤ 104Each milestone number will be between [-106, 106].OutputFor each test case output the minimum number of candies that should be selected from the bag or -1 if its not possible.ExampleInput:310 51 5 1 -1 -22 51 5 1 -1 -2100 31 2 3Output:4-11Note : Large input, prefer using scanf / printf  to  cin / cout* There are multiple test sets, and the judge shows thesumof the time taken over all test sets of your submission, if Accepted.",
  "sample_input": "Input:310 51 5 1 -1 -22 51 5 1 -1 -2100 31 2 3Output:4-11",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/CANDYSTN",
  "scraped_at": "2025-08-17 00:33:22",
  "test_cases": [
    {
      "input": "310 51 5 1 -1 -22 51 5 1 -1 -2100 31 2 3",
      "expected_output": "4-11",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "7 9 8 9 10 2 8 8 3 5 6 4 4 2",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "7 10 2 8 6 3 1 8 1 4 6 1 1 7",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "4 7 6 6 2 9 8 8 2 9 7 6 9 6",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "4 1 79 76 71 45 57 64 74 26 94 54 27 7",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "8 3 31 4 81 82 24 74 8 29 93 63 44 15",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "13 76 85 61 25 6 39 34 52 73 65 68 70 42",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "52 1 76 90 58 5 58 39 73 26 19 9 77 29",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "17 97 66 90 90 36 12 37 28 4 1 61 39 59",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "529 502 183 369 424 288 53 294 284 448 135 338 507 303",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "190 369 443 521 167 339 520 414 216 195 529 182 53 101",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "158 280 115 238 136 172 312 287 475 212 533 373 65 198",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "95 522 257 460 470 274 428 161 190 252 169 475 124 53",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "454 451 197 474 520 226 328 96 209 206 137 236 518 163",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "345 436 94 420 445 386 67 151 431 322 187 336 84 389",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "205 110 347 520 130 516 272 197 114 505 449 144 270 525",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1072 1072 1072 1072 1072 1072 1072 1072 1072 1072 1072 1072 1072 1072",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1072 1072 1072 1072 1072 1072 1072 1072 1072 1072 1072 1072 1072 1072",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 1072 1071 1072 1 1072 1071 1071 1072 2 1071 1071 1 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1071 2 1071 1 1072 1072 1 1 1071 1072 1 1 2 1072",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:45",
  "total_test_cases": 20
}
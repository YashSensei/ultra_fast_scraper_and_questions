{
  "problem_code": "problems",
  "title": "Gopu and Combinatorics on Graphs",
  "tags": [],
  "text": "Little Gopu was playing with graphs. He encountered following problem while playing.Given a graph G with n vertices and m edges. Let us say it has k connected components. Find out how many numbers of ways you can add k - 1 edges to make the graph connected. Note that the new edge you are going to add should not be a repeated edge i.e. if you are going to connect u, v then there should not be an edge between u, v already in the graph. Output the answer modulo 109+ 7.If the graph is already connected, Output -1Help Gopu with this task.InputFirst line contains T : number of test cases. (1 ≤ T ≤ 20)For each test case, First line contains two space separated integers n, m: (1 ≤ n, m ≤ 105).Then For each of the next m lines, each line contains two space separated integers u and v denoting that u and v are connected to each other. (1 ≤ u, v ≤ n and u ≠ v)OutputFor each test case, output the answer as required.ExampleInput:44 21 23 45 31 23 44 53 31 22 33 17 51 23 44 53 56 7Output:46-184",
  "sample_input": "Input:44 21 23 45 31 23 44 53 31 22 33 17 51 23 44 53 56 7Output:46-184",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/SPCE",
  "scraped_at": "2025-08-17 00:34:16",
  "test_cases": [
    {
      "input": "44 21 23 45 31 23 44 53 31 22 33 17 51 23 44 53 56 7",
      "expected_output": "46-184",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4 3 6 6 7 1 4 1 2 9 10 6 1 1 6 6 10 4",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "4 8 3 3 10 6 2 6 7 8 3 2 9 5 5 3 1 9",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "6 9 10 6 5 4 8 7 6 4 7 6 6 4 10 9 6 6",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "37 80 19 21 32 56 50 13 19 20 47 92 60 82 11 26 18 36",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "20 46 48 16 47 47 15 70 78 49 73 57 11 5 72 2 48 37",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "2 50 4 21 1 49 67 6 24 95 13 65 6 52 18 69 96 16",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "72 57 76 7 28 13 41 29 32 17 95 62 5 64 8 66 44 60",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "69 5 81 98 45 34 44 64 52 29 4 74 11 16 65 47 44 39",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "491 95 335 234 163 110 247 412 365 319 286 100 330 202 238 331 123 104",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "375 65 313 287 183 450 432 495 79 416 226 175 88 271 398 385 349 364",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "375 468 302 335 361 344 490 99 349 91 414 395 409 436 294 410 419 307",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "312 149 347 438 240 339 81 262 297 221 281 175 51 104 323 225 237 172",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "82 422 417 394 172 398 84 150 472 380 345 358 243 137 500 67 157 234",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "274 356 321 425 475 291 132 204 132 174 298 455 421 195 188 287 306 197",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "483 332 424 51 318 369 89 242 438 311 181 194 398 283 57 72 55 389",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 2 1000 1 999 2 1000 2 1000 1 1 999 999 999 999 999 1000 2",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 999 2 999 1 999 1000 1000 2 999 2 1 999 2 1000 999 1000 2",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:57",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:38:12"
}
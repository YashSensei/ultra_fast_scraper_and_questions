{
  "problem_code": "problems",
  "title": "Balanced Food",
  "tags": [],
  "text": "Computer scientists live on pizza. Now the doctors say this is no good. We ought to eat more balanced. So you put your really large pizza onto your table and eat slice-by-slice carefully watching that the rest of your meal stays where it is - on the table.Since computer scientists love pizza, their favourite table is shaped like a slice of pizza. However, different people may have different-sized tables. Everyone has his own preference for the number of slices a pizza has to be cut to. However, all agree that the slices must have identical size. Write a program to help the poor pizza lovers!InputThe input file contains several test cases. Each test case starts with the number of slicesnthe pizza is cut to. Input is terminated byn = 0. Otherwise,1 ≤ n ≤ 9. Then follow 9 floating-point numberspx, py, r, tx, ty, ux, uy, vx, vyspecifying the coordinates of the centerpof the pizza, its radius, and the coordinates of three pointst, u, v. They define the three corners of the slice-shaped table in counter-clockwise order, withtbeing the center.The pizza is a homogeneous two-dimensional circular object. There is always a cut from its center parallel to the x-axis towards increasing x-values. The remaining pizza stays connected during the whole process, no matter what slices are removed. The distances fromttou, vare equal except for very small rounding errors. Tables are never larger than a half-circle.OutputFor each test case output on a line some possible ordering of slices, so that during the whole process of eating the pizza it does not fall down the table. Slices are numbered counter-clockwise starting with 1 directly above the positive x-axis.If several such ordering exist, choose the lexicographically first one. If no ordering of slices exists, so that the pizza does not fall down, output a line containing the word \"impossible\" instead.RemarkA connected, rigid, flat object remains fixed on a convex, flat surface if and only if the object's center of gravity lies above the surface. The x-coordinate, for example, of the center of gravity of an objectscan be calculated by (∫sxds) / (∫sds). Likewise, the y-coordinate can be expressed as (∫syds) / (∫sds). Note that the denominator of these expressions gives the area ofs.SampleInput:2 (-3.0,-1.0) 1.0 (-3.0,-1.1) (-1.5,0.4) (-4.5,0.4)\r\n9 (2.0,1.0) 1.0 (0.0,0.0) (1.0,-1.0) (-1.0,1.0)\r\n0Output:2 1\r\nimpossible",
  "sample_input": "Input:2 (-3.0,-1.0) 1.0 (-3.0,-1.1) (-1.5,0.4) (-4.5,0.4)\r\n9 (2.0,1.0) 1.0 (0.0,0.0) (1.0,-1.0) (-1.0,1.0)\r\n0Output:2 1\r\nimpossible",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/ULM02B",
  "scraped_at": "2025-08-17 00:33:48",
  "test_cases": [
    {
      "input": "2 (-3.0,-1.0) 1.0 (-3.0,-1.1) (-1.5,0.4) (-4.5,0.4)\r\n9 (2.0,1.0) 1.0 (0.0,0.0) (1.0,-1.0) (-1.0,1.0)\r\n0",
      "expected_output": "2 1\r\nimpossible",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5 1 5 8 2 1 3 6 1 4\n1 srxg at rzmknexsovg ivzuoghou fsjqmqk\n2 6 3 6 4 2 8 3 7 8\n4 nxmvgi khr tpk uop b\n8",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "3 9 5 6 5 1 4 8 8 9\n1 awoxak o iwjuxb yrcxt ae\n4 9 5 8 1 2 7 5 8 4\n6 ttszkgj kac yyispyeri emobjmrca oxrvlz\n3",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "2 5 8 8 2 4 3 8 8 8\n5 ll xhcap jcjysnus i j\n8 1 8 3 5 1 3 6 2 5\n7 ddesgqhwb gpzj jxtxhbmjk kxrgy cz\n7",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "3 2 5 8 2 1 3 9 6 9\n1 f e jsj adelu frefii\n2 3 6 7 4 9 5 8 5 7\n3 jvzpbjgno ua ogtqxnkzs ugfhmgrg sbm\n1",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "4 6 6 3 7 8 7 1 3 4\n8 qsuopnq c kpntqag edj vqa\n5 3 1 8 8 7 6 5 3 9\n8 uznyfoy inojz pm mqmhmw smsppupce\n8",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "1 7 1 9 8 6 8 2 8 7\n5 f d xjcf ldfrl vhtirzud\n8 6 5 3 6 2 2 4 9 3\n4 qqjksq sktjf mlyadru jr qlhvuyz\n5",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "8 3 7 9 4 4 1 3 5 6\n3 kcg dr owzdpj hynnxbt cxdl\n8 5 6 7 5 7 4 3 6 5\n4 tchap mvabp vvafl uqdkpk axbzs\n5",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "5 8 3 4 7 2 5 6 6 3\n7 ukkpckhk uh pmjg te tyrfqd\n7 3 9 3 7 5 8 1 4 8\n8 cuhrtfkqe wq pwoqo upb fxawwf\n3",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "4 1 2 3 3 1 3 3 4 3\n1 mwt vszka jthlsrqfa n m\n2 4 3 2 3 4 1 4 2 3\n1 ioinuvlqs xfit jzjqjrq rloao foxqok\n1",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "4 4 4 3 1 3 2 1 1 1\n2 fekidzjydbr qzj bomvxarpc xfad pl\n4 2 3 4 3 2 4 1 2 2\n4 d n yfqqzd qtpil pfjsktykn\n1",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "3 3 4 4 4 2 2 1 4 3\n1 veyfalv sn obhiutldjvl h wsbh\n4 1 1 1 3 3 1 1 3 4\n2 sicjpt rcxsb snhuchf xpvedkrdij akwh\n1",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "4 1 2 4 3 2 1 3 3 3\n3 rytkxfxrkj yoz qwh na rqmvt\n1 1 1 2 4 1 1 4 3 3\n1 k fdpz pftzqg fhuhbp mtcxckbesw\n3",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "3 4 4 4 1 2 4 1 4 3\n2 dcruwx diwm bcligqufyn cxxhjfjo xjmqdxiqea\n1 4 4 2 4 4 1 4 3 4\n3 ktys j ieif men bbqiex\n1",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "2 4 3 1 3 3 4 2 3 2\n4 aqxi crc onibnkt twtoqp ly\n1 4 4 1 2 4 4 4 2 3\n4 pkjnx xsqg xewrawru vlcvehje qbflldvv\n3",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "4 3 4 1 4 4 2 3 3 2\n2 cixwwjs x dsiumlcurd abtnd rx\n1 2 4 4 4 2 3 3 4 4\n4 ussyab y d jtviobdplg ltuhiply\n4",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "9 9 9 9 9 9 9 9 9 9\n9 pmeuvjaa hbmu gd ak aqts\n9 9 9 9 9 9 9 9 9 9\n9 dxyydbwej nf shtee lsdvhsr mzscnmsu\n9",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "9 9 9 9 9 9 9 9 9 9\n9 wvejhhgf kcfhj vquwat akig ajdhmvppjz\n9 9 9 9 9 9 9 9 9 9\n9 sectdyfv x tysw iptppfck tepeys\n9",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 1 1 2 9 8 9 1 8 1\n1 dj rjwi kplsu zhi tpqpszvsb\n2 8 9 1 1 2 2 8 2 8\n2 sgxp feoj nng jnwxgjdxpf ozldgqul\n9",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "9 9 2 9 8 2 1 1 1 1\n2 qcxxjs uwuy btvn pzribzj euupgwvdp\n2 1 9 2 8 1 8 9 1 2\n9 gmi saazg rgclxxsav dlxjc rx\n1",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:51",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:21"
}
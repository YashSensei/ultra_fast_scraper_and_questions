{
  "problem_code": "problems",
  "title": "ZSequence",
  "tags": [],
  "text": "You will be given a sequence A containingNpositive integers,a1,a2...aN.LetS(i, j)=ai+ai + 1+ ... +aj, if i ≤ j.You should findK- 1 indexes,m1<m2< ... <mK - 1such thatlb1≤S(1, m1)≤ub1...lbi≤S(mi - 1+ 1, mi)≤ubiandlbK≤S(mK - 1+ 1, N)≤ubK.If there are multiple solution, print the first lexicographically.InputThe first line of the standard input contains two space-separated integersN(2 ≤N≤ 5 000) andK(1 ≤K- 1 ≤N- 1). NextNlines contain integersa1,a2...aN, respectively, 1 ≤ai≤ 105.i-th of the nextKlines contain integerslbiandubi, 1 ≤lbi≤ubi≤ 109.OutputOn the first line of the standard output you should print space-separatedK- 1 indices of the solution as already explained. If such solution does not exist, you should print only one integer -1.ExampleInput:4 3\r\n1\r\n2\r\n3\r\n4\r\n1 3\r\n2 4\r\n3 10Output:1 2Input:4 3\r\n1\r\n2\r\n3\r\n4\r\n1 3\r\n2 4\r\n3 4Output:2 3Input:4 3\r\n1\r\n2\r\n3\r\n4\r\n1 3\r\n2 4\r\n3 3Output:-1",
  "sample_input": "Input:4 3\r\n1\r\n2\r\n3\r\n4\r\n1 3\r\n2 4\r\n3 10Output:1 2",
  "sample_output": "Input:4 3\r\n1\r\n2\r\n3\r\n4\r\n1 3\r\n2 4\r\n3 4Output:2 3",
  "link": "https://www.spoj.com/problems/ZSEQ",
  "scraped_at": "2025-08-17 00:33:48",
  "test_cases": [
    {
      "input": "4 3\r\n1\r\n2\r\n3\r\n4\r\n1 3\r\n2 4\r\n3 10",
      "expected_output": "1 2",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4 3\r\n1\r\n2\r\n3\r\n4\r\n1 3\r\n2 4\r\n3 4",
      "expected_output": "2 3",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "9 7\n9\n4\n4\n10\n2 4\n1 3\n6 4",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "4 1\n9\n1\n7\n5\n7 8\n4 8\n7 1",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "8 10\n7\n7\n3\n10\n9 9\n7 2\n9 6",
      "expected_output": "To be computed",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "68 94\n35\n77\n72\n41\n57 44\n3 21\n76 63",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "71 67\n57\n96\n2\n60\n20 91\n10 23\n39 59",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "38 48\n45\n61\n87\n51\n93 56\n86 7\n64 3",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "27 35\n69\n99\n34\n6\n83 64\n91 88\n99 17",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "57 57\n71\n98\n14\n11\n6 16\n80 55\n63 65",
      "expected_output": "To be computed",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "518 1879\n430\n1645\n2323\n1078\n1438 2335\n1195 1163\n2235 2469",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "626 1745\n1870\n348\n306\n1171\n373 539\n1326 776\n978 995",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "642 1949\n2027\n1093\n1684\n1108\n394 1690\n2144 2288\n1201 453",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "1349 722\n1377\n1845\n2298\n895\n550 1792\n2057 2452\n1685 1553",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "1309 1552\n362\n1061\n328\n1073\n1796 2376\n2231 806\n2133 1754",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "2146 901\n1346\n2483\n2172\n1795\n1928 2431\n1128 2030\n1499 1308",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "452 2372\n882\n541\n1596\n513\n2436 2153\n2445 2374\n2272 666",
      "expected_output": "To be computed",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "5000 5000\n5000\n5000\n5000\n5000\n5000 5000\n5000 5000\n5000 5000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "5000 5000\n5000\n5000\n5000\n5000\n5000 5000\n5000 5000\n5000 5000",
      "expected_output": "To be computed",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "2 1\n1\n1\n5000\n4999\n4999 5000\n4999 1\n5000 5000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:50",
  "total_test_cases": 20
}
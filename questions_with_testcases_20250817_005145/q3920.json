{
  "problem_code": "problems",
  "title": "Periodic function, trip 3 (easy)",
  "tags": [],
  "text": "Solar cycle predictions are used by various agencies and many industry groups.\r\n The solar cycle is important for determining the lifetime of satellites in low-Earth orbit,\r\n as the drag on the satellites correlates with the solar cycle [...].(NOAA)(Solar Cycle)Sunspot Number Progression : Observed data through May 2008 ; Dec 2012 ; Nov 2014The goal of the problem is to propose a perfect prediction center, with weak constraints.Let us consider periodic functions fromZtoR.deff(x):return[4,-6,7][x%3]# (with Python notations)# 4, -6, 7, 4, -6, 7, 4, -6, 7, 4, -6, 7, 4, -6, 7, ...For example,fis a 3-periodic function, withf(0) =f(3) =f(6) =f(9) = 4. \r\nWith a simplified notation we will denote f as [4, -6, 7].\r\n\r\n\r\n\r\nFor two periodic functions (with integral period), the quotient of periods will be rational, in that case it can be shown that the sum of the functions is also a periodic function. Thus, the set of all such functions is a vector space overR.For that problem, we consider a function that is the sum of several periodic functions all with as period an integerNat maximum. You will be given some starting values, you'll have to find new ones.InputThe first line contains an integerT, the number of test cases, then each case will be given on three lines.\r\nOn the first line, you will be given an integerN.\r\nOn the second line, you will be given integersy: the first (0-indexed)N×Nvalues of a periodic functionfthat is sum of periodic functions all with as period an integerNat maximum.\r\nOn the third line, you will be givenN×Nintegersx.OutputPrintf(x)for all requiredx. See sample for details.ExampleInput:2\r\n2\r\n5 7 5 7\r\n6 7 8 9\r\n3\r\n15 3 17 2 16 4 15 3 17\r\n10 100 1000 10000 100000 1000000 10000000 100000000 1000000000Output:5 7 5 7\r\n16 16 16 16 16 16 16 16 16ExplanationTest case 1: for examplefcan be seen as the sum of two periodic functions : [5] + [0, 2] (with simplified notations)\r\nWe know thatf(0)=5 andf(1)=7, we can deduce thatf(6)=5, and so on...Test case 2: for examplefcan be seen as the sum of three periodic functions : [10] + [5, -8] + [0, 1, 2] (with simplified notations). In that casef(10) = [10][10%1] + [5, -8][10%2] + [0, 1, 2][10%3] = 10 + 5 + 1 = 16, and so on.Constraints0 < T < 1024\r\n1 < N < 14 : uniform distribution\r\nabs(y) < 10^9\r\n0 < x < 10^9InformationConstraints allow easy coding with various languages. (Edited 2017-02-11 ; with compiler changes)\r\nThere's two input files, a small one and a bigger.\r\nMy PY3.4 code ended in 0.02+0.28 = 0.30s. My C code in 0.01s.\r\nIf you find the constraints too weak, please considerPERIOD3.Have fun ;-)",
  "sample_input": "deff(x):return[4,-6,7][x%3]# (with Python notations)# 4, -6, 7, 4, -6, 7, 4, -6, 7, 4, -6, 7, 4, -6, 7, ...",
  "sample_output": "Input:2\r\n2\r\n5 7 5 7\r\n6 7 8 9\r\n3\r\n15 3 17 2 16 4 15 3 17\r\n10 100 1000 10000 100000 1000000 10000000 100000000 1000000000Output:5 7 5 7\r\n16 16 16 16 16 16 16 16 16",
  "link": "https://www.spoj.com/problems/PERIOD4",
  "scraped_at": "2025-08-17 00:34:37",
  "test_cases": [
    {
      "input": "deff(x):return[4,-6,7][x%3]# (with Python notations)# 4, -6, 7, 4, -6, 7, 4, -6, 7, 4, -6, 7, 4, -6, 7, ...",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2\r\n2\r\n5 7 5 7\r\n6 7 8 9\r\n3\r\n15 3 17 2 16 4 15 3 17\r\n10 100 1000 10000 100000 1000000 10000000 100000000 1000000000",
      "expected_output": "5 7 5 7\r\n16 16 16 16 16 16 16 16 16",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "9 2 7 7 5 9 8 3 2 9 1 3 9 3 2 5 3 3 4\ncetwpihymxmbpg xaes yjmlpp rfrdlf k pf q ee vjn t kbp a duy rl cbcxa ba wbbjy wcg c a",
      "expected_output": "0\n0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "7 6 4 2 7 4 4 4 6 4 8 7 8 10 1 6 3 10 2\nozopmypl sog ovum dcncaalsvw o f uerk c neqkx piwv nvhxu bcrs cbmz z rrji fxxdp v iych q zq",
      "expected_output": "0\n0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "10 9 7 4 9 8 3 5 7 1 8 9 7 9 2 10 1 8 7\nswicygfvffqmqxufzlihcnpkz bvpg vomcm ywmy hivuc zqga uxbdo kyjgk xwsr ph tzn xttb t cjxmx oung mi mr ttile bhz hcix",
      "expected_output": "0\n0",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "12 7 6 4 13 10 9 6 3 5 14 5 11 5 8 13 7 1 5\nhrpesxxebjvx onjj ikyay dex vha z saty lit oeqo h lcoq lf f jho tv hbxgc xju kvscz josa oy",
      "expected_output": "0\n0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "9 9 14 1 1 7 1 14 9 13 5 14 4 13 7 10 2 13 14\nuufpiskawlthincwo ugibu ez pdlffm dt yobzm kx su wqonf osxhv n l j kl l y z xjr gzn fzpo",
      "expected_output": "0\n0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "1 5 12 12 11 1 5 13 10 13 12 12 13 14 14 10 6 12 9\nkrfsziszovdhrdiicovyhr uu hixbc rkwwietto impj s aozgl qbl gfmv kj dukus vrj wh wekra r i qtj mpdj fp fn",
      "expected_output": "0\n0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "2 7 3 3 6 9 5 11 8 2 8 9 3 12 2 12 13 1 3\ndryqavlac fbgtr nnpv fewb myhyz el hb npbrx jehgt s q l tea fc xcit rtyc v zhlq prir uf",
      "expected_output": "0\n0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "5 12 13 14 9 2 5 6 3 1 11 6 1 14 6 12 9 9 3\nqdcsemcvhkwppvpruvcteov sysmc l v vlp kmh tiv rwyu xkrnn cuikp xoqno x b nzys kju zfv ppm fgsr dfzbt uosh",
      "expected_output": "0\n0",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "7 6 2 1 6 1 7 3 1 5 2 3 4 7 3 5 2 2 7\neomratjilktmseqsiuiioepbvyn doz is dmmjvpnmqdc qbhej bzjr kjnet nkvv vkr nvr rwmsm j ltns m h h ubk me b tiqe",
      "expected_output": "0\n0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "4 7 2 4 1 7 3 5 6 1 3 7 2 2 6 3 2 4 1\nqfznfidkfi y x fnhvjuup v zim wp azix ag py lwq hnyy g cqr ks fdlxn z fohrr zy hgwpq",
      "expected_output": "0\n0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "2 4 3 2 5 7 1 3 3 3 1 2 4 1 4 2 7 4 2\ntnfejbiflqrau mrzcv vmtx wqn gxr nmm ql eylj v yb lg lzwaj pkjv arogf qfmju hqina vix ardlq mpt he",
      "expected_output": "0\n0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "3 5 7 1 7 3 2 4 4 7 2 5 6 6 3 3 6 7 5\ndpbjthrnnelbvnoumg c g yoxtzdjjwg nzj zc mp zqt rm pebi rlvow saku mis xbym l gi zj mifrb gjjab tvgq",
      "expected_output": "0\n0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "2 5 3 1 7 5 1 4 5 6 3 7 5 7 4 1 1 2 7\nvogtatdozpmyesyqvuapcv dsega jz q bwn onq utv v muw uv whpo xme lqhct gdpur mypxb wl og xid cmw srrg",
      "expected_output": "0\n0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "6 2 6 2 7 6 5 3 5 4 2 3 4 3 7 7 7 2 6\njwhkc yri o cdnkyanjrm qq zwsn ugtw idv u goeng xmhl i j ulz k p yx u c d",
      "expected_output": "0\n0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "5 1 4 5 2 3 7 3 6 3 5 5 6 7 3 6 6 5 4\nalcowzxrzbnhqzhizm bjoy rx camkxn nqd k fejc pwn uiulc x i mysp p eyfw a om kkobv io ut k",
      "expected_output": "0\n0",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14\nncfhajwzgtikykbby pnwel wut ahepysd fvnov uygje cuuhx l nhe ma deb w wwwry arj yxp aq tywc er zrv zpj",
      "expected_output": "0\n0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14\nufrnjxiicbawzzrkwgfovgw qkx rsbrek j k jdb uiy udbl erjl u szjzh iwaaw dt vplcx zu xyl pl ebtpb ovk tv",
      "expected_output": "0\n0",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "13 14 14 1 14 13 13 2 14 13 13 14 2 13 1 13 2 14 2\nolrosppufehrhlzqld zb bcxua qvlmmutfvsl c vsy si cdcjf gtr xviul xahxv kzh zy ogwst md iftb wjvu h xj fntw",
      "expected_output": "0\n0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:58",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:38:23"
}
{
  "problem_code": "problems",
  "title": "2D arrays with XOR property",
  "tags": [],
  "text": "We consider 2D arrays $A$, (0,0)-indexed, shape $N \\times M$. \r\n With $ 0 \\le i < N $   and  $ 0 \\le j < M $, we have $ 0< A_{i,j} \\le N \\times M $.\r\n\r\n\r\nOur interest will be to count those arrays that have the two properties :Arrays $A$ are composed withallnumbers from $1$ to $N \\times M$.\r\ni.e. we have $ (i,j) \\neq (k,l) \\implies A_{i,j} \\neq A_{k,l} $$(i\\oplus j) > (k\\oplus l) \\implies A_{i,j} > A_{k,l} $, where $ \\oplus $ denotes bitwise XOR.InputThe first line contains $T$, the number of test cases, and $P$ a prime number.Each of the next $T$ lines contains $N$ and $M$, the shape of the arrays $A$.OutputFor each test case, print the number of arrays $A$ with the given properties.\r\nAs the result may be large, the answermodulo$P$ is required.ExampleInput:2 1000000007\r\n2 2\r\n997 799Output:4\r\n828630475For the first case, the 4 possible 2x2 arrays are : \r\n$ \\binom{1\\; 3}{4\\; 2}$, $\\binom{1\\; 4}{3\\; 2}$, $\\binom{2\\; 3}{4\\; 1}$, and $\\binom{2\\; 4}{3\\; 1}$.Constraints$1 \\le T \\le 10^4$, \r\n$10^9 < P < 2\\times 10^9$, a prime number, \r\n$1 \\le N \\le 10^9$, \r\n$1 \\le M \\le 10^5$.Constraints allow a small kB of unoptimized PY3.4 code to get AC in the third of the TL.Have fun.",
  "sample_input": "Input:2 1000000007\r\n2 2\r\n997 799Output:4\r\n828630475",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/XORRAY",
  "scraped_at": "2025-08-17 00:34:32",
  "test_cases": [
    {
      "input": "2 1000000007\r\n2 2\r\n997 799",
      "expected_output": "4\r\n828630475",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "8 7\n1 5\n8 3",
      "expected_output": "0\n0\n0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "3 9\n7 5\n5 7",
      "expected_output": "0\n0\n0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "7 3\n4 5\n2 10",
      "expected_output": "0\n0\n0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "73 47\n48 18\n78 38",
      "expected_output": "0\n0\n0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "56 54\n76 19\n61 81",
      "expected_output": "0\n0\n0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "62 81\n74 34\n90 51",
      "expected_output": "0\n0\n0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "23 91\n97 63\n86 15",
      "expected_output": "0\n0\n0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "14 18\n37 37\n99 44",
      "expected_output": "0\n0\n0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "453 197\n153 486\n66 240",
      "expected_output": "0\n0\n0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "186 280\n483 467\n409 217",
      "expected_output": "0\n0\n0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "181 492\n386 367\n402 456",
      "expected_output": "0\n0\n0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "425 494\n243 99\n324 490",
      "expected_output": "0\n0\n0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "430 60\n406 467\n377 499",
      "expected_output": "0\n0\n0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "267 426\n205 301\n434 344",
      "expected_output": "0\n0\n0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "285 330\n187 84\n119 481",
      "expected_output": "0\n0\n0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000",
      "expected_output": "0\n0\n0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000",
      "expected_output": "0\n0\n0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 1000\n1000 1000\n1000 2",
      "expected_output": "0\n0\n0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "999 2\n999 2\n1000 999",
      "expected_output": "0\n0\n0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:54",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:47"
}
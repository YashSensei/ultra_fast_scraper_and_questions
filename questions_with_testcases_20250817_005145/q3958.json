{
  "problem_code": "problems",
  "title": "Knapsack",
  "tags": [],
  "text": "Harry is working on a project with Hermione, in which they need some amount of a specific magical powder. As Hermione is studious type, she instructs Harry to arrange X milligrams of powder while she does some other necessary work.The powder is available in the market in packed form. Packets of different weights are available. There are M types of packets available in the market each having some price, further each type of packet is available in infinite numbers. Your task is to find what is the minimum amount Harry needs to spend so that he can buy at least X milligrams.Assume that the max value of answer can be 200.00 only.InputIn the first line, you are given two integers representing X and M. Next M lines describe the packet details, where each line has two integers Wi (Weight of packet i) and Pi (Price of Packet i). Wi will be a integer where Pi will be decimal number with 2 decimal places.OutputYou need to print the minimum money spent so that Harry can arrange at least X milligrams of powder. Answer must contain exactly two decimal places (i.e. 5 should be printed as 5.00 and 5.6 should be printed as 5.60).Constraints1 ≤ X ≤ 1071 ≤ M ≤ 1001 ≤ Wi ≤ 1060.01 ≤ Pi ≤ 100.00SampleInput #1:3 2\r\n1 1.10\r\n2 0.83Output #1:1.66Input #2:3 2\r\n2 0.95\r\n1 0.50Output #2:1.45",
  "sample_input": "Input #1:3 2\r\n1 1.10\r\n2 0.83Output #1:1.66",
  "sample_output": "Input #2:3 2\r\n2 0.95\r\n1 0.50Output #2:1.45",
  "link": "https://www.spoj.com/problems/KNPSACK",
  "scraped_at": "2025-08-17 00:34:35",
  "test_cases": [
    {
      "input": "Input #1:3 2\r\n1 1.10\r\n2 0.83Output #1:1.66",
      "expected_output": "Input #2:3 2\r\n2 0.95\r\n1 0.50Output #2:1.45",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4 10 10\nlbdd jna 7\n5 4\n2 9 2 5\n5 epnxtbnd gceacz",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "3 3 10\nveo dm 8\n7 5\n10 7 5 2\n4 o e",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "7 5 2\nwgic v 4\n9 7\n8 8 4 3\n10 jueksfkc c",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "27 26 57\nfyf kqr 1\n77 66\n5 14 91 32\n10 lnewvjva cizji",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "36 60 26\nsir i 34\n96 31\n94 71 23 43\n78 dow cmzzolj",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "92 69 45\nq fucj 39\n23 31\n42 48 40 97\n56 nlni dsh",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "49 97 99\ngllrk zburs 36\n98 66\n90 21 56 52\n36 f j",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "77 94 58\ngjytz vex 49\n87 71\n10 8 28 46\n20 l chffjuu",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "326 464 226\nlqg l 364\n364 312\n119 202 295 224\n126 voiutfe mfvrcft",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "227 411 223\nvz nen 397\n191 338\n98 283 499 454\n284 zkphi ynevhg",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "216 230 389\nnmsmb ako 99\n93 92\n291 209 64 298\n495 vzrn c",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "165 302 423\nag h 415\n425 476\n423 418 104 161\n394 k qcg",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "480 73 110\nzepc p 486\n213 76\n295 280 364 248\n214 uqaa ivh",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "107 472 174\nanppf tzll 242\n486 477\n477 102 318 393\n216 mzgjlsfc bwi",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "55 304 289\nz u 267\n166 435\n233 432 367 467\n194 t oopoob",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000\nfsx lazu 1000\n1000 1000\n1000 1000 1000 1000\n1000 dsfbafx yjbk",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000\nsvrw lnwcg 1000\n1000 1000\n1000 1000 1000 1000\n1000 z c",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 999 1\nhd hxclw 1000\n2 1\n2 1 1 999\n2 tswfikxoqh tdsdik",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 2 1\nuxd fqwcw 2\n999 1\n2 1000 2 999\n1 ntjn echccy",
      "expected_output": "0\n0\n0\n0\n0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:58",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:38:24"
}
{
  "problem_code": "problems",
  "title": "Paths in a Tree",
  "tags": [],
  "text": "Given a tree and a set of edgesK, find total number of distinct paths in the tree consisting of all the edges inK. Two paths are distinct if the end nodes of the paths are different. Also, a path like (1 → 2 → 3) is same as (3 → 2 → 1).A path is defined as a series of edges which connect a sequence of vertices which are all distinct.InputFirst line denotes the number of test casesT(≤ 100) andTtest cases follow.Each test case is defined as:First line containsn(1 ≤ n ≤ 2×104) andk(≤ n-1) which are the number of nodes and size of the edge set, respectively.n-1 lines follow, each defining an edge between pair of nodesuandv.Nodes are numbered 1 to n.A single line consisting ofkspace separated indices (0-based, in order they appear in the input) of edges which are in the set.OutputFor each test case, output a single integer denoting the number of distinct paths in the tree consisting of all the edges in the set.ExampleInput:32 11 203 11 22 317 31 61 21 52 44 72 30 5 4Output:120",
  "sample_input": "Input:32 11 203 11 22 317 31 61 21 52 44 72 30 5 4Output:120",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/CQM1TREE",
  "scraped_at": "2025-08-17 00:34:36",
  "test_cases": [
    {
      "input": "32 11 203 11 22 317 31 61 21 52 44 72 30 5 4",
      "expected_output": "120",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2 1 1 1 2 2 1 2 1 1 1 2 1 1 1",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "2 1 2 2 1 2 2 1 2 1 2 1 2 2 2",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "1 2 1 2 2 2 2 2 2 2 2 1 2 2 1",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "1 1 1 2 1 1 2 1 2 1 2 2 2 2 2",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "1 2 1 1 2 2 2 1 2 2 2 2 2 1 1",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "1 2 2 1 1 2 1 2 2 1 1 2 2 2 1",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "2 1 2 1 2 1 2 2 1 1 1 1 1 2 1",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "1 1 1 2 2 2 2 1 2 1 1 2 2 1 2",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "1 1 1 1 1 1 1 1 1 1 1 1 1 1 1",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "2 2 2 2 2 2 2 2 2 2 2 2 2 2 2",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "2 2 2 2 2 2 2 2 2 2 2 2 2 2 2",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 1 2 2 2 2 1 2 1 2 1 2 1 2 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 2 1 2 2 2 1 2 1 2 2 1 1 2 1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:58",
  "total_test_cases": 20
}
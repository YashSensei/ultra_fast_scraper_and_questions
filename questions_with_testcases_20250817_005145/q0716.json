{
  "problem_code": "problems",
  "title": "Soccer Challenge",
  "tags": [],
  "text": "A soccer field is divided into squared plots, like a grid of N rows and M columns. The length of a plot side is equal to 1. Fernando likes to practice running only through the boundaries of the plots, he does not like to go inside the plots.Some of the plots are muddy, and some others have been selected by Fernando as target plots. A plot may neither be muddy nor a target one.Starting at the top left corner, he would like to go through the field and return back to the starting point. All plots that lie inside the cycle of his path are considered to be inspected. To make things more interesting he would like his path not to intersect with itself in any point different than the starting point. Luckily, the plots boundaries are so wide that Fernando can go along the same boundary multiple times without intersecting his own path.Fernando would like to inspect all target plots, but not any muddy plots. Martin, who plays in the opposing team, challenged Fernando that he could do a shortest path starting from the lower right corner. Can you help Fernando to get his shortest path, and decide whether it is shorter than the one?InputInput consist of many test cases.First line of input starts with two integers R and C (1 ≤ R, C ≤ 50), which defines the rows and columns the soccer field has been divided into.Next, the soccer field is described in R rows, each containing C characters. Chars I, X, and O, represents target plots (to inspect), muddy plots, and common plots respectively. The quantity of target plots plus the quantity of muddy plots will not exceed 10.There will be no spaces between the C characters of each line describing the soccer field.End of the input is indicated by a line containing two zeros, which should not be processed.OutputThe output of each test case should be a separate line consisting of the name of the player who has the shortest path to inspect the target plots but not the muddy plots, or the word “Tie” in case of a tie, followed by a number representing the length of the shortest path for that player. The examples may clarify the format.ExampleInput:1 1I2 2XXXI2 2XIIX3 3IIIIXIIII2 2IOOO0 0Output:Tie 4Martin 4Tie 10Tie 18Fernando 4",
  "sample_input": "Input:1 1I2 2XXXI2 2XIIX3 3IIIIXIIII2 2IOOO0 0Output:Tie 4Martin 4Tie 10Tie 18Fernando 4",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/SOCCERCH",
  "scraped_at": "2025-08-17 00:33:14",
  "test_cases": [
    {
      "input": "1 1I2 2XXXI2 2XIIX3 3IIIIXIIII2 2IOOO0 0",
      "expected_output": "Tie 4Martin 4Tie 10Tie 18Fernando 4",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "8 4 1 8 2 10 6 10 6 1 10 7\n8 czcy jf vdfc op dxlqmm 5",
      "expected_output": "0\n0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "4 6 10 8 7 5 3 10 6 5 8 10\n5 wo loycw iuphik gwugmeh h 6",
      "expected_output": "0\n0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "9 1 5 1 10 5 4 8 8 1 6 5\n7 flv sbdm pj uv swdis 5",
      "expected_output": "0\n0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "54 89 3 31 50 9 25 53 51 46 25 76\n58 yfby l atlf bpletc mjeaz 23",
      "expected_output": "0\n0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "24 45 66 17 7 86 8 41 24 78 45 62\n54 c lw v uofqzxk ykv 39",
      "expected_output": "0\n0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "96 27 64 3 66 10 46 39 70 70 52 53\n39 x o hwxv bol ozf 30",
      "expected_output": "0\n0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "19 35 6 41 53 3 41 72 42 71 74 38\n54 gqcn xrsyb k xgv ftigwz 3",
      "expected_output": "0\n0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "73 90 45 68 89 2 58 96 44 86 91 68\n45 p oujspb diylbi tdvh psqko 36",
      "expected_output": "0\n0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "408 158 208 72 322 115 158 217 484 331 190 192\n348 sgdog afevhc oijz pzwgdqbhkvu kvkpee 241",
      "expected_output": "0\n0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "302 277 428 110 135 129 238 340 62 300 426 411\n96 oqa vnhn tmidu htqfpas dxs 239",
      "expected_output": "0\n0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "375 437 314 364 274 240 170 256 300 132 250 273\n357 xyb txizc qig pphxa chdnmh 140",
      "expected_output": "0\n0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "110 349 73 334 387 475 115 348 360 363 227 397\n167 clwg olbm ko clzarzchw huvif 441",
      "expected_output": "0\n0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "231 253 176 460 444 495 210 135 495 473 318 374\n460 mqnv tvztj bcsbpz mzo d 403",
      "expected_output": "0\n0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "440 351 453 388 282 150 445 261 118 463 51 351\n58 lno deli gutihe wuberpefqj espkhf 193",
      "expected_output": "0\n0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "214 195 458 189 460 413 490 224 95 323 362 227\n462 qmawl poeoj thu ocvgylnpo r 345",
      "expected_output": "0\n0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 ywvg cqz umda wwrwapf n 1000",
      "expected_output": "0\n0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 ndwp r q jeswmuptau cbpovd 1000",
      "expected_output": "0\n0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "999 2 1 999 1000 1 999 999 1000 2 1 2\n2 lpw uh r hl rois 1000",
      "expected_output": "0\n0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1000 2 2 999 2 1000 999 1 999 1000 2 2\n2 hue guwph tv yondjxorbkz ehrndy 1",
      "expected_output": "0\n0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:47",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:36:42"
}
{
  "problem_code": "problems",
  "title": "Frequent values",
  "tags": [],
  "text": "You are given a sequence ofnintegersa1, a2... anin non-decreasing order. In addition to that, you are given several\r\nqueries\r\nconsisting of indicesiandj(1\r\n≤ i ≤ j ≤ n). For each query, determine the\r\nmost\r\nfrequent value among the integersai... aj.Input SpecificationThe input consists of several test cases.\r\nEach test case starts with a line containing two integersnandq(1 ≤ n, q ≤ 100000).\r\nThe next line containsnintegersa1... an(-100000 ≤ ai≤ 100000, for eachi ∈ {1 ... n})\r\nseparated by spaces.\r\nYou can assume that for eachi ∈ {1 ... n-1}: ai≤ ai+1.\r\nThe followingqlines contain one query each,\r\nconsisting of two integersiandj(1 ≤ i ≤ j ≤ n), which indicate the boundary indices for the\r\nquery.The last test case is followed by a line containing a single0.Output SpecificationFor each query, print one line with one integer:\r\nThe number of occurrences of the most frequent value within\r\nthe given range.Sample Input10 3\r\n-1 -1 1 1 1 1 3 10 10 10\r\n2 3\r\n1 10\r\n5 10\r\n0Sample Output1\r\n4\r\n3A naive algorithm may not run in time!",
  "sample_input": "10 3\r\n-1 -1 1 1 1 1 3 10 10 10\r\n2 3\r\n1 10\r\n5 10\r\n0",
  "sample_output": "1\r\n4\r\n3",
  "link": "https://www.spoj.com/problems/FREQUENT",
  "scraped_at": "2025-08-17 00:33:35",
  "test_cases": [
    {
      "input": "10 3\r\n-1 -1 1 1 1 1 3 10 10 10\r\n2 3\r\n1 10\r\n5 10\r\n0",
      "expected_output": "1\r\n4\r\n3",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3 8\n3 7 7 2 9 5 6 4 3 9\n7 9\n7 9\n4 2\n1",
      "expected_output": "0\n0\n0\n0\n0\n1",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "1 8\n4 2 2 8 10 4 8 7 2 10\n10 2\n2 8\n6 2\n7",
      "expected_output": "0\n0\n0\n0\n0\n7",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "9 4\n7 6 9 5 10 4 7 6 8 7\n5 3\n6 2\n5 9\n10",
      "expected_output": "0\n0\n0\n0\n0\n10",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "87 83\n99 8 76 64 27 65 30 51 94 83\n2 49\n77 13\n69 43\n87",
      "expected_output": "0\n0\n0\n0\n0\n87",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "52 45\n39 32 54 81 98 16 25 23 82 24\n3 94\n22 81\n87 62\n93",
      "expected_output": "0\n0\n0\n0\n0\n93",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "33 26\n100 36 9 12 6 63 60 21 40 95\n29 81\n36 12\n74 27\n31",
      "expected_output": "0\n0\n0\n0\n0\n31",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "6 52\n22 22 41 91 39 47 64 79 11 47\n38 75\n99 92\n35 91\n58",
      "expected_output": "0\n0\n0\n0\n0\n58",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "1 54\n100 11 81 61 65 96 76 96 49 55\n57 85\n85 100\n88 64\n72",
      "expected_output": "0\n0\n0\n0\n0\n72",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "317 93\n253 332 295 328 136 239 340 366 409 52\n218 53\n167 356\n337 492\n144",
      "expected_output": "0\n0\n0\n0\n0\n144",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "479 300\n241 415 173 212 344 410 401 71 184 289\n56 346\n293 435\n155 122\n443",
      "expected_output": "0\n0\n0\n0\n0\n443",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "394 303\n54 426 283 328 497 358 356 237 229 320\n209 150\n367 277\n245 235\n223",
      "expected_output": "0\n0\n0\n0\n0\n223",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "386 370\n63 217 436 168 321 414 145 383 481 300\n473 361\n280 198\n75 394\n436",
      "expected_output": "0\n0\n0\n0\n0\n436",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "311 372\n55 55 78 312 175 123 287 215 203 338\n448 412\n66 438\n315 55\n255",
      "expected_output": "0\n0\n0\n0\n0\n255",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "172 445\n315 177 395 50 57 110 451 304 99 232\n467 106\n328 382\n247 291\n212",
      "expected_output": "0\n0\n0\n0\n0\n212",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "408 72\n140 240 308 394 338 357 70 155 152 460\n462 132\n332 474\n387 113\n339",
      "expected_output": "0\n0\n0\n0\n0\n339",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000",
      "expected_output": "0\n0\n0\n0\n0\n1000",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000",
      "expected_output": "0\n0\n0\n0\n0\n1000",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "999 999\n1000 999 1000 1000 1000 2 999 1 2 2\n1000 1000\n999 1\n2 2\n1",
      "expected_output": "0\n0\n0\n0\n0\n1",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "999 999\n1000 1 2 999 2 2 1 999 1 1\n1 1000\n1000 2\n999 2\n1000",
      "expected_output": "0\n0\n0\n0\n0\n1000",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:49",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:36:54"
}
{
  "problem_code": "problems",
  "title": "Increasing Powers of K",
  "tags": [],
  "text": "Let's define Skas the increasing sequence a1, a2, a3... consisting of all those positive integers which are powers of K or sums of distinct powers of K.For example S3= {1, 3, 4, 9, 10, 12, 13, 27, 28, 30...}Your task is given N and K find the Nthterm of the sequence Sk.InputThe first line of the input contains a single integer T(1 ≤ T ≤ 104) representing the number of test cases. The next T lines consist of two numbers each one separated by a single space:K (3 ≤ K ≤ 9) and N (1 ≤ N ≤ 10200).OutputFor each test case print a single line, the Nthterm of the sequence Sk.ExampleInput:83 43 1004 35 126 77 2398 179 500Output:9981515043958399409748426822",
  "sample_input": "Input:83 43 1004 35 126 77 2398 179 500Output:9981515043958399409748426822",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/INCPOWK",
  "scraped_at": "2025-08-17 00:33:53",
  "test_cases": [
    {
      "input": "83 43 1004 35 126 77 2398 179 500",
      "expected_output": "9981515043958399409748426822",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2 9 2 1 5 5 5 9 9",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "10 1 2 8 9 8 3 6 9",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "5 3 10 3 3 8 7 7 6",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "35 77 88 41 77 47 84 85 26",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "18 31 34 19 32 57 89 73 47",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "3 78 7 65 64 27 64 51 9",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "76 61 65 13 34 8 73 49 42",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "58 2 13 73 1 55 87 36 16",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "4031 3081 4368 2237 1883 3793 1583 3464 2202",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "2833 3535 3713 4969 4148 2495 983 2259 1140",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "4477 4100 4756 4711 1649 2858 3370 3524 4176",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "1862 1708 2628 3462 4609 826 2864 1620 2537",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "2238 4384 4769 3156 1947 3539 3023 1588 935",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "895 3014 4686 1294 672 1767 3071 4303 3013",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "539 2248 1343 2094 1022 782 3843 3947 4932",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "10200 10200 10200 10200 10200 10200 10200 10200 10200",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "10200 10200 10200 10200 10200 10200 10200 10200 10200",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "10200 10199 10200 2 1 10199 1 10199 10200",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "1 2 10200 10199 10200 10199 2 10200 10200",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:53",
  "total_test_cases": 20
}
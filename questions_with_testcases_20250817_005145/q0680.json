{
  "problem_code": "problems",
  "title": "Contaminated City",
  "tags": [],
  "text": "In a far away country there is a city facing a big problem. The city is plagued by a deadly gas. Many people have died, but there are groups of survivors at places around the city. Between these places there are roads connecting two distinct places that can still be traversed safely. These roads can be traversed in both directions. It's known the number of days necessary to traverse each road and the two places that it connects. It's also known the number of survivors at each location. Each survivor can get to other places following a sequence of roads.The mayor will send several helicopters to rescue these people, each having a capacity, a limit on the number of crew (people that it can rescue). Each helicopter will land on a certain day and place.You should answer an important question for the mayor. How many days are needed to rescue all survivors? If it's not possible to rescue all people you should answer how many of them can be rescued.InputThe first line of input file have the number of test cases T (T ≤ 40).The first line of each test case have N, M, and H, the number of places considered, the number of roads between the places and the number of helicopters that will be sent, respectively. Each place is uniquely identified by a number between 1 and N. The next N lines will have N integers, the i-th line have the number of survivors in place i, Xi. Each of next M lines will have three numbers Aj, Bj and Dj, meaning that there is a way between places Aj and Bj that last Dj days to traverse. The input can contain several roads between the same pair of places. Each of next H lines will have three integers Dh, Ph, and Ch (in this order), meaning that a helicopter with capacity Ch will arrive at place Ph at day Dh. The sum of survivors will not be more than 200. If a survivor can get a helicopter following a sequence of roads, the total time to get the helicopter will not be more than 1000.Constraints1 ≤ N, H ≤ 501 ≤ M ≤ 15001 ≤ Aj, Bj, Ph ≤ N1 ≤ Dj, Dh ≤ 10001 ≤ Ch ≤ 2000 ≤ Xi ≤ 200OutputFor each test case there is one line in output. If all people can be rescued \"All people can be rescued in D day(s) .\" should be printed, where D is the minimum number of days to rescue all people. If it is impossible to rescue all people \"X survivor(s) can be rescued.\" should be printed, where X is the maximum number of survivors that can be rescued.ExampleInput:24 4 434561 2 72 3 33 4 34 1 44 4 76 3 25 2 33 1 64 2 322311 4 32 3 32 4 23 2 43 3 2Output:All people can be rescued in 6 day(s).7 survivor(s) can be rescued.",
  "sample_input": "Input:24 4 434561 2 72 3 33 4 34 1 44 4 76 3 25 2 33 1 64 2 322311 4 32 3 32 4 23 2 43 3 2Output:All people can be rescued in 6 day(s).7 survivor(s) can be rescued.",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/CONTCITY",
  "scraped_at": "2025-08-17 00:33:22",
  "test_cases": [
    {
      "input": "24 4 434561 2 72 3 33 4 34 1 44 4 76 3 25 2 33 1 64 2 322311 4 32 3 32 4 23 2 43 3 2",
      "expected_output": "All people can be rescued in 6 day(s).7 survivor(s) can be rescued.",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "4 6 4 7 3 2 6 8 7 5 10 3 2 6 2 2 2 2 8 10 2 3 7 6 2 10 4 8 9 2 1",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "5 4 1 9 8 10 4 7 4 6 7 5 10 1 6 7 4 1 9 3 2 8 4 8 7 5 2 7 2 5 4",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "3 7 1 5 6 8 2 10 4 4 10 2 9 7 10 5 9 8 2 2 7 1 4 4 6 7 6 1 10 1 7",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "69 64 30 32 54 16 40 42 61 18 60 39 63 8 96 39 48 35 56 45 13 9 92 51 64 5 53 79 21 43 100",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "82 75 96 96 46 61 92 49 90 10 78 38 83 56 12 29 2 94 68 68 11 23 30 23 26 56 39 45 5 47 10",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "52 88 63 8 2 45 29 96 93 3 48 58 6 65 22 32 58 66 38 5 64 97 10 51 69 100 48 13 63 21 15",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "58 81 70 36 70 100 57 66 51 35 68 46 53 73 54 20 97 100 43 72 60 61 81 5 38 30 87 17 58 56 92",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "73 86 60 27 95 67 62 80 27 25 11 71 94 53 52 50 40 86 69 13 47 83 91 97 39 17 44 41 73 67 4",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "279 123 458 101 189 168 409 310 446 380 133 499 80 130 144 205 356 117 107 57 355 469 397 94 90 285 470 63 342 246 193",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "78 258 270 115 179 64 308 321 415 305 459 415 489 199 121 156 441 439 338 120 363 202 234 447 226 110 412 316 261 259 179",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "378 302 194 369 466 492 372 72 122 480 267 103 73 127 409 255 374 207 87 179 342 161 460 54 112 202 437 145 283 172 369",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "227 152 302 342 337 174 339 127 303 445 413 421 453 235 411 84 311 166 497 398 331 131 443 147 348 275 103 457 327 52 424",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "141 56 227 94 310 285 480 293 115 260 179 339 286 112 242 477 463 218 76 251 373 259 460 229 86 443 372 58 76 135 159",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "176 183 336 433 224 126 337 385 390 115 88 355 483 233 189 250 103 320 263 100 371 315 87 62 227 272 437 178 283 205 375",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "296 108 118 374 346 484 411 113 86 375 274 492 188 416 339 69 196 404 124 433 54 201 321 340 82 215 480 361 473 73 447",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1 2 2 1 999 1000 1 1000 999 1000 999 1000 2 1 999 1 1 1 2 1000 2 999 1 2 2 2 1000 1 2 1",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "2 1 999 2 999 1 999 2 999 2 999 1000 999 1 1000 1000 1 2 1000 2 1000 1 999 999 1 1 1 1 2 1 1000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:47",
  "total_test_cases": 20
}
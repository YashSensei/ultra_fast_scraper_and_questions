{
  "problem_code": "problems",
  "title": "Maggu’s Solar Panels",
  "tags": [],
  "text": "Summer is here and so is the season of powercuts, everybody here in IITK has installed there own solar panels over the roof. Now while setting panels, nobody cared of there panel was overlapping with others, the end result looks something likes the one shown below.Clearly, a panel cannot produce electricity from the part where light does not fall. Our Maggu has been given the task of estimating the total electricity output from panels from Hall Office. This task is haunting him. Even Coder cannot do it alone, he needs your help. Assume that all panels produce the same power per unit area and that the area not directly under the sun does not produce any electricity.You need to print the power that will be produced given the end points of rectangular panels and the power per unit area that panels produce.Note: The sides of the panel will be parallel to the X-axis or Y-axis. Meaning, panels will never be tilted. Hence, a panel can be represented by 4 integers x, y, X and Y. Where (x, y) is the co-ordinate of the bottom left corner of the panel and (X, Y) is the co-ordinate of the top right corner of the panel.InputFirst line contains two space separated integers N, number of solar panels and R, power per unit area. Next N lines contains the description of N panels. Each line containing 4 space separates integers x, y, X and Y respectively.OutputYou need to output a single integer, the total power that can be generated.Constraints-108≤ x ≤ X ≤ 108-108≤ y ≤ Y ≤ 1081 ≤ N ≤ 1000001 ≤ R ≤ 100ExampleInput:3 2\r\n-6 0 3 6\r\n0 4 6 10\r\n4 -2 9 6Output:240",
  "sample_input": "Input:3 2\r\n-6 0 3 6\r\n0 4 6 10\r\n4 -2 9 6Output:240",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/IITWPC4E",
  "scraped_at": "2025-08-17 00:34:29",
  "test_cases": [
    {
      "input": "3 2\r\n-6 0 3 6\r\n0 4 6 10\r\n4 -2 9 6",
      "expected_output": "240",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5 9\n6 4 2 1\n2 5 7 8\n9 7 4 6",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "9 3\n1 5 2 7\n4 8 6 1\n6 10 3 3",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "10 3\n8 7 9 5\n1 6 2 4\n1 7 5 7",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "8 97\n74 81 7 15\n34 34 88 72\n16 10 69 55",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "4 13\n12 39 19 14\n3 2 99 91\n21 37 72 77",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "59 49\n98 22 58 75\n65 91 65 48\n89 1 59 97",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "41 74\n16 62 90 36\n32 52 31 63\n11 7 74 96",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "35 8\n43 81 23 32\n84 54 16 16\n59 89 39 83",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "442124 496716\n94581 474792 423603 340366\n282262 295948 74989 491586\n76726 382247 389208 83614",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "402765 482797\n131713 308507 487504 202613\n127253 161906 77727 86280\n191760 352025 304797 327889",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "444185 383012\n187842 375015 171461 131932\n120952 69889 382155 316914\n206022 65535 88224 91077",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "410746 498861\n468321 302347 266393 415105\n222538 495313 483167 300257\n234027 152314 198229 228965",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "109234 499806\n450325 455991 384252 275641\n85476 307178 142731 311127\n129413 81545 323953 124964",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "133026 53502\n192157 434819 115081 351137\n354746 243292 356366 205671\n267527 394534 493773 87825",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "221875 272456\n397489 132164 78709 207839\n321344 420394 194313 176426\n94383 194126 124590 378404",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000000 1000000\n1000000 1000000 1000000 1000000\n1000000 1000000 1000000 1000000\n1000000 1000000 1000000 1000000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000000 1000000\n1000000 1000000 1000000 1000000\n1000000 1000000 1000000 1000000\n1000000 1000000 1000000 1000000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000000 1000000\n2 999999 1 1000000\n2 2 999999 2\n2 2 1 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "999999 1\n1 1 999999 1\n2 1000000 999999 2\n999999 1000000 1000000 999999",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:57",
  "total_test_cases": 20
}
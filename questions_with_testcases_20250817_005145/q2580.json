{
  "problem_code": "problems",
  "title": "Snow White and the N dwarfs",
  "tags": [],
  "text": "Snow White and the N dwarfs live in the forest. While the dwarfs mine away Snow White hangs around social networks.Each morning the dwarfs form a long line and go whistling away to the mine. Snow White runs around them and snaps pictures to upload onto her favorite social network.When dwarfs enter the mine, Snow White goes back to their house and goes through the pictures, selecting pretty ones. Each dwarf has a colored cap, and there are C different colors. A picture is pretty if more than half caps on it are of the same color. In other words, if there are K dwarfs on the picture, it is pretty if strictly more than K / 2 dwarfs have same colored caps.Write a program that will check for a set of M pictures if they are pretty, and what color is dominating if they are.InputFirst line contains two integers N and C (3 ≤ N ≤ 300000, 1 ≤ C ≤ 100000) number of dwarfs and number of colors.Second line contains N integers between 1 and C (inclusive), colors of dwarves hats, ordered the way they formed the line that morning.Third line contains M (1 ≤ M ≤ 100000), number of pictures.Next M lines contain two integers A and B (1 ≤ A ≤ B ≤ N). Each line describes one picture. On it there are all dwarves starting from A-th all the way to the B-th.OutputOutput M lines. For each picture output “no” if Snow White doesn't think the picture is pretty, and “yes X”, where X is the color dominating on the picture, if she does.ExampleInput:10 3\r\n1 2 1 2 1 2 3 2 3 3\r\n8\r\n1 2\r\n1 3\r\n1 4\r\n1 5\r\n2 5\r\n2 6\r\n6 9\r\n7 10Output:no\r\nyes 1\r\nno\r\nyes 1\r\nno\r\nyes 2\r\nno\r\nyes 3",
  "sample_input": "Input:10 3\r\n1 2 1 2 1 2 3 2 3 3\r\n8\r\n1 2\r\n1 3\r\n1 4\r\n1 5\r\n2 5\r\n2 6\r\n6 9\r\n7 10Output:no\r\nyes 1\r\nno\r\nyes 1\r\nno\r\nyes 2\r\nno\r\nyes 3",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/PATULJCI",
  "scraped_at": "2025-08-17 00:34:10",
  "test_cases": [
    {
      "input": "10 3\r\n1 2 1 2 1 2 3 2 3 3\r\n8\r\n1 2\r\n1 3\r\n1 4\r\n1 5\r\n2 5\r\n2 6\r\n6 9\r\n7 10",
      "expected_output": "no\r\nyes 1\r\nno\r\nyes 1\r\nno\r\nyes 2\r\nno\r\nyes 3",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "2 7\n3 2 8 2 2 6 2 1 10 3\n8\n10 4\n1 4\n7 2\n4 9\n3 3\n2 2\n8 1\n3 5",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "2 1\n10 6 3 6 3 5 6 5 1 6\n3\n8 3\n7 6\n3 8\n9 7\n5 8\n2 3\n2 3\n4 4",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "3 4\n10 9 4 3 4 5 2 4 6 6\n1\n6 10\n8 3\n1 3\n10 2\n2 1\n7 2\n8 7\n7 8",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "26 57\n13 18 36 6 72 96 9 74 24 76\n41\n39 19\n11 3\n12 57\n73 38\n76 83\n8 92\n89 22\n52 6",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "63 11\n18 5 33 70 7 6 51 14 38 34\n46\n81 36\n100 74\n29 66\n96 17\n33 30\n45 14\n71 34\n96 34",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "6 53\n63 1 56 33 58 14 92 66 87 25\n19\n51 99\n9 9\n65 83\n43 91\n3 53\n23 32\n69 92\n44 25",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "71 44\n54 99 27 72 25 15 13 75 19 54\n51\n44 33\n85 75\n50 71\n99 78\n4 15\n84 55\n98 92\n84 45",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "16 54\n95 51 81 49 53 89 58 70 84 46\n59\n70 60\n8 68\n99 47\n19 96\n73 69\n21 2\n48 47\n73 1",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "142228 68138\n85333 50624 144532 88719 71260 73486 100282 70521 76671 91341\n112851\n83319 83807\n24735 36886\n46318 61759\n118123 117391\n91300 77449\n49743 21059\n149340 74833\n15337 61794",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "18023 127595\n97046 59473 40992 88996 133652 76929 100877 65122 101664 59868\n103250\n72129 88490\n96568 114723\n49666 108876\n57898 23010\n140107 124684\n27777 72853\n61237 142422\n124650 127200",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "115979 139946\n46603 119401 38546 29206 27715 61582 128799 139343 101379 128454\n84724\n28838 19914\n88490 120084\n27404 49794\n78903 121202\n48178 107618\n22779 99402\n148357 39797\n143877 56905",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "98588 122955\n91852 25390 38003 89166 131834 114194 129755 24141 41627 99574\n93175\n132811 118860\n45125 101737\n113721 21323\n119688 22383\n15410 133693\n74157 21535\n112159 101954\n74663 54688",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "102862 124265\n81065 33063 54493 104338 58868 116277 71375 109141 23743 81841\n94480\n130052 131800\n135386 64887\n93848 83984\n124518 77806\n95897 103080\n40239 140783\n44534 77313\n140689 25437",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "139818 21350\n40730 96909 130769 133484 114273 35191 105477 95817 104426 96575\n32937\n56018 130133\n103127 139409\n35316 148666\n99996 56723\n32909 95552\n42140 63495\n106865 70946\n61668 113204",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "85022 143730\n140295 16259 107923 41163 141556 47852 24419 149673 127604 22445\n90927\n37074 140938\n35309 57282\n86970 90687\n129749 87839\n87911 17413\n48460 106225\n60177 148363\n136684 53643",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "300000 300000\n300000 300000 300000 300000 300000 300000 300000 300000 300000 300000\n300000\n300000 300000\n300000 300000\n300000 300000\n300000 300000\n300000 300000\n300000 300000\n300000 300000\n300000 300000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "300000 300000\n300000 300000 300000 300000 300000 300000 300000 300000 300000 300000\n300000\n300000 300000\n300000 300000\n300000 300000\n300000 300000\n300000 300000\n300000 300000\n300000 300000\n300000 300000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "299999 300000\n1 299999 300000 300000 299999 2 2 1 300000 1\n1\n300000 2\n299999 2\n2 2\n2 299999\n300000 299999\n299999 2\n2 1\n2 299999",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "300000 300000\n1 299999 299999 2 299999 299999 299999 300000 2 300000\n299999\n299999 300000\n300000 1\n299999 300000\n1 300000\n1 300000\n300000 1\n300000 300000\n1 300000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:53",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "First to meet the spaceship",
  "tags": [],
  "text": "A spaceship has been sighted heading towards Earth. For the entire time that humanity has been monitoring it, it has not altered its course, it only changed speed for unknown reasons. As such, all the possible places on Earth where the spaceship might end up landing form a straight line; depending on how much it changes speed, it will land at different times, meaning a different point on this line due to Earth's rotation.npeople want to be the first to meet the aliens - they picked a pointxion this line and wait at that point in their vehicle with speedvi. Now they are all anxiously waiting for the spaceship's arrival. NASA has given a list ofqmost likely locations where the spaceship might end up landing - and everyone wants to know who would get to be the first to meet the aliens if the spaceship landed at each of the given points. They turned to you for help!InputThe first line contains two integers1 ≤ n , q ≤ 300,000- the number of people wishing to meet the aliens and the number of possible points where the spaceship might land.The followingnlines contain two integers0 ≤ xi< 109and0 < vi≤ 109- the point on the line where thei-th person is waiting and the speed of his vehicle. Additionally,xi= xj→ vi≠ vj.The last line containsqdistinct integers0 ≤ qi< 109- the points on the line where the spaceship might end up landing. You may assume the spaceship will not land at any point containing a person waiting in a vehicle.OutputFor each queryqioutput the number of people who will arrive at the spaceship first if it lands at that point. A person atxjwith speedvjwill arrive atqiin time|xj- qi| /vj. The people who will arrive at the spaceship first are thosejfor whom the fraction is minimal out of all people. Then, in the same line, output the 1-based indices of these people as they were given in the input, sorted in ascending order.ExampleInput:4 7\r\n10 5\r\n30 1\r\n20 4\r\n100 1\r\n5 31 22 15 85 60 61Output:1 1\r\n1 2\r\n1 3\r\n1 1\r\n2 1 4\r\n2 1 3\r\n1 1",
  "sample_input": "Input:4 7\r\n10 5\r\n30 1\r\n20 4\r\n100 1\r\n5 31 22 15 85 60 61Output:1 1\r\n1 2\r\n1 3\r\n1 1\r\n2 1 4\r\n2 1 3\r\n1 1",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/MEETSHIP",
  "scraped_at": "2025-08-17 00:34:16",
  "test_cases": [
    {
      "input": "4 7\r\n10 5\r\n30 1\r\n20 4\r\n100 1\r\n5 31 22 15 85 60 61",
      "expected_output": "1 1\r\n1 2\r\n1 3\r\n1 1\r\n2 1 4\r\n2 1 3\r\n1 1",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "6 8\n8 4\n3 4\n10 4\n9 6\n10 6 7 10 6 7 5",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "2 8\n9 2\n9 2\n7 6\n10 9\n6 9 3 2 9 3 7",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "2 7\n2 7\n1 10\n3 5\n9 1\n8 8 6 5 7 1 2",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "36 46\n39 36\n87 45\n28 67\n72 94\n24 14 11 79 87 74 89",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "34 27\n80 37\n71 76\n69 46\n71 37\n93 16 15 23 87 35 95",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "38 9\n44 63\n21 81\n90 80\n55 66\n50 68 99 56 63 31 13",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "57 51\n25 37\n98 88\n61 98\n91 93\n33 66 70 45 9 24 26",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "5 43\n10 49\n34 21\n38 17\n74 64\n5 60 26 84 57 53 41",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "464 403\n290 70\n226 420\n395 405\n278 84\n350 345 460 469 103 453 113",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "416 87\n419 168\n153 62\n383 265\n85 412\n319 216 123 168 296 144 192",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "114 411\n323 287\n351 264\n88 155\n258 488\n333 231 377 262 399 429 81",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "216 371\n336 91\n123 444\n173 234\n197 107\n123 255 278 289 309 172 440",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "349 77\n490 249\n339 428\n474 442\n251 64\n168 353 359 422 393 52 328",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "307 288\n277 166\n358 275\n486 66\n79 161\n392 152 168 101 98 420 101",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "184 267\n339 284\n197 398\n470 123\n196 172\n411 60 238 293 233 177 402",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000\n1000 1000 1000 1000 1000 1000 1000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1000 2\n2 1\n1000 1\n1 1000\n2 1\n999 1 1000 2 2 2 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "999 1000\n1 999\n999 1\n999 1000\n2 2\n1 999 1 2 999 2 2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:55",
  "total_test_cases": 20
}
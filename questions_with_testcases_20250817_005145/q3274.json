{
  "problem_code": "problems",
  "title": "Increasing Subsequences",
  "tags": [],
  "text": "Given a sequence of N (1 ≤ N ≤ 10,000) integers S1, ..., SN(0 ≤ Si< 100,000), compute the number of increasing subsequences of S with length K (1 ≤ K ≤ 50 and K ≤ N); that is, the number of K-tuples i1, ..., iKsuch that 1 ≤ i1< ... < iK≤ N and Si1< ... < SiK.InputThe first line contains the two integers N and K. The following N lines contain the integers of the sequence in order.OutputPrint a single integer representing the number of increasing subsequences of S of length K, modulo 5,000,000.ExampleInput:4 3\r\n1\r\n2\r\n2\r\n10Output:2The two 3-tuples are (1, 2, 4) and (1, 3, 4), both corresponding to the subsequence 1, 2, 10.",
  "sample_input": "Input:4 3\r\n1\r\n2\r\n2\r\n10Output:2",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/INCSEQ",
  "scraped_at": "2025-08-17 00:34:14",
  "test_cases": [
    {
      "input": "4 3\r\n1\r\n2\r\n2\r\n10",
      "expected_output": "2",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3 4\n8\n8\n4\n5",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "5 5\n1\n4\n6\n1",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "9 2\n2\n5\n6\n5",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "2 1\n1\n5\n5\n8",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "10 10\n9\n3\n1\n6",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "6 5\n4\n4\n8\n2",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "10 3\n1\n8\n6\n5",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "9 9\n7\n7\n2\n2",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "2 2\n4\n3\n4\n2",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "5 4\n4\n5\n2\n3",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "3 5\n3\n3\n1\n3",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "5 4\n3\n3\n4\n1",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "5 1\n4\n1\n4\n1",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "2 4\n3\n1\n1\n3",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "5 1\n2\n4\n5\n2",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "10 10\n10\n10\n10\n10",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "10 10\n10\n10\n10\n10",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "2 1\n9\n1\n9\n9",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "9 2\n1\n9\n9\n2",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:55",
  "total_test_cases": 20
}
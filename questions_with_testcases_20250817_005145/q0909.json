{
  "problem_code": "problems",
  "title": "Catch Sheep",
  "tags": [],
  "text": "XiYangYang is a kind of lovely and rare sheep. They live in a peaceful land which can be described as a tree with N cities (nodes).Now you have K robots. They will start at a same point and travel each edge at least once so that all XiYangYang will be caught. All your robots can stop at any city in the land. Because of expensive oil, you want minimize the total distance that your robots walk.InputFirst line : N K (N ≤ 15000, K ≤ 30)Next N-1 lines: a b c (city a and city b are connected with a road whose length is c (1 ≤ a, b ≤ N, 0 ≤ c ≤ 100)OutputN lines: The total distance that your robots walk if they all start at city i.ExampleInput:5 3\r\n1 2 7\r\n2 3 5\r\n3 4 14\r\n3 5 8Output:42\r\n39\r\n34\r\n42\r\n42Hint: my solution can get AC in 0.75~1 second.",
  "sample_input": "Input:5 3\r\n1 2 7\r\n2 3 5\r\n3 4 14\r\n3 5 8Output:42\r\n39\r\n34\r\n42\r\n42",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/XYYHHTT",
  "scraped_at": "2025-08-17 00:33:30",
  "test_cases": [
    {
      "input": "5 3\r\n1 2 7\r\n2 3 5\r\n3 4 14\r\n3 5 8",
      "expected_output": "42\r\n39\r\n34\r\n42\r\n42",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "3 2\n10 2 7\n7 1 5\n7 8 6\n5 5 3",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "10 5\n7 2 10\n9 3 6\n3 9 7\n2 4 3",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "6 8\n3 10 9\n4 1 6\n2 9 1\n1 3 10",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "61 22\n30 11 35\n77 22 5\n74 40 20\n77 12 84",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "16 77\n53 75 96\n95 35 97\n64 96 42\n100 50 50",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "43 65\n100 75 37\n25 37 69\n72 56 32\n96 21 77",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "50 55\n45 90 53\n33 18 92\n25 94 33\n92 31 53",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "61 60\n55 88 92\n51 25 36\n25 7 91\n68 50 95",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "3202 6583\n1592 1499 5154\n6656 7047 2542\n2349 1059 6251\n5033 6113 4135",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "7406 1606\n5716 2512 6999\n7343 3488 4347\n6909 815 5986\n6731 6116 4279",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "4823 4448\n6991 835 3428\n3359 1479 4241\n5627 7040 1648\n5867 2728 2018",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "2366 6945\n6235 5173 3770\n2796 1125 6714\n2464 1866 1088\n1289 6867 2503",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "2245 2789\n5085 7356 6788\n5130 2632 3673\n1189 3954 2064\n3108 4530 7471",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "5576 6228\n4554 1594 7446\n1361 3356 1679\n1552 2020 6813\n5219 4516 2827",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "6330 7438\n2923 1467 6683\n5551 3276 2003\n3506 800 5530\n3670 3691 3504",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "15000 15000\n15000 15000 15000\n15000 15000 15000\n15000 15000 15000\n15000 15000 15000",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "15000 15000\n15000 15000 15000\n15000 15000 15000\n15000 15000 15000\n15000 15000 15000",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "1 15000\n1 14999 1\n2 2 15000\n15000 1 1\n14999 15000 2",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "15000 2\n14999 2 2\n15000 14999 1\n15000 15000 2\n2 15000 15000",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:48",
  "total_test_cases": 20
}
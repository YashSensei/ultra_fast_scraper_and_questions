{
  "problem_code": "problems",
  "title": "Palindrome Merge",
  "tags": [],
  "text": "EnglishVietnameseGiven two strings s1 and s2. We can merge characters of two strings (with order in original strings) to get a new string.For example : s1 = 'ab' and s2 = 'ba'.We can merge to get st = 'abba' but not st = 'aabb'.The Problem :Given two string contain only lowercase letters, count the number of palindrome by merging in different ways.Example: 'aba', 'abba' are palindrome, 'abc' and 'abca' aren't.Input- Two lines, each line contains a string, string's length isn't over 500.Output- A single integer is the number of palindrome aftermodulo 3210121.ExampleInput:ab\nbaOutput:4",
  "sample_input": "Input:ab\nbaOutput:4",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/TPCPALIN",
  "scraped_at": "2025-08-17 00:34:34",
  "test_cases": [
    {
      "input": "ab\nba",
      "expected_output": "4",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "atl\nsqsa",
      "expected_output": "0",
      "type": "small_case_2",
      "description": "Generated small test case"
    },
    {
      "input": "ajr\na",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "gxfz\nrirl",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "p\nmqg",
      "expected_output": "0",
      "type": "medium_case_5",
      "description": "Generated medium test case"
    },
    {
      "input": "xs\nyx",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "bd\nz",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "mijs\nilg",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "w\nv",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "a\nq",
      "expected_output": "0",
      "type": "large_case_10",
      "description": "Generated large test case"
    },
    {
      "input": "nzj\no",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "jdly\nj",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "uov\ngvjy",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "tins\nkwn",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "o\nc",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "t\nziyi",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "ykco\nsdrk",
      "expected_output": "0",
      "type": "max_case_17",
      "description": "Generated max test case"
    },
    {
      "input": "b\ns",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "ua\nafrm",
      "expected_output": "0",
      "type": "edge_case_19",
      "description": "Generated edge test case"
    },
    {
      "input": "ur\nr",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:57",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:38:20"
}
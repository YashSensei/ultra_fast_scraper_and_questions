{
  "problem_code": "problems",
  "title": "Fone Frequencies",
  "tags": [],
  "text": "When relay towers for mobile telephones communicate with the mobile phones in their area, there is\r\nalways the possibility of interference. So, when assigning the transmission frequency, the FCC makes\r\nsure that nearby towers have frequencies that aren't too close. On the other hand, the FCC does not\r\nwant to assign too many different frequencies; they want to save as many as possible for other uses.Your job is to find an optimal assignment of frequencies.In this problem, the frequencies will be integers. Nearby towers must be assigned frequencies that differ\r\nby at least 2. You'll find an assignment using as few frequencies as possible. For example, consider the\r\nfollowing two arrangements of towers. Two towers near each other are indicated by the connecting line.Note that the following are legal frequency assignments to these two tower configurations. However,\r\nthe second arrangement does not use the fewest number of frequencies possible, since the tower with\r\nfrequency 5 could have frequency 1.InputThere will be multiple test cases. Input for each test case will consist of two lines: the first line will\r\ncontain the integer n, indicating the number of towers. The next line will be of the form x1 y1 x2 y2 ...\r\nxn yn where xi yi are the coordinates of tower i. A pair of towers are considered \"near\" each other\r\nif the distance between them is no more than 20. There will be no more than 12 towers and no tower\r\nwill have more than 4 towers near it. A value of n = 0 indicates end of input.OutputFor each test case, you should print one line in the format:The towers in case n can be covered in f frequencies.where you determine the value for f. The case numbers, n, will start at 1.ExampleInput:5\r\n0 0 5 7.5 1 -3 10.75 -20.1 12.01 -22\r\n6\r\n0 1 19 0 38 1 38 21 19 22 0 21\r\n0Output:The towers in case 1 can be covered in 3 frequencies.\r\nThe towers in case 2 can be covered in 2 frequencies.",
  "sample_input": "The towers in case n can be covered in f frequencies.",
  "sample_output": "Input:5\r\n0 0 5 7.5 1 -3 10.75 -20.1 12.01 -22\r\n6\r\n0 1 19 0 38 1 38 21 19 22 0 21\r\n0Output:The towers in case 1 can be covered in 3 frequencies.\r\nThe towers in case 2 can be covered in 2 frequencies.",
  "link": "https://www.spoj.com/problems/OU7",
  "scraped_at": "2025-08-17 00:33:26",
  "test_cases": [
    {
      "input": "The towers in case n can be covered in f frequencies.",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5\r\n0 0 5 7.5 1 -3 10.75 -20.1 12.01 -22\r\n6\r\n0 1 19 0 38 1 38 21 19 22 0 21\r\n0",
      "expected_output": "The towers in case 1 can be covered in 3 frequencies.\r\nThe towers in case 2 can be covered in 2 frequencies.",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "xz fv hj o yaw d saude sgbph l bls ewnjcokc",
      "expected_output": "0",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "qr bvye glwun fkke l ijjjw mllws cgcrmr sk barxa cq",
      "expected_output": "0",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "c xq gk v nzj ey wnf d myam gaac hvfrvjrtjt",
      "expected_output": "0",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "ii w mk zuy jr fy dhq fsyo uwvz um gukawyxns",
      "expected_output": "0",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "ctwv kywmoi jb wtce lbfu b g iomguze kzfpa xngct sqmtzoxn",
      "expected_output": "0",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "l rk iww sgorf fpkmd m kmx s mbqgv uxt vyiinu",
      "expected_output": "0",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "ply fvmwp wv kta pxsp yv myrw ludel fwqr dzunp qnsco",
      "expected_output": "0",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "sba xwbh g tnv glbh mgik belyq ygq d uihg hpyrpocp",
      "expected_output": "0",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "o scocc hijk r chawp r ph l ehj kwbi lktflbdwbern",
      "expected_output": "0",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "np uk uyq e yr ryktb lkvah obx njece aup jezyjftyiobc",
      "expected_output": "0",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "r kjg u c ms viwgl gzb npvr idm ksrls cbfohpiay",
      "expected_output": "0",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "dmgw ou pfbn cif h bck akly wxw ybon qyxre edtscfxkqk",
      "expected_output": "0",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "brpz fg xtict vt gryw kn ymxl dvsly wclc k mcfatcdvf",
      "expected_output": "0",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "hw ogyhhp hy v ltg h bxha cz o tgo flgyk",
      "expected_output": "0",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "codr zpk zaf i tqfu s vqg vvtcr tu a xjkarrbjey",
      "expected_output": "0",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "yr icxpux dor nu py vp oggc dlbhqa mn bbzu yinmhkus",
      "expected_output": "0",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "t bnozr tw p cz rwyij oqk uywlmo qmtm c exmogs",
      "expected_output": "0",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "bjlj c rax dv i yzjbe ckuxg uocbg fhyat yhbs hflvyxomxdcd",
      "expected_output": "0",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:50",
  "total_test_cases": 20,
  "outputs_generated_at": "2025-08-19 20:37:12"
}
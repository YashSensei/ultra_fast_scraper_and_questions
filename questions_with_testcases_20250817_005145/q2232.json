{
  "problem_code": "problems",
  "title": "Amazing Prime Sequence",
  "tags": [],
  "text": "Bablu is very fond of Series and Sequences...After studying Fibonacci Series in Class IX, he was impressed and he designed his own sequence as follows...a[0] = a[1] = 0For n > 1, a[n] = a[n - 1] + f(n), where f(n) is smallest prime factor of n.He is also very fond of programming and thus made a small program to find a[n], but since he is in Class IX, he is not very good at programming. So, he asks you for help. Your task is to find a[n] for the above sequence....InputYour code will be checked for multiple test cases.First line of Input contains T (≤ 100), the number of test cases.Next T lines contain a single number N. (1 < N < 107).OutputSingle line containing a[n] i.e. nth number of the sequence for each test case.ExampleInput:3\r\n2\r\n3\r\n4Output:2\r\n5\r\n7",
  "sample_input": "Input:3\r\n2\r\n3\r\n4Output:2\r\n5\r\n7",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/APS",
  "scraped_at": "2025-08-17 00:33:48",
  "test_cases": [
    {
      "input": "3\r\n2\r\n3\r\n4",
      "expected_output": "2\r\n5\r\n7",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "5\n9\n2\n7\n1\n6",
      "expected_output": "To be computed",
      "type": "small_case_2",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "5\n1\n6\n2\n2\n7",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "4\n10\n10\n3\n10",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Small array (N ≤ 5)"
    },
    {
      "input": "12\n59330008\n62425792\n37664800\n12129466\n78017484\n85119115\n57848867\n33104287\n45504600\n53418736\n4217944\n51898491",
      "expected_output": "To be computed",
      "type": "medium_case_5",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "20\n8091959\n68117805\n13926089\n2669391\n64534792\n39241325\n34925970\n29451646\n767284\n52108116\n18126190\n38031039\n32335498\n45011713\n33684329\n96464184\n87834542\n76855439\n3711452\n53058228",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "6\n10016751\n14259437\n82153728\n73584347\n32085693\n2255296",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "5\n76060969\n86920935\n93753714\n35492787\n67083693",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "12\n33055301\n17087537\n50467376\n40722465\n34392046\n26645655\n35927144\n44254185\n56433166\n87797330\n55970745\n34676877",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Medium array (5 < N ≤ 20)"
    },
    {
      "input": "106\n16797\n55684\n47624\n74861\n37509\n48507\n62596\n65704\n9176\n15144\n71071\n22122\n61785\n35396\n46913\n96453\n80930\n96902\n17411\n69349\n49462\n79646\n26329\n35619\n8953\n8436\n42486\n91775\n53097\n52434\n8261\n10768\n58118\n19321\n42473\n45323\n72848\n20744\n41509\n37553\n42679\n80043\n58332\n14827\n69070\n35590\n45955\n83341\n98719\n20218\n62313\n49897\n25947\n3606\n11386\n69641\n99970\n64342\n65013\n52270\n37181\n13638\n55645\n35118\n9638\n88018\n281\n96974\n8303\n22233\n48158\n42910\n88279\n99781\n44127\n7981\n18185\n89387\n41733\n75691\n3898\n80220\n24000\n47412\n54709\n66215\n73107\n49823\n40057\n40031\n70277\n70912\n76923\n79017\n55428\n57184\n35291\n90170\n60106\n36322\n78929\n34310\n73564\n83014\n17808\n64438",
      "expected_output": "To be computed",
      "type": "large_case_10",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "40\n77286\n7227\n47537\n63953\n6535\n55225\n56542\n21999\n33301\n67932\n1139\n62111\n76466\n8828\n17964\n7800\n37608\n56299\n83343\n74188\n46690\n62839\n30478\n37996\n96092\n77901\n41331\n71677\n62293\n88036\n59149\n75305\n31198\n68391\n38839\n19195\n50107\n60149\n42481\n35533",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "32\n21948\n31664\n11663\n92325\n69531\n33253\n8099\n77940\n10093\n5187\n10918\n32470\n15309\n59771\n26291\n30264\n68066\n77000\n81087\n63814\n39125\n40312\n16339\n67895\n39463\n55702\n44845\n85506\n27627\n23364\n61554\n67048",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "31\n38490\n91664\n47075\n1392\n2074\n31194\n21719\n90936\n38496\n73791\n7130\n65642\n50932\n2104\n54535\n29988\n79076\n73043\n37387\n50956\n67558\n60472\n26267\n88996\n55840\n53479\n2494\n78052\n86347\n65051\n57960",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "22\n21735\n82660\n58079\n30304\n7474\n65685\n72338\n27661\n26093\n9685\n48417\n64300\n69757\n34882\n74792\n80861\n23065\n70884\n10533\n79148\n1265\n24684",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "22\n18342\n62520\n16323\n34622\n55728\n88498\n98371\n63030\n19835\n51939\n31115\n60633\n80166\n80737\n27339\n25625\n17003\n24122\n91638\n14582\n67139\n69892",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "31\n48437\n3548\n8\n49938\n79806\n71855\n75803\n88383\n99638\n76084\n99129\n74150\n23575\n91516\n31406\n60024\n81155\n25416\n9328\n79089\n14974\n98062\n29443\n44399\n6401\n41138\n16327\n58996\n956\n55699\n44734",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Large array (20 < N ≤ 500)"
    },
    {
      "input": "107\n24434983\n23733344\n66464872\n69605391\n6283927\n53907254\n89310621\n86971701\n71151178\n92057021\n30063406\n96069298\n66706379\n66945394\n24910145\n2506442\n66755787\n51300951\n50886379\n17884168\n98392497\n34625486\n17458225\n9852935\n15343488\n69383579\n25821276\n80083094\n64841974\n6410835\n31319115\n33419981\n28997092\n86213149\n83030605\n7092364\n454238\n81569671\n89646657\n16496272\n6249058\n38263217\n40979815\n3446300\n85096373\n27581658\n77630295\n75982408\n12876204\n15358007\n44619003\n89048643\n79775769\n92436243\n31253295\n7308139\n50030161\n76383875\n87308133\n3533747\n35488279\n45217895\n77608388\n48319933\n53106047\n85500781\n31756822\n50125488\n54882565\n29675946\n5751698\n98281298\n68739934\n96422882\n27477594\n74797487\n16753726\n89886791\n37330100\n96899886\n59567134\n85201259\n78404922\n73696093\n29714368\n41150280\n50658233\n61620543\n64047532\n19031567\n20315052\n86064227\n92249536\n58513891\n53233595\n80367426\n89612259\n13014532\n91865015\n90993529\n6205448\n95339062\n40121275\n40422394\n16414063\n2579488\n50966882",
      "expected_output": "To be computed",
      "type": "max_case_17",
      "description": "Maximum size array (N = 107)"
    },
    {
      "input": "107\n55049894\n57070609\n80514030\n78730443\n63131576\n13629751\n16973615\n20613275\n10430237\n8029134\n42610257\n14748940\n3270289\n59778767\n36967279\n40207308\n63990802\n85746009\n31000619\n91610757\n45996786\n71286619\n26763613\n39046633\n43712412\n94598252\n48967898\n14146045\n49454996\n58532930\n53023051\n57404497\n91230912\n70503905\n19243426\n6829697\n65051331\n93945982\n60214473\n42185784\n83226537\n51485346\n25822745\n43907764\n92388387\n91659201\n49285559\n29713162\n88784646\n45800852\n69119543\n7794727\n42003094\n51741716\n39526541\n45012606\n85822727\n38608499\n40808766\n57724627\n33206655\n27155355\n96729192\n31888420\n2416859\n23895594\n4035153\n96308635\n19619404\n7405924\n99165540\n71276397\n28605708\n26261328\n95868252\n15526611\n60333781\n72463481\n80773086\n5574796\n44583406\n75212045\n71035012\n45090028\n22765741\n39567589\n1836374\n55350939\n34709615\n62878172\n52020110\n55508489\n53180305\n80126887\n88190698\n97244181\n21020595\n96766691\n94787416\n24722536\n75401875\n76788008\n15705367\n4182125\n76624063\n14700889\n67140322",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Maximum size array (N = 107)"
    },
    {
      "input": "2\n100000000\n100000000",
      "expected_output": "To be computed",
      "type": "edge_case_19",
      "description": "Edge case array (N = 2)"
    },
    {
      "input": "2\n63333290\n1",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Edge case array (N = 2)"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:52",
  "total_test_cases": 20
}
{
  "problem_code": "problems",
  "title": "Lazy Cows",
  "tags": [],
  "text": "EnglishVietnameseFarmer John regrets having applied high-grade fertilizer to his pastures since the grass now grows so quickly that his cows no longer need to move around when they graze. As a result, the cows have grown quite large and lazy... and winter is approaching.Farmer John wants to build a set of barns to provide shelter for his immobile cows and believes that he needs to build his barns around the cows based on their current locations since they won't walk to a barn, no matter how close or comfortable.The cows' grazing pasture is represented by a 2 x B (1 <= B <= 15,000,000) array of cells, some of which contain a cow and some of which are empty.  N (1 <= N <= 1000) cows occupy the cells in this pasture:-------------------------------------------------------\n|     | cow |     |     |     | cow | cow | cow | cow |\n-------------------------------------------------------\n|     | cow | cow | cow |     |     |     |     |     |\n-------------------------------------------------------Ever the frugal agrarian, Farmer John would like to build a set of just K (1 <= K <= N) rectangular barns (oriented with walls parallel to the pasture's edges) whose total area covers the minimum possible number of cells.  Each barn covers a rectangular group of cells in their entirety, and no two barns may overlap.  Of course, the barns must cover all of the cells containing cows.By way of example, in the picture above if K=2 then the optimal solution contains a 2x3 barn and a 1x4 barn and covers a total of 10 units of area.InputThe first line of the input contains integer t representing the number of test cases. Then t cases follow. Each case has the following form:Line 1: Three space-separated integers, N, K, and B.Lines 2..N+1: Two space-separated integers in the range (1,1) to         (2,B) giving the  coordinates of the cell containing each cow.          No cell contains more than one cow.OutputFor each test case, output the minimum area required by the K barns in order to cover all of the cows.ExampleInput:1\n8 2 9\n1 2\n1 6\n1 7\n1 8\n1 9\n2 2\n2 3\n2 4Output:10Input details:As pictured above.Output details:As discussed above.",
  "sample_input": "-------------------------------------------------------\n|     | cow |     |     |     | cow | cow | cow | cow |\n-------------------------------------------------------\n|     | cow | cow | cow |     |     |     |     |     |\n-------------------------------------------------------",
  "sample_output": "Input:1\n8 2 9\n1 2\n1 6\n1 7\n1 8\n1 9\n2 2\n2 3\n2 4Output:10",
  "link": "https://www.spoj.com/problems/LAZYCOWS",
  "scraped_at": "2025-08-17 00:34:23",
  "test_cases": [
    {
      "input": "-------------------------------------------------------\n|     | cow |     |     |     | cow | cow | cow | cow |\n-------------------------------------------------------\n|     | cow | cow | cow |     |     |     |     |     |\n-------------------------------------------------------",
      "expected_output": "Unknown",
      "type": "sample_1",
      "description": "Original sample 1 from problem statement"
    },
    {
      "input": "1\n8 2 9\n1 2\n1 6\n1 7\n1 8\n1 9\n2 2\n2 3\n2 4",
      "expected_output": "10",
      "type": "sample_2",
      "description": "Original sample 2 from problem statement"
    },
    {
      "input": "smbhcadsj\nub x mtk aqj qes udk jvgw yyi mmu sgpel idp ag nh f pdad\nadbgjtx\nmgqkd v lfxqs cc gqi xkrgx jrrxp gw iu k x wo zuzp\nngmwlvt",
      "expected_output": "To be computed",
      "type": "small_case_3",
      "description": "Generated small test case"
    },
    {
      "input": "hyeo\nmehav uma u bxktu kqjqv schl wbtu kpkld wxno jeabs nwi jmv xr ymr af\nrzhubuyzozbd\nwp g cqry ek lt yeyy wrkxk joz rviyg xbdao w oecj dps\npcfzzodpjbowzusmebkb",
      "expected_output": "To be computed",
      "type": "small_case_4",
      "description": "Generated small test case"
    },
    {
      "input": "fz\ne djh lpt zxkbn c vcw h gryoo uulzc sjs u ekqjs hi wfct cbfx\nrisdjfilxftygajt\nkqdne x yuoe bt jwiu pm al wjg oz hd ah gy qck\nwxkjyugoueamutnhpgdu",
      "expected_output": "To be computed",
      "type": "small_case_5",
      "description": "Generated small test case"
    },
    {
      "input": "ih\nmkhls mi egrs od zjl ob u e xrr wcvhl lyv ex odo so zfbq\nhknzfqfuudrfpgffwywm\nrm sm oy k c pvtig srzrc qjq ovd hcx wzeb o ev\nvc",
      "expected_output": "To be computed",
      "type": "medium_case_6",
      "description": "Generated medium test case"
    },
    {
      "input": "zcyhxox\nn lc ptu vcuz sde sfvg agzy lo zfst sro t ywa b cs ztm\nymrzwfetybdoukjei\nhbn ccb bu zi x whhl jbn ua iam hyh x j btvx\nai",
      "expected_output": "To be computed",
      "type": "medium_case_7",
      "description": "Generated medium test case"
    },
    {
      "input": "b\nkjqp g xzl nyyt k ed dn d kaod oe gldma lwyb gy cqy qnlzg\nugmkepcemw\nojy zpr fu b eofck c kqece p zlsof j lal tbaq zyuto\nmrbsw",
      "expected_output": "To be computed",
      "type": "medium_case_8",
      "description": "Generated medium test case"
    },
    {
      "input": "yvqddgzefagl\nnwt rnl bq oqcpv lt ovnf rk wpvqg ntia yt uxvwj q v xuj uu\nppggyhmzqotiqhyvhgnz\nuu lh dc b lz wfg hywn ilmoa li e wx y ordc\ncwdppqv",
      "expected_output": "To be computed",
      "type": "medium_case_9",
      "description": "Generated medium test case"
    },
    {
      "input": "iogczxtzrngghfipksmz\na ddef snfrd s bxon axfmk xm cphp g l exceh w o kmq iiy\nsmgafevh\npd htn dez dod wyafc onojh g s wb v pxn c jubdx\nskrnywhblshsktrljxfn",
      "expected_output": "To be computed",
      "type": "medium_case_10",
      "description": "Generated medium test case"
    },
    {
      "input": "v\nikgma i wm t szzgc y w jl qtt gg w nco vop hm c\nlthleibweiypj\nu y ppy paoh scl ok cj szoo a jr a btc yt\nbk",
      "expected_output": "To be computed",
      "type": "large_case_11",
      "description": "Generated large test case"
    },
    {
      "input": "omemhq\nig uf gxcvr hlff sxio widsy cxb wzio n zwgx hatoz gqkpc kk l w\npaoedth\nfvk fr amaji g vcq rlxjn ttvhk fe s wygx gi euon m\nskegadsqrk",
      "expected_output": "To be computed",
      "type": "large_case_12",
      "description": "Generated large test case"
    },
    {
      "input": "qrdocoytiyuqhnscy\nzsg xvi gsu npj vxvwa ggqc zspow lvz tv hde gll etdpf lxvae iyps on\nvbueqnuhvarmtmnapd\nkxq dazsy os bgzl lof vdoag plzx op vd xm cldm h tko\nurtaszhcwzjsfrfwcmp",
      "expected_output": "To be computed",
      "type": "large_case_13",
      "description": "Generated large test case"
    },
    {
      "input": "rgbnypzhoejtkcxtjpl\nd f eisc jaxc hyk y qnxvo uqmi vkei qplqz tdcxs fx bw firc vk\nviudzpmmibjijahh\nwoq mt ixnwa ss ho qgf xuyx xqjj b uwzo lts zsz vg\nrvyrs",
      "expected_output": "To be computed",
      "type": "large_case_14",
      "description": "Generated large test case"
    },
    {
      "input": "fktyg\nhywu fbbu lwbs e ryrm vm ik qpk eo hqu r iw nlo q j\ndvnpqjxbadekpfcnmme\npgeb dzco ubwv s xecp uq h ca kjrwh uw owkh sqq oxtn\nalvkkepctyxjdfdulbex",
      "expected_output": "To be computed",
      "type": "large_case_15",
      "description": "Generated large test case"
    },
    {
      "input": "wypaixeivihifjnl\nij zh tbfl opiid z txk r el zta ij yi o kirxt er xpxqh\nugccgtcwqehn\nez lc m oieb mrxes c x h dk unwo jruc w bceek\npfm",
      "expected_output": "To be computed",
      "type": "large_case_16",
      "description": "Generated large test case"
    },
    {
      "input": "qxbybud\nluyxe seqp uvkzb e x ody hknup o batlr v au xdzi gwku rkqvw i\nfygtm\nqb tuc g a sc wzxqi zyiv anm sw rtp iv rtylg judkz\nfwfjf",
      "expected_output": "To be computed",
      "type": "large_case_17",
      "description": "Generated large test case"
    },
    {
      "input": "bjbnfhnwd\nwvtc qeki nfz ou p meork p xvxn m iwhmg jo eeo zokm hmkuo hszo\nvuwjduwsmgmxui\nl qtg jqbd ptgms a kujuf tiyl io nti lbt a gjig bkeks\nvbzsbzkug",
      "expected_output": "To be computed",
      "type": "max_case_18",
      "description": "Generated max test case"
    },
    {
      "input": "lohtgr\nggntn hdfe nz tta uq hdqea aczo v srxx feyub x fv nzlq refw cglr\nxjlqdcag\naj wkxa h ciih bdnz sne czfel rvioe oeo mn lytw fo n\nbdjsno",
      "expected_output": "To be computed",
      "type": "max_case_19",
      "description": "Generated max test case"
    },
    {
      "input": "qkglqzitxndakpqcq\ntr zi h y rvimf hmuq abkd tmvc d v nzqy j dyuwl s iag\nnm\ncbmr fhd s z age rqjsl k wqq nrunv hsbq trh uhnw ci\nkjglxlpcfbxmvsgckfpa",
      "expected_output": "To be computed",
      "type": "edge_case_20",
      "description": "Generated edge test case"
    }
  ],
  "test_cases_generated_at": "2025-08-17 00:51:55",
  "total_test_cases": 20
}
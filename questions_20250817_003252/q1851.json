{
  "problem_code": "problems",
  "title": "Hang or not to hang",
  "tags": [],
  "text": "Little Tom is learning how to program. He has just written some programs but is\r\nafraid to run them, because he does not know if they will ever stop. Please\r\nwrite a program to help him. This task is not as easy as it may seem, because\r\nTom's programs are possibly not deterministic. Given a program written by Tom,\r\nyour program should tell him whether his program can stop and if so, what is\r\nthe shortest possible time before it stops.Tom's computer consists of 32 1-bit registers and the program consists of n\r\ninstructions. The registers are numbered from 0 to 31 and the instructions are\r\nnumbered from 0 to n-1.Below, MEM[a] stands for the contents of the a-th register, 0 <= a, b <\r\n32, 0 <= x < n, 0 <= c <= 1.The instruction set is as follows:Instruction   Semantics\r\nAND a b       MEM[a] := MEM[a] and MEM[b]\r\nOR a b        MEM[a] := MEM[a] or MEM[b]\r\nXOR a b       MEM[a] := MEM[a] xor MEM[b]\r\nNOT a         MEM[a] := not MEM[a]\r\nMOV a b       MEM[a] := MEM[b]\r\nSET a c       MEM[a] := c\r\nRANDOM a      MEM[a] := random value (0 or 1)\r\nJMP x         jump to the instruction with the number x\r\nJZ x a        jump to the instruction with the number x if MEM[a] = 0\r\nSTOP          stop the programThe last instruction of a program is always STOP (although there can be more\r\nthan one STOP instruction). Every program starts with the instruction number 0.\r\nBefore the start, the contents of the registers can be arbitrary values. Each\r\ninstruction (including STOP) takes 1 processor cycle to execute.TaskWrite a program that:reads the program,computes the shortest possible running time of the program,writes the result.InputThe input begins with the integer t, the number of test cases. Then t test\r\ncases follow.For each test case the first line of the input contains an integer n (1 <= n\r\n<= 16) being the number of instructions of the program. Each of the next n\r\nlines contains one instruction of the program in the format given above. You\r\nmay assume that the only white characters in the program are single spaces\r\nbetween successive tokens of each instruction.OutputFor each test case the first and only line of the output should contain the\r\nshortest possible running time of the program, measured in processor cycles. If\r\nthe program cannot stop, output should contain the word HANGS.ExampleInput:2\r\n5\r\nSET 0 1\r\nJZ 4 0\r\nRANDOM 0\r\nJMP 1\r\nSTOP\r\n5\r\nMOV 3 5\r\nNOT 3\r\nAND 3 5\r\nJZ 0 3\r\nSTOPOutput:6\r\nHANGS",
  "sample_input": "Instruction   Semantics\r\nAND a b       MEM[a] := MEM[a] and MEM[b]\r\nOR a b        MEM[a] := MEM[a] or MEM[b]\r\nXOR a b       MEM[a] := MEM[a] xor MEM[b]\r\nNOT a         MEM[a] := not MEM[a]\r\nMOV a b       MEM[a] := MEM[b]\r\nSET a c       MEM[a] := c\r\nRANDOM a      MEM[a] := random value (0 or 1)\r\nJMP x         jump to the instruction with the number x\r\nJZ x a        jump to the instruction with the number x if MEM[a] = 0\r\nSTOP          stop the program",
  "sample_output": "Input:2\r\n5\r\nSET 0 1\r\nJZ 4 0\r\nRANDOM 0\r\nJMP 1\r\nSTOP\r\n5\r\nMOV 3 5\r\nNOT 3\r\nAND 3 5\r\nJZ 0 3\r\nSTOPOutput:6\r\nHANGS",
  "link": "https://www.spoj.com/problems/HANGLET",
  "scraped_at": "2025-08-17 00:33:33"
}
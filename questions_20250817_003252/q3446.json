{
  "problem_code": "problems",
  "title": "One Instruction Computer Simulator",
  "tags": [],
  "text": "A computer with only one instruction!\r\nThe instruction is:SUBLEQ A B CThis means: subtract the value in M(A) from M(B) and store it in M(B); if the result is non-positive jump to the instruction in position C. M(i) represents the value stored in memory position i. The computer has a memory of 9999 integer positions, numbered from 0 to 9998. C > 9996, indicates the end of the program.  Also, if A is negative, then the value of A is directly subtracted from M(B).Since there is only one instruction, it is unnecessary to represent its opcode explicitely in memory. Therefore, an instruction is stored in main memory using three consecutive memory positions, which correspond to the three instruction parameters.\r\n\r\nThe memory is organized as follows:Position Content\r\n0-8      input/output variables (M0 to M8)\r\n9-9998   program memory (instructions+data)The following pseudo-code shows the one instruction computer simulator:simulate(integer M[0..9998])\r\n   integer pc,A,B,C\r\n   pc = 9\r\n   while (pc<9997)\r\n      A = M[pc]; B = M[pc+1]; C = M[pc+2]\r\n      if(A>=0) \r\n         M[B] = M[B] - M[A]\r\n      else\r\n         M[B] = M[B] - A\r\n      if (M[B]>0)\r\n         pc = pc + 3\r\n      else\r\n         pc = C\r\n      end_if\r\n   end_while\r\nend_simulateEach iteration of the above while instruction is called a simulation cycle.  You are to translate postfix instructions into this machine language.  There are\r\nat most 100 arithmetic terms and 99 operators. Numerical constants are non-negative and less than or equal to 10000.InputThe input has several test cases, one test case per line. Each test case corresponds to an arithmetic expression in postfix notation. An expression may contain constants (integer values), input variables (M0 to M8) and arithmetic operators (+, -, *, /).OutputFor each test case, a program must be printed using the following format: First line indicates m, the number of instructions of the program; and the following m lines contain the program, one instruction per line, where each instruction is represented by 3 integer values separated by one blank space.  Your outputted program must finish\r\nwithin 10^7 simulation cycles for each test case.ExampleInput:100\r\nM1 M2 -Output:3\r\n0 0 12\r\n-100 0 0\r\n19 19 10000\r\n\r\n4\r\n0 0 12\r\n1 2 15\r\n2 0 18\r\n21 21 10000",
  "sample_input": "SUBLEQ A B C",
  "sample_output": "Position Content\r\n0-8      input/output variables (M0 to M8)\r\n9-9998   program memory (instructions+data)",
  "link": "https://www.spoj.com/problems/ONEINSTR",
  "scraped_at": "2025-08-17 00:34:22"
}
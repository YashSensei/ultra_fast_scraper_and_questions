{
  "problem_code": "problems",
  "title": "Permalex",
  "tags": [],
  "text": "Given a string of characters, we can permute the individual characters to make new strings. If we can impose an ordering on the characters (say alphabetic   sequence), then the strings themselves can be ordered and any given permutation can be given a unique number designating its position in that ordering. For   example the string 'acab' gives rise to the following 12 distinct permutations:aabc1acab5bcaa9aacb2acba6caab10abac3baac7caba11abca4baca8cbaa12Thus the string 'acab' can be characterised in this sequence as 5.Write a program that will read in a string and determine its position in the ordered sequence of permutations of its constituent characters. Note that numbers of permutations can get very large; however we guarantee that no string will be given whose position is more than 231= 2,147,483,647InputInput will consist of a series of lines, each line containing one string. Each string will consist of up to 30 lower case letters, not necessarily distinct. Test cases a separated by empty lines. The file will be terminated by a line consisting of a single #.OutputOutput will consist of a series of lines, one for each line of the input. Each line will consist of the position of the string in its sequence, right justified in a field of width 10.ExampleInput:bacaa\r\nabc\r\ncba\r\n\r\nbacaa\r\nabc\r\ncba\r\n#Output:15\r\n         1\r\n         6\r\n\r\n        15\r\n         1\r\n         6",
  "sample_input": "Input:bacaa\r\nabc\r\ncba\r\n\r\nbacaa\r\nabc\r\ncba\r\n#Output:15\r\n         1\r\n         6\r\n\r\n        15\r\n         1\r\n         6",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/PRMLX",
  "scraped_at": "2025-08-17 00:33:38"
}
{
  "problem_code": "problems",
  "title": "Vending Machine",
  "tags": [],
  "text": "Byteasar studies computer science at the University of Bytetown. There is a snack vending machine at his faculty that sellsntypes of snacks, numbered1throughn. Snacks of different types may have different price, since they differ in size and flavor.Recently Byteasar discovered that the vending machine is broken. If one buys a snack of typei, the vending machine additionally dispenses one snack of each of the types1,2 ... i-1, provided that snacks of these types are available (if there are no snacks of some of the types1,2 ... i-1, simply no snack of this type is dispensed). Buying snack of typeiis possible only if at least one snack of this type is available.Byteasar decided to take advantage of the fault he discovered. He would like to find out what is the maximum total value (that is, the sum of prices) of snacks that he can obtain in the vending machine using a given amount of money. He does not have to use all the money.InputFirst line contains a single integertrepresenting the number of test cases to be solved. The description ofttest cases follows.The first line of each test case contains two integersnandk(1 ≤n≤ 40, 1 ≤k≤ 64000): the number of types of snacks and the amount of money that Byteasar has at his disposal. The second line holdsnintegersc1... cn(1 ≤ci≤ 40), the prices of snacks of respective types. The third line holdsnintegersl1... ln(1 ≤li≤ 40), the quantities of snacks of respective types that are available in the vending machine.OutputThe output should contain one integer per test case: the total price of snacks that Byteasar can obtain in the vending machine using at mostkunits of money.ExampleInput:1\r\n6 8\r\n7 2 3 5 7 2\r\n1 3 0 3 2 1Output:30Explanation of the example: Byteasar buys a snack of type 6. The vending machine dispenses one snack of each of the types 1, 2, 4, 5 and 6. Next, Byteasar buys a snack of type 4. In addition to this snack, the vending machine dispenses one snack of type 2.Task author: Jakub Pachocki",
  "sample_input": "Input:1\r\n6 8\r\n7 2 3 5 7 2\r\n1 3 0 3 2 1Output:30",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/AUT",
  "scraped_at": "2025-08-17 00:33:59"
}
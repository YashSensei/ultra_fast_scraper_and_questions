{
  "problem_code": "problems",
  "title": "Goldbach graphs",
  "tags": [],
  "text": "Christian Goldbach sent a letter to Leonhard Euler in 1742 in which he made the following conjecture:\"Every even number greater than 4 can be written as the sum of two odd prime numbers.\"To find the solutions of Goldbach's conjecture for a given even numbern(n> 0), let us define the directed graph GG(n) (the Goldbach Graph ofn) as follows:Nodes are prime numberspsuch that 1 <p<n.For each nodepthere are zero or more outgoing edges, determined by the following rules:Ifp+q=nandq= 1, then no outgoing edges are related top.Ifp+q=nandq=p1p2p3....pkis the prime factorization ofq(assumingq> 1), then for eachi= 1..kan edgep→piis added to graph GG(n). Notice that eachpimust be a prime number. Besides, ifk= 1 thenqis prime and we have a solution to Goldbach's conjecture.For example:GG(2) is empty (it has zero nodes)GG(4) has two nodes and one edge.nodes = {2, 3}edges = {2→2}GG(6) has three nodes and three edgesnodes = {2, 3, 5}edges = {2→2, 2→2, 3→3}Notice that edge 2→2 appears twice in GG(6) because whenp= 2 thenq= 4 = 2×2Solutions to Goldbach's conjecture are cycles in graph GG(n) of the following types:Single-node cycles (Type I): a nodepwith only one outgoing edgep→p.Double-node cycles (Type II): two nodesp1andp2, such that each one has a unique outgoing edge (p1→p2,p2→p1).Your task is to inspect the directed graph GG(n) starting from a given nodexand searching every node reachable fromxfor a solution to Goldbach's conjecture.  The procedure is successful if a node belonging to a Type I or Type II cycle is found. In such a case the minimum distance fromxto the first node of the cycle found must be reported. Otherwise it should be stated that a solution can not be found.Your algorithm should take into account that GG(n) can contain other types of cycles besides the ones described here. Otherwise, it can run forever.InputThe input contains several lines each one with a different test case. Each line includes a pair of numbers representing the valuesnandx. You should assume thatnis even and also that 2 ≤n≤ 1000. Although 0 <x<nis true, do not assume thatxis a valid node of GG(n). The last line of the input contains the number 0 (it is not a test case).OutputFor each test case output a single line with one of the following:Solution found at distanceD.Solution not reachable.xis not a node!WhereDis the minimum distance fromxto the solution found, as described before.ExampleInput:2 1\r\n4 2\r\n6 2\r\n6 3\r\n12 3\r\n12 11\r\n14 7\r\n20 5\r\n38 11\r\n50 17\r\n540 340\r\n540 31\r\n540 33\r\n0Output:1 is not a node!\r\nSolution found at distance 0.\r\nSolution not reachable.\r\nSolution found at distance 0.\r\nSolution not reachable.\r\nSolution not reachable.\r\nSolution found at distance 0.\r\nSolution found at distance 1.\r\nSolution found at distance 2.\r\nSolution found at distance 1.\r\n340 is not a node!\r\nSolution found at distance 0.\r\n33 is not a node!",
  "sample_input": "Input:2 1\r\n4 2\r\n6 2\r\n6 3\r\n12 3\r\n12 11\r\n14 7\r\n20 5\r\n38 11\r\n50 17\r\n540 340\r\n540 31\r\n540 33\r\n0Output:1 is not a node!\r\nSolution found at distance 0.\r\nSolution not reachable.\r\nSolution found at distance 0.\r\nSolution not reachable.\r\nSolution not reachable.\r\nSolution found at distance 0.\r\nSolution found at distance 1.\r\nSolution found at distance 2.\r\nSolution found at distance 1.\r\n340 is not a node!\r\nSolution found at distance 0.\r\n33 is not a node!",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/GOLDG",
  "scraped_at": "2025-08-17 00:33:19"
}
{
  "problem_code": "problems",
  "title": "Rectangular Polygon",
  "tags": [],
  "text": "In this problem, we will help the Faculty of Civil Engineering. They need a software to analyze\r\nground plans of buildings. Specifically, your task is to detect outlines of a building when all of\r\nits corners are given.You may assume that each building is a rectangular polygon with each of its sides being parallel\r\neither with X or Y axis. Therefore, each of its vertex angles is exactly either 90 or 270 degrees.InputThe input contains several buildings. The description of each building starts with a single\r\npositive integer N, the number of corners (polygon vertices), 1 ≤ N ≤ 1000. Then there are N\r\npairs of integer numbers Xi,Yigiving coordinates of individual corners, |Xi|, |Yi| ≤ 10 000.You may assume that all corners are listed and no two of them have the same coordinates. The\r\npolygon does always exist, it is closed, its sides do not intersect or touch (except neighboring\r\nsides, of course), and it contains no \"holes\" inside. In other words, the outline is formed by one\r\nclosed line. The order of corners in the input file may be arbitrary.There is an empty line after each building, then the next one is described. After the last building,\r\nthere is a single zero that signals the end of input.OutputFor each building, output one line containing N characters without any whitespace between\r\nthem. The characters should be uppercase letters that specify directions of individual walls\r\n(sides) when the building outline is followed. \"N\" stands for North (the positive direction of the\r\nYaxis), \"E\" for East (the positive direction of the X axis), \"W\" for West, and \"S\" for South.\r\nThe \"walk\" should start in the vertex that has been given first in the input and always proceed\r\nin the clockwise direction.ExampleInput4\r\n0 0\r\n2 2\r\n0 2\r\n2 0\r\n\r\n6\r\n1 1\r\n2 2\r\n0 1\r\n1 0\r\n0 2\r\n2 0\r\n\r\n0OutputNESW\r\nWNESWNThe second sample input corresponds to the picture.",
  "sample_input": "Input4\r\n0 0\r\n2 2\r\n0 2\r\n2 0\r\n\r\n6\r\n1 1\r\n2 2\r\n0 1\r\n1 0\r\n0 2\r\n2 0\r\n\r\n0OutputNESW\r\nWNESWN",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/CERC07P",
  "scraped_at": "2025-08-17 00:34:22"
}
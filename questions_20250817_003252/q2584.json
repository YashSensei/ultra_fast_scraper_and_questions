{
  "problem_code": "problems",
  "title": "Primes of Lambda",
  "tags": [],
  "text": "Lambdachecks primality in a weird way. He checks the following two conditions.All the digits of the number in the decimal system are primes or one, namely 1, 2, 3, 5 or 7.It isn't a multiple of 2, 3, 5, 7, 11 or 47 (Why 47? I don't know).In order to estimate the accuracy of his approach, he asks you to calculate the number of decimal integers of a specific length that satisfy the conditions.InputThe first and only line contains  an integern, denoting the length of integers.OutputThe only line contains the answermodulo 9973.ExampleInput:1Output:1Input:2Output:8Input:4Output:182Input:1000000000Output:4589Constraints1 <=n<= 109In 50% of testcases,n<= 100Note: Data corrected and solutions rejudged. Sorry for inconvenience.Warning: A naive solution won't terminate in 30s. And be careful with certain languages.",
  "sample_input": "Input:1Output:1",
  "sample_output": "Input:2Output:8",
  "link": "https://www.spoj.com/problems/LPRIME",
  "scraped_at": "2025-08-17 00:33:59"
}
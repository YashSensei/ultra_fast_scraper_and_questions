{
  "problem_code": "problems",
  "title": "Stamps",
  "tags": [],
  "text": "Everybody hates Raymond. He’s the largest stamp collector on planet earth and because of that\r\nhe always makes fun of all the others at the stamp collector parties. Fortunately everybody loves\r\nLucy, and she has a plan. She secretly asks her friends whether they could lend her some stamps,\r\nso that she can embarrass Raymond by showing an even larger collection than his.\r\nRaymond is so sure about his superiority that he always tells how many stamps he’ll show. And\r\nsince Lucy knows how many she owns, she knows how many more she needs. She also knows how\r\nmany friends would lend her some stamps and how many each would lend. But she’s like to borrow\r\nfrom as few friends as possible and if she needs too many then she’d rather not do it at all. Can\r\nyou tell her the minimum number of friends she needs to borrow from?InputThe first line contains the number of scenarios. Each scenario describes one collectors party and\r\nits first line tells you how many stamps (from 1 to 1000000) Lucy needs to borrow and how many\r\nfriends (from 1 to 1000) offer her some stamps. In a second line you’ll get the number of stamps\r\n(from 1 to 10000) each of her friends is offering.OutputThe output for every scenario begins with a line containing “Scenario #i:”, where i is the number\r\nof the scenario starting at 1. Then print a single line with the minimum number of friends Lucy\r\nneeds to borrow stamps from. If it’s impossible even if she borrows everything from everybody,\r\nwrite impossible. Terminate the output for the scenario with a blank line.ExampleInput:3\r\n100 6\r\n13 17 42 9 23 57\r\n99 6\r\n13 17 42 9 23 57\r\n1000 3\r\n314 159 265Output:Scenario #1:\r\n3\r\n\r\nScenario #2:\r\n2\r\n\r\nScenario #3:\r\nimpossible",
  "sample_input": "Input:3\r\n100 6\r\n13 17 42 9 23 57\r\n99 6\r\n13 17 42 9 23 57\r\n1000 3\r\n314 159 265Output:Scenario #1:\r\n3\r\n\r\nScenario #2:\r\n2\r\n\r\nScenario #3:\r\nimpossible",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/STAMPS",
  "scraped_at": "2025-08-17 00:34:16"
}
{
  "problem_code": "problems",
  "title": "To the moon",
  "tags": [],
  "text": "BackgroundTo The Moonis aindependent gamereleased in November 2011, it is a role-playing adventure game powered byRPG Maker.The premise ofTo The Moonis based around a technology that allows us to permanently reconstruct the memory on dying man. In this problem, we'll give you a chance, to implement the logic behind the scene.DescriptionYou‘ve been given N integers A[1], A[2],..., A[N]. On these integers, you need to implement the following operations:C l r d: Adding a constant d for every {Ai | l ≤ i ≤ r}, and increase the timestamp by 1, this is the only operation that will cause the timestamp increase.Q l r: Querying the current sum of {Ai | l ≤ i ≤ r}.H l r t: Querying a history sum of {Ai | l ≤ i ≤ r} in time t.B t: Back to time t. And once you decide return to a past, you can never be access to a forward edition anymore... N, M ≤ 105, |A[i]| ≤ 109, 1 ≤ l ≤ r ≤ N, |d| ≤ 104.. the system start from time 0, and the first modification is in time 1, t ≥ 0, and won't introduce you to a future state.Inputn mA1 A2 ... An... (here following the m operations.)Output... (for each query, simply print the result.)ExampleInput 1:10 5\r\n1 2 3 4 5 6 7 8 9 10\r\nQ 4 4\r\nQ 1 10\r\nQ 2 4\r\nC 3 6 3\r\nQ 2 4Output 1:4\r\n55\r\n9\r\n15Input 2:2 4\r\n0 0\r\nC 1 1 1\r\nC 2 2 -1\r\nQ 1 2\r\nH 1 2 1Output 2:0\r\n1",
  "sample_input": "n mA1 A2 ... An... (here following the m operations.)",
  "sample_output": "... (for each query, simply print the result.)",
  "link": "https://www.spoj.com/problems/TTM",
  "scraped_at": "2025-08-17 00:34:01"
}
{
  "problem_code": "problems",
  "title": "Tree Game",
  "tags": [],
  "text": "A complete binary tree of depth h is given. You can asign the\r\nvalue 0 or 1 to each leaf. Its internal nodes compute their values\r\nbased on the values\r\nof their children, which is 0 if both children have value 1, and 1\r\notherwise.  You play a game with a computer.  The computer can ask you for\r\na value of any leaf, and you can tell him either 0 or 1.  The computer\r\nwants to\r\nknow the root value, and he will keep asking until he is absolutely sure\r\nwhat the root value is. Your goal is to make him ask as many questions as\r\npossible.\r\n\r\nIt is known that you can make a computer ask for all leaves.  For a given\r\nsequence of leaves determine a sequence of 0's and 1's as answers to\r\nthose leaves such that at no point before asking the last leaf value can\r\nthe computer be sure of the root value.  You must answer each question optimally (i.e. you should not make use of the knowledge of what the computer's (i+1)st query will be when you answer the ith query).InputIn the first line of input the number h is given (1 ≤ h ≤ 15). In\r\nthe second line a space-separated list of 2hnumbers are given. They are\r\na permutation of the numbers 1, 2, ..., 2h, and they represent the\r\norder of asked leaves (leaves of a tree are indexed from left to right).OutputOn a single line write a space-separated sequence of 0's and 1's\r\ncorresponding to the values of leaves in the given order of being asked. If\r\nthere are multiple solutions, write any of them.  Do not output a response for the last query.ExampleInput:3\r\n5 2 7 3 1 6 8 4Output:1 1 1 1 0 0 1",
  "sample_input": "Input:3\r\n5 2 7 3 1 6 8 4Output:1 1 1 1 0 0 1",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/TREEGAME",
  "scraped_at": "2025-08-17 00:33:13"
}
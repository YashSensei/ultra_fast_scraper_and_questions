{
  "problem_code": "problems",
  "title": "Zig",
  "tags": [],
  "text": "In the following we will deal with nonempty words consists only of lower case letters 'a', 'b' ... 'j' and we will use the natural 'a' < 'b' < ... < 'j' ordering. Your task is to write a program that generates almost all zig-zag words (zig-zag permutations) from a given collection of letters.We say that a word W = W(1)W(2)...W(n) is zig-zag iff n = 1 or W(i) > W(i+1) and W(j) < W(j+1) for all odd 0 < i < n and for all even 0 < j < n or W(i) > W(i+1) and W(j) < W(j+1) for all even 0 < i < n and for all odd 0 < j < n.For example: \"aabcc\" is not zig-zag, \"acacb\" is zig-zag, \"cac\" is zig-zag, \"abababc\" is not zig-zag.If you imagine all possible zig-zag permutations of a word in increasing lexicographic order, you can assign a serial number (rank) to each one. For example: the word \"aabcc\" generates the sequence:\"acacb\",\"acbca\",\"bacac\",\"bcaca\",\"cabac\",\"cacab\".InputThe input file consists several test cases. Each case contains a word (W) not longer than 64 letters and one positive number (D). The letters of each word are in increasing order. Input terminated by EOF.OutputFor each case in the input file, the output file must contain all of the zig-zag permutations of W whose zig-zag serial is divisible by D, in increasing lexicographic order - one word per line. In the next line you have to print the total number of zig-zag permutations of W. There is no case that produces more than 365 lines of output. Print an empty line after each case.ExampleInput:j 1\r\nabc 2\r\naaabc 1\r\naaabb 2\r\naaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbcccdd 123456Output:j\r\n1\r\n\r\nbac\r\ncab\r\n4\r\n\r\nabaca\r\nacaba\r\n2\r\n\r\n1\r\n\r\nbabacbcabacabadabababababababababadab\r\n213216",
  "sample_input": "Input:j 1\r\nabc 2\r\naaabc 1\r\naaabb 2\r\naaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbcccdd 123456Output:j\r\n1\r\n\r\nbac\r\ncab\r\n4\r\n\r\nabaca\r\nacaba\r\n2\r\n\r\n1\r\n\r\nbabacbcabacabadabababababababababadab\r\n213216",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/ZZPERM",
  "scraped_at": "2025-08-17 00:34:09"
}
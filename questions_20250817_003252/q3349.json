{
  "problem_code": "problems",
  "title": "The Bridges of San Mochti",
  "tags": [],
  "text": "You work at a military training facility in the jungles of San\r\nMotchi.  One of the training exercises is to cross a series of rope\r\nbridges set high in the trees.  Every bridge has a maximum capacity,\r\nwhich is the number of people that the bridge can support without\r\nbreaking.  The goal is to cross the bridges as quickly as possible,\r\nsubject to the following tactical requirements:One unit at a time!If two or more people can cross a bridge at the same time (because\r\nthey do not exceed the capacity), they do so as a unit; they walk as\r\nclose together as possible, and they all take a step at the same time.\r\nIt is never acceptable to have two different units on the same bridge\r\nat the same time, even if they don't exceed the capacity.  Having\r\nmultiple units on a bridge is not tactically sound, and multiple units\r\ncan cause oscillations in the rope that slow everyone down.  This rule\r\napplies even if a unit contains only a single person.Keep moving!When a bridge is free, as many people as possible begin to cross\r\nit as a unit.  Note that this strategy doesn't always lead to an\r\noptimal overall crossing time (it may be faster for a group to wait\r\nfor people behind them to catch up so that more people can cross at\r\nonce).  But it is not tactically sound for a group to wait, because\r\nthe people they're waiting for might not make it, and then they've not\r\nonly wasted time but endangered themselves as well.Periodically the bridges are reconfigured to give the trainees a\r\ndifferent challenge.  Given a bridge configuration, your job is to\r\ncalculate the minimum amount of time it would take a group of people\r\nto cross all the bridges subject to these requirements.For example, suppose you have nine people who must cross two\r\nbridges: the first has capacity 3 and takes 10 seconds to cross; the\r\nsecond has capacity 4 and takes 60 seconds to cross.  The initial\r\nstate can be represented as (9 0 0), meaning that 9 people\r\nare waiting to cross the first bridge, no one is waiting to cross the\r\nsecond bridge, and no one has crossed the last bridge.  At 10 seconds\r\nthe state is (6 3 0).  At 20 seconds the state is\r\n(3 3 /3:50/ 0), where /3:50/ means that a unit of three\r\npeople is crossing the second bridge and has 50 seconds left.  At 30\r\nseconds the state is (0 6 /3:40/ 0); at 70 seconds it's\r\n(0 6 3); at 130 seconds it's (0 2 7); and at 190\r\nseconds it's (0 0 9).  Thus the total minimum time is 190\r\nseconds.InputThe input consists of one or more bridge\r\nconfigurations, followed by a line containing two zeros that signals\r\nthe end of the input.  Each bridge configuration begins with a line\r\ncontaining a negative integer –B and a positive integer P, where\r\nB is the number of bridges and P is the total number of people that\r\nmust cross the bridges.  Both B and P will be at most 20.  (The reason\r\nfor putting –B in the input file is to make the first line of a\r\nconfiguration stand out from the remaining lines.)  Following are B\r\nlines, one for each bridge, listed in order from the first bridge that\r\nmust be crossed to the last.  Each bridge is defined by two positive\r\nintegers C and T, where C is the capacity of the bridge (the maximum\r\nnumber of people the bridge can hold), and T is the time it takes to\r\ncross the bridge (in seconds).  C will be at most 5, and T will be at\r\nmost 100.  Only one unit, of size at most C, can cross a bridge at a\r\ntime; the time required is always T, regardless of the size of the\r\nunit (since they all move as one).  The end of one bridge is always\r\nclose to the beginning of the next, so the travel time between bridges\r\nis zero.OutputFor each bridge configuration, output one line\r\ncontaining the minimum amount of time it will take (in seconds) for\r\nall of the people to cross all of the bridges while meeting both\r\ntactical requirements.ExampleInput:-1 2\r\n5 17\r\n-1 8\r\n3 25\r\n-2 9\r\n3 10\r\n4 60\r\n-3 10\r\n2 10\r\n3 30\r\n2 15\r\n-4 8\r\n1 8\r\n4 30\r\n2 10\r\n1 12\r\n0 0Output:17\r\n75\r\n190\r\n145\r\n162",
  "sample_input": "Input:-1 2\r\n5 17\r\n-1 8\r\n3 25\r\n-2 9\r\n3 10\r\n4 60\r\n-3 10\r\n2 10\r\n3 30\r\n2 15\r\n-4 8\r\n1 8\r\n4 30\r\n2 10\r\n1 12\r\n0 0Output:17\r\n75\r\n190\r\n145\r\n162",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/BRIDGES2",
  "scraped_at": "2025-08-17 00:34:32"
}
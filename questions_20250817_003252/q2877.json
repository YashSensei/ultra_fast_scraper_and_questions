{
  "problem_code": "problems",
  "title": "DOMINO",
  "tags": [],
  "text": "Mirko received an N × N table for his birthday, where a non-negative integer is written in each field\r\nof the table. Unfortunately, the written numbers are too large for Mirko’s taste, so he will place K\r\ndominoes on top of the table that will cover the fields that are too large.More precisely, Mirko places the dominoes according to the following rules:each domino covers two fields of the table that are adjacent in a row or in a column,the dominoes do not overlap (but can touch),the sum of all visible (uncovered) fields needs to be as small as possible.It is your task to determine the required minimal sum of visible fields. The test data will be such that\r\nit will always be possible to place K dominoes without overlapping.InputThe first line of input contains the integers N (1 ≤ N ≤ 2000), the dimensions of the table, and K\r\n(1 ≤ K ≤ 8), the number of dominoes. Each of the following N lines contains N integers from\r\nthe interval [0, 1000]. These N × N numbers describe Mirko’s table.OutputThe first and only line of output must contain the minimal sum of visible fields after covering the\r\ntable with dominoes.ExampleInput:3 1\r\n2 7 6\r\n9 5 1\r\n4 3 8Output:31Input:4 2\r\n1 2 4 0\r\n4 0 5 4\r\n0 3 5 1\r\n1 0 4 1Output:17Clarification of the first example:We place the domino so it covers fields with numbers 9 and 5.Clarification of the second example:We place the dominoes so they cover fields [4, 5] and [5, 4] in the third column.",
  "sample_input": "Input:3 1\r\n2 7 6\r\n9 5 1\r\n4 3 8Output:31",
  "sample_output": "Input:4 2\r\n1 2 4 0\r\n4 0 5 4\r\n0 3 5 1\r\n1 0 4 1Output:17",
  "link": "https://www.spoj.com/problems/DOMINO8",
  "scraped_at": "2025-08-17 00:34:15"
}
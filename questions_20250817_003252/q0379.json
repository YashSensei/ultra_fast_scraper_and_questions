{
  "problem_code": "problems",
  "title": "Containers",
  "tags": [],
  "text": "We are givenncontainers, where 1 ≤n≤ 4. At\r\n        the beginning all of them are full of water. The liter capacity of thei-th\r\n        container is a natural numberoisatisfying\r\n        inequalities 1 ≤oi≤ 49.Three kinds of moves can be made:Pouring the whole content of one container into another. This move\r\n            can be made unless there is too little room in the second container.Filling up one container with part of the water from another one.Pouring away the whole content of one container into a drain.TaskWrite a program that for each test case:Reads the number of containersn, the capacity of each container and the requested final amount of water in each container.Verifies, whether there exist a series of moves which leads to the        requested final situation, and if there is one, the program computes the minimal number of moves leading to the requested situation,Writes the result. The result should be the minimal number of moves leading to the requested final situation, or one word \"NO\" if there is no such a sequence of moves.InputOne integer in the first line, stating the number of test cases, followed by a blank line. There will be not more than 20 tests.For each test case, at the first line, one positive integernis written,n≤ 4, this is the number of containers. There\r\n        arenpositive integers written in the second line. These are the\r\n        capacities of the containers (thei-th integeroidenotes the capacity if thei-th  container,1 ≤oi≤ 49). In the third line there are writtennnumbers. These are the requested final volumes of water in the\r\n        containers (thei-th integerwidenotes\r\n        the requested final volume of water in thei-th container, 0\r\n       ≤wi≤oi).\r\n        All integers in the second and the third line are separated by single\r\n        spaces.The test cases will be separated by a single blank line.OutputFor each test case : write one integer - the minimal number of moves which lead to the requested final situation or write only one word \"NO\" if it is not possible to reach the requested final situation making only allowed moves.ExampleInput:2\r\n\r\n3\r\n3 5 5\r\n0 0 4\r\n\r\n2\r\n20 25\r\n10 16Output:6\r\nNO",
  "sample_input": "Input:2\r\n\r\n3\r\n3 5 5\r\n0 0 4\r\n\r\n2\r\n20 25\r\n10 16Output:6\r\nNO",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/CTAIN",
  "scraped_at": "2025-08-17 00:33:22"
}
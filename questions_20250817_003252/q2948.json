{
  "problem_code": "problems",
  "title": "Grid",
  "tags": [],
  "text": "You are on an n × m grid where each square on the grid has a digit on it. From a given square that has digit k on it, a Move consists of jumping exactly k squares in one of the four cardinal directions. A move cannot go beyond the edges of the grid; it does not wrap. What is the minimum number of moves required to get from the top-left corner to the bottom-right corner?InputEach input will consist of a single test case. Note that your program may be run multiple times on different inputs. The first line of input contains two space-separated integers n and m (1 ≤ n, m ≤ 500), indicating the size of the grid. It is guaranteed that at least one of n and m is greater than 1. The next n lines will each consist of m digits, with no spaces, indicating the n × m grid. Each digit is between 0 and 9, inclusive. The top-left corner of the grid will be the square corresponding to the first character in the first line of the test case. The bottom-right corner of the grid will be the square corresponding to the last character in the last line of the test case.OutputOutput a single integer on a line by itself representing the minimum number of moves required to get from the top-left corner of the grid to the bottom-right. If it isn’t possible, output -1.ExampleInput:5 421201203311311201110Output:6",
  "sample_input": "Input:5 421201203311311201110Output:6",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/SERGRID",
  "scraped_at": "2025-08-17 00:34:18"
}
{
  "problem_code": "problems",
  "title": "Finding Seats",
  "tags": [],
  "text": "A group of K friends is going to see a movie. However, they are too late to get good tickets,\r\nso they are looking for a good way to sit all nearby. Since they are all science students, they\r\ndecided to come up with an optimization problem instead of going on with informal arguments\r\nto decide which tickets to buy.The movie theater has R rows of C seats each, and they can see a map with the currently\r\navailable seats marked. They decided that seating close to each other is all that matters, even\r\nif that means seating in the front row where the screen is so big it’s impossible to see it all at\r\nonce. In order to have a formal criteria, they thought they would buy seats in order to minimize\r\ntheextensionof their group.Theextensionis defined as the area of the smallest rectangle with sides parallel to the seats\r\nthat contains all bought seats. The area of a rectangle is the number of seats contained in it.\r\nThey’ve taken out a laptop and pointed at you to help them find those desired seats.InputEach test case will consist on several lines. The first line will contain three positive integers R,\r\nC and K as explained above (1 <= R,C <= 300, 1 <= K <= R × C). The next R lines will contain\r\nexactly C characters each. The j-th character of the i-th line will be ‘X’ if the j-th seat on\r\nthe i-th row is taken or ‘.’ if it is available. There will always be at least K available seats in\r\ntotal.Input is terminated with R = C = K = 0.OutputFor each test case, output a single line containing the minimum extension the group can have.ExampleInput:3 5 5\r\n...XX\r\n.X.XX\r\nXX...\r\n5 6 6\r\n..X.X.\r\n.XXX..\r\n.XX.X.\r\n.XXX.X\r\n.XX.XX\r\n0 0 0Output:6\r\n9",
  "sample_input": "Input:3 5 5\r\n...XX\r\n.X.XX\r\nXX...\r\n5 6 6\r\n..X.X.\r\n.XXX..\r\n.XX.X.\r\n.XXX.X\r\n.XX.XX\r\n0 0 0Output:6\r\n9",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/FSEATS",
  "scraped_at": "2025-08-17 00:33:10"
}
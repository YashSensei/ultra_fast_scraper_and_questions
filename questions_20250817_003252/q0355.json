{
  "problem_code": "problems",
  "title": "Store",
  "tags": [],
  "text": "The floor of a store is a rectangle divided inton × msquare\r\nfields. Two fields are adjacent, if they have a common side. A parcel\r\nlays on one of the fields.\r\nEach of the remaining fields is either\r\nempty, or occupied by a case, which is too heavy to be moved by a\r\nstore-keeper. The store-keeper has to shift the parcel from the\r\nstarting fieldPto the\r\nfinal fieldK. He can move on the empty\r\nfields, going from the field on which he stands to a chosen adjacent\r\nfield. When the store-keeper stays on a field adjacent to the one with\r\nthe parcel he may\r\npush the parcel so that if moves to the next field (i.e. the field on\r\nthe other side of the\r\nparcel), assuming condition that there are no cases on this field.TaskWrite a program, which:reads from the standard input a store scheme, a starting position of the store-keeper and a final position of the parcel,computes minimal number of the parcel shifts through borders of fields,\r\n  which are necessary to put the parcel in\r\n  the final position or decides that it is\r\n  impossible to put the parcel there,writes the result into the standard output.InputThe number of test cases t is in the first line of input, then t test cases follow separated by an empty line.\r\nIn the first line of each test case two positive integers separated by a single space,n, m ≤ 100,are written. These are dimensions of the store. In each\r\nof the followingnlines there appears onem-letter word made of letters S, M, P, K, w. A letter oni-th position inj-th word denotes a type of the field with coordinates\r\n(i, j) and its meaning is following:S - case,M - starting position of the store-keeper,P - starting position of the parcel,K - final position of the parcel,w - empty field.Each letter M, P and K appears in the test case exactly once.OutputYour program should write to the standard output for each test case:exactly one word NO if the parcel cannot be put on the target\r\n  field,exactly one integer, equal to the minimal number of the parcel\r\nshifts through borders of the fields, necessary to put a parcel on a\r\nfinal position, if it is possible to put the parcel there.ExampleInput:1\r\n10 12\r\nSSSSSSSSSSSS\r\nSwwwwwwwSSSS\r\nSwSSSSwwSSSS\r\nSwSSSSwwSKSS\r\nSwSSSSwwSwSS\r\nSwwwwwPwwwww\r\nSSSSSSSwSwSw\r\nSSSSSSMwSwww\r\nSSSSSSSSSSSS\r\nSSSSSSSSSSSSOutput:7",
  "sample_input": "Input:1\r\n10 12\r\nSSSSSSSSSSSS\r\nSwwwwwwwSSSS\r\nSwSSSSwwSSSS\r\nSwSSSSwwSKSS\r\nSwSSSSwwSwSS\r\nSwwwwwPwwwww\r\nSSSSSSSwSwSw\r\nSSSSSSMwSwww\r\nSSSSSSSSSSSS\r\nSSSSSSSSSSSSOutput:7",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/STORE",
  "scraped_at": "2025-08-17 00:33:15"
}
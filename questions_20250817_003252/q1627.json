{
  "problem_code": "problems",
  "title": "Junk",
  "tags": [],
  "text": "Recognizing junk mails is a tough task. The method used here consists of two\r\nsteps:Extract the common characteristics from the incoming email.Use a filter matching the set of common characteristics extracted to\r\ndetermine whether the email is a spam.We want to extract the set of common characteristics from the N sample junk\r\nemails available at the moment, and thus having a handy data-analyzing tool would be\r\nhelpful. The tool should support the following kinds of operations:\"M X Y\", meaning that we think that the characteristics of spam X and Y are\r\nthe same. Note that the relationship defined here istransitive, so\r\nrelationships (other than the one between X and Y) need to be created if they\r\nare not present at the moment.\"S X\", meaning that we think spam X had been misidentified. Your tool should\r\nremove all relationships that spam X has when this command is received; after\r\nthat, spam X will become an isolated node in the relationship graph.Initially no relationships exist between any pair of the junk emails, so the number\r\nof distinct characteristics at that time is N.Please help us keep track of any necessary information to solve our problem.InputThere are multiple test cases in the input file.Each test case starts with two integers, N and M (1 ≤ N ≤ 105, 1 ≤ M ≤ 106), the\r\nnumber of email samples and the number of operations. M lines follow, each line is\r\none of the two formats described above.Two successive test cases are separated by a blank line. A case with N = 0 and M =\r\n0 indicates the end of the input file, and should not be processed by your program.OutputFor each test case, please print a single integer, the number of distinct common\r\ncharacteristics, to the console. Follow the format as indicated in the sample below.ExampleInput:5 6\r\nM 0 1\r\nM 1 2\r\nM 1 3\r\nS 1\r\nM 1 2\r\nS 3\r\n\r\n3 1\r\nM 1 2\r\n\r\n0 0Output:Case #1: 3\r\nCase #2: 2",
  "sample_input": "Input:5 6\r\nM 0 1\r\nM 1 2\r\nM 1 3\r\nS 1\r\nM 1 2\r\nS 3\r\n\r\n3 1\r\nM 1 2\r\n\r\n0 0Output:Case #1: 3\r\nCase #2: 2",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/JMFILTER",
  "scraped_at": "2025-08-17 00:33:48"
}
{
  "problem_code": "problems",
  "title": "K",
  "tags": [],
  "text": "Thepositive divisor functionis defined as a function that counts the number of positive divisors of an integerN, including1andN.If we define the positive divisor function asD(N), then, for example:D(1) = 1D(2) = 2D(10) = 4D(24) = 8CalculatingD(N)is a classical problem and there are many efficient algorithms for that. But what if you are asked to find something different? Given a range and an integerK, can you find out for how manyNin the given range,D(N)equalsK?InputIn the very first line, you’ll have an integer calledT. This is the number of test cases that shall follow. Every test case contains three integers,L,R, andK.LandRrepresent the range and are inclusive.Constraints1 ≤ T < 311 ≤ L ≤ R < 2311 ≤ K < 231OutputFor every test case, you must print the case number, followed by the count of numbers with exactlyKdivisors in the range.ExampleInput:3\r\n10 10 4\r\n2 13 2\r\n100 10000 100Output:Case 1: 1\r\nCase 2: 6\r\nCase 3: 0",
  "sample_input": "Input:3\r\n10 10 4\r\n2 13 2\r\n100 10000 100Output:Case 1: 1\r\nCase 2: 6\r\nCase 3: 0",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/KDIV",
  "scraped_at": "2025-08-17 00:33:56"
}
{
  "problem_code": "problems",
  "title": "Aho",
  "tags": [],
  "text": "TheAho–Corasick string matching algorithmis astring searching algorithminvented byAlfred V. AhoandMargaret J. Corasick. It is a kind of dictionary-matching algorithm that locates elements of a finite set of strings (the \"dictionary\") within an input text. It matches all patterns simultaneously.The Algorithm described above, requires an input file generator. The generator generates a text of lengthL, by choosingLcharacters randomly. Probability of choosing each character is given as priori, and independent of choosing others. Now, given a set of patterns, calculate the probability of a valid program generating “no”.InputFirst line contains an integerT, the number of test cases. Each case starts with an integerK, the number of pattern strings. NextKlines each contain a pattern string, followed by an integerN, number of valid characters. NextNlines each contain a character and the probability of selecting that character,pi. Next an integerL, the length of the string generated. The generated text can consist of only the valid characters, given above. There will be a blank line after each test case.OutputFor each test case, output the number of test case, and the probability of getting a “no”.ConstraintsT ≤ 100K ≤ 40Length of each pattern string is between 1 and 20Each pattern string consists of only alphanumeric characters (‘a’ to ‘z’, ‘A’ to ‘Z’, ’0’ to ‘9’)Valid characters are all alphanumeric characters∑pi= 1L ≤ 100ExampleInput2\r\n1\r\na\r\n2\r\na 0.5\r\nb 0.5\r\n2\r\n\r\n2\r\nab\r\nab\r\n2\r\na 0.2\r\nb 0.8\r\n2Output:Case #1: 0.250000\r\nCase #2: 0.840000",
  "sample_input": "Input2\r\n1\r\na\r\n2\r\na 0.5\r\nb 0.5\r\n2\r\n\r\n2\r\nab\r\nab\r\n2\r\na 0.2\r\nb 0.8\r\n2Output:Case #1: 0.250000\r\nCase #2: 0.840000",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/AHOCUR",
  "scraped_at": "2025-08-17 00:34:22"
}
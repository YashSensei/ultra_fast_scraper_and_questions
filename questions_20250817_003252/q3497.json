{
  "problem_code": "problems",
  "title": "Sum of Squares with Segment Tree",
  "tags": [],
  "text": "Segment trees are extremely useful. In particular \"Lazy Propagation\" (i.e.see here, for example) allows one to compute sums over a range in O(lg(n)), and update ranges in O(lg(n)) as well. In this problem you will compute something much harder:The sum of squares over a range with range updates of 2 types:increment in a range,set all numbers the same in a range.InputThere will beT(T≤ 25) test cases in the input file. First line of the input contains two positive integers,N(N≤ 100,000) andQ(Q≤ 100,000). The next line containsNintegers, each at most 1000. Each of the nextQlines starts with a number, which indicates the type of operation:2st nd– return the sum of the squares of the numbers with indices in [st,nd] {i.e., fromsttondinclusive} (1 ≤st≤nd≤N).1st nd x– add \"x\" to all numbers with indices in [st,nd] (1 ≤st≤nd≤N, and -1,000 ≤x≤ 1,000).0st nd x– set all numbers with indices in [st,nd] to \"x\" (1 ≤st≤nd≤N, and -1,000 ≤x≤ 1,000).OutputFor each test case output the \"Case:\" in the first line and from the second line output the sum of squares for each operation of type 2. Intermediate overflow will not occur with proper use of 64-bit signed integer.ExampleInput:2\r\n4 5\r\n1 2 3 4\r\n2 1 4\r\n0 3 4 1\r\n2 1 4\r\n1 3 4 1\r\n2 1 4\r\n1 1\r\n1\r\n2 1 1Output:Case 1:\r\n30\r\n7\r\n13\r\nCase 2:\r\n1",
  "sample_input": "Input:2\r\n4 5\r\n1 2 3 4\r\n2 1 4\r\n0 3 4 1\r\n2 1 4\r\n1 3 4 1\r\n2 1 4\r\n1 1\r\n1\r\n2 1 1Output:Case 1:\r\n30\r\n7\r\n13\r\nCase 2:\r\n1",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/SEGSQRSS",
  "scraped_at": "2025-08-17 00:34:28"
}
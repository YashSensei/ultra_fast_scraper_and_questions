{
  "problem_code": "problems",
  "title": "Locks and Keys",
  "tags": [],
  "text": "A wizard is in a labyrinth where there areVrooms andV−1 doors connecting some pairs of rooms in both directions, in such a way that there is always a sequence of doors one can traverse to go from a room to any other room. Additionally, there areClocks andCkeys ofCdifferent colours (one of each) in some of the doors and rooms of the maze, respectively; each door has at most one lock, and there is at most one key placed in each room. It should be an easy matter for the wizard to bypass the lock system, were it not for the fact that he forgot his spell book, without which his wizardry is utterly useless. The wizard is currently in roomX, and he wants to get his spell book, located in roomY, without taking too long. At every step he may go to an adjacent room through one of the doors. Of course, if the door is locked, he needs to be carrying the key of the same colour as the lock (unless, of course, that door has already been unlocked). The wizard can carry only one key at a time and after picking up a key it is not possible for him to drop it somewhere in the maze in order to take it again afterwards. Once a door has been unlocked, the key is thrown away since it is no longer any use.Given the maze and the positions of theCkeys andClocks, determine how to reachYfromX, if possible. Any path whose length does not exceed 4 · (C+ 1) ·Vis acceptable.InputThe first line of each case contains four integers: the numberVof rooms in the maze (1 ≤V≤ 1 500), the numberCof locks (0 ≤C<V), and roomsXandYnumbered 0,1,…,V−1. Then comes a (possibly empty) line withCintegers indicating the location of each of the keys, in order of increasing colour. The nextV− 1 lines describe the maze: each contains three integersABL, meaning that there is a door between roomsAandBwhich can be unlocked with the key of colourL, if 0 ≤L<C; a value of −1 forLindicates that no lock is needed.The last line hasV,C,X,Y= 0, 0, 0, 0.OutputThere is one line of output per test case. If there is no solution, outputImpossible. Otherwise print the full path corresponding to your solution in the formatL:V0…VL, whereL≤ 4 (C+ 1)Vis the length of a path fromXtoY, andX=V0,V1, …,VL−1,VL=Yis the sequence ofL+ 1 vertices visited in the right order. A single space must precede each vertex in the path; see sample output for clarification.ExampleInput:1 0 0 0\r\n\r\n3 1 0 2\r\n1\r\n0 1 -1\r\n0 2 0\r\n\r\n3 2 0 2\r\n1 2\r\n0 1 1\r\n0 2 0\r\n\r\n5 3 0 4\r\n2 0 3\r\n0 1 0\r\n0 2 -1\r\n1 3 1\r\n2 4 2\r\n\r\n0 0 0 0Output:0: 0\r\n3: 0 1 0 2\r\nImpossible\r\n10: 0 2 0 1 0 1 3 1 0 2 4Problem setter: Javier Gómez Serrano",
  "sample_input": "Input:1 0 0 0\r\n\r\n3 1 0 2\r\n1\r\n0 1 -1\r\n0 2 0\r\n\r\n3 2 0 2\r\n1 2\r\n0 1 1\r\n0 2 0\r\n\r\n5 3 0 4\r\n2 0 3\r\n0 1 0\r\n0 2 -1\r\n1 3 1\r\n2 4 2\r\n\r\n0 0 0 0Output:0: 0\r\n3: 0 1 0 2\r\nImpossible\r\n10: 0 2 0 1 0 1 3 1 0 2 4",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/LOCKKEY",
  "scraped_at": "2025-08-17 00:34:02"
}
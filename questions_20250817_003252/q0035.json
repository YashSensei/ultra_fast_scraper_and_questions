{
  "problem_code": "problems",
  "title": "Optimal Marks",
  "tags": [],
  "text": "You are given an undirected graph G(V, E). Each vertex has a mark which is an integer from the range [0..231– 1]. Different vertexes may have the same mark.For an edge (u, v), we define Cost(u, v) = mark[u] xor mark[v].Now we know the marks of some certain nodes. You have to determine the marks of other nodes so that the total cost of edges is as small as possible.InputThe first line of the input data contains integerT(1 ≤T≤ 10) - the number of testcases. Then the descriptions of T testcases follow.First line of each testcase contains 2 integersNandM(0 <N≤ 500, 0 ≤M≤ 3000).Nis the number of vertexes andMis the number of edges. ThenMlines describing edges follow, each of them contains two integers u, v representing an edge connecting u and v.Then an integerK, representing the number of nodes whose mark is known. The nextKlines contain 2 integers u and p each, meaning that node u has a mark p. It’s guaranteed that nodes won’t duplicate in this part.OutputFor each testcase you should printNlines integer the output. TheKth line contains an integer number representing the mark of nodeK. If there are several solutions, you have to output the one which minimize the sum of marks. If there are several solutions, just output any of them.ExampleInput:1\r\n3 2\r\n1 2\r\n2 3\r\n2\r\n1 5\r\n3 100Output:5\r\n4\r\n100",
  "sample_input": "Input:1\r\n3 2\r\n1 2\r\n2 3\r\n2\r\n1 5\r\n3 100Output:5\r\n4\r\n100",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/OPTM",
  "scraped_at": "2025-08-17 00:33:13"
}
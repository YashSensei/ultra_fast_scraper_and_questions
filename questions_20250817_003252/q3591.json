{
  "problem_code": "problems",
  "title": "Cheating a Boolean Tree",
  "tags": [],
  "text": "For this problem we will consider a type of binary tree that we will call a boolean tree. In this tree, every row is completely filled, except possibly the last (deepest) row, and the nodes in the last row are as far to the left as possible. Additionally, every node in the tree will either have 0 or 2 children.What makes a boolean tree special is that each node has a boolean value associated with it, 1 or 0. In addition, each interior node has either an \"AND\" or an \"OR\" gate associated with it. The value of an \"AND\" gate node is given by the logical AND of its two children's values. The value of an \"OR\" gate likewise is given by the logical OR of its two children's values. The value of all of the leaf nodes will be given as input so that the value of all nodes can be calculated up the tree.The root of the tree is of particular interest to us. We would really like for the root to have the valueV, either 1 or 0. Unfortunately, this may not be the value the root actually has. Luckily for us, we can cheat and change the type of gate for some of the nodes; we can change an AND gate to an OR gate or an OR gate to an AND gate.Given a description of a boolean tree and what gates can be changed, find the minimum number of gates that need to be changed to make the value of the root nodeV. If this is impossible, output \"IMPOSSIBLE\" (quotes for clarity).InputThe first line of the input file contains the number of cases,N.Ntest cases follow.Each case begins withMandV.Mrepresents the number of nodes in the tree and will be odd to ensure all nodes have 0 or 2 children.Vis the desired value for the root node, 0 or 1.Mlines follow describing each of the tree's nodes. The Xthline will describe node X, starting with node 1 on the first line.The first (M−1)/2 lines describe the interior nodes. Each line containsGandC, each being either 0 or 1. IfGis 1 then the gate for this node is an AND gate, otherwise it is an OR gate. IfCis 1 then the gate for this node is changeable, otherwise it is not. Interior node X has nodes 2X and 2X+1 as children.The next (M+1)/2 lines describe the leaf nodes. Each line contains one valueI, 0 or 1, the value of the leaf node.To help visualize, here is a picture of the tree in the first sample input.OutputFor each test case, you should output:Case #X:YwhereXis the number of the test case andYis the minimum number of gates that must be changed to make the output of the root nodeV, or \"IMPOSSIBLE\" (quotes for clarity) if this is impossible.Limits1 <N≤ 202 <M< 10000SampleInput2\r\n9 1\r\n1 0\r\n1 1\r\n1 1\r\n0 0\r\n1\r\n0\r\n1\r\n0\r\n1\r\n5 0\r\n1 1\r\n0 0\r\n1\r\n1\r\n0OutputCase #1: 1\r\nCase #2: IMPOSSIBLEIn case 1, we can change the gate on node 3 to an OR gate to achieve the desired result at the root. In case 2, only the root can be changed but changing it to an OR gate does not help.",
  "sample_input": "Case #X:Y",
  "sample_output": "Input2\r\n9 1\r\n1 0\r\n1 1\r\n1 1\r\n0 0\r\n1\r\n0\r\n1\r\n0\r\n1\r\n5 0\r\n1 1\r\n0 0\r\n1\r\n1\r\n0OutputCase #1: 1\r\nCase #2: IMPOSSIBLE",
  "link": "https://www.spoj.com/problems/GCJ082A",
  "scraped_at": "2025-08-17 00:34:15"
}
{
  "problem_code": "problems",
  "title": "DOJO Corridor I",
  "tags": [],
  "text": "There's a long rectangular corridor in the hall's dojo, one place is already taken by a magic hanjō (1×1 square). You have to put tatamis (1×2 rectangle) in order to cover exactly the rest of the corridor. Sometimes it's possible, sometimes not!InputThe input begins with the number T of test cases in a single line. In each of the next T lines there are two integers : N, M the size of the corridor, I, J coordinates of the magic hanjō, and K the modulo for the output.OutputFor each test case, print the number of possibility to do the job, modulo K.ExampleInput:3\r\n1 3 1 3 100\r\n2 3 2 2 100\r\n3 7 1 3 100Output:1\r\n0\r\n56Constraints1 ≤ T ≤ 300001 ≤ N ≤ 41 ≤ M ≤ 1091 ≤ I ≤ N1 ≤ J ≤ M1 ≤ K ≤ 109Uniform, independent, random input in the range.Time limit is set to allow one half kB of python3 code to get AC.Edit(19/1/2015, after cluster switch) : now my old code ends in 0.16s using PY3.4.Edit(11/2/2017, after compiler update) : new TL. My old code ends in 0.09s using PY3.5.",
  "sample_input": "Input:3\r\n1 3 1 3 100\r\n2 3 2 2 100\r\n3 7 1 3 100Output:1\r\n0\r\n56",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/DOJ1",
  "scraped_at": "2025-08-17 00:34:24"
}
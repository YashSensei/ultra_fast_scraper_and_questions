{
  "problem_code": "problems",
  "title": "Get",
  "tags": [],
  "text": "Peter has recently decided to hold a party at Stockholm, where the ACM/ICPC\r\n2009 World Final will be held. Unfortunately, despite Peter’s affluence, he is not able\r\nto invite all of his friends due to the astronomical price of the air ticket to Stockholm.\r\nHe has devised the following rule to determine which subset of his friends will be\r\ninvited:Any invited person must have at least A acquaintances at the party. This is to\r\nensure everyone at the party will not feel alien.Any invited person must be unfamiliar with at least B people. Otherwise some\r\npeople may not have the chance to communicate with a stranger.Given the relationships between Peter’s friends, you are to figure out whom Peter\r\nshould invite to the party so as to maximize its size.InputThere are multiple test cases in the input file.Each test case starts with four integers, N, M, A, and B (1 ≤ N ≤ 100, 0 ≤ M ≤ N × (N - 1) / 2, 0 ≤ A, B ≤ N - 1).\r\nEach of the following M lines contains\r\ntwo integers, X and Y, (0 ≤ X, Y ≤ N - 1, X ≠ Y), indicating that friend X and friend Y are acquaintances.Two successive test cases are separated by a blank line. A case with N = 0, M = 0,\r\nA = 0 and B = 0 indicates the end of the input file, and should not be processed by your program.OutputFor each test case, please print a single integer, the maximum number of friends\r\nPeter will be able to invite.ExampleInput:3 2 1 1\r\n0 1\r\n1 2\r\n\r\n4 4 2 1\r\n0 1\r\n1 2\r\n2 3\r\n0 3\r\n\r\n0 0 0 0Output:Case #1: 0\r\nCase #2: 4",
  "sample_input": "Input:3 2 1 1\r\n0 1\r\n1 2\r\n\r\n4 4 2 1\r\n0 1\r\n1 2\r\n2 3\r\n0 3\r\n\r\n0 0 0 0Output:Case #1: 0\r\nCase #2: 4",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/STCKHOLM",
  "scraped_at": "2025-08-17 00:33:44"
}
{
  "problem_code": "problems",
  "title": "Laser",
  "tags": [],
  "text": "There is a grid withnrows andmcolumns, consisting of 1x1 squares. There is exactly one square with a laser and one (different) square with a sensor. The laser emits a beam of concentrated light from the middle of its square, in one of the four directions (north, south, east or west). Some squares are blocked, so they don't let the light through. (In that sense, square with a laser is also considered blocked).We have a number of two-sided mirrors. We can place them on the middle of a square, in one of the two configurations (45 degrees). Mirrors placed in such a way reflect the light, making a right angle (90 degrees).Your task is to guide the light to the sensor, using the minimum number of mirrors.InputThe first line contains a single integert, denoting the number of test cases. Then, testcases follow.The description of a single test case begins with two integersn,m(1 ≤n,m≤ 200) - number of rows and columns, respectively. Then,nlines follow, each containingmcharacters.j-th character ini-th line denotes a square ini-th row nadj-th column. \".\" (a dot) denotes free square, \"#\" denotes blocked square. There is exactly one laser on the grid, represented by one of these four characters: \"<\", \">\", \"v\" or \"^\" (it depends on the direction of the laser). There is also exactly one sensor, represented by \"C\". No other characters can appear in a line.OutputFor every testcase you should printnlines withmcharacters, denoting the grid from the input, but with mirrors placed on some of the fields. Mirrors are represented by \"\\\" and \"/\" characters. Arrangement of mirrors should make the light reach the sensor, while using minimum possible number of mirrors. You can't place mirrors on blocked fields, as well as on field with the laser and on field with the sensor. There is always a way for the light to reach the sensor.ExampleInput:2\r\n3 4\r\n>...\r\n###.\r\nC...\r\n5 5\r\nv#...\r\n.#.#.\r\n.#.#.\r\n.#.#.\r\n...#COutput:>..\\\r\n###.\r\nC../\r\n\r\nv#/.\\\r\n.#.#.\r\n.#.#.\r\n.#.#.\r\n\\./#C",
  "sample_input": "2\r\n3 4\r\n>...\r\n###.\r\nC...\r\n5 5\r\nv#...\r\n.#.#.\r\n.#.#.\r\n.#.#.\r\n...#C",
  "sample_output": ">..\\\r\n###.\r\nC../\r\n\r\nv#/.\\\r\n.#.#.\r\n.#.#.\r\n.#.#.\r\n\\./#C",
  "link": "https://www.spoj.com/problems/LAS",
  "scraped_at": "2025-08-17 00:34:10"
}
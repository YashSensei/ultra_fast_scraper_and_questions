{
  "problem_code": "problems",
  "title": "See you again?",
  "tags": [],
  "text": "Tareq and Shawon were two friends of the problem setter's. Many years ago, they died in a road accident. The problem setter still misses them. He gives you the following task in memory of his friends.You're given a tree with n nodes and n-1 edges. Each node contains a single character.(A node can contain any of the lowercase Latin letters 'a' to 'z' or special symbol '&'). You've to answer if it is possible to find the string \"tareq&shawon\", without quotes, as a subsequence if you choose a path from the root node to a leaf node. If it is possible then print the path that contains the mentioned string as a subsequence. If there are multiple paths containing the above string as a subsequence, print the lexicographically smallest one.Note that 1 is the root of the tree and you've to print the whole path from the root node to a leaf node that contains the above string as a subsequence.You have to answer t independent test cases.InputThe first line of the input contains one integer t (1 ≤ t ≤ 1000) - the number of test cases. Then t test cases follow.The first line of the test case contains one integer n (1 ≤ n ≤ 105) - number of nodes in the tree.The next n-1 lines contains two integers u (1 ≤ u ≤ n) and v (1 ≤ v ≤ n) denotes an edge between node u and v.The next line contains n space separated characters where c[i] corresponds to the character in the i’th node. c[i] can be a lowercase Latin letter or special symbol '&'.It is guaranteed that the sum of n over all test cases does not exceed 105.OutputFor each case print the case number and then print \"YES\" if there is a path from the root node to a leaf node that contains the mentioned string as a subsequence. And print the lexicographically smallest path that contains the mentioned string as a subsequence.Otherwise, print \"NO\".ExampleInput:1\r\n31\r\n1 2\r\n2 3\r\n3 8\r\n8 9\r\n9 13\r\n13 17\r\n17 18\r\n18 23\r\n2 4\r\n4 7\r\n7 10\r\n10 14\r\n14 16\r\n16 19\r\n19 22\r\n22 28\r\n28 29\r\n29 30\r\n30 31\r\n2 5\r\n5 6\r\n6 11\r\n11 12\r\n12 15\r\n15 20\r\n20 21\r\n21 24\r\n24 25\r\n25 26\r\n26 27\r\nt a r r r e e e q q q & & & s s s h h h a a a w o n m w o n xOutput:Case 1: YES\r\n1 2 4 7 10 14 16 19 22 28 29 30 31NotesThere are two possible path from the root to a leaf that contains mentioned string as a subsequence. They are 1 2 4 7 10 14 16 19 22 28 29 30 31 and 1 2 5 6 11 12 15 20 21 24 25 26 27. The first one is lexicographically smaller.",
  "sample_input": "Input:1\r\n31\r\n1 2\r\n2 3\r\n3 8\r\n8 9\r\n9 13\r\n13 17\r\n17 18\r\n18 23\r\n2 4\r\n4 7\r\n7 10\r\n10 14\r\n14 16\r\n16 19\r\n19 22\r\n22 28\r\n28 29\r\n29 30\r\n30 31\r\n2 5\r\n5 6\r\n6 11\r\n11 12\r\n12 15\r\n15 20\r\n20 21\r\n21 24\r\n24 25\r\n25 26\r\n26 27\r\nt a r r r e e e q q q & & & s s s h h h a a a w o n m w o n xOutput:Case 1: YES\r\n1 2 4 7 10 14 16 19 22 28 29 30 31",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/DST",
  "scraped_at": "2025-08-17 00:33:23"
}
{
  "problem_code": "problems",
  "title": "Huge Pascal triangle",
  "tags": [],
  "text": "GivenPa prime number, andNan integer,Dukkarfound a really fast way to compute how many numbers are divisible byPon theNthrow of the Pascal triangle.\r\nNow the task will be much harder : it's for all theNfirst rows.\r\nMoreoverNwill be a giant number, given in basePfor convenience.InputThe first line of input contains an integerT, the number of test cases. Follow 2×Tlines.\r\nFor each test case, on the first line your are given two integersPandk.\r\nOn the second line you are givenkintegers : the digits ofNin baseP.N = a0×P0+ ... + ai×Pi+ ... + ak-1×Pk-1OutputFor each test case, you have to print the number\r\n of numbers in all the firstNrows of the Pascal triangle that are divisible byP.\r\nAs the answer could not fit in a 64bit container, give your answer modulo 1000000007.ExampleInput:3\r\n5 2\r\n0 1 \r\n5 2\r\n1 1\r\n7 3\r\n2 0 2Output:0\r\n4\r\n2689ExplanationsFor the first case, N = 0×50+ 1×51= 5. No numbers are divisible by 5 in the first 5 rows.\r\nFor the second case, N = 1×50+ 1×51= 6. Only 4 numbers are divisible by 5 in the first 6 rows.1\r\n1 1\r\n1 2 1\r\n1 3 3 1\r\n1 4 6 4 1\r\n15 10 10 51For the third case, N = 2×70+ 0×71+ 2×72= 100.Constraints0 < T < 3000 < P < 109, a prime number0 < k < 10000 ≤ ai< P,  ak-1> 0For your information, my 300B-python3 code get AC in 3.03s with 11MB of memory print.\r\nMy C-code get AC in 0.08s with 1.6MB of memory print.Have fun ;-)Edit(25/I/2015) With Cube cluster my C-time is 0.01s and my PY3.4-time is 0.26s.Edit(11/II/2017) With compiler changes my C-time is 0.00s and my PY3.4-time is 0.12s.",
  "sample_input": "Input:3\r\n5 2\r\n0 1 \r\n5 2\r\n1 1\r\n7 3\r\n2 0 2Output:0\r\n4\r\n2689",
  "sample_output": "1\r\n1 1\r\n1 2 1\r\n1 3 3 1\r\n1 4 6 4 1\r\n15 10 10 51",
  "link": "https://www.spoj.com/problems/DUKKAR2",
  "scraped_at": "2025-08-17 00:33:28"
}
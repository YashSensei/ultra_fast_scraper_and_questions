{
  "problem_code": "problems",
  "title": "Double Vision",
  "tags": [],
  "text": "The DoubleVision company designs inks and fonts that can be easily read by\r\nboth humans and machines.  They design their fonts on a rectangular grid.\r\nShown below is a very simple 5x3 design for the first five digits..o. .o. oo. oo. o.o\r\no.o .o. ..o ..o o.o\r\no.o .o. .o. oo. ooo\r\no.o .o. o.. ..o ..o\r\n.o. .o. ooo oo. ..oThe ink appears to be normal black ink, but just underneath the surface\r\nDoubleVision adds a special polymer that can be detected by an infrared\r\nscanner.  A human sees the black ink but not the polymer, and a machine sees\r\nthe polymer but not the black ink.  The only problem is that the polymer is\r\nmuch more expensive than the ink, so DoubleVision wants to use as little of it\r\nas possible. They have discovered that with many fonts, each symbol can be\r\nuniquely identified by at most two pixels.  By only adding the polymer to one\r\nor two pixels per symbol, they drastically lower costs while still ensuring\r\n100% accuracy in their scanners.  The font shown above has this property;\r\npixels that uniquely identify each letter are highlighted with '#'. (There\r\nare other choices that would work as well.).#. .o. #o. oo. o.#\r\n#.o .#. ..o ..o o.o\r\no.o .o. .o. #o. ooo\r\no.o .o. #.. ..o ..o\r\n.o. .o. ooo #o. ..oYour job is to write a program to determine if a given font has this\r\nproperty, and if so highlight the pixels.The input consists of one or more test cases, followed by a line\r\ncontaining '000' (three zeros) that signals the end of the input. Each\r\ntest case begins with a line containing three positive integersn,r, andc, separated by a space:nis the number of symbols in the font,ris\r\nthe number of rows in each grid, andcis the number of columns in each\r\ngrid. The nextrlines contain the image of each symbol, using the exact\r\nformat shown in the examples:  a dot '.' represents an empty part\r\nof the grid, a lowercase 'o' represents a pixel, and adjacent grids\r\nare separated\r\nby a space.  The total width of each line will be at most 79 characters (not\r\ncounting end-of-line characters), andrwill be at most 10.  The test\r\ncases are implicitly numbered starting with 1.For test casei, first output a line that says 'Testi'. Then\r\ndetermine if each symbol can be uniquely identified with one or two\r\npixels. If not, output a line with the word 'impossible'.  Otherwise,\r\noutput the font in the same format except that the identifying pixels\r\nfor each symbol are replaced with '#'.In general there may be\r\nseveral different pixels or pixel pairs that uniquely identify a symbol.\r\nTo ensure that the output is unique, we add the following definition and\r\nrules. When comparing two pixels, thetopmost-leftmostpixel is the\r\none closest to the top of the grid. \r\nIf both pixels are on the same row, then the topmost-leftmost is\r\nthe one closest to the left of the grid.If one pixel will work, highlight the topmost-leftmost pixel that works.\r\nNever highlight a two-pixel solution if a one-pixel solution is\r\npossible. If two pixels are needed, highlight the pair with the\r\ntopmost-leftmost pixel. If two or more pairs have the same\r\ntopmost-leftmost pixel, highlight the one with the topmost-leftmostotherpixel.Input:3 2 2\r\noo oo .o\r\no. .o o.\r\n3 2 2\r\noo oo .o\r\no. .o oo\r\n5 5 3\r\n.o. .o. oo. oo. o.o\r\no.o .o. ..o ..o o.o\r\no.o .o. .o. oo. ooo\r\no.o .o. o.. ..o ..o\r\n.o. .o. ooo oo. ..o\r\n1 2 4\r\n.o..\r\n...o\r\n0 0 0Output:Test 1\r\nimpossible\r\nTest 2\r\n#o #o .o\r\n#. .# ##\r\nTest 3\r\n.#. .o. #o. oo. o.#\r\n#.o .#. ..o ..o o.o\r\no.o .o. .o. #o. ooo\r\no.o .o. #.. ..o ..o\r\n.o. .o. ooo #o. ..o\r\nTest 4\r\n.#..\r\n...o",
  "sample_input": ".o. .o. oo. oo. o.o\r\no.o .o. ..o ..o o.o\r\no.o .o. .o. oo. ooo\r\no.o .o. o.. ..o ..o\r\n.o. .o. ooo oo. ..o",
  "sample_output": ".#. .o. #o. oo. o.#\r\n#.o .#. ..o ..o o.o\r\no.o .o. .o. #o. ooo\r\no.o .o. #.. ..o ..o\r\n.o. .o. ooo #o. ..o",
  "link": "https://www.spoj.com/problems/DOUBLEVI",
  "scraped_at": "2025-08-17 00:33:19"
}
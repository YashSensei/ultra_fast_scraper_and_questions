{
  "problem_code": "problems",
  "title": "Stopping",
  "tags": [],
  "text": "You work for a tour operator which plans to commercialize different visiting tours in a country. A tour is a sequence of cities that are visited during the trip. A city cannot be visited more than once in one tour. Each city is represented as a node in a non-oriented graph where edges are possible connections. Given a departure city A and a destination city B, we call stopping-off-city a city that is part of at least one possible tour between A and B. Your mission is to select all possible stopping-off-cities between A and B. In the example of the figure bellow, we have a graph of 20 cities. If we consider the departure as node 10 and the arrival as node 16 the stopping-off-cities are {8, 9, 10, 11, 12, 13, 15, 16}.InputFirst line of input consists of an integer V denoting the number of nodes or cities (V ≤ 10000). Then, each line contains an edge definition as two space separated integers (link between two cities).  Edges description ends with the line \"-1 -1\" (without quotes). The last line contains two space separated integers \"s d\" wheresis the departure city anddthe destination city.OutputA space separated sorted list of stopping-off-cities includingsandd.  It is guaranteed that at least one path exists betweensandd.ExampleInput:20\r\n0 1\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n5 6\r\n6 7\r\n1 8\r\n8 11\r\n8 9\r\n9 10\r\n11 12\r\n9 12\r\n12 13\r\n12 15\r\n12 14\r\n14 19\r\n14 18\r\n14 17\r\n17 18\r\n18 19\r\n13 15\r\n15 16\r\n-1 -1\r\n10 16Output:8 9 10 11 12 13 15 16",
  "sample_input": "Input:20\r\n0 1\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n5 6\r\n6 7\r\n1 8\r\n8 11\r\n8 9\r\n9 10\r\n11 12\r\n9 12\r\n12 13\r\n12 15\r\n12 14\r\n14 19\r\n14 18\r\n14 17\r\n17 18\r\n18 19\r\n13 15\r\n15 16\r\n-1 -1\r\n10 16Output:8 9 10 11 12 13 15 16",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/STOPCITY",
  "scraped_at": "2025-08-17 00:33:46"
}
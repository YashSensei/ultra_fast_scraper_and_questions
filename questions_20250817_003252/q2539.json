{
  "problem_code": "problems",
  "title": "Davids Greed",
  "tags": [],
  "text": "The King David is a particularly miserly character. He has all the gold in his kingdom, and never lends a single coin to anyone. Years passed, and the streets in his kingdom, made by his father, King Enrique, started to deteriorate. The villagers couldn’t traffic with their carts without dropping some of their content.This problem was affecting the merchants, because they were losing food and other stuff that they sell. So they decided to go to the castle and block the entrance, so the king couldn’t get out until he promised that he would restore the streets.The King, tired by the annoyance of the people, decided to promise to restore the streets of his kingdom, but because he’s too greedy, he will restore only the ones that are important for the city, let’s call them “vital streets”.The vital streets connect a commercial point A to a commercial point B in the city such that there will never exist 2 ways to go from point A to point B. This is given by some coordinates X and Y, you can assume the commercial point will be a single point in a space.The original streets, built by King Enrique, connects every point with the other points, so point A is connected with point B, C, D, and so on. So restore every street would be too expensive, that’s why King David will restore only the “vital streets”, but he is not really good at this type of calculations, so he need you to write a program that help him out.The cost of restoring a street is given by its length and some value P, that tell how much cost to restore a single unit of distance. By example, if P = 3, and the distance between points A and B is 3.5, then the total cost of restoring that street would be 3.5 × 3. Note: you have to round up the total cost of the street.InputThe first line of input will consist of an integer T, denoting the number of test cases. Every test case will have by first line 2 integers, N and P, denoting the number of points and the unitary cost. Then N lines follow, every of them having 2 numbers Xi  and Yi, denoting the coordinates in the cartesian plane of every commercial point.OutputFor each test case output a single line containing this: “Scenario #i: j”, where i is the number of the test case, starting at one, and j is the minimum cost of restoring the streets, such as the restored streets let the villagers to go from one point to another point. Since this number can be quite large, output j mod 109+ 7.ExampleInput:2\r\n4 1\r\n35 46\r\n29 13\r\n44 0\r\n27 17\r\n3 18\r\n18 0\r\n11 17\r\n2 31Output:Scenario #1: 56\r\nScenario #2: 631Constraints1 ≤ N ≤ 1,000-1,000 ≤ Xi, Yi ≤ 1,0001 ≤ P ≤ 1,000",
  "sample_input": "Input:2\r\n4 1\r\n35 46\r\n29 13\r\n44 0\r\n27 17\r\n3 18\r\n18 0\r\n11 17\r\n2 31Output:Scenario #1: 56\r\nScenario #2: 631",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/DAVIDG",
  "scraped_at": "2025-08-17 00:34:10"
}
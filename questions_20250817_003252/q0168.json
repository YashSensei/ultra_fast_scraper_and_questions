{
  "problem_code": "problems",
  "title": "Nim",
  "tags": [],
  "text": "Note: This problem has nothing to do with siting sewage plants, power lines or wind farms. NIM is an ambigram.The game of NIM is played with any number of piles of objects with any number of objects in each pile. At each turn, a player takes one or more (up to all) objects from one pile. In the normal form of the game, the player who takes the last object is the winner. There is a well-known strategy for this game based on the nim-2 sum.The Nim-B sum (nim sum baseB) of two non-negative integersXandY(writtenNimSum(B,X,Y)) is computed as follows:Write each ofXandYin baseB.Each digit in baseBof the Nim-B sum is the sum moduloBof the corresponding digits in the baseBrepresentation ofXandY.For example:NimSum(2, 123, 456) = 1111011 ¤ 111001000 = 110110011 = 435NimSum(3, 123, 456) = 11120 ¤ 121220 = 102010 = 300NimSum(4, 123, 456) = 1323 ¤ 13020 = 10303 = 307The strategy for normal form Nim is to compute the Nim-2 sumTof the sizes of all piles. If at any time, you end your turn withT= 0, you are guaranteed a WIN. Any opponent move must leaveTnot 0 and there is always a move to getTback to 0. This is done by computingNimSum(2,T,PS) for each pile; if this is less than the pile size (PS), compute the difference between thePSand the Nim-2 sum and remove it from that pile as your next move.Write a program to computeNimSum(B,X,Y).InputThe first line of input contains a single integerP, (1 <=P<= 1000), which is the number of data sets that follow. Each data set is a single line that contains the data set number, followed by a space, followed by three space separated decimal integers,B,XandY. 2 <=B<= 2000000, 0 <=X<= 2000000, 0 <=Y<= 2000000.OutputFor each data set there is one line of output. It contains the data set number followed by a single space, followed byN, the decimal representation of the Nim sum in baseBofXandY.SampleInput:4\r\n1 2 123 456\r\n2 3 123 456\r\n3 4 123 456\r\n4 5 123 456Output:1 435\r\n2 300\r\n3 307\r\n4 429",
  "sample_input": "Input:4\r\n1 2 123 456\r\n2 3 123 456\r\n3 4 123 456\r\n4 5 123 456Output:1 435\r\n2 300\r\n3 307\r\n4 429",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/NY10B",
  "scraped_at": "2025-08-17 00:33:17"
}
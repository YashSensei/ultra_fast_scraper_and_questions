{
  "problem_code": "problems",
  "title": "Lets Be An Anagrammatist",
  "tags": [],
  "text": "Do you know what is an anagram?An anagram is a rearrangement of letters of one word to form another word. For example: one of the anagram of the word “CODEMASK” can be “DEMOCSAK”. So, we can find different kinds of anagram of a word.Now, you are given two array S and T. You have to find alexicographically smallestcontiguous subsequence of S which is an anagram of array T.Between two sequence A and B, where length(A) = length(B), A will be lexicographically smaller than B if we can find an index i (1≤ i ≤ length(A)) where A[i] < B[i] and for all j, A[j] = B[j] where 1 ≤ j < i.InputThe first line of the input is the number of the test cases Ts.Each test case contains three lines. The first lines contains N and M, N is the length of array S and M is the length of array T.Next line contains N integers of array S. Then another line follows containing M integers of array T.Constraints1 ≤ Ts ≤ 201 ≤ N, M ≤ 2000001 ≤ S[i], T[i] ≤ 200000OutputFirst you need to print the case number. Then on the same line, you have to print the index (1 based) of the lexicographically smallest contiguous subsequence of S which is an anagram of T. If there is more than one answer, you need to print the smallest index. If you can't find any anagram of the T in S, just print 0.SampleInput:2\r\n4 3\r\n1 3 2 4\r\n1 2 3\r\n5 3\r\n3 2 1 4 10\r\n1 2 4Output:Case 1: 1\r\nCase 2: 2",
  "sample_input": "Input:2\r\n4 3\r\n1 3 2 4\r\n1 2 3\r\n5 3\r\n3 2 1 4 10\r\n1 2 4Output:Case 1: 1\r\nCase 2: 2",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/ANGRMTST",
  "scraped_at": "2025-08-17 00:34:04"
}
{
  "problem_code": "problems",
  "title": "Birthday Present",
  "tags": [],
  "text": "Today is problem setter's best friend Jenny’s birthday. Long ago, Jenny, being a very clever girl, asked the problem setter to perform some queries on a tree but he couldn’t do it. Now, he seeks your help to impress her on her birthday by answering those queries.Recall that a tree is a connected acyclic undirected graph withnnodes andn-1edges. In each node there are some flowers. The two type of queries are described as:1 u v x2 u yFor first type, you have to calculate the minimum number of vertices needed to be visited on the path fromvtou, starting atv, to collect at leastx (1 ≤ x ≤ 1018)flowers, wherevis a descendant ofu.Note that you cannot visit any node that is not in the path from v to u and you cannot skip any node of the path from v to that node you've chosen at last.If it's impossible to collect at leastxflowers visiting all the vertices fromvtouthen you have to print-1.For second type, you have to add y(y can be negative)to the existing amount flowers in nodeu. It is guaranteed that after this operation, flowers in a node will be non-negative and sum of flowers of all node of the tree will be at most 1018.Note that 1 is the root of the tree.InputThe first line of the input contains two integersn(2 ≤ n ≤ 105) andq(1 ≤ q ≤ 105) where n is the number of vertices of the tree and q is the number of queries you have to perform.Each of the next n-1 lines contains two integersa(1 ≤ a ≤ n) andb(1 ≤ b ≤ n) which denote an edge between a and b. The next line contains n non-negative integers c[1], c[2] ... c[n] (0 ≤ c[i] ≤ 1013) where c[i] denotes the number of flowers in i’th node. Next q lines contain queries of the format described above.OutputFor each query of the first type print minimum number of nodes you have to visit to collect at leastx(1 ≤ x ≤ 1018) flowers. If it's impossible to collect at leastxflowers visiting all the vertices fromvtouthen print-1.ExampleInput:6 5\r\n1 2\r\n1 3\r\n2 4\r\n2 5\r\n5 6\r\n2 3 13 5 7 11\r\n1 1 6 10\r\n1 1 6 12\r\n1 1 6 19\r\n2 5 5\r\n1 1 6 23Output:1\r\n2\r\n3\r\n2",
  "sample_input": "Input:6 5\r\n1 2\r\n1 3\r\n2 4\r\n2 5\r\n5 6\r\n2 3 13 5 7 11\r\n1 1 6 10\r\n1 1 6 12\r\n1 1 6 19\r\n2 5 5\r\n1 1 6 23Output:1\r\n2\r\n3\r\n2",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/HBD",
  "scraped_at": "2025-08-17 00:33:21"
}
{
  "problem_code": "problems",
  "title": "Supernumbers in a permutation",
  "tags": [],
  "text": "Ann-element permutation is ann-element sequence of distinct numbers\r\nfrom the set{1, 2, ... n}. For example the sequence 2, 1, 4, 5, 3 is a\r\n5-element permutation.\r\nWe are interested in the longest increasing subsequences in a permutation. In this exemplary\r\npermutation they are of length 3 and there are exactly 2 such subsequences: 2, 4, 5 and 1, 4, 5.\r\nWe will call a number belonging to any of the longest increasing\r\nsubsequences asupernumber. In the permutation 2, 1, 4, 5, 3 the supernumbers are 1, 2, 4, 5 and 3 is not a supernumber.\r\nYour task is to find all supernumbers for a given permutation.TaskWrite a program whichreads a permutation from standard input,finds all its supernumbers,writes all found numbers to standard output.InputTen test cases (given one under another, you have to process all!).\r\nEach test case consists of two lines.\r\nIn the first line there is a numbern(1 ≤ n ≤ 100000). In the second\r\nline: ann-element permutation -nnumbers separated by single spaces.OutputFor every test case your program should write two lines. In the first line\r\n- the number of supernumbers in the input permutation. In the second line\r\nthe supernumbers separated by single spaces in increasing order.ExampleInput:5\r\n2 1 4 5 3\r\n[and 9 test cases more]Output:4\r\n1 2 4 5\r\n[and 9 test cases more]Warning: large Input/Output data, be careful with certain languages",
  "sample_input": "Input:5\r\n2 1 4 5 3\r\n[and 9 test cases more]Output:4\r\n1 2 4 5\r\n[and 9 test cases more]",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/SUPPER",
  "scraped_at": "2025-08-17 00:33:35"
}
{
  "problem_code": "problems",
  "title": "Submatrix of submatrix",
  "tags": [],
  "text": "You are given a matrix P of N rows and M columns. It consists of integer numbers in the range [1..100]. We define the sum of a matrix is the sum of its elements. Your task is to find a submatrix Q (of A rows and B columns) of P and a submatrix K (of C rows and D columns) of Q so that the difference between the sum of Q and the sum of K is maximal, and submatrix K is absolutely inside matrix Q (i.e no element on matrix Q's sides is also in matrix K).Because the tests are large, we suggest a method to define matrix P:P[i][j] = ( P[i][j-1] * 71 + 17 ) mod 100 + 1 . ( 1 ≤ i ≤ N , 1 ≤ j ≤ M )With this method we only care about P[i][1].Constraints1 ≤ N , M ≤ 10001 ≤ A ≤ N1 ≤ B ≤ M0 ≤ C ≤ A - 20 ≤ D ≤ B - 2InputThe first line of the input contains an integer t (1 ≤ t ≤ 10 ), equal to the number of testcases. Then descriptions of t testcases follow. The first line of the description contains 6 integer numbers N, M, A, B, C, D. Then N lines follow, line i contains one integer number P[i][1].OutputFor each test case, your program should output the maximal difference between two matrices (in a separate line).ExampleInput:1\r\n3 3 3 3 1 1\r\n1\r\n2\r\n3Output:260",
  "sample_input": "Input:1\r\n3 3 3 3 1 1\r\n1\r\n2\r\n3Output:260",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/MATRIX2",
  "scraped_at": "2025-08-17 00:33:06"
}
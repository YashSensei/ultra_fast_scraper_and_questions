{
  "problem_code": "problems",
  "title": "History of Languages",
  "tags": [],
  "text": "We are examining two specific classes of languages (a possibly infinite set of\r\nstrings) in this problem. Fortunately (or maybe unfortunately), we are not given the\r\nstrings contained in each language directly, rather we are given two deterministic\r\nfinite automatons that describe such languages.Your task here is simple: to determine if the languages described by the two\r\nautomatons are the same.For those of you who are unfamiliar with the concept of deterministic finite\r\nautomata, you may use the following information:A deterministic finite automata (DFA) is a 5-tuple, (S, Σ, T, s, A), consisting of:a finite set of states (S)a finite set called the alphabet (Σ)a transition function (T : S × Σ→S)a start state (s ∈ S)a set of accept states (A ⊆ S)Let M be a DFA such that M = (S, Σ, T, s, A), and X = x0x1... xnbe a string over\r\nthe alphabet Σ. M accepts the string X if a sequence of states, r0, r1... rn, exists in S\r\nwith the following conditions:r0= sri + 1= T(ri, xi), for i = 0 ... n - 1rn∈ A.- WikipediaInputThere are multiple test cases in the input file.The first line of each test case is one integer, T (2 ≤ T ≤ 26), the size of the\r\nalphabet. In each test case, the description of automaton A comes before that of\r\nautomaton B. The description of each automaton starts with one line containing N\r\n(1 ≤ N ≤ 2000), the number of states in the automaton, followed by N lines, each line\r\nof the format: F, X0, X1... XT-1, (F ∈ {0, 1}, -1 ≤ Xi< N). If F = 1, then the state is an\r\naccepting state; also, if Xi= -1, it means that the state has no corresponding\r\ntransition available for character i. The start state of both finite automatons will\r\nalways be state 0.Two successive test cases are separated by a blank line. A case with a single 0\r\nindicates the end of the input file, and should not be processed by your program.OutputFor each test case, please print \"Yes\" if the two languages described by the\r\nautomatons are equivalent; output \"No\" otherwise.ExampleInput:2\r\n3\r\n1 -1 1\r\n0 -1 2\r\n0 -1 0\r\n2\r\n1 -1 1\r\n0 -1 0\r\n\r\n3\r\n4\r\n1 -1 -1 1\r\n1 -1 -1 2\r\n1 -1 -1 3\r\n1 -1 -1 1\r\n2\r\n1 -1 -1 1\r\n1 -1 -1 0\r\n\r\n0Output:Case #1: No\r\nCase #2: Yes",
  "sample_input": "Input:2\r\n3\r\n1 -1 1\r\n0 -1 2\r\n0 -1 0\r\n2\r\n1 -1 1\r\n0 -1 0\r\n\r\n3\r\n4\r\n1 -1 -1 1\r\n1 -1 -1 2\r\n1 -1 -1 3\r\n1 -1 -1 1\r\n2\r\n1 -1 -1 1\r\n1 -1 -1 0\r\n\r\n0Output:Case #1: No\r\nCase #2: Yes",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/HISTORY",
  "scraped_at": "2025-08-17 00:33:46"
}
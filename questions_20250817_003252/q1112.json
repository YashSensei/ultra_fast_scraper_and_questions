{
  "problem_code": "problems",
  "title": "A short vacation in Disneyland",
  "tags": [],
  "text": "After a lot of exams at school, Amber and his friends Ahyangyi, Dragon have a short vacation in Hong Kong Disneyland. Many interesting places they want to visit there: resort, castle,... . In each place and between them, there are special bidirectional rails, so that the visitors can drive a small special car, go around and have a sightseeing tour. This rail system is quite optimal it has tree shape ! Each time, you start a new route (or you can call it \"path\") with a car, you must purchase a new ticket.Amber and his friends surely want to visit all places, and each place exactly once, so bored to visit one place many times. But the trouble is they don't carry much money. So Amber thinks about a good way to purchase as small number of tickets as possible (i.e. minimal number of routes). We don't care how they can switch cars during their trip.Now you're given maps of the Disneyland, please help them to find an optimal solution.Take a look at the figure below:There are many optimal solutions here and Amber must purchase at least 3 tickets, for 3 disjoint routes. Two possible solutions are:Solution 1:1-st route: they visit 1 2 32-nd route: they visit 43-rd route: they visit 5 6 7Solution 2:1-st route: they visit 1 2 4 6 52-nd route: they visit 33-rd route: they visit 7InputThere may be many maps in one input file. The first line of file is number of mapsT(0 < T ≤ 10).\r\nThe following line is blank. Then, there are the descriptions ofTmaps.For each map, the first line contains one integerN– number of places in the Disneyland\r\n(0 < N ≤ 10000). We number places from 1 to N. Next N-1 lines contain N-1 rails between places – Each line contains a pair (u, v) means\r\nthere is a rail between place u and place v (1 ≤ u, v ≤ N).There is a blank line after each description.OutputFor each map, the first line, write minimal number of routesK.\r\nNextKlines, show out the routes in your solution, each has form u[1] u[2] ... u[m], means the route starts at\r\nplace u[1] then visits place u[2]... ends at place u[m]. So between 2 consecutive places in each route must have\r\na rail. If there are many solutions, any of them will be accepted.There is no blank line after each case.ExampleInput:1\r\n\r\n7\r\n1 2\r\n2 3\r\n2 4\r\n4 6\r\n5 6\r\n6 7Output:3\r\n1 2 3\r\n4\r\n5 6 7",
  "sample_input": "Input:1\r\n\r\n7\r\n1 2\r\n2 3\r\n2 4\r\n4 6\r\n5 6\r\n6 7Output:3\r\n1 2 3\r\n4\r\n5 6 7",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/PT07F",
  "scraped_at": "2025-08-17 00:33:25"
}
{
  "problem_code": "problems",
  "title": "Family",
  "tags": [],
  "text": "We want to find out how much related are the members of a family of monsters.\r\nEach monster has the same number of genes but the genes themselves may differ\r\nfrom monster to monster. It would be nice to know how many genes any two given\r\nmonsters have in common. This is impossible, however, since the number of genes\r\nis very large. Still, we do know the family tree (well, not actually a tree,\r\nbut you cannot really blame them, these are monsters, right?) and we do know\r\nhow the genes are inherited so we can estimate the number of common genes quite\r\nwell.The inheritance rule is very simple: if a monster C is a child of monsters A\r\nand B then each gene of C is identical to the corresponding gene of either A or\r\nB, each with probability 50%. Every gene of every monster is inherited\r\nindependently.Let us define the degree of relationship of monsters X and Y as the expected\r\nnumber of common genes. For example consider a family consisting of two\r\ncompletely unrelated (i.e. having no common genes) monsters A and B and their\r\ntwo children C and D. How much are C and D related? Well, each of C's genes\r\ncomes either from A or from B, both with probability 50%. The same is true for\r\nD. Thus, the probability of a given gene of C being the same as the\r\ncorresponding gene of D is 50%. Therefore the degree of relationship of C and D\r\n(the expected number of common genes) is equal to 50% of all the genes. Note\r\nthat the answer would be different if A and B were related. For if A and B had\r\ncommon genes, these would be necessarily inherited by both C and D.Your task is to write a program that, given a family graph and a list of pairs\r\nof monsters, computes the degree of relationship for each of these pairs.TaskWrite a program that:reads the description of a family and a list of pairs of its members from the\r\n  standard input,computes the degree of relationship (in percentages) for each pair on the list,writes the result to the standard output.InputThe input begins with the integer t, the number of test cases. Then t test\r\ncases follow.For each test case the first line of the input contains two integers n and k\r\nseparated by a single space. Integer n (2 ≤ n ≤ 300) is the number of\r\nmembers in a family. Family members are numbered arbitrarily from 1 to n.\r\nInteger k (0 ≤ k ≤ n - 2) is the number of monsters that do have\r\nparents (all the other monsters were created by gods and are completely\r\nunrelated to each other).Each of the next k lines contains three different integers a, b, c separated by\r\nsingle spaces. The triple a, b, c means that the monster a is a child of\r\nmonsters b and c.The next input line contains an integer m (1 ≤ m < = n2) -\r\nthe number of pairs of monsters on the list. Each of the next m lines contains\r\ntwo integers separated by a single space - these are the numbers of two\r\nmonsters.You may assume that no monster is its own ancestor. You should not make any\r\nadditional assumptions on the input data. In particular, you should not assume\r\nthat there exists any valid sex assignment.OutputFor each test case the output consists of m lines. The i-th line corresponds to\r\nthe i-th pair on the list and should contain single number followed by the\r\npercentage sign. The number should be the exact degree of relationship (in\r\npercentages) of the monsters in the i-th pair. Unsignificant zeroes are not\r\nallowed in the output (please note however that there must be at least one\r\ndigit before the period sign so for example the leading zero in number 0.1 is\r\nsignificant and you cannot print it as .1). Confront the example output for the\r\ndetails of the output format.ExampleSample input:1\r\n7 4\r\n4 1 2\r\n5 2 3\r\n6 4 5\r\n7 5 6\r\n4\r\n1 2\r\n2 6\r\n7 5\r\n3 3Sample output:0%\r\n50%\r\n81.25%\r\n100%Warning: large Input/Output data, be careful with certain languages",
  "sample_input": "Sample input:1\r\n7 4\r\n4 1 2\r\n5 2 3\r\n6 4 5\r\n7 5 6\r\n4\r\n1 2\r\n2 6\r\n7 5\r\n3 3Sample output:0%\r\n50%\r\n81.25%\r\n100%",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/FAMILY",
  "scraped_at": "2025-08-17 00:33:04"
}
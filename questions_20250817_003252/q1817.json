{
  "problem_code": "problems",
  "title": "Glass Beads",
  "tags": [],
  "text": "Once upon a time there was a famous actress. As you may expect, she played\r\nmostly Antique Comedies most of all. All the people loved her. But she was not\r\ninterested in the crowds. Her big hobby were beads of any kind. Many bead\r\nmakers were working for her and they manufactured new necklaces and\r\nbracelets every day. One day she called her mainInspector of Bead\r\nMakers(IBM) and told him she wanted a very long and special\r\nnecklace.The necklace should be made of glass beads of different sizes connected\r\nto each other but without any thread running through the beads, so that\r\nmeans the beads can be disconnected at any point. The actress chose the\r\nsuccession of beads she wants to have and the IBM promised to make the\r\nnecklace. But then he realized a problem. The joint between two neighbouring\r\nbeads is not very robust so it is possible that the necklace will get torn\r\nby its own weight. The situation becomes even worse when the necklace is\r\ndisjoined. Moreover, the point of disconnection is very important. If there\r\nare small beads at the beginning, the possibility of tearing is much higher\r\nthan if there were large beads. IBM wants to test the robustness of a\r\nnecklace so he needs a program that will be able to determine the worst\r\npossible point of disjoining the beads.The description of the necklace is a stringA =\r\na1a2... amspecifying sizes of the particular beads, where the last characteramis considered to precede charactera1in circular fashion.The disjoint pointiis said to be worse than the disjoint\r\npointjif and only if the stringaiai+1... ana1...\r\nai-1is lexicografically smaller than the stringajaj+1... ana1...\r\naj-1.\r\nStringa1a2... anis\r\nlexicographically smaller than the stringb1b2... bnif and only if there\r\nexists an integeri, i <= n, so thataj=bj, for eachj, 1 <= j <\r\niandai< bi.InputThe input consists ofNcases. The first line of the input\r\ncontains only positive integerN. Then follow the cases. \r\nEach case consists of exactly one line containing necklace description.\r\nMaximal length of each description is 10000 characters. \r\nEach bead is represented by a lower-case character of \r\nthe English alphabet (a--z), wherea < b   ...   z.OutputFor each case, print exactly one line containing\r\nonly one integer -- number of the\r\nbead which is the first at the worst possible disjoining, i.e. suchi, that the stringA[i]is lexicographically smallest\r\namong all thenpossible disjoinings of a necklace. If there are\r\nmore than one solution, print the one with the lowesti.ExampleInput:4\r\nhelloworld\r\namandamanda\r\ndontcallmebfu\r\naaabaaaOutput:10\r\n11\r\n6\r\n5",
  "sample_input": "Input:4\r\nhelloworld\r\namandamanda\r\ndontcallmebfu\r\naaabaaaOutput:10\r\n11\r\n6\r\n5",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/BEADS",
  "scraped_at": "2025-08-17 00:33:43"
}
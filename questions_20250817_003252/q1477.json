{
  "problem_code": "problems",
  "title": "Jalil Got TLE",
  "tags": [],
  "text": "Ananta Jalil is a multi talented person. He can make any task possible which is impossible to others. Recently he has learned programming basic. In a problem, he submitted the following solution:#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    for(int tc = 1; tc <= t; ++tc) {\r\n        int a, b, c;\r\n        scanf(\"%d %d %d\", &a, &b, &c);\r\n        long long result = 0;\r\n        for(int i = 1; i <= a; ++i) {\r\n            for(int j = 1; j <= b; ++j) {\r\n                for(int k = 1; k <= c; ++k) {\r\n                    result += j * k;\r\n                }\r\n            }\r\n        }\r\n        printf(\"Case %d: %lld\\n\", tc, result);\r\n    }\r\n    return 0;\r\n}But he got TLE (Time Limit Exceeded) as he is novice in programming. Thatâ€™s why his solution was not efficient. So you are here to write an optimized solution for Jalil which will give the same output.InputThe first line of input will contain a positive integer T denoting the number of test cases.In each test case, there will be 3 positive integers a, b and c.ConstraintsT <= 1000a <= 30b <= 100000c <= 10000OutputFor each test case, print the output as same as the above program.ExampleInput3\r\n1 4 3\r\n3 4 2\r\n143 342 777OutputCase 1: 60\r\nCase 2: 90\r\nCase 3: 2535110464887",
  "sample_input": "#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    for(int tc = 1; tc <= t; ++tc) {\r\n        int a, b, c;\r\n        scanf(\"%d %d %d\", &a, &b, &c);\r\n        long long result = 0;\r\n        for(int i = 1; i <= a; ++i) {\r\n            for(int j = 1; j <= b; ++j) {\r\n                for(int k = 1; k <= c; ++k) {\r\n                    result += j * k;\r\n                }\r\n            }\r\n        }\r\n        printf(\"Case %d: %lld\\n\", tc, result);\r\n    }\r\n    return 0;\r\n}",
  "sample_output": "3\r\n1 4 3\r\n3 4 2\r\n143 342 777",
  "link": "https://www.spoj.com/problems/JGTLE",
  "scraped_at": "2025-08-17 00:33:38"
}
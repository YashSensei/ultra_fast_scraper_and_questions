{
  "problem_code": "problems",
  "title": "B",
  "tags": [],
  "text": "B - Stock ChartsYou're in the middle of writing your newspaper's end-of-year economics summary, and you've decided that you want to show a number of charts to demonstrate how different stocks have performed over the course of the last year. You've already decided that you want to show the price ofndifferent stocks, all at the samekpoints of the year.Asimple chartof one stock's price would draw lines between the points (0, price0), (1, price1), ... , (k-1, pricek-1), where priceiis the price of the stock at theith point in time.In order to save space, you have invented the concept of anoverlaid chart. An overlaid chart is the combination of one or more simple charts, and shows the prices of multiple stocks (simply drawing a line for each one). In order to avoid confusion between the stocks shown in a chart, the lines in an overlaid chart may not cross or touch.Given a list ofnstocks' prices at each ofktime points, determine the minimum number of overlaid charts you need to show all of the stocks' prices.InputThe first line of input will contain a single integerT, the number of test cases.  After this will followTtest cases on different lines, each of the form:n kprice0,0price0,1... price0,k-1price1,0price1,1... price1,k-1...pricen-1,0pricen-1,1... pricen-1,k-1Where pricei,jis an integer, the price of theith stock at timej.OutputFor each test case, a single line containing \"Case #X: Y\", whereXis the number of the test-case (1-indexed) andYis the minimum number of overlaid charts needed to show the prices of all of the stocks.Limits1 ≤T≤ 1002 ≤k≤ 250 ≤pricei,j≤ 10000001 ≤n≤ 16SampleInput:3\r\n3 4\r\n1 2 3 4\r\n2 3 4 6\r\n6 5 4 3\r\n3 3\r\n5 5 5\r\n4 4 6\r\n4 5 4\r\n5 2\r\n1 1\r\n2 2\r\n5 4\r\n4 4\r\n4 1Output:Case #1: 2\r\nCase #2: 3\r\nCase #3: 2",
  "sample_input": "n kprice0,0price0,1... price0,k-1price1,0price1,1... price1,k-1...pricen-1,0pricen-1,1... pricen-1,k-1",
  "sample_output": "Input:3\r\n3 4\r\n1 2 3 4\r\n2 3 4 6\r\n6 5 4 3\r\n3 3\r\n5 5 5\r\n4 4 6\r\n4 5 4\r\n5 2\r\n1 1\r\n2 2\r\n5 4\r\n4 4\r\n4 1Output:Case #1: 2\r\nCase #2: 3\r\nCase #3: 2",
  "link": "https://www.spoj.com/problems/HASTOCK",
  "scraped_at": "2025-08-17 00:33:19"
}
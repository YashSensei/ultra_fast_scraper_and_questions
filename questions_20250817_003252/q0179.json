{
  "problem_code": "problems",
  "title": "Board",
  "tags": [],
  "text": "RishiKumarspends most of his time in solving querying problems. When solving a 2D querying problem he got exhausted and he needs the help of someone. Yes he got!! ..Karthiis in search of his girl and asked Rishi whether he saw his girl on his way. Rishi replied he knew where she has gone but he will disclose the truth if Karthi solve this bloody querying problem. Help Karthi to solve this!!!!Given two 2D arrays X and Y. Maximum size of X and Y is 500. (500 × 500)There are 3 operations (Three types of queries)0x1 y1 x2 y2 - Swaps the contents of the rectangle given by the points (x1, y1) and (x2, y2) of X and Y.1x1 y1 x2 y2 - Print the sum of all elements in rectangle given by points (x1, y1) and (x2, y2) of the array X.2x1 y1 x2 y2 - Print the sum of all elements in rectangle given by points (x1, y1) and (x2, y2) of the array Y.(Points (x1, y1) and (x2, y2) inclusive.)(x1, y1) - Top left point of the rectangle and (x2, y2) – Bottom right point of the rectangle.InputThe first line of the input file contains N – Dimension of the array (It is clear that array is square array i.e. length = breadth). The next N lines contains N integers per line separated by space which are the elements of array X. The next N lines contains N integers per line separated by space which are the elements of the array Y. The next line contains the integer Q – the number of queries. Then each of the following Q lines contains the queries as per the above operations.ConstraintsN ≤ 5000 ≤ XijYij≤ 106Q ≤ 105Array indexing start from[1, 1]to[N, N].OutputPrint the result of each query of type 1 and type 2 line by line.ExampleInput:5\r\n1 2 3 4 5\r\n6 7 8 9 0\r\n1 2 3 4 5\r\n6 7 8 9 0\r\n9 1 2 3 4\r\n1 1 1 1 1\r\n1 1 1 1 1\r\n1 1 1 1 1\r\n1 1 1 1 1\r\n1 1 1 1 1\r\n4\r\n1 1 1 4 4\r\n0 1 1 4 4\r\n1 1 1 4 4\r\n2 1 1 4 4Output:80\r\n16\r\n80Warning: Huge I/O, make your I/O fast.",
  "sample_input": "Input:5\r\n1 2 3 4 5\r\n6 7 8 9 0\r\n1 2 3 4 5\r\n6 7 8 9 0\r\n9 1 2 3 4\r\n1 1 1 1 1\r\n1 1 1 1 1\r\n1 1 1 1 1\r\n1 1 1 1 1\r\n1 1 1 1 1\r\n4\r\n1 1 1 4 4\r\n0 1 1 4 4\r\n1 1 1 4 4\r\n2 1 1 4 4Output:80\r\n16\r\n80",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/ITRIX_D",
  "scraped_at": "2025-08-17 00:33:19"
}
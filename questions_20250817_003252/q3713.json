{
  "problem_code": "problems",
  "title": "Mega Inversions",
  "tags": [],
  "text": "The n^2 upper bound for any sorting algorithm is easy to obtain: just take two elements that are misplaced with respect to each other and swap them. Conrad conceived an algorithm that proceeds by taking not two, but three misplaced elements. That is, take three elements ai > aj > ak with i < j < k and place them in order ak; aj; ai. Now if for the original algorithm the steps are bounded by the maximum number of inversions n(n-1)/2, Conrad is at his wits' end as to the upper bound for such triples in a given sequence. He asks you to write a program that counts the number of such triples.InputThe first line of the input is the length of the sequence, 1 <= n <= 10^5. The next line contains the integer sequence a1, a2 ... an. You can assume that all ai belongs [1; n].OutputOutput the number of inverted triples.ExampleInput:4\r\n3 3 2 1Output:2",
  "sample_input": "Input:4\r\n3 3 2 1Output:2",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/TRIPINV",
  "scraped_at": "2025-08-17 00:34:21"
}
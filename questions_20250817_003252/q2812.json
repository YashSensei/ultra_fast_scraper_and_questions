{
  "problem_code": "problems",
  "title": "Jumping Joey",
  "tags": [],
  "text": "Please read the problem statement carefully. Mathematical notations and bunch of examples are provided to make the statement friendly.Once upon a time, there lived a frog named Joey. He has a long pond beside his house. There are lots of lily pads there, and he likes to jump from one pad to another. He hates to wet himself. Let’s help Joey to cross the pond. For the sake of simplicity, let’s assume the pond to be a line segment of lengthL. On this line segment there arenlily pads. Let’s enumerate the lily pads from left to right, that is the leftmost pad is number1, second one from the left is number2and so on. At the beginning Joey is at the left end of the pond. Then he moves to the first pad, then to the second pad and so on. At the end he moves from the nth pad to the right end of the pond. There are two ways he can move, jump and swim. He can jump from one place to another if the distance between these two places is no more thanDunit. He can swim any times he wants. But as we already said he does not like to wet himself, so we need to minimize the number of times he swims for going from the left end to the right end.However, the situation is not that simple. There are ropes between every two adjacent places. That is, there is rope between:Left end and first pad.Last pad and right end.Between every two adjacent pads.Let,Pibe thei’th pad (1 <= i <= n),P0be the left end andPn+1be the right end.Ribe the length of the ropeRibetweenPiandPi+1(for0 <= i <= n).Pibe the position ofPi(0 <= i <= n + 1). ObviouslyP0= 0,Pn+1= LandPi<Pi+1,Ri>=Pi+1- Pi(for0 <= i <= n).When Joey is onPihe can pullRiand thenPi+1moves towards Joey. If the ropeRi+1is taut (the length of the rope is equal to the distance between the two pads that the rope is tied with) then this also affectsPi+2andPi+2moves toward him as well (and so on). However, if a rope is not taut then it does not affect later pads. Also if the ropes are taut tillPn+1then there is no movements of the pads at all (since the right end is fixed, that isPn+1is not movable). Let’s try to clarify these statements by some examples.Example 1Let Joey be onP2,P2= 10,P3= 20,P4= 30,P5= 40. AlsoR2=R3=R4= 15. Distance betweenP2-P3,P3-P4andP4-P5are10, but the rope lengths are15. So none of the ropes are taut. Now if Joey pullsR2say by1unit,P3will shift one unit towardsP2(newP3= 19). But this does not affectP4, becauseR3was not taut. Let Joey pulls ropeR24more units (5units in total). ThenP3= 15,P4= 30,P5= 40. NowR3becomes taut sinceP3-P4distance is now:P4- P3= 30 - 15 = 15which is same asR3. So now, if Joey pulls one more unit,P3andP4moves together (P5does not, sinceR4is not taut). So the new positions would be:P3= 14,P4= 29,P5= 40.Example 2Let Joey be onP0andn = 1. Position of the only lily padP1is atP1= 10. Let pond lengthL = 20. By definitionP0= 0andP2= L = 20. Also let’s assumeR0= 10,R1= 11. If Joey pullsR0by one unit then:P1= 9. But nowR1is taut. If he pullsR0moreP1will not move, because the rope betweenP1andP2is taut andP2is the right end.Given all the information, you have to figure out minimum number of times Joey has to wet himself in order to go from the left end to the right end. Please note Joey has to move from one place to the next place (he can’t move backward), so he can’t just wet himself once and swim from the left end to the right end.InputFirst line of the input will be a positive integerT(<= 50), number of test cases. Test cases are separated by blank lines. Each case consists of 3 lines. First line contains two positive integersn(<= 1,000) andD(<= 10^9). Second line containsn + 2integers:P0,P1...Pn+1. Third line containsn + 1positive integersR0,R1...Rn. None of thePiandRiwill be more than10^9. You may assume that all of these given values will satisfy all the constraints in the statement. Please note there may be one or more spaces/new lines separating adjacent lines/numbers.OutputFor each of the tests print the case number and the answer.ExampleInput:5\r\n1 10\r\n0 10 20\r\n10 10\r\n\r\n1 10\r\n0 11 20\r\n11 10\r\n\r\n1 10\r\n0 11 20\r\n11 9\r\n\r\n1 5\r\n0 10 20\r\n20 20\r\n\r\n1 5\r\n0 10 20\r\n20 12Output:Case 1: 0\r\nCase 2: 0\r\nCase 3: 1\r\nCase 4: 1\r\nCase 5: 2",
  "sample_input": "Input:5\r\n1 10\r\n0 10 20\r\n10 10\r\n\r\n1 10\r\n0 11 20\r\n11 10\r\n\r\n1 10\r\n0 11 20\r\n11 9\r\n\r\n1 5\r\n0 10 20\r\n20 20\r\n\r\n1 5\r\n0 10 20\r\n20 12Output:Case 1: 0\r\nCase 2: 0\r\nCase 3: 1\r\nCase 4: 1\r\nCase 5: 2",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/AR2015PF",
  "scraped_at": "2025-08-17 00:34:01"
}
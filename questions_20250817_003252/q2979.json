{
  "problem_code": "problems",
  "title": "NEO",
  "tags": [],
  "text": "Given array with n integer elements. We divide it into several part (may be 1), each part is a consecutive of elements. TheNEO valuein that case is computed by: Sum of value of eachpart. Value of apartis sum all elements in this part multiple by its length.Example:We have array: [ 2 3 -2 1 ]. If we divide it look likes: [2 3] [-2 1]. Then NEO = (2 + 3) × 2 + (-2 + 1) × 2 = 10 - 2 = 8.Because there are many ways to divide an array into several part, so we can get many of NEO value. Your task is find the NEO with maximum value.InputFirst line: T (number of test case, T ≤ 10)For each of test case:+ First line: n (1 ≤ n ≤ 105)+ Second line: a[1], a[2] ... a[n] (-106≤ a[i] ≤ 106)OutputEach testcase print theExampleInput:14\r\n1 2 -4 1Output:3",
  "sample_input": "Input:14\r\n1 2 -4 1Output:3",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/NEO2",
  "scraped_at": "2025-08-17 00:34:30"
}
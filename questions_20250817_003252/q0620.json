{
  "problem_code": "problems",
  "title": "D",
  "tags": [],
  "text": "As we all know, there is a big difference between polynomials of degree 4 and those of degree 5. The question of the non-existence of a closed formula for the roots of general degree 5 polynomials produced the famous Galois theory, which, as far as the author sees, bears no relation to our problem here.We consider only the multi-variable polynomials of degree up to 4, over 26 variables, represented by the set of 26 lowercase English letters. Here is one such polynomial:aber + aab + cGiven a stringS, we evaluate the polynomial on it. The evaluation givesp(S) as follows: Each variable is substituted with the number of appearances of that letter inS.For example, take the polynomial above, and letS= \"abracadabra edgar\". There are six a's, two b's, one c, one e, and three r's. Sop(S) = 6 * 2 * 1 * 3 + 6 * 6 * 2 + 1 = 109.Given a dictionary of distinct words that consist of only lower case letters, we call a stringSad-phraseifS = \"S1S2S3... Sd\",where Siis any word in the dictionary, for 1 ≤ i ≤ d. i.e.,Sis in the form ofddictionary words separated with spaces. Given a numberK≤ 10, your task is, for each 1 ≤d≤K, to compute the sum ofp(S) over all thed-phrases. Since the answers might be big, you are asked to compute the remainder when the answer is divided by 10009.InputThe first line contains the number of casesT.Ttest cases follow. The format of each test case is: A line containing an expressionpfor the multi-variable polynomial, as described below in this section, then a space, then follows an integerK. A line with an integern, the number of words in the dictionary. Thennlines, each with a word, consists of only lower case letters. No word will be repeated in the same test case.We always write a polynomial in the form of a sum of terms; each term is a product of variables. We writeatsimply asta's concatenated together. For example,a2bis written asaab. Variables in each term are always lexicographically non-decreasing.OutputFor each test case, output a single line in the formCase #X: sum1sum2... sumKwhereXis the case number starting from 1, and sumiis the sum ofp(S), whereSranges over all i-phrases, modulo 10009.Limits1 ≤T≤ 100.The stringpconsists of one or more terms joined by '+'. It will not start nor end with a '+'. There will be at most 5 terms for eachp.Each term consists at least 1 and at most 4 lower case letters, sorted in non-decreasing order. No two terms in the same polynomial will be the same. Each word is non-empty, consists only of lower case English letters, and will not be longer than 50 characters. No word will be repeated in the same dictionary.Small dataset1 ≤n≤ 201 ≤K≤ 5Large dataset1 ≤n≤ 1001 ≤K≤ 10SampleInput:2\r\nehw+hwww 5\r\n6\r\nwhere\r\nwhen\r\nwhat\r\nwhether\r\nwho\r\nwhose\r\na+e+i+o+u 3\r\n4\r\napple\r\norange\r\nwatermelon\r\nbananaOutput:Case #1: 15 1032 7522 6864 253\r\nCase #2: 12 96 576",
  "sample_input": "aber + aab + c",
  "sample_output": "p(S) = 6 * 2 * 1 * 3 + 6 * 6 * 2 + 1 = 109.",
  "link": "https://www.spoj.com/problems/HAALPHA",
  "scraped_at": "2025-08-17 00:33:21"
}
{
  "problem_code": "problems",
  "title": "Fibonacci extraction Sum",
  "tags": [],
  "text": "Some people may foundFIBOSUMa too easy problem.\r\nWe propose here a useful variation.Fib is the Fibonacci sequence:\r\nFor any positive integer i: if i<2 Fib(i) = i, else Fib(i) = Fib(i-1) + Fib(i-2)InputThe first line of input contains an integerT, the number of test cases.\r\nOn each of the nextTlines, your are given\r\ntree integersc,k,N.OutputPrintSum(Fib(ki+c) foriin [1..N]).\r\n\r\nAs the answer could not fit in a 64-bit container, just output your answer modulo 1000000007.ExampleInput:1\r\n3 5 2Output:254ExplanationsIndex-1 Fib sequence : 1, 1, 2, 3, 5, 8, 13,21, 34, 55, 89, 144,233, 377, 610, 987, ...\r\nWe want the 5*1+3 = 8thand 5*2+3 = 13thones, thus the answer is 21 + 233 = 254.Constraints0 < T <= 60606\r\n0 <= c < k <= 2^15\r\n0 < N <= 10^18The numbersc,k,Nare uniform randomly chosen in their range.\r\n\r\nFor your information, constraints allow 1.3kB of Python3 code to get AC in 6.66s, it could be hard.\r\nA fast C-code can get AC under 0.15s.Warning:Here is Pyramid cluster, you can try thetutorial edition(clone with Cube cluster).Have fun ;-)Edit(2017-02-11) : With compiler changes, my fast C code ends in 0.01s, my Python3 ones in 0.31s. New TL is 0.5s.",
  "sample_input": "Input:1\r\n3 5 2Output:254",
  "sample_output": "0 < T <= 60606\r\n0 <= c < k <= 2^15\r\n0 < N <= 10^18",
  "link": "https://www.spoj.com/problems/FIBOSUM2",
  "scraped_at": "2025-08-17 00:33:24"
}
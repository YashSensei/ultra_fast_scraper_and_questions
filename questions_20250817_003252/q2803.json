{
  "problem_code": "problems",
  "title": "Number of Binary Trees",
  "tags": [],
  "text": "Changu has to deal with a very simple problem. He has to find the number of binary trees of heightnwhere for each node the left subtree is at least as high as the right subtree.NOTE:  The height of the binary tree here is in terms of the nodes, i.e., number of nodes in the path from the root to the deepest leaf node. Hence, the height of a tree with only root node is 1.InputThe first line containsT, the number of test cases. The followingTlines contain a numberN.OutputFor eachNoutput the number of binary trees of heightNwhere for each node the left subtree is at least as high as the right subtree. As the answer can be large, you have to print answer modulus 1000000007ExampleInput:2\r\n1\r\n2Output:1\r\n2ConstraintsT= 1000001 ≤N≤ 10000000",
  "sample_input": "Input:2\r\n1\r\n2Output:1\r\n2",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/VECTAR6",
  "scraped_at": "2025-08-17 00:34:03"
}
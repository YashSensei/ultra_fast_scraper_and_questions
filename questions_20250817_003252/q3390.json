{
  "problem_code": "problems",
  "title": "The Bottom of a Graph",
  "tags": [],
  "text": "We will use the following (standard) definitions from graph theory.\r\nLet $V$ be a nonempty and finite set, its elements being called vertices (or nodes).\r\nLet $E$ be a subset of the Cartesian product $V \\times V$, its elements being called edges.\r\nThen $G = (V, E)$ is called a directed graph.Let $n$ be a positive integer, and let $p = (e_1, \\ldots, e_n)$ be a sequence of length $n$ of edges $e_i \\in E$ such that $e_i = (v_i, v_{i+1})$ for a sequence of vertices ($v_1, \\ldots, v_{n+1}$).\r\nThen $p$ is called a path from vertex $v_1$ to vertex $v_{n+1}$ in $G$ and we say that $v_{n+1}$ is reachable from $v_1$, writing $(v_1 \\to v_{n+1})$.Here are some new definitions.\r\nA node $v$ in a graph $G = (V, E)$ is called a sink, if for every node $w$ in $G$ that is reachable from $v$, $v$ is also reachable from $w$.\r\nThe bottom of a graph is the subset of all nodes that are sinks, i.e., \r\n$\\mathrm{bottom}(G) = \\{v \\in V \\mid \\forall w \\in V : (v \\to w) \\Rightarrow (w \\to v) \\}$.\r\nYou have to calculate the bottom of certain graphs.Input SpecificationThe input contains several test cases, each of which corresponds to a directed graph $G$.\r\nEach test case starts with an integer number $v$, denoting the number of vertices of $G = (V, E)$, where the vertices will be identified by the integer numbers in the set $V = \\{1, \\ldots, v\\}$.\r\nYou may assume that $1 \\le v \\le 5000$.\r\nThat is followed by a non-negative integer $e$ and, thereafter, $e$ pairs of vertex identifiers $v_1, w_1, \\ldots, v_e, w_e$ with the meaning that $(v_i, w_i) \\in E$.\r\nThere are no edges other than specified by these pairs. The last test case is followed by a zero.Output SpecificationFor each test case output the bottom of the specified graph on a single line.\r\nTo this end, print the numbers of all nodes that are sinks in sorted order separated by a single space character.\r\nIf the bottom is empty, print an empty line.Sample Input3 3\r\n1 3 2 3 3 1\r\n2 1\r\n1 2\r\n0Sample Output1 3\r\n2",
  "sample_input": "3 3\r\n1 3 2 3 3 1\r\n2 1\r\n1 2\r\n0",
  "sample_output": "1 3\r\n2",
  "link": "https://www.spoj.com/problems/BOTTOM",
  "scraped_at": "2025-08-17 00:34:28"
}
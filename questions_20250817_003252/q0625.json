{
  "problem_code": "problems",
  "title": "Another Sorting Algorithm",
  "tags": [],
  "text": "Dexter keeps doing strange things with numbers. Yesterday he found a new algorithm to sort a sequence of numbers and he implemented the following pseudocode to sort the sequence of N numbers (0-based) in ascending order:Seq = Given sequence of N numbers\r\n\r\n    swap(i, j)\r\n    {\r\n        temp = Seq[i]\r\n        Seq[i] =Seq[j]\r\n        Seq[j] = temp\r\n    }\r\n\r\n    reverse(i, j)\r\n    {\r\n        Do for k from i to (i+j-1)/2\r\n            swap(k, i+j-k)\r\n    }\r\n\r\n    sort()\r\n    {\r\n        Do for i from 0 to N-1\r\n            Do for j from i+1 to N-1\r\n                if (Seq[i] > Seq[j]) then reverse(i, j)\r\n    }However unknown to Dexter, his sister Dee Dee added another loop inside the outer loop so that the changed sort function now looks like:sort()\r\n    {\r\n        Do for i from 0 to N-1\r\n            Do for j from i+1 to N-1\r\n                if (Seq[i] > Seq[j]) then reverse(i, j)\r\n            Do for j from N-2 to i+2\r\n                reverse(i+1, j)\r\n    }When today Dexter tested his program he was frustrated to find that the program was sorting the numbers but it was taking more time than it should (DeeDee's plans always work!)You have been asked to help estimate the time taken. Given the sequence of numbers that Dexter wants to sort, your job is to find the number of times the swap function has been called.InputFirst line contains the number N, the size of the sequence to be sorted. N lines follow, each containing a single integer (the (i)th of these lines contains the value Seq[i].)OutputOutput a single number representing the number of times the swap function has been called.ExampleInput:5\r\n1\r\n2\r\n3\r\n4\r\n5Output:4Constraints1 ≤ N ≤ 40000 ≤ Seq[i] ≤ 1,000,000,000",
  "sample_input": "Seq = Given sequence of N numbers\r\n\r\n    swap(i, j)\r\n    {\r\n        temp = Seq[i]\r\n        Seq[i] =Seq[j]\r\n        Seq[j] = temp\r\n    }\r\n\r\n    reverse(i, j)\r\n    {\r\n        Do for k from i to (i+j-1)/2\r\n            swap(k, i+j-k)\r\n    }\r\n\r\n    sort()\r\n    {\r\n        Do for i from 0 to N-1\r\n            Do for j from i+1 to N-1\r\n                if (Seq[i] > Seq[j]) then reverse(i, j)\r\n    }",
  "sample_output": "sort()\r\n    {\r\n        Do for i from 0 to N-1\r\n            Do for j from i+1 to N-1\r\n                if (Seq[i] > Seq[j]) then reverse(i, j)\r\n            Do for j from N-2 to i+2\r\n                reverse(i+1, j)\r\n    }",
  "link": "https://www.spoj.com/problems/IITD1",
  "scraped_at": "2025-08-17 00:33:11"
}
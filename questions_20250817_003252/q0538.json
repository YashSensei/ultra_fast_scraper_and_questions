{
  "problem_code": "problems",
  "title": "Primitive Root",
  "tags": [],
  "text": "In the field of Cryptography, prime numbers play an important role. We are interested in a scheme called \"Diffie-Hellman\" key exchange which allows two communicating parties to exchange a secret key. This method requires a prime numberpandrwhich is a primitive root of p to be publicly known. For a prime number p, r is a primitive root if and only if it's exponents r, r2, r3... rp-1are distinct (mod p).Cryptography Experts Group (CEG) is trying to develop such a system. They want to have a list of prime numbers and their primitive roots. You are going to write a program to help them. Given a prime number p and another integer r < p, you need to tell whether r is a primitive root of p.InputThere will be multiple test cases. Each test case starts with two integersp(p < 231) andn(1 ≤ n ≤ 100) separated by a space on a single line. p is the prime number we want to use and n is the number of candidates we need to check. Then n lines follow each containing a single integer to check. An empty line follows each test case and the end of test cases is indicated by p=0 and n=0 and it should not be processed. The number of test cases is at most 60.OutputFor each test case print \"YES\"  (quotes for clarity) if r is a primitive root of p and \"NO\" (again quotes for clarity) otherwise.ExampleInput:5 2\r\n3\r\n4\r\n\r\n7 2\r\n3\r\n4\r\n\r\n0 0Output:YES\r\nNO\r\nYES\r\nNOExplanationIn the first test case  31, 32, 33and 34are respectively 3, 4, 2 and 1 (mod 5). So, 3 is a primitive root of 5.41, 42, 43and 44are respectively 4, 1, 4 and 1 respectively. So, 4 is not a primitive root of 5.",
  "sample_input": "Input:5 2\r\n3\r\n4\r\n\r\n7 2\r\n3\r\n4\r\n\r\n0 0Output:YES\r\nNO\r\nYES\r\nNO",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/PROOT",
  "scraped_at": "2025-08-17 00:33:17"
}
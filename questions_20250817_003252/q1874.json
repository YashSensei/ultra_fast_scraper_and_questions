{
  "problem_code": "problems",
  "title": "A Kleene Implementation",
  "tags": [],
  "text": "Thor, the Norse god of thunder, was shopping for groceries when he noticed a sale on Kleenex brand tissues. This got him thinking about Kleene’s recursion theorem and its application to quines in functional programming languages. As this gave him a headache, he instead turned his attention to how one might recognise regular expressions with Kleene stars on a Turing machine. Unfortunately, this just made his headache worse. So he took out a slip of paper, jotted down a brainf**k program to handle regular expressions containing Kleene plusses, paid for his groceries, and congratulated himself on a job well done.Note:You can use any programming language you want, as long as it is brainf**k.InputThe first line contains an integerT(1 ≤T≤ 1000). Then followTtest cases.For each test case: The first line contains a regular expressionP(1 ≤ |P| ≤ 30). The next line contains an integerQ(1 ≤Q≤ 10). Then followQlines, each containing a stringS(1 ≤ |S| ≤ 100). Finally, there is an empty line at the end of each test case.Each line, including the last, is terminated by a single newline (linefeed) character, which has ASCII value 10.All regular expressions are guaranteed to be valid; in particular,Pmay not start with a plus, and it may not contain two consecutive plusses.Pis a string over the alphabet {a, b, c, d, +}, andSis a string over the alphabet {a, b, c, d}.OutputTlines each containing a string of lengthQ. Theith character of the string indicates whetherSis in the regular language defined byP: 'Y' for a match, and '.' otherwise. Note that we are concerned whetherPmatchesS, as opposed to a substring ofS. In other words, we could insert '^' at the beginning ofPand '$' at the end, and then test for a match using e.g. m// in Perl. See the example for further clarification.ExampleInput:3\r\na\r\n2\r\na\r\naa\r\n\r\na+\r\n2\r\na\r\naa\r\n\r\na+bc\r\n6\r\nabbacadabba\r\naaaabc\r\nabc\r\nbc\r\nabcd\r\nbabcOutput:Y.\r\nYY\r\n.YY...Additional InfoThere are two randomly generated data sets, one withT= 1000 and the other withT= 500. The average value ofQis about 6, the probability of a match is about 0.25, the average length ofPis about 14, and the average length ofSis about 27.My solution at the time of publication has 803 bytes (not golfed) and runs in 0.20s with 2.6M memory footprint.",
  "sample_input": "Input:3\r\na\r\n2\r\na\r\naa\r\n\r\na+\r\n2\r\na\r\naa\r\n\r\na+bc\r\n6\r\nabbacadabba\r\naaaabc\r\nabc\r\nbc\r\nabcd\r\nbabcOutput:Y.\r\nYY\r\n.YY...",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/BFREGEX1",
  "scraped_at": "2025-08-17 00:33:41"
}
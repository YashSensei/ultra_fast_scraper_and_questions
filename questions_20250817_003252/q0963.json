{
  "problem_code": "problems",
  "title": "Draw Mountains",
  "tags": [],
  "text": "You are a member of a team that is working in a new wonderful graphics program.\r\nYour task is to write a module for drawing skylines of mountains. However, for now the\r\nprogram is in beta version, so each skyline is discretized. This means that your module\r\nreceives as input a sequence of integers representing heights. Each pair of consecutive\r\nheights in the sequence may differ by at most 1 and produces a column of output, each\r\ncolumn containing a single character. The particular character to write and its position\r\nin the column depend on the pair of heights. When both heights are equal an underscore\r\n(“ ”) must be printed. If the heigths within the pair increase or decrease, you must write\r\na slash (“/”) or a backslash (“\\”), respectively. The position of the character in the\r\ncolumn is such that the skyline visually respect the given heights.\r\nFor instance, the sequence of heights (1, 2, 3, 2, 3, 3, 2, 1, 0) must produce the skyline shown\r\nin the following figure._\r\n           /\\/ \\\r\n          /     \\\r\n                 \\Notice that when the sequence of heights has C + 1 elements, the corresponding skyline\r\nhas only C columns. Given a sequence of heights, you must draw the skyline according\r\nto the rules given above. See the examples for further clarification.InputThe input contains several test cases, each one described in exactly two lines. The first\r\nline contains an integer C indicating the number of columns of the skyline (1 ≤ C ≤ 70).\r\nThe second line contains C + 1 integers Hi separated by single spaces representing the\r\nsequence of heights (0 ≤ Hi ≤ 30 for 1 ≤ i ≤ C + 1). You may assume that there exist\r\nan height Hi = 0, and that the difference between succesive heights is at most 1 (i.e.\r\n|Hi − Hi+1 | ≤ 1 for 1 ≤ i ≤ C). The last line of the input contains a single −1 and should\r\nnot be processed as a test case.OutputFor each test case output the correponding skyline, followed by a line with exactly three\r\nasterisks (“***”). While writting the skyline, use only regular spaces, newlines, and the\r\nthree characters mentioned in the statement. Ths skyline must be left aligned and it\r\nmust contain exactly C columns. There must be no trailing spaces at the end of printed\r\nlines, neither empty lines.ExampleInput:8\r\n1 2 3 2 3 3 2 1 0\r\n3\r\n1 0 0 1\r\n-1Output:_\r\n /\\/ \\\r\n/     \\\r\n       \\\r\n***\r\n\\_/\r\n***",
  "sample_input": "_\r\n           /\\/ \\\r\n          /     \\\r\n                 \\",
  "sample_output": "Input:8\r\n1 2 3 2 3 3 2 1 0\r\n3\r\n1 0 0 1\r\n-1Output:_\r\n /\\/ \\\r\n/     \\\r\n       \\\r\n***\r\n\\_/\r\n***",
  "link": "https://www.spoj.com/problems/DRAWM",
  "scraped_at": "2025-08-17 00:33:26"
}
{
  "problem_code": "problems",
  "title": "Rockets",
  "tags": [],
  "text": "There are two separate,n-element sets of points of a two dimensional map:RandW.\r\nNo triples of points from the setR∪Wis collinear. Rockets earth-to-earth are located on points from the setR. Enemy objects, which should be destroyed, are located on points from the setW. The rockets may fly only in the straight line and their trajectories cannot intersect. We are about to find for each\r\nrocket a target to destroy.TaskWrite a program which:reads from the standard input coordinates of the points from the setsRandW,finds the set ofnpairwise not-intersecting segments, so that one end\r\n  of each segment belongs to the setR, while the other belongs to the\r\n  setW,writes the result into the standard output.InputThe number of test cases t is in the first line of input, then t test cases follow separated by an empty line.\r\nIn the first line of each test case there is written one integern,1 ≤ n ≤ 10000, equal to the number of elements of the setsRandW.In each of the following2nlines of the input one pair of integer\r\nnumbers from the interval [-10000, 10000] is written. Numbers in each\r\npair are separated\r\nby a single space. They are coordinates of the point on a map (first coordinatex,\r\ntheny). The firstnlines comprise coordinates of the points from\r\nthe setR, the lastnlines comprise the points from the setW.\r\nIn the (i+1)-th line there are coordinates of the pointri,\r\nin the (i+n+1)-th line there are coordinates of the pointwi,1 ≤ i ≤ n.OutputThe output for each test case should consist ofnlines. In thei-th line there\r\nshould be one integerk(i), such that the segmentriwk(i)belongs to the set of segments which your program found.\r\n(This means that the rocket from the pointridestroys an object in the\r\npointwk(i)).ExampleSample input:1\r\n4\r\n0 0\r\n1 5\r\n4 2\r\n2 6\r\n1 2\r\n5 4\r\n4 5\r\n3 1Sample output:2\r\n1\r\n4\r\n3Warning: large Input/Output data, be careful with certain languages",
  "sample_input": "Sample input:1\r\n4\r\n0 0\r\n1 5\r\n4 2\r\n2 6\r\n1 2\r\n5 4\r\n4 5\r\n3 1Sample output:2\r\n1\r\n4\r\n3",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/ROCKETS",
  "scraped_at": "2025-08-17 00:33:21"
}
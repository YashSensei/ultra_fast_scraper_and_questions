{
  "problem_code": "problems",
  "title": "Decoding",
  "tags": [],
  "text": "Chip and Dale have devised an encryption method to hide their (written) text messages. They first\r\nagree secretly on two numbers that will be used as the number of rows (R) and columns (C) in a\r\nmatrix. The sender encodes an intermediate format using the following rules:The text is formed with uppercase letters [A-Z] and.Each text character will be represented by decimal values as follows:= 0, A = 1, B = 2, C = 3 ... Y = 25, Z = 26The sender enters the 5 digit binary representation of the characters’ values in a spiral pattern along\r\nthe matrix as shown below. The matrix is padded out with zeroes (0) to fill the matrix completely. For\r\nexample, if the text to encode is: \"ACM\" and R=4 and C=4, the matrix would be filled in as follows:A = 00001, C = 00011, M = 01101\r\n         (one extra 0)The bits in the matrix are then concatenated together in row major order and sent to the receiver.\r\nThe example above would be encoded as: 0000110100101100InputThe first line of input contains a single integer N, (1 ≤ N ≤ 1000) which is the number of datasets that\r\nfollow.Each dataset consists of a single line of input containing R (1 ≤ R ≤ 20), a space, C (1 ≤ C ≤ 20),\r\na space, and a string of binary digits that represents the contents of the matrix (R × C binary digits).\r\nThe binary digits are in row major order.OutputFor each dataset, you should generate one line of output with the following values: The dataset\r\nnumber as a decimal integer (start counting at one), a space, and the decoded text message. You\r\nshould throw away any trailing spaces and/or partial characters found while decoding.ExampleInput:4\r\n4 4 0000110100101100\r\n5 2 0110000010\r\n2 6 010000001001\r\n5 5 0100001000011010110000010Output:1 ACM\r\n2 HI\r\n3 HI\r\n4 HI HO",
  "sample_input": "A = 00001, C = 00011, M = 01101\r\n         (one extra 0)",
  "sample_output": "Input:4\r\n4 4 0000110100101100\r\n5 2 0110000010\r\n2 6 010000001001\r\n5 5 0100001000011010110000010Output:1 ACM\r\n2 HI\r\n3 HI\r\n4 HI HO",
  "link": "https://www.spoj.com/problems/GNY07D",
  "scraped_at": "2025-08-17 00:33:15"
}
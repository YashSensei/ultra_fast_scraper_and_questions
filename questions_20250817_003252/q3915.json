{
  "problem_code": "problems",
  "title": "Periodic function, trip 2",
  "tags": [],
  "text": "Milankovitch's cycle theory  is an example with cumulative effect of several periodic functions.\r\nWe can study past climatic patterns on Earth through orbital forcing.Let us consider periodic functions fromZtoR.deff(x):return[4,-6,7][x%3]# (with Python notations)# 4, -6, 7, 4, -6, 7, 4, -6, 7, 4, -6, 7, 4, -6, 7, ...For example,fis a 3-periodic function, withf(0) =f(3) =f(6) =f(9) = 4. \r\nWith a simplified notation we will denote f as [4, -6, 7]. \r\n\r\n\r\nFor two periodic functions (with integral period), the quotient of periods will be rational,\r\nin that case it can be shown that the sum of the functions is also a periodic function.\r\nThus, the set of all such functions is a vector space overR.Our interest, in this problem, will be the smallest common period of sums of periodic functions whose period is an integer, bounded by someN.InputThe first line contains an integerT, the number of test cases.\r\nOn the nextTlines, you will be given two integersNandM.\r\nConsider the family of any finite sum of (n-periodic functions withnin [1..N] ).\r\nAll those functions share a common smallest period.OutputPrint the smallest common period of that family.\r\n\tAs the answer can get very big, simply output it moduloM.ExampleInput:3\r\n2 10\r\n3 100\r\n4 7Output:2\r\n6\r\n5ExplanationThe first case is trivial.\r\nFor the second case, for example iff= [0] + [5, π] + [0, -e , 1] thenfcan be written as [5, π-e, 6, π, 5-e, π+1] and is 6-periodic ; 6 is smallest common period for any sum ofn-periodic function whennis bounded by 3.\r\nFor the third case, 12%7 is equal to 5.Constraints0 < T < 10^3\r\n0 < N < 10^7\r\n1 < M < 10^9Uniform random input, one input file.InformationConstraints allow my optimized Python code to get AC in 12s, and a poor C code in 4s.\r\nThe curious fact is that on my hardware the corresponding times are quite the same, and I've set the constraints with that in mind... curious for me.Edit 2017-02-11 : with compiler changes, now the two times are similar 3.5s (poor.c) ; 3.57s (good.py). The new TL is set at 7s. It allows JAVA too.",
  "sample_input": "deff(x):return[4,-6,7][x%3]# (with Python notations)# 4, -6, 7, 4, -6, 7, 4, -6, 7, 4, -6, 7, 4, -6, 7, ...",
  "sample_output": "Input:3\r\n2 10\r\n3 100\r\n4 7Output:2\r\n6\r\n5",
  "link": "https://www.spoj.com/problems/PERIOD2",
  "scraped_at": "2025-08-17 00:34:31"
}
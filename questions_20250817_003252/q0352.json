{
  "problem_code": "problems",
  "title": "Icerink",
  "tags": [],
  "text": "A skating competition was organized on the largest icerink in Byteland. The\r\nicerink is a square of size 10000 * 10000. A competitor begins skating\r\nat the START point chosen by referees and his task is to finish sliding\r\nat the FINISH point, also chosen by referees. The points of START and FINISH are different. One\r\ncan slide in directions parallel to the sides of the\r\nicerink. There are some obstacles placed on the icerink. Each obstacle\r\nis a prism, which base is a polygon with sides parallel to the sides of\r\nthe icerink. Each two adjacent sides of the base are always perpendicular.\r\nThe obstacles do not have common points.Each slide finishes up at the point where a competitor, for the first\r\ntime, meets the wall of an obstacle, which is perpendicular to the direction of the\r\nslide. In other words, one can stop only when he crashes on a wall or in the FINISH point.\r\nFalling out of the icerink causes disqualification. Competitor may slide along\r\nwalls of an obstacle.Decide, whether a competitor who slides according to the given rules may reach the finish\r\npoint, assuming he begun sliding from the starting point. If so, what is the minimal number\r\nof slides he needs to do?TaskWrite a program which:reads the description of the icerink, obstacles, and the coordinates of the\r\nstart and finish point from the standard input,verifies, whether a competitor who begins from the starting point and\r\nslides according the rules may reach the finish point, and if so, computes the minimal number\r\nof slides he needs to do,writes the result in the standard output.InputThe number of test cases t is in the first line of input, then t test cases follow separated by an empty line.\r\nWe define a system of coordinates to describe positions of objects\r\non a rink.\r\nThe rink is a square with vertices\r\n(0, 0), (10000, 0), (10000, 10000), (0, 10000). In the first line of each test case\r\nthere are two integersz1andz2separated by a single space, 0 <=z1,z2<= 10000. The pair (z1, z2) denotes coordinates of the START point.\r\nIn the second line of the file there are two integerst1andt2separated by single space, 0 <=t1,t2<= 10000. The pair\r\n(t1, t2) denotes coordinates of the FINISH point. The third line of the file\r\ncontains one integers, 1 <=s<= 2500. This is the number of obstacles. The following lines comprise descriptions\r\nofsobstacles. Each description of an obstacle begins with the line containing one\r\npositive integerrequal to the number of walls (sides of the base) of\r\nthe obstacle. In each of the followingrlines there are two integersxandyseparated by a single space. These are the coordinates of the vertices of the obstacle's base,\r\ngiven in a clockwise order. (i.e. when going around the obstacle in this\r\ndirection the inside is on the left-hand side). The total number of side walls of\r\nthe obstacles does not exceed 10000.OutputYour program should write for each test case:either one word 'NO' if it's impossible to get from the START point to the FINISH pointor the minimal number of slides necessary to get to the FINISH point, if it is possible.ExampleSample input:1\r\n40 10\r\n5 40\r\n3\r\n6\r\n0 15\r\n0 60\r\n20 60\r\n20 55\r\n5 55\r\n5 15\r\n12\r\n30 55\r\n30 60\r\n60 60\r\n60 0\r\n0 0\r\n0 5\r\n55 5\r\n55 35\r\n50 35\r\n50 40\r\n55 40\r\n55 55\r\n6\r\n30 25\r\n15 25\r\n15 30\r\n35 30\r\n35 15\r\n30 15Sample output:4The sample input corresponds to the following situation:These are the possible sequences of slides of length 4:Warning: large Input/Output data, be careful with certain languages",
  "sample_input": "Sample input:1\r\n40 10\r\n5 40\r\n3\r\n6\r\n0 15\r\n0 60\r\n20 60\r\n20 55\r\n5 55\r\n5 15\r\n12\r\n30 55\r\n30 60\r\n60 60\r\n60 0\r\n0 0\r\n0 5\r\n55 5\r\n55 35\r\n50 35\r\n50 40\r\n55 40\r\n55 55\r\n6\r\n30 25\r\n15 25\r\n15 30\r\n35 30\r\n35 15\r\n30 15Sample output:4",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/ICERINK",
  "scraped_at": "2025-08-17 00:33:07"
}
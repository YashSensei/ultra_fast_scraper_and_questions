{
  "problem_code": "problems",
  "title": "Sudoku",
  "tags": [],
  "text": "A Sudoku grid is a 16x16 grid of cells grouped in sixteen 4x4 squares, where some cells are\r\nfilled with letters from A to P (the first 16 capital letters of the English alphabet), as shown in\r\nthe figure. The game is to fill all the empty grid cells with letters from A to P such that each letter\r\nfrom the grid occurs once only in the line, the column, and the 4×4 square it occupies. The initial\r\ncontent of the grid satisfies the constraints mentioned above and guarantees a unique solution.ACOIJABPCGFHDFIEPGELHMJECGIKGABEJDGPJFAECBDPOEFMDLKACOILHPCFABGODJHKJHAPLBPEKAHBKFICFCDHNa) Sudoku gridFPAHMJECNLBDKOGIOJMIANBDPKCGFLHELNDKGFOIJEAHMBPCBGCELKHPOFIMAJDNMFHBELPOACKJGNIDCILNKDGAHBMOPEFJDOGPIHJMFNLECAKBJEKAFCNBGIDPLHOMEBOFPMIJDGHLNKCANCJDHBAEKMOFIGLPHMPLCGKFIAENBDJOAKIGNODLBPJCEFMHKDEMJIFNCHGAOPBLGLBCDPMHEONKJIAFPHNOBALKMJFIDCEGIAFJOECGLDPBHMNKb) SolutionInputThe first line of the input contains an integer K - determining the number of datasets (K <= 10). Each data set encodes a grid and contains 16 strings on 16 consecutive lines as shown in the example input below. The ith string stands for the ith line of the grid, is 16 characters long, and starts from the first position of the line. String characters are from the set {A, B ... P, -}, where – (minus) designates empty grid cells. The data sets are separated by single empty lines.OutputFor each data set in the input print the completed 16×16 Sudoku as specified by the rules above. The program prints the solution of the input encoded grids in the same format and order as used for input. The output for each data set should be separated by single empty lines.ExampleInput:1\r\n--A----C-----O-I\r\n-J--A-B-P-CGF-H-\r\n--D--F-I-E----P-\r\n-G-EL-H----M-J--\r\n----E----C--G---\r\n-I--K-GA-B---E-J\r\nD-GP--J-F----A--\r\n-E---C-B--DP--O-\r\nE--F-M--D--L-K-A\r\n-C--------O-I-L-\r\nH-P-C--F-A--B---\r\n---G-OD---J----H\r\nK---J----H-A-P-L\r\n--B--P--E--K--A-\r\n-H--B--K--FI-C--\r\n--F---C--D--H-N-Output:FPAHMJECNLBDKOGI\r\nOJMIANBDPKCGFLHE\r\nLNDKGFOIJEAHMBPC\r\nBGCELKHPOFIMAJDN\r\nMFHBELPOACKJGNID\r\nCILNKDGAHBMOPEFJ\r\nDOGPIHJMFNLECAKB\r\nJEKAFCNBGIDPLHOM\r\nEBOFPMIJDGHLNKCA\r\nNCJDHBAEKMOFIGLP\r\nHMPLCGKFIAENBDJO\r\nAKIGNODLBPJCEFMH\r\nKDEMJIFNCHGAOPBL\r\nGLBCDPMHEONKJIAF\r\nPHNOBALKMJFIDCEG\r\nIAFJOECGLDPBHMNK",
  "sample_input": "Input:1\r\n--A----C-----O-I\r\n-J--A-B-P-CGF-H-\r\n--D--F-I-E----P-\r\n-G-EL-H----M-J--\r\n----E----C--G---\r\n-I--K-GA-B---E-J\r\nD-GP--J-F----A--\r\n-E---C-B--DP--O-\r\nE--F-M--D--L-K-A\r\n-C--------O-I-L-\r\nH-P-C--F-A--B---\r\n---G-OD---J----H\r\nK---J----H-A-P-L\r\n--B--P--E--K--A-\r\n-H--B--K--FI-C--\r\n--F---C--D--H-N-Output:FPAHMJECNLBDKOGI\r\nOJMIANBDPKCGFLHE\r\nLNDKGFOIJEAHMBPC\r\nBGCELKHPOFIMAJDN\r\nMFHBELPOACKJGNID\r\nCILNKDGAHBMOPEFJ\r\nDOGPIHJMFNLECAKB\r\nJEKAFCNBGIDPLHOM\r\nEBOFPMIJDGHLNKCA\r\nNCJDHBAEKMOFIGLP\r\nHMPLCGKFIAENBDJO\r\nAKIGNODLBPJCEFMH\r\nKDEMJIFNCHGAOPBL\r\nGLBCDPMHEONKJIAF\r\nPHNOBALKMJFIDCEG\r\nIAFJOECGLDPBHMNK",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/SUDOKU",
  "scraped_at": "2025-08-17 00:33:17"
}
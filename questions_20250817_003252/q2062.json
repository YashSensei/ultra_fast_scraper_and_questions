{
  "problem_code": "problems",
  "title": "Yell Classico",
  "tags": [],
  "text": "The Old Yellers, the contestants of the old days of IIUC are going to have a football match with the current contestants. As the yellers are going to be the host of the match, it will be called 'Yell Classico'. As the yellers are always busy in yelling, oops, I mean programming, they have appointed you as the manager of their team. Now, as a manager of the Yeller team, you have to select 11 players for the match fromNplayers.All theNplayers will stand in a line just before the match. Your task will be to select 11 players from them in such a way that the player standing in front is as tall as possible. If there are more than one such team formations, do it in a way where the 2nd player is as tall as possible. If still there is a tie, choose the formation having tallest player in the 3rd position and so on. (Which means, until you can break the tie or reach the 11th position, keep looking in the next position).Note that:You don't have enough time to change the order in which players are standing.If you have tie even after reaching the 11th position, select from any of the tied formations.Players are quite same in their playing abilities, you don't need to bother about that.InputFirst line of input will contain the number of test cases,T< 100.For each test case, there are two lines.The first line containN(number of players, 1 <N< 2000).The second one is a line ofNintegers separated by spaces. The ith integer of this line will specify the height of the ith player. (Heights will not be greater than 109).OutputFor each test case output 'CaseX:', (Xis the case number, starting from 1). Then print the heights of the 11 selected players separated by spaces. If it's not possible to select exactly 11 players, then send the spectators home by printing 'go home!' (Without quotations). See the sample output for exact formatting.ExampleInput:4\r\n15\r\n2 10 8 5 1 5 9 9 3 5 6 6 2 2 8\r\n11\r\n2 6 3 8 7 2 5 3 4 3 3\r\n4\r\n2 7 9 6\r\n12\r\n6 2 3 8 7 2 5 3 4 3 3 10Output:Case 1: 10 8 9 9 3 5 6 6 2 2 8\r\nCase 2: 2 6 3 8 7 2 5 3 4 3 3\r\nCase 3: go home!\r\nCase 4: 6 3 8 7 2 5 3 4 3 3 10Problem Setter:Â Bidhan Roy",
  "sample_input": "Input:4\r\n15\r\n2 10 8 5 1 5 9 9 3 5 6 6 2 2 8\r\n11\r\n2 6 3 8 7 2 5 3 4 3 3\r\n4\r\n2 7 9 6\r\n12\r\n6 2 3 8 7 2 5 3 4 3 3 10Output:Case 1: 10 8 9 9 3 5 6 6 2 2 8\r\nCase 2: 2 6 3 8 7 2 5 3 4 3 3\r\nCase 3: go home!\r\nCase 4: 6 3 8 7 2 5 3 4 3 3 10",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/CLASSICO",
  "scraped_at": "2025-08-17 00:33:45"
}
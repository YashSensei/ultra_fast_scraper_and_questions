{
  "problem_code": "problems",
  "title": "Square Count",
  "tags": [],
  "text": "Little Bobby Roberts, age 8, has been dragged to yet another museum by his parents. While they while\r\naway the hours studying Etruscan pottery and Warhol soup cans, Bobby must depend on himself for\r\nentertainment. Having a mathematical bent, he recently started counting all the square tiles on the\r\nfloors of the museum. He soon realized that the tiles could be grouped into larger squares that needed\r\nto be added to the count. The problem became a bit more complicated when he started counting squares\r\ncontained in multiple rooms, since some squares overlapped both rooms. For example, the two rooms\r\nshown below contain a total of 86 squares: 45 1 × 1 squares, 28 2 × 2 squares and 13 3 × 3 squares.\r\n(Note the opening between the two rooms is only 3 squares wide.)While this helped kill several days’ worth of museum visits, it soon became rather tedious, so Bobby is\r\nnow looking for a program to automate the counting process for him.InputInput will consist of multiple test cases. The first line of each case will be a positive integer n <= 1000\r\nwhich will indicate the number of rooms in the museum. After this will be n lines, each containing a\r\ndescription of one room. Each room will be rectangular in shape and will be described by a line of the\r\nformx1y1x2y2where (x1, y1) and (x2, y2) are opposing corner coordinates (integers) of the room. No two rooms will\r\noverlap, though they may share a side. If the shared side is of length m > 2, then a door of length m−2\r\nexists between the two rooms, centered along the shared length. No square of any size will overlap more\r\nthan two rooms. Allxandyvalues will be <= 1, 000, 000. An input line of n = 0 terminates input and\r\nshould not be processed.OutputFor each test case, output the total number of squares on a single line in the format shown below. All\r\nanswers will fit within a 32-bit integer and cases are enumerated starting at 1.ExampleInput:2\r\n0 0 9 3\r\n10 6 4 3\r\n3\r\n11 20 15 24\r\n11 17 15 20\r\n15 16 20 24\r\n0Output:Case 1: 86\r\nCase 2: 152",
  "sample_input": "Input:2\r\n0 0 9 3\r\n10 6 4 3\r\n3\r\n11 20 15 24\r\n11 17 15 20\r\n15 16 20 24\r\n0Output:Case 1: 86\r\nCase 2: 152",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/SQCOUNT",
  "scraped_at": "2025-08-17 00:33:30"
}
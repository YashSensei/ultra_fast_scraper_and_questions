{
  "problem_code": "problems",
  "title": "Beggars",
  "tags": [],
  "text": "Begging nowadays is an organized profession and team work is extremely important. Beggars target special occasions to maximize revenue, such as Muslim Friday prayers. They wait outside the mosque until the prayer ends and ask people for money as people leave the mosque. In this problem you are to help two beggars to maximize their revenue on Friday after the Friday prayers. These beggars are experienced and know everything they need, specifically they know exactly when each mosque ends the prayer and how much money they will gain if at least one of them stands in front of that mosque when the prayer ends (there is no use if both of them stand at the same mosque).In their town there are n mosques on a straight line and you will be given the x coordinate for each mosque. The time needed for a beggar to travel from one mosque a to another mosque b is |xa-xb| units of time. As you know, these baggers are professionals and take no time to collect the money from a mosque if they happen to be there when the prayer ends, and can immediately start moving to another mosque.Of course the beggars can choose to initially start from any mosque. Your task here is to compute the maximum amount of money they can collect together.Input SpecificationInput contains multiple test cases. Each test case starts with number of mosques 1 ≤ n ≤ 100, followed by n lines. Each line consists of three 32-bits signed integers x, t, and m representing the x-coordinate of the mosque, the time when the prayer ends, and the amount of money that can be collected from this mosque. The input will be terminated when n equals 0 and should not be treated as a test case.Output SpecificationFor each test case you should print a single integer, the maximum amount of money that can be collected by the two beggars.Sample Input3\r\n7 6 19\r\n2 3 18\r\n9 8 13\r\n4\r\n1 4 5\r\n3 4 5\r\n2 5 5\r\n4 5 5\r\n4\r\n1 4 5\r\n3 4 5\r\n2 5 5\r\n5 5 5\r\n0Sample Output50\r\n20\r\n15",
  "sample_input": "Sample Input3\r\n7 6 19\r\n2 3 18\r\n9 8 13\r\n4\r\n1 4 5\r\n3 4 5\r\n2 5 5\r\n4 5 5\r\n4\r\n1 4 5\r\n3 4 5\r\n2 5 5\r\n5 5 5\r\n0Sample Output50\r\n20\r\n15",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/PCPC12H",
  "scraped_at": "2025-08-17 00:34:09"
}
{
  "problem_code": "problems",
  "title": "Large Knapsack",
  "tags": [],
  "text": "Theknapsack problemorrucksack problemis a problem in combinatorial optimization: Given a set of items, each with a weight and a value, determine the number of each item to include in a collection so that the total weight is less than or equal to a given limit and the total value is as large as possible. It derives its name from the problem faced by someone who is constrained by a fixed-size knapsack and must fill it with the most valuable items.Just implement 0/1 Knapsack.InputFirst line contains two integers K and N, where K in the maximum knapsack size and N is the number of items. N lines follow where ithline describes ithitem in the form viand wiwhere viis the value and wiis the weight of ithitem.OutputOutput a single number - maximum value of knapsack. (All operations and the answer are guaranteed to fit in signed 32-bit integer.)Time limit changed to 2s on 02.07.11.ExampleInput:10 3\r\n7 3\r\n8 8\r\n4 6Output:11ConstraintsK ≤ 2000000N ≤ 500Vi≤ 107Wi≤ 107",
  "sample_input": "Input:10 3\r\n7 3\r\n8 8\r\n4 6Output:11",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/LKS",
  "scraped_at": "2025-08-17 00:33:40"
}
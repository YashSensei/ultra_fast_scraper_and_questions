{
  "problem_code": "problems",
  "title": "love and traffic",
  "tags": [],
  "text": "Arjun is very smart, hence hasQvalentines.He lives in the stateAwhich is a matrix of sizeN x M, where each cell(i, j)represents a city. He lives in the city(S1, S2). HisQvalentines live in different cities. He is supposed to attend all his valentines but he can't do so due to constraints of time. So he decides to celebrate this festival of love with the valentine who lives closest to his city.In a single step, he can move from any cell(i, j)to the4neighboring cells i.e.(i+1, j), (i-1, j), (i, j+1)and(i, j-1).But some cities have serious traffic problem. It is impossible to penetrate the traffic in those cities. So Arjun will avoid passing through them while going to his destination. These cities have value*. All other cities have value1.He wants to find out the number of steps required to reach his closest valentine.Since he is more of a philosopher, he struggles with the math. So it's your job now to help him find out.InputThe first line of input contains3space separated integersN,MandQwhereNandMdenotes the dimensions of the matrixA, andQdenotes the number of valentines.Each of the nextNlines contain a string of lengthM, where each character is either1or*as described above.The next line contains2space separated integersS1andS2denoting coordinates of city Arjun lives in.thenQlines follow, each line containing2space separated integersDiandDjdenoting the coordinates of city of that particular valentine.OutputPrint a single integerZdenoting number of steps to reach nearest valentine. If there is no path possible between(S1, S2)and any of(Di, Dj), print-1.ExampleInput:5 4 4\r\n11*1\r\n*11*\r\n*111\r\n1111\r\n111*\r\n2 3\r\n5 1\r\n3 4\r\n2 4\r\n5 1Output:2ExplanationTo reach the nearest city, he takes the following path:(2, 3) → (3, 3) → (3, 4).",
  "sample_input": "Input:5 4 4\r\n11*1\r\n*11*\r\n*111\r\n1111\r\n111*\r\n2 3\r\n5 1\r\n3 4\r\n2 4\r\n5 1Output:2",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/LTRAFFIC",
  "scraped_at": "2025-08-17 00:34:12"
}
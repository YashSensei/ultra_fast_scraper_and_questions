{
  "problem_code": "problems",
  "title": "Minimum Distance",
  "tags": [],
  "text": "Given a weighted tree, you are to find two nodes A and B of the tree (A and B needn't be different), such that the length of the path between A and B is less than or equal to a given integer S, and the maximum distance from each node of the tree to this path is minimum.InputThe first line of the input contains a single integer T, the number of test cases. T blocks follow.For each test case, the first line contains two space-separated integer N (1 ≤ N ≤ 100000) and S (0 ≤ S ≤ 100000000). N-1 lines follow, each contains three integers X (1 ≤ X ≤ N), Y (1 ≤ Y ≤ N) and Z (1 ≤ Z ≤ 1000), denotes that there is an (undirected) edge weighted Z between node X and Y. The input is correct.OutputT lines, each contains a single integer denoted the minimum distance.ExampleInput:2\r\n5 2\r\n1 2 5\r\n2 3 2\r\n2 4 4\r\n2 5 3\r\n8 6\r\n1 3 2\r\n2 3 2\r\n3 4 6\r\n4 5 3\r\n4 6 4\r\n4 7 2\r\n7 8 3Output:5\r\n5Warning: large input/output data, be careful with certain languages",
  "sample_input": "Input:2\r\n5 2\r\n1 2 5\r\n2 3 2\r\n2 4 4\r\n2 5 3\r\n8 6\r\n1 3 2\r\n2 3 2\r\n3 4 6\r\n4 5 3\r\n4 6 4\r\n4 7 2\r\n7 8 3Output:5\r\n5",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/MINDIST",
  "scraped_at": "2025-08-17 00:34:28"
}
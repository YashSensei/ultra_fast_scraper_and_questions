{
  "problem_code": "problems",
  "title": "Timetable",
  "tags": [],
  "text": "You are the owner of a railway system between n cities, numbered by integers \r\n\tfrom 1 to n. Each train travels from the start station to the end station \r\n\taccording to a very specific timetable (always on time), not stopping anywhere \r\n\tbetween. On each station a departure timetable is available. Unfortunately each \r\n\ttimetable contains only direct connections. A passenger that wants to travel \r\n\tfrom city p to city q is not limited to direct connections however - he or she \r\n\tcan change trains. Each change takes zero time, but a passenger cannot change \r\n\tfrom one train to the other if it departs before the first one arrives. People \r\n\twould like to have a timetable of all optimal connections. A connection \r\n\tdeparting from city p at A o'clock and arriving in city q at B o'clock is \r\n\tcalled optimal if there is no connection that begins in p not sooner than at A, \r\n\tends in q not later than at B, and has strictly shorter travel time than the considered connection. We are only interested in connections that \r\n\tcan be completed during same day.TaskWrite a program that:reads the number n and departure timetable for each of n cities from the \r\n\t\tstandard input,creates a timetable of optimal connections from city 1 to city n,writes the answer to the standard output.InputThe input begins with the integer t, the number of test cases. Then t test \r\n\tcases follow.For each test case the first line of the input contains an integer n (2 ≤ n \r\n\t≤ 100000). The following lines contain n timetables for cities 1, 2 ... n \r\n\trespectively.The first line of the timetable description contains only one integer m. Each \r\n\tof the following m lines corresponds to one position in the timetable and \r\n\tcontains: departure time A, arrival time B (A < B) and destination city \r\n\tnumber t (1 ≤ t ≤ n) separated by single spaces. Departure time A and \r\n\tarrival time B are written in format hh : mm, where hh are two digits \r\n\trepresenting full hours (00 ≤ hh ≤ 23) and mm are two digits \r\n\trepresenting minutes (00 ≤ mm ≤ 59). Positions in the timetable are \r\n\tgiven in non-decreasing order according to the departure times. The number of \r\n\tall positions in all timetables does not exceed 1000000.OutputFor each test case the first line of the output contains an integer r - the \r\n\tnumber of positions in the timetable being the solution. Each of the following \r\n\tr lines contains a departure time A and an arrival time B separated by single \r\n\tspace. The time format should be like in the input and positions in the \r\n\ttimetable should be ordered increasingly according to the departure times. If \r\n\tthere is more then one optimal connection with the same departure and arrival \r\n\ttime, your program should output just one.ExampleSample input:1\r\n3\r\n3\r\n09:00 15:00 3\r\n10:00 12:00 2\r\n11:00 20:00 3\r\n2\r\n11:30 13:00 3\r\n12:30 14:00 3\r\n0Sample output:2\r\n10:00 14:00\r\n11:00 20:00Warning: enormous Input/Output data, be careful with certain languages",
  "sample_input": "Sample input:1\r\n3\r\n3\r\n09:00 15:00 3\r\n10:00 12:00 2\r\n11:00 20:00 3\r\n2\r\n11:30 13:00 3\r\n12:30 14:00 3\r\n0Sample output:2\r\n10:00 14:00\r\n11:00 20:00",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/TTABLE",
  "scraped_at": "2025-08-17 00:33:13"
}
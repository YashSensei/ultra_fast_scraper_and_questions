{
  "problem_code": "problems",
  "title": "Love Story 2",
  "tags": [],
  "text": "Last time you helped Rancho getting kisses from Pihu. This time Pihu needs your help in determining the number of, different ways of kissing.Actually the story goes this way.Rancho will fix a certain number of days, sayN(N ≤ 1018). Now Pihu as usual, will kiss Rancho each day, but this time there will be rules for kissing. Rules go below:-Suppose for a certain number of daysN, Pihu needs to learnPdifferent ways of kissing. She can kiss Rancho on every day with any number of kisses (of course less than or equalP), but all the kisses should be different from each other. Also to keep “Kissing of each day” unique, between every pair of days, say dayiand dayj(inot equalj), dayimust have at-least one type of kiss that dayjdoes not have and dayjmust have at-least one type of kiss that dayidoes not have. (Refer explanation below)Help Pihu, determine the minimum number of different ways/types of kissing forNdays – call the minimum number asP.Explanation:Suppose on dayi, Pihu kisses Rancho with a setSi– (k1, k2, k3... km: k1≠ k2≠ k3≠ ... ≠ km) kisses and on dayjwith a setSj– (k1, k2, k3... kl: k1≠ k2≠ k3≠ ... ≠ kl), then there should be at-least one kiin setSithat is not in setSjand there should be at-least one kjin setSjthat is not in setSi. Thus you can considerPas the size of the superset of S1, S2, S3... SN.InputThe first line of input consists of the number of test casesT (T ≤ 100000).Next followsTlines, with each line consisting of one numberN– the number of days(1 ≤ N ≤ 1018).OutputFor each test case print the minimum number of different ways of kissing –Pon separate lines.ExampleInput:3\r\n1\r\n2\r\n3Output:1\r\n2\r\n3",
  "sample_input": "Input:3\r\n1\r\n2\r\n3Output:1\r\n2\r\n3",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/PIHU2",
  "scraped_at": "2025-08-17 00:34:36"
}
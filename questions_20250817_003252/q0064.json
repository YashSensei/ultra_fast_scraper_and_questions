{
  "problem_code": "problems",
  "title": "Little Quilt",
  "tags": [],
  "text": "Little Quiltis a small language introduced by Ravi Sethi in his book ‘Programming Languages’.Here, a restricted version of Little Quilt is presented. The language is defined by the following BNF grammar:< QUILT > ::= A | B | turn(< QUILT >) | sew(< QUILT >,< QUILT >)A and B represent the two primitive quilts. Each primitive quilt corresponds to a matricial arrangement of 2 × 2 characters. turn() and sew() are operations over quilts.The instructionturn(x)turns the quilt x 90 degrees clockwise. The following table illustrates the primitive quilts as well as examples of the effect of theturn()operation:Accordingly, the instructionsew(x,y)sews quilt x to the left of quilt y. Both x and y must have the same height, otherwise an error will be generated. The following figure represents the result ofsew(A,turn(B)):while thesew(turn(sew(B,turn(B))),A)generates an error message.Your job is to build an interpreter of the Little Quilt language.InputThe input file will be a text file containing different Little Quilt expressions, each one ended by a semicolon character (;). Space and new line characters must be ignored; this means that an expression may span several lines.OutputThe output file contains the quilts produced as a result of interpreting the input expressions.Each quilt must be preceded by a line, left aligned, with the formatQuilt i:where i is the quilt number, starting at 1. If the expression interpretation generates and error, the worderrormust be printed.ExampleInput:sew(turn(sew(B,turn(B))),\r\nturn(sew(turn(B),B))) ;sew(turn(sew(B,turn(B))),A);\r\nsew(turn(sew(A,turn(A))),\r\nturn(turn(turn(sew(A,turn(A))))))\r\n;Output:Quilt 1:\r\n||--\r\n||--\r\n--||\r\n--||\r\nQuilt 2:\r\nerror\r\nQuilt 3:\r\n\\\\//\r\n+\\/+\r\n+/\\+\r\n//\\\\",
  "sample_input": "< QUILT > ::= A | B | turn(< QUILT >) | sew(< QUILT >,< QUILT >)",
  "sample_output": "Input:sew(turn(sew(B,turn(B))),\r\nturn(sew(turn(B),B))) ;sew(turn(sew(B,turn(B))),A);\r\nsew(turn(sew(A,turn(A))),\r\nturn(turn(turn(sew(A,turn(A))))))\r\n;Output:Quilt 1:\r\n||--\r\n||--\r\n--||\r\n--||\r\nQuilt 2:\r\nerror\r\nQuilt 3:\r\n\\\\//\r\n+\\/+\r\n+/\\+\r\n//\\\\",
  "link": "https://www.spoj.com/problems/QUILT",
  "scraped_at": "2025-08-17 00:33:08"
}
{
  "problem_code": "problems",
  "title": "Slikar",
  "tags": [],
  "text": "EnglishVietnameseJosip is a strange painter. He wants to paint a picture consisting of N×N pixels, where N is a power of\r\ntwo (1, 2, 4, 8, 16 etc.). Each pixel will be either black or white. Josip already has an idea of how each\r\npixel will be coloured.This would be no problem if Josip's painting process wasn't strange. He uses the following recursive\r\nprocess:If the picture is a single pixel, he colours it the way he intended.Otherwise, split the square into four smaller squares and then:Select one of the four squares and colour it white.Select one of the three remaining squares and colour it black.Consider the two remaining squares as new paintings and use the same three-step process\r\non them.Soon he noticed that it was not possible to convert all his visions to paintings with this process. Your\r\ntask is to write a program that will paint a picture that differs as little as possible from the desired\r\npicture. The difference between two pictures is the number of pairs of pixels in corresponding\r\npositions that differ in colour.InputThe first line contains an integer N (1 ≤ N ≤ 512), the size of the picture Josip would like to paint. N\r\nwill be a power of 2.Each of the following N lines contains N digits 0 or 1, white and black squares in the target picture.OutputOn the first line, output the smallest possible difference that can be achieved.On the next N lines, output a picture that can be painted with Josip's process and achieves the smallest\r\ndifference. The picture should be in the same format as in the input.Note: The second part of the output (the picture) may not be unique. Any correct output will\r\nbe accepted.ExampleInput:8\r\n01010001\r\n10100011\r\n01010111\r\n10101111\r\n01010111\r\n10100011\r\n01010001\r\n10100000Output:16\r\n00000001\r\n00000011\r\n00000111\r\n00001111\r\n11110111\r\n11110011\r\n11110001\r\n11110000",
  "sample_input": "Input:8\r\n01010001\r\n10100011\r\n01010111\r\n10101111\r\n01010111\r\n10100011\r\n01010001\r\n10100000Output:16\r\n00000001\r\n00000011\r\n00000111\r\n00001111\r\n11110111\r\n11110011\r\n11110001\r\n11110000",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/SLIKAR",
  "scraped_at": "2025-08-17 00:33:06"
}
{
  "problem_code": "problems",
  "title": "Kawigi quote",
  "tags": [],
  "text": "Thursday 25/7/2013, a friend of mine (Goodname) posted in our facebook group (Virtual Contests) a link ofKawigi's topcoder profile.He was amazed by Kawigi's quote as he tested it inIdeoneto find it printing \"C++Sucks\". We all were amazed by this quote.But in a few minutes some other friend of mine (Mosa) commented on the post with thisIdeone. Wow! he got it, but the fact that he is kind of greedy, he didn't want to tell us the secret. Now we want to think like Mosa to be able to solve this problem.Given a string your task is to find the values of m[0] and m[1] so that when we run this code we get the given string.Code#include <stdio.h>\r\n    int primes [] = {2, 3, 5, 7, 11};\r\n    double m[2] = {8242465576917890.0, 494};\r\n    int main() {\r\n        m[1]--?m[0]/=primes[((int)m[1]+1)%5],main():printf((char*)m);\r\n    }\r\n    // this code prints the string \"123\".InputThe first line of the input file contains an integer T (T <= 50) which is the number of test cases to follow.Each test case will be on a single line consisting of at most 6 alphanumeric characters (A-Za-z0-9).OutputFor each test case, print the values of m[0] and m[1], separated by a space.It's guaranteed that the solution will always exist. If there are multiple solutions, print any.ExampleInput:4\r\n123\r\nabdou\r\nmcMosa\r\nkimo3Output:8242465576917890.0 494\r\n6966198460426549.0 487\r\n4484456159639948.0 483\r\n21357815651012032.0 488Special Thanks:-Mitch Schwartzfor discovering issues with the problem.-Mosa Osamafor writing the special judge of the problem, and I have to say Mosa's not greedy. ;)",
  "sample_input": "#include <stdio.h>\r\n    int primes [] = {2, 3, 5, 7, 11};\r\n    double m[2] = {8242465576917890.0, 494};\r\n    int main() {\r\n        m[1]--?m[0]/=primes[((int)m[1]+1)%5],main():printf((char*)m);\r\n    }\r\n    // this code prints the string \"123\".",
  "sample_output": "Input:4\r\n123\r\nabdou\r\nmcMosa\r\nkimo3Output:8242465576917890.0 494\r\n6966198460426549.0 487\r\n4484456159639948.0 483\r\n21357815651012032.0 488",
  "link": "https://www.spoj.com/problems/KIMO4",
  "scraped_at": "2025-08-17 00:33:40"
}
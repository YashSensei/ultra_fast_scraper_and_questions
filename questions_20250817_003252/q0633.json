{
  "problem_code": "problems",
  "title": "Cave Crisis",
  "tags": [],
  "text": "R2D2 was exploring a tunnel when a cave-in suddenly occurred. Oh no, is he trapped?Figure1: Overhead view of the cave crisis from the third example test case.From an overhead view, we can see all the obstacles (debris) on a two-dimensional Cartesian plane. The tunnel iswcm wide, bounded by the linesy=w/2andy= -w/2. R2D2 starts at(0, 0), and has a perfectly circular footprint of radiusr. The exit of the tunnel lies to the right of the linex= 1000. Between R2D2 and the exit lie a number of polygonal obstacles.Is it possible for R2D2 to navigate between the obstacles and make it to the exit?InputThe input file will contain multiple test cases. Each test case begins with a single line containing an even integerw(2 ≤w≤ 1000), the width of the tunnel, and an integerN(0 ≤N≤ 100), the number of obstacles. The nextNlines each contain the description of a single obstacle. Thei-th obstacle is a simple polygon, specified on a single line containing an integerni(3 ≤ni≤ 10), the number of vertices, followed bynipairs of integers,xijandyij(0 ≤xij≤ 1000and-w/2 ≤yij≤w/2forj= 1 ...ni), specifying the coordinates of the vertices in counter-clockwise order. Note that obstacles in the input may touch or even overlap. However, you are guaranteed that R2D2's initial location will not touch or overlap any obstacle. The vertices of each polygon are unique, no two non-consecutive edges of the polygon intersect (even at their endpoints), and each polygon is guaranteed to have nonzero area.The end-of-input is denoted by an invalid test case withw=N= 0and should not be processed.OutputFor each input test case, you must determine the maximum radiusr> 0that R2D2 could have and still be able to plan a path from his starting location(0, 0)to the tunnel exit without overlapping with any of the obstacles. You should print either this maximum radiusr(rounded to two decimal places) or the message \"impossible\" if no such radius exists.ExampleInput:6 2\r\n4 2 -1 4 -1 4 1 2 1\r\n3 3 0 6 -1 6 1\r\n8 2\r\n3 1 -1 4 -1 4 4\r\n3 3 -4 6 1 3 1\r\n10 7\r\n4 0 5 4 2 5 3 4 5\r\n3 4 -5 9 -5 9 0\r\n4 8 -5 11 -5 11 -2 8 -2\r\n3 8 3 16 1 11 5\r\n4 21 -5 23 -3 20 -2 15 -4\r\n3 22 3 26 -1 28 0\r\n3 24 0 29 4 25 3\r\n0 0Output:1.00\r\nimpossible\r\n1.33",
  "sample_input": "Input:6 2\r\n4 2 -1 4 -1 4 1 2 1\r\n3 3 0 6 -1 6 1\r\n8 2\r\n3 1 -1 4 -1 4 4\r\n3 3 -4 6 1 3 1\r\n10 7\r\n4 0 5 4 2 5 3 4 5\r\n3 4 -5 9 -5 9 0\r\n4 8 -5 11 -5 11 -2 8 -2\r\n3 8 3 16 1 11 5\r\n4 21 -5 23 -3 20 -2 15 -4\r\n3 22 3 26 -1 28 0\r\n3 24 0 29 4 25 3\r\n0 0Output:1.00\r\nimpossible\r\n1.33",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/PC8C",
  "scraped_at": "2025-08-17 00:33:06"
}
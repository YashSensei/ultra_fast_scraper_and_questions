{
  "problem_code": "problems",
  "title": "Cube Numbers",
  "tags": [],
  "text": "For any positive integer n, n can be represented as sum of other positive cube numbers (n = a13+ a23+ ... + am3). \r\nYour task is to print the smallest m, where m is number of cube numbers used to form n, such that n = a13+ a23+ ... + am3.\r\nFor example:n = 5, n = 13+ 13+ 13+ 13+ 13(m = 5)n = 8, n = 23(m = 1)n = 35, n = 23+ 33(m = 2)Note: My fastest time is 0.09s :).Edit: My fastest time is 0.05s now lolMy Java solution is also accepted.InputInput consists of several test cases separated by new lines. Each test case consists of a positive integer, denoting the number of n (1 ≤ n ≤ 105). Input is terminated by end of file (EOF).It is guaranteed that total test case per input file is less than 105.Note: For c++ users, you can use \twhile(scanf(\"%d\",&n)!=EOF); to read input until EOF.Warning: large Input/Output data, be careful with certain languages!.OutputFor each case, print \"Case #X: M\", where X (1 ≤ X ≤ 105) is the case number, and M is the minimum cube numbers used to form the integer n. There must be no trailing spaces at the end of printed lines, neither empty characters. Print a newline after each testcase.ExampleInput:1\r\n2\r\n5\r\n8\r\n35Output:Case #1: 1\r\nCase #2: 2\r\nCase #3: 5\r\nCase #4: 1\r\nCase #5: 2",
  "sample_input": "Input:1\r\n2\r\n5\r\n8\r\n35Output:Case #1: 1\r\nCase #2: 2\r\nCase #3: 5\r\nCase #4: 1\r\nCase #5: 2",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/CUBNUM",
  "scraped_at": "2025-08-17 00:34:31"
}
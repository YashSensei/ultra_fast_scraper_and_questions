{
  "problem_code": "problems",
  "title": "Moon Safari (medium)",
  "tags": [],
  "text": "Airis a music duo from France.\r\nYou will be told the secret of the critically acclaimed albumMoon Safari: mathematics.\r\nThe goal of your new task is to compute an ethereal sum.Three trips on the moon are provided,Moon(easy),Moon1(medium),Moon2(hard)\r\nwith different constraints.InputThe first line contains an integerT, the number of test cases.\r\nOn the nextTlines, you will be given three integersN,aandr.OutputOutputTlines, one for each test case, withSN,a,r= sum( aiir, foriin [1..N] ).\r\nSince the answer can get very big, output it modulo 109+7.ExampleInput:2\r\n3 4 5\r\n6 7 8Output:16068\r\n329990641ExplanationThe first case is, withN=3,a=4,r=5, about the sum :\r\n41× 15+\r\n42× 25+\r\n43× 35= 4 + 512 + 15552 =16068.\r\n\r\nThe second case is, withN=6,a=7,r=8, about the sum :\r\n71× 18+\r\n72× 28+\r\n73× 38+\r\n74× 48+\r\n75× 58+\r\n76× 68+\r\n77× 78= 204329992069 ≡329990641(mod 109+7).Constraints1 < T\r\n1 < r\r\n1 < N < 1091 < a < 109(T < 1000 and r < 18 ) or (T < 100 and r < 72) or (T < 10 and r < 256) or (T = 1 and r < 444)InformationThis trip can be done with a O(T×r2×log(N)) method and some interpreted languages.\r\nMy MOON1-Py3 code got AC in 9.00s for the 4 input files.\r\n(My MOON2 code got AC in 0.00s with C, 0.18s with Py2.7, 0.35 with Py3.2)\r\nGood luck and have fun ;-)",
  "sample_input": "Input:2\r\n3 4 5\r\n6 7 8Output:16068\r\n329990641",
  "sample_output": "1 < T\r\n1 < r\r\n1 < N < 1091 < a < 109(T < 1000 and r < 18 ) or (T < 100 and r < 72) or (T < 10 and r < 256) or (T = 1 and r < 444)",
  "link": "https://www.spoj.com/problems/MOON1",
  "scraped_at": "2025-08-17 00:34:30"
}
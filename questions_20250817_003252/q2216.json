{
  "problem_code": "problems",
  "title": "Factor y Hell",
  "tags": [],
  "text": "Factorial(N) in base B : The number of trailing zeros.Factorial(19) in base9×10^0=9 can be written 725735500635080000, ending with4zeros.\r\n\r\nFactorial(43) in base2×10^1=20 can be written 59HHHFECFCCEGH5G7I7A3A8G88F8CD8G000000000, ending with9zeros.\r\n\r\nWhat about working with serious constraints and tricky cases ?\r\nFactorial(N) will be a huge one, the base will be dummy too and have the special form :B×10^E.InputThe input begins with the number T of test cases in a single line.\r\nIn each of the next T lines there are three integers : N, B, E.OutputFor each test case, print the number of zeros at the end of Factorial(N) written in base B×10^E.ExampleInput:3\r\n19 9 0\r\n43 2 1\r\n10000 100 10Output:4\r\n9\r\n208Constraints1 <= T < 2000\r\n1 <= N < 10^1000\r\n1 <= B < 10^9\r\n0 <= E < 10^9InformationsDon't worry about the 'special' base 1 (B=1 and E=0), it is absent from input.\r\n\r\nAbout distribution : random input (N : log-uniform, B : uniform, E : uniform) in their range. Some tricky cases are added.\r\n\r\nIt is recommended to solveFACTBASEfirst, and find a way to solveFCTRLmuch faster than common solutions.\r\n Time limit is ×13.6 my best Python3 time, or ×1.33 my \"basic\" one.",
  "sample_input": "Input:3\r\n19 9 0\r\n43 2 1\r\n10000 100 10Output:4\r\n9\r\n208",
  "sample_output": "1 <= T < 2000\r\n1 <= N < 10^1000\r\n1 <= B < 10^9\r\n0 <= E < 10^9",
  "link": "https://www.spoj.com/problems/FCTRHELL",
  "scraped_at": "2025-08-17 00:33:57"
}
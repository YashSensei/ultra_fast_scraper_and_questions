{
  "problem_code": "problems",
  "title": "Assembly Line",
  "tags": [],
  "text": "The last worker in a production line at the factory of Automated Composed Machinery is worried. She knows that her job hangs in the balance unless her productivity increases. Her work consists of assembling a set of pieces in a given sequence, but the time spent on assembling piecesaandband thencmay not the same as that on assembling piecesbandc, and then assemblingawith the resulting component. Only two consecutive pieces may be assembled at a time, and once they are assembled they behave as another piece in terms of the time needed for further assembly.In order to aid her, you need to find the optimal way to assemble all components. The input to your program will be a set of symbols representing (types of) pieces, and a so-called assembly table representing the time it takes to assemble them, as well as the type of the resulting component. For instance, we may have two symbols {a,b}, and the following table:aba3-b5-bb6-a2-bThis means, for example, that two pieces of typeaandamay be assembled in 3 minutes, and the result is a component of typeb, in that the time required to assemble it again with another piece of, say, typeais 6 minutes, and so on. Note that the table is not symmetric, i.e. assemblingbandamay be more time-consuming thanaandb.For a sequence of components labelledaba, the two possible solutions are:(ab)a→ba→awith timetime(ab) +time(ba) = 5 + 6 = 11.a(ba) →aa→bwith timetime(ba) +time(aa) = 6 + 3 = 9.So the result for this case would be a piece of typebin 9 minutes (denoted 9-b).InputThe input consists of several test cases. Each test case begins with a line containing a natural numberk(1 ≤k≤ 26), followed by a line withksymbols (characters in [a-z]) separated by spaces. The followingklines contain the assembly table: thei-th line haskpairs of the formtime-result, wheretimeis an integer between 0 and 1 000 000 inclusive, andresulta symbol belonging to the preceding set. Thej-th pair in thei-th line represents the time to compose pieces of types represented by thei-th andj-th symbols, along with the type of the resulting piece. After the table, a line with an integernindicates the number of lines that follow, each line being a string of at most 200 symbols. Each of these lines is a sequence of components that need to be assembled together in the right order.The input will finish with a line containing0, which should not be processed.OutputFor each test case, printnlines, each with an integertimeand a symbolresultin the formattime-result. Each line represents the minimum time and the type of the resulting piece for the corresponding case in the input. In case of a tie among several possible results with the same minimum time, choose from among those the piece whose type letter appears first in the line that contained theksymbols at the beginning of the test case. (For example, if that line wasacband bothcandbcan be obtained with minimum cost 5, print 5-c).There must be an empty line between the output of different test cases.ExampleInput:2\r\na b\r\n3-b 5-b\r\n6-a 2-b\r\n2\r\naba\r\nbba\r\n2\r\nm e\r\n5-e 4-m\r\n3-e 4-m\r\n1\r\neme\r\n0Output:9-b\r\n8-a\r\n\r\n7-mProblem setter: Enrique Martín Martín",
  "sample_input": "Input:2\r\na b\r\n3-b 5-b\r\n6-a 2-b\r\n2\r\naba\r\nbba\r\n2\r\nm e\r\n5-e 4-m\r\n3-e 4-m\r\n1\r\neme\r\n0Output:9-b\r\n8-a\r\n\r\n7-m",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/ASSEMBLY",
  "scraped_at": "2025-08-17 00:34:01"
}
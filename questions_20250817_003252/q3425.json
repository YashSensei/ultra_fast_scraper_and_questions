{
  "problem_code": "problems",
  "title": "Farmers Cattle",
  "tags": [],
  "text": "Farmer John owns a single cow and he loves it a lot. The cow has a disease and is going to die. To survive, the cow needs medicine of a particular type each day. Let us say the cow needsmedicine[i] to survive the ithday. (medicine[i] will be terminated by -1, which is an unavailable medicine, and the cow has to invariably die that day).To help the cow, John has decided to buy pastures of some medicinal value. Farmer sees a two-dimensional grid of pastures, each cell having exactly one medicinal herb. Now he needs to buy a rectangular sub-region of the grid, whose area cannot exceedA(A> 1). With this region the farmer intends to feed his cow, as long as possible.InputThe input file consists of multiple test cases.The first line of each test case contains three integers,R,CandA.The second line consists of sequence of integers describingmedicine[i]. This list will be terminated by -1.The nextRlines containCintegers each, specifying the medicinal type of the herb in that cell. (1 ≤R,C≤ 200). All herbs are specified by non negative integers.Input terminates with a line containing three zeros and must not be processed.OutputFor each test case print a single line containing 5 integers:days r1 c1 r2 c2(1 ≤ r1 ≤ r2 ≤ R, 1 ≤ c1 ≤ c2 ≤ C)daysis the number of days the cow survives. We wish to maximise this.If there are more than one solutions print the one with minimalr1.If there are more than one solutions still, print the one with minimalc1.If there are more than one solutions still, print the one with minimalr2.If there are more than one solutions still, print the one with minimalc2.ExampleInput:3 4 6\r\n12 30 12 100 22 -1\r\n30 12 5 3\r\n12 30 100 5\r\n22 3 22 100\r\n3 4 6\r\n2 30 12 100 22 -1\r\n30 12 5 3\r\n12 30 100 5\r\n22 3 22 100\r\n3 4 6\r\n12 30 12 100 22 -1\r\n30 12 5 3\r\n12 30 100 5\r\n22 12 22 100\r\n0 0 0Output:4 1 1 2 3\r\n0 1 1 1 1\r\n5 1 2 3 3",
  "sample_input": "Input:3 4 6\r\n12 30 12 100 22 -1\r\n30 12 5 3\r\n12 30 100 5\r\n22 3 22 100\r\n3 4 6\r\n2 30 12 100 22 -1\r\n30 12 5 3\r\n12 30 100 5\r\n22 3 22 100\r\n3 4 6\r\n12 30 12 100 22 -1\r\n30 12 5 3\r\n12 30 100 5\r\n22 12 22 100\r\n0 0 0Output:4 1 1 2 3\r\n0 1 1 1 1\r\n5 1 2 3 3",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/FCATTLE",
  "scraped_at": "2025-08-17 00:34:19"
}
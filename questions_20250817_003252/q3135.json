{
  "problem_code": "problems",
  "title": "Hike on a Graph",
  "tags": [],
  "text": "\"Hike on a Graph\" is a game that is played on a board on\r\nwhich an undirected graph is drawn. The graph is complete and has\r\nall loops, i.e. for any two locations there is exactly one arrow\r\nbetween them. The arrows are coloured. There are three players, and\r\neach of them has a piece. At the beginning of the game, the three\r\npieces are in fixed locations on the graph. In turn, the players\r\nmay do a move. A move consists of moving one's own piece along an\r\narrow to a new location on the board. The following constraint is\r\nimposed on this: the piece may only be moved along arrows of the\r\nsame colour as the arrow between the two opponents' pieces.In the sixties (\"make love not war\") a one-person variant\r\nof the game emerged. In this variant one person moves all\r\nthe three pieces, not necessarily one after the other, but\r\nof course only one at a time. Goal of this game is to get\r\nall pieces onto the same location, using as few moves as\r\npossible. Find out the smallest number of moves that is\r\nnecessary to get all three pieces onto the same location,\r\nfor a given board layout and starting positions.InputThe input file contains several test cases. Each test\r\ncase starts with the numbern. Input is terminated\r\nbyn=0. Otherwise,1 ≤ n ≤ 50. Then\r\nfollow three integersp1, p2,\r\np3with1 ≤ pi≤ ndenoting the starting locations of the game pieces. The\r\ncolours of the arrows are given next as an×nmatrixmof whitespace-separated lower-case letters. The\r\nelementmijdenotes the colour of the\r\narrow between the locationsiandj. Since\r\nthe graph is undirected, you can assume the matrix to be\r\nsymmetrical.OutputFor each test case output on a single line the minimum number of moves\r\nrequired to get all three pieces onto the same location, or the word\r\n\"impossible\" if that is not possible for the given board and starting\r\nlocations.ExampleInput:3 1 2 3\r\nr b r\r\nb b b\r\nr b r\r\n2 1 2 2\r\ny g\r\ng y\r\n0Output:2\r\nimpossible",
  "sample_input": "Input:3 1 2 3\r\nr b r\r\nb b b\r\nr b r\r\n2 1 2 2\r\ny g\r\ng y\r\n0Output:2\r\nimpossible",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/HIKE",
  "scraped_at": "2025-08-17 00:34:14"
}
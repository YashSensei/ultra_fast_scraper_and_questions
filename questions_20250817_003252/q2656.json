{
  "problem_code": "problems",
  "title": "Esferas",
  "tags": [],
  "text": "The classicTwo Glass Ballsbrain-teaser is often posed as: \"Given two identical glass spheres, you would like to determine the lowest floor in a 100-story building from which they will break when dropped. Assume the spheres are undamaged when dropped below this point. What is the strategy that will minimize the worst-case scenario for number of drops?\" Suppose that we had only one ball. We'd have to drop from each floor from 1 to 100 in sequence, requiring 100 drops in the worst case. Now consider the case where we have two balls. Suppose we drop the first ball from floorn. If it breaks we're in the case where we have one ball remaining and we need to drop from floors 1 ton-1 in sequence, yieldingndrops in the worst case (the first ball is dropped once, the second at mostn-1 times). However, if it does not break when dropped from floorn, we have reduced the problem to dropping from floorsn+1 to 100. In either case we must keep in mind that we've already used one drop. So the minimum number of drops, in the worst case, is the minimum over alln. You will write a program to determine the minimum number of drops required, in the worst case, givenBballs and anM-story building.InputThe first line of input contains a single integerP, (1 ≤P≤ 1000), which is the number of data sets that follow. Each data set consists of a single line containing three (3) decimal integer values: the problem number, followed by a space, followed by the number of ballsB, (1 ≤B≤ 50), followed by a space and the number of floors in the buildingM, (1 ≤M≤ 1000).OutputFor each data set, generate one line of output with the following values: The data set number as a decimal integer, a space, and the minimum number of drops needed for the corresponding values ofBandM.ExampleInput:4\r\n1 2 10\r\n2 2 100\r\n3 2 300\r\n4 25 900Output:1 4\r\n2 14\r\n3 24\r\n4 10",
  "sample_input": "Input:4\r\n1 2 10\r\n2 2 100\r\n3 2 300\r\n4 25 900Output:1 4\r\n2 14\r\n3 24\r\n4 10",
  "sample_output": "Not found",
  "link": "https://www.spoj.com/problems/PRUBALL",
  "scraped_at": "2025-08-17 00:34:06"
}